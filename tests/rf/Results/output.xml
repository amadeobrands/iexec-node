<?xml version="1.0" encoding="UTF-8"?>
<robot generated="20170903 16:43:57.655" generator="Robot 3.0.2 (Python 2.7.6 on linux2)">
<suite source="/home/vagrant/iexecdev/iexec-node/tests/rf/Tests" id="s1" name="Tests">
<suite source="/home/vagrant/iexecdev/iexec-node/tests/rf/Tests/interfaceSuite.robot" id="s1-s1" name="interfaceSuite">
<test id="s1-s1-t1" name="Test Interface Web">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>TODO</arg>
</arguments>
<msg timestamp="20170903 16:43:57.697" level="INFO">TODO</msg>
<status status="PASS" endtime="20170903 16:43:57.697" starttime="20170903 16:43:57.697"></status>
</kw>
<doc>We can use via http://robotframework.org/#libraries External Selenium2Library : http://robotframework.org/Selenium2Library/Selenium2Library.html</doc>
<tags>
<tag>Web Tests</tag>
</tags>
<status status="PASS" endtime="20170903 16:43:57.698" critical="yes" starttime="20170903 16:43:57.695"></status>
</test>
<doc>All user interfaces tests</doc>
<status status="PASS" endtime="20170903 16:43:57.699" starttime="20170903 16:43:57.689"></status>
</suite>
<suite source="/home/vagrant/iexecdev/iexec-node/tests/rf/Tests/truffleTestsOnLocalGeth.robot" id="s1-s2" name="truffleTestsOnLocalGeth">
<kw type="setup" name="Start Geth42">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd ~/gethUtils &amp;&amp; ./resetANewChain42AndMine.sh</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${geth_result}</var>
</assign>
<msg timestamp="20170903 16:43:57.777" level="INFO">Starting process:
cd ~/gethUtils &amp;&amp; ./resetANewChain42AndMine.sh</msg>
<msg timestamp="20170903 16:43:57.783" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170903 16:56:54.554" level="INFO">Process completed.</msg>
<msg timestamp="20170903 16:56:54.555" level="INFO">${geth_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170903 16:56:54.555" starttime="20170903 16:43:57.777"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${geth_result.stderr}</arg>
</arguments>
<msg timestamp="20170903 16:56:54.556" level="INFO">WARN [09-03|16:44:04] No etherbase set and no accounts found as default 
INFO [09-03|16:44:04] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
INFO [09-03|16:44:05] Writing custom genesis block 
INFO [09-03|16:44:05] Successfully wrote genesis state         database=chaindata                                             hash=afad92…166fe3
INFO [09-03|16:44:05] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/lightchaindata cache=16 handles=16
INFO [09-03|16:44:05] Writing custom genesis block 
INFO [09-03|16:44:05] Successfully wrote genesis state         database=lightchaindata                                             hash=afad92…166fe3
WARN [09-03|16:44:05] No etherbase set and no accounts found as default 
INFO [09-03|16:44:15] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
INFO [09-03|16:44:15] Successfully wrote genesis state         database=chaindata                                             hash=afad92…166fe3
INFO [09-03|16:44:15] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/lightchaindata cache=16 handles=16
INFO [09-03|16:44:15] Successfully wrote genesis state         database=lightchaindata                                             hash=afad92…166fe3
INFO [09-03|16:44:20] Generating DAG in progress               epoch=1 percentage=0 elapsed=3.020s
INFO [09-03|16:44:23] Generating DAG in progress               epoch=1 percentage=1 elapsed=6.466s
INFO [09-03|16:44:26] Generating DAG in progress               epoch=1 percentage=2 elapsed=9.449s
INFO [09-03|16:44:29] Generating DAG in progress               epoch=1 percentage=3 elapsed=12.503s
INFO [09-03|16:44:32] Generating DAG in progress               epoch=1 percentage=4 elapsed=15.539s
INFO [09-03|16:44:35] Generating DAG in progress               epoch=1 percentage=5 elapsed=18.536s
INFO [09-03|16:44:39] Generating DAG in progress               epoch=1 percentage=6 elapsed=21.808s
INFO [09-03|16:44:41] Generating DAG in progress               epoch=1 percentage=7 elapsed=24.707s
INFO [09-03|16:44:45] Generating DAG in progress               epoch=1 percentage=8 elapsed=27.923s
INFO [09-03|16:44:48] Generating DAG in progress               epoch=1 percentage=9 elapsed=30.871s
INFO [09-03|16:44:52] Generating DAG in progress               epoch=1 percentage=10 elapsed=34.930s
INFO [09-03|16:44:55] Generating DAG in progress               epoch=1 percentage=11 elapsed=37.883s
INFO [09-03|16:44:58] Generating DAG in progress               epoch=1 percentage=12 elapsed=40.995s
INFO [09-03|16:45:01] Generating DAG in progress               epoch=1 percentage=13 elapsed=44.102s
INFO [09-03|16:45:04] Generating DAG in progress               epoch=1 percentage=14 elapsed=46.857s
INFO [09-03|16:45:06] Generating DAG in progress               epoch=1 percentage=15 elapsed=49.678s
INFO [09-03|16:45:09] Generating DAG in progress               epoch=1 percentage=16 elapsed=52.654s
INFO [09-03|16:45:12] Generating DAG in progress               epoch=1 percentage=17 elapsed=55.716s
INFO [09-03|16:45:15] Generating DAG in progress               epoch=1 percentage=18 elapsed=58.601s
INFO [09-03|16:45:18] Generating DAG in progress               epoch=1 percentage=19 elapsed=1m1.497s
INFO [09-03|16:45:21] Generating DAG in progress               epoch=1 percentage=20 elapsed=1m4.519s
INFO [09-03|16:45:24] Generating DAG in progress               epoch=1 percentage=21 elapsed=1m7.330s
INFO [09-03|16:45:27] Generating DAG in progress               epoch=1 percentage=22 elapsed=1m10.179s
INFO [09-03|16:45:30] Generating DAG in progress               epoch=1 percentage=23 elapsed=1m13.014s
INFO [09-03|16:45:34] Generating DAG in progress               epoch=1 percentage=24 elapsed=1m16.774s
INFO [09-03|16:45:37] Generating DAG in progress               epoch=1 percentage=25 elapsed=1m19.780s
INFO [09-03|16:45:39] Generating DAG in progress               epoch=1 percentage=26 elapsed=1m22.651s
INFO [09-03|16:45:42] Generating DAG in progress               epoch=1 percentage=27 elapsed=1m25.607s
INFO [09-03|16:45:45] Generating DAG in progress               epoch=1 percentage=28 elapsed=1m28.432s
INFO [09-03|16:45:48] Generating DAG in progress               epoch=1 percentage=29 elapsed=1m31.494s
INFO [09-03|16:45:51] Generating DAG in progress               epoch=1 percentage=30 elapsed=1m34.625s
INFO [09-03|16:45:54] Generating DAG in progress               epoch=1 percentage=31 elapsed=1m37.435s
INFO [09-03|16:45:57] Generating DAG in progress               epoch=1 percentage=32 elapsed=1m40.396s
INFO [09-03|16:46:00] Generating DAG in progress               epoch=1 percentage=33 elapsed=1m43.288s
INFO [09-03|16:46:03] Generating DAG in progress               epoch=1 percentage=34 elapsed=1m46.229s
INFO [09-03|16:46:06] Generating DAG in progress               epoch=1 percentage=35 elapsed=1m49.055s
INFO [09-03|16:46:09] Generating DAG in progress               epoch=1 percentage=36 elapsed=1m52.186s
INFO [09-03|16:46:12] Generating DAG in progress               epoch=1 percentage=37 elapsed=1m55.365s
INFO [09-03|16:46:15] Generating DAG in progress               epoch=1 percentage=38 elapsed=1m58.249s
INFO [09-03|16:46:18] Generating DAG in progress               epoch=1 percentage=39 elapsed=2m1.324s
INFO [09-03|16:46:21] Generating DAG in progress               epoch=1 percentage=40 elapsed=2m4.172s
INFO [09-03|16:46:24] Generating DAG in progress               epoch=1 percentage=41 elapsed=2m7.216s
INFO [09-03|16:46:27] Generating DAG in progress               epoch=1 percentage=42 elapsed=2m10.015s
INFO [09-03|16:46:30] Generating DAG in progress               epoch=1 percentage=43 elapsed=2m12.925s
INFO [09-03|16:46:32] Generating DAG in progress               epoch=1 percentage=44 elapsed=2m15.722s
INFO [09-03|16:46:35] Generating DAG in progress               epoch=1 percentage=45 elapsed=2m18.496s
INFO [09-03|16:46:38] Generating DAG in progress               epoch=1 percentage=46 elapsed=2m21.299s
INFO [09-03|16:46:41] Generating DAG in progress               epoch=1 percentage=47 elapsed=2m24.183s
INFO [09-03|16:46:44] Generating DAG in progress               epoch=1 percentage=48 elapsed=2m27.021s
INFO [09-03|16:46:47] Generating DAG in progress               epoch=1 percentage=49 elapsed=2m29.836s
INFO [09-03|16:46:49] Generating DAG in progress               epoch=1 percentage=50 elapsed=2m32.596s
INFO [09-03|16:46:53] Generating DAG in progress               epoch=1 percentage=51 elapsed=2m36.650s
INFO [09-03|16:46:56] Generating DAG in progress               epoch=1 percentage=52 elapsed=2m39.498s
INFO [09-03|16:46:59] Generating DAG in progress               epoch=1 percentage=53 elapsed=2m42.565s
INFO [09-03|16:47:02] Generating DAG in progress               epoch=1 percentage=54 elapsed=2m45.340s
INFO [09-03|16:47:05] Generating DAG in progress               epoch=1 percentage=55 elapsed=2m48.196s
INFO [09-03|16:47:08] Generating DAG in progress               epoch=1 percentage=56 elapsed=2m51.011s
INFO [09-03|16:47:11] Generating DAG in progress               epoch=1 percentage=57 elapsed=2m54.003s
INFO [09-03|16:47:14] Generating DAG in progress               epoch=1 percentage=58 elapsed=2m56.881s
INFO [09-03|16:47:16] Generating DAG in progress               epoch=1 percentage=59 elapsed=2m59.660s
INFO [09-03|16:47:19] Generating DAG in progress               epoch=1 percentage=60 elapsed=3m2.463s
INFO [09-03|16:47:22] Generating DAG in progress               epoch=1 percentage=61 elapsed=3m5.381s
INFO [09-03|16:47:25] Generating DAG in progress               epoch=1 percentage=62 elapsed=3m8.235s
INFO [09-03|16:47:29] Generating DAG in progress               epoch=1 percentage=63 elapsed=3m11.998s
INFO [09-03|16:47:32] Generating DAG in progress               epoch=1 percentage=64 elapsed=3m14.803s
INFO [09-03|16:47:35] Generating DAG in progress               epoch=1 percentage=65 elapsed=3m17.867s
INFO [09-03|16:47:37] Generating DAG in progress               epoch=1 percentage=66 elapsed=3m20.648s
INFO [09-03|16:47:40] Generating DAG in progress               epoch=1 percentage=67 elapsed=3m23.379s
INFO [09-03|16:47:43] Generating DAG in progress               epoch=1 percentage=68 elapsed=3m26.133s
INFO [09-03|16:47:46] Generating DAG in progress               epoch=1 percentage=69 elapsed=3m28.930s
INFO [09-03|16:47:48] Generating DAG in progress               epoch=1 percentage=70 elapsed=3m31.739s
INFO [09-03|16:47:51] Generating DAG in progress               epoch=1 percentage=71 elapsed=3m34.523s
INFO [09-03|16:47:54] Generating DAG in progress               epoch=1 percentage=72 elapsed=3m37.283s
INFO [09-03|16:47:57] Generating DAG in progress               epoch=1 percentage=73 elapsed=3m40.017s
INFO [09-03|16:48:00] Generating DAG in progress               epoch=1 percentage=74 elapsed=3m42.779s
INFO [09-03|16:48:02] Generating DAG in progress               epoch=1 percentage=75 elapsed=3m45.563s
INFO [09-03|16:48:06] Generating DAG in progress               epoch=1 percentage=76 elapsed=3m49.035s
INFO [09-03|16:48:09] Generating DAG in progress               epoch=1 percentage=77 elapsed=3m52.057s
INFO [09-03|16:48:12] Generating DAG in progress               epoch=1 percentage=78 elapsed=3m54.913s
INFO [09-03|16:48:15] Generating DAG in progress               epoch=1 percentage=79 elapsed=3m57.951s
INFO [09-03|16:48:17] Generating DAG in progress               epoch=1 percentage=80 elapsed=4m0.713s
INFO [09-03|16:48:20] Generating DAG in progress               epoch=1 percentage=81 elapsed=4m3.712s
INFO [09-03|16:48:23] Generating DAG in progress               epoch=1 percentage=82 elapsed=4m6.566s
INFO [09-03|16:48:26] Generating DAG in progress               epoch=1 percentage=83 elapsed=4m9.327s
INFO [09-03|16:48:29] Generating DAG in progress               epoch=1 percentage=84 elapsed=4m12.163s
INFO [09-03|16:48:32] Generating DAG in progress               epoch=1 percentage=85 elapsed=4m15.110s
INFO [09-03|16:48:35] Generating DAG in progress               epoch=1 percentage=86 elapsed=4m18.105s
INFO [09-03|16:48:38] Generating DAG in progress               epoch=1 percentage=87 elapsed=4m21.103s
INFO [09-03|16:48:41] Generating DAG in progress               epoch=1 percentage=88 elapsed=4m23.980s
INFO [09-03|16:48:44] Generating DAG in progress               epoch=1 percentage=89 elapsed=4m26.947s
INFO [09-03|16:48:47] Generating DAG in progress               epoch=1 percentage=90 elapsed=4m29.950s
INFO [09-03|16:48:51] Generating DAG in progress               epoch=1 percentage=91 elapsed=4m33.951s
INFO [09-03|16:48:54] Generating DAG in progress               epoch=1 percentage=92 elapsed=4m37.335s
INFO [09-03|16:48:57] Generating DAG in progress               epoch=1 percentage=93 elapsed=4m40.450s
INFO [09-03|16:49:00] Generating DAG in progress               epoch=1 percentage=94 elapsed=4m43.688s
INFO [09-03|16:49:03] Generating DAG in progress               epoch=1 percentage=95 elapsed=4m46.603s
INFO [09-03|16:49:06] Generating DAG in progress               epoch=1 percentage=96 elapsed=4m49.590s
INFO [09-03|16:49:10] Generating DAG in progress               epoch=1 percentage=97 elapsed=4m52.797s
INFO [09-03|16:49:13] Generating DAG in progress               epoch=1 percentage=98 elapsed=4m55.850s
INFO [09-03|16:49:17] Generating DAG in progress               epoch=1 percentage=99 elapsed=4m59.844s
INFO [09-03|16:49:17] Generated ethash verification cache      epoch=1 elapsed=4m59.848s
INFO [09-03|16:49:17] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
INFO [09-03|16:49:17] Successfully wrote genesis state         database=chaindata                                             hash=afad92…166fe3
INFO [09-03|16:49:17] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/lightchaindata cache=16 handles=16
INFO [09-03|16:49:17] Successfully wrote genesis state         database=lightchaindata                                             hash=afad92…166fe3
INFO [09-03|16:49:22] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-03|16:49:33] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-03|16:49:43] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-03|16:49:54] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-03|16:50:05] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-03|16:50:15] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-03|16:50:26] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-03|16:50:36] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-03|16:50:47] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-03|16:50:57] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-03|16:51:08] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-03|16:51:18] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-03|16:51:28] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-03|16:51:39] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-03|16:51:49] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-03|16:52:00] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-03|16:52:11] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-03|16:52:21] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-03|16:52:32] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-03|16:52:43] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-03|16:52:53] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-03|16:53:04] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-03|16:53:14] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-03|16:53:25] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-03|16:53:35] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-03|16:53:46] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-03|16:53:56] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-03|16:54:07] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-03|16:54:17] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-03|16:54:27] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-03|16:54:38] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-03|16:54:48] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-03|16:54:59] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-03|16:55:10] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-03|16:55:20] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-03|16:55:31] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-03|16:55:41] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-03|16:55:52] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-03|16:56:02] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-03|16:56:13] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-03|16:56:23] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-03|16:56:24] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable</msg>
<status status="PASS" endtime="20170903 16:56:54.557" starttime="20170903 16:56:54.555"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${geth_result.stdout}</arg>
</arguments>
<msg timestamp="20170903 16:56:54.559" level="INFO">kill existing geth process
clear ~/iexecdev/.ethereum/net42/ content
clear ~/.ethash content
creating 10 accounts
create account 1
Address: {7f49e659b57f7ee2fffee1fd21f360426b604699}
create account 2
Address: {23f649bdbee33b6608409cfd0ddfa5a5ce8694f7}
create account 3
Address: {5e5dbe9f8ad9f57b6d06f6e76dcfdb216ca92363}
create account 4
Address: {729a07c002bbb710fd3498e3d765ba1502c28bdd}
create account 5
Address: {ae3e2705067406401340b29a1392deef86eb4203}
create account 6
Address: {eec5e77b964110b67d6c8b6d0615ca71815679d8}
create account 7
Address: {23bd482abfa1f07eb2924e1f18e0fe6778ebf0f0}
create account 8
Address: {87237396c4ae31a5a21287e77a2b0afea55cdbd0}
create account 9
Address: {87b628e75181f93c227f385326fd8a616ba9834b}
create account 10
Address: {bc0c03cb79e926098827f40a290ee9a4e52ea5ac}
create DAG epoch 1
clear ~/.ethash content
making DAG, this could take awhile...
start a coinbase miner in background
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
5 blocks mined in geth 42 !
unlocked 9 accounts
Fatal: Failed to open database: resource temporarily unavailable
unlock account 1
true
unlock account 2
true
unlock account 3
true
unlock account 4
true
unlock account 5
true
unlock account 6
true
unlock account 7
true
unlock account 8
true
unlock account 9
true
local geth 42 ready to go for testing</msg>
<status status="PASS" endtime="20170903 16:56:54.559" starttime="20170903 16:56:54.558"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${geth_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170903 16:56:54.560" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170903 16:56:54.560" starttime="20170903 16:56:54.559"></status>
</kw>
<status status="PASS" endtime="20170903 16:56:54.560" starttime="20170903 16:43:57.773"></status>
</kw>
<test id="s1-s2-t1" name="Test Iexec Oracle Truffle Tests On Local Geth">
<kw name="Iexec Oracle Truffle Tests" library="ETHTruffleTests">
<tags>
<tag>Smart contract Tests</tag>
</tags>
<doc>call truffle test and show the result here.</doc>
<kw name="Remove Directory" library="OperatingSystem">
<doc>Removes the directory pointed to by the given ``path``.</doc>
<arguments>
<arg>iexec-oracle</arg>
<arg>recursive=true</arg>
</arguments>
<msg timestamp="20170903 16:56:54.593" html="yes" level="INFO">Directory '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/iexec-oracle"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/iexec-oracle&lt;/a&gt;' does not exist.</msg>
<status status="PASS" endtime="20170903 16:56:54.594" starttime="20170903 16:56:54.570"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>git clone ${IEXEC_ORACLE_GIT_BRANCH}</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${git_result}</var>
</assign>
<msg timestamp="20170903 16:56:54.594" level="INFO">Starting process:
git clone https://github.com/iExecBlockchainComputing/iexec-oracle.git</msg>
<msg timestamp="20170903 16:56:54.602" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170903 16:56:57.377" level="INFO">Process completed.</msg>
<msg timestamp="20170903 16:56:57.378" level="INFO">${git_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170903 16:56:57.378" starttime="20170903 16:56:54.594"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${git_result.stderr}</arg>
</arguments>
<msg timestamp="20170903 16:56:57.379" level="INFO">Cloning into 'iexec-oracle'...</msg>
<status status="PASS" endtime="20170903 16:56:57.379" starttime="20170903 16:56:57.378"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${git_result.stdout}</arg>
</arguments>
<msg timestamp="20170903 16:56:57.387" level="INFO"></msg>
<status status="PASS" endtime="20170903 16:56:57.387" starttime="20170903 16:56:57.380"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${git_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170903 16:56:57.392" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170903 16:56:57.392" starttime="20170903 16:56:57.388"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd iexec-oracle/API &amp;&amp; npm install</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${npm_result}</var>
</assign>
<msg timestamp="20170903 16:56:57.393" level="INFO">Starting process:
cd iexec-oracle/API &amp;&amp; npm install</msg>
<msg timestamp="20170903 16:56:57.406" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170903 16:57:18.486" level="INFO">Process completed.</msg>
<msg timestamp="20170903 16:57:18.487" level="INFO">${npm_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170903 16:57:18.487" starttime="20170903 16:56:57.393"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${npm_result.stderr}</arg>
</arguments>
<msg timestamp="20170903 16:57:18.487" level="INFO">npm WARN xtremwebinterface@1.0.0 No description
npm WARN xtremwebinterface@1.0.0 No repository field.</msg>
<status status="PASS" endtime="20170903 16:57:18.488" starttime="20170903 16:57:18.487"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${npm_result.stdout}</arg>
</arguments>
<msg timestamp="20170903 16:57:18.489" level="INFO">xtremwebinterface@1.0.0 /home/vagrant/iexecdev/iexec-node/tests/rf/iexec-oracle/API
├── bluebird@3.5.0 
├── lodash@4.17.4 
├─┬ truffle@3.4.7 
│ ├─┬ mocha@3.5.0 
│ │ ├── browser-stdout@1.3.0 
│ │ ├─┬ commander@2.9.0 
│ │ │ └── graceful-readlink@1.0.1 
│ │ ├─┬ debug@2.6.8 
│ │ │ └── ms@2.0.0 
│ │ ├── diff@3.2.0 
│ │ ├── escape-string-regexp@1.0.5 
│ │ ├─┬ glob@7.1.1 
│ │ │ ├── fs.realpath@1.0.0 
│ │ │ ├─┬ inflight@1.0.6 
│ │ │ │ └── wrappy@1.0.2 
│ │ │ ├── inherits@2.0.3 
│ │ │ ├─┬ minimatch@3.0.4 
│ │ │ │ └─┬ brace-expansion@1.1.8 
│ │ │ │   ├── balanced-match@1.0.0 
│ │ │ │   └── concat-map@0.0.1 
│ │ │ ├── once@1.4.0 
│ │ │ └── path-is-absolute@1.0.1 
│ │ ├── growl@1.9.2 
│ │ ├── json3@3.3.2 
│ │ ├─┬ lodash.create@3.1.1 
│ │ │ ├─┬ lodash._baseassign@3.2.0 
│ │ │ │ ├── lodash._basecopy@3.0.1 
│ │ │ │ └─┬ lodash.keys@3.1.2 
│ │ │ │   ├── lodash._getnative@3.9.1 
│ │ │ │   ├── lodash.isarguments@3.1.0 
│ │ │ │   └── lodash.isarray@3.0.4 
│ │ │ ├── lodash._basecreate@3.0.3 
│ │ │ └── lodash._isiterateecall@3.0.9 
│ │ ├─┬ mkdirp@0.5.1 
│ │ │ └── minimist@0.0.8 
│ │ └─┬ supports-color@3.1.2 
│ │   └── has-flag@1.0.0 
│ ├── original-require@1.0.1 
│ └─┬ solc@0.4.13 
│   ├─┬ fs-extra@0.30.0 
│   │ ├── graceful-fs@4.1.11 
│   │ ├── jsonfile@2.4.0 
│   │ ├── klaw@1.3.1 
│   │ └── rimraf@2.6.1 
│   ├── memorystream@0.3.1 
│   ├── require-from-string@1.2.1 
│   ├── semver@5.4.1 
│   └─┬ yargs@4.8.1 
│     ├─┬ cliui@3.2.0 
│     │ ├─┬ strip-ansi@3.0.1 
│     │ │ └── ansi-regex@2.1.1 
│     │ └── wrap-ansi@2.1.0 
│     ├── decamelize@1.2.0 
│     ├── get-caller-file@1.0.2 
│     ├── lodash.assign@4.2.0 
│     ├─┬ os-locale@1.4.0 
│     │ └─┬ lcid@1.0.0 
│     │   └── invert-kv@1.0.0 
│     ├─┬ read-pkg-up@1.0.1 
│     │ ├─┬ find-up@1.1.2 
│     │ │ ├── path-exists@2.1.0 
│     │ │ └─┬ pinkie-promise@2.0.1 
│     │ │   └── pinkie@2.0.4 
│     │ └─┬ read-pkg@1.1.0 
│     │   ├─┬ load-json-file@1.1.0 
│     │   │ ├─┬ parse-json@2.2.0 
│     │   │ │ └─┬ error-ex@1.3.1 
│     │   │ │   └── is-arrayish@0.2.1 
│     │   │ ├── pify@2.3.0 
│     │   │ └─┬ strip-bom@2.0.0 
│     │   │   └── is-utf8@0.2.1 
│     │   ├─┬ normalize-package-data@2.4.0 
│     │   │ ├── hosted-git-info@2.5.0 
│     │   │ ├─┬ is-builtin-module@1.0.0 
│     │   │ │ └── builtin-modules@1.1.1 
│     │   │ └─┬ validate-npm-package-license@3.0.1 
│     │   │   ├─┬ spdx-correct@1.0.2 
│     │   │   │ └── spdx-license-ids@1.2.2 
│     │   │   └── spdx-expression-parse@1.0.4 
│     │   └── path-type@1.1.0 
│     ├── require-directory@2.1.1 
│     ├── require-main-filename@1.0.1 
│     ├── set-blocking@2.0.0 
│     ├─┬ string-width@1.0.2 
│     │ ├── code-point-at@1.1.0 
│     │ └─┬ is-fullwidth-code-point@1.0.0 
│     │   └── number-is-nan@1.0.1 
│     ├── which-module@1.0.0 
│     ├── window-size@0.2.0 
│     ├── y18n@3.2.1 
│     └─┬ yargs-parser@2.4.1 
│       └── camelcase@3.0.0 
├─┬ truffle-contract@2.0.0 
│ ├─┬ ethjs-abi@0.1.8 
│ │ ├── bn.js@4.11.6 
│ │ ├── js-sha3@0.5.5 
│ │ └─┬ number-to-bn@1.7.0 
│ │   └─┬ strip-hex-prefix@1.0.0 
│ │     └── is-hex-prefixed@1.0.0 
│ ├── truffle-blockchain-utils@0.0.1 
│ └─┬ truffle-contract-schema@0.0.5 
│   └── crypto-js@3.1.9-1 
└─┬ web3@0.18.4 
  ├── bignumber.js@2.0.7  (git+https://github.com/debris/bignumber.js.git#94d7146671b9719e00a09c29b01a691bc85048c2)
  ├── crypto-js@3.1.8 
  ├── utf8@2.1.2 
  ├── xhr2@0.1.4 
  └── xmlhttprequest@1.8.0 
</msg>
<status status="PASS" endtime="20170903 16:57:18.489" starttime="20170903 16:57:18.488"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${npm_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170903 16:57:18.489" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170903 16:57:18.490" starttime="20170903 16:57:18.489"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd iexec-oracle/API &amp;&amp; ./node_modules/.bin/truffle test test/iexecoracleapi.js</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${truffletest_result}</var>
</assign>
<msg timestamp="20170903 16:57:18.490" level="INFO">Starting process:
cd iexec-oracle/API &amp;&amp; ./node_modules/.bin/truffle test test/iexecoracleapi.js</msg>
<msg timestamp="20170903 16:57:18.492" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170903 17:00:30.091" level="INFO">Process completed.</msg>
<msg timestamp="20170903 17:00:30.092" level="INFO">${truffletest_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170903 17:00:30.092" starttime="20170903 16:57:18.490"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stderr}</arg>
</arguments>
<msg timestamp="20170903 17:00:30.093" level="INFO"></msg>
<status status="PASS" endtime="20170903 17:00:30.093" starttime="20170903 17:00:30.093"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
</arguments>
<msg timestamp="20170903 17:00:30.094" level="INFO">Compiling ./contracts/IexecOracle.sol...
Compiling ./contracts/IexecOracleAPI.sol...
Compiling ./contracts/LS.sol...
Compiling ./contracts/Migrations.sol...
Compiling ./contracts/SafeMath.sol...

Compilation warnings encountered:

/home/vagrant/iexecdev/iexec-node/tests/rf/iexec-oracle/API/contracts/IexecOracle.sol:15:30: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (msg.sender != a) throw;
                             ^---^
,/home/vagrant/iexecdev/iexec-node/tests/rf/iexec-oracle/API/contracts/IexecOracle.sol:24:7: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
      string name;
      ^---------^
,/home/vagrant/iexecdev/iexec-node/tests/rf/iexec-oracle/API/contracts/IexecOracle.sol:27:7: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
      string stdout;
      ^-----------^
,/home/vagrant/iexecdev/iexec-node/tests/rf/iexec-oracle/API/contracts/IexecOracle.sol:28:7: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
      string stderr;
      ^-----------^
,/home/vagrant/iexecdev/iexec-node/tests/rf/iexec-oracle/API/contracts/IexecOracle.sol:122:21: Warning: Unused local variable
    function submit(string appName, string param) {// param = commandline
                    ^------------^
,/home/vagrant/iexecdev/iexec-node/tests/rf/iexec-oracle/API/contracts/IexecOracle.sol:126:28: Warning: Unused local variable
    function submitAndWait(string appName, string param, string pattern) {
                           ^------------^
,/home/vagrant/iexecdev/iexec-node/tests/rf/iexec-oracle/API/contracts/IexecOracle.sol:126:44: Warning: Unused local variable
    function submitAndWait(string appName, string param, string pattern) {
                                           ^----------^

IexecOracle deployed at address :0x9b0321614f73e7a9e41c2d9e370e1aa6769d1f3d
LS deployed at address :0x7e4bf85d03b7b85b3bd20056e1589a1a6da0bb37

[0m[0m
[0m  Contract: IexecOracleAPI[0m
refill 30 ether to 0x5e5dbe9f8ad9f57b6d06f6e76dcfdb216ca92363
refill 30 ether to 0x23f649bdbee33b6608409cfd0ddfa5a5ce8694f7
Geth mode : run out of gas. throw expected ?
  [32m  ✓[0m[90m Test call registerSmartContractAndCreator with tx.origin = msg.sender[0m[31m (12584ms)[0m
[0m    Test IexecOracle on IexecOracle well initialized[0m
    [32m  ✓[0m[90m Test Launch Event when call iexecRegister[0m[31m (9813ms)[0m
[0m    Test Register function call then simulate bridge response[0m
Geth mode : run out of gas. throw expected ?
    [32m  ✓[0m[90m Only bridge can call registerCallback fonction[0m[31m (2128ms)[0m
    [32m  ✓[0m[90m Simulate bridge response OK and test event Register[0m[31m (3385ms)[0m
    [32m  ✓[0m[90m Simulate bridge response KO and test event Register[0m[31m (3146ms)[0m
    [32m  ✓[0m[90m Simulate bridge registerCallback and test event Register, then next registerCallback call do not generate event Register[0m[31m (5311ms)[0m
[0m    Test IexecOracleAPI on IexecOracle well initialized[0m
    [32m  ✓[0m[90m Test creator and creator of IexecOracleAPI are set correctly in IexecOracle[0m[33m (39ms)[0m
    [32m  ✓[0m[90m Test provider count for the creator  increment of by 1 in IexecOracle[0m
Geth mode : run out of gas. throw expected ?
    [32m  ✓[0m[90m Cannot change creator in aIexecOracleInstance after first call by IexecOracleAPI constructor[0m[31m (4186ms)[0m


[92m [0m[32m 9 passing[0m[90m (2m)[0m
</msg>
<status status="PASS" endtime="20170903 17:00:30.094" starttime="20170903 17:00:30.093"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${truffletest_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170903 17:00:30.095" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170903 17:00:30.095" starttime="20170903 17:00:30.094"></status>
</kw>
<status status="PASS" endtime="20170903 17:00:30.095" starttime="20170903 16:56:54.570"></status>
</kw>
<doc>call truffle test on a started local geth and show the result here.</doc>
<tags>
<tag>Smart contract Tests</tag>
</tags>
<status status="PASS" endtime="20170903 17:00:30.096" critical="yes" starttime="20170903 16:56:54.560"></status>
</test>
<kw type="teardown" name="Stop Geth42">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd ~/gethUtils &amp;&amp; ./killGeth.sh</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${geth_result}</var>
</assign>
<msg timestamp="20170903 17:00:30.098" level="INFO">Starting process:
cd ~/gethUtils &amp;&amp; ./killGeth.sh</msg>
<msg timestamp="20170903 17:00:30.108" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170903 17:00:30.123" level="INFO">Process completed.</msg>
<msg timestamp="20170903 17:00:30.124" level="INFO">${geth_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170903 17:00:30.124" starttime="20170903 17:00:30.098"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${geth_result.stderr}</arg>
</arguments>
<msg timestamp="20170903 17:00:30.125" level="INFO"></msg>
<status status="PASS" endtime="20170903 17:00:30.125" starttime="20170903 17:00:30.124"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${geth_result.stdout}</arg>
</arguments>
<msg timestamp="20170903 17:00:30.125" level="INFO"></msg>
<status status="PASS" endtime="20170903 17:00:30.126" starttime="20170903 17:00:30.125"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${geth_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170903 17:00:30.126" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170903 17:00:30.127" starttime="20170903 17:00:30.126"></status>
</kw>
<status status="PASS" endtime="20170903 17:00:30.127" starttime="20170903 17:00:30.097"></status>
</kw>
<doc>All smart contract tests on Local Geth</doc>
<status status="PASS" endtime="20170903 17:00:30.127" starttime="20170903 16:43:57.700"></status>
</suite>
<suite source="/home/vagrant/iexecdev/iexec-node/tests/rf/Tests/truffleTestsOnTestrpc.robot" id="s1-s3" name="truffleTestsOnTestrpc">
<kw type="setup" name="Start Testrpc">
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>testrpc</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${created_process}</var>
</assign>
<msg timestamp="20170903 17:00:30.152" level="INFO">Starting process:
testrpc</msg>
<msg timestamp="20170903 17:00:30.155" level="INFO">${created_process} = 6</msg>
<status status="PASS" endtime="20170903 17:00:30.155" starttime="20170903 17:00:30.152"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TESTRPC_PROCESS}</arg>
<arg>${created_process}</arg>
</arguments>
<msg timestamp="20170903 17:00:30.156" level="INFO">${TESTRPC_PROCESS} = 6</msg>
<status status="PASS" endtime="20170903 17:00:30.156" starttime="20170903 17:00:30.156"></status>
</kw>
<status status="PASS" endtime="20170903 17:00:30.157" starttime="20170903 17:00:30.151"></status>
</kw>
<test id="s1-s3-t1" name="Test Iexec Oracle Truffle Tests On Testrpc">
<kw name="Iexec Oracle Truffle Tests" library="ETHTruffleTests">
<tags>
<tag>Smart contract Tests</tag>
</tags>
<doc>call truffle test and show the result here.</doc>
<kw name="Remove Directory" library="OperatingSystem">
<doc>Removes the directory pointed to by the given ``path``.</doc>
<arguments>
<arg>iexec-oracle</arg>
<arg>recursive=true</arg>
</arguments>
<msg timestamp="20170903 17:00:32.010" html="yes" level="INFO">Removed directory '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/iexec-oracle"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/iexec-oracle&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170903 17:00:32.010" starttime="20170903 17:00:30.159"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>git clone ${IEXEC_ORACLE_GIT_BRANCH}</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${git_result}</var>
</assign>
<msg timestamp="20170903 17:00:32.011" level="INFO">Starting process:
git clone https://github.com/iExecBlockchainComputing/iexec-oracle.git</msg>
<msg timestamp="20170903 17:00:32.014" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170903 17:00:34.369" level="INFO">Process completed.</msg>
<msg timestamp="20170903 17:00:34.370" level="INFO">${git_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170903 17:00:34.370" starttime="20170903 17:00:32.010"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${git_result.stderr}</arg>
</arguments>
<msg timestamp="20170903 17:00:34.370" level="INFO">Cloning into 'iexec-oracle'...</msg>
<status status="PASS" endtime="20170903 17:00:34.371" starttime="20170903 17:00:34.370"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${git_result.stdout}</arg>
</arguments>
<msg timestamp="20170903 17:00:34.371" level="INFO"></msg>
<status status="PASS" endtime="20170903 17:00:34.372" starttime="20170903 17:00:34.371"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${git_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170903 17:00:34.372" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170903 17:00:34.373" starttime="20170903 17:00:34.372"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd iexec-oracle/API &amp;&amp; npm install</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${npm_result}</var>
</assign>
<msg timestamp="20170903 17:00:34.373" level="INFO">Starting process:
cd iexec-oracle/API &amp;&amp; npm install</msg>
<msg timestamp="20170903 17:00:34.376" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170903 17:00:51.209" level="INFO">Process completed.</msg>
<msg timestamp="20170903 17:00:51.209" level="INFO">${npm_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170903 17:00:51.209" starttime="20170903 17:00:34.373"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${npm_result.stderr}</arg>
</arguments>
<msg timestamp="20170903 17:00:51.210" level="INFO">npm WARN xtremwebinterface@1.0.0 No description
npm WARN xtremwebinterface@1.0.0 No repository field.</msg>
<status status="PASS" endtime="20170903 17:00:51.210" starttime="20170903 17:00:51.210"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${npm_result.stdout}</arg>
</arguments>
<msg timestamp="20170903 17:00:51.211" level="INFO">xtremwebinterface@1.0.0 /home/vagrant/iexecdev/iexec-node/tests/rf/iexec-oracle/API
├── bluebird@3.5.0 
├── lodash@4.17.4 
├─┬ truffle@3.4.7 
│ ├─┬ mocha@3.5.0 
│ │ ├── browser-stdout@1.3.0 
│ │ ├─┬ commander@2.9.0 
│ │ │ └── graceful-readlink@1.0.1 
│ │ ├─┬ debug@2.6.8 
│ │ │ └── ms@2.0.0 
│ │ ├── diff@3.2.0 
│ │ ├── escape-string-regexp@1.0.5 
│ │ ├─┬ glob@7.1.1 
│ │ │ ├── fs.realpath@1.0.0 
│ │ │ ├─┬ inflight@1.0.6 
│ │ │ │ └── wrappy@1.0.2 
│ │ │ ├── inherits@2.0.3 
│ │ │ ├─┬ minimatch@3.0.4 
│ │ │ │ └─┬ brace-expansion@1.1.8 
│ │ │ │   ├── balanced-match@1.0.0 
│ │ │ │   └── concat-map@0.0.1 
│ │ │ ├── once@1.4.0 
│ │ │ └── path-is-absolute@1.0.1 
│ │ ├── growl@1.9.2 
│ │ ├── json3@3.3.2 
│ │ ├─┬ lodash.create@3.1.1 
│ │ │ ├─┬ lodash._baseassign@3.2.0 
│ │ │ │ ├── lodash._basecopy@3.0.1 
│ │ │ │ └─┬ lodash.keys@3.1.2 
│ │ │ │   ├── lodash._getnative@3.9.1 
│ │ │ │   ├── lodash.isarguments@3.1.0 
│ │ │ │   └── lodash.isarray@3.0.4 
│ │ │ ├── lodash._basecreate@3.0.3 
│ │ │ └── lodash._isiterateecall@3.0.9 
│ │ ├─┬ mkdirp@0.5.1 
│ │ │ └── minimist@0.0.8 
│ │ └─┬ supports-color@3.1.2 
│ │   └── has-flag@1.0.0 
│ ├── original-require@1.0.1 
│ └─┬ solc@0.4.13 
│   ├─┬ fs-extra@0.30.0 
│   │ ├── graceful-fs@4.1.11 
│   │ ├── jsonfile@2.4.0 
│   │ ├── klaw@1.3.1 
│   │ └── rimraf@2.6.1 
│   ├── memorystream@0.3.1 
│   ├── require-from-string@1.2.1 
│   ├── semver@5.4.1 
│   └─┬ yargs@4.8.1 
│     ├─┬ cliui@3.2.0 
│     │ ├─┬ strip-ansi@3.0.1 
│     │ │ └── ansi-regex@2.1.1 
│     │ └── wrap-ansi@2.1.0 
│     ├── decamelize@1.2.0 
│     ├── get-caller-file@1.0.2 
│     ├── lodash.assign@4.2.0 
│     ├─┬ os-locale@1.4.0 
│     │ └─┬ lcid@1.0.0 
│     │   └── invert-kv@1.0.0 
│     ├─┬ read-pkg-up@1.0.1 
│     │ ├─┬ find-up@1.1.2 
│     │ │ ├── path-exists@2.1.0 
│     │ │ └─┬ pinkie-promise@2.0.1 
│     │ │   └── pinkie@2.0.4 
│     │ └─┬ read-pkg@1.1.0 
│     │   ├─┬ load-json-file@1.1.0 
│     │   │ ├─┬ parse-json@2.2.0 
│     │   │ │ └─┬ error-ex@1.3.1 
│     │   │ │   └── is-arrayish@0.2.1 
│     │   │ ├── pify@2.3.0 
│     │   │ └─┬ strip-bom@2.0.0 
│     │   │   └── is-utf8@0.2.1 
│     │   ├─┬ normalize-package-data@2.4.0 
│     │   │ ├── hosted-git-info@2.5.0 
│     │   │ ├─┬ is-builtin-module@1.0.0 
│     │   │ │ └── builtin-modules@1.1.1 
│     │   │ └─┬ validate-npm-package-license@3.0.1 
│     │   │   ├─┬ spdx-correct@1.0.2 
│     │   │   │ └── spdx-license-ids@1.2.2 
│     │   │   └── spdx-expression-parse@1.0.4 
│     │   └── path-type@1.1.0 
│     ├── require-directory@2.1.1 
│     ├── require-main-filename@1.0.1 
│     ├── set-blocking@2.0.0 
│     ├─┬ string-width@1.0.2 
│     │ ├── code-point-at@1.1.0 
│     │ └─┬ is-fullwidth-code-point@1.0.0 
│     │   └── number-is-nan@1.0.1 
│     ├── which-module@1.0.0 
│     ├── window-size@0.2.0 
│     ├── y18n@3.2.1 
│     └─┬ yargs-parser@2.4.1 
│       └── camelcase@3.0.0 
├─┬ truffle-contract@2.0.0 
│ ├─┬ ethjs-abi@0.1.8 
│ │ ├── bn.js@4.11.6 
│ │ ├── js-sha3@0.5.5 
│ │ └─┬ number-to-bn@1.7.0 
│ │   └─┬ strip-hex-prefix@1.0.0 
│ │     └── is-hex-prefixed@1.0.0 
│ ├── truffle-blockchain-utils@0.0.1 
│ └─┬ truffle-contract-schema@0.0.5 
│   └── crypto-js@3.1.9-1 
└─┬ web3@0.18.4 
  ├── bignumber.js@2.0.7  (git+https://github.com/debris/bignumber.js.git#94d7146671b9719e00a09c29b01a691bc85048c2)
  ├── crypto-js@3.1.8 
  ├── utf8@2.1.2 
  ├── xhr2@0.1.4 
  └── xmlhttprequest@1.8.0 
</msg>
<status status="PASS" endtime="20170903 17:00:51.211" starttime="20170903 17:00:51.210"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${npm_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170903 17:00:51.211" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170903 17:00:51.211" starttime="20170903 17:00:51.211"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd iexec-oracle/API &amp;&amp; ./node_modules/.bin/truffle test test/iexecoracleapi.js</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${truffletest_result}</var>
</assign>
<msg timestamp="20170903 17:00:51.212" level="INFO">Starting process:
cd iexec-oracle/API &amp;&amp; ./node_modules/.bin/truffle test test/iexecoracleapi.js</msg>
<msg timestamp="20170903 17:00:51.214" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170903 17:01:09.667" level="INFO">Process completed.</msg>
<msg timestamp="20170903 17:01:09.668" level="INFO">${truffletest_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170903 17:01:09.668" starttime="20170903 17:00:51.211"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stderr}</arg>
</arguments>
<msg timestamp="20170903 17:01:09.669" level="INFO"></msg>
<status status="PASS" endtime="20170903 17:01:09.669" starttime="20170903 17:01:09.668"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
</arguments>
<msg timestamp="20170903 17:01:09.669" level="INFO">Compiling ./contracts/IexecOracle.sol...
Compiling ./contracts/IexecOracleAPI.sol...
Compiling ./contracts/LS.sol...
Compiling ./contracts/Migrations.sol...
Compiling ./contracts/SafeMath.sol...

Compilation warnings encountered:

/home/vagrant/iexecdev/iexec-node/tests/rf/iexec-oracle/API/contracts/IexecOracle.sol:15:30: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (msg.sender != a) throw;
                             ^---^
,/home/vagrant/iexecdev/iexec-node/tests/rf/iexec-oracle/API/contracts/IexecOracle.sol:24:7: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
      string name;
      ^---------^
,/home/vagrant/iexecdev/iexec-node/tests/rf/iexec-oracle/API/contracts/IexecOracle.sol:27:7: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
      string stdout;
      ^-----------^
,/home/vagrant/iexecdev/iexec-node/tests/rf/iexec-oracle/API/contracts/IexecOracle.sol:28:7: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
      string stderr;
      ^-----------^
,/home/vagrant/iexecdev/iexec-node/tests/rf/iexec-oracle/API/contracts/IexecOracle.sol:122:21: Warning: Unused local variable
    function submit(string appName, string param) {// param = commandline
                    ^------------^
,/home/vagrant/iexecdev/iexec-node/tests/rf/iexec-oracle/API/contracts/IexecOracle.sol:126:28: Warning: Unused local variable
    function submitAndWait(string appName, string param, string pattern) {
                           ^------------^
,/home/vagrant/iexecdev/iexec-node/tests/rf/iexec-oracle/API/contracts/IexecOracle.sol:126:44: Warning: Unused local variable
    function submitAndWait(string appName, string param, string pattern) {
                                           ^----------^

IexecOracle deployed at address :0x1673d4923b539c7c21246f049467b6a5711eac32
LS deployed at address :0x31b93beae6280e8c18f7e8efee0528b82acb9343

[0m[0m
[0m  Contract: IexecOracleAPI[0m
TestRPC mode : Error: VM Exception. throw expected ?
  [32m  ✓[0m[90m Test call registerSmartContractAndCreator with tx.origin = msg.sender[0m[31m (95ms)[0m
[0m    Test IexecOracle on IexecOracle well initialized[0m
    [32m  ✓[0m[90m Test Launch Event when call iexecRegister[0m[31m (305ms)[0m
[0m    Test Register function call then simulate bridge response[0m
TestRPC mode : Error: VM Exception. throw expected ?
    [32m  ✓[0m[90m Only bridge can call registerCallback fonction[0m
    [32m  ✓[0m[90m Simulate bridge response OK and test event Register[0m[31m (415ms)[0m
    [32m  ✓[0m[90m Simulate bridge response KO and test event Register[0m[31m (330ms)[0m
    [32m  ✓[0m[90m Simulate bridge registerCallback and test event Register, then next registerCallback call do not generate event Register[0m[31m (149ms)[0m
[0m    Test IexecOracleAPI on IexecOracle well initialized[0m
    [32m  ✓[0m[90m Test creator and creator of IexecOracleAPI are set correctly in IexecOracle[0m
    [32m  ✓[0m[90m Test provider count for the creator  increment of by 1 in IexecOracle[0m
TestRPC mode : Error: VM Exception. throw expected ?
    [32m  ✓[0m[90m Cannot change creator in aIexecOracleInstance after first call by IexecOracleAPI constructor[0m[33m (46ms)[0m


[92m [0m[32m 9 passing[0m[90m (3s)[0m
</msg>
<status status="PASS" endtime="20170903 17:01:09.669" starttime="20170903 17:01:09.669"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${truffletest_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170903 17:01:09.670" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170903 17:01:09.670" starttime="20170903 17:01:09.669"></status>
</kw>
<status status="PASS" endtime="20170903 17:01:09.670" starttime="20170903 17:00:30.158"></status>
</kw>
<doc>call truffle test on a started testrpc and show the result here.</doc>
<tags>
<tag>Smart contract Tests</tag>
</tags>
<status status="PASS" endtime="20170903 17:01:09.670" critical="yes" starttime="20170903 17:00:30.157"></status>
</test>
<kw type="teardown" name="Stop Testrpc">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${TESTRPC_PROCESS}</arg>
</arguments>
<msg timestamp="20170903 17:01:09.672" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20170903 17:01:09.774" level="INFO">Process completed.</msg>
<status status="PASS" endtime="20170903 17:01:09.774" starttime="20170903 17:01:09.672"></status>
</kw>
<status status="PASS" endtime="20170903 17:01:09.774" starttime="20170903 17:01:09.671"></status>
</kw>
<doc>All smart contract tests on testrpc</doc>
<status status="PASS" endtime="20170903 17:01:09.774" starttime="20170903 17:00:30.135"></status>
</suite>
<suite source="/home/vagrant/iexecdev/iexec-node/tests/rf/Tests/xwcommandsSuite.robot" id="s1-s4" name="xwcommandsSuite">
<kw type="setup" name="Start XWtremWeb Server And XWtremWeb Worker" library="XWCommon">
<kw name="Compile XWtremWeb" library="XWCommon">
<kw name="Remove Directory" library="OperatingSystem">
<doc>Removes the directory pointed to by the given ``path``.</doc>
<arguments>
<arg>xtremweb-hep</arg>
<arg>recursive=true</arg>
</arguments>
<msg timestamp="20170903 17:01:09.924" html="yes" level="INFO">Directory '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep&lt;/a&gt;' does not exist.</msg>
<status status="PASS" endtime="20170903 17:01:09.925" starttime="20170903 17:01:09.848"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>git clone ${XW_GIT_BRANCH}</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${git_result}</var>
</assign>
<msg timestamp="20170903 17:01:09.925" level="INFO">Starting process:
git clone https://github.com/iExecBlockchainComputing/xtremweb-hep.git</msg>
<msg timestamp="20170903 17:01:09.929" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170903 17:06:11.449" level="INFO">Process completed.</msg>
<msg timestamp="20170903 17:06:11.450" level="INFO">${git_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170903 17:06:11.450" starttime="20170903 17:01:09.925"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${git_result.stderr}</arg>
</arguments>
<msg timestamp="20170903 17:06:11.451" level="INFO">Cloning into 'xtremweb-hep'...
Checking out files:  12% (209/1618)   Checking out files:  13% (211/1618)   Checking out files:  14% (227/1618)   Checking out files:  15% (243/1618)   Checking out files:  15% (247/1618)   Checking out files:  16% (259/1618)   Checking out files:  17% (276/1618)   Checking out files:  18% (292/1618)   Checking out files:  19% (308/1618)   Checking out files:  20% (324/1618)   Checking out files:  21% (340/1618)   Checking out files:  22% (356/1618)   Checking out files:  22% (368/1618)   Checking out files:  23% (373/1618)   Checking out files:  23% (375/1618)   Checking out files:  23% (380/1618)   Checking out files:  24% (389/1618)   Checking out files:  24% (403/1618)   Checking out files:  25% (405/1618)   Checking out files:  25% (414/1618)   Checking out files:  26% (421/1618)   Checking out files:  26% (424/1618)   Checking out files:  27% (437/1618)   Checking out files:  27% (444/1618)   Checking out files:  28% (454/1618)   Checking out files:  29% (470/1618)   Checking out files:  30% (486/1618)   Checking out files:  30% (501/1618)   Checking out files:  31% (502/1618)   Checking out files:  32% (518/1618)   Checking out files:  33% (534/1618)   Checking out files:  33% (540/1618)   Checking out files:  34% (551/1618)   Checking out files:  34% (558/1618)   Checking out files:  35% (567/1618)   Checking out files:  36% (583/1618)   Checking out files:  36% (584/1618)   Checking out files:  37% (599/1618)   Checking out files:  38% (615/1618)   Checking out files:  39% (632/1618)   Checking out files:  40% (648/1618)   Checking out files:  41% (664/1618)   Checking out files:  41% (666/1618)   Checking out files:  42% (680/1618)   Checking out files:  43% (696/1618)   Checking out files:  44% (712/1618)   Checking out files:  45% (729/1618)   Checking out files:  45% (744/1618)   Checking out files:  46% (745/1618)   Checking out files:  47% (761/1618)   Checking out files:  48% (777/1618)   Checking out files:  49% (793/1618)   Checking out files:  50% (809/1618)   Checking out files:  51% (826/1618)   Checking out files:  52% (842/1618)   Checking out files:  53% (858/1618)   Checking out files:  53% (867/1618)   Checking out files:  54% (874/1618)   Checking out files:  55% (890/1618)   Checking out files:  56% (907/1618)   Checking out files:  57% (923/1618)   Checking out files:  58% (939/1618)   Checking out files:  59% (955/1618)   Checking out files:  60% (971/1618)   Checking out files:  61% (987/1618)   Checking out files:  62% (1004/1618)   Checking out files:  63% (1020/1618)   Checking out files:  64% (1036/1618)   Checking out files:  65% (1052/1618)   Checking out files:  66% (1068/1618)   Checking out files:  67% (1085/1618)   Checking out files:  68% (1101/1618)   Checking out files:  69% (1117/1618)   Checking out files:  69% (1128/1618)   Checking out files:  70% (1133/1618)   Checking out files:  71% (1149/1618)   Checking out files:  72% (1165/1618)   Checking out files:  73% (1182/1618)   Checking out files:  74% (1198/1618)   Checking out files:  75% (1214/1618)   Checking out files:  76% (1230/1618)   Checking out files:  77% (1246/1618)   Checking out files:  77% (1253/1618)   Checking out files:  78% (1263/1618)   Checking out files:  79% (1279/1618)   Checking out files:  80% (1295/1618)   Checking out files:  81% (1311/1618)   Checking out files:  82% (1327/1618)   Checking out files:  83% (1343/1618)   Checking out files:  83% (1344/1618)   Checking out files:  84% (1360/1618)   Checking out files:  85% (1376/1618)   Checking out files:  86% (1392/1618)   Checking out files:  87% (1408/1618)   Checking out files:  88% (1424/1618)   Checking out files:  89% (1441/1618)   Checking out files:  90% (1457/1618)   Checking out files:  91% (1473/1618)   Checking out files:  92% (1489/1618)   Checking out files:  93% (1505/1618)   Checking out files:  94% (1521/1618)   Checking out files:  95% (1538/1618)   Checking out files:  95% (1550/1618)   Checking out files:  96% (1554/1618)   Checking out files:  97% (1570/1618)   Checking out files:  98% (1586/1618)   Checking out files:  99% (1602/1618)   Checking out files: 100% (1618/1618)   Checking out files: 100% (1618/1618), done.</msg>
<status status="PASS" endtime="20170903 17:06:11.451" starttime="20170903 17:06:11.450"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${git_result.stdout}</arg>
</arguments>
<msg timestamp="20170903 17:06:11.452" level="INFO"></msg>
<status status="PASS" endtime="20170903 17:06:11.452" starttime="20170903 17:06:11.451"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${git_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170903 17:06:11.452" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170903 17:06:11.452" starttime="20170903 17:06:11.452"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd ${BUILD_PATH} &amp;&amp; make clean &amp;&amp; make</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${compile_result}</var>
</assign>
<msg timestamp="20170903 17:06:11.453" level="INFO">Starting process:
cd ./xtremweb-hep/build &amp;&amp; make clean &amp;&amp; make</msg>
<msg timestamp="20170903 17:06:11.455" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170903 17:06:48.662" level="INFO">Process completed.</msg>
<msg timestamp="20170903 17:06:48.662" level="INFO">${compile_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170903 17:06:48.662" starttime="20170903 17:06:11.452"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${compile_result.stderr}</arg>
</arguments>
<msg timestamp="20170903 17:06:48.663" level="INFO">     [copy] Warning: Could not find file /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/keystore/xwhepworker.keys to copy.
     [copy] Warning: Could not find file /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/keystore/xwhepclient.keys to copy.
     [copy] Warning: Could not find file /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/keystore/xwhepserver.keys to copy.</msg>
<status status="PASS" endtime="20170903 17:06:48.663" starttime="20170903 17:06:48.663"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${compile_result.stdout}</arg>
</arguments>
<msg timestamp="20170903 17:06:48.664" level="INFO">./build.sh -f build.xml clean 
Buildfile: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/build.xml

tstamp:
[echoproperties] #Ant properties
[echoproperties] #Sun Sep 03 17:06:12 UTC 2017
[echoproperties] v.branch=head
[echoproperties] v.build=201709031706
[echoproperties] v.major=10
[echoproperties] v.micro=0
[echoproperties] v.minor=6

version:

clean:
   [delete] Deleting: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/.build
     [exec] make[1]: Entering directory `/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/natif'
     [exec] rm -f XWInterruptsImpl.h PortMapper.h XWUtilImpl.h XWTracerImpl.h
     [exec] make[1]: Leaving directory `/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/natif'
     [exec] mkdir: cannot create directory ‘../../build/classes/obj/’: No such file or directory

BUILD SUCCESSFUL
Total time: 0 seconds
./build.sh distrib 
Buildfile: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/build.xml

tstamp:
[echoproperties] #Ant properties
[echoproperties] #Sun Sep 03 17:06:13 UTC 2017
[echoproperties] v.branch=head
[echoproperties] v.build=201709031706
[echoproperties] v.major=10
[echoproperties] v.micro=0
[echoproperties] v.minor=6

version:

configure:
     [echo] 
     [echo]       ant version = Apache Ant(TM) version 1.8.4 compiled on May 22 2012
     [echo] 
     [echo]       os         = Linux
     [echo]       os.arch    = amd64
     [echo]       target     = Linux
     [echo]       xwarch     = amd64
     [echo]       xwsuffix   = linux-amd64
     [echo]       debug      = true
     [echo]       debuglevel = source,lines
     [echo] 
     [echo]         cross=${cross.prefix}
     [echo]         target java home =${cross.java.home}
     [echo]     	target           =Linux
     [echo]     	xwversion=10.6.0

templates:
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common

prepare:
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes/obj
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes/obj/linux-amd64
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes/jni
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes/xwclasses
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/lib
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/doc
     [echo] 
     [echo]       classpath=/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/test:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/JOpenId-1.08.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/JSON-java.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/MinML.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/activation.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/antlr.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/attic-all-0.3.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/bcpkix-jdk15on-151.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/bcprov-jdk15on-151.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/bcprov-jdk16-140.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/commons-codec-1.3.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/commons-fileupload-1.2.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/commons-httpclient-3.0.1.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/commons-io-1.3.2.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/commons-logging-1.1.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/ibis-util-2.1.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/jcert.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/jetty-http-9.3.8.v20160314.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/jetty-io-9.3.8.v20160314.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/jetty-server-9.3.8.v20160314.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/jetty-util-9.3.8.v20160314.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/jose4j-0.5.5.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/junit-4.10.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/log4j-1.2.17.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/mail.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/mysql-connector-java-5.1.6-bin.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/scribejava-apis-3.3.1-SNAPSHOT.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/scribejava-core-3.3.1-SNAPSHOT.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/servlet-api-3.1.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/slf4j-api-1.7.2.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/slf4j-log4j12-1.7.2.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/smartsockets-1.4.jar
     [echo]     

common:
    [javac] Compiling 277 source files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/XWTools.java:61: warning: [deprecation] HTTPOpenIdHandler in xtremweb.dispatcher has been deprecated
    [javac] import xtremweb.dispatcher.HTTPOpenIdHandler;
    [javac]                           ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/security/ACLConnect.java:36: warning: AclEntryImpl is internal proprietary API and may be removed in a future release
    [javac] import sun.security.acl.AclEntryImpl;
    [javac]                        ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/security/ACLConnect.java:37: warning: AclImpl is internal proprietary API and may be removed in a future release
    [javac] import sun.security.acl.AclImpl;
    [javac]                        ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/security/ACLConnect.java:38: warning: PermissionImpl is internal proprietary API and may be removed in a future release
    [javac] import sun.security.acl.PermissionImpl;
    [javac]                        ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/security/ACLConnect.java:39: warning: PrincipalImpl is internal proprietary API and may be removed in a future release
    [javac] import sun.security.acl.PrincipalImpl;
    [javac]                        ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/communications/CommClient.java:870: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] 		return version(new XMLRPCCommandVersion(newURI()));
    [javac] 		                   ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/communications/CommClient.java:881: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] 	public Version version(final XMLRPCCommandVersion command)
    [javac] 	                             ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/DataInterface.java:625: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/communications/IdRpc.java:89: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] 		public XMLRPCCommandVersion newCommand(final URI uri, final UserInterface client, final Table obj)
    [javac] 		       ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/communications/IdRpc.java:91: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] 			return new XMLRPCCommandVersion(uri, client);
    [javac] 			           ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/communications/XMLRPCCommand.java:614: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] 			return new XMLRPCCommandVersion(input);
    [javac] 			           ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/AppInterface.java:1446: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/UserInterface.java:577: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/GroupInterface.java:319: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/HostInterface.java:1212: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/SessionInterface.java:264: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/TaskInterface.java:441: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/TraceInterface.java:348: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/UserGroupInterface.java:365: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/WorkInterface.java:933: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/AppType.java:263: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/CPUType.java:223: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/DataType.java:265: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/Executable.java:294: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/JobInterface.java:409: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/OSType.java:243: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/Status.java:245: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/UserRightsType.java:243: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/XWTools.java:805: warning: [deprecation] HTTPOpenIdHandler in xtremweb.dispatcher has been deprecated
    [javac] 		final Logger logger = new Logger(HTTPOpenIdHandler.class);
    [javac] 		                                 ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/XWTools.java:817: warning: BASE64Encoder is internal proprietary API and may be removed in a future release
    [javac] 			out.println(new sun.misc.BASE64Encoder().encode(cert.getEncoded()));
    [javac] 			                        ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/communications/HTTPClient.java:238: warning: [deprecation] Protocol(String,SecureProtocolSocketFactory,int) in Protocol has been deprecated
    [javac] 				xwssl = new Protocol(uri.getScheme(), new AuthSSLProtocolSocketFactory(uri.getScheme(), keyStore,
    [javac] 				        ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/dispatcher/Dispatcher.java:216: warning: [deprecation] HTTPOpenIdHandler in xtremweb.dispatcher has been deprecated
    [javac] 				HTTPOpenIdHandler.setCACertificateEntries(getConfig().getKeyStore());
    [javac] 				^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/security/ACLConnect.java:65: warning: PermissionImpl is internal proprietary API and may be removed in a future release
    [javac] 	private final Permission _connect = new PermissionImpl("CONNECT");
    [javac] 	                                        ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/security/ACLConnect.java:66: warning: PrincipalImpl is internal proprietary API and may be removed in a future release
    [javac] 	private final Principal _owner = new PrincipalImpl("localhost");
    [javac] 	                                     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/security/ACLConnect.java:67: warning: AclImpl is internal proprietary API and may be removed in a future release
    [javac] 	private Acl _acl = new AclImpl(_owner, "ConnectACL");
    [javac] 	                       ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/security/ACLConnect.java:80: warning: AclImpl is internal proprietary API and may be removed in a future release
    [javac] 		_acl = new AclImpl(_owner, "ConnectACL");
    [javac] 		           ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/security/ACLConnect.java:81: warning: AclEntryImpl is internal proprietary API and may be removed in a future release
    [javac] 		final AclEntry allowConnections = new AclEntryImpl(_owner);
    [javac] 		                                      ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/security/ACLConnect.java:104: warning: PrincipalImpl is internal proprietary API and may be removed in a future release
    [javac] 			final Principal prince = new PrincipalImpl(regexp);
    [javac] 			                             ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/security/ACLConnect.java:105: warning: AclEntryImpl is internal proprietary API and may be removed in a future release
    [javac] 			final AclEntry entry = new AclEntryImpl(prince);
    [javac] 			                           ^
    [javac] Note: Some input files use unchecked or unsafe operations.
    [javac] Note: Recompile with -Xlint:unchecked for details.
    [javac] 39 warnings
    [javac] Creating empty /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes/database/package-info.class

obj:

iface:

communications:
    [javac] Compiling 60 source files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/communications/IdRpc.java:89: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] 		public XMLRPCCommandVersion newCommand(final URI uri, final UserInterface client, final Table obj)
    [javac] 		       ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/communications/IdRpc.java:91: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] 			return new XMLRPCCommandVersion(uri, client);
    [javac] 			           ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/communications/XMLRPCCommand.java:614: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] 			return new XMLRPCCommandVersion(input);
    [javac] 			           ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/communications/CommClient.java:870: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] 		return version(new XMLRPCCommandVersion(newURI()));
    [javac] 		                   ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/communications/CommClient.java:881: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] 	public Version version(final XMLRPCCommandVersion command)
    [javac] 	                             ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/communications/HTTPClient.java:238: warning: [deprecation] Protocol(String,SecureProtocolSocketFactory,int) in Protocol has been deprecated
    [javac] 				xwssl = new Protocol(uri.getScheme(), new AuthSSLProtocolSocketFactory(uri.getScheme(), keyStore,
    [javac] 				        ^
    [javac] Note: Some input files use unchecked or unsafe operations.
    [javac] Note: Recompile with -Xlint:unchecked for details.
    [javac] 6 warnings

services:
    [javac] Compiling 7 source files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes

archdep:
    [javac] Compiling 20 source files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes

upgrade:

worker:
    [javac] Compiling 42 source files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes
    [javac] Note: Some input files use unchecked or unsafe operations.
    [javac] Note: Recompile with -Xlint:unchecked for details.

dispatcher:
    [javac] Compiling 14 source files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/dispatcher/Dispatcher.java:216: warning: [deprecation] HTTPOpenIdHandler in xtremweb.dispatcher has been deprecated
    [javac] 				HTTPOpenIdHandler.setCACertificateEntries(getConfig().getKeyStore());
    [javac] 				^
    [javac] Note: Some input files use unchecked or unsafe operations.
    [javac] Note: Recompile with -Xlint:unchecked for details.
    [javac] 1 warning

worker.manifest:

jni:
     [copy] Copying 10 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/natif
     [exec] mkdir: cannot create directory ‘../../build/classes/obj/linux-amd64’: File exists
     [exec] make[1]: Entering directory `/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/natif'
     [exec] gcc -c  -fPIC -g -Wall -I'/usr/lib/jvm/java-8-openjdk-amd64/include/linux' -fPIC -I'/usr/lib/jvm/java-8-openjdk-amd64/include' -o ../../build/classes/obj/linux-amd64/XWUtilUnix.o XWUtilUnix.c
     [exec] gcc -shared  -fPIC  -L'/usr/lib/jvm/java-8-openjdk-amd64/lib' -o ../../build/classes/obj/linux-amd64/XWUtil.jni ../../build/classes/obj/linux-amd64/XWUtilUnix.o 
     [exec] cp ../../build/classes/obj/linux-amd64/XWUtil.jni ../../build/classes/jni/XWUtil.jni.10.6.0.linux-amd64
     [exec] gcc -c  -fPIC -g -Wall -I'/usr/lib/jvm/java-8-openjdk-amd64/include/linux' -fPIC -I'/usr/lib/jvm/java-8-openjdk-amd64/include' -o ../../build/classes/obj/linux-amd64/XWTracerUnixlib.o XWTracerUnixlib.c
     [exec] gcc -c  -fPIC -g -Wall -I'/usr/lib/jvm/java-8-openjdk-amd64/include/linux' -fPIC -I'/usr/lib/jvm/java-8-openjdk-amd64/include' -o ../../build/classes/obj/linux-amd64/XWTracerUnixImpl.o XWTracerUnixImpl.c
     [exec] XWTracerUnixlib.c: In function ‘processCpustate’:
     [exec] XWTracerUnixlib.c:194:19: warning: variable ‘relative_jiffies’ set but not used [-Wunused-but-set-variable]
     [exec]      idle_jiffies, relative_jiffies, absolute_jiffies;
     [exec]                    ^
     [exec] XWTracerUnixlib.c:191:49: warning: variable ‘cpu_idle’ set but not used [-Wunused-but-set-variable]
     [exec]    static double cpu_user, cpu_nice, cpu_system, cpu_idle;
     [exec]                                                  ^
     [exec] XWTracerUnixlib.c:191:37: warning: variable ‘cpu_system’ set but not used [-Wunused-but-set-variable]
     [exec]    static double cpu_user, cpu_nice, cpu_system, cpu_idle;
     [exec]                                      ^
     [exec] XWTracerUnixlib.c:191:27: warning: variable ‘cpu_nice’ set but not used [-Wunused-but-set-variable]
     [exec]    static double cpu_user, cpu_nice, cpu_system, cpu_idle;
     [exec]                            ^
     [exec] XWTracerUnixlib.c:191:17: warning: variable ‘cpu_user’ set but not used [-Wunused-but-set-variable]
     [exec]    static double cpu_user, cpu_nice, cpu_system, cpu_idle;
     [exec]                  ^
     [exec] XWTracerUnixlib.c: In function ‘writeState’:
     [exec] XWTracerUnixlib.c:589:7: warning: variable ‘test’ set but not used [-Wunused-but-set-variable]
     [exec]    int test;
     [exec]        ^
     [exec] XWTracerUnixlib.c:587:8: warning: variable ‘k’ set but not used [-Wunused-but-set-variable]
     [exec]    char k[1];
     [exec]         ^
     [exec] XWTracerUnixlib.c:584:9: warning: variable ‘c’ set but not used [-Wunused-but-set-variable]
     [exec]    char* c;
     [exec]          ^
     [exec] gcc -shared  -fPIC  -L'/usr/lib/jvm/java-8-openjdk-amd64/lib' -o ../../build/classes/obj/linux-amd64/XwTracer.jni ../../build/classes/obj/linux-amd64/XWTracerUnixlib.o ../../build/classes/obj/linux-amd64/XWTracerUnixImpl.o 
     [exec] cp ../../build/classes/obj/linux-amd64/XwTracer.jni ../../build/classes/jni/XwTracer.jni.10.6.0.linux-amd64
     [exec] gcc -c  -fPIC -g -Wall -I'/usr/lib/jvm/java-8-openjdk-amd64/include/linux' -fPIC -I'/usr/lib/jvm/java-8-openjdk-amd64/include' -o ../../build/classes/obj/linux-amd64/PortMapper.o PortMapper.c
     [exec] PortMapper.c: In function ‘getport’:
     [exec] PortMapper.c:29:2: warning: implicit declaration of function ‘pmap_getport’ [-Wimplicit-function-declaration]
     [exec]   return pmap_getport (&amp;addr, prog, version, protocol);
     [exec]   ^
     [exec] gcc -shared  -fPIC  -L'/usr/lib/jvm/java-8-openjdk-amd64/lib' -o ../../build/classes/obj/linux-amd64/PortMapper.jni ../../build/classes/obj/linux-amd64/PortMapper.o 
     [exec] cp ../../build/classes/obj/linux-amd64/PortMapper.jni ../../build/classes/jni/PortMapper.jni.10.6.0.linux-amd64
     [exec] make[1]: Leaving directory `/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/natif'

Worker:
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes/data
     [copy] Copying 23 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes/data

tests:
    [javac] Compiling 50 source files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/test/xtremweb/communications/XMLRPCCommandVersionTest.java:29: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] import xtremweb.communications.XMLRPCCommandVersion;
    [javac]                               ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/test/xtremweb/communications/XMLRPCCommandVersionTest.java:47: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] 			setCmd(new XMLRPCCommandVersion());
    [javac] 			           ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/test/xtremweb/communications/XMLRPCCommandVersionTest.java:48: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] 			setCmd2(new XMLRPCCommandVersion());
    [javac] 			            ^
    [javac] Note: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/test/xtremweb/common/XMLHashtableTest.java uses unchecked or unsafe operations.
    [javac] Note: Recompile with -Xlint:unchecked for details.
    [javac] 3 warnings

client:

allservices:

Dispatcher:
     [echo]  
     [echo] 	JAR JAR JAR
     [echo] 	basedir="/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes"
     [echo] 	jarfile="/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/lib/xtremweb.jar"
     [echo] 	manifest="/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/misc/worker.manifest"
     [echo]       
      [jar] Building jar: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/lib/xtremweb.jar

rpcv:

all:

copylibs:
     [copy] Copying 31 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/lib

distrib:

BUILD SUCCESSFUL
Total time: 26 seconds
./build.sh -f install.xml install 
Buildfile: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/install.xml

tstamp:

version:

prepare:

configure:
     [echo] 
     [echo] user  login : ${xtremweb.admin.login} ${xtremweb.admin.password}
     [echo] admin login : ${xtremweb.admin.login} ${xtremweb.admin.password}
     [echo] DB su login :  
     [echo] ENGINE : ""
     [echo] launcher.url = http://nohost/
     [echo] system.user  = xwhep
     [echo] xwsuffix=LINUX-AMD64
     [echo] xwarch=AMD64
     [echo] target.os=Linux
     [echo] cross.prefix=${cross.prefix}
     [echo] cross.java.home=${cross.java.home}
     [echo] version=10.6.0

installConfig:
     [echo] 
     [echo]        ==&gt; version    = 10.6.0
     [echo]        ==&gt; dist.dir   = /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0
     [echo]        ==&gt; installDir = /opt/xwhep-10.6.0
     [echo]     

installFiles:
     [copy] Copying 98 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/doc
     [copy] Copying 17 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/docker
     [copy] Copying 31 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/lib
     [copy] Copying 31 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.server/installer/PckRoot/private/etc/xwhep.server/lib
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf
     [echo] 
     [echo]       xtremweb.admin.login=${xtremweb.admin.login}
     [echo]       xtremweb.admin.password=${xtremweb.admin.password}
     [echo]     
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf
     [echo] 
     [echo]       xtremweb.worker.login=${xtremweb.worker.login}
     [echo]       xtremweb.worker.password=${xtremweb.worker.password}
     [echo]     
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/keystore
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.worker/installer/PckRoot/private/etc/xwhep.worker/conf
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.worker/installer/PckRoot/Applications/xwhep.worker
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.worker/installer/PckRoot/private/etc/xwhep.worker/conf
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.vworker/installer/PckRoot/Applications/xwhep.vworker
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.vworker/installer/PckRoot/private/etc/xwhep.vworker/bin
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.client/installer/PckRoot/Applications/xwhep.client/conf
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.server/installer/PckRoot/private/etc/xwhep.server/conf
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.server/installer/PckRoot/Applications/xwhep.server/doc
     [copy] Copying 98 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.server/installer/PckRoot/Applications/xwhep.server/doc
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.client/conf
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.client/innoSetup/client/bin
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.client/innoSetup/client/conf
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.client/innoSetup/client/doc
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.client/innoSetup/client/keystore
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.client/innoSetup/client/lib
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.client/innoSetup/client/conf
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/conf
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/innoSetup/worker/bin
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/innoSetup/worker/conf
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/innoSetup/worker/doc
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/innoSetup/worker/keystore
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/innoSetup/worker/lib
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/innoSetup/worker/misc
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/innoSetup/worker/conf
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/conf
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/innoSetup/worker/conf
     [copy] Copying 2 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/lib
     [copy] Copying 2 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/innoSetup/worker/lib
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/innoSetup/worker/lib
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/innoSetup/worker/lib
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/innoSetup/worker/misc
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/innoSetup/worker/doc
     [copy] Copying 8 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/bin
     [copy] Copying 5 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/innoSetup/worker/bin
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/doc
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.server/conf
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.server/innoSetup/server/bin
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.server/innoSetup/server/conf
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.server/innoSetup/server/doc
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.server/innoSetup/server/keystore
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.server/innoSetup/server/lib
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.server/innoSetup/server/misc
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.server/innoSetup/server/conf
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.server/conf
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.server/innoSetup/server/conf
     [copy] Copying 2 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.server/lib
     [copy] Copying 2 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.server/innoSetup/server/lib
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.server/innoSetup/server/misc
     [copy] Copying 2 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.server/innoSetup/server/bin

setupScripts:
     [copy] Copying 266 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/db-maintenance

installScripts:

createDownload:
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.client/installer/PckRoot/Applications/xwhep.client/lib
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.client/installer/PckRoot/Applications/xwhep.client/lib
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/db-maintenance
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/db-maintenance
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin
     [copy] Copying 98 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/doc/xwhep.client/doc
[jarbundler] Creating application bundle: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/xwhep.client.app
     [copy] Copying 5 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/xwhep.client.app
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.bridgedgsg
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.client
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.server
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.server.conf
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.worker
     [copy] Copying 20 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.worker
     [copy] Copying 17 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.vworker
     [copy] Copying 12 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.client
     [copy] Copying 19 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.server
     [copy] Copying 3 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/innoSetup
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker
     [copy] Copying 3 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.server/innoSetup
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.server
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.server.conf
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.server/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.server/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.server/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.server/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.server/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.server/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.server/DEBIAN
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.server.conf/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.server.conf/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.server.conf/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.server.conf/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.server.conf/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.server.conf/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.server.conf/DEBIAN
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.bridgedgsg/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.bridgedgsg
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.bridgedgsg/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.bridgedgsg/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.bridgedgsg/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.bridgedgsg/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.bridgedgsg/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.bridgedgsg/DEBIAN
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.client/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.client
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.client/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.client/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.client/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.client/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.client/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.client/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.worker
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.worker/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.worker/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.worker/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.worker/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.worker/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.worker/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.worker/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.client/innoSetup/client/lib
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.client/innoSetup/client/lib
     [copy] Copying 11 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0
     [copy] Copying 6 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/apptest

ganglia:

install:
     [echo] 
     [echo]       Installation done
     [echo]     

BUILD SUCCESSFUL
Total time: 9 seconds</msg>
<status status="PASS" endtime="20170903 17:06:48.664" starttime="20170903 17:06:48.663"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${compile_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170903 17:06:48.665" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170903 17:06:48.665" starttime="20170903 17:06:48.664"></status>
</kw>
<kw name="Get Lines Containing String" library="String">
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<arguments>
<arg>${compile_result.stdout}</arg>
<arg>BUILD SUCCESSFUL</arg>
</arguments>
<assign>
<var>${extract_build_successful}</var>
</assign>
<msg timestamp="20170903 17:06:48.666" level="INFO">3 out of 516 lines matched</msg>
<msg timestamp="20170903 17:06:48.666" level="INFO">${extract_build_successful} = BUILD SUCCESSFUL
BUILD SUCCESSFUL
BUILD SUCCESSFUL</msg>
<status status="PASS" endtime="20170903 17:06:48.666" starttime="20170903 17:06:48.665"></status>
</kw>
<kw name="Get Line Count" library="String">
<doc>Returns and logs the number of lines in the given string.</doc>
<arguments>
<arg>${extract_build_successful}</arg>
</arguments>
<assign>
<var>${line_count_build_successful}</var>
</assign>
<msg timestamp="20170903 17:06:48.666" level="INFO">3 lines</msg>
<msg timestamp="20170903 17:06:48.666" level="INFO">${line_count_build_successful} = 3</msg>
<status status="PASS" endtime="20170903 17:06:48.666" starttime="20170903 17:06:48.666"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${line_count_build_successful}</arg>
<arg>3</arg>
</arguments>
<msg timestamp="20170903 17:06:48.667" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170903 17:06:48.667" starttime="20170903 17:06:48.666"></status>
</kw>
<status status="PASS" endtime="20170903 17:06:48.667" starttime="20170903 17:01:09.848"></status>
</kw>
<kw name="Install XWtremWeb" library="XWCommon">
<kw name="List Directories In Directory" library="OperatingSystem">
<doc>Wrapper for `List Directory` that returns only directories.</doc>
<arguments>
<arg>${DIST_PATH}</arg>
<arg>xwhep-*</arg>
<arg>absolute</arg>
</arguments>
<assign>
<var>@{list_directories_dist_path}</var>
</assign>
<msg timestamp="20170903 17:06:48.668" html="yes" level="INFO">Listing contents of directory '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist&lt;/a&gt;'.</msg>
<msg timestamp="20170903 17:06:48.673" level="INFO">1 directory:
/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0</msg>
<msg timestamp="20170903 17:06:48.674" level="INFO">@{list_directories_dist_path} = [ /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0 ]</msg>
<status status="PASS" endtime="20170903 17:06:48.674" starttime="20170903 17:06:48.667"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>@{list_directories_dist_path}[0]</arg>
</arguments>
<msg timestamp="20170903 17:06:48.674" level="INFO">/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0</msg>
<status status="PASS" endtime="20170903 17:06:48.674" starttime="20170903 17:06:48.674"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}</arg>
<arg>@{list_directories_dist_path}[0]</arg>
</arguments>
<msg timestamp="20170903 17:06:48.675" level="INFO">${DIST_XWHEP_PATH} = /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0</msg>
<status status="PASS" endtime="20170903 17:06:48.675" starttime="20170903 17:06:48.675"></status>
</kw>
<kw name="Directory Should Exist" library="OperatingSystem">
<doc>Fails unless the given path points to an existing directory.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}</arg>
</arguments>
<msg timestamp="20170903 17:06:48.676" html="yes" level="INFO">Directory '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0&lt;/a&gt;' exists.</msg>
<status status="PASS" endtime="20170903 17:06:48.676" starttime="20170903 17:06:48.675"></status>
</kw>
<kw name="Create XWCONFIGURE.VALUES FILE" library="XWCommon">
<arguments>
<arg>${DIST_XWHEP_PATH}</arg>
</arguments>
<kw name="Directory Should Exist" library="OperatingSystem">
<doc>Fails unless the given path points to an existing directory.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf</arg>
</arguments>
<msg timestamp="20170903 17:06:48.677" html="yes" level="INFO">Directory '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf&lt;/a&gt;' exists.</msg>
<status status="PASS" endtime="20170903 17:06:48.677" starttime="20170903 17:06:48.677"></status>
</kw>
<kw name="Remove File" library="OperatingSystem">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
</arguments>
<msg timestamp="20170903 17:06:48.680" html="yes" level="INFO">File '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;' does not exist.</msg>
<status status="PASS" endtime="20170903 17:06:48.680" starttime="20170903 17:06:48.677"></status>
</kw>
<kw name="Create File" library="OperatingSystem">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
</arguments>
<msg timestamp="20170903 17:06:48.682" html="yes" level="INFO">Created file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170903 17:06:48.682" starttime="20170903 17:06:48.681"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>XWUSER='${XWCONFIGURE.VALUES.XWUSER}'\n</arg>
</arguments>
<msg timestamp="20170903 17:06:48.683" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170903 17:06:48.684" starttime="20170903 17:06:48.682"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>DBVENDOR='${XWCONFIGURE.VALUES.DBVENDOR}'\n</arg>
</arguments>
<msg timestamp="20170903 17:06:48.686" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170903 17:06:48.686" starttime="20170903 17:06:48.685"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>DBENGINE='${XWCONFIGURE.VALUES.DBENGINE}'\n</arg>
</arguments>
<msg timestamp="20170903 17:06:48.688" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170903 17:06:48.688" starttime="20170903 17:06:48.686"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>DBHOST='${XWCONFIGURE.VALUES.DBHOST}'\n</arg>
</arguments>
<msg timestamp="20170903 17:06:48.690" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170903 17:06:48.690" starttime="20170903 17:06:48.688"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>DBADMINLOGIN='${XWCONFIGURE.VALUES.DBADMINLOGIN}'\n</arg>
</arguments>
<msg timestamp="20170903 17:06:48.691" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170903 17:06:48.691" starttime="20170903 17:06:48.690"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>DBADMINPASSWORD='${XWCONFIGURE.VALUES.DBADMINPASSWORD}'\n</arg>
</arguments>
<msg timestamp="20170903 17:06:48.692" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170903 17:06:48.693" starttime="20170903 17:06:48.691"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>DBNAME='${XWCONFIGURE.VALUES.DBNAME}'\n</arg>
</arguments>
<msg timestamp="20170903 17:06:48.694" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170903 17:06:48.694" starttime="20170903 17:06:48.693"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>DBUSERLOGIN='${XWCONFIGURE.VALUES.DBUSERLOGIN}'\n</arg>
</arguments>
<msg timestamp="20170903 17:06:48.696" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170903 17:06:48.696" starttime="20170903 17:06:48.694"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>DBUSERPASSWORD='${XWCONFIGURE.VALUES.DBUSERPASSWORD}'\n</arg>
</arguments>
<msg timestamp="20170903 17:06:48.697" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170903 17:06:48.697" starttime="20170903 17:06:48.696"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>XWADMINLOGIN='${XWCONFIGURE.VALUES.XWADMINLOGIN}'\n</arg>
</arguments>
<msg timestamp="20170903 17:06:48.699" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170903 17:06:48.699" starttime="20170903 17:06:48.698"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>XWADMINPASSWORD='${XWCONFIGURE.VALUES.XWADMINPASSWORD}'\n</arg>
</arguments>
<msg timestamp="20170903 17:06:48.701" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170903 17:06:48.701" starttime="20170903 17:06:48.699"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>XWWORKERLOGIN='${XWCONFIGURE.VALUES.XWWORKERLOGIN}'\n</arg>
</arguments>
<msg timestamp="20170903 17:06:48.702" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170903 17:06:48.702" starttime="20170903 17:06:48.701"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>XWWORKERPASSWORD='${XWCONFIGURE.VALUES.XWWORKERPASSWORD}'\n</arg>
</arguments>
<msg timestamp="20170903 17:06:48.706" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170903 17:06:48.706" starttime="20170903 17:06:48.702"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>XWSERVER='${XWCONFIGURE.VALUES.XWSERVER}'\n</arg>
</arguments>
<msg timestamp="20170903 17:06:48.710" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170903 17:06:48.710" starttime="20170903 17:06:48.706"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>CERTCN='${XWCONFIGURE.VALUES.CERTCN}'\n</arg>
</arguments>
<msg timestamp="20170903 17:06:48.712" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170903 17:06:48.712" starttime="20170903 17:06:48.710"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>CERTOU='${XWCONFIGURE.VALUES.CERTOU}'\n</arg>
</arguments>
<msg timestamp="20170903 17:06:48.713" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170903 17:06:48.713" starttime="20170903 17:06:48.712"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>CERTO='${XWCONFIGURE.VALUES.CERTO}'\n</arg>
</arguments>
<msg timestamp="20170903 17:06:48.715" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170903 17:06:48.715" starttime="20170903 17:06:48.713"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>CERTL='${XWCONFIGURE.VALUES.CERTL}'\n</arg>
</arguments>
<msg timestamp="20170903 17:06:48.716" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170903 17:06:48.716" starttime="20170903 17:06:48.715"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>CERTC='${XWCONFIGURE.VALUES.CERTC}'\n</arg>
</arguments>
<msg timestamp="20170903 17:06:48.718" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170903 17:06:48.718" starttime="20170903 17:06:48.717"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>CERTC='${XWCONFIGURE.VALUES.CERTC}'\n</arg>
</arguments>
<msg timestamp="20170903 17:06:48.719" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170903 17:06:48.719" starttime="20170903 17:06:48.718"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>SSLKEYPASSPHRASE='${XWCONFIGURE.VALUES.SSLKEYPASSPHRASE}'\n</arg>
</arguments>
<msg timestamp="20170903 17:06:48.721" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170903 17:06:48.721" starttime="20170903 17:06:48.720"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>SSLKEYSERVERPASSWORD='${XWCONFIGURE.VALUES.SSLKEYSERVERPASSWORD}'\n</arg>
</arguments>
<msg timestamp="20170903 17:06:48.722" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170903 17:06:48.722" starttime="20170903 17:06:48.721"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>SSLKEYWORKERPASSWORD='${XWCONFIGURE.VALUES.SSLKEYWORKERPASSWORD}'\n</arg>
</arguments>
<msg timestamp="20170903 17:06:48.724" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170903 17:06:48.724" starttime="20170903 17:06:48.722"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>SSLKEYCLIENTPASSWORD='${XWCONFIGURE.VALUES.SSLKEYCLIENTPASSWORD}'\n</arg>
</arguments>
<msg timestamp="20170903 17:06:48.725" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170903 17:06:48.725" starttime="20170903 17:06:48.724"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>X509CERTDIR='${XWCONFIGURE.VALUES.X509CERTDIR}'\n</arg>
</arguments>
<msg timestamp="20170903 17:06:48.727" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170903 17:06:48.727" starttime="20170903 17:06:48.726"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>USERCERTDIR='${XWCONFIGURE.VALUES.USERCERTDIR}'\n</arg>
</arguments>
<msg timestamp="20170903 17:06:48.729" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170903 17:06:48.729" starttime="20170903 17:06:48.727"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>XWUPGRADEURL='${XWCONFIGURE.VALUES.XWUPGRADEURL}'\n</arg>
</arguments>
<msg timestamp="20170903 17:06:48.730" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170903 17:06:48.730" starttime="20170903 17:06:48.729"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>HTTPSPORT='${XWCONFIGURE.VALUES.HTTPSPORT}'\n</arg>
</arguments>
<msg timestamp="20170903 17:06:48.732" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170903 17:06:48.732" starttime="20170903 17:06:48.731"></status>
</kw>
<kw name="Log File" library="OperatingSystem">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
</arguments>
<msg timestamp="20170903 17:06:48.733" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<msg timestamp="20170903 17:06:48.734" level="INFO">XWUSER='root'
DBVENDOR='mysql'
DBENGINE='InnoDB'
DBHOST='localhost'
DBADMINLOGIN='root'
DBADMINPASSWORD='root'
DBNAME='xtremweb'
DBUSERLOGIN='xwuser'
DBUSERPASSWORD='xwuser'
XWADMINLOGIN='admin'
XWADMINPASSWORD='admin'
XWWORKERLOGIN='worker'
XWWORKERPASSWORD='worker'
XWSERVER='localhost'
CERTCN='localhost'
CERTOU='MrRobotFramework'
CERTO='MrRobotFramework'
CERTL='MrRobotFramework'
CERTC='fr'
CERTC='fr'
SSLKEYPASSPHRASE='MrRobotFramework'
SSLKEYSERVERPASSWORD='MrRobotFramework'
SSLKEYWORKERPASSWORD='MrRobotFramework'
SSLKEYCLIENTPASSWORD='MrRobotFramework'
X509CERTDIR='/tmp/castore'
USERCERTDIR=''
XWUPGRADEURL='http://localhost:8080/somewhere/xtremweb.jar'
HTTPSPORT='9443'
</msg>
<status status="PASS" endtime="20170903 17:06:48.734" starttime="20170903 17:06:48.732"></status>
</kw>
<status status="PASS" endtime="20170903 17:06:48.734" starttime="20170903 17:06:48.676"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd ${DIST_XWHEP_PATH} &amp;&amp; ./bin/xwconfigure --yes --nopkg --rmdb</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${install_result}</var>
</assign>
<msg timestamp="20170903 17:06:48.735" level="INFO">Starting process:
cd /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0 &amp;&amp; ./bin/xwconfigure --yes --nopkg --rmdb</msg>
<msg timestamp="20170903 17:06:48.739" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170903 17:07:26.270" level="INFO">Process completed.</msg>
<msg timestamp="20170903 17:07:26.270" level="INFO">${install_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170903 17:07:26.270" starttime="20170903 17:06:48.735"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${install_result.stdout}</arg>
</arguments>
<msg timestamp="20170903 17:07:26.271" level="INFO">
--------------------------------------------------
         XtremWeb-HEP 10.6.0 
         XWConfigurator

This script helps to configure an XtremWeb-HEP deployment 
--------------------------------------------------

This script aims to :
 - install a new database: Since 9.1. MySQL (http://www.mysql.com/) only is supported
 - creates electronic keys : 
   * server private key
   * client key store including server public key
   * worker key store including server public key
 - prepare installers
   * Win32 InnoSetup project (http://www.jrsoftware.org/isinfo.php)
   * Mac OS X Package Maker projects (http:/www.apple.com)
   * Linux RPM (http://www.rpm.org)
   * Linux Debian package (http://www.debian.org)

In order to complete configuration, several informations are needed :
 -1- MySQL administrator account (login and password)
     =&gt; If you don't know it, please ask your system administrator
 -1.1- Database server, if using MySQL
     =&gt; The name or IP address of your MySQL server
 -1.2- Database name
     =&gt; If you don't have a valid MySQL administrator account, you won't be able to perform this
     =&gt; In such a case, please ask your system administrator to create one new empty database for us
 -1.3- Database user (login and password), if using MySQL
     =&gt; This account must have insert/update/delete privileges to the previous database
     =&gt; This account will be used by the XW server to access database
     =&gt; If you don't have a valid MySQL administrator account, you won't be able to perform this
     =&gt; In such a case, please ask your system administrator to create one for you
 -2- Electronic key passphrase
     =&gt; This is free and up to you
 -3- Electronic key password for the server
     =&gt; This is free and up to you
 -4- Electronic key password for the worker
     =&gt; This is free and up to you
 -5- Electronic key password for the client
     =&gt; This is free and up to you

All informations are stored in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values
So that, you can stop this script when you want, and don't have to re-enter all informations

To reset any variable, edit or erase /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values

You should be aware that /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values stores some critical informations!!!

-----------------------------

DB vendor set to 'mysql'
DB engine set to 'InnoDB'
***************************************
 No electronic key found               
 Will generate self signed certificate 
***************************************
Upgrade URL is localhost : I guess this is for testing only...
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Can't download xtremweb.jar from 'http://localhost:8080/somewhere/xtremweb.jar'
You will have to ensure that xtremweb.jar can be downloaded from 'http://localhost:8080/somewhere/xtremweb.jar'
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

You entered :
**** Account to run the middleware : 
     USER                 = 'root'
**** Database configuration : 
     DBVENDOR             = 'mysql'
     DBENGINE             = 'InnoDB'
     DBHOST               = 'localhost'
     DBNAME               = 'xtremweb'
     DBADMINLOGIN         = 'root'
     DBADMINPASSWORD      = 'root'
     DBUSERLOGIN          = 'xwuser'
     DBUSERPASSWORD       = 'xwuser'
**** XtremWeb-HEP administrator client configuration : 
     XWADMINLOGIN         = 'admin'
     XWADMINPASSWORD      = 'admin'
**** XtremWeb-HEP public worker configuration : 
     XWWORKERLOGIN        = 'worker'
     XWWORKERPASSWORD     = 'worker'
**** XtremWeb-HEP server configuration : 
     XWSERVER             = 'localhost'
     XWUPGRADEURL         = 'http://localhost:8080/somewhere/xtremweb.jar'
**** CA certificates path : 
     X509CERTDIR          = '/tmp/castore'
**** Certificate configuration : 
     Keys found           = ''
     SSLKEYPASSPHRASE     = 'MrRobotFramework'
     SSLKEYCLIENTPASSWORD = 'MrRobotFramework'
     SSLKEYSERVERPASSWORD = 'MrRobotFramework'
     SSLKEYWORKERPASSWORD = 'MrRobotFramework'
     Common Name          = 'localhost'
     Organisation Unit    = 'MrRobotFramework'
     Organization Name    = 'MrRobotFramework'
     Locality Name        = 'MrRobotFramework'
     Country              = 'fr'

Database schema 'xtremweb' exists : DB reset forced
Resetting database schema 'xtremweb'
Preparing database script............Done
Preparing database schema 'xtremweb'
DB engine for 'xtremweb' is InnoDB :  Creating foreign keys for live tables ...
Creating DB triggers using xwhep-core-tables-create-triggers-for-data-coming-from-8.sql ...

Table "users"

Table "hosts"

Table "datas"

Table "works"

Table "tasks"

Table "apps"
Creating DB triggers using xwhep-core-tables-create-triggers-for-history-coming-from-8.sql ...

Table "users_history"

Table "hosts_history"

Table "datas_history"

Table "works_history"

Table "tasks_history"

Table "apps_history"
Create the SQL script for the creation of DB views in the current schema ...
Create the SQL script for the creation of DB users views in the current schema ...
Creating DB views using xwhep-core-tables-create-views-for-tables.sql ...
Creating DB views using xwhep-core-tables-create-users-views.sql ...
Creating DB views using xwhep-core-tables-create-views-for-sessions-and-groups.sql ...
Creating DB views using xwhep-core-tables-create-views-for-relationships.sql ...
Creating DB views using xwhep-core-tables-create-views-for-offering-and-billing.sql ...
Creating DB views using xwhep-core-tables-create-views-hosts-matching-works.sql ...
Granting access to DB schema 'xtremweb' ...
Database schema 'xtremweb' : checking compliance to '05.7.3'
Database schema 'xtremweb' : is compliant to 05.7.3
Database schema 'xtremweb' : checking compliance to '05.8.0'
Database schema 'xtremweb' : is compliant to 05.8.0
Database schema 'xtremweb' : checking compliance to '06.0.1'
Database schema 'xtremweb' : is compliant to 06.0.1
Database schema 'xtremweb' : checking compliance to '07.0.0'
Database schema 'xtremweb' : is compliant to 07.0.0
Database schema 'xtremweb' : checking compliance to '07.2.0'
Database schema 'xtremweb' : is compliant to 07.2.0
Database schema 'xtremweb' : checking compliance to '07.4.1'
Database schema 'xtremweb' : is compliant to 07.4.1
Database schema 'xtremweb' : checking compliance to '07.5.0'
Database schema 'xtremweb' : is compliant to 07.5.0
Database schema 'xtremweb' : checking compliance to '08.0.0'
Database schema 'xtremweb' : is compliant to 08.0.0
Database schema 'xtremweb' : checking compliance to '08.2.0'
Database schema 'xtremweb' : is compliant to 08.2.0
Database schema 'xtremweb' : checking compliance to '08.3.1'
Database schema 'xtremweb' : is compliant to 08.3.1
Database schema 'xtremweb' : checking compliance to '09.1.0'
Database schema 'xtremweb' : is compliant to 09.1.0
Database schema 'xtremweb' : checking compliance to '10.0.0'
Database schema 'xtremweb' : is compliant to 10.0.0
Database schema 'xtremweb' : checking compliance to '10.2.0'
Database schema 'xtremweb' : is compliant to 10.2.0
Database schema 'xtremweb' : checking compliance to '10.6.0'
Database schema 'xtremweb' : is not compliant to '10.6.0'; updating
10.6.0 is compliant, dont worry
10.6.0 is compliant, dont worry
Database schema 'xtremweb' : updated to '10.6.0'
Set current version to '10.6.0'
Setting the account to run the middleware to 'root'..........................Done
Preparing server configuration file '/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf'................. Done
Preparing xtremweb.ganglia...Done
Generating script to manage keystores (/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/xwhepgenkeys)  Done
Generating script to manage OpenId server certificates (/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/xwhepupdateopenidcerts) Done
Preparing worker configuration file '/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf'.... Done
Copying worker configuration file /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.worker/installer/PckRoot/private/etc/xwhep.worker/conf/xtremweb.worker.conf
Copying worker configuration file /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/innoSetup/worker/conf/xtremweb.worker.conf
Done
Preparing client configuration file '/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.client.conf'...Done
Copying client configuration file /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.client.conf to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.client/innoSetup/client/conf/xtremweb.client.conf
****************************************************************************************
Done
[Sun Sep  3 17:06:51 UTC 2017] xwhepgenkeys - [INFO] : Generating server keystore file /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/../keystore/xwhepserver.keys
[Sun Sep  3 17:06:51 UTC 2017] xwhepgenkeys - [INFO] : No certificate found; creating self signed ones

Keystore type: JKS
Keystore provider: SUN

Your keystore contains 1 entry

localhost, Sep 3, 2017, PrivateKeyEntry, 
Certificate fingerprint (SHA1): 33:68:05:CA:E4:7A:BC:ED:3C:88:BA:A7:E2:AC:E4:7C:8C:3A:4F:03
Owner: CN=localhost, O=MrRobotFramework, C=fr, OU=MrRobotFramework, L=MrRobotFramework
Issuer: CN=localhost, O=MrRobotFramework, C=fr, OU=MrRobotFramework, L=MrRobotFramework
Serial number: 4531723d
Valid from: Sun Sep 03 17:06:52 UTC 2017 until: Mon Sep 03 17:06:52 UTC 2018
Certificate fingerprints:
	 MD5:  59:EB:E6:1E:8E:A5:D9:57:F0:AC:9B:11:8D:B4:7B:7F
	 SHA1: 33:68:05:CA:E4:7A:BC:ED:3C:88:BA:A7:E2:AC:E4:7C:8C:3A:4F:03
	 SHA256: 58:30:76:42:E4:95:44:61:72:1A:A9:6D:21:99:4D:6D:FB:F4:8F:C7:2F:5C:62:0A:B3:3D:41:0F:59:80:1D:4D
	 Signature algorithm name: SHA256withRSA
	 Version: 3

Extensions: 

#1: ObjectId: 2.5.29.14 Criticality=false
SubjectKeyIdentifier [
KeyIdentifier [
0000: 39 E9 9C DC EB 9B A4 EA   A8 E8 2B 7F 89 45 B3 07  9.........+..E..
0010: 3B 03 42 16                                        ;.B.
]
]

[Sun Sep  3 17:06:53 UTC 2017] xwhepgenkeys - [INFO] : Generating worker keystore file /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/../keystore/xwhepworker.keys
[Sun Sep  3 17:06:53 UTC 2017] xwhepgenkeys - [INFO] : Importing server public key into worker keystore (/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/../keystore/xwhepworker.keys)

Keystore type: JKS
Keystore provider: SUN

Your keystore contains 2 entries

xtremweb-hep.worker.20170903170651, Sep 3, 2017, PrivateKeyEntry, 
Certificate fingerprint (SHA1): 5F:72:42:BC:9A:51:B2:03:89:F1:61:9C:F3:F2:FC:47:6E:E7:4C:47
localhost, Sep 3, 2017, trustedCertEntry, 
Certificate fingerprint (SHA1): 33:68:05:CA:E4:7A:BC:ED:3C:88:BA:A7:E2:AC:E4:7C:8C:3A:4F:03
[Sun Sep  3 17:06:54 UTC 2017] xwhepgenkeys - [INFO] : Generating client keystore file /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/../keystore/xwhepclient.keys
[Sun Sep  3 17:06:54 UTC 2017] xwhepgenkeys - [INFO] : Importing server public key into client keystore (/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/../keystore/xwhepworker.keys)

Keystore type: JKS
Keystore provider: SUN

Your keystore contains 2 entries

localhost, Sep 3, 2017, trustedCertEntry, 
Certificate fingerprint (SHA1): 33:68:05:CA:E4:7A:BC:ED:3C:88:BA:A7:E2:AC:E4:7C:8C:3A:4F:03
xtremweb-hep.client.20170903170651, Sep 3, 2017, PrivateKeyEntry, 
Certificate fingerprint (SHA1): D0:6E:D5:93:1B:48:42:89:F9:00:03:7B:E9:1F:BF:82:23:E1:38:55
[Sun Sep  3 17:06:55 UTC 2017] xwhepgenkeys - [INFO] : Signing jar file /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/../lib/xtremweb.jar
jar signed.

Warning: 
No -tsa or -tsacert is provided and this jar is not timestamped. Without a timestamp, users may not be able to validate this jar after the signer certificate's expiration date (2018-09-03) or after any future revocation date.

jar verified.

Warning: 
This jar contains signatures that does not include a timestamp. Without a timestamp, users may not be able to validate this jar after the signer certificate's expiration date (2018-09-03) or after any future revocation date.

Re-run with the -verbose and -certs options for more details.
[Sun Sep  3 17:06:56 UTC 2017] xwhepgenkeys - [INFO] : Done
GKRC=0
*******************
Keystores generated
*******************
Inserting known OpenId servers certificate paths into server keystore
 - google
 - yahoo
 - facebook
keytool error: java.io.FileNotFoundException: www.yahoo.com_0.pem (No such file or directory)
keytool error: java.io.FileNotFoundException: www.yahoo.com_1.pem (No such file or directory)
keytool error: java.io.FileNotFoundException: www.yahoo.com_2.pem (No such file or directory)
keytool error: java.io.FileNotFoundException: www.google.com_0.pem (No such file or directory)
keytool error: java.io.FileNotFoundException: www.google.com_1.pem (No such file or directory)
keytool error: java.io.FileNotFoundException: www.facebook.com_0.pem (No such file or directory)
keytool error: java.io.FileNotFoundException: www.facebook.com_1.pem (No such file or directory)
*******************
ERROR : can't insert OpenID server certificates into XWHEP server keystore
*******************

Preparing  client package to '/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/xwhep.client'.....Done
Copying client configuration file /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/xwhep.client/10.6.0/conf/xtremweb.client.conf.template to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.client/installer/PckRoot/Applications/xwhep.client/conf/xtremweb.client.conf
 Done

Preparing server RPM package to '/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.server'.... Done

Preparing server configuration RPM package to '/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.server.conf'.... Done

Preparing server Debian package
Server Debian package ready

Preparing server configuration Debian package
Server Configuration Debian package ready
Preparing DG to SG bridge RPM package to '/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.bridgedgsg'............ Done

Preparing bridgedgsg Debian package
Bridgedgsg Debian package ready
Preparing SG to DG bridge RPM package to '/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.bridgesgdg'........ Done

Preparing bridgesgdg Debian package
Bridgesgdg Debian package ready
Preparing client RPM package to '/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.client'.... Done

Preparing client Debian package
Client Debian package ready

Preparing worker RPM package to '/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.worker'.... Done

Preparing worker Debian package
Worker Debian package ready

&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;
! Everything is now prepared !
&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;

Available packages :
  * server
   - RedHat RPM  in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.server
   - Debian DPKG in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.server
   - Apple  PKG  in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.server

  * Desktop Grid to Service Grid bridge
   - RedHat RPM  in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.bridgedgsg
   - Debian DPKG in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.bridgedgsg

  * Service Grid to Desktop Grid bridge
   - RedHat RPM  in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.bridgesgdg
   - Debian DPKG in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.bridgesgdg

  * client
   - RedHat RPM  in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.client
   - Debian DPKG in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.client
   - Apple  PKG  in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.client
   - Windows installer  in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.client/innoSetup
                        (http://www.innosetup.com/isinfo.php)

  * worker
   - RedHat  RPM        in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.worker
   - Debian  DPKG       in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.worker
   - Apple   PKG        in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.worker
   - Windows installer  in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/innoSetup
                        (http://www.innosetup.com/isinfo.php)

  * client
   - Zip file (platform independant)  in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/xwhep-client-10.6.0.zip


You can manually :
  * start the server
   - ./bin/../bin/xwhep.server console
  * start a worker
   - ./bin/../bin/xwhep.worker console
  * as soon as your server is started you can use the client
   - ./bin/../bin/xwworkers : if you have started a worker, it is in the list
   - ./bin/../bin/xwusers
   - ./bin/../bin/xwapps
   - etc.

As soon as everything is ok you should :
  * install you server using its packages
  * deploy worker over your own volunteer PCs using its packages
  * install your worker packages on any of your web sites
    if you wish to enable anonymous volunteer power
  * install your client ZIP file on any of your web sites
    to allow registered users to use the platform

That's all folks
</msg>
<status status="PASS" endtime="20170903 17:07:26.272" starttime="20170903 17:07:26.271"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${install_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170903 17:07:26.273" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170903 17:07:26.273" starttime="20170903 17:07:26.272"></status>
</kw>
<kw name="Get Lines Containing String" library="String">
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<arguments>
<arg>${install_result.stdout}</arg>
<arg>That's all folks</arg>
</arguments>
<assign>
<var>${install_result_successful}</var>
</assign>
<msg timestamp="20170903 17:07:26.274" level="INFO">1 out of 357 lines matched</msg>
<msg timestamp="20170903 17:07:26.274" level="INFO">${install_result_successful} = That's all folks</msg>
<status status="PASS" endtime="20170903 17:07:26.274" starttime="20170903 17:07:26.273"></status>
</kw>
<kw name="Get Line Count" library="String">
<doc>Returns and logs the number of lines in the given string.</doc>
<arguments>
<arg>${install_result_successful}</arg>
</arguments>
<assign>
<var>${line_install_result_successful}</var>
</assign>
<msg timestamp="20170903 17:07:26.275" level="INFO">1 lines</msg>
<msg timestamp="20170903 17:07:26.275" level="INFO">${line_install_result_successful} = 1</msg>
<status status="PASS" endtime="20170903 17:07:26.275" starttime="20170903 17:07:26.275"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${line_install_result_successful}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20170903 17:07:26.276" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170903 17:07:26.277" starttime="20170903 17:07:26.276"></status>
</kw>
<status status="PASS" endtime="20170903 17:07:26.277" starttime="20170903 17:06:48.667"></status>
</kw>
<kw name="Ping XWtremWeb Database" library="XWServer">
<kw name="Xtremweb Tables Must Exist" library="MySql">
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170903 17:07:26.325" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170903 17:07:26.328" starttime="20170903 17:07:26.279"></status>
</kw>
<status status="PASS" endtime="20170903 17:07:26.328" starttime="20170903 17:07:26.278"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>appTypes</arg>
</arguments>
<msg timestamp="20170903 17:07:26.329" level="INFO">Executing : Table Must Exist  |  appTypes </msg>
<msg timestamp="20170903 17:07:26.329" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='appTypes' </msg>
<status status="PASS" endtime="20170903 17:07:26.332" starttime="20170903 17:07:26.328"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps</arg>
</arguments>
<msg timestamp="20170903 17:07:26.333" level="INFO">Executing : Table Must Exist  |  apps </msg>
<msg timestamp="20170903 17:07:26.333" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='apps' </msg>
<status status="PASS" endtime="20170903 17:07:26.334" starttime="20170903 17:07:26.333"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps_history</arg>
</arguments>
<msg timestamp="20170903 17:07:26.335" level="INFO">Executing : Table Must Exist  |  apps_history </msg>
<msg timestamp="20170903 17:07:26.335" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='apps_history' </msg>
<status status="PASS" endtime="20170903 17:07:26.336" starttime="20170903 17:07:26.335"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>cpuTypes</arg>
</arguments>
<msg timestamp="20170903 17:07:26.336" level="INFO">Executing : Table Must Exist  |  cpuTypes </msg>
<msg timestamp="20170903 17:07:26.336" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='cpuTypes' </msg>
<status status="PASS" endtime="20170903 17:07:26.338" starttime="20170903 17:07:26.336"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>dataTypes</arg>
</arguments>
<msg timestamp="20170903 17:07:26.338" level="INFO">Executing : Table Must Exist  |  dataTypes </msg>
<msg timestamp="20170903 17:07:26.338" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='dataTypes' </msg>
<status status="PASS" endtime="20170903 17:07:26.339" starttime="20170903 17:07:26.338"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas</arg>
</arguments>
<msg timestamp="20170903 17:07:26.339" level="INFO">Executing : Table Must Exist  |  datas </msg>
<msg timestamp="20170903 17:07:26.339" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='datas' </msg>
<status status="PASS" endtime="20170903 17:07:26.341" starttime="20170903 17:07:26.339"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas_history</arg>
</arguments>
<msg timestamp="20170903 17:07:26.341" level="INFO">Executing : Table Must Exist  |  datas_history </msg>
<msg timestamp="20170903 17:07:26.341" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='datas_history' </msg>
<status status="PASS" endtime="20170903 17:07:26.343" starttime="20170903 17:07:26.341"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables</arg>
</arguments>
<msg timestamp="20170903 17:07:26.344" level="INFO">Executing : Table Must Exist  |  executables </msg>
<msg timestamp="20170903 17:07:26.344" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='executables' </msg>
<status status="PASS" endtime="20170903 17:07:26.345" starttime="20170903 17:07:26.343"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables_history</arg>
</arguments>
<msg timestamp="20170903 17:07:26.346" level="INFO">Executing : Table Must Exist  |  executables_history </msg>
<msg timestamp="20170903 17:07:26.346" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='executables_history' </msg>
<status status="PASS" endtime="20170903 17:07:26.347" starttime="20170903 17:07:26.345"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups</arg>
</arguments>
<msg timestamp="20170903 17:07:26.347" level="INFO">Executing : Table Must Exist  |  groups </msg>
<msg timestamp="20170903 17:07:26.347" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='groups' </msg>
<status status="PASS" endtime="20170903 17:07:26.348" starttime="20170903 17:07:26.347"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups_history</arg>
</arguments>
<msg timestamp="20170903 17:07:26.348" level="INFO">Executing : Table Must Exist  |  groups_history </msg>
<msg timestamp="20170903 17:07:26.349" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='groups_history' </msg>
<status status="PASS" endtime="20170903 17:07:26.349" starttime="20170903 17:07:26.348"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts</arg>
</arguments>
<msg timestamp="20170903 17:07:26.350" level="INFO">Executing : Table Must Exist  |  hosts </msg>
<msg timestamp="20170903 17:07:26.350" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='hosts' </msg>
<status status="PASS" endtime="20170903 17:07:26.351" starttime="20170903 17:07:26.350"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts_history</arg>
</arguments>
<msg timestamp="20170903 17:07:26.351" level="INFO">Executing : Table Must Exist  |  hosts_history </msg>
<msg timestamp="20170903 17:07:26.351" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='hosts_history' </msg>
<status status="PASS" endtime="20170903 17:07:26.352" starttime="20170903 17:07:26.351"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships</arg>
</arguments>
<msg timestamp="20170903 17:07:26.353" level="INFO">Executing : Table Must Exist  |  memberships </msg>
<msg timestamp="20170903 17:07:26.353" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='memberships' </msg>
<status status="PASS" endtime="20170903 17:07:26.354" starttime="20170903 17:07:26.353"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships_history</arg>
</arguments>
<msg timestamp="20170903 17:07:26.354" level="INFO">Executing : Table Must Exist  |  memberships_history </msg>
<msg timestamp="20170903 17:07:26.354" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='memberships_history' </msg>
<status status="PASS" endtime="20170903 17:07:26.356" starttime="20170903 17:07:26.354"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>oses</arg>
</arguments>
<msg timestamp="20170903 17:07:26.356" level="INFO">Executing : Table Must Exist  |  oses </msg>
<msg timestamp="20170903 17:07:26.356" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='oses' </msg>
<status status="PASS" endtime="20170903 17:07:26.357" starttime="20170903 17:07:26.356"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>packageTypes</arg>
</arguments>
<msg timestamp="20170903 17:07:26.358" level="INFO">Executing : Table Must Exist  |  packageTypes </msg>
<msg timestamp="20170903 17:07:26.358" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='packageTypes' </msg>
<status status="PASS" endtime="20170903 17:07:26.359" starttime="20170903 17:07:26.358"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions</arg>
</arguments>
<msg timestamp="20170903 17:07:26.359" level="INFO">Executing : Table Must Exist  |  sessions </msg>
<msg timestamp="20170903 17:07:26.359" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sessions' </msg>
<status status="PASS" endtime="20170903 17:07:26.360" starttime="20170903 17:07:26.359"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions_history</arg>
</arguments>
<msg timestamp="20170903 17:07:26.361" level="INFO">Executing : Table Must Exist  |  sessions_history </msg>
<msg timestamp="20170903 17:07:26.361" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sessions_history' </msg>
<status status="PASS" endtime="20170903 17:07:26.363" starttime="20170903 17:07:26.361"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes</arg>
</arguments>
<msg timestamp="20170903 17:07:26.363" level="INFO">Executing : Table Must Exist  |  sharedAppTypes </msg>
<msg timestamp="20170903 17:07:26.363" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedAppTypes' </msg>
<status status="PASS" endtime="20170903 17:07:26.365" starttime="20170903 17:07:26.363"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes_history</arg>
</arguments>
<msg timestamp="20170903 17:07:26.365" level="INFO">Executing : Table Must Exist  |  sharedAppTypes_history </msg>
<msg timestamp="20170903 17:07:26.365" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedAppTypes_history' </msg>
<status status="PASS" endtime="20170903 17:07:26.366" starttime="20170903 17:07:26.365"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes</arg>
</arguments>
<msg timestamp="20170903 17:07:26.368" level="INFO">Executing : Table Must Exist  |  sharedPackageTypes </msg>
<msg timestamp="20170903 17:07:26.368" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedPackageTypes' </msg>
<status status="PASS" endtime="20170903 17:07:26.369" starttime="20170903 17:07:26.367"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes_history</arg>
</arguments>
<msg timestamp="20170903 17:07:26.370" level="INFO">Executing : Table Must Exist  |  sharedPackageTypes_history </msg>
<msg timestamp="20170903 17:07:26.370" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedPackageTypes_history' </msg>
<status status="PASS" endtime="20170903 17:07:26.371" starttime="20170903 17:07:26.370"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>statuses</arg>
</arguments>
<msg timestamp="20170903 17:07:26.372" level="INFO">Executing : Table Must Exist  |  statuses </msg>
<msg timestamp="20170903 17:07:26.372" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='statuses' </msg>
<status status="PASS" endtime="20170903 17:07:26.373" starttime="20170903 17:07:26.371"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks</arg>
</arguments>
<msg timestamp="20170903 17:07:26.373" level="INFO">Executing : Table Must Exist  |  tasks </msg>
<msg timestamp="20170903 17:07:26.373" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='tasks' </msg>
<status status="PASS" endtime="20170903 17:07:26.374" starttime="20170903 17:07:26.373"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks_history</arg>
</arguments>
<msg timestamp="20170903 17:07:26.375" level="INFO">Executing : Table Must Exist  |  tasks_history </msg>
<msg timestamp="20170903 17:07:26.375" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='tasks_history' </msg>
<status status="PASS" endtime="20170903 17:07:26.376" starttime="20170903 17:07:26.374"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces</arg>
</arguments>
<msg timestamp="20170903 17:07:26.376" level="INFO">Executing : Table Must Exist  |  traces </msg>
<msg timestamp="20170903 17:07:26.376" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='traces' </msg>
<status status="PASS" endtime="20170903 17:07:26.377" starttime="20170903 17:07:26.376"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces_history</arg>
</arguments>
<msg timestamp="20170903 17:07:26.378" level="INFO">Executing : Table Must Exist  |  traces_history </msg>
<msg timestamp="20170903 17:07:26.378" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='traces_history' </msg>
<status status="PASS" endtime="20170903 17:07:26.380" starttime="20170903 17:07:26.378"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>userRights</arg>
</arguments>
<msg timestamp="20170903 17:07:26.382" level="INFO">Executing : Table Must Exist  |  userRights </msg>
<msg timestamp="20170903 17:07:26.383" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='userRights' </msg>
<status status="PASS" endtime="20170903 17:07:26.384" starttime="20170903 17:07:26.382"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups</arg>
</arguments>
<msg timestamp="20170903 17:07:26.384" level="INFO">Executing : Table Must Exist  |  usergroups </msg>
<msg timestamp="20170903 17:07:26.385" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='usergroups' </msg>
<status status="PASS" endtime="20170903 17:07:26.386" starttime="20170903 17:07:26.384"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups_history</arg>
</arguments>
<msg timestamp="20170903 17:07:26.386" level="INFO">Executing : Table Must Exist  |  usergroups_history </msg>
<msg timestamp="20170903 17:07:26.386" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='usergroups_history' </msg>
<status status="PASS" endtime="20170903 17:07:26.387" starttime="20170903 17:07:26.386"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users</arg>
</arguments>
<msg timestamp="20170903 17:07:26.387" level="INFO">Executing : Table Must Exist  |  users </msg>
<msg timestamp="20170903 17:07:26.387" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='users' </msg>
<status status="PASS" endtime="20170903 17:07:26.389" starttime="20170903 17:07:26.387"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users_history</arg>
</arguments>
<msg timestamp="20170903 17:07:26.389" level="INFO">Executing : Table Must Exist  |  users_history </msg>
<msg timestamp="20170903 17:07:26.390" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='users_history' </msg>
<status status="PASS" endtime="20170903 17:07:26.391" starttime="20170903 17:07:26.389"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>version</arg>
</arguments>
<msg timestamp="20170903 17:07:26.391" level="INFO">Executing : Table Must Exist  |  version </msg>
<msg timestamp="20170903 17:07:26.391" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='version' </msg>
<status status="PASS" endtime="20170903 17:07:26.392" starttime="20170903 17:07:26.391"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>versions</arg>
</arguments>
<msg timestamp="20170903 17:07:26.392" level="INFO">Executing : Table Must Exist  |  versions </msg>
<msg timestamp="20170903 17:07:26.392" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='versions' </msg>
<status status="PASS" endtime="20170903 17:07:26.393" starttime="20170903 17:07:26.392"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps</arg>
</arguments>
<msg timestamp="20170903 17:07:26.394" level="INFO">Executing : Table Must Exist  |  view_apps </msg>
<msg timestamp="20170903 17:07:26.394" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps' </msg>
<status status="PASS" endtime="20170903 17:07:26.395" starttime="20170903 17:07:26.393"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps_for_offering</arg>
</arguments>
<msg timestamp="20170903 17:07:26.395" level="INFO">Executing : Table Must Exist  |  view_apps_for_offering </msg>
<msg timestamp="20170903 17:07:26.395" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps_for_offering' </msg>
<status status="PASS" endtime="20170903 17:07:26.396" starttime="20170903 17:07:26.395"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps_for_offering_with_file_sizes</arg>
</arguments>
<msg timestamp="20170903 17:07:26.397" level="INFO">Executing : Table Must Exist  |  view_apps_for_offering_with_file_sizes </msg>
<msg timestamp="20170903 17:07:26.397" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps_for_offering_with_file_sizes' </msg>
<status status="PASS" endtime="20170903 17:07:26.398" starttime="20170903 17:07:26.397"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_datas</arg>
</arguments>
<msg timestamp="20170903 17:07:26.398" level="INFO">Executing : Table Must Exist  |  view_datas </msg>
<msg timestamp="20170903 17:07:26.398" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_datas' </msg>
<status status="PASS" endtime="20170903 17:07:26.399" starttime="20170903 17:07:26.398"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_executables</arg>
</arguments>
<msg timestamp="20170903 17:07:26.400" level="INFO">Executing : Table Must Exist  |  view_executables </msg>
<msg timestamp="20170903 17:07:26.400" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_executables' </msg>
<status status="PASS" endtime="20170903 17:07:26.401" starttime="20170903 17:07:26.400"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_groups</arg>
</arguments>
<msg timestamp="20170903 17:07:26.401" level="INFO">Executing : Table Must Exist  |  view_groups </msg>
<msg timestamp="20170903 17:07:26.401" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_groups' </msg>
<status status="PASS" endtime="20170903 17:07:26.402" starttime="20170903 17:07:26.401"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts</arg>
</arguments>
<msg timestamp="20170903 17:07:26.403" level="INFO">Executing : Table Must Exist  |  view_hosts </msg>
<msg timestamp="20170903 17:07:26.403" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts' </msg>
<status status="PASS" endtime="20170903 17:07:26.405" starttime="20170903 17:07:26.403"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_deployable</arg>
</arguments>
<msg timestamp="20170903 17:07:26.405" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_deployable </msg>
<msg timestamp="20170903 17:07:26.406" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_deployable' </msg>
<status status="PASS" endtime="20170903 17:07:26.407" starttime="20170903 17:07:26.405"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_deployable_and_shared</arg>
</arguments>
<msg timestamp="20170903 17:07:26.407" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_deployable_and_shared </msg>
<msg timestamp="20170903 17:07:26.407" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_deployable_and_shared' </msg>
<status status="PASS" endtime="20170903 17:07:26.409" starttime="20170903 17:07:26.407"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_shared</arg>
</arguments>
<msg timestamp="20170903 17:07:26.409" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_shared </msg>
<msg timestamp="20170903 17:07:26.409" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_shared' </msg>
<status status="PASS" endtime="20170903 17:07:26.410" starttime="20170903 17:07:26.409"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_sessions</arg>
</arguments>
<msg timestamp="20170903 17:07:26.411" level="INFO">Executing : Table Must Exist  |  view_sessions </msg>
<msg timestamp="20170903 17:07:26.411" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_sessions' </msg>
<status status="PASS" endtime="20170903 17:07:26.412" starttime="20170903 17:07:26.411"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_tasks</arg>
</arguments>
<msg timestamp="20170903 17:07:26.412" level="INFO">Executing : Table Must Exist  |  view_tasks </msg>
<msg timestamp="20170903 17:07:26.412" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_tasks' </msg>
<status status="PASS" endtime="20170903 17:07:26.413" starttime="20170903 17:07:26.412"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_traces</arg>
</arguments>
<msg timestamp="20170903 17:07:26.414" level="INFO">Executing : Table Must Exist  |  view_traces </msg>
<msg timestamp="20170903 17:07:26.414" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_traces' </msg>
<status status="PASS" endtime="20170903 17:07:26.415" starttime="20170903 17:07:26.414"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_usergroups</arg>
</arguments>
<msg timestamp="20170903 17:07:26.415" level="INFO">Executing : Table Must Exist  |  view_usergroups </msg>
<msg timestamp="20170903 17:07:26.415" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_usergroups' </msg>
<status status="PASS" endtime="20170903 17:07:26.417" starttime="20170903 17:07:26.415"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users</arg>
</arguments>
<msg timestamp="20170903 17:07:26.417" level="INFO">Executing : Table Must Exist  |  view_users </msg>
<msg timestamp="20170903 17:07:26.417" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users' </msg>
<status status="PASS" endtime="20170903 17:07:26.419" starttime="20170903 17:07:26.417"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_apps</arg>
</arguments>
<msg timestamp="20170903 17:07:26.419" level="INFO">Executing : Table Must Exist  |  view_users_apps </msg>
<msg timestamp="20170903 17:07:26.419" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_apps' </msg>
<status status="PASS" endtime="20170903 17:07:26.420" starttime="20170903 17:07:26.419"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_datas</arg>
</arguments>
<msg timestamp="20170903 17:07:26.420" level="INFO">Executing : Table Must Exist  |  view_users_datas </msg>
<msg timestamp="20170903 17:07:26.420" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_datas' </msg>
<status status="PASS" endtime="20170903 17:07:26.422" starttime="20170903 17:07:26.420"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_groups</arg>
</arguments>
<msg timestamp="20170903 17:07:26.422" level="INFO">Executing : Table Must Exist  |  view_users_groups </msg>
<msg timestamp="20170903 17:07:26.422" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_groups' </msg>
<status status="PASS" endtime="20170903 17:07:26.423" starttime="20170903 17:07:26.422"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_hosts</arg>
</arguments>
<msg timestamp="20170903 17:07:26.424" level="INFO">Executing : Table Must Exist  |  view_users_hosts </msg>
<msg timestamp="20170903 17:07:26.424" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_hosts' </msg>
<status status="PASS" endtime="20170903 17:07:26.425" starttime="20170903 17:07:26.423"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_sessions</arg>
</arguments>
<msg timestamp="20170903 17:07:26.425" level="INFO">Executing : Table Must Exist  |  view_users_sessions </msg>
<msg timestamp="20170903 17:07:26.425" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_sessions' </msg>
<status status="PASS" endtime="20170903 17:07:26.426" starttime="20170903 17:07:26.425"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_tasks</arg>
</arguments>
<msg timestamp="20170903 17:07:26.427" level="INFO">Executing : Table Must Exist  |  view_users_tasks </msg>
<msg timestamp="20170903 17:07:26.427" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_tasks' </msg>
<status status="PASS" endtime="20170903 17:07:26.428" starttime="20170903 17:07:26.426"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_traces</arg>
</arguments>
<msg timestamp="20170903 17:07:26.428" level="INFO">Executing : Table Must Exist  |  view_users_traces </msg>
<msg timestamp="20170903 17:07:26.428" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_traces' </msg>
<status status="PASS" endtime="20170903 17:07:26.430" starttime="20170903 17:07:26.428"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_usergroups</arg>
</arguments>
<msg timestamp="20170903 17:07:26.430" level="INFO">Executing : Table Must Exist  |  view_users_usergroups </msg>
<msg timestamp="20170903 17:07:26.430" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_usergroups' </msg>
<status status="PASS" endtime="20170903 17:07:26.431" starttime="20170903 17:07:26.430"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_users</arg>
</arguments>
<msg timestamp="20170903 17:07:26.431" level="INFO">Executing : Table Must Exist  |  view_users_users </msg>
<msg timestamp="20170903 17:07:26.431" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_users' </msg>
<status status="PASS" endtime="20170903 17:07:26.433" starttime="20170903 17:07:26.431"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_works</arg>
</arguments>
<msg timestamp="20170903 17:07:26.434" level="INFO">Executing : Table Must Exist  |  view_users_works </msg>
<msg timestamp="20170903 17:07:26.434" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_works' </msg>
<status status="PASS" endtime="20170903 17:07:26.435" starttime="20170903 17:07:26.433"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works</arg>
</arguments>
<msg timestamp="20170903 17:07:26.436" level="INFO">Executing : Table Must Exist  |  view_works </msg>
<msg timestamp="20170903 17:07:26.436" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works' </msg>
<status status="PASS" endtime="20170903 17:07:26.437" starttime="20170903 17:07:26.435"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works_for_billing</arg>
</arguments>
<msg timestamp="20170903 17:07:26.438" level="INFO">Executing : Table Must Exist  |  view_works_for_billing </msg>
<msg timestamp="20170903 17:07:26.438" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works_for_billing' </msg>
<status status="PASS" endtime="20170903 17:07:26.439" starttime="20170903 17:07:26.437"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works_for_billing_with_file_sizes</arg>
</arguments>
<msg timestamp="20170903 17:07:26.439" level="INFO">Executing : Table Must Exist  |  view_works_for_billing_with_file_sizes </msg>
<msg timestamp="20170903 17:07:26.439" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works_for_billing_with_file_sizes' </msg>
<status status="PASS" endtime="20170903 17:07:26.440" starttime="20170903 17:07:26.439"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works</arg>
</arguments>
<msg timestamp="20170903 17:07:26.440" level="INFO">Executing : Table Must Exist  |  works </msg>
<msg timestamp="20170903 17:07:26.440" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='works' </msg>
<status status="PASS" endtime="20170903 17:07:26.441" starttime="20170903 17:07:26.440"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works_history</arg>
</arguments>
<msg timestamp="20170903 17:07:26.442" level="INFO">Executing : Table Must Exist  |  works_history </msg>
<msg timestamp="20170903 17:07:26.442" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='works_history' </msg>
<status status="PASS" endtime="20170903 17:07:26.443" starttime="20170903 17:07:26.442"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170903 17:07:26.444" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170903 17:07:26.444" starttime="20170903 17:07:26.443"></status>
</kw>
<status status="PASS" endtime="20170903 17:07:26.444" starttime="20170903 17:07:26.443"></status>
</kw>
<status status="PASS" endtime="20170903 17:07:26.444" starttime="20170903 17:07:26.278"></status>
</kw>
<status status="PASS" endtime="20170903 17:07:26.444" starttime="20170903 17:07:26.277"></status>
</kw>
<kw name="Start XtremWeb Server" library="XWServer">
<arguments>
<arg>${DIST_XWHEP_PATH}</arg>
</arguments>
<kw name="File Should Exist" library="OperatingSystem">
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xtremweb.server.conf</arg>
</arguments>
<msg timestamp="20170903 17:07:26.448" html="yes" level="INFO">File '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf&lt;/a&gt;' exists.</msg>
<status status="PASS" endtime="20170903 17:07:26.448" starttime="20170903 17:07:26.445"></status>
</kw>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xtremweb.server.conf</arg>
</arguments>
<assign>
<var>${config_content}</var>
</assign>
<msg timestamp="20170903 17:07:26.449" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf&lt;/a&gt;'.</msg>
<msg timestamp="20170903 17:07:26.450" level="INFO">${config_content} = #
# Copyrights     : CNRS
# Author         : Oleg Lodygensky
# Acknowledgment : XtremWeb-HEP is based on XtremWeb 1.8.0 by inria : http://www.xtremweb.net/
# Web            : http://www.xtremweb-hep.o...</msg>
<status status="PASS" endtime="20170903 17:07:26.450" starttime="20170903 17:07:26.449"></status>
</kw>
<kw name="Remove String Using Regexp" library="String">
<doc>Removes ``patterns`` from the given ``string``.</doc>
<arguments>
<arg>${config_content}</arg>
<arg>LAUNCHERURL=${XWCONFIGURE.VALUES.XWUPGRADEURL}</arg>
</arguments>
<assign>
<var>${config_content_filtered}</var>
</assign>
<msg timestamp="20170903 17:07:26.451" level="INFO">${config_content_filtered} = #
# Copyrights     : CNRS
# Author         : Oleg Lodygensky
# Acknowledgment : XtremWeb-HEP is based on XtremWeb 1.8.0 by inria : http://www.xtremweb.net/
# Web            : http://www.xtremweb-hep.o...</msg>
<status status="PASS" endtime="20170903 17:07:26.451" starttime="20170903 17:07:26.450"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${config_content_filtered}</arg>
<arg>\## HTTPSPORT=443</arg>
<arg>HTTPSPORT=${XWCONFIGURE.VALUES.HTTPSPORT}</arg>
</arguments>
<assign>
<var>${config_content_filtered}</var>
</assign>
<msg timestamp="20170903 17:07:26.452" level="INFO">${config_content_filtered} = #
# Copyrights     : CNRS
# Author         : Oleg Lodygensky
# Acknowledgment : XtremWeb-HEP is based on XtremWeb 1.8.0 by inria : http://www.xtremweb.net/
# Web            : http://www.xtremweb-hep.o...</msg>
<status status="PASS" endtime="20170903 17:07:26.452" starttime="20170903 17:07:26.451"></status>
</kw>
<kw name="Create File" library="OperatingSystem">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xtremweb.server.conf</arg>
<arg>content=${config_content_filtered}</arg>
</arguments>
<msg timestamp="20170903 17:07:26.459" html="yes" level="INFO">Created file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170903 17:07:26.459" starttime="20170903 17:07:26.452"></status>
</kw>
<kw name="Remove File" library="OperatingSystem">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<msg timestamp="20170903 17:07:26.460" html="yes" level="INFO">File '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;' does not exist.</msg>
<status status="PASS" endtime="20170903 17:07:26.460" starttime="20170903 17:07:26.459"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/bin/xtremweb.server console</arg>
<arg>shell=yes</arg>
<arg>stderr=STDOUT</arg>
<arg>stdout=${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<assign>
<var>${created_process}</var>
</assign>
<msg timestamp="20170903 17:07:26.461" level="INFO">Starting process:
/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/xtremweb.server console</msg>
<msg timestamp="20170903 17:07:26.465" level="INFO">${created_process} = 13</msg>
<status status="PASS" endtime="20170903 17:07:26.465" starttime="20170903 17:07:26.460"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SERVER_PROCESS}</arg>
<arg>${created_process}</arg>
</arguments>
<msg timestamp="20170903 17:07:26.468" level="INFO">${SERVER_PROCESS} = 13</msg>
<status status="PASS" endtime="20170903 17:07:26.468" starttime="20170903 17:07:26.465"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2 min</arg>
<arg>5 sec</arg>
<arg>Check XtremWeb Server Start From Log</arg>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<kw name="Check XtremWeb Server Start From Log" library="XWServer">
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<kw name="Log XtremWeb Process Log File" library="XWServer">
<kw name="Log File" library="OperatingSystem">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<msg timestamp="20170903 17:07:26.472" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170903 17:07:26.473" level="INFO"></msg>
<status status="PASS" endtime="20170903 17:07:26.474" starttime="20170903 17:07:26.471"></status>
</kw>
<status status="PASS" endtime="20170903 17:07:26.474" starttime="20170903 17:07:26.471"></status>
</kw>
<kw name="Grep File" library="OperatingSystem">
<doc>Returns the lines of the specified file that match the ``pattern``.</doc>
<arguments>
<arg>${log}</arg>
<arg>listening on port : ${XWCONFIGURE.VALUES.HTTPSPORT}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20170903 17:07:26.475" html="yes" level="INFO">Reading file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170903 17:07:26.476" level="INFO">0 out of 0 lines matched</msg>
<msg timestamp="20170903 17:07:26.476" level="INFO">${ret} = </msg>
<status status="PASS" endtime="20170903 17:07:26.476" starttime="20170903 17:07:26.474"></status>
</kw>
<kw name="Get Line Count" library="String">
<doc>Returns and logs the number of lines in the given string.</doc>
<arguments>
<arg>${ret}</arg>
</arguments>
<assign>
<var>${line_count}</var>
</assign>
<msg timestamp="20170903 17:07:26.477" level="INFO">0 lines</msg>
<msg timestamp="20170903 17:07:26.477" level="INFO">${line_count} = 0</msg>
<status status="PASS" endtime="20170903 17:07:26.477" starttime="20170903 17:07:26.476"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${line_count}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20170903 17:07:26.477" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20170903 17:07:26.478" level="FAIL">0 != 2</msg>
<status status="FAIL" endtime="20170903 17:07:26.478" starttime="20170903 17:07:26.477"></status>
</kw>
<status status="FAIL" endtime="20170903 17:07:26.478" starttime="20170903 17:07:26.470"></status>
</kw>
<kw name="Check XtremWeb Server Start From Log" library="XWServer">
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<kw name="Log XtremWeb Process Log File" library="XWServer">
<kw name="Log File" library="OperatingSystem">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<msg timestamp="20170903 17:07:31.480" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170903 17:07:31.481" level="INFO">Sun Sep  3 17:07:26 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : checking launch url
Sun Sep  3 17:07:26 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] WARNING : no launcher URL defined
Sun Sep  3 17:07:26 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : launching SmartSockets hub
[03/Sep/2017:17:07:29 +0000] [main_1] ERROR : setRole : role redefined ?! (was SERVER)
[03/Sep/2017:17:07:29 +0000] [xtremweb.database.DBConnPoolThread_main_1] INFO : Connection to database jdbc:mysql://localhost/xtremweb is ok, 70 created
[03/Sep/2017:17:07:30 +0000] [xtremweb.dispatcher.DBInterface_main_1] WARN : Can't retrieve any app
[03/Sep/2017:17:07:30 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't create ProxyValidator
[03/Sep/2017:17:07:30 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.io.FileNotFoundException: /tmp/castore (No such file or directory) (/tmp/castore (No such file or directory))
[03/Sep/2017:17:07:30 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't add CA certificates to keystore
[03/Sep/2017:17:07:30 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.lang.NullPointerException (null)
[03/Sep/2017:17:07:30 +0000] [xtremweb.dispatcher.HashTaskSet_TaskSet_14] INFO : TaskSet started (300000)
[03/Sep/2017:17:07:31 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : still waiting task set...
[03/Sep/2017:17:07:31 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : UDP server not started
[03/Sep/2017:17:07:31 +0000] [xtremweb.communications.TCPServer_TCPServerNIO_15] INFO : started, listening on port : 4321
log4j:WARN No appenders could be found for logger (org.eclipse.jetty.util.log).
log4j:WARN Please initialize the log4j system properly.
log4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.
[03/Sep/2017:17:07:31 +0000] [xtremweb.communications.HTTPServer_main_1] INFO : started, listening on port : 9443
[03/Sep/2017:17:07:31 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : FACEBOOK : java.net.MalformedURLException: no protocol: 
[03/Sep/2017:17:07:31 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : GOOGLE : java.net.MalformedURLException: no protocol: 
[03/Sep/2017:17:07:31 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : TWITTER : java.net.MalformedURLException: no protocol: 
[03/Sep/2017:17:07:31 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : YAHOO : java.net.MalformedURLException: no protocol: 
</msg>
<status status="PASS" endtime="20170903 17:07:31.481" starttime="20170903 17:07:31.479"></status>
</kw>
<status status="PASS" endtime="20170903 17:07:31.482" starttime="20170903 17:07:31.479"></status>
</kw>
<kw name="Grep File" library="OperatingSystem">
<doc>Returns the lines of the specified file that match the ``pattern``.</doc>
<arguments>
<arg>${log}</arg>
<arg>listening on port : ${XWCONFIGURE.VALUES.HTTPSPORT}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20170903 17:07:31.483" html="yes" level="INFO">Reading file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170903 17:07:31.484" level="INFO">1 out of 22 lines matched</msg>
<msg timestamp="20170903 17:07:31.484" level="INFO">${ret} = [03/Sep/2017:17:07:31 +0000] [xtremweb.communications.HTTPServer_main_1] INFO : started, listening on port : 9443</msg>
<status status="PASS" endtime="20170903 17:07:31.484" starttime="20170903 17:07:31.482"></status>
</kw>
<kw name="Get Line Count" library="String">
<doc>Returns and logs the number of lines in the given string.</doc>
<arguments>
<arg>${ret}</arg>
</arguments>
<assign>
<var>${line_count}</var>
</assign>
<msg timestamp="20170903 17:07:31.485" level="INFO">1 lines</msg>
<msg timestamp="20170903 17:07:31.485" level="INFO">${line_count} = 1</msg>
<status status="PASS" endtime="20170903 17:07:31.485" starttime="20170903 17:07:31.484"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${line_count}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20170903 17:07:31.486" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20170903 17:07:31.486" level="FAIL">1 != 2</msg>
<status status="FAIL" endtime="20170903 17:07:31.486" starttime="20170903 17:07:31.485"></status>
</kw>
<status status="FAIL" endtime="20170903 17:07:31.486" starttime="20170903 17:07:31.478"></status>
</kw>
<kw name="Check XtremWeb Server Start From Log" library="XWServer">
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<kw name="Log XtremWeb Process Log File" library="XWServer">
<kw name="Log File" library="OperatingSystem">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<msg timestamp="20170903 17:07:36.488" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170903 17:07:36.489" level="INFO">Sun Sep  3 17:07:26 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : checking launch url
Sun Sep  3 17:07:26 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] WARNING : no launcher URL defined
Sun Sep  3 17:07:26 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : launching SmartSockets hub
[03/Sep/2017:17:07:29 +0000] [main_1] ERROR : setRole : role redefined ?! (was SERVER)
[03/Sep/2017:17:07:29 +0000] [xtremweb.database.DBConnPoolThread_main_1] INFO : Connection to database jdbc:mysql://localhost/xtremweb is ok, 70 created
[03/Sep/2017:17:07:30 +0000] [xtremweb.dispatcher.DBInterface_main_1] WARN : Can't retrieve any app
[03/Sep/2017:17:07:30 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't create ProxyValidator
[03/Sep/2017:17:07:30 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.io.FileNotFoundException: /tmp/castore (No such file or directory) (/tmp/castore (No such file or directory))
[03/Sep/2017:17:07:30 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't add CA certificates to keystore
[03/Sep/2017:17:07:30 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.lang.NullPointerException (null)
[03/Sep/2017:17:07:30 +0000] [xtremweb.dispatcher.HashTaskSet_TaskSet_14] INFO : TaskSet started (300000)
[03/Sep/2017:17:07:31 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : still waiting task set...
[03/Sep/2017:17:07:31 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : UDP server not started
[03/Sep/2017:17:07:31 +0000] [xtremweb.communications.TCPServer_TCPServerNIO_15] INFO : started, listening on port : 4321
log4j:WARN No appenders could be found for logger (org.eclipse.jetty.util.log).
log4j:WARN Please initialize the log4j system properly.
log4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.
[03/Sep/2017:17:07:31 +0000] [xtremweb.communications.HTTPServer_main_1] INFO : started, listening on port : 9443
[03/Sep/2017:17:07:31 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : FACEBOOK : java.net.MalformedURLException: no protocol: 
[03/Sep/2017:17:07:31 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : GOOGLE : java.net.MalformedURLException: no protocol: 
[03/Sep/2017:17:07:31 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : TWITTER : java.net.MalformedURLException: no protocol: 
[03/Sep/2017:17:07:31 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : YAHOO : java.net.MalformedURLException: no protocol: 
[03/Sep/2017:17:07:31 +0000] [main_1] ERROR : Can't add new entry to keystore
[03/Sep/2017:17:07:31 +0000] [main_1] WARN : javax.net.ssl.SSLHandshakeException: sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target (sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target)
[03/Sep/2017:17:07:31 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : XWHEP Dispatcher(10.6.0-head) started [Sun Sep 03 17:07:31 UTC 2017]
[03/Sep/2017:17:07:31 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : DB vendor  = mysql
[03/Sep/2017:17:07:31 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : mileStone  = 
[03/Sep/2017:17:07:31 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Time out   = 15000
[03/Sep/2017:17:07:31 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Disk opt'd = true
[03/Sep/2017:17:07:31 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Net  opt'd = true
[03/Sep/2017:17:07:31 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : NIO        = true
XWHEP Dispatcher started  Sun Sep 03 17:07:31 UTC 2017
Name             : vagrant-ubuntu-trusty-64
Version          : 10.6.0-head
Identity         : 
XWRole           : SERVER
Started on       : Sun Sep 03 17:07:29 UTC 2017
Scheduler        : xtremweb.dispatcher.MatchingScheduler
SmartSockets hub : 172.28.128.3/172.17.0.1/10.0.2.15-4329#b2.1e.e0.de.ca.7c.00.00.14.16.02.42.ef.10.3f.c1~vagrant
Server HTTP      : true
Alive            : 300
Alive time out   : 900
Polling time out : 15000
Optimize zip     : true
Optimize network : true
NIO              : true
Comm layer       : xtremweb.communications.TCPClient
Socket time out  : 60000
Socket retries   : 50
Max connections  : 200
TCP port         : 4321
UDP port         : 4323
HTPP  port       : 80
HTPPS port       : 9443
Sun RPC interposition port : 4328
Sandbox path : /usr/bin/lxc
Sandbox launch args : 
Host &lt;host&gt;&lt;uid&gt;7aa94bfa-caed-4c57-be20-3360765fe436&lt;/uid&gt;&lt;accessrights&gt;0x755&lt;/accessrights&gt;&lt;name&gt;vagrant-ubuntu-trusty-64&lt;/name&gt;&lt;cpuload&gt;50&lt;/cpuload&gt;&lt;natedipaddr&gt;10.0.2.15&lt;/natedipaddr&gt;&lt;ipaddr&gt;10.0.2.15&lt;/ipaddr&gt;&lt;hwaddr&gt;&lt;/hwaddr&gt;&lt;timezone&gt;Etc/UTC&lt;/timezone&gt;&lt;os&gt;LINUX&lt;/os&gt;&lt;osversion&gt;3.13.0-129-generic&lt;/osversion&gt;&lt;javaversion&gt;1.8.0_141&lt;/javaversion&gt;&lt;javadatamodel&gt;64&lt;/javadatamodel&gt;&lt;cputype&gt;AMD64&lt;/cputype&gt;&lt;cpunb&gt;1&lt;/cpunb&gt;&lt;cpumodel&gt;unknown&lt;/cpumodel&gt;&lt;cpuspeed&gt;0&lt;/cpuspeed&gt;&lt;totalmem&gt;0&lt;/totalmem&gt;&lt;totalswap&gt;0&lt;/totalswap&gt;&lt;totaltmp&gt;40284&lt;/totaltmp&gt;&lt;freetmp&gt;37287&lt;/freetmp&gt;&lt;project&gt;&lt;/project&gt;&lt;active&gt;true&lt;/active&gt;&lt;incomingconnections&gt;false&lt;/incomingconnections&gt;&lt;available&gt;false&lt;/available&gt;&lt;pilotjob&gt;false&lt;/pilotjob&gt;&lt;sgid&gt;&lt;/sgid&gt;&lt;timeout&gt;15000&lt;/timeout&gt;&lt;traces&gt;false&lt;/traces&gt;&lt;acceptbin&gt;false&lt;/acceptbin&gt;&lt;version&gt;10.6.0-head&lt;/version&gt;&lt;/host&gt;
[03/Sep/2017:17:07:31 +0000] [xtremweb.communications.HTTPServer_HTTPServer_218] INFO : started, listening on port : 9443
</msg>
<status status="PASS" endtime="20170903 17:07:36.490" starttime="20170903 17:07:36.487"></status>
</kw>
<status status="PASS" endtime="20170903 17:07:36.490" starttime="20170903 17:07:36.487"></status>
</kw>
<kw name="Grep File" library="OperatingSystem">
<doc>Returns the lines of the specified file that match the ``pattern``.</doc>
<arguments>
<arg>${log}</arg>
<arg>listening on port : ${XWCONFIGURE.VALUES.HTTPSPORT}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20170903 17:07:36.490" html="yes" level="INFO">Reading file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170903 17:07:36.491" level="INFO">2 out of 59 lines matched</msg>
<msg timestamp="20170903 17:07:36.491" level="INFO">${ret} = [03/Sep/2017:17:07:31 +0000] [xtremweb.communications.HTTPServer_main_1] INFO : started, listening on port : 9443
[03/Sep/2017:17:07:31 +0000] [xtremweb.communications.HTTPServer_HTTPServer_218] INFO ...</msg>
<status status="PASS" endtime="20170903 17:07:36.491" starttime="20170903 17:07:36.490"></status>
</kw>
<kw name="Get Line Count" library="String">
<doc>Returns and logs the number of lines in the given string.</doc>
<arguments>
<arg>${ret}</arg>
</arguments>
<assign>
<var>${line_count}</var>
</assign>
<msg timestamp="20170903 17:07:36.492" level="INFO">2 lines</msg>
<msg timestamp="20170903 17:07:36.492" level="INFO">${line_count} = 2</msg>
<status status="PASS" endtime="20170903 17:07:36.492" starttime="20170903 17:07:36.492"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${line_count}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20170903 17:07:36.492" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170903 17:07:36.492" starttime="20170903 17:07:36.492"></status>
</kw>
<status status="PASS" endtime="20170903 17:07:36.493" starttime="20170903 17:07:36.486"></status>
</kw>
<status status="PASS" endtime="20170903 17:07:36.493" starttime="20170903 17:07:26.469"></status>
</kw>
<kw name="Log XtremWeb Process Log File" library="XWServer">
<kw name="Log File" library="OperatingSystem">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<msg timestamp="20170903 17:07:36.494" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170903 17:07:36.495" level="INFO">Sun Sep  3 17:07:26 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : checking launch url
Sun Sep  3 17:07:26 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] WARNING : no launcher URL defined
Sun Sep  3 17:07:26 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : launching SmartSockets hub
[03/Sep/2017:17:07:29 +0000] [main_1] ERROR : setRole : role redefined ?! (was SERVER)
[03/Sep/2017:17:07:29 +0000] [xtremweb.database.DBConnPoolThread_main_1] INFO : Connection to database jdbc:mysql://localhost/xtremweb is ok, 70 created
[03/Sep/2017:17:07:30 +0000] [xtremweb.dispatcher.DBInterface_main_1] WARN : Can't retrieve any app
[03/Sep/2017:17:07:30 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't create ProxyValidator
[03/Sep/2017:17:07:30 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.io.FileNotFoundException: /tmp/castore (No such file or directory) (/tmp/castore (No such file or directory))
[03/Sep/2017:17:07:30 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't add CA certificates to keystore
[03/Sep/2017:17:07:30 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.lang.NullPointerException (null)
[03/Sep/2017:17:07:30 +0000] [xtremweb.dispatcher.HashTaskSet_TaskSet_14] INFO : TaskSet started (300000)
[03/Sep/2017:17:07:31 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : still waiting task set...
[03/Sep/2017:17:07:31 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : UDP server not started
[03/Sep/2017:17:07:31 +0000] [xtremweb.communications.TCPServer_TCPServerNIO_15] INFO : started, listening on port : 4321
log4j:WARN No appenders could be found for logger (org.eclipse.jetty.util.log).
log4j:WARN Please initialize the log4j system properly.
log4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.
[03/Sep/2017:17:07:31 +0000] [xtremweb.communications.HTTPServer_main_1] INFO : started, listening on port : 9443
[03/Sep/2017:17:07:31 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : FACEBOOK : java.net.MalformedURLException: no protocol: 
[03/Sep/2017:17:07:31 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : GOOGLE : java.net.MalformedURLException: no protocol: 
[03/Sep/2017:17:07:31 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : TWITTER : java.net.MalformedURLException: no protocol: 
[03/Sep/2017:17:07:31 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : YAHOO : java.net.MalformedURLException: no protocol: 
[03/Sep/2017:17:07:31 +0000] [main_1] ERROR : Can't add new entry to keystore
[03/Sep/2017:17:07:31 +0000] [main_1] WARN : javax.net.ssl.SSLHandshakeException: sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target (sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target)
[03/Sep/2017:17:07:31 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : XWHEP Dispatcher(10.6.0-head) started [Sun Sep 03 17:07:31 UTC 2017]
[03/Sep/2017:17:07:31 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : DB vendor  = mysql
[03/Sep/2017:17:07:31 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : mileStone  = 
[03/Sep/2017:17:07:31 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Time out   = 15000
[03/Sep/2017:17:07:31 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Disk opt'd = true
[03/Sep/2017:17:07:31 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Net  opt'd = true
[03/Sep/2017:17:07:31 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : NIO        = true
XWHEP Dispatcher started  Sun Sep 03 17:07:31 UTC 2017
Name             : vagrant-ubuntu-trusty-64
Version          : 10.6.0-head
Identity         : 
XWRole           : SERVER
Started on       : Sun Sep 03 17:07:29 UTC 2017
Scheduler        : xtremweb.dispatcher.MatchingScheduler
SmartSockets hub : 172.28.128.3/172.17.0.1/10.0.2.15-4329#b2.1e.e0.de.ca.7c.00.00.14.16.02.42.ef.10.3f.c1~vagrant
Server HTTP      : true
Alive            : 300
Alive time out   : 900
Polling time out : 15000
Optimize zip     : true
Optimize network : true
NIO              : true
Comm layer       : xtremweb.communications.TCPClient
Socket time out  : 60000
Socket retries   : 50
Max connections  : 200
TCP port         : 4321
UDP port         : 4323
HTPP  port       : 80
HTPPS port       : 9443
Sun RPC interposition port : 4328
Sandbox path : /usr/bin/lxc
Sandbox launch args : 
Host &lt;host&gt;&lt;uid&gt;7aa94bfa-caed-4c57-be20-3360765fe436&lt;/uid&gt;&lt;accessrights&gt;0x755&lt;/accessrights&gt;&lt;name&gt;vagrant-ubuntu-trusty-64&lt;/name&gt;&lt;cpuload&gt;50&lt;/cpuload&gt;&lt;natedipaddr&gt;10.0.2.15&lt;/natedipaddr&gt;&lt;ipaddr&gt;10.0.2.15&lt;/ipaddr&gt;&lt;hwaddr&gt;&lt;/hwaddr&gt;&lt;timezone&gt;Etc/UTC&lt;/timezone&gt;&lt;os&gt;LINUX&lt;/os&gt;&lt;osversion&gt;3.13.0-129-generic&lt;/osversion&gt;&lt;javaversion&gt;1.8.0_141&lt;/javaversion&gt;&lt;javadatamodel&gt;64&lt;/javadatamodel&gt;&lt;cputype&gt;AMD64&lt;/cputype&gt;&lt;cpunb&gt;1&lt;/cpunb&gt;&lt;cpumodel&gt;unknown&lt;/cpumodel&gt;&lt;cpuspeed&gt;0&lt;/cpuspeed&gt;&lt;totalmem&gt;0&lt;/totalmem&gt;&lt;totalswap&gt;0&lt;/totalswap&gt;&lt;totaltmp&gt;40284&lt;/totaltmp&gt;&lt;freetmp&gt;37287&lt;/freetmp&gt;&lt;project&gt;&lt;/project&gt;&lt;active&gt;true&lt;/active&gt;&lt;incomingconnections&gt;false&lt;/incomingconnections&gt;&lt;available&gt;false&lt;/available&gt;&lt;pilotjob&gt;false&lt;/pilotjob&gt;&lt;sgid&gt;&lt;/sgid&gt;&lt;timeout&gt;15000&lt;/timeout&gt;&lt;traces&gt;false&lt;/traces&gt;&lt;acceptbin&gt;false&lt;/acceptbin&gt;&lt;version&gt;10.6.0-head&lt;/version&gt;&lt;/host&gt;
[03/Sep/2017:17:07:31 +0000] [xtremweb.communications.HTTPServer_HTTPServer_218] INFO : started, listening on port : 9443
</msg>
<status status="PASS" endtime="20170903 17:07:36.495" starttime="20170903 17:07:36.494"></status>
</kw>
<status status="PASS" endtime="20170903 17:07:36.495" starttime="20170903 17:07:36.493"></status>
</kw>
<status status="PASS" endtime="20170903 17:07:36.495" starttime="20170903 17:07:26.444"></status>
</kw>
<kw name="Start XtremWeb Worker" library="XWWorker">
<arguments>
<arg>${DIST_XWHEP_PATH}</arg>
</arguments>
<kw name="File Should Exist" library="OperatingSystem">
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xtremweb.worker.conf</arg>
</arguments>
<msg timestamp="20170903 17:07:36.496" html="yes" level="INFO">File '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf&lt;/a&gt;' exists.</msg>
<status status="PASS" endtime="20170903 17:07:36.496" starttime="20170903 17:07:36.496"></status>
</kw>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xtremweb.worker.conf</arg>
</arguments>
<assign>
<var>${config_content}</var>
</assign>
<msg timestamp="20170903 17:07:36.497" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf&lt;/a&gt;'.</msg>
<msg timestamp="20170903 17:07:36.497" level="INFO">${config_content} = #
# Copyrights     : CNRS
# Author         : Oleg Lodygensky
# Acknowledgment : XtremWeb-HEP is based on XtremWeb 1.8.0 by inria : http://www.xtremweb.net/
# Web            : http://www.xtremweb-hep.o...</msg>
<status status="PASS" endtime="20170903 17:07:36.498" starttime="20170903 17:07:36.497"></status>
</kw>
<kw name="Remove String Using Regexp" library="String">
<doc>Removes ``patterns`` from the given ``string``.</doc>
<arguments>
<arg>${config_content}</arg>
<arg>LAUNCHERURL=${XWCONFIGURE.VALUES.XWUPGRADEURL}</arg>
</arguments>
<assign>
<var>${config_content_filtered}</var>
</assign>
<msg timestamp="20170903 17:07:36.498" level="INFO">${config_content_filtered} = #
# Copyrights     : CNRS
# Author         : Oleg Lodygensky
# Acknowledgment : XtremWeb-HEP is based on XtremWeb 1.8.0 by inria : http://www.xtremweb.net/
# Web            : http://www.xtremweb-hep.o...</msg>
<status status="PASS" endtime="20170903 17:07:36.498" starttime="20170903 17:07:36.498"></status>
</kw>
<kw name="Create File" library="OperatingSystem">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xtremweb.worker.conf</arg>
<arg>content=${config_content_filtered}</arg>
</arguments>
<msg timestamp="20170903 17:07:36.502" html="yes" level="INFO">Created file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170903 17:07:36.502" starttime="20170903 17:07:36.498"></status>
</kw>
<kw name="Remove File" library="OperatingSystem">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.worker.process.log</arg>
</arguments>
<msg timestamp="20170903 17:07:36.504" html="yes" level="INFO">File '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.worker.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.worker.process.log&lt;/a&gt;' does not exist.</msg>
<status status="PASS" endtime="20170903 17:07:36.504" starttime="20170903 17:07:36.502"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/bin/xtremweb.worker console</arg>
<arg>shell=yes</arg>
<arg>stderr=STDOUT</arg>
<arg>stdout=${DIST_XWHEP_PATH}/xwhep.worker.process.log</arg>
</arguments>
<assign>
<var>${created_process}</var>
</assign>
<msg timestamp="20170903 17:07:36.505" level="INFO">Starting process:
/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/xtremweb.worker console</msg>
<msg timestamp="20170903 17:07:36.508" level="INFO">${created_process} = 14</msg>
<status status="PASS" endtime="20170903 17:07:36.509" starttime="20170903 17:07:36.504"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${WORKER_PROCESS}</arg>
<arg>${created_process}</arg>
</arguments>
<msg timestamp="20170903 17:07:36.510" level="INFO">${WORKER_PROCESS} = 14</msg>
<status status="PASS" endtime="20170903 17:07:36.510" starttime="20170903 17:07:36.509"></status>
</kw>
<kw name="Log File" library="OperatingSystem">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.worker.process.log</arg>
</arguments>
<msg timestamp="20170903 17:07:36.510" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.worker.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.worker.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170903 17:07:36.512" level="INFO"></msg>
<status status="PASS" endtime="20170903 17:07:36.512" starttime="20170903 17:07:36.510"></status>
</kw>
<status status="PASS" endtime="20170903 17:07:36.512" starttime="20170903 17:07:36.495"></status>
</kw>
<status status="PASS" endtime="20170903 17:07:36.512" starttime="20170903 17:01:09.847"></status>
</kw>
<test id="s1-s4-t1" name="Test envoyer des données">
<kw type="setup" name="Begin XWtremWeb Command Test" library="XWCommon">
<kw name="Ping XWtremWeb Database" library="XWServer">
<kw name="Xtremweb Tables Must Exist" library="MySql">
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170903 17:07:36.517" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170903 17:07:36.519" starttime="20170903 17:07:36.516"></status>
</kw>
<status status="PASS" endtime="20170903 17:07:36.519" starttime="20170903 17:07:36.516"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>appTypes</arg>
</arguments>
<msg timestamp="20170903 17:07:36.520" level="INFO">Executing : Table Must Exist  |  appTypes </msg>
<msg timestamp="20170903 17:07:36.520" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='appTypes' </msg>
<status status="PASS" endtime="20170903 17:07:36.521" starttime="20170903 17:07:36.520"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps</arg>
</arguments>
<msg timestamp="20170903 17:07:36.522" level="INFO">Executing : Table Must Exist  |  apps </msg>
<msg timestamp="20170903 17:07:36.522" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='apps' </msg>
<status status="PASS" endtime="20170903 17:07:36.523" starttime="20170903 17:07:36.521"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps_history</arg>
</arguments>
<msg timestamp="20170903 17:07:36.523" level="INFO">Executing : Table Must Exist  |  apps_history </msg>
<msg timestamp="20170903 17:07:36.523" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='apps_history' </msg>
<status status="PASS" endtime="20170903 17:07:36.524" starttime="20170903 17:07:36.523"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>cpuTypes</arg>
</arguments>
<msg timestamp="20170903 17:07:36.524" level="INFO">Executing : Table Must Exist  |  cpuTypes </msg>
<msg timestamp="20170903 17:07:36.524" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='cpuTypes' </msg>
<status status="PASS" endtime="20170903 17:07:36.526" starttime="20170903 17:07:36.524"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>dataTypes</arg>
</arguments>
<msg timestamp="20170903 17:07:36.526" level="INFO">Executing : Table Must Exist  |  dataTypes </msg>
<msg timestamp="20170903 17:07:36.526" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='dataTypes' </msg>
<status status="PASS" endtime="20170903 17:07:36.527" starttime="20170903 17:07:36.526"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas</arg>
</arguments>
<msg timestamp="20170903 17:07:36.527" level="INFO">Executing : Table Must Exist  |  datas </msg>
<msg timestamp="20170903 17:07:36.527" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='datas' </msg>
<status status="PASS" endtime="20170903 17:07:36.529" starttime="20170903 17:07:36.527"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas_history</arg>
</arguments>
<msg timestamp="20170903 17:07:36.529" level="INFO">Executing : Table Must Exist  |  datas_history </msg>
<msg timestamp="20170903 17:07:36.529" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='datas_history' </msg>
<status status="PASS" endtime="20170903 17:07:36.530" starttime="20170903 17:07:36.529"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables</arg>
</arguments>
<msg timestamp="20170903 17:07:36.531" level="INFO">Executing : Table Must Exist  |  executables </msg>
<msg timestamp="20170903 17:07:36.531" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='executables' </msg>
<status status="PASS" endtime="20170903 17:07:36.532" starttime="20170903 17:07:36.531"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables_history</arg>
</arguments>
<msg timestamp="20170903 17:07:36.533" level="INFO">Executing : Table Must Exist  |  executables_history </msg>
<msg timestamp="20170903 17:07:36.533" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='executables_history' </msg>
<status status="PASS" endtime="20170903 17:07:36.534" starttime="20170903 17:07:36.532"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups</arg>
</arguments>
<msg timestamp="20170903 17:07:36.534" level="INFO">Executing : Table Must Exist  |  groups </msg>
<msg timestamp="20170903 17:07:36.534" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='groups' </msg>
<status status="PASS" endtime="20170903 17:07:36.535" starttime="20170903 17:07:36.534"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups_history</arg>
</arguments>
<msg timestamp="20170903 17:07:36.536" level="INFO">Executing : Table Must Exist  |  groups_history </msg>
<msg timestamp="20170903 17:07:36.536" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='groups_history' </msg>
<status status="PASS" endtime="20170903 17:07:36.537" starttime="20170903 17:07:36.536"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts</arg>
</arguments>
<msg timestamp="20170903 17:07:36.537" level="INFO">Executing : Table Must Exist  |  hosts </msg>
<msg timestamp="20170903 17:07:36.537" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='hosts' </msg>
<status status="PASS" endtime="20170903 17:07:36.538" starttime="20170903 17:07:36.537"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts_history</arg>
</arguments>
<msg timestamp="20170903 17:07:36.539" level="INFO">Executing : Table Must Exist  |  hosts_history </msg>
<msg timestamp="20170903 17:07:36.539" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='hosts_history' </msg>
<status status="PASS" endtime="20170903 17:07:36.539" starttime="20170903 17:07:36.538"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships</arg>
</arguments>
<msg timestamp="20170903 17:07:36.540" level="INFO">Executing : Table Must Exist  |  memberships </msg>
<msg timestamp="20170903 17:07:36.540" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='memberships' </msg>
<status status="PASS" endtime="20170903 17:07:36.541" starttime="20170903 17:07:36.540"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships_history</arg>
</arguments>
<msg timestamp="20170903 17:07:36.541" level="INFO">Executing : Table Must Exist  |  memberships_history </msg>
<msg timestamp="20170903 17:07:36.541" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='memberships_history' </msg>
<status status="PASS" endtime="20170903 17:07:36.542" starttime="20170903 17:07:36.541"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>oses</arg>
</arguments>
<msg timestamp="20170903 17:07:36.542" level="INFO">Executing : Table Must Exist  |  oses </msg>
<msg timestamp="20170903 17:07:36.543" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='oses' </msg>
<status status="PASS" endtime="20170903 17:07:36.544" starttime="20170903 17:07:36.542"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>packageTypes</arg>
</arguments>
<msg timestamp="20170903 17:07:36.544" level="INFO">Executing : Table Must Exist  |  packageTypes </msg>
<msg timestamp="20170903 17:07:36.545" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='packageTypes' </msg>
<status status="PASS" endtime="20170903 17:07:36.546" starttime="20170903 17:07:36.544"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions</arg>
</arguments>
<msg timestamp="20170903 17:07:36.546" level="INFO">Executing : Table Must Exist  |  sessions </msg>
<msg timestamp="20170903 17:07:36.546" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sessions' </msg>
<status status="PASS" endtime="20170903 17:07:36.547" starttime="20170903 17:07:36.546"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions_history</arg>
</arguments>
<msg timestamp="20170903 17:07:36.548" level="INFO">Executing : Table Must Exist  |  sessions_history </msg>
<msg timestamp="20170903 17:07:36.548" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sessions_history' </msg>
<status status="PASS" endtime="20170903 17:07:36.551" starttime="20170903 17:07:36.547"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes</arg>
</arguments>
<msg timestamp="20170903 17:07:36.552" level="INFO">Executing : Table Must Exist  |  sharedAppTypes </msg>
<msg timestamp="20170903 17:07:36.552" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedAppTypes' </msg>
<status status="PASS" endtime="20170903 17:07:36.556" starttime="20170903 17:07:36.552"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes_history</arg>
</arguments>
<msg timestamp="20170903 17:07:36.557" level="INFO">Executing : Table Must Exist  |  sharedAppTypes_history </msg>
<msg timestamp="20170903 17:07:36.557" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedAppTypes_history' </msg>
<status status="PASS" endtime="20170903 17:07:36.563" starttime="20170903 17:07:36.556"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes</arg>
</arguments>
<msg timestamp="20170903 17:07:36.563" level="INFO">Executing : Table Must Exist  |  sharedPackageTypes </msg>
<msg timestamp="20170903 17:07:36.563" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedPackageTypes' </msg>
<status status="PASS" endtime="20170903 17:07:36.565" starttime="20170903 17:07:36.563"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes_history</arg>
</arguments>
<msg timestamp="20170903 17:07:36.565" level="INFO">Executing : Table Must Exist  |  sharedPackageTypes_history </msg>
<msg timestamp="20170903 17:07:36.565" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedPackageTypes_history' </msg>
<status status="PASS" endtime="20170903 17:07:36.566" starttime="20170903 17:07:36.565"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>statuses</arg>
</arguments>
<msg timestamp="20170903 17:07:36.567" level="INFO">Executing : Table Must Exist  |  statuses </msg>
<msg timestamp="20170903 17:07:36.567" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='statuses' </msg>
<status status="PASS" endtime="20170903 17:07:36.568" starttime="20170903 17:07:36.566"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks</arg>
</arguments>
<msg timestamp="20170903 17:07:36.568" level="INFO">Executing : Table Must Exist  |  tasks </msg>
<msg timestamp="20170903 17:07:36.568" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='tasks' </msg>
<status status="PASS" endtime="20170903 17:07:36.569" starttime="20170903 17:07:36.568"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks_history</arg>
</arguments>
<msg timestamp="20170903 17:07:36.569" level="INFO">Executing : Table Must Exist  |  tasks_history </msg>
<msg timestamp="20170903 17:07:36.569" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='tasks_history' </msg>
<status status="PASS" endtime="20170903 17:07:36.571" starttime="20170903 17:07:36.569"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces</arg>
</arguments>
<msg timestamp="20170903 17:07:36.571" level="INFO">Executing : Table Must Exist  |  traces </msg>
<msg timestamp="20170903 17:07:36.571" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='traces' </msg>
<status status="PASS" endtime="20170903 17:07:36.573" starttime="20170903 17:07:36.571"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces_history</arg>
</arguments>
<msg timestamp="20170903 17:07:36.573" level="INFO">Executing : Table Must Exist  |  traces_history </msg>
<msg timestamp="20170903 17:07:36.573" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='traces_history' </msg>
<status status="PASS" endtime="20170903 17:07:36.574" starttime="20170903 17:07:36.573"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>userRights</arg>
</arguments>
<msg timestamp="20170903 17:07:36.575" level="INFO">Executing : Table Must Exist  |  userRights </msg>
<msg timestamp="20170903 17:07:36.575" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='userRights' </msg>
<status status="PASS" endtime="20170903 17:07:36.576" starttime="20170903 17:07:36.574"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups</arg>
</arguments>
<msg timestamp="20170903 17:07:36.576" level="INFO">Executing : Table Must Exist  |  usergroups </msg>
<msg timestamp="20170903 17:07:36.577" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='usergroups' </msg>
<status status="PASS" endtime="20170903 17:07:36.578" starttime="20170903 17:07:36.576"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups_history</arg>
</arguments>
<msg timestamp="20170903 17:07:36.578" level="INFO">Executing : Table Must Exist  |  usergroups_history </msg>
<msg timestamp="20170903 17:07:36.578" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='usergroups_history' </msg>
<status status="PASS" endtime="20170903 17:07:36.579" starttime="20170903 17:07:36.578"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users</arg>
</arguments>
<msg timestamp="20170903 17:07:36.581" level="INFO">Executing : Table Must Exist  |  users </msg>
<msg timestamp="20170903 17:07:36.581" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='users' </msg>
<status status="PASS" endtime="20170903 17:07:36.583" starttime="20170903 17:07:36.581"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users_history</arg>
</arguments>
<msg timestamp="20170903 17:07:36.583" level="INFO">Executing : Table Must Exist  |  users_history </msg>
<msg timestamp="20170903 17:07:36.583" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='users_history' </msg>
<status status="PASS" endtime="20170903 17:07:36.584" starttime="20170903 17:07:36.583"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>version</arg>
</arguments>
<msg timestamp="20170903 17:07:36.585" level="INFO">Executing : Table Must Exist  |  version </msg>
<msg timestamp="20170903 17:07:36.585" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='version' </msg>
<status status="PASS" endtime="20170903 17:07:36.586" starttime="20170903 17:07:36.584"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>versions</arg>
</arguments>
<msg timestamp="20170903 17:07:36.586" level="INFO">Executing : Table Must Exist  |  versions </msg>
<msg timestamp="20170903 17:07:36.586" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='versions' </msg>
<status status="PASS" endtime="20170903 17:07:36.587" starttime="20170903 17:07:36.586"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps</arg>
</arguments>
<msg timestamp="20170903 17:07:36.588" level="INFO">Executing : Table Must Exist  |  view_apps </msg>
<msg timestamp="20170903 17:07:36.588" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps' </msg>
<status status="PASS" endtime="20170903 17:07:36.590" starttime="20170903 17:07:36.587"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps_for_offering</arg>
</arguments>
<msg timestamp="20170903 17:07:36.590" level="INFO">Executing : Table Must Exist  |  view_apps_for_offering </msg>
<msg timestamp="20170903 17:07:36.590" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps_for_offering' </msg>
<status status="PASS" endtime="20170903 17:07:36.592" starttime="20170903 17:07:36.590"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps_for_offering_with_file_sizes</arg>
</arguments>
<msg timestamp="20170903 17:07:36.592" level="INFO">Executing : Table Must Exist  |  view_apps_for_offering_with_file_sizes </msg>
<msg timestamp="20170903 17:07:36.592" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps_for_offering_with_file_sizes' </msg>
<status status="PASS" endtime="20170903 17:07:36.595" starttime="20170903 17:07:36.592"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_datas</arg>
</arguments>
<msg timestamp="20170903 17:07:36.595" level="INFO">Executing : Table Must Exist  |  view_datas </msg>
<msg timestamp="20170903 17:07:36.595" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_datas' </msg>
<status status="PASS" endtime="20170903 17:07:36.598" starttime="20170903 17:07:36.595"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_executables</arg>
</arguments>
<msg timestamp="20170903 17:07:36.598" level="INFO">Executing : Table Must Exist  |  view_executables </msg>
<msg timestamp="20170903 17:07:36.598" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_executables' </msg>
<status status="PASS" endtime="20170903 17:07:36.599" starttime="20170903 17:07:36.598"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_groups</arg>
</arguments>
<msg timestamp="20170903 17:07:36.600" level="INFO">Executing : Table Must Exist  |  view_groups </msg>
<msg timestamp="20170903 17:07:36.600" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_groups' </msg>
<status status="PASS" endtime="20170903 17:07:36.601" starttime="20170903 17:07:36.600"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts</arg>
</arguments>
<msg timestamp="20170903 17:07:36.601" level="INFO">Executing : Table Must Exist  |  view_hosts </msg>
<msg timestamp="20170903 17:07:36.602" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts' </msg>
<status status="PASS" endtime="20170903 17:07:36.603" starttime="20170903 17:07:36.601"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_deployable</arg>
</arguments>
<msg timestamp="20170903 17:07:36.603" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_deployable </msg>
<msg timestamp="20170903 17:07:36.603" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_deployable' </msg>
<status status="PASS" endtime="20170903 17:07:36.605" starttime="20170903 17:07:36.603"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_deployable_and_shared</arg>
</arguments>
<msg timestamp="20170903 17:07:36.606" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_deployable_and_shared </msg>
<msg timestamp="20170903 17:07:36.606" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_deployable_and_shared' </msg>
<status status="PASS" endtime="20170903 17:07:36.608" starttime="20170903 17:07:36.605"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_shared</arg>
</arguments>
<msg timestamp="20170903 17:07:36.608" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_shared </msg>
<msg timestamp="20170903 17:07:36.608" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_shared' </msg>
<status status="PASS" endtime="20170903 17:07:36.610" starttime="20170903 17:07:36.608"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_sessions</arg>
</arguments>
<msg timestamp="20170903 17:07:36.611" level="INFO">Executing : Table Must Exist  |  view_sessions </msg>
<msg timestamp="20170903 17:07:36.611" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_sessions' </msg>
<status status="PASS" endtime="20170903 17:07:36.613" starttime="20170903 17:07:36.611"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_tasks</arg>
</arguments>
<msg timestamp="20170903 17:07:36.613" level="INFO">Executing : Table Must Exist  |  view_tasks </msg>
<msg timestamp="20170903 17:07:36.613" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_tasks' </msg>
<status status="PASS" endtime="20170903 17:07:36.615" starttime="20170903 17:07:36.613"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_traces</arg>
</arguments>
<msg timestamp="20170903 17:07:36.616" level="INFO">Executing : Table Must Exist  |  view_traces </msg>
<msg timestamp="20170903 17:07:36.616" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_traces' </msg>
<status status="PASS" endtime="20170903 17:07:36.618" starttime="20170903 17:07:36.616"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_usergroups</arg>
</arguments>
<msg timestamp="20170903 17:07:36.618" level="INFO">Executing : Table Must Exist  |  view_usergroups </msg>
<msg timestamp="20170903 17:07:36.618" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_usergroups' </msg>
<status status="PASS" endtime="20170903 17:07:36.619" starttime="20170903 17:07:36.618"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users</arg>
</arguments>
<msg timestamp="20170903 17:07:36.620" level="INFO">Executing : Table Must Exist  |  view_users </msg>
<msg timestamp="20170903 17:07:36.620" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users' </msg>
<status status="PASS" endtime="20170903 17:07:36.621" starttime="20170903 17:07:36.620"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_apps</arg>
</arguments>
<msg timestamp="20170903 17:07:36.622" level="INFO">Executing : Table Must Exist  |  view_users_apps </msg>
<msg timestamp="20170903 17:07:36.622" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_apps' </msg>
<status status="PASS" endtime="20170903 17:07:36.623" starttime="20170903 17:07:36.621"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_datas</arg>
</arguments>
<msg timestamp="20170903 17:07:36.623" level="INFO">Executing : Table Must Exist  |  view_users_datas </msg>
<msg timestamp="20170903 17:07:36.623" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_datas' </msg>
<status status="PASS" endtime="20170903 17:07:36.625" starttime="20170903 17:07:36.623"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_groups</arg>
</arguments>
<msg timestamp="20170903 17:07:36.625" level="INFO">Executing : Table Must Exist  |  view_users_groups </msg>
<msg timestamp="20170903 17:07:36.625" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_groups' </msg>
<status status="PASS" endtime="20170903 17:07:36.626" starttime="20170903 17:07:36.625"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_hosts</arg>
</arguments>
<msg timestamp="20170903 17:07:36.627" level="INFO">Executing : Table Must Exist  |  view_users_hosts </msg>
<msg timestamp="20170903 17:07:36.627" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_hosts' </msg>
<status status="PASS" endtime="20170903 17:07:36.628" starttime="20170903 17:07:36.626"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_sessions</arg>
</arguments>
<msg timestamp="20170903 17:07:36.629" level="INFO">Executing : Table Must Exist  |  view_users_sessions </msg>
<msg timestamp="20170903 17:07:36.629" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_sessions' </msg>
<status status="PASS" endtime="20170903 17:07:36.630" starttime="20170903 17:07:36.628"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_tasks</arg>
</arguments>
<msg timestamp="20170903 17:07:36.630" level="INFO">Executing : Table Must Exist  |  view_users_tasks </msg>
<msg timestamp="20170903 17:07:36.630" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_tasks' </msg>
<status status="PASS" endtime="20170903 17:07:36.632" starttime="20170903 17:07:36.630"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_traces</arg>
</arguments>
<msg timestamp="20170903 17:07:36.633" level="INFO">Executing : Table Must Exist  |  view_users_traces </msg>
<msg timestamp="20170903 17:07:36.633" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_traces' </msg>
<status status="PASS" endtime="20170903 17:07:36.634" starttime="20170903 17:07:36.633"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_usergroups</arg>
</arguments>
<msg timestamp="20170903 17:07:36.635" level="INFO">Executing : Table Must Exist  |  view_users_usergroups </msg>
<msg timestamp="20170903 17:07:36.635" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_usergroups' </msg>
<status status="PASS" endtime="20170903 17:07:36.636" starttime="20170903 17:07:36.635"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_users</arg>
</arguments>
<msg timestamp="20170903 17:07:36.637" level="INFO">Executing : Table Must Exist  |  view_users_users </msg>
<msg timestamp="20170903 17:07:36.637" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_users' </msg>
<status status="PASS" endtime="20170903 17:07:36.638" starttime="20170903 17:07:36.636"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_works</arg>
</arguments>
<msg timestamp="20170903 17:07:36.638" level="INFO">Executing : Table Must Exist  |  view_users_works </msg>
<msg timestamp="20170903 17:07:36.638" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_works' </msg>
<status status="PASS" endtime="20170903 17:07:36.640" starttime="20170903 17:07:36.638"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works</arg>
</arguments>
<msg timestamp="20170903 17:07:36.640" level="INFO">Executing : Table Must Exist  |  view_works </msg>
<msg timestamp="20170903 17:07:36.640" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works' </msg>
<status status="PASS" endtime="20170903 17:07:36.645" starttime="20170903 17:07:36.640"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works_for_billing</arg>
</arguments>
<msg timestamp="20170903 17:07:36.645" level="INFO">Executing : Table Must Exist  |  view_works_for_billing </msg>
<msg timestamp="20170903 17:07:36.645" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works_for_billing' </msg>
<status status="PASS" endtime="20170903 17:07:36.646" starttime="20170903 17:07:36.645"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works_for_billing_with_file_sizes</arg>
</arguments>
<msg timestamp="20170903 17:07:36.647" level="INFO">Executing : Table Must Exist  |  view_works_for_billing_with_file_sizes </msg>
<msg timestamp="20170903 17:07:36.647" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works_for_billing_with_file_sizes' </msg>
<status status="PASS" endtime="20170903 17:07:36.648" starttime="20170903 17:07:36.646"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works</arg>
</arguments>
<msg timestamp="20170903 17:07:36.648" level="INFO">Executing : Table Must Exist  |  works </msg>
<msg timestamp="20170903 17:07:36.648" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='works' </msg>
<status status="PASS" endtime="20170903 17:07:36.649" starttime="20170903 17:07:36.648"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works_history</arg>
</arguments>
<msg timestamp="20170903 17:07:36.650" level="INFO">Executing : Table Must Exist  |  works_history </msg>
<msg timestamp="20170903 17:07:36.650" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='works_history' </msg>
<status status="PASS" endtime="20170903 17:07:36.651" starttime="20170903 17:07:36.649"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170903 17:07:36.651" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170903 17:07:36.652" starttime="20170903 17:07:36.651"></status>
</kw>
<status status="PASS" endtime="20170903 17:07:36.653" starttime="20170903 17:07:36.651"></status>
</kw>
<status status="PASS" endtime="20170903 17:07:36.653" starttime="20170903 17:07:36.515"></status>
</kw>
<status status="PASS" endtime="20170903 17:07:36.653" starttime="20170903 17:07:36.515"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>TODO ping XWtremWeb server up</arg>
</arguments>
<msg timestamp="20170903 17:07:36.653" level="INFO">TODO ping XWtremWeb server up</msg>
<status status="PASS" endtime="20170903 17:07:36.653" starttime="20170903 17:07:36.653"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>TODO ping XWtremWeb worker up before one test</arg>
</arguments>
<msg timestamp="20170903 17:07:36.654" level="INFO">TODO ping XWtremWeb worker up before one test</msg>
<status status="PASS" endtime="20170903 17:07:36.654" starttime="20170903 17:07:36.654"></status>
</kw>
<kw name="Delete Fonctionnal Xtremweb Tables" library="MySql">
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170903 17:07:36.655" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170903 17:07:36.656" starttime="20170903 17:07:36.655"></status>
</kw>
<status status="PASS" endtime="20170903 17:07:36.656" starttime="20170903 17:07:36.654"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps</arg>
</arguments>
<msg timestamp="20170903 17:07:36.657" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM apps; </msg>
<status status="PASS" endtime="20170903 17:07:36.658" starttime="20170903 17:07:36.657"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps_history</arg>
</arguments>
<msg timestamp="20170903 17:07:36.659" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM apps_history; </msg>
<status status="PASS" endtime="20170903 17:07:36.660" starttime="20170903 17:07:36.658"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas</arg>
</arguments>
<msg timestamp="20170903 17:07:36.661" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM datas; </msg>
<status status="PASS" endtime="20170903 17:07:36.661" starttime="20170903 17:07:36.660"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas_history</arg>
</arguments>
<msg timestamp="20170903 17:07:36.662" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM datas_history; </msg>
<status status="PASS" endtime="20170903 17:07:36.663" starttime="20170903 17:07:36.662"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables</arg>
</arguments>
<msg timestamp="20170903 17:07:36.663" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM executables; </msg>
<status status="PASS" endtime="20170903 17:07:36.664" starttime="20170903 17:07:36.663"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables_history</arg>
</arguments>
<msg timestamp="20170903 17:07:36.665" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM executables_history; </msg>
<status status="PASS" endtime="20170903 17:07:36.666" starttime="20170903 17:07:36.665"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups</arg>
</arguments>
<msg timestamp="20170903 17:07:36.666" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM groups; </msg>
<status status="PASS" endtime="20170903 17:07:36.667" starttime="20170903 17:07:36.666"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups_history</arg>
</arguments>
<msg timestamp="20170903 17:07:36.668" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM groups_history; </msg>
<status status="PASS" endtime="20170903 17:07:36.669" starttime="20170903 17:07:36.667"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts</arg>
</arguments>
<msg timestamp="20170903 17:07:36.669" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM hosts; </msg>
<status status="PASS" endtime="20170903 17:07:36.671" starttime="20170903 17:07:36.669"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts_history</arg>
</arguments>
<msg timestamp="20170903 17:07:36.671" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM hosts_history; </msg>
<status status="PASS" endtime="20170903 17:07:36.673" starttime="20170903 17:07:36.671"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships</arg>
</arguments>
<msg timestamp="20170903 17:07:36.673" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM memberships; </msg>
<status status="PASS" endtime="20170903 17:07:36.674" starttime="20170903 17:07:36.673"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships_history</arg>
</arguments>
<msg timestamp="20170903 17:07:36.675" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM memberships_history; </msg>
<status status="PASS" endtime="20170903 17:07:36.676" starttime="20170903 17:07:36.675"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions</arg>
</arguments>
<msg timestamp="20170903 17:07:36.677" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sessions; </msg>
<status status="PASS" endtime="20170903 17:07:36.678" starttime="20170903 17:07:36.677"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions_history</arg>
</arguments>
<msg timestamp="20170903 17:07:36.679" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sessions_history; </msg>
<status status="PASS" endtime="20170903 17:07:36.680" starttime="20170903 17:07:36.679"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes</arg>
</arguments>
<msg timestamp="20170903 17:07:36.681" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedAppTypes; </msg>
<status status="PASS" endtime="20170903 17:07:36.681" starttime="20170903 17:07:36.680"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes_history</arg>
</arguments>
<msg timestamp="20170903 17:07:36.682" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedAppTypes_history; </msg>
<status status="PASS" endtime="20170903 17:07:36.682" starttime="20170903 17:07:36.682"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes</arg>
</arguments>
<msg timestamp="20170903 17:07:36.683" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedPackageTypes; </msg>
<status status="PASS" endtime="20170903 17:07:36.683" starttime="20170903 17:07:36.682"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes_history</arg>
</arguments>
<msg timestamp="20170903 17:07:36.683" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedPackageTypes_history; </msg>
<status status="PASS" endtime="20170903 17:07:36.684" starttime="20170903 17:07:36.683"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks</arg>
</arguments>
<msg timestamp="20170903 17:07:36.684" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM tasks; </msg>
<status status="PASS" endtime="20170903 17:07:36.684" starttime="20170903 17:07:36.684"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks_history</arg>
</arguments>
<msg timestamp="20170903 17:07:36.685" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM tasks_history; </msg>
<status status="PASS" endtime="20170903 17:07:36.685" starttime="20170903 17:07:36.685"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces</arg>
</arguments>
<msg timestamp="20170903 17:07:36.686" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM traces; </msg>
<status status="PASS" endtime="20170903 17:07:36.686" starttime="20170903 17:07:36.685"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces_history</arg>
</arguments>
<msg timestamp="20170903 17:07:36.686" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM traces_history; </msg>
<status status="PASS" endtime="20170903 17:07:36.687" starttime="20170903 17:07:36.686"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups</arg>
</arguments>
<msg timestamp="20170903 17:07:36.687" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM usergroups; </msg>
<status status="PASS" endtime="20170903 17:07:36.688" starttime="20170903 17:07:36.687"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups_history</arg>
</arguments>
<msg timestamp="20170903 17:07:36.688" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM usergroups_history; </msg>
<status status="PASS" endtime="20170903 17:07:36.689" starttime="20170903 17:07:36.688"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users_history</arg>
</arguments>
<msg timestamp="20170903 17:07:36.689" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM users_history; </msg>
<status status="PASS" endtime="20170903 17:07:36.689" starttime="20170903 17:07:36.689"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works</arg>
</arguments>
<msg timestamp="20170903 17:07:36.690" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM works; </msg>
<status status="PASS" endtime="20170903 17:07:36.690" starttime="20170903 17:07:36.690"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works_history</arg>
</arguments>
<msg timestamp="20170903 17:07:36.691" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM works_history; </msg>
<status status="PASS" endtime="20170903 17:07:36.691" starttime="20170903 17:07:36.690"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170903 17:07:36.692" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170903 17:07:36.692" starttime="20170903 17:07:36.692"></status>
</kw>
<status status="PASS" endtime="20170903 17:07:36.692" starttime="20170903 17:07:36.691"></status>
</kw>
<status status="PASS" endtime="20170903 17:07:36.692" starttime="20170903 17:07:36.654"></status>
</kw>
<status status="PASS" endtime="20170903 17:07:36.693" starttime="20170903 17:07:36.514"></status>
</kw>
<kw name="XWSENDDATACommand">
<doc>Usage : SENDDATA dataName [cpuType] [osName] [dataType] [accessRigths] [dataFile | dataURI | dataUID] : sends data and uploads data if dataFile provided</doc>
<arguments>
<arg>ls</arg>
<arg>macosx</arg>
<arg>x86_64</arg>
<arg>binary</arg>
<arg>/bin/ls</arg>
</arguments>
<assign>
<var>${uid}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd ${DIST_XWHEP_PATH}/bin &amp;&amp; ./xwsenddata ${dataName} ${osName} ${cpuType} ${dataType} ${dataFile-dataURI-dataUID}</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${cmd_result}</var>
</assign>
<msg timestamp="20170903 17:07:36.695" level="INFO">Starting process:
cd /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin &amp;&amp; ./xwsenddata ls macosx x86_64 binary /bin/ls</msg>
<msg timestamp="20170903 17:07:36.698" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170903 17:07:38.864" level="INFO">Process completed.</msg>
<msg timestamp="20170903 17:07:38.864" level="INFO">${cmd_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170903 17:07:38.864" starttime="20170903 17:07:36.694"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stderr}</arg>
</arguments>
<msg timestamp="20170903 17:07:38.866" level="INFO"></msg>
<status status="PASS" endtime="20170903 17:07:38.866" starttime="20170903 17:07:38.865"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
</arguments>
<msg timestamp="20170903 17:07:38.867" level="INFO">xw://vagrant-ubuntu-trusty-64/da07e478-a160-4b93-a4b3-d8cd9fbc2956</msg>
<status status="PASS" endtime="20170903 17:07:38.867" starttime="20170903 17:07:38.866"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${cmd_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170903 17:07:38.869" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170903 17:07:38.869" starttime="20170903 17:07:38.868"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
<arg>-36</arg>
</arguments>
<assign>
<var>${uid}</var>
</assign>
<msg timestamp="20170903 17:07:38.870" level="INFO">${uid} = da07e478-a160-4b93-a4b3-d8cd9fbc2956</msg>
<status status="PASS" endtime="20170903 17:07:38.870" starttime="20170903 17:07:38.869"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${uid}</arg>
</arguments>
<msg timestamp="20170903 17:07:38.871" level="INFO">da07e478-a160-4b93-a4b3-d8cd9fbc2956</msg>
<status status="PASS" endtime="20170903 17:07:38.871" starttime="20170903 17:07:38.871"></status>
</kw>
<msg timestamp="20170903 17:07:38.872" level="INFO">${uid} = da07e478-a160-4b93-a4b3-d8cd9fbc2956</msg>
<status status="PASS" endtime="20170903 17:07:38.872" starttime="20170903 17:07:36.694"></status>
</kw>
<kw name="Count From Datas Where Uid" library="XWServer">
<arguments>
<arg>${uid}</arg>
<arg>1</arg>
</arguments>
<kw name="Count From Table Where Uid" library="MySql">
<arguments>
<arg>datas</arg>
<arg>${uid}</arg>
<arg>${countExpected}</arg>
</arguments>
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170903 17:07:38.877" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170903 17:07:38.879" starttime="20170903 17:07:38.876"></status>
</kw>
<status status="PASS" endtime="20170903 17:07:38.879" starttime="20170903 17:07:38.875"></status>
</kw>
<kw name="Row Count Is Equal To X" library="DatabaseLibrary">
<doc>Check if the number of rows returned from `selectStatement` is equal to the value submitted. If not, then this</doc>
<arguments>
<arg>SELECT * FROM ${table} WHERE uid = '${uid}'</arg>
<arg>${countExpected}</arg>
</arguments>
<msg timestamp="20170903 17:07:38.881" level="INFO">Executing : Row Count Is Equal To X  |  SELECT * FROM datas WHERE uid = 'da07e478-a160-4b93-a4b3-d8cd9fbc2956'  |  1 </msg>
<msg timestamp="20170903 17:07:38.881" level="INFO">Executing : Row Count  |  SELECT * FROM datas WHERE uid = 'da07e478-a160-4b93-a4b3-d8cd9fbc2956' </msg>
<status status="PASS" endtime="20170903 17:07:38.883" starttime="20170903 17:07:38.880"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170903 17:07:38.884" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170903 17:07:38.884" starttime="20170903 17:07:38.884"></status>
</kw>
<status status="PASS" endtime="20170903 17:07:38.884" starttime="20170903 17:07:38.883"></status>
</kw>
<status status="PASS" endtime="20170903 17:07:38.884" starttime="20170903 17:07:38.874"></status>
</kw>
<status status="PASS" endtime="20170903 17:07:38.884" starttime="20170903 17:07:38.873"></status>
</kw>
<kw type="teardown" name="End XWtremWeb Command Test" library="XWCommon">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Nothing to do</arg>
</arguments>
<msg timestamp="20170903 17:07:38.886" level="INFO">Nothing to do</msg>
<status status="PASS" endtime="20170903 17:07:38.886" starttime="20170903 17:07:38.886"></status>
</kw>
<status status="PASS" endtime="20170903 17:07:38.886" starttime="20170903 17:07:38.885"></status>
</kw>
<doc>Envoyer des données avec la commande senddata</doc>
<tags>
<tag>CommandLine Tests</tag>
</tags>
<status status="PASS" endtime="20170903 17:07:38.886" critical="yes" starttime="20170903 17:07:36.513"></status>
</test>
<test id="s1-s4-t2" name="Test 1.1 Enregistrer l’application">
<kw type="setup" name="Begin XWtremWeb Command Test" library="XWCommon">
<kw name="Ping XWtremWeb Database" library="XWServer">
<kw name="Xtremweb Tables Must Exist" library="MySql">
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170903 17:07:38.891" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170903 17:07:38.892" starttime="20170903 17:07:38.890"></status>
</kw>
<status status="PASS" endtime="20170903 17:07:38.892" starttime="20170903 17:07:38.890"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>appTypes</arg>
</arguments>
<msg timestamp="20170903 17:07:38.893" level="INFO">Executing : Table Must Exist  |  appTypes </msg>
<msg timestamp="20170903 17:07:38.893" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='appTypes' </msg>
<status status="PASS" endtime="20170903 17:07:38.895" starttime="20170903 17:07:38.892"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps</arg>
</arguments>
<msg timestamp="20170903 17:07:38.895" level="INFO">Executing : Table Must Exist  |  apps </msg>
<msg timestamp="20170903 17:07:38.895" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='apps' </msg>
<status status="PASS" endtime="20170903 17:07:38.897" starttime="20170903 17:07:38.895"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps_history</arg>
</arguments>
<msg timestamp="20170903 17:07:38.898" level="INFO">Executing : Table Must Exist  |  apps_history </msg>
<msg timestamp="20170903 17:07:38.898" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='apps_history' </msg>
<status status="PASS" endtime="20170903 17:07:38.899" starttime="20170903 17:07:38.898"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>cpuTypes</arg>
</arguments>
<msg timestamp="20170903 17:07:38.900" level="INFO">Executing : Table Must Exist  |  cpuTypes </msg>
<msg timestamp="20170903 17:07:38.900" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='cpuTypes' </msg>
<status status="PASS" endtime="20170903 17:07:38.902" starttime="20170903 17:07:38.900"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>dataTypes</arg>
</arguments>
<msg timestamp="20170903 17:07:38.903" level="INFO">Executing : Table Must Exist  |  dataTypes </msg>
<msg timestamp="20170903 17:07:38.903" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='dataTypes' </msg>
<status status="PASS" endtime="20170903 17:07:38.905" starttime="20170903 17:07:38.903"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas</arg>
</arguments>
<msg timestamp="20170903 17:07:38.906" level="INFO">Executing : Table Must Exist  |  datas </msg>
<msg timestamp="20170903 17:07:38.906" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='datas' </msg>
<status status="PASS" endtime="20170903 17:07:38.908" starttime="20170903 17:07:38.906"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas_history</arg>
</arguments>
<msg timestamp="20170903 17:07:38.909" level="INFO">Executing : Table Must Exist  |  datas_history </msg>
<msg timestamp="20170903 17:07:38.909" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='datas_history' </msg>
<status status="PASS" endtime="20170903 17:07:38.912" starttime="20170903 17:07:38.908"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables</arg>
</arguments>
<msg timestamp="20170903 17:07:38.913" level="INFO">Executing : Table Must Exist  |  executables </msg>
<msg timestamp="20170903 17:07:38.913" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='executables' </msg>
<status status="PASS" endtime="20170903 17:07:38.916" starttime="20170903 17:07:38.912"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables_history</arg>
</arguments>
<msg timestamp="20170903 17:07:38.917" level="INFO">Executing : Table Must Exist  |  executables_history </msg>
<msg timestamp="20170903 17:07:38.917" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='executables_history' </msg>
<status status="PASS" endtime="20170903 17:07:38.919" starttime="20170903 17:07:38.916"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups</arg>
</arguments>
<msg timestamp="20170903 17:07:38.922" level="INFO">Executing : Table Must Exist  |  groups </msg>
<msg timestamp="20170903 17:07:38.922" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='groups' </msg>
<status status="PASS" endtime="20170903 17:07:38.924" starttime="20170903 17:07:38.921"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups_history</arg>
</arguments>
<msg timestamp="20170903 17:07:38.925" level="INFO">Executing : Table Must Exist  |  groups_history </msg>
<msg timestamp="20170903 17:07:38.925" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='groups_history' </msg>
<status status="PASS" endtime="20170903 17:07:38.927" starttime="20170903 17:07:38.924"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts</arg>
</arguments>
<msg timestamp="20170903 17:07:38.928" level="INFO">Executing : Table Must Exist  |  hosts </msg>
<msg timestamp="20170903 17:07:38.928" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='hosts' </msg>
<status status="PASS" endtime="20170903 17:07:38.930" starttime="20170903 17:07:38.928"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts_history</arg>
</arguments>
<msg timestamp="20170903 17:07:38.930" level="INFO">Executing : Table Must Exist  |  hosts_history </msg>
<msg timestamp="20170903 17:07:38.931" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='hosts_history' </msg>
<status status="PASS" endtime="20170903 17:07:38.936" starttime="20170903 17:07:38.930"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships</arg>
</arguments>
<msg timestamp="20170903 17:07:38.938" level="INFO">Executing : Table Must Exist  |  memberships </msg>
<msg timestamp="20170903 17:07:38.938" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='memberships' </msg>
<status status="PASS" endtime="20170903 17:07:38.939" starttime="20170903 17:07:38.937"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships_history</arg>
</arguments>
<msg timestamp="20170903 17:07:38.940" level="INFO">Executing : Table Must Exist  |  memberships_history </msg>
<msg timestamp="20170903 17:07:38.940" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='memberships_history' </msg>
<status status="PASS" endtime="20170903 17:07:38.941" starttime="20170903 17:07:38.939"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>oses</arg>
</arguments>
<msg timestamp="20170903 17:07:38.941" level="INFO">Executing : Table Must Exist  |  oses </msg>
<msg timestamp="20170903 17:07:38.941" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='oses' </msg>
<status status="PASS" endtime="20170903 17:07:38.942" starttime="20170903 17:07:38.941"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>packageTypes</arg>
</arguments>
<msg timestamp="20170903 17:07:38.943" level="INFO">Executing : Table Must Exist  |  packageTypes </msg>
<msg timestamp="20170903 17:07:38.943" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='packageTypes' </msg>
<status status="PASS" endtime="20170903 17:07:38.945" starttime="20170903 17:07:38.943"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions</arg>
</arguments>
<msg timestamp="20170903 17:07:38.946" level="INFO">Executing : Table Must Exist  |  sessions </msg>
<msg timestamp="20170903 17:07:38.946" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sessions' </msg>
<status status="PASS" endtime="20170903 17:07:38.948" starttime="20170903 17:07:38.946"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions_history</arg>
</arguments>
<msg timestamp="20170903 17:07:38.949" level="INFO">Executing : Table Must Exist  |  sessions_history </msg>
<msg timestamp="20170903 17:07:38.949" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sessions_history' </msg>
<status status="PASS" endtime="20170903 17:07:38.951" starttime="20170903 17:07:38.949"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes</arg>
</arguments>
<msg timestamp="20170903 17:07:38.953" level="INFO">Executing : Table Must Exist  |  sharedAppTypes </msg>
<msg timestamp="20170903 17:07:38.953" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedAppTypes' </msg>
<status status="PASS" endtime="20170903 17:07:38.955" starttime="20170903 17:07:38.952"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes_history</arg>
</arguments>
<msg timestamp="20170903 17:07:38.956" level="INFO">Executing : Table Must Exist  |  sharedAppTypes_history </msg>
<msg timestamp="20170903 17:07:38.956" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedAppTypes_history' </msg>
<status status="PASS" endtime="20170903 17:07:38.958" starttime="20170903 17:07:38.956"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes</arg>
</arguments>
<msg timestamp="20170903 17:07:38.959" level="INFO">Executing : Table Must Exist  |  sharedPackageTypes </msg>
<msg timestamp="20170903 17:07:38.959" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedPackageTypes' </msg>
<status status="PASS" endtime="20170903 17:07:38.961" starttime="20170903 17:07:38.958"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes_history</arg>
</arguments>
<msg timestamp="20170903 17:07:38.962" level="INFO">Executing : Table Must Exist  |  sharedPackageTypes_history </msg>
<msg timestamp="20170903 17:07:38.962" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedPackageTypes_history' </msg>
<status status="PASS" endtime="20170903 17:07:38.963" starttime="20170903 17:07:38.961"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>statuses</arg>
</arguments>
<msg timestamp="20170903 17:07:38.964" level="INFO">Executing : Table Must Exist  |  statuses </msg>
<msg timestamp="20170903 17:07:38.964" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='statuses' </msg>
<status status="PASS" endtime="20170903 17:07:38.967" starttime="20170903 17:07:38.964"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks</arg>
</arguments>
<msg timestamp="20170903 17:07:38.968" level="INFO">Executing : Table Must Exist  |  tasks </msg>
<msg timestamp="20170903 17:07:38.968" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='tasks' </msg>
<status status="PASS" endtime="20170903 17:07:38.970" starttime="20170903 17:07:38.967"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks_history</arg>
</arguments>
<msg timestamp="20170903 17:07:38.971" level="INFO">Executing : Table Must Exist  |  tasks_history </msg>
<msg timestamp="20170903 17:07:38.971" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='tasks_history' </msg>
<status status="PASS" endtime="20170903 17:07:38.973" starttime="20170903 17:07:38.970"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces</arg>
</arguments>
<msg timestamp="20170903 17:07:38.973" level="INFO">Executing : Table Must Exist  |  traces </msg>
<msg timestamp="20170903 17:07:38.973" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='traces' </msg>
<status status="PASS" endtime="20170903 17:07:38.975" starttime="20170903 17:07:38.973"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces_history</arg>
</arguments>
<msg timestamp="20170903 17:07:38.977" level="INFO">Executing : Table Must Exist  |  traces_history </msg>
<msg timestamp="20170903 17:07:38.977" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='traces_history' </msg>
<status status="PASS" endtime="20170903 17:07:38.979" starttime="20170903 17:07:38.975"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>userRights</arg>
</arguments>
<msg timestamp="20170903 17:07:38.979" level="INFO">Executing : Table Must Exist  |  userRights </msg>
<msg timestamp="20170903 17:07:38.980" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='userRights' </msg>
<status status="PASS" endtime="20170903 17:07:38.982" starttime="20170903 17:07:38.979"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups</arg>
</arguments>
<msg timestamp="20170903 17:07:38.982" level="INFO">Executing : Table Must Exist  |  usergroups </msg>
<msg timestamp="20170903 17:07:38.982" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='usergroups' </msg>
<status status="PASS" endtime="20170903 17:07:38.983" starttime="20170903 17:07:38.982"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups_history</arg>
</arguments>
<msg timestamp="20170903 17:07:38.984" level="INFO">Executing : Table Must Exist  |  usergroups_history </msg>
<msg timestamp="20170903 17:07:38.984" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='usergroups_history' </msg>
<status status="PASS" endtime="20170903 17:07:38.985" starttime="20170903 17:07:38.983"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users</arg>
</arguments>
<msg timestamp="20170903 17:07:38.985" level="INFO">Executing : Table Must Exist  |  users </msg>
<msg timestamp="20170903 17:07:38.985" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='users' </msg>
<status status="PASS" endtime="20170903 17:07:38.986" starttime="20170903 17:07:38.985"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users_history</arg>
</arguments>
<msg timestamp="20170903 17:07:38.986" level="INFO">Executing : Table Must Exist  |  users_history </msg>
<msg timestamp="20170903 17:07:38.986" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='users_history' </msg>
<status status="PASS" endtime="20170903 17:07:38.987" starttime="20170903 17:07:38.986"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>version</arg>
</arguments>
<msg timestamp="20170903 17:07:38.988" level="INFO">Executing : Table Must Exist  |  version </msg>
<msg timestamp="20170903 17:07:38.988" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='version' </msg>
<status status="PASS" endtime="20170903 17:07:38.989" starttime="20170903 17:07:38.987"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>versions</arg>
</arguments>
<msg timestamp="20170903 17:07:38.989" level="INFO">Executing : Table Must Exist  |  versions </msg>
<msg timestamp="20170903 17:07:38.989" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='versions' </msg>
<status status="PASS" endtime="20170903 17:07:38.990" starttime="20170903 17:07:38.989"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps</arg>
</arguments>
<msg timestamp="20170903 17:07:38.990" level="INFO">Executing : Table Must Exist  |  view_apps </msg>
<msg timestamp="20170903 17:07:38.990" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps' </msg>
<status status="PASS" endtime="20170903 17:07:38.992" starttime="20170903 17:07:38.990"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps_for_offering</arg>
</arguments>
<msg timestamp="20170903 17:07:38.992" level="INFO">Executing : Table Must Exist  |  view_apps_for_offering </msg>
<msg timestamp="20170903 17:07:38.992" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps_for_offering' </msg>
<status status="PASS" endtime="20170903 17:07:38.993" starttime="20170903 17:07:38.992"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps_for_offering_with_file_sizes</arg>
</arguments>
<msg timestamp="20170903 17:07:38.994" level="INFO">Executing : Table Must Exist  |  view_apps_for_offering_with_file_sizes </msg>
<msg timestamp="20170903 17:07:38.994" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps_for_offering_with_file_sizes' </msg>
<status status="PASS" endtime="20170903 17:07:38.996" starttime="20170903 17:07:38.994"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_datas</arg>
</arguments>
<msg timestamp="20170903 17:07:38.997" level="INFO">Executing : Table Must Exist  |  view_datas </msg>
<msg timestamp="20170903 17:07:38.997" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_datas' </msg>
<status status="PASS" endtime="20170903 17:07:38.999" starttime="20170903 17:07:38.996"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_executables</arg>
</arguments>
<msg timestamp="20170903 17:07:39.000" level="INFO">Executing : Table Must Exist  |  view_executables </msg>
<msg timestamp="20170903 17:07:39.000" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_executables' </msg>
<status status="PASS" endtime="20170903 17:07:39.003" starttime="20170903 17:07:39.000"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_groups</arg>
</arguments>
<msg timestamp="20170903 17:07:39.003" level="INFO">Executing : Table Must Exist  |  view_groups </msg>
<msg timestamp="20170903 17:07:39.004" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_groups' </msg>
<status status="PASS" endtime="20170903 17:07:39.006" starttime="20170903 17:07:39.003"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts</arg>
</arguments>
<msg timestamp="20170903 17:07:39.006" level="INFO">Executing : Table Must Exist  |  view_hosts </msg>
<msg timestamp="20170903 17:07:39.006" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts' </msg>
<status status="PASS" endtime="20170903 17:07:39.008" starttime="20170903 17:07:39.006"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_deployable</arg>
</arguments>
<msg timestamp="20170903 17:07:39.009" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_deployable </msg>
<msg timestamp="20170903 17:07:39.009" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_deployable' </msg>
<status status="PASS" endtime="20170903 17:07:39.012" starttime="20170903 17:07:39.009"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_deployable_and_shared</arg>
</arguments>
<msg timestamp="20170903 17:07:39.013" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_deployable_and_shared </msg>
<msg timestamp="20170903 17:07:39.013" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_deployable_and_shared' </msg>
<status status="PASS" endtime="20170903 17:07:39.015" starttime="20170903 17:07:39.013"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_shared</arg>
</arguments>
<msg timestamp="20170903 17:07:39.016" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_shared </msg>
<msg timestamp="20170903 17:07:39.016" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_shared' </msg>
<status status="PASS" endtime="20170903 17:07:39.019" starttime="20170903 17:07:39.016"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_sessions</arg>
</arguments>
<msg timestamp="20170903 17:07:39.019" level="INFO">Executing : Table Must Exist  |  view_sessions </msg>
<msg timestamp="20170903 17:07:39.019" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_sessions' </msg>
<status status="PASS" endtime="20170903 17:07:39.022" starttime="20170903 17:07:39.019"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_tasks</arg>
</arguments>
<msg timestamp="20170903 17:07:39.023" level="INFO">Executing : Table Must Exist  |  view_tasks </msg>
<msg timestamp="20170903 17:07:39.023" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_tasks' </msg>
<status status="PASS" endtime="20170903 17:07:39.025" starttime="20170903 17:07:39.022"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_traces</arg>
</arguments>
<msg timestamp="20170903 17:07:39.025" level="INFO">Executing : Table Must Exist  |  view_traces </msg>
<msg timestamp="20170903 17:07:39.025" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_traces' </msg>
<status status="PASS" endtime="20170903 17:07:39.027" starttime="20170903 17:07:39.025"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_usergroups</arg>
</arguments>
<msg timestamp="20170903 17:07:39.028" level="INFO">Executing : Table Must Exist  |  view_usergroups </msg>
<msg timestamp="20170903 17:07:39.028" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_usergroups' </msg>
<status status="PASS" endtime="20170903 17:07:39.030" starttime="20170903 17:07:39.027"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users</arg>
</arguments>
<msg timestamp="20170903 17:07:39.030" level="INFO">Executing : Table Must Exist  |  view_users </msg>
<msg timestamp="20170903 17:07:39.030" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users' </msg>
<status status="PASS" endtime="20170903 17:07:39.032" starttime="20170903 17:07:39.030"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_apps</arg>
</arguments>
<msg timestamp="20170903 17:07:39.032" level="INFO">Executing : Table Must Exist  |  view_users_apps </msg>
<msg timestamp="20170903 17:07:39.032" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_apps' </msg>
<status status="PASS" endtime="20170903 17:07:39.034" starttime="20170903 17:07:39.032"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_datas</arg>
</arguments>
<msg timestamp="20170903 17:07:39.034" level="INFO">Executing : Table Must Exist  |  view_users_datas </msg>
<msg timestamp="20170903 17:07:39.034" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_datas' </msg>
<status status="PASS" endtime="20170903 17:07:39.036" starttime="20170903 17:07:39.034"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_groups</arg>
</arguments>
<msg timestamp="20170903 17:07:39.036" level="INFO">Executing : Table Must Exist  |  view_users_groups </msg>
<msg timestamp="20170903 17:07:39.036" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_groups' </msg>
<status status="PASS" endtime="20170903 17:07:39.037" starttime="20170903 17:07:39.036"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_hosts</arg>
</arguments>
<msg timestamp="20170903 17:07:39.037" level="INFO">Executing : Table Must Exist  |  view_users_hosts </msg>
<msg timestamp="20170903 17:07:39.037" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_hosts' </msg>
<status status="PASS" endtime="20170903 17:07:39.039" starttime="20170903 17:07:39.037"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_sessions</arg>
</arguments>
<msg timestamp="20170903 17:07:39.039" level="INFO">Executing : Table Must Exist  |  view_users_sessions </msg>
<msg timestamp="20170903 17:07:39.039" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_sessions' </msg>
<status status="PASS" endtime="20170903 17:07:39.041" starttime="20170903 17:07:39.039"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_tasks</arg>
</arguments>
<msg timestamp="20170903 17:07:39.041" level="INFO">Executing : Table Must Exist  |  view_users_tasks </msg>
<msg timestamp="20170903 17:07:39.041" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_tasks' </msg>
<status status="PASS" endtime="20170903 17:07:39.042" starttime="20170903 17:07:39.041"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_traces</arg>
</arguments>
<msg timestamp="20170903 17:07:39.043" level="INFO">Executing : Table Must Exist  |  view_users_traces </msg>
<msg timestamp="20170903 17:07:39.043" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_traces' </msg>
<status status="PASS" endtime="20170903 17:07:39.045" starttime="20170903 17:07:39.043"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_usergroups</arg>
</arguments>
<msg timestamp="20170903 17:07:39.045" level="INFO">Executing : Table Must Exist  |  view_users_usergroups </msg>
<msg timestamp="20170903 17:07:39.046" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_usergroups' </msg>
<status status="PASS" endtime="20170903 17:07:39.048" starttime="20170903 17:07:39.045"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_users</arg>
</arguments>
<msg timestamp="20170903 17:07:39.049" level="INFO">Executing : Table Must Exist  |  view_users_users </msg>
<msg timestamp="20170903 17:07:39.049" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_users' </msg>
<status status="PASS" endtime="20170903 17:07:39.052" starttime="20170903 17:07:39.049"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_works</arg>
</arguments>
<msg timestamp="20170903 17:07:39.053" level="INFO">Executing : Table Must Exist  |  view_users_works </msg>
<msg timestamp="20170903 17:07:39.053" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_works' </msg>
<status status="PASS" endtime="20170903 17:07:39.055" starttime="20170903 17:07:39.052"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works</arg>
</arguments>
<msg timestamp="20170903 17:07:39.056" level="INFO">Executing : Table Must Exist  |  view_works </msg>
<msg timestamp="20170903 17:07:39.056" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works' </msg>
<status status="PASS" endtime="20170903 17:07:39.059" starttime="20170903 17:07:39.056"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works_for_billing</arg>
</arguments>
<msg timestamp="20170903 17:07:39.060" level="INFO">Executing : Table Must Exist  |  view_works_for_billing </msg>
<msg timestamp="20170903 17:07:39.060" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works_for_billing' </msg>
<status status="PASS" endtime="20170903 17:07:39.062" starttime="20170903 17:07:39.060"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works_for_billing_with_file_sizes</arg>
</arguments>
<msg timestamp="20170903 17:07:39.063" level="INFO">Executing : Table Must Exist  |  view_works_for_billing_with_file_sizes </msg>
<msg timestamp="20170903 17:07:39.063" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works_for_billing_with_file_sizes' </msg>
<status status="PASS" endtime="20170903 17:07:39.066" starttime="20170903 17:07:39.063"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works</arg>
</arguments>
<msg timestamp="20170903 17:07:39.066" level="INFO">Executing : Table Must Exist  |  works </msg>
<msg timestamp="20170903 17:07:39.066" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='works' </msg>
<status status="PASS" endtime="20170903 17:07:39.068" starttime="20170903 17:07:39.066"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works_history</arg>
</arguments>
<msg timestamp="20170903 17:07:39.069" level="INFO">Executing : Table Must Exist  |  works_history </msg>
<msg timestamp="20170903 17:07:39.069" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='works_history' </msg>
<status status="PASS" endtime="20170903 17:07:39.070" starttime="20170903 17:07:39.068"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170903 17:07:39.072" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170903 17:07:39.072" starttime="20170903 17:07:39.071"></status>
</kw>
<status status="PASS" endtime="20170903 17:07:39.073" starttime="20170903 17:07:39.071"></status>
</kw>
<status status="PASS" endtime="20170903 17:07:39.073" starttime="20170903 17:07:38.890"></status>
</kw>
<status status="PASS" endtime="20170903 17:07:39.073" starttime="20170903 17:07:38.889"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>TODO ping XWtremWeb server up</arg>
</arguments>
<msg timestamp="20170903 17:07:39.074" level="INFO">TODO ping XWtremWeb server up</msg>
<status status="PASS" endtime="20170903 17:07:39.074" starttime="20170903 17:07:39.073"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>TODO ping XWtremWeb worker up before one test</arg>
</arguments>
<msg timestamp="20170903 17:07:39.074" level="INFO">TODO ping XWtremWeb worker up before one test</msg>
<status status="PASS" endtime="20170903 17:07:39.074" starttime="20170903 17:07:39.074"></status>
</kw>
<kw name="Delete Fonctionnal Xtremweb Tables" library="MySql">
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170903 17:07:39.076" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170903 17:07:39.079" starttime="20170903 17:07:39.076"></status>
</kw>
<status status="PASS" endtime="20170903 17:07:39.079" starttime="20170903 17:07:39.075"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps</arg>
</arguments>
<msg timestamp="20170903 17:07:39.080" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM apps; </msg>
<status status="PASS" endtime="20170903 17:07:39.081" starttime="20170903 17:07:39.079"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps_history</arg>
</arguments>
<msg timestamp="20170903 17:07:39.081" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM apps_history; </msg>
<status status="PASS" endtime="20170903 17:07:39.082" starttime="20170903 17:07:39.081"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas</arg>
</arguments>
<msg timestamp="20170903 17:07:39.082" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM datas; </msg>
<status status="PASS" endtime="20170903 17:07:39.084" starttime="20170903 17:07:39.082"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas_history</arg>
</arguments>
<msg timestamp="20170903 17:07:39.084" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM datas_history; </msg>
<status status="PASS" endtime="20170903 17:07:39.085" starttime="20170903 17:07:39.084"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables</arg>
</arguments>
<msg timestamp="20170903 17:07:39.085" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM executables; </msg>
<status status="PASS" endtime="20170903 17:07:39.085" starttime="20170903 17:07:39.085"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables_history</arg>
</arguments>
<msg timestamp="20170903 17:07:39.086" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM executables_history; </msg>
<status status="PASS" endtime="20170903 17:07:39.086" starttime="20170903 17:07:39.085"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups</arg>
</arguments>
<msg timestamp="20170903 17:07:39.086" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM groups; </msg>
<status status="PASS" endtime="20170903 17:07:39.087" starttime="20170903 17:07:39.086"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups_history</arg>
</arguments>
<msg timestamp="20170903 17:07:39.087" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM groups_history; </msg>
<status status="PASS" endtime="20170903 17:07:39.088" starttime="20170903 17:07:39.087"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts</arg>
</arguments>
<msg timestamp="20170903 17:07:39.088" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM hosts; </msg>
<status status="PASS" endtime="20170903 17:07:39.088" starttime="20170903 17:07:39.088"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts_history</arg>
</arguments>
<msg timestamp="20170903 17:07:39.089" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM hosts_history; </msg>
<status status="PASS" endtime="20170903 17:07:39.089" starttime="20170903 17:07:39.088"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships</arg>
</arguments>
<msg timestamp="20170903 17:07:39.090" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM memberships; </msg>
<status status="PASS" endtime="20170903 17:07:39.090" starttime="20170903 17:07:39.089"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships_history</arg>
</arguments>
<msg timestamp="20170903 17:07:39.090" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM memberships_history; </msg>
<status status="PASS" endtime="20170903 17:07:39.091" starttime="20170903 17:07:39.090"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions</arg>
</arguments>
<msg timestamp="20170903 17:07:39.091" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sessions; </msg>
<status status="PASS" endtime="20170903 17:07:39.091" starttime="20170903 17:07:39.091"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions_history</arg>
</arguments>
<msg timestamp="20170903 17:07:39.092" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sessions_history; </msg>
<status status="PASS" endtime="20170903 17:07:39.093" starttime="20170903 17:07:39.091"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes</arg>
</arguments>
<msg timestamp="20170903 17:07:39.093" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedAppTypes; </msg>
<status status="PASS" endtime="20170903 17:07:39.094" starttime="20170903 17:07:39.093"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes_history</arg>
</arguments>
<msg timestamp="20170903 17:07:39.095" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedAppTypes_history; </msg>
<status status="PASS" endtime="20170903 17:07:39.096" starttime="20170903 17:07:39.095"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes</arg>
</arguments>
<msg timestamp="20170903 17:07:39.096" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedPackageTypes; </msg>
<status status="PASS" endtime="20170903 17:07:39.097" starttime="20170903 17:07:39.096"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes_history</arg>
</arguments>
<msg timestamp="20170903 17:07:39.098" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedPackageTypes_history; </msg>
<status status="PASS" endtime="20170903 17:07:39.099" starttime="20170903 17:07:39.098"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks</arg>
</arguments>
<msg timestamp="20170903 17:07:39.099" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM tasks; </msg>
<status status="PASS" endtime="20170903 17:07:39.100" starttime="20170903 17:07:39.099"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks_history</arg>
</arguments>
<msg timestamp="20170903 17:07:39.101" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM tasks_history; </msg>
<status status="PASS" endtime="20170903 17:07:39.102" starttime="20170903 17:07:39.101"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces</arg>
</arguments>
<msg timestamp="20170903 17:07:39.103" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM traces; </msg>
<status status="PASS" endtime="20170903 17:07:39.104" starttime="20170903 17:07:39.102"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces_history</arg>
</arguments>
<msg timestamp="20170903 17:07:39.105" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM traces_history; </msg>
<status status="PASS" endtime="20170903 17:07:39.106" starttime="20170903 17:07:39.105"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups</arg>
</arguments>
<msg timestamp="20170903 17:07:39.107" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM usergroups; </msg>
<status status="PASS" endtime="20170903 17:07:39.108" starttime="20170903 17:07:39.106"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups_history</arg>
</arguments>
<msg timestamp="20170903 17:07:39.108" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM usergroups_history; </msg>
<status status="PASS" endtime="20170903 17:07:39.109" starttime="20170903 17:07:39.108"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users_history</arg>
</arguments>
<msg timestamp="20170903 17:07:39.110" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM users_history; </msg>
<status status="PASS" endtime="20170903 17:07:39.111" starttime="20170903 17:07:39.110"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works</arg>
</arguments>
<msg timestamp="20170903 17:07:39.111" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM works; </msg>
<status status="PASS" endtime="20170903 17:07:39.112" starttime="20170903 17:07:39.111"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works_history</arg>
</arguments>
<msg timestamp="20170903 17:07:39.113" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM works_history; </msg>
<status status="PASS" endtime="20170903 17:07:39.114" starttime="20170903 17:07:39.112"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170903 17:07:39.115" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170903 17:07:39.115" starttime="20170903 17:07:39.115"></status>
</kw>
<status status="PASS" endtime="20170903 17:07:39.116" starttime="20170903 17:07:39.114"></status>
</kw>
<status status="PASS" endtime="20170903 17:07:39.116" starttime="20170903 17:07:39.075"></status>
</kw>
<status status="PASS" endtime="20170903 17:07:39.117" starttime="20170903 17:07:38.889"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Test 1.1 Enregistrer l’application</arg>
</arguments>
<msg timestamp="20170903 17:07:39.118" level="INFO">Test 1.1 Enregistrer l’application</msg>
<status status="PASS" endtime="20170903 17:07:39.118" starttime="20170903 17:07:39.117"></status>
</kw>
<kw name="XWSENDAPPCommand">
<doc>Usage : SENDAPP appName appType cpuType osName URI | UID : inserts/updates an application; URI or UID points to binary file ; application name must be the first parameter</doc>
<arguments>
<arg>ls</arg>
<arg>deployable</arg>
<arg>macosx</arg>
<arg>x86_64</arg>
<arg>/bin/ls</arg>
</arguments>
<assign>
<var>${uid}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd ${DIST_XWHEP_PATH}/bin &amp;&amp; ./xwsendapp ${appName} ${appType} ${cpuType} ${osName} ${uri-udi}</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${cmd_result}</var>
</assign>
<msg timestamp="20170903 17:07:39.120" level="INFO">Starting process:
cd /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin &amp;&amp; ./xwsendapp ls deployable macosx x86_64 /bin/ls</msg>
<msg timestamp="20170903 17:07:39.125" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170903 17:07:40.408" level="INFO">Process completed.</msg>
<msg timestamp="20170903 17:07:40.409" level="INFO">${cmd_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170903 17:07:40.409" starttime="20170903 17:07:39.119"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stderr}</arg>
</arguments>
<msg timestamp="20170903 17:07:40.410" level="INFO"></msg>
<status status="PASS" endtime="20170903 17:07:40.410" starttime="20170903 17:07:40.409"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
</arguments>
<msg timestamp="20170903 17:07:40.411" level="INFO">xw://vagrant-ubuntu-trusty-64/f5e298d5-2c9d-4bc0-b8f9-45954d715974</msg>
<status status="PASS" endtime="20170903 17:07:40.411" starttime="20170903 17:07:40.410"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${cmd_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170903 17:07:40.412" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170903 17:07:40.412" starttime="20170903 17:07:40.411"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
<arg>-36</arg>
</arguments>
<assign>
<var>${uid}</var>
</assign>
<msg timestamp="20170903 17:07:40.413" level="INFO">${uid} = f5e298d5-2c9d-4bc0-b8f9-45954d715974</msg>
<status status="PASS" endtime="20170903 17:07:40.413" starttime="20170903 17:07:40.412"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${uid}</arg>
</arguments>
<msg timestamp="20170903 17:07:40.413" level="INFO">f5e298d5-2c9d-4bc0-b8f9-45954d715974</msg>
<status status="PASS" endtime="20170903 17:07:40.413" starttime="20170903 17:07:40.413"></status>
</kw>
<msg timestamp="20170903 17:07:40.413" level="INFO">${uid} = f5e298d5-2c9d-4bc0-b8f9-45954d715974</msg>
<status status="PASS" endtime="20170903 17:07:40.414" starttime="20170903 17:07:39.118"></status>
</kw>
<kw name="Count From Apps Where Uid" library="XWServer">
<arguments>
<arg>${uid}</arg>
<arg>1</arg>
</arguments>
<kw name="Count From Table Where Uid" library="MySql">
<arguments>
<arg>apps</arg>
<arg>${uid}</arg>
<arg>${countExpected}</arg>
</arguments>
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170903 17:07:40.416" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170903 17:07:40.417" starttime="20170903 17:07:40.416"></status>
</kw>
<status status="PASS" endtime="20170903 17:07:40.417" starttime="20170903 17:07:40.415"></status>
</kw>
<kw name="Row Count Is Equal To X" library="DatabaseLibrary">
<doc>Check if the number of rows returned from `selectStatement` is equal to the value submitted. If not, then this</doc>
<arguments>
<arg>SELECT * FROM ${table} WHERE uid = '${uid}'</arg>
<arg>${countExpected}</arg>
</arguments>
<msg timestamp="20170903 17:07:40.418" level="INFO">Executing : Row Count Is Equal To X  |  SELECT * FROM apps WHERE uid = 'f5e298d5-2c9d-4bc0-b8f9-45954d715974'  |  1 </msg>
<msg timestamp="20170903 17:07:40.418" level="INFO">Executing : Row Count  |  SELECT * FROM apps WHERE uid = 'f5e298d5-2c9d-4bc0-b8f9-45954d715974' </msg>
<status status="PASS" endtime="20170903 17:07:40.420" starttime="20170903 17:07:40.418"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170903 17:07:40.421" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170903 17:07:40.421" starttime="20170903 17:07:40.421"></status>
</kw>
<status status="PASS" endtime="20170903 17:07:40.421" starttime="20170903 17:07:40.420"></status>
</kw>
<status status="PASS" endtime="20170903 17:07:40.421" starttime="20170903 17:07:40.415"></status>
</kw>
<status status="PASS" endtime="20170903 17:07:40.421" starttime="20170903 17:07:40.414"></status>
</kw>
<kw type="teardown" name="End XWtremWeb Command Test" library="XWCommon">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Nothing to do</arg>
</arguments>
<msg timestamp="20170903 17:07:40.423" level="INFO">Nothing to do</msg>
<status status="PASS" endtime="20170903 17:07:40.423" starttime="20170903 17:07:40.422"></status>
</kw>
<status status="PASS" endtime="20170903 17:07:40.423" starttime="20170903 17:07:40.422"></status>
</kw>
<doc>Les premiers tests doivent permettre de tester la prise en compte de la ligne de commande et de l’environnement, un ensemble de fichiers copiés dans le répertoire courant du job, du côté du worker. L’application “LS” correspond à ces pré requis.</doc>
<tags>
<tag>CommandLine Tests</tag>
</tags>
<status status="PASS" endtime="20170903 17:07:40.423" critical="yes" starttime="20170903 17:07:38.887"></status>
</test>
<test id="s1-s4-t3" name="Test 2.1 Soumettre un job sans ligne de commande">
<kw type="setup" name="Begin XWtremWeb Command Test" library="XWCommon">
<kw name="Ping XWtremWeb Database" library="XWServer">
<kw name="Xtremweb Tables Must Exist" library="MySql">
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170903 17:07:40.427" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170903 17:07:40.428" starttime="20170903 17:07:40.427"></status>
</kw>
<status status="PASS" endtime="20170903 17:07:40.428" starttime="20170903 17:07:40.426"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>appTypes</arg>
</arguments>
<msg timestamp="20170903 17:07:40.429" level="INFO">Executing : Table Must Exist  |  appTypes </msg>
<msg timestamp="20170903 17:07:40.429" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='appTypes' </msg>
<status status="PASS" endtime="20170903 17:07:40.430" starttime="20170903 17:07:40.428"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps</arg>
</arguments>
<msg timestamp="20170903 17:07:40.430" level="INFO">Executing : Table Must Exist  |  apps </msg>
<msg timestamp="20170903 17:07:40.430" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='apps' </msg>
<status status="PASS" endtime="20170903 17:07:40.431" starttime="20170903 17:07:40.430"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps_history</arg>
</arguments>
<msg timestamp="20170903 17:07:40.432" level="INFO">Executing : Table Must Exist  |  apps_history </msg>
<msg timestamp="20170903 17:07:40.432" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='apps_history' </msg>
<status status="PASS" endtime="20170903 17:07:40.433" starttime="20170903 17:07:40.431"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>cpuTypes</arg>
</arguments>
<msg timestamp="20170903 17:07:40.433" level="INFO">Executing : Table Must Exist  |  cpuTypes </msg>
<msg timestamp="20170903 17:07:40.433" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='cpuTypes' </msg>
<status status="PASS" endtime="20170903 17:07:40.434" starttime="20170903 17:07:40.433"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>dataTypes</arg>
</arguments>
<msg timestamp="20170903 17:07:40.434" level="INFO">Executing : Table Must Exist  |  dataTypes </msg>
<msg timestamp="20170903 17:07:40.434" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='dataTypes' </msg>
<status status="PASS" endtime="20170903 17:07:40.435" starttime="20170903 17:07:40.434"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas</arg>
</arguments>
<msg timestamp="20170903 17:07:40.436" level="INFO">Executing : Table Must Exist  |  datas </msg>
<msg timestamp="20170903 17:07:40.436" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='datas' </msg>
<status status="PASS" endtime="20170903 17:07:40.437" starttime="20170903 17:07:40.435"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas_history</arg>
</arguments>
<msg timestamp="20170903 17:07:40.437" level="INFO">Executing : Table Must Exist  |  datas_history </msg>
<msg timestamp="20170903 17:07:40.437" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='datas_history' </msg>
<status status="PASS" endtime="20170903 17:07:40.438" starttime="20170903 17:07:40.437"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables</arg>
</arguments>
<msg timestamp="20170903 17:07:40.438" level="INFO">Executing : Table Must Exist  |  executables </msg>
<msg timestamp="20170903 17:07:40.438" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='executables' </msg>
<status status="PASS" endtime="20170903 17:07:40.439" starttime="20170903 17:07:40.438"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables_history</arg>
</arguments>
<msg timestamp="20170903 17:07:40.440" level="INFO">Executing : Table Must Exist  |  executables_history </msg>
<msg timestamp="20170903 17:07:40.440" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='executables_history' </msg>
<status status="PASS" endtime="20170903 17:07:40.440" starttime="20170903 17:07:40.439"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups</arg>
</arguments>
<msg timestamp="20170903 17:07:40.441" level="INFO">Executing : Table Must Exist  |  groups </msg>
<msg timestamp="20170903 17:07:40.441" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='groups' </msg>
<status status="PASS" endtime="20170903 17:07:40.442" starttime="20170903 17:07:40.441"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups_history</arg>
</arguments>
<msg timestamp="20170903 17:07:40.442" level="INFO">Executing : Table Must Exist  |  groups_history </msg>
<msg timestamp="20170903 17:07:40.442" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='groups_history' </msg>
<status status="PASS" endtime="20170903 17:07:40.443" starttime="20170903 17:07:40.442"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts</arg>
</arguments>
<msg timestamp="20170903 17:07:40.443" level="INFO">Executing : Table Must Exist  |  hosts </msg>
<msg timestamp="20170903 17:07:40.443" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='hosts' </msg>
<status status="PASS" endtime="20170903 17:07:40.444" starttime="20170903 17:07:40.443"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts_history</arg>
</arguments>
<msg timestamp="20170903 17:07:40.445" level="INFO">Executing : Table Must Exist  |  hosts_history </msg>
<msg timestamp="20170903 17:07:40.445" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='hosts_history' </msg>
<status status="PASS" endtime="20170903 17:07:40.446" starttime="20170903 17:07:40.445"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships</arg>
</arguments>
<msg timestamp="20170903 17:07:40.446" level="INFO">Executing : Table Must Exist  |  memberships </msg>
<msg timestamp="20170903 17:07:40.446" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='memberships' </msg>
<status status="PASS" endtime="20170903 17:07:40.447" starttime="20170903 17:07:40.446"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships_history</arg>
</arguments>
<msg timestamp="20170903 17:07:40.447" level="INFO">Executing : Table Must Exist  |  memberships_history </msg>
<msg timestamp="20170903 17:07:40.448" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='memberships_history' </msg>
<status status="PASS" endtime="20170903 17:07:40.448" starttime="20170903 17:07:40.447"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>oses</arg>
</arguments>
<msg timestamp="20170903 17:07:40.449" level="INFO">Executing : Table Must Exist  |  oses </msg>
<msg timestamp="20170903 17:07:40.449" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='oses' </msg>
<status status="PASS" endtime="20170903 17:07:40.450" starttime="20170903 17:07:40.449"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>packageTypes</arg>
</arguments>
<msg timestamp="20170903 17:07:40.450" level="INFO">Executing : Table Must Exist  |  packageTypes </msg>
<msg timestamp="20170903 17:07:40.450" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='packageTypes' </msg>
<status status="PASS" endtime="20170903 17:07:40.451" starttime="20170903 17:07:40.450"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions</arg>
</arguments>
<msg timestamp="20170903 17:07:40.451" level="INFO">Executing : Table Must Exist  |  sessions </msg>
<msg timestamp="20170903 17:07:40.451" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sessions' </msg>
<status status="PASS" endtime="20170903 17:07:40.453" starttime="20170903 17:07:40.451"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions_history</arg>
</arguments>
<msg timestamp="20170903 17:07:40.453" level="INFO">Executing : Table Must Exist  |  sessions_history </msg>
<msg timestamp="20170903 17:07:40.453" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sessions_history' </msg>
<status status="PASS" endtime="20170903 17:07:40.455" starttime="20170903 17:07:40.453"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes</arg>
</arguments>
<msg timestamp="20170903 17:07:40.455" level="INFO">Executing : Table Must Exist  |  sharedAppTypes </msg>
<msg timestamp="20170903 17:07:40.455" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedAppTypes' </msg>
<status status="PASS" endtime="20170903 17:07:40.456" starttime="20170903 17:07:40.455"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes_history</arg>
</arguments>
<msg timestamp="20170903 17:07:40.456" level="INFO">Executing : Table Must Exist  |  sharedAppTypes_history </msg>
<msg timestamp="20170903 17:07:40.456" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedAppTypes_history' </msg>
<status status="PASS" endtime="20170903 17:07:40.457" starttime="20170903 17:07:40.456"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes</arg>
</arguments>
<msg timestamp="20170903 17:07:40.458" level="INFO">Executing : Table Must Exist  |  sharedPackageTypes </msg>
<msg timestamp="20170903 17:07:40.458" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedPackageTypes' </msg>
<status status="PASS" endtime="20170903 17:07:40.458" starttime="20170903 17:07:40.458"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes_history</arg>
</arguments>
<msg timestamp="20170903 17:07:40.459" level="INFO">Executing : Table Must Exist  |  sharedPackageTypes_history </msg>
<msg timestamp="20170903 17:07:40.459" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedPackageTypes_history' </msg>
<status status="PASS" endtime="20170903 17:07:40.460" starttime="20170903 17:07:40.458"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>statuses</arg>
</arguments>
<msg timestamp="20170903 17:07:40.460" level="INFO">Executing : Table Must Exist  |  statuses </msg>
<msg timestamp="20170903 17:07:40.460" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='statuses' </msg>
<status status="PASS" endtime="20170903 17:07:40.463" starttime="20170903 17:07:40.460"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks</arg>
</arguments>
<msg timestamp="20170903 17:07:40.464" level="INFO">Executing : Table Must Exist  |  tasks </msg>
<msg timestamp="20170903 17:07:40.464" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='tasks' </msg>
<status status="PASS" endtime="20170903 17:07:40.465" starttime="20170903 17:07:40.464"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks_history</arg>
</arguments>
<msg timestamp="20170903 17:07:40.466" level="INFO">Executing : Table Must Exist  |  tasks_history </msg>
<msg timestamp="20170903 17:07:40.466" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='tasks_history' </msg>
<status status="PASS" endtime="20170903 17:07:40.468" starttime="20170903 17:07:40.465"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces</arg>
</arguments>
<msg timestamp="20170903 17:07:40.469" level="INFO">Executing : Table Must Exist  |  traces </msg>
<msg timestamp="20170903 17:07:40.469" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='traces' </msg>
<status status="PASS" endtime="20170903 17:07:40.470" starttime="20170903 17:07:40.469"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces_history</arg>
</arguments>
<msg timestamp="20170903 17:07:40.470" level="INFO">Executing : Table Must Exist  |  traces_history </msg>
<msg timestamp="20170903 17:07:40.470" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='traces_history' </msg>
<status status="PASS" endtime="20170903 17:07:40.471" starttime="20170903 17:07:40.470"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>userRights</arg>
</arguments>
<msg timestamp="20170903 17:07:40.472" level="INFO">Executing : Table Must Exist  |  userRights </msg>
<msg timestamp="20170903 17:07:40.472" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='userRights' </msg>
<status status="PASS" endtime="20170903 17:07:40.473" starttime="20170903 17:07:40.471"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups</arg>
</arguments>
<msg timestamp="20170903 17:07:40.473" level="INFO">Executing : Table Must Exist  |  usergroups </msg>
<msg timestamp="20170903 17:07:40.473" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='usergroups' </msg>
<status status="PASS" endtime="20170903 17:07:40.474" starttime="20170903 17:07:40.473"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups_history</arg>
</arguments>
<msg timestamp="20170903 17:07:40.475" level="INFO">Executing : Table Must Exist  |  usergroups_history </msg>
<msg timestamp="20170903 17:07:40.475" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='usergroups_history' </msg>
<status status="PASS" endtime="20170903 17:07:40.475" starttime="20170903 17:07:40.474"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users</arg>
</arguments>
<msg timestamp="20170903 17:07:40.476" level="INFO">Executing : Table Must Exist  |  users </msg>
<msg timestamp="20170903 17:07:40.476" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='users' </msg>
<status status="PASS" endtime="20170903 17:07:40.477" starttime="20170903 17:07:40.476"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users_history</arg>
</arguments>
<msg timestamp="20170903 17:07:40.477" level="INFO">Executing : Table Must Exist  |  users_history </msg>
<msg timestamp="20170903 17:07:40.477" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='users_history' </msg>
<status status="PASS" endtime="20170903 17:07:40.478" starttime="20170903 17:07:40.477"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>version</arg>
</arguments>
<msg timestamp="20170903 17:07:40.479" level="INFO">Executing : Table Must Exist  |  version </msg>
<msg timestamp="20170903 17:07:40.479" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='version' </msg>
<status status="PASS" endtime="20170903 17:07:40.480" starttime="20170903 17:07:40.478"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>versions</arg>
</arguments>
<msg timestamp="20170903 17:07:40.480" level="INFO">Executing : Table Must Exist  |  versions </msg>
<msg timestamp="20170903 17:07:40.480" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='versions' </msg>
<status status="PASS" endtime="20170903 17:07:40.481" starttime="20170903 17:07:40.480"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps</arg>
</arguments>
<msg timestamp="20170903 17:07:40.481" level="INFO">Executing : Table Must Exist  |  view_apps </msg>
<msg timestamp="20170903 17:07:40.481" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps' </msg>
<status status="PASS" endtime="20170903 17:07:40.483" starttime="20170903 17:07:40.481"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps_for_offering</arg>
</arguments>
<msg timestamp="20170903 17:07:40.483" level="INFO">Executing : Table Must Exist  |  view_apps_for_offering </msg>
<msg timestamp="20170903 17:07:40.483" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps_for_offering' </msg>
<status status="PASS" endtime="20170903 17:07:40.486" starttime="20170903 17:07:40.483"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps_for_offering_with_file_sizes</arg>
</arguments>
<msg timestamp="20170903 17:07:40.487" level="INFO">Executing : Table Must Exist  |  view_apps_for_offering_with_file_sizes </msg>
<msg timestamp="20170903 17:07:40.487" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps_for_offering_with_file_sizes' </msg>
<status status="PASS" endtime="20170903 17:07:40.492" starttime="20170903 17:07:40.486"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_datas</arg>
</arguments>
<msg timestamp="20170903 17:07:40.492" level="INFO">Executing : Table Must Exist  |  view_datas </msg>
<msg timestamp="20170903 17:07:40.493" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_datas' </msg>
<status status="PASS" endtime="20170903 17:07:40.494" starttime="20170903 17:07:40.492"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_executables</arg>
</arguments>
<msg timestamp="20170903 17:07:40.494" level="INFO">Executing : Table Must Exist  |  view_executables </msg>
<msg timestamp="20170903 17:07:40.494" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_executables' </msg>
<status status="PASS" endtime="20170903 17:07:40.496" starttime="20170903 17:07:40.494"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_groups</arg>
</arguments>
<msg timestamp="20170903 17:07:40.496" level="INFO">Executing : Table Must Exist  |  view_groups </msg>
<msg timestamp="20170903 17:07:40.496" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_groups' </msg>
<status status="PASS" endtime="20170903 17:07:40.497" starttime="20170903 17:07:40.496"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts</arg>
</arguments>
<msg timestamp="20170903 17:07:40.498" level="INFO">Executing : Table Must Exist  |  view_hosts </msg>
<msg timestamp="20170903 17:07:40.498" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts' </msg>
<status status="PASS" endtime="20170903 17:07:40.499" starttime="20170903 17:07:40.498"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_deployable</arg>
</arguments>
<msg timestamp="20170903 17:07:40.499" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_deployable </msg>
<msg timestamp="20170903 17:07:40.499" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_deployable' </msg>
<status status="PASS" endtime="20170903 17:07:40.501" starttime="20170903 17:07:40.499"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_deployable_and_shared</arg>
</arguments>
<msg timestamp="20170903 17:07:40.501" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_deployable_and_shared </msg>
<msg timestamp="20170903 17:07:40.501" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_deployable_and_shared' </msg>
<status status="PASS" endtime="20170903 17:07:40.503" starttime="20170903 17:07:40.501"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_shared</arg>
</arguments>
<msg timestamp="20170903 17:07:40.503" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_shared </msg>
<msg timestamp="20170903 17:07:40.503" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_shared' </msg>
<status status="PASS" endtime="20170903 17:07:40.505" starttime="20170903 17:07:40.503"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_sessions</arg>
</arguments>
<msg timestamp="20170903 17:07:40.505" level="INFO">Executing : Table Must Exist  |  view_sessions </msg>
<msg timestamp="20170903 17:07:40.506" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_sessions' </msg>
<status status="PASS" endtime="20170903 17:07:40.507" starttime="20170903 17:07:40.505"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_tasks</arg>
</arguments>
<msg timestamp="20170903 17:07:40.507" level="INFO">Executing : Table Must Exist  |  view_tasks </msg>
<msg timestamp="20170903 17:07:40.507" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_tasks' </msg>
<status status="PASS" endtime="20170903 17:07:40.508" starttime="20170903 17:07:40.507"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_traces</arg>
</arguments>
<msg timestamp="20170903 17:07:40.508" level="INFO">Executing : Table Must Exist  |  view_traces </msg>
<msg timestamp="20170903 17:07:40.508" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_traces' </msg>
<status status="PASS" endtime="20170903 17:07:40.510" starttime="20170903 17:07:40.508"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_usergroups</arg>
</arguments>
<msg timestamp="20170903 17:07:40.510" level="INFO">Executing : Table Must Exist  |  view_usergroups </msg>
<msg timestamp="20170903 17:07:40.510" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_usergroups' </msg>
<status status="PASS" endtime="20170903 17:07:40.511" starttime="20170903 17:07:40.510"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users</arg>
</arguments>
<msg timestamp="20170903 17:07:40.511" level="INFO">Executing : Table Must Exist  |  view_users </msg>
<msg timestamp="20170903 17:07:40.511" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users' </msg>
<status status="PASS" endtime="20170903 17:07:40.513" starttime="20170903 17:07:40.511"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_apps</arg>
</arguments>
<msg timestamp="20170903 17:07:40.513" level="INFO">Executing : Table Must Exist  |  view_users_apps </msg>
<msg timestamp="20170903 17:07:40.513" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_apps' </msg>
<status status="PASS" endtime="20170903 17:07:40.515" starttime="20170903 17:07:40.513"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_datas</arg>
</arguments>
<msg timestamp="20170903 17:07:40.515" level="INFO">Executing : Table Must Exist  |  view_users_datas </msg>
<msg timestamp="20170903 17:07:40.515" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_datas' </msg>
<status status="PASS" endtime="20170903 17:07:40.517" starttime="20170903 17:07:40.515"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_groups</arg>
</arguments>
<msg timestamp="20170903 17:07:40.517" level="INFO">Executing : Table Must Exist  |  view_users_groups </msg>
<msg timestamp="20170903 17:07:40.517" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_groups' </msg>
<status status="PASS" endtime="20170903 17:07:40.519" starttime="20170903 17:07:40.517"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_hosts</arg>
</arguments>
<msg timestamp="20170903 17:07:40.519" level="INFO">Executing : Table Must Exist  |  view_users_hosts </msg>
<msg timestamp="20170903 17:07:40.519" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_hosts' </msg>
<status status="PASS" endtime="20170903 17:07:40.520" starttime="20170903 17:07:40.519"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_sessions</arg>
</arguments>
<msg timestamp="20170903 17:07:40.521" level="INFO">Executing : Table Must Exist  |  view_users_sessions </msg>
<msg timestamp="20170903 17:07:40.521" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_sessions' </msg>
<status status="PASS" endtime="20170903 17:07:40.522" starttime="20170903 17:07:40.520"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_tasks</arg>
</arguments>
<msg timestamp="20170903 17:07:40.522" level="INFO">Executing : Table Must Exist  |  view_users_tasks </msg>
<msg timestamp="20170903 17:07:40.522" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_tasks' </msg>
<status status="PASS" endtime="20170903 17:07:40.523" starttime="20170903 17:07:40.522"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_traces</arg>
</arguments>
<msg timestamp="20170903 17:07:40.523" level="INFO">Executing : Table Must Exist  |  view_users_traces </msg>
<msg timestamp="20170903 17:07:40.523" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_traces' </msg>
<status status="PASS" endtime="20170903 17:07:40.525" starttime="20170903 17:07:40.523"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_usergroups</arg>
</arguments>
<msg timestamp="20170903 17:07:40.525" level="INFO">Executing : Table Must Exist  |  view_users_usergroups </msg>
<msg timestamp="20170903 17:07:40.525" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_usergroups' </msg>
<status status="PASS" endtime="20170903 17:07:40.526" starttime="20170903 17:07:40.525"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_users</arg>
</arguments>
<msg timestamp="20170903 17:07:40.526" level="INFO">Executing : Table Must Exist  |  view_users_users </msg>
<msg timestamp="20170903 17:07:40.526" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_users' </msg>
<status status="PASS" endtime="20170903 17:07:40.528" starttime="20170903 17:07:40.526"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_works</arg>
</arguments>
<msg timestamp="20170903 17:07:40.528" level="INFO">Executing : Table Must Exist  |  view_users_works </msg>
<msg timestamp="20170903 17:07:40.528" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_works' </msg>
<status status="PASS" endtime="20170903 17:07:40.529" starttime="20170903 17:07:40.528"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works</arg>
</arguments>
<msg timestamp="20170903 17:07:40.530" level="INFO">Executing : Table Must Exist  |  view_works </msg>
<msg timestamp="20170903 17:07:40.530" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works' </msg>
<status status="PASS" endtime="20170903 17:07:40.531" starttime="20170903 17:07:40.530"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works_for_billing</arg>
</arguments>
<msg timestamp="20170903 17:07:40.531" level="INFO">Executing : Table Must Exist  |  view_works_for_billing </msg>
<msg timestamp="20170903 17:07:40.531" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works_for_billing' </msg>
<status status="PASS" endtime="20170903 17:07:40.532" starttime="20170903 17:07:40.531"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works_for_billing_with_file_sizes</arg>
</arguments>
<msg timestamp="20170903 17:07:40.532" level="INFO">Executing : Table Must Exist  |  view_works_for_billing_with_file_sizes </msg>
<msg timestamp="20170903 17:07:40.532" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works_for_billing_with_file_sizes' </msg>
<status status="PASS" endtime="20170903 17:07:40.534" starttime="20170903 17:07:40.532"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works</arg>
</arguments>
<msg timestamp="20170903 17:07:40.534" level="INFO">Executing : Table Must Exist  |  works </msg>
<msg timestamp="20170903 17:07:40.535" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='works' </msg>
<status status="PASS" endtime="20170903 17:07:40.537" starttime="20170903 17:07:40.534"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works_history</arg>
</arguments>
<msg timestamp="20170903 17:07:40.537" level="INFO">Executing : Table Must Exist  |  works_history </msg>
<msg timestamp="20170903 17:07:40.537" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='works_history' </msg>
<status status="PASS" endtime="20170903 17:07:40.539" starttime="20170903 17:07:40.537"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170903 17:07:40.539" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170903 17:07:40.540" starttime="20170903 17:07:40.539"></status>
</kw>
<status status="PASS" endtime="20170903 17:07:40.540" starttime="20170903 17:07:40.539"></status>
</kw>
<status status="PASS" endtime="20170903 17:07:40.540" starttime="20170903 17:07:40.426"></status>
</kw>
<status status="PASS" endtime="20170903 17:07:40.540" starttime="20170903 17:07:40.426"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>TODO ping XWtremWeb server up</arg>
</arguments>
<msg timestamp="20170903 17:07:40.540" level="INFO">TODO ping XWtremWeb server up</msg>
<status status="PASS" endtime="20170903 17:07:40.540" starttime="20170903 17:07:40.540"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>TODO ping XWtremWeb worker up before one test</arg>
</arguments>
<msg timestamp="20170903 17:07:40.541" level="INFO">TODO ping XWtremWeb worker up before one test</msg>
<status status="PASS" endtime="20170903 17:07:40.541" starttime="20170903 17:07:40.541"></status>
</kw>
<kw name="Delete Fonctionnal Xtremweb Tables" library="MySql">
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170903 17:07:40.542" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170903 17:07:40.543" starttime="20170903 17:07:40.542"></status>
</kw>
<status status="PASS" endtime="20170903 17:07:40.543" starttime="20170903 17:07:40.541"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps</arg>
</arguments>
<msg timestamp="20170903 17:07:40.544" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM apps; </msg>
<status status="PASS" endtime="20170903 17:07:40.546" starttime="20170903 17:07:40.543"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps_history</arg>
</arguments>
<msg timestamp="20170903 17:07:40.546" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM apps_history; </msg>
<status status="PASS" endtime="20170903 17:07:40.547" starttime="20170903 17:07:40.546"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas</arg>
</arguments>
<msg timestamp="20170903 17:07:40.547" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM datas; </msg>
<status status="PASS" endtime="20170903 17:07:40.548" starttime="20170903 17:07:40.547"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas_history</arg>
</arguments>
<msg timestamp="20170903 17:07:40.549" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM datas_history; </msg>
<status status="PASS" endtime="20170903 17:07:40.549" starttime="20170903 17:07:40.548"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables</arg>
</arguments>
<msg timestamp="20170903 17:07:40.549" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM executables; </msg>
<status status="PASS" endtime="20170903 17:07:40.550" starttime="20170903 17:07:40.549"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables_history</arg>
</arguments>
<msg timestamp="20170903 17:07:40.550" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM executables_history; </msg>
<status status="PASS" endtime="20170903 17:07:40.550" starttime="20170903 17:07:40.550"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups</arg>
</arguments>
<msg timestamp="20170903 17:07:40.551" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM groups; </msg>
<status status="PASS" endtime="20170903 17:07:40.551" starttime="20170903 17:07:40.550"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups_history</arg>
</arguments>
<msg timestamp="20170903 17:07:40.551" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM groups_history; </msg>
<status status="PASS" endtime="20170903 17:07:40.552" starttime="20170903 17:07:40.551"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts</arg>
</arguments>
<msg timestamp="20170903 17:07:40.552" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM hosts; </msg>
<status status="PASS" endtime="20170903 17:07:40.552" starttime="20170903 17:07:40.552"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts_history</arg>
</arguments>
<msg timestamp="20170903 17:07:40.553" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM hosts_history; </msg>
<status status="PASS" endtime="20170903 17:07:40.553" starttime="20170903 17:07:40.553"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships</arg>
</arguments>
<msg timestamp="20170903 17:07:40.553" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM memberships; </msg>
<status status="PASS" endtime="20170903 17:07:40.554" starttime="20170903 17:07:40.553"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships_history</arg>
</arguments>
<msg timestamp="20170903 17:07:40.554" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM memberships_history; </msg>
<status status="PASS" endtime="20170903 17:07:40.554" starttime="20170903 17:07:40.554"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions</arg>
</arguments>
<msg timestamp="20170903 17:07:40.555" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sessions; </msg>
<status status="PASS" endtime="20170903 17:07:40.555" starttime="20170903 17:07:40.555"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions_history</arg>
</arguments>
<msg timestamp="20170903 17:07:40.555" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sessions_history; </msg>
<status status="PASS" endtime="20170903 17:07:40.556" starttime="20170903 17:07:40.555"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes</arg>
</arguments>
<msg timestamp="20170903 17:07:40.556" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedAppTypes; </msg>
<status status="PASS" endtime="20170903 17:07:40.556" starttime="20170903 17:07:40.556"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes_history</arg>
</arguments>
<msg timestamp="20170903 17:07:40.557" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedAppTypes_history; </msg>
<status status="PASS" endtime="20170903 17:07:40.557" starttime="20170903 17:07:40.557"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes</arg>
</arguments>
<msg timestamp="20170903 17:07:40.558" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedPackageTypes; </msg>
<status status="PASS" endtime="20170903 17:07:40.558" starttime="20170903 17:07:40.557"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes_history</arg>
</arguments>
<msg timestamp="20170903 17:07:40.558" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedPackageTypes_history; </msg>
<status status="PASS" endtime="20170903 17:07:40.559" starttime="20170903 17:07:40.558"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks</arg>
</arguments>
<msg timestamp="20170903 17:07:40.559" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM tasks; </msg>
<status status="PASS" endtime="20170903 17:07:40.560" starttime="20170903 17:07:40.559"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks_history</arg>
</arguments>
<msg timestamp="20170903 17:07:40.560" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM tasks_history; </msg>
<status status="PASS" endtime="20170903 17:07:40.560" starttime="20170903 17:07:40.560"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces</arg>
</arguments>
<msg timestamp="20170903 17:07:40.561" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM traces; </msg>
<status status="PASS" endtime="20170903 17:07:40.561" starttime="20170903 17:07:40.561"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces_history</arg>
</arguments>
<msg timestamp="20170903 17:07:40.561" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM traces_history; </msg>
<status status="PASS" endtime="20170903 17:07:40.562" starttime="20170903 17:07:40.561"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups</arg>
</arguments>
<msg timestamp="20170903 17:07:40.562" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM usergroups; </msg>
<status status="PASS" endtime="20170903 17:07:40.562" starttime="20170903 17:07:40.562"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups_history</arg>
</arguments>
<msg timestamp="20170903 17:07:40.564" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM usergroups_history; </msg>
<status status="PASS" endtime="20170903 17:07:40.564" starttime="20170903 17:07:40.563"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users_history</arg>
</arguments>
<msg timestamp="20170903 17:07:40.565" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM users_history; </msg>
<status status="PASS" endtime="20170903 17:07:40.565" starttime="20170903 17:07:40.564"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works</arg>
</arguments>
<msg timestamp="20170903 17:07:40.566" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM works; </msg>
<status status="PASS" endtime="20170903 17:07:40.566" starttime="20170903 17:07:40.565"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works_history</arg>
</arguments>
<msg timestamp="20170903 17:07:40.566" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM works_history; </msg>
<status status="PASS" endtime="20170903 17:07:40.567" starttime="20170903 17:07:40.566"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170903 17:07:40.568" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170903 17:07:40.568" starttime="20170903 17:07:40.567"></status>
</kw>
<status status="PASS" endtime="20170903 17:07:40.568" starttime="20170903 17:07:40.567"></status>
</kw>
<status status="PASS" endtime="20170903 17:07:40.568" starttime="20170903 17:07:40.541"></status>
</kw>
<status status="PASS" endtime="20170903 17:07:40.569" starttime="20170903 17:07:40.425"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>TODO</arg>
</arguments>
<msg timestamp="20170903 17:07:40.570" level="INFO">TODO</msg>
<status status="PASS" endtime="20170903 17:07:40.570" starttime="20170903 17:07:40.569"></status>
</kw>
<kw type="teardown" name="End XWtremWeb Command Test" library="XWCommon">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Nothing to do</arg>
</arguments>
<msg timestamp="20170903 17:07:40.572" level="INFO">Nothing to do</msg>
<status status="PASS" endtime="20170903 17:07:40.572" starttime="20170903 17:07:40.572"></status>
</kw>
<status status="PASS" endtime="20170903 17:07:40.573" starttime="20170903 17:07:40.571"></status>
</kw>
<doc>Ces tests doivent prouver que la ligne de commande est prise en charge correctement.</doc>
<tags>
<tag>CommandLine Tests</tag>
</tags>
<status status="PASS" endtime="20170903 17:07:40.573" critical="yes" starttime="20170903 17:07:40.424"></status>
</test>
<test id="s1-s4-t4" name="Test 2.2 Soumettre un job avec ligne de commande">
<kw type="setup" name="Begin XWtremWeb Command Test" library="XWCommon">
<kw name="Ping XWtremWeb Database" library="XWServer">
<kw name="Xtremweb Tables Must Exist" library="MySql">
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170903 17:07:40.580" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170903 17:07:40.582" starttime="20170903 17:07:40.579"></status>
</kw>
<status status="PASS" endtime="20170903 17:07:40.582" starttime="20170903 17:07:40.579"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>appTypes</arg>
</arguments>
<msg timestamp="20170903 17:07:40.583" level="INFO">Executing : Table Must Exist  |  appTypes </msg>
<msg timestamp="20170903 17:07:40.583" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='appTypes' </msg>
<status status="PASS" endtime="20170903 17:07:40.584" starttime="20170903 17:07:40.582"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps</arg>
</arguments>
<msg timestamp="20170903 17:07:40.584" level="INFO">Executing : Table Must Exist  |  apps </msg>
<msg timestamp="20170903 17:07:40.585" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='apps' </msg>
<status status="PASS" endtime="20170903 17:07:40.586" starttime="20170903 17:07:40.584"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps_history</arg>
</arguments>
<msg timestamp="20170903 17:07:40.586" level="INFO">Executing : Table Must Exist  |  apps_history </msg>
<msg timestamp="20170903 17:07:40.586" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='apps_history' </msg>
<status status="PASS" endtime="20170903 17:07:40.587" starttime="20170903 17:07:40.586"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>cpuTypes</arg>
</arguments>
<msg timestamp="20170903 17:07:40.587" level="INFO">Executing : Table Must Exist  |  cpuTypes </msg>
<msg timestamp="20170903 17:07:40.587" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='cpuTypes' </msg>
<status status="PASS" endtime="20170903 17:07:40.589" starttime="20170903 17:07:40.587"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>dataTypes</arg>
</arguments>
<msg timestamp="20170903 17:07:40.589" level="INFO">Executing : Table Must Exist  |  dataTypes </msg>
<msg timestamp="20170903 17:07:40.589" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='dataTypes' </msg>
<status status="PASS" endtime="20170903 17:07:40.590" starttime="20170903 17:07:40.589"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas</arg>
</arguments>
<msg timestamp="20170903 17:07:40.591" level="INFO">Executing : Table Must Exist  |  datas </msg>
<msg timestamp="20170903 17:07:40.591" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='datas' </msg>
<status status="PASS" endtime="20170903 17:07:40.591" starttime="20170903 17:07:40.590"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas_history</arg>
</arguments>
<msg timestamp="20170903 17:07:40.592" level="INFO">Executing : Table Must Exist  |  datas_history </msg>
<msg timestamp="20170903 17:07:40.592" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='datas_history' </msg>
<status status="PASS" endtime="20170903 17:07:40.593" starttime="20170903 17:07:40.592"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables</arg>
</arguments>
<msg timestamp="20170903 17:07:40.594" level="INFO">Executing : Table Must Exist  |  executables </msg>
<msg timestamp="20170903 17:07:40.594" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='executables' </msg>
<status status="PASS" endtime="20170903 17:07:40.597" starttime="20170903 17:07:40.593"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables_history</arg>
</arguments>
<msg timestamp="20170903 17:07:40.598" level="INFO">Executing : Table Must Exist  |  executables_history </msg>
<msg timestamp="20170903 17:07:40.598" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='executables_history' </msg>
<status status="PASS" endtime="20170903 17:07:40.601" starttime="20170903 17:07:40.597"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups</arg>
</arguments>
<msg timestamp="20170903 17:07:40.602" level="INFO">Executing : Table Must Exist  |  groups </msg>
<msg timestamp="20170903 17:07:40.602" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='groups' </msg>
<status status="PASS" endtime="20170903 17:07:40.604" starttime="20170903 17:07:40.602"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups_history</arg>
</arguments>
<msg timestamp="20170903 17:07:40.605" level="INFO">Executing : Table Must Exist  |  groups_history </msg>
<msg timestamp="20170903 17:07:40.605" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='groups_history' </msg>
<status status="PASS" endtime="20170903 17:07:40.607" starttime="20170903 17:07:40.605"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts</arg>
</arguments>
<msg timestamp="20170903 17:07:40.608" level="INFO">Executing : Table Must Exist  |  hosts </msg>
<msg timestamp="20170903 17:07:40.608" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='hosts' </msg>
<status status="PASS" endtime="20170903 17:07:40.611" starttime="20170903 17:07:40.608"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts_history</arg>
</arguments>
<msg timestamp="20170903 17:07:40.613" level="INFO">Executing : Table Must Exist  |  hosts_history </msg>
<msg timestamp="20170903 17:07:40.613" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='hosts_history' </msg>
<status status="PASS" endtime="20170903 17:07:40.616" starttime="20170903 17:07:40.612"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships</arg>
</arguments>
<msg timestamp="20170903 17:07:40.616" level="INFO">Executing : Table Must Exist  |  memberships </msg>
<msg timestamp="20170903 17:07:40.617" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='memberships' </msg>
<status status="PASS" endtime="20170903 17:07:40.620" starttime="20170903 17:07:40.616"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships_history</arg>
</arguments>
<msg timestamp="20170903 17:07:40.621" level="INFO">Executing : Table Must Exist  |  memberships_history </msg>
<msg timestamp="20170903 17:07:40.621" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='memberships_history' </msg>
<status status="PASS" endtime="20170903 17:07:40.623" starttime="20170903 17:07:40.621"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>oses</arg>
</arguments>
<msg timestamp="20170903 17:07:40.624" level="INFO">Executing : Table Must Exist  |  oses </msg>
<msg timestamp="20170903 17:07:40.624" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='oses' </msg>
<status status="PASS" endtime="20170903 17:07:40.626" starttime="20170903 17:07:40.623"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>packageTypes</arg>
</arguments>
<msg timestamp="20170903 17:07:40.627" level="INFO">Executing : Table Must Exist  |  packageTypes </msg>
<msg timestamp="20170903 17:07:40.627" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='packageTypes' </msg>
<status status="PASS" endtime="20170903 17:07:40.630" starttime="20170903 17:07:40.627"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions</arg>
</arguments>
<msg timestamp="20170903 17:07:40.630" level="INFO">Executing : Table Must Exist  |  sessions </msg>
<msg timestamp="20170903 17:07:40.630" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sessions' </msg>
<status status="PASS" endtime="20170903 17:07:40.634" starttime="20170903 17:07:40.630"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions_history</arg>
</arguments>
<msg timestamp="20170903 17:07:40.634" level="INFO">Executing : Table Must Exist  |  sessions_history </msg>
<msg timestamp="20170903 17:07:40.635" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sessions_history' </msg>
<status status="PASS" endtime="20170903 17:07:40.639" starttime="20170903 17:07:40.634"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes</arg>
</arguments>
<msg timestamp="20170903 17:07:40.639" level="INFO">Executing : Table Must Exist  |  sharedAppTypes </msg>
<msg timestamp="20170903 17:07:40.639" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedAppTypes' </msg>
<status status="PASS" endtime="20170903 17:07:40.640" starttime="20170903 17:07:40.639"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes_history</arg>
</arguments>
<msg timestamp="20170903 17:07:40.641" level="INFO">Executing : Table Must Exist  |  sharedAppTypes_history </msg>
<msg timestamp="20170903 17:07:40.641" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedAppTypes_history' </msg>
<status status="PASS" endtime="20170903 17:07:40.642" starttime="20170903 17:07:40.640"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes</arg>
</arguments>
<msg timestamp="20170903 17:07:40.642" level="INFO">Executing : Table Must Exist  |  sharedPackageTypes </msg>
<msg timestamp="20170903 17:07:40.642" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedPackageTypes' </msg>
<status status="PASS" endtime="20170903 17:07:40.644" starttime="20170903 17:07:40.642"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes_history</arg>
</arguments>
<msg timestamp="20170903 17:07:40.645" level="INFO">Executing : Table Must Exist  |  sharedPackageTypes_history </msg>
<msg timestamp="20170903 17:07:40.645" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedPackageTypes_history' </msg>
<status status="PASS" endtime="20170903 17:07:40.647" starttime="20170903 17:07:40.644"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>statuses</arg>
</arguments>
<msg timestamp="20170903 17:07:40.647" level="INFO">Executing : Table Must Exist  |  statuses </msg>
<msg timestamp="20170903 17:07:40.648" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='statuses' </msg>
<status status="PASS" endtime="20170903 17:07:40.650" starttime="20170903 17:07:40.647"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks</arg>
</arguments>
<msg timestamp="20170903 17:07:40.652" level="INFO">Executing : Table Must Exist  |  tasks </msg>
<msg timestamp="20170903 17:07:40.652" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='tasks' </msg>
<status status="PASS" endtime="20170903 17:07:40.654" starttime="20170903 17:07:40.650"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks_history</arg>
</arguments>
<msg timestamp="20170903 17:07:40.654" level="INFO">Executing : Table Must Exist  |  tasks_history </msg>
<msg timestamp="20170903 17:07:40.654" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='tasks_history' </msg>
<status status="PASS" endtime="20170903 17:07:40.656" starttime="20170903 17:07:40.654"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces</arg>
</arguments>
<msg timestamp="20170903 17:07:40.656" level="INFO">Executing : Table Must Exist  |  traces </msg>
<msg timestamp="20170903 17:07:40.656" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='traces' </msg>
<status status="PASS" endtime="20170903 17:07:40.657" starttime="20170903 17:07:40.656"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces_history</arg>
</arguments>
<msg timestamp="20170903 17:07:40.658" level="INFO">Executing : Table Must Exist  |  traces_history </msg>
<msg timestamp="20170903 17:07:40.658" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='traces_history' </msg>
<status status="PASS" endtime="20170903 17:07:40.659" starttime="20170903 17:07:40.657"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>userRights</arg>
</arguments>
<msg timestamp="20170903 17:07:40.659" level="INFO">Executing : Table Must Exist  |  userRights </msg>
<msg timestamp="20170903 17:07:40.659" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='userRights' </msg>
<status status="PASS" endtime="20170903 17:07:40.660" starttime="20170903 17:07:40.659"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups</arg>
</arguments>
<msg timestamp="20170903 17:07:40.660" level="INFO">Executing : Table Must Exist  |  usergroups </msg>
<msg timestamp="20170903 17:07:40.660" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='usergroups' </msg>
<status status="PASS" endtime="20170903 17:07:40.661" starttime="20170903 17:07:40.660"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups_history</arg>
</arguments>
<msg timestamp="20170903 17:07:40.662" level="INFO">Executing : Table Must Exist  |  usergroups_history </msg>
<msg timestamp="20170903 17:07:40.662" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='usergroups_history' </msg>
<status status="PASS" endtime="20170903 17:07:40.663" starttime="20170903 17:07:40.661"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users</arg>
</arguments>
<msg timestamp="20170903 17:07:40.663" level="INFO">Executing : Table Must Exist  |  users </msg>
<msg timestamp="20170903 17:07:40.663" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='users' </msg>
<status status="PASS" endtime="20170903 17:07:40.664" starttime="20170903 17:07:40.663"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users_history</arg>
</arguments>
<msg timestamp="20170903 17:07:40.664" level="INFO">Executing : Table Must Exist  |  users_history </msg>
<msg timestamp="20170903 17:07:40.664" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='users_history' </msg>
<status status="PASS" endtime="20170903 17:07:40.665" starttime="20170903 17:07:40.664"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>version</arg>
</arguments>
<msg timestamp="20170903 17:07:40.666" level="INFO">Executing : Table Must Exist  |  version </msg>
<msg timestamp="20170903 17:07:40.666" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='version' </msg>
<status status="PASS" endtime="20170903 17:07:40.667" starttime="20170903 17:07:40.665"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>versions</arg>
</arguments>
<msg timestamp="20170903 17:07:40.667" level="INFO">Executing : Table Must Exist  |  versions </msg>
<msg timestamp="20170903 17:07:40.667" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='versions' </msg>
<status status="PASS" endtime="20170903 17:07:40.668" starttime="20170903 17:07:40.667"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps</arg>
</arguments>
<msg timestamp="20170903 17:07:40.669" level="INFO">Executing : Table Must Exist  |  view_apps </msg>
<msg timestamp="20170903 17:07:40.669" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps' </msg>
<status status="PASS" endtime="20170903 17:07:40.670" starttime="20170903 17:07:40.669"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps_for_offering</arg>
</arguments>
<msg timestamp="20170903 17:07:40.670" level="INFO">Executing : Table Must Exist  |  view_apps_for_offering </msg>
<msg timestamp="20170903 17:07:40.671" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps_for_offering' </msg>
<status status="PASS" endtime="20170903 17:07:40.672" starttime="20170903 17:07:40.670"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps_for_offering_with_file_sizes</arg>
</arguments>
<msg timestamp="20170903 17:07:40.673" level="INFO">Executing : Table Must Exist  |  view_apps_for_offering_with_file_sizes </msg>
<msg timestamp="20170903 17:07:40.673" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps_for_offering_with_file_sizes' </msg>
<status status="PASS" endtime="20170903 17:07:40.674" starttime="20170903 17:07:40.672"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_datas</arg>
</arguments>
<msg timestamp="20170903 17:07:40.674" level="INFO">Executing : Table Must Exist  |  view_datas </msg>
<msg timestamp="20170903 17:07:40.674" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_datas' </msg>
<status status="PASS" endtime="20170903 17:07:40.675" starttime="20170903 17:07:40.674"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_executables</arg>
</arguments>
<msg timestamp="20170903 17:07:40.676" level="INFO">Executing : Table Must Exist  |  view_executables </msg>
<msg timestamp="20170903 17:07:40.676" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_executables' </msg>
<status status="PASS" endtime="20170903 17:07:40.677" starttime="20170903 17:07:40.675"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_groups</arg>
</arguments>
<msg timestamp="20170903 17:07:40.678" level="INFO">Executing : Table Must Exist  |  view_groups </msg>
<msg timestamp="20170903 17:07:40.678" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_groups' </msg>
<status status="PASS" endtime="20170903 17:07:40.679" starttime="20170903 17:07:40.677"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts</arg>
</arguments>
<msg timestamp="20170903 17:07:40.679" level="INFO">Executing : Table Must Exist  |  view_hosts </msg>
<msg timestamp="20170903 17:07:40.679" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts' </msg>
<status status="PASS" endtime="20170903 17:07:40.680" starttime="20170903 17:07:40.679"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_deployable</arg>
</arguments>
<msg timestamp="20170903 17:07:40.680" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_deployable </msg>
<msg timestamp="20170903 17:07:40.680" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_deployable' </msg>
<status status="PASS" endtime="20170903 17:07:40.682" starttime="20170903 17:07:40.680"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_deployable_and_shared</arg>
</arguments>
<msg timestamp="20170903 17:07:40.682" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_deployable_and_shared </msg>
<msg timestamp="20170903 17:07:40.682" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_deployable_and_shared' </msg>
<status status="PASS" endtime="20170903 17:07:40.684" starttime="20170903 17:07:40.682"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_shared</arg>
</arguments>
<msg timestamp="20170903 17:07:40.684" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_shared </msg>
<msg timestamp="20170903 17:07:40.684" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_shared' </msg>
<status status="PASS" endtime="20170903 17:07:40.685" starttime="20170903 17:07:40.684"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_sessions</arg>
</arguments>
<msg timestamp="20170903 17:07:40.686" level="INFO">Executing : Table Must Exist  |  view_sessions </msg>
<msg timestamp="20170903 17:07:40.686" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_sessions' </msg>
<status status="PASS" endtime="20170903 17:07:40.687" starttime="20170903 17:07:40.685"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_tasks</arg>
</arguments>
<msg timestamp="20170903 17:07:40.687" level="INFO">Executing : Table Must Exist  |  view_tasks </msg>
<msg timestamp="20170903 17:07:40.687" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_tasks' </msg>
<status status="PASS" endtime="20170903 17:07:40.689" starttime="20170903 17:07:40.687"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_traces</arg>
</arguments>
<msg timestamp="20170903 17:07:40.689" level="INFO">Executing : Table Must Exist  |  view_traces </msg>
<msg timestamp="20170903 17:07:40.689" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_traces' </msg>
<status status="PASS" endtime="20170903 17:07:40.690" starttime="20170903 17:07:40.689"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_usergroups</arg>
</arguments>
<msg timestamp="20170903 17:07:40.691" level="INFO">Executing : Table Must Exist  |  view_usergroups </msg>
<msg timestamp="20170903 17:07:40.691" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_usergroups' </msg>
<status status="PASS" endtime="20170903 17:07:40.692" starttime="20170903 17:07:40.691"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users</arg>
</arguments>
<msg timestamp="20170903 17:07:40.692" level="INFO">Executing : Table Must Exist  |  view_users </msg>
<msg timestamp="20170903 17:07:40.692" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users' </msg>
<status status="PASS" endtime="20170903 17:07:40.693" starttime="20170903 17:07:40.692"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_apps</arg>
</arguments>
<msg timestamp="20170903 17:07:40.694" level="INFO">Executing : Table Must Exist  |  view_users_apps </msg>
<msg timestamp="20170903 17:07:40.694" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_apps' </msg>
<status status="PASS" endtime="20170903 17:07:40.695" starttime="20170903 17:07:40.694"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_datas</arg>
</arguments>
<msg timestamp="20170903 17:07:40.695" level="INFO">Executing : Table Must Exist  |  view_users_datas </msg>
<msg timestamp="20170903 17:07:40.695" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_datas' </msg>
<status status="PASS" endtime="20170903 17:07:40.696" starttime="20170903 17:07:40.695"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_groups</arg>
</arguments>
<msg timestamp="20170903 17:07:40.697" level="INFO">Executing : Table Must Exist  |  view_users_groups </msg>
<msg timestamp="20170903 17:07:40.697" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_groups' </msg>
<status status="PASS" endtime="20170903 17:07:40.698" starttime="20170903 17:07:40.696"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_hosts</arg>
</arguments>
<msg timestamp="20170903 17:07:40.698" level="INFO">Executing : Table Must Exist  |  view_users_hosts </msg>
<msg timestamp="20170903 17:07:40.698" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_hosts' </msg>
<status status="PASS" endtime="20170903 17:07:40.699" starttime="20170903 17:07:40.698"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_sessions</arg>
</arguments>
<msg timestamp="20170903 17:07:40.699" level="INFO">Executing : Table Must Exist  |  view_users_sessions </msg>
<msg timestamp="20170903 17:07:40.700" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_sessions' </msg>
<status status="PASS" endtime="20170903 17:07:40.701" starttime="20170903 17:07:40.699"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_tasks</arg>
</arguments>
<msg timestamp="20170903 17:07:40.701" level="INFO">Executing : Table Must Exist  |  view_users_tasks </msg>
<msg timestamp="20170903 17:07:40.701" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_tasks' </msg>
<status status="PASS" endtime="20170903 17:07:40.703" starttime="20170903 17:07:40.701"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_traces</arg>
</arguments>
<msg timestamp="20170903 17:07:40.703" level="INFO">Executing : Table Must Exist  |  view_users_traces </msg>
<msg timestamp="20170903 17:07:40.703" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_traces' </msg>
<status status="PASS" endtime="20170903 17:07:40.706" starttime="20170903 17:07:40.703"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_usergroups</arg>
</arguments>
<msg timestamp="20170903 17:07:40.707" level="INFO">Executing : Table Must Exist  |  view_users_usergroups </msg>
<msg timestamp="20170903 17:07:40.707" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_usergroups' </msg>
<status status="PASS" endtime="20170903 17:07:40.708" starttime="20170903 17:07:40.706"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_users</arg>
</arguments>
<msg timestamp="20170903 17:07:40.708" level="INFO">Executing : Table Must Exist  |  view_users_users </msg>
<msg timestamp="20170903 17:07:40.708" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_users' </msg>
<status status="PASS" endtime="20170903 17:07:40.710" starttime="20170903 17:07:40.708"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_works</arg>
</arguments>
<msg timestamp="20170903 17:07:40.710" level="INFO">Executing : Table Must Exist  |  view_users_works </msg>
<msg timestamp="20170903 17:07:40.710" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_works' </msg>
<status status="PASS" endtime="20170903 17:07:40.711" starttime="20170903 17:07:40.710"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works</arg>
</arguments>
<msg timestamp="20170903 17:07:40.712" level="INFO">Executing : Table Must Exist  |  view_works </msg>
<msg timestamp="20170903 17:07:40.712" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works' </msg>
<status status="PASS" endtime="20170903 17:07:40.713" starttime="20170903 17:07:40.712"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works_for_billing</arg>
</arguments>
<msg timestamp="20170903 17:07:40.714" level="INFO">Executing : Table Must Exist  |  view_works_for_billing </msg>
<msg timestamp="20170903 17:07:40.714" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works_for_billing' </msg>
<status status="PASS" endtime="20170903 17:07:40.715" starttime="20170903 17:07:40.713"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works_for_billing_with_file_sizes</arg>
</arguments>
<msg timestamp="20170903 17:07:40.717" level="INFO">Executing : Table Must Exist  |  view_works_for_billing_with_file_sizes </msg>
<msg timestamp="20170903 17:07:40.717" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works_for_billing_with_file_sizes' </msg>
<status status="PASS" endtime="20170903 17:07:40.719" starttime="20170903 17:07:40.716"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works</arg>
</arguments>
<msg timestamp="20170903 17:07:40.719" level="INFO">Executing : Table Must Exist  |  works </msg>
<msg timestamp="20170903 17:07:40.719" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='works' </msg>
<status status="PASS" endtime="20170903 17:07:40.720" starttime="20170903 17:07:40.719"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works_history</arg>
</arguments>
<msg timestamp="20170903 17:07:40.721" level="INFO">Executing : Table Must Exist  |  works_history </msg>
<msg timestamp="20170903 17:07:40.721" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='works_history' </msg>
<status status="PASS" endtime="20170903 17:07:40.721" starttime="20170903 17:07:40.720"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170903 17:07:40.722" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170903 17:07:40.722" starttime="20170903 17:07:40.722"></status>
</kw>
<status status="PASS" endtime="20170903 17:07:40.722" starttime="20170903 17:07:40.722"></status>
</kw>
<status status="PASS" endtime="20170903 17:07:40.723" starttime="20170903 17:07:40.578"></status>
</kw>
<status status="PASS" endtime="20170903 17:07:40.723" starttime="20170903 17:07:40.577"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>TODO ping XWtremWeb server up</arg>
</arguments>
<msg timestamp="20170903 17:07:40.723" level="INFO">TODO ping XWtremWeb server up</msg>
<status status="PASS" endtime="20170903 17:07:40.723" starttime="20170903 17:07:40.723"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>TODO ping XWtremWeb worker up before one test</arg>
</arguments>
<msg timestamp="20170903 17:07:40.723" level="INFO">TODO ping XWtremWeb worker up before one test</msg>
<status status="PASS" endtime="20170903 17:07:40.723" starttime="20170903 17:07:40.723"></status>
</kw>
<kw name="Delete Fonctionnal Xtremweb Tables" library="MySql">
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170903 17:07:40.724" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170903 17:07:40.725" starttime="20170903 17:07:40.724"></status>
</kw>
<status status="PASS" endtime="20170903 17:07:40.726" starttime="20170903 17:07:40.724"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps</arg>
</arguments>
<msg timestamp="20170903 17:07:40.726" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM apps; </msg>
<status status="PASS" endtime="20170903 17:07:40.727" starttime="20170903 17:07:40.726"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps_history</arg>
</arguments>
<msg timestamp="20170903 17:07:40.727" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM apps_history; </msg>
<status status="PASS" endtime="20170903 17:07:40.728" starttime="20170903 17:07:40.727"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas</arg>
</arguments>
<msg timestamp="20170903 17:07:40.728" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM datas; </msg>
<status status="PASS" endtime="20170903 17:07:40.729" starttime="20170903 17:07:40.728"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas_history</arg>
</arguments>
<msg timestamp="20170903 17:07:40.729" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM datas_history; </msg>
<status status="PASS" endtime="20170903 17:07:40.730" starttime="20170903 17:07:40.729"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables</arg>
</arguments>
<msg timestamp="20170903 17:07:40.730" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM executables; </msg>
<status status="PASS" endtime="20170903 17:07:40.730" starttime="20170903 17:07:40.730"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables_history</arg>
</arguments>
<msg timestamp="20170903 17:07:40.731" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM executables_history; </msg>
<status status="PASS" endtime="20170903 17:07:40.731" starttime="20170903 17:07:40.730"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups</arg>
</arguments>
<msg timestamp="20170903 17:07:40.732" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM groups; </msg>
<status status="PASS" endtime="20170903 17:07:40.732" starttime="20170903 17:07:40.731"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups_history</arg>
</arguments>
<msg timestamp="20170903 17:07:40.732" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM groups_history; </msg>
<status status="PASS" endtime="20170903 17:07:40.733" starttime="20170903 17:07:40.732"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts</arg>
</arguments>
<msg timestamp="20170903 17:07:40.733" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM hosts; </msg>
<status status="PASS" endtime="20170903 17:07:40.733" starttime="20170903 17:07:40.733"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts_history</arg>
</arguments>
<msg timestamp="20170903 17:07:40.734" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM hosts_history; </msg>
<status status="PASS" endtime="20170903 17:07:40.734" starttime="20170903 17:07:40.734"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships</arg>
</arguments>
<msg timestamp="20170903 17:07:40.734" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM memberships; </msg>
<status status="PASS" endtime="20170903 17:07:40.735" starttime="20170903 17:07:40.734"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships_history</arg>
</arguments>
<msg timestamp="20170903 17:07:40.735" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM memberships_history; </msg>
<status status="PASS" endtime="20170903 17:07:40.736" starttime="20170903 17:07:40.735"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions</arg>
</arguments>
<msg timestamp="20170903 17:07:40.736" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sessions; </msg>
<status status="PASS" endtime="20170903 17:07:40.737" starttime="20170903 17:07:40.736"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions_history</arg>
</arguments>
<msg timestamp="20170903 17:07:40.737" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sessions_history; </msg>
<status status="PASS" endtime="20170903 17:07:40.737" starttime="20170903 17:07:40.737"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes</arg>
</arguments>
<msg timestamp="20170903 17:07:40.738" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedAppTypes; </msg>
<status status="PASS" endtime="20170903 17:07:40.738" starttime="20170903 17:07:40.738"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes_history</arg>
</arguments>
<msg timestamp="20170903 17:07:40.738" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedAppTypes_history; </msg>
<status status="PASS" endtime="20170903 17:07:40.739" starttime="20170903 17:07:40.738"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes</arg>
</arguments>
<msg timestamp="20170903 17:07:40.739" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedPackageTypes; </msg>
<status status="PASS" endtime="20170903 17:07:40.739" starttime="20170903 17:07:40.739"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes_history</arg>
</arguments>
<msg timestamp="20170903 17:07:40.740" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedPackageTypes_history; </msg>
<status status="PASS" endtime="20170903 17:07:40.740" starttime="20170903 17:07:40.740"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks</arg>
</arguments>
<msg timestamp="20170903 17:07:40.740" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM tasks; </msg>
<status status="PASS" endtime="20170903 17:07:40.741" starttime="20170903 17:07:40.740"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks_history</arg>
</arguments>
<msg timestamp="20170903 17:07:40.741" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM tasks_history; </msg>
<status status="PASS" endtime="20170903 17:07:40.741" starttime="20170903 17:07:40.741"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces</arg>
</arguments>
<msg timestamp="20170903 17:07:40.742" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM traces; </msg>
<status status="PASS" endtime="20170903 17:07:40.742" starttime="20170903 17:07:40.742"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces_history</arg>
</arguments>
<msg timestamp="20170903 17:07:40.742" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM traces_history; </msg>
<status status="PASS" endtime="20170903 17:07:40.743" starttime="20170903 17:07:40.742"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups</arg>
</arguments>
<msg timestamp="20170903 17:07:40.743" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM usergroups; </msg>
<status status="PASS" endtime="20170903 17:07:40.744" starttime="20170903 17:07:40.743"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups_history</arg>
</arguments>
<msg timestamp="20170903 17:07:40.745" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM usergroups_history; </msg>
<status status="PASS" endtime="20170903 17:07:40.745" starttime="20170903 17:07:40.744"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users_history</arg>
</arguments>
<msg timestamp="20170903 17:07:40.745" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM users_history; </msg>
<status status="PASS" endtime="20170903 17:07:40.746" starttime="20170903 17:07:40.745"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works</arg>
</arguments>
<msg timestamp="20170903 17:07:40.746" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM works; </msg>
<status status="PASS" endtime="20170903 17:07:40.746" starttime="20170903 17:07:40.746"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works_history</arg>
</arguments>
<msg timestamp="20170903 17:07:40.747" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM works_history; </msg>
<status status="PASS" endtime="20170903 17:07:40.747" starttime="20170903 17:07:40.746"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170903 17:07:40.748" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170903 17:07:40.748" starttime="20170903 17:07:40.748"></status>
</kw>
<status status="PASS" endtime="20170903 17:07:40.748" starttime="20170903 17:07:40.747"></status>
</kw>
<status status="PASS" endtime="20170903 17:07:40.748" starttime="20170903 17:07:40.723"></status>
</kw>
<status status="PASS" endtime="20170903 17:07:40.748" starttime="20170903 17:07:40.577"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>TODO</arg>
</arguments>
<msg timestamp="20170903 17:07:40.749" level="INFO">TODO</msg>
<status status="PASS" endtime="20170903 17:07:40.749" starttime="20170903 17:07:40.749"></status>
</kw>
<kw type="teardown" name="End XWtremWeb Command Test" library="XWCommon">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Nothing to do</arg>
</arguments>
<msg timestamp="20170903 17:07:40.751" level="INFO">Nothing to do</msg>
<status status="PASS" endtime="20170903 17:07:40.751" starttime="20170903 17:07:40.751"></status>
</kw>
<status status="PASS" endtime="20170903 17:07:40.751" starttime="20170903 17:07:40.750"></status>
</kw>
<doc>Ces tests doivent prouver que la ligne de commande est prise en charge correctement. Ces tests doivent se faire avec un application qui accepte des arguments sur la ligne de commande</doc>
<tags>
<tag>CommandLine Tests</tag>
</tags>
<status status="PASS" endtime="20170903 17:07:40.751" critical="yes" starttime="20170903 17:07:40.574"></status>
</test>
<test id="s1-s4-t5" name="Test 3.2 Soumettre un job avec un petit environnement">
<kw type="setup" name="Begin XWtremWeb Command Test" library="XWCommon">
<kw name="Ping XWtremWeb Database" library="XWServer">
<kw name="Xtremweb Tables Must Exist" library="MySql">
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170903 17:07:40.756" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170903 17:07:40.757" starttime="20170903 17:07:40.755"></status>
</kw>
<status status="PASS" endtime="20170903 17:07:40.757" starttime="20170903 17:07:40.755"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>appTypes</arg>
</arguments>
<msg timestamp="20170903 17:07:40.758" level="INFO">Executing : Table Must Exist  |  appTypes </msg>
<msg timestamp="20170903 17:07:40.758" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='appTypes' </msg>
<status status="PASS" endtime="20170903 17:07:40.759" starttime="20170903 17:07:40.758"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps</arg>
</arguments>
<msg timestamp="20170903 17:07:40.760" level="INFO">Executing : Table Must Exist  |  apps </msg>
<msg timestamp="20170903 17:07:40.760" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='apps' </msg>
<status status="PASS" endtime="20170903 17:07:40.762" starttime="20170903 17:07:40.759"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps_history</arg>
</arguments>
<msg timestamp="20170903 17:07:40.762" level="INFO">Executing : Table Must Exist  |  apps_history </msg>
<msg timestamp="20170903 17:07:40.762" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='apps_history' </msg>
<status status="PASS" endtime="20170903 17:07:40.764" starttime="20170903 17:07:40.762"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>cpuTypes</arg>
</arguments>
<msg timestamp="20170903 17:07:40.764" level="INFO">Executing : Table Must Exist  |  cpuTypes </msg>
<msg timestamp="20170903 17:07:40.764" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='cpuTypes' </msg>
<status status="PASS" endtime="20170903 17:07:40.767" starttime="20170903 17:07:40.764"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>dataTypes</arg>
</arguments>
<msg timestamp="20170903 17:07:40.767" level="INFO">Executing : Table Must Exist  |  dataTypes </msg>
<msg timestamp="20170903 17:07:40.768" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='dataTypes' </msg>
<status status="PASS" endtime="20170903 17:07:40.769" starttime="20170903 17:07:40.767"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas</arg>
</arguments>
<msg timestamp="20170903 17:07:40.770" level="INFO">Executing : Table Must Exist  |  datas </msg>
<msg timestamp="20170903 17:07:40.770" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='datas' </msg>
<status status="PASS" endtime="20170903 17:07:40.771" starttime="20170903 17:07:40.770"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas_history</arg>
</arguments>
<msg timestamp="20170903 17:07:40.771" level="INFO">Executing : Table Must Exist  |  datas_history </msg>
<msg timestamp="20170903 17:07:40.771" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='datas_history' </msg>
<status status="PASS" endtime="20170903 17:07:40.772" starttime="20170903 17:07:40.771"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables</arg>
</arguments>
<msg timestamp="20170903 17:07:40.773" level="INFO">Executing : Table Must Exist  |  executables </msg>
<msg timestamp="20170903 17:07:40.773" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='executables' </msg>
<status status="PASS" endtime="20170903 17:07:40.774" starttime="20170903 17:07:40.773"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables_history</arg>
</arguments>
<msg timestamp="20170903 17:07:40.774" level="INFO">Executing : Table Must Exist  |  executables_history </msg>
<msg timestamp="20170903 17:07:40.774" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='executables_history' </msg>
<status status="PASS" endtime="20170903 17:07:40.775" starttime="20170903 17:07:40.774"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups</arg>
</arguments>
<msg timestamp="20170903 17:07:40.776" level="INFO">Executing : Table Must Exist  |  groups </msg>
<msg timestamp="20170903 17:07:40.776" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='groups' </msg>
<status status="PASS" endtime="20170903 17:07:40.777" starttime="20170903 17:07:40.775"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups_history</arg>
</arguments>
<msg timestamp="20170903 17:07:40.777" level="INFO">Executing : Table Must Exist  |  groups_history </msg>
<msg timestamp="20170903 17:07:40.777" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='groups_history' </msg>
<status status="PASS" endtime="20170903 17:07:40.778" starttime="20170903 17:07:40.777"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts</arg>
</arguments>
<msg timestamp="20170903 17:07:40.778" level="INFO">Executing : Table Must Exist  |  hosts </msg>
<msg timestamp="20170903 17:07:40.778" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='hosts' </msg>
<status status="PASS" endtime="20170903 17:07:40.780" starttime="20170903 17:07:40.778"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts_history</arg>
</arguments>
<msg timestamp="20170903 17:07:40.780" level="INFO">Executing : Table Must Exist  |  hosts_history </msg>
<msg timestamp="20170903 17:07:40.780" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='hosts_history' </msg>
<status status="PASS" endtime="20170903 17:07:40.781" starttime="20170903 17:07:40.780"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships</arg>
</arguments>
<msg timestamp="20170903 17:07:40.784" level="INFO">Executing : Table Must Exist  |  memberships </msg>
<msg timestamp="20170903 17:07:40.784" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='memberships' </msg>
<status status="PASS" endtime="20170903 17:07:40.789" starttime="20170903 17:07:40.783"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships_history</arg>
</arguments>
<msg timestamp="20170903 17:07:40.789" level="INFO">Executing : Table Must Exist  |  memberships_history </msg>
<msg timestamp="20170903 17:07:40.789" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='memberships_history' </msg>
<status status="PASS" endtime="20170903 17:07:40.791" starttime="20170903 17:07:40.789"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>oses</arg>
</arguments>
<msg timestamp="20170903 17:07:40.791" level="INFO">Executing : Table Must Exist  |  oses </msg>
<msg timestamp="20170903 17:07:40.791" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='oses' </msg>
<status status="PASS" endtime="20170903 17:07:40.792" starttime="20170903 17:07:40.791"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>packageTypes</arg>
</arguments>
<msg timestamp="20170903 17:07:40.792" level="INFO">Executing : Table Must Exist  |  packageTypes </msg>
<msg timestamp="20170903 17:07:40.793" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='packageTypes' </msg>
<status status="PASS" endtime="20170903 17:07:40.793" starttime="20170903 17:07:40.792"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions</arg>
</arguments>
<msg timestamp="20170903 17:07:40.794" level="INFO">Executing : Table Must Exist  |  sessions </msg>
<msg timestamp="20170903 17:07:40.794" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sessions' </msg>
<status status="PASS" endtime="20170903 17:07:40.795" starttime="20170903 17:07:40.794"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions_history</arg>
</arguments>
<msg timestamp="20170903 17:07:40.795" level="INFO">Executing : Table Must Exist  |  sessions_history </msg>
<msg timestamp="20170903 17:07:40.795" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sessions_history' </msg>
<status status="PASS" endtime="20170903 17:07:40.797" starttime="20170903 17:07:40.795"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes</arg>
</arguments>
<msg timestamp="20170903 17:07:40.798" level="INFO">Executing : Table Must Exist  |  sharedAppTypes </msg>
<msg timestamp="20170903 17:07:40.798" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedAppTypes' </msg>
<status status="PASS" endtime="20170903 17:07:40.799" starttime="20170903 17:07:40.797"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes_history</arg>
</arguments>
<msg timestamp="20170903 17:07:40.799" level="INFO">Executing : Table Must Exist  |  sharedAppTypes_history </msg>
<msg timestamp="20170903 17:07:40.799" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedAppTypes_history' </msg>
<status status="PASS" endtime="20170903 17:07:40.800" starttime="20170903 17:07:40.799"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes</arg>
</arguments>
<msg timestamp="20170903 17:07:40.800" level="INFO">Executing : Table Must Exist  |  sharedPackageTypes </msg>
<msg timestamp="20170903 17:07:40.801" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedPackageTypes' </msg>
<status status="PASS" endtime="20170903 17:07:40.801" starttime="20170903 17:07:40.800"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes_history</arg>
</arguments>
<msg timestamp="20170903 17:07:40.802" level="INFO">Executing : Table Must Exist  |  sharedPackageTypes_history </msg>
<msg timestamp="20170903 17:07:40.802" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedPackageTypes_history' </msg>
<status status="PASS" endtime="20170903 17:07:40.803" starttime="20170903 17:07:40.802"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>statuses</arg>
</arguments>
<msg timestamp="20170903 17:07:40.803" level="INFO">Executing : Table Must Exist  |  statuses </msg>
<msg timestamp="20170903 17:07:40.803" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='statuses' </msg>
<status status="PASS" endtime="20170903 17:07:40.804" starttime="20170903 17:07:40.803"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks</arg>
</arguments>
<msg timestamp="20170903 17:07:40.805" level="INFO">Executing : Table Must Exist  |  tasks </msg>
<msg timestamp="20170903 17:07:40.805" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='tasks' </msg>
<status status="PASS" endtime="20170903 17:07:40.806" starttime="20170903 17:07:40.804"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks_history</arg>
</arguments>
<msg timestamp="20170903 17:07:40.806" level="INFO">Executing : Table Must Exist  |  tasks_history </msg>
<msg timestamp="20170903 17:07:40.806" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='tasks_history' </msg>
<status status="PASS" endtime="20170903 17:07:40.807" starttime="20170903 17:07:40.806"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces</arg>
</arguments>
<msg timestamp="20170903 17:07:40.808" level="INFO">Executing : Table Must Exist  |  traces </msg>
<msg timestamp="20170903 17:07:40.808" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='traces' </msg>
<status status="PASS" endtime="20170903 17:07:40.809" starttime="20170903 17:07:40.807"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces_history</arg>
</arguments>
<msg timestamp="20170903 17:07:40.809" level="INFO">Executing : Table Must Exist  |  traces_history </msg>
<msg timestamp="20170903 17:07:40.809" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='traces_history' </msg>
<status status="PASS" endtime="20170903 17:07:40.810" starttime="20170903 17:07:40.809"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>userRights</arg>
</arguments>
<msg timestamp="20170903 17:07:40.811" level="INFO">Executing : Table Must Exist  |  userRights </msg>
<msg timestamp="20170903 17:07:40.811" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='userRights' </msg>
<status status="PASS" endtime="20170903 17:07:40.812" starttime="20170903 17:07:40.810"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups</arg>
</arguments>
<msg timestamp="20170903 17:07:40.812" level="INFO">Executing : Table Must Exist  |  usergroups </msg>
<msg timestamp="20170903 17:07:40.812" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='usergroups' </msg>
<status status="PASS" endtime="20170903 17:07:40.813" starttime="20170903 17:07:40.812"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups_history</arg>
</arguments>
<msg timestamp="20170903 17:07:40.813" level="INFO">Executing : Table Must Exist  |  usergroups_history </msg>
<msg timestamp="20170903 17:07:40.813" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='usergroups_history' </msg>
<status status="PASS" endtime="20170903 17:07:40.814" starttime="20170903 17:07:40.813"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users</arg>
</arguments>
<msg timestamp="20170903 17:07:40.815" level="INFO">Executing : Table Must Exist  |  users </msg>
<msg timestamp="20170903 17:07:40.815" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='users' </msg>
<status status="PASS" endtime="20170903 17:07:40.815" starttime="20170903 17:07:40.814"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users_history</arg>
</arguments>
<msg timestamp="20170903 17:07:40.816" level="INFO">Executing : Table Must Exist  |  users_history </msg>
<msg timestamp="20170903 17:07:40.816" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='users_history' </msg>
<status status="PASS" endtime="20170903 17:07:40.817" starttime="20170903 17:07:40.816"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>version</arg>
</arguments>
<msg timestamp="20170903 17:07:40.817" level="INFO">Executing : Table Must Exist  |  version </msg>
<msg timestamp="20170903 17:07:40.817" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='version' </msg>
<status status="PASS" endtime="20170903 17:07:40.819" starttime="20170903 17:07:40.817"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>versions</arg>
</arguments>
<msg timestamp="20170903 17:07:40.819" level="INFO">Executing : Table Must Exist  |  versions </msg>
<msg timestamp="20170903 17:07:40.819" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='versions' </msg>
<status status="PASS" endtime="20170903 17:07:40.820" starttime="20170903 17:07:40.819"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps</arg>
</arguments>
<msg timestamp="20170903 17:07:40.821" level="INFO">Executing : Table Must Exist  |  view_apps </msg>
<msg timestamp="20170903 17:07:40.821" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps' </msg>
<status status="PASS" endtime="20170903 17:07:40.822" starttime="20170903 17:07:40.820"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps_for_offering</arg>
</arguments>
<msg timestamp="20170903 17:07:40.822" level="INFO">Executing : Table Must Exist  |  view_apps_for_offering </msg>
<msg timestamp="20170903 17:07:40.823" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps_for_offering' </msg>
<status status="PASS" endtime="20170903 17:07:40.823" starttime="20170903 17:07:40.822"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps_for_offering_with_file_sizes</arg>
</arguments>
<msg timestamp="20170903 17:07:40.824" level="INFO">Executing : Table Must Exist  |  view_apps_for_offering_with_file_sizes </msg>
<msg timestamp="20170903 17:07:40.824" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps_for_offering_with_file_sizes' </msg>
<status status="PASS" endtime="20170903 17:07:40.825" starttime="20170903 17:07:40.824"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_datas</arg>
</arguments>
<msg timestamp="20170903 17:07:40.825" level="INFO">Executing : Table Must Exist  |  view_datas </msg>
<msg timestamp="20170903 17:07:40.826" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_datas' </msg>
<status status="PASS" endtime="20170903 17:07:40.827" starttime="20170903 17:07:40.825"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_executables</arg>
</arguments>
<msg timestamp="20170903 17:07:40.827" level="INFO">Executing : Table Must Exist  |  view_executables </msg>
<msg timestamp="20170903 17:07:40.827" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_executables' </msg>
<status status="PASS" endtime="20170903 17:07:40.829" starttime="20170903 17:07:40.827"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_groups</arg>
</arguments>
<msg timestamp="20170903 17:07:40.829" level="INFO">Executing : Table Must Exist  |  view_groups </msg>
<msg timestamp="20170903 17:07:40.829" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_groups' </msg>
<status status="PASS" endtime="20170903 17:07:40.830" starttime="20170903 17:07:40.829"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts</arg>
</arguments>
<msg timestamp="20170903 17:07:40.831" level="INFO">Executing : Table Must Exist  |  view_hosts </msg>
<msg timestamp="20170903 17:07:40.831" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts' </msg>
<status status="PASS" endtime="20170903 17:07:40.832" starttime="20170903 17:07:40.831"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_deployable</arg>
</arguments>
<msg timestamp="20170903 17:07:40.832" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_deployable </msg>
<msg timestamp="20170903 17:07:40.833" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_deployable' </msg>
<status status="PASS" endtime="20170903 17:07:40.834" starttime="20170903 17:07:40.832"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_deployable_and_shared</arg>
</arguments>
<msg timestamp="20170903 17:07:40.834" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_deployable_and_shared </msg>
<msg timestamp="20170903 17:07:40.834" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_deployable_and_shared' </msg>
<status status="PASS" endtime="20170903 17:07:40.835" starttime="20170903 17:07:40.834"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_shared</arg>
</arguments>
<msg timestamp="20170903 17:07:40.836" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_shared </msg>
<msg timestamp="20170903 17:07:40.836" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_shared' </msg>
<status status="PASS" endtime="20170903 17:07:40.837" starttime="20170903 17:07:40.836"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_sessions</arg>
</arguments>
<msg timestamp="20170903 17:07:40.837" level="INFO">Executing : Table Must Exist  |  view_sessions </msg>
<msg timestamp="20170903 17:07:40.837" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_sessions' </msg>
<status status="PASS" endtime="20170903 17:07:40.838" starttime="20170903 17:07:40.837"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_tasks</arg>
</arguments>
<msg timestamp="20170903 17:07:40.839" level="INFO">Executing : Table Must Exist  |  view_tasks </msg>
<msg timestamp="20170903 17:07:40.839" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_tasks' </msg>
<status status="PASS" endtime="20170903 17:07:40.840" starttime="20170903 17:07:40.839"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_traces</arg>
</arguments>
<msg timestamp="20170903 17:07:40.840" level="INFO">Executing : Table Must Exist  |  view_traces </msg>
<msg timestamp="20170903 17:07:40.840" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_traces' </msg>
<status status="PASS" endtime="20170903 17:07:40.841" starttime="20170903 17:07:40.840"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_usergroups</arg>
</arguments>
<msg timestamp="20170903 17:07:40.842" level="INFO">Executing : Table Must Exist  |  view_usergroups </msg>
<msg timestamp="20170903 17:07:40.842" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_usergroups' </msg>
<status status="PASS" endtime="20170903 17:07:40.844" starttime="20170903 17:07:40.841"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users</arg>
</arguments>
<msg timestamp="20170903 17:07:40.844" level="INFO">Executing : Table Must Exist  |  view_users </msg>
<msg timestamp="20170903 17:07:40.844" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users' </msg>
<status status="PASS" endtime="20170903 17:07:40.846" starttime="20170903 17:07:40.844"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_apps</arg>
</arguments>
<msg timestamp="20170903 17:07:40.846" level="INFO">Executing : Table Must Exist  |  view_users_apps </msg>
<msg timestamp="20170903 17:07:40.846" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_apps' </msg>
<status status="PASS" endtime="20170903 17:07:40.848" starttime="20170903 17:07:40.846"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_datas</arg>
</arguments>
<msg timestamp="20170903 17:07:40.848" level="INFO">Executing : Table Must Exist  |  view_users_datas </msg>
<msg timestamp="20170903 17:07:40.848" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_datas' </msg>
<status status="PASS" endtime="20170903 17:07:40.849" starttime="20170903 17:07:40.848"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_groups</arg>
</arguments>
<msg timestamp="20170903 17:07:40.850" level="INFO">Executing : Table Must Exist  |  view_users_groups </msg>
<msg timestamp="20170903 17:07:40.850" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_groups' </msg>
<status status="PASS" endtime="20170903 17:07:40.851" starttime="20170903 17:07:40.849"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_hosts</arg>
</arguments>
<msg timestamp="20170903 17:07:40.851" level="INFO">Executing : Table Must Exist  |  view_users_hosts </msg>
<msg timestamp="20170903 17:07:40.851" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_hosts' </msg>
<status status="PASS" endtime="20170903 17:07:40.852" starttime="20170903 17:07:40.851"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_sessions</arg>
</arguments>
<msg timestamp="20170903 17:07:40.852" level="INFO">Executing : Table Must Exist  |  view_users_sessions </msg>
<msg timestamp="20170903 17:07:40.852" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_sessions' </msg>
<status status="PASS" endtime="20170903 17:07:40.854" starttime="20170903 17:07:40.852"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_tasks</arg>
</arguments>
<msg timestamp="20170903 17:07:40.855" level="INFO">Executing : Table Must Exist  |  view_users_tasks </msg>
<msg timestamp="20170903 17:07:40.855" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_tasks' </msg>
<status status="PASS" endtime="20170903 17:07:40.856" starttime="20170903 17:07:40.854"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_traces</arg>
</arguments>
<msg timestamp="20170903 17:07:40.856" level="INFO">Executing : Table Must Exist  |  view_users_traces </msg>
<msg timestamp="20170903 17:07:40.856" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_traces' </msg>
<status status="PASS" endtime="20170903 17:07:40.858" starttime="20170903 17:07:40.856"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_usergroups</arg>
</arguments>
<msg timestamp="20170903 17:07:40.858" level="INFO">Executing : Table Must Exist  |  view_users_usergroups </msg>
<msg timestamp="20170903 17:07:40.858" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_usergroups' </msg>
<status status="PASS" endtime="20170903 17:07:40.860" starttime="20170903 17:07:40.858"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_users</arg>
</arguments>
<msg timestamp="20170903 17:07:40.860" level="INFO">Executing : Table Must Exist  |  view_users_users </msg>
<msg timestamp="20170903 17:07:40.860" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_users' </msg>
<status status="PASS" endtime="20170903 17:07:40.862" starttime="20170903 17:07:40.860"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_works</arg>
</arguments>
<msg timestamp="20170903 17:07:40.863" level="INFO">Executing : Table Must Exist  |  view_users_works </msg>
<msg timestamp="20170903 17:07:40.863" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_works' </msg>
<status status="PASS" endtime="20170903 17:07:40.865" starttime="20170903 17:07:40.862"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works</arg>
</arguments>
<msg timestamp="20170903 17:07:40.865" level="INFO">Executing : Table Must Exist  |  view_works </msg>
<msg timestamp="20170903 17:07:40.865" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works' </msg>
<status status="PASS" endtime="20170903 17:07:40.867" starttime="20170903 17:07:40.865"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works_for_billing</arg>
</arguments>
<msg timestamp="20170903 17:07:40.868" level="INFO">Executing : Table Must Exist  |  view_works_for_billing </msg>
<msg timestamp="20170903 17:07:40.868" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works_for_billing' </msg>
<status status="PASS" endtime="20170903 17:07:40.869" starttime="20170903 17:07:40.867"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works_for_billing_with_file_sizes</arg>
</arguments>
<msg timestamp="20170903 17:07:40.869" level="INFO">Executing : Table Must Exist  |  view_works_for_billing_with_file_sizes </msg>
<msg timestamp="20170903 17:07:40.869" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works_for_billing_with_file_sizes' </msg>
<status status="PASS" endtime="20170903 17:07:40.870" starttime="20170903 17:07:40.869"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works</arg>
</arguments>
<msg timestamp="20170903 17:07:40.871" level="INFO">Executing : Table Must Exist  |  works </msg>
<msg timestamp="20170903 17:07:40.871" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='works' </msg>
<status status="PASS" endtime="20170903 17:07:40.872" starttime="20170903 17:07:40.871"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works_history</arg>
</arguments>
<msg timestamp="20170903 17:07:40.872" level="INFO">Executing : Table Must Exist  |  works_history </msg>
<msg timestamp="20170903 17:07:40.872" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='works_history' </msg>
<status status="PASS" endtime="20170903 17:07:40.873" starttime="20170903 17:07:40.872"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170903 17:07:40.874" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170903 17:07:40.875" starttime="20170903 17:07:40.874"></status>
</kw>
<status status="PASS" endtime="20170903 17:07:40.875" starttime="20170903 17:07:40.874"></status>
</kw>
<status status="PASS" endtime="20170903 17:07:40.876" starttime="20170903 17:07:40.754"></status>
</kw>
<status status="PASS" endtime="20170903 17:07:40.876" starttime="20170903 17:07:40.754"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>TODO ping XWtremWeb server up</arg>
</arguments>
<msg timestamp="20170903 17:07:40.877" level="INFO">TODO ping XWtremWeb server up</msg>
<status status="PASS" endtime="20170903 17:07:40.877" starttime="20170903 17:07:40.876"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>TODO ping XWtremWeb worker up before one test</arg>
</arguments>
<msg timestamp="20170903 17:07:40.878" level="INFO">TODO ping XWtremWeb worker up before one test</msg>
<status status="PASS" endtime="20170903 17:07:40.878" starttime="20170903 17:07:40.877"></status>
</kw>
<kw name="Delete Fonctionnal Xtremweb Tables" library="MySql">
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170903 17:07:40.880" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170903 17:07:40.882" starttime="20170903 17:07:40.879"></status>
</kw>
<status status="PASS" endtime="20170903 17:07:40.882" starttime="20170903 17:07:40.878"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps</arg>
</arguments>
<msg timestamp="20170903 17:07:40.883" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM apps; </msg>
<status status="PASS" endtime="20170903 17:07:40.883" starttime="20170903 17:07:40.882"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps_history</arg>
</arguments>
<msg timestamp="20170903 17:07:40.884" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM apps_history; </msg>
<status status="PASS" endtime="20170903 17:07:40.885" starttime="20170903 17:07:40.884"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas</arg>
</arguments>
<msg timestamp="20170903 17:07:40.885" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM datas; </msg>
<status status="PASS" endtime="20170903 17:07:40.886" starttime="20170903 17:07:40.885"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas_history</arg>
</arguments>
<msg timestamp="20170903 17:07:40.886" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM datas_history; </msg>
<status status="PASS" endtime="20170903 17:07:40.887" starttime="20170903 17:07:40.886"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables</arg>
</arguments>
<msg timestamp="20170903 17:07:40.887" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM executables; </msg>
<status status="PASS" endtime="20170903 17:07:40.888" starttime="20170903 17:07:40.887"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables_history</arg>
</arguments>
<msg timestamp="20170903 17:07:40.888" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM executables_history; </msg>
<status status="PASS" endtime="20170903 17:07:40.889" starttime="20170903 17:07:40.888"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups</arg>
</arguments>
<msg timestamp="20170903 17:07:40.889" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM groups; </msg>
<status status="PASS" endtime="20170903 17:07:40.890" starttime="20170903 17:07:40.889"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups_history</arg>
</arguments>
<msg timestamp="20170903 17:07:40.890" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM groups_history; </msg>
<status status="PASS" endtime="20170903 17:07:40.890" starttime="20170903 17:07:40.890"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts</arg>
</arguments>
<msg timestamp="20170903 17:07:40.891" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM hosts; </msg>
<status status="PASS" endtime="20170903 17:07:40.891" starttime="20170903 17:07:40.891"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts_history</arg>
</arguments>
<msg timestamp="20170903 17:07:40.892" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM hosts_history; </msg>
<status status="PASS" endtime="20170903 17:07:40.892" starttime="20170903 17:07:40.891"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships</arg>
</arguments>
<msg timestamp="20170903 17:07:40.892" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM memberships; </msg>
<status status="PASS" endtime="20170903 17:07:40.893" starttime="20170903 17:07:40.892"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships_history</arg>
</arguments>
<msg timestamp="20170903 17:07:40.894" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM memberships_history; </msg>
<status status="PASS" endtime="20170903 17:07:40.894" starttime="20170903 17:07:40.893"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions</arg>
</arguments>
<msg timestamp="20170903 17:07:40.894" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sessions; </msg>
<status status="PASS" endtime="20170903 17:07:40.895" starttime="20170903 17:07:40.894"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions_history</arg>
</arguments>
<msg timestamp="20170903 17:07:40.895" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sessions_history; </msg>
<status status="PASS" endtime="20170903 17:07:40.896" starttime="20170903 17:07:40.895"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes</arg>
</arguments>
<msg timestamp="20170903 17:07:40.896" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedAppTypes; </msg>
<status status="PASS" endtime="20170903 17:07:40.896" starttime="20170903 17:07:40.896"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes_history</arg>
</arguments>
<msg timestamp="20170903 17:07:40.897" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedAppTypes_history; </msg>
<status status="PASS" endtime="20170903 17:07:40.897" starttime="20170903 17:07:40.897"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes</arg>
</arguments>
<msg timestamp="20170903 17:07:40.898" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedPackageTypes; </msg>
<status status="PASS" endtime="20170903 17:07:40.898" starttime="20170903 17:07:40.897"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes_history</arg>
</arguments>
<msg timestamp="20170903 17:07:40.898" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedPackageTypes_history; </msg>
<status status="PASS" endtime="20170903 17:07:40.899" starttime="20170903 17:07:40.898"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks</arg>
</arguments>
<msg timestamp="20170903 17:07:40.899" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM tasks; </msg>
<status status="PASS" endtime="20170903 17:07:40.899" starttime="20170903 17:07:40.899"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks_history</arg>
</arguments>
<msg timestamp="20170903 17:07:40.900" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM tasks_history; </msg>
<status status="PASS" endtime="20170903 17:07:40.900" starttime="20170903 17:07:40.899"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces</arg>
</arguments>
<msg timestamp="20170903 17:07:40.900" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM traces; </msg>
<status status="PASS" endtime="20170903 17:07:40.901" starttime="20170903 17:07:40.900"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces_history</arg>
</arguments>
<msg timestamp="20170903 17:07:40.901" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM traces_history; </msg>
<status status="PASS" endtime="20170903 17:07:40.902" starttime="20170903 17:07:40.901"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups</arg>
</arguments>
<msg timestamp="20170903 17:07:40.902" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM usergroups; </msg>
<status status="PASS" endtime="20170903 17:07:40.902" starttime="20170903 17:07:40.902"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups_history</arg>
</arguments>
<msg timestamp="20170903 17:07:40.903" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM usergroups_history; </msg>
<status status="PASS" endtime="20170903 17:07:40.903" starttime="20170903 17:07:40.902"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users_history</arg>
</arguments>
<msg timestamp="20170903 17:07:40.903" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM users_history; </msg>
<status status="PASS" endtime="20170903 17:07:40.904" starttime="20170903 17:07:40.903"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works</arg>
</arguments>
<msg timestamp="20170903 17:07:40.904" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM works; </msg>
<status status="PASS" endtime="20170903 17:07:40.904" starttime="20170903 17:07:40.904"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works_history</arg>
</arguments>
<msg timestamp="20170903 17:07:40.905" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM works_history; </msg>
<status status="PASS" endtime="20170903 17:07:40.905" starttime="20170903 17:07:40.904"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170903 17:07:40.906" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170903 17:07:40.906" starttime="20170903 17:07:40.906"></status>
</kw>
<status status="PASS" endtime="20170903 17:07:40.906" starttime="20170903 17:07:40.905"></status>
</kw>
<status status="PASS" endtime="20170903 17:07:40.906" starttime="20170903 17:07:40.878"></status>
</kw>
<status status="PASS" endtime="20170903 17:07:40.907" starttime="20170903 17:07:40.753"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>TODO</arg>
</arguments>
<msg timestamp="20170903 17:07:40.907" level="INFO">TODO</msg>
<status status="PASS" endtime="20170903 17:07:40.907" starttime="20170903 17:07:40.907"></status>
</kw>
<kw type="teardown" name="End XWtremWeb Command Test" library="XWCommon">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Nothing to do</arg>
</arguments>
<msg timestamp="20170903 17:07:40.909" level="INFO">Nothing to do</msg>
<status status="PASS" endtime="20170903 17:07:40.909" starttime="20170903 17:07:40.909"></status>
</kw>
<status status="PASS" endtime="20170903 17:07:40.910" starttime="20170903 17:07:40.908"></status>
</kw>
<doc>Typiquement un fichier ou un répertoire de moins de 10Kb.</doc>
<tags>
<tag>CommandLine Tests</tag>
</tags>
<status status="PASS" endtime="20170903 17:07:40.910" critical="yes" starttime="20170903 17:07:40.752"></status>
</test>
<test id="s1-s4-t6" name="Test 3.3 Soumettre un job avec un gros environnement">
<kw type="setup" name="Begin XWtremWeb Command Test" library="XWCommon">
<kw name="Ping XWtremWeb Database" library="XWServer">
<kw name="Xtremweb Tables Must Exist" library="MySql">
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170903 17:07:40.917" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170903 17:07:40.918" starttime="20170903 17:07:40.916"></status>
</kw>
<status status="PASS" endtime="20170903 17:07:40.918" starttime="20170903 17:07:40.914"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>appTypes</arg>
</arguments>
<msg timestamp="20170903 17:07:40.919" level="INFO">Executing : Table Must Exist  |  appTypes </msg>
<msg timestamp="20170903 17:07:40.919" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='appTypes' </msg>
<status status="PASS" endtime="20170903 17:07:40.920" starttime="20170903 17:07:40.919"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps</arg>
</arguments>
<msg timestamp="20170903 17:07:40.921" level="INFO">Executing : Table Must Exist  |  apps </msg>
<msg timestamp="20170903 17:07:40.921" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='apps' </msg>
<status status="PASS" endtime="20170903 17:07:40.922" starttime="20170903 17:07:40.920"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps_history</arg>
</arguments>
<msg timestamp="20170903 17:07:40.922" level="INFO">Executing : Table Must Exist  |  apps_history </msg>
<msg timestamp="20170903 17:07:40.922" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='apps_history' </msg>
<status status="PASS" endtime="20170903 17:07:40.923" starttime="20170903 17:07:40.922"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>cpuTypes</arg>
</arguments>
<msg timestamp="20170903 17:07:40.924" level="INFO">Executing : Table Must Exist  |  cpuTypes </msg>
<msg timestamp="20170903 17:07:40.924" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='cpuTypes' </msg>
<status status="PASS" endtime="20170903 17:07:40.925" starttime="20170903 17:07:40.924"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>dataTypes</arg>
</arguments>
<msg timestamp="20170903 17:07:40.925" level="INFO">Executing : Table Must Exist  |  dataTypes </msg>
<msg timestamp="20170903 17:07:40.925" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='dataTypes' </msg>
<status status="PASS" endtime="20170903 17:07:40.926" starttime="20170903 17:07:40.925"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas</arg>
</arguments>
<msg timestamp="20170903 17:07:40.927" level="INFO">Executing : Table Must Exist  |  datas </msg>
<msg timestamp="20170903 17:07:40.927" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='datas' </msg>
<status status="PASS" endtime="20170903 17:07:40.928" starttime="20170903 17:07:40.927"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas_history</arg>
</arguments>
<msg timestamp="20170903 17:07:40.929" level="INFO">Executing : Table Must Exist  |  datas_history </msg>
<msg timestamp="20170903 17:07:40.929" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='datas_history' </msg>
<status status="PASS" endtime="20170903 17:07:40.930" starttime="20170903 17:07:40.928"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables</arg>
</arguments>
<msg timestamp="20170903 17:07:40.930" level="INFO">Executing : Table Must Exist  |  executables </msg>
<msg timestamp="20170903 17:07:40.930" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='executables' </msg>
<status status="PASS" endtime="20170903 17:07:40.931" starttime="20170903 17:07:40.930"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables_history</arg>
</arguments>
<msg timestamp="20170903 17:07:40.932" level="INFO">Executing : Table Must Exist  |  executables_history </msg>
<msg timestamp="20170903 17:07:40.932" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='executables_history' </msg>
<status status="PASS" endtime="20170903 17:07:40.933" starttime="20170903 17:07:40.931"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups</arg>
</arguments>
<msg timestamp="20170903 17:07:40.934" level="INFO">Executing : Table Must Exist  |  groups </msg>
<msg timestamp="20170903 17:07:40.934" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='groups' </msg>
<status status="PASS" endtime="20170903 17:07:40.935" starttime="20170903 17:07:40.934"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups_history</arg>
</arguments>
<msg timestamp="20170903 17:07:40.936" level="INFO">Executing : Table Must Exist  |  groups_history </msg>
<msg timestamp="20170903 17:07:40.936" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='groups_history' </msg>
<status status="PASS" endtime="20170903 17:07:40.937" starttime="20170903 17:07:40.936"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts</arg>
</arguments>
<msg timestamp="20170903 17:07:40.938" level="INFO">Executing : Table Must Exist  |  hosts </msg>
<msg timestamp="20170903 17:07:40.938" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='hosts' </msg>
<status status="PASS" endtime="20170903 17:07:40.939" starttime="20170903 17:07:40.937"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts_history</arg>
</arguments>
<msg timestamp="20170903 17:07:40.939" level="INFO">Executing : Table Must Exist  |  hosts_history </msg>
<msg timestamp="20170903 17:07:40.939" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='hosts_history' </msg>
<status status="PASS" endtime="20170903 17:07:40.940" starttime="20170903 17:07:40.939"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships</arg>
</arguments>
<msg timestamp="20170903 17:07:40.941" level="INFO">Executing : Table Must Exist  |  memberships </msg>
<msg timestamp="20170903 17:07:40.941" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='memberships' </msg>
<status status="PASS" endtime="20170903 17:07:40.942" starttime="20170903 17:07:40.941"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships_history</arg>
</arguments>
<msg timestamp="20170903 17:07:40.942" level="INFO">Executing : Table Must Exist  |  memberships_history </msg>
<msg timestamp="20170903 17:07:40.943" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='memberships_history' </msg>
<status status="PASS" endtime="20170903 17:07:40.944" starttime="20170903 17:07:40.942"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>oses</arg>
</arguments>
<msg timestamp="20170903 17:07:40.945" level="INFO">Executing : Table Must Exist  |  oses </msg>
<msg timestamp="20170903 17:07:40.945" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='oses' </msg>
<status status="PASS" endtime="20170903 17:07:40.946" starttime="20170903 17:07:40.945"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>packageTypes</arg>
</arguments>
<msg timestamp="20170903 17:07:40.947" level="INFO">Executing : Table Must Exist  |  packageTypes </msg>
<msg timestamp="20170903 17:07:40.947" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='packageTypes' </msg>
<status status="PASS" endtime="20170903 17:07:40.948" starttime="20170903 17:07:40.946"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions</arg>
</arguments>
<msg timestamp="20170903 17:07:40.948" level="INFO">Executing : Table Must Exist  |  sessions </msg>
<msg timestamp="20170903 17:07:40.948" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sessions' </msg>
<status status="PASS" endtime="20170903 17:07:40.950" starttime="20170903 17:07:40.948"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions_history</arg>
</arguments>
<msg timestamp="20170903 17:07:40.950" level="INFO">Executing : Table Must Exist  |  sessions_history </msg>
<msg timestamp="20170903 17:07:40.950" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sessions_history' </msg>
<status status="PASS" endtime="20170903 17:07:40.951" starttime="20170903 17:07:40.950"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes</arg>
</arguments>
<msg timestamp="20170903 17:07:40.951" level="INFO">Executing : Table Must Exist  |  sharedAppTypes </msg>
<msg timestamp="20170903 17:07:40.952" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedAppTypes' </msg>
<status status="PASS" endtime="20170903 17:07:40.953" starttime="20170903 17:07:40.951"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes_history</arg>
</arguments>
<msg timestamp="20170903 17:07:40.953" level="INFO">Executing : Table Must Exist  |  sharedAppTypes_history </msg>
<msg timestamp="20170903 17:07:40.953" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedAppTypes_history' </msg>
<status status="PASS" endtime="20170903 17:07:40.954" starttime="20170903 17:07:40.953"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes</arg>
</arguments>
<msg timestamp="20170903 17:07:40.955" level="INFO">Executing : Table Must Exist  |  sharedPackageTypes </msg>
<msg timestamp="20170903 17:07:40.955" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedPackageTypes' </msg>
<status status="PASS" endtime="20170903 17:07:40.956" starttime="20170903 17:07:40.954"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes_history</arg>
</arguments>
<msg timestamp="20170903 17:07:40.956" level="INFO">Executing : Table Must Exist  |  sharedPackageTypes_history </msg>
<msg timestamp="20170903 17:07:40.956" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedPackageTypes_history' </msg>
<status status="PASS" endtime="20170903 17:07:40.957" starttime="20170903 17:07:40.956"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>statuses</arg>
</arguments>
<msg timestamp="20170903 17:07:40.958" level="INFO">Executing : Table Must Exist  |  statuses </msg>
<msg timestamp="20170903 17:07:40.958" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='statuses' </msg>
<status status="PASS" endtime="20170903 17:07:40.960" starttime="20170903 17:07:40.958"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks</arg>
</arguments>
<msg timestamp="20170903 17:07:40.961" level="INFO">Executing : Table Must Exist  |  tasks </msg>
<msg timestamp="20170903 17:07:40.961" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='tasks' </msg>
<status status="PASS" endtime="20170903 17:07:40.964" starttime="20170903 17:07:40.960"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks_history</arg>
</arguments>
<msg timestamp="20170903 17:07:40.965" level="INFO">Executing : Table Must Exist  |  tasks_history </msg>
<msg timestamp="20170903 17:07:40.965" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='tasks_history' </msg>
<status status="PASS" endtime="20170903 17:07:40.967" starttime="20170903 17:07:40.964"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces</arg>
</arguments>
<msg timestamp="20170903 17:07:40.968" level="INFO">Executing : Table Must Exist  |  traces </msg>
<msg timestamp="20170903 17:07:40.968" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='traces' </msg>
<status status="PASS" endtime="20170903 17:07:40.969" starttime="20170903 17:07:40.968"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces_history</arg>
</arguments>
<msg timestamp="20170903 17:07:40.969" level="INFO">Executing : Table Must Exist  |  traces_history </msg>
<msg timestamp="20170903 17:07:40.969" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='traces_history' </msg>
<status status="PASS" endtime="20170903 17:07:40.971" starttime="20170903 17:07:40.969"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>userRights</arg>
</arguments>
<msg timestamp="20170903 17:07:40.971" level="INFO">Executing : Table Must Exist  |  userRights </msg>
<msg timestamp="20170903 17:07:40.971" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='userRights' </msg>
<status status="PASS" endtime="20170903 17:07:40.972" starttime="20170903 17:07:40.971"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups</arg>
</arguments>
<msg timestamp="20170903 17:07:40.972" level="INFO">Executing : Table Must Exist  |  usergroups </msg>
<msg timestamp="20170903 17:07:40.972" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='usergroups' </msg>
<status status="PASS" endtime="20170903 17:07:40.973" starttime="20170903 17:07:40.972"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups_history</arg>
</arguments>
<msg timestamp="20170903 17:07:40.974" level="INFO">Executing : Table Must Exist  |  usergroups_history </msg>
<msg timestamp="20170903 17:07:40.974" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='usergroups_history' </msg>
<status status="PASS" endtime="20170903 17:07:40.975" starttime="20170903 17:07:40.973"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users</arg>
</arguments>
<msg timestamp="20170903 17:07:40.975" level="INFO">Executing : Table Must Exist  |  users </msg>
<msg timestamp="20170903 17:07:40.975" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='users' </msg>
<status status="PASS" endtime="20170903 17:07:40.976" starttime="20170903 17:07:40.975"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users_history</arg>
</arguments>
<msg timestamp="20170903 17:07:40.976" level="INFO">Executing : Table Must Exist  |  users_history </msg>
<msg timestamp="20170903 17:07:40.977" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='users_history' </msg>
<status status="PASS" endtime="20170903 17:07:40.978" starttime="20170903 17:07:40.976"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>version</arg>
</arguments>
<msg timestamp="20170903 17:07:40.978" level="INFO">Executing : Table Must Exist  |  version </msg>
<msg timestamp="20170903 17:07:40.978" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='version' </msg>
<status status="PASS" endtime="20170903 17:07:40.979" starttime="20170903 17:07:40.978"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>versions</arg>
</arguments>
<msg timestamp="20170903 17:07:40.980" level="INFO">Executing : Table Must Exist  |  versions </msg>
<msg timestamp="20170903 17:07:40.980" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='versions' </msg>
<status status="PASS" endtime="20170903 17:07:40.981" starttime="20170903 17:07:40.980"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps</arg>
</arguments>
<msg timestamp="20170903 17:07:40.983" level="INFO">Executing : Table Must Exist  |  view_apps </msg>
<msg timestamp="20170903 17:07:40.983" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps' </msg>
<status status="PASS" endtime="20170903 17:07:40.989" starttime="20170903 17:07:40.981"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps_for_offering</arg>
</arguments>
<msg timestamp="20170903 17:07:40.989" level="INFO">Executing : Table Must Exist  |  view_apps_for_offering </msg>
<msg timestamp="20170903 17:07:40.990" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps_for_offering' </msg>
<status status="PASS" endtime="20170903 17:07:40.991" starttime="20170903 17:07:40.989"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps_for_offering_with_file_sizes</arg>
</arguments>
<msg timestamp="20170903 17:07:40.991" level="INFO">Executing : Table Must Exist  |  view_apps_for_offering_with_file_sizes </msg>
<msg timestamp="20170903 17:07:40.991" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps_for_offering_with_file_sizes' </msg>
<status status="PASS" endtime="20170903 17:07:40.993" starttime="20170903 17:07:40.991"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_datas</arg>
</arguments>
<msg timestamp="20170903 17:07:40.993" level="INFO">Executing : Table Must Exist  |  view_datas </msg>
<msg timestamp="20170903 17:07:40.993" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_datas' </msg>
<status status="PASS" endtime="20170903 17:07:40.995" starttime="20170903 17:07:40.993"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_executables</arg>
</arguments>
<msg timestamp="20170903 17:07:40.995" level="INFO">Executing : Table Must Exist  |  view_executables </msg>
<msg timestamp="20170903 17:07:40.995" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_executables' </msg>
<status status="PASS" endtime="20170903 17:07:40.997" starttime="20170903 17:07:40.995"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_groups</arg>
</arguments>
<msg timestamp="20170903 17:07:40.997" level="INFO">Executing : Table Must Exist  |  view_groups </msg>
<msg timestamp="20170903 17:07:40.997" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_groups' </msg>
<status status="PASS" endtime="20170903 17:07:40.998" starttime="20170903 17:07:40.997"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts</arg>
</arguments>
<msg timestamp="20170903 17:07:40.999" level="INFO">Executing : Table Must Exist  |  view_hosts </msg>
<msg timestamp="20170903 17:07:40.999" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts' </msg>
<status status="PASS" endtime="20170903 17:07:41.000" starttime="20170903 17:07:40.999"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_deployable</arg>
</arguments>
<msg timestamp="20170903 17:07:41.001" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_deployable </msg>
<msg timestamp="20170903 17:07:41.001" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_deployable' </msg>
<status status="PASS" endtime="20170903 17:07:41.002" starttime="20170903 17:07:41.001"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_deployable_and_shared</arg>
</arguments>
<msg timestamp="20170903 17:07:41.003" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_deployable_and_shared </msg>
<msg timestamp="20170903 17:07:41.003" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_deployable_and_shared' </msg>
<status status="PASS" endtime="20170903 17:07:41.004" starttime="20170903 17:07:41.002"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_shared</arg>
</arguments>
<msg timestamp="20170903 17:07:41.005" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_shared </msg>
<msg timestamp="20170903 17:07:41.005" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_shared' </msg>
<status status="PASS" endtime="20170903 17:07:41.006" starttime="20170903 17:07:41.004"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_sessions</arg>
</arguments>
<msg timestamp="20170903 17:07:41.007" level="INFO">Executing : Table Must Exist  |  view_sessions </msg>
<msg timestamp="20170903 17:07:41.007" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_sessions' </msg>
<status status="PASS" endtime="20170903 17:07:41.010" starttime="20170903 17:07:41.006"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_tasks</arg>
</arguments>
<msg timestamp="20170903 17:07:41.010" level="INFO">Executing : Table Must Exist  |  view_tasks </msg>
<msg timestamp="20170903 17:07:41.010" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_tasks' </msg>
<status status="PASS" endtime="20170903 17:07:41.011" starttime="20170903 17:07:41.010"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_traces</arg>
</arguments>
<msg timestamp="20170903 17:07:41.012" level="INFO">Executing : Table Must Exist  |  view_traces </msg>
<msg timestamp="20170903 17:07:41.012" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_traces' </msg>
<status status="PASS" endtime="20170903 17:07:41.013" starttime="20170903 17:07:41.012"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_usergroups</arg>
</arguments>
<msg timestamp="20170903 17:07:41.014" level="INFO">Executing : Table Must Exist  |  view_usergroups </msg>
<msg timestamp="20170903 17:07:41.014" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_usergroups' </msg>
<status status="PASS" endtime="20170903 17:07:41.015" starttime="20170903 17:07:41.014"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users</arg>
</arguments>
<msg timestamp="20170903 17:07:41.016" level="INFO">Executing : Table Must Exist  |  view_users </msg>
<msg timestamp="20170903 17:07:41.016" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users' </msg>
<status status="PASS" endtime="20170903 17:07:41.018" starttime="20170903 17:07:41.016"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_apps</arg>
</arguments>
<msg timestamp="20170903 17:07:41.018" level="INFO">Executing : Table Must Exist  |  view_users_apps </msg>
<msg timestamp="20170903 17:07:41.019" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_apps' </msg>
<status status="PASS" endtime="20170903 17:07:41.020" starttime="20170903 17:07:41.018"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_datas</arg>
</arguments>
<msg timestamp="20170903 17:07:41.021" level="INFO">Executing : Table Must Exist  |  view_users_datas </msg>
<msg timestamp="20170903 17:07:41.021" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_datas' </msg>
<status status="PASS" endtime="20170903 17:07:41.022" starttime="20170903 17:07:41.020"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_groups</arg>
</arguments>
<msg timestamp="20170903 17:07:41.023" level="INFO">Executing : Table Must Exist  |  view_users_groups </msg>
<msg timestamp="20170903 17:07:41.023" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_groups' </msg>
<status status="PASS" endtime="20170903 17:07:41.024" starttime="20170903 17:07:41.022"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_hosts</arg>
</arguments>
<msg timestamp="20170903 17:07:41.025" level="INFO">Executing : Table Must Exist  |  view_users_hosts </msg>
<msg timestamp="20170903 17:07:41.025" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_hosts' </msg>
<status status="PASS" endtime="20170903 17:07:41.026" starttime="20170903 17:07:41.024"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_sessions</arg>
</arguments>
<msg timestamp="20170903 17:07:41.027" level="INFO">Executing : Table Must Exist  |  view_users_sessions </msg>
<msg timestamp="20170903 17:07:41.027" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_sessions' </msg>
<status status="PASS" endtime="20170903 17:07:41.028" starttime="20170903 17:07:41.026"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_tasks</arg>
</arguments>
<msg timestamp="20170903 17:07:41.028" level="INFO">Executing : Table Must Exist  |  view_users_tasks </msg>
<msg timestamp="20170903 17:07:41.028" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_tasks' </msg>
<status status="PASS" endtime="20170903 17:07:41.030" starttime="20170903 17:07:41.028"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_traces</arg>
</arguments>
<msg timestamp="20170903 17:07:41.030" level="INFO">Executing : Table Must Exist  |  view_users_traces </msg>
<msg timestamp="20170903 17:07:41.030" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_traces' </msg>
<status status="PASS" endtime="20170903 17:07:41.031" starttime="20170903 17:07:41.030"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_usergroups</arg>
</arguments>
<msg timestamp="20170903 17:07:41.032" level="INFO">Executing : Table Must Exist  |  view_users_usergroups </msg>
<msg timestamp="20170903 17:07:41.032" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_usergroups' </msg>
<status status="PASS" endtime="20170903 17:07:41.033" starttime="20170903 17:07:41.031"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_users</arg>
</arguments>
<msg timestamp="20170903 17:07:41.034" level="INFO">Executing : Table Must Exist  |  view_users_users </msg>
<msg timestamp="20170903 17:07:41.034" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_users' </msg>
<status status="PASS" endtime="20170903 17:07:41.035" starttime="20170903 17:07:41.033"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_works</arg>
</arguments>
<msg timestamp="20170903 17:07:41.036" level="INFO">Executing : Table Must Exist  |  view_users_works </msg>
<msg timestamp="20170903 17:07:41.036" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_works' </msg>
<status status="PASS" endtime="20170903 17:07:41.037" starttime="20170903 17:07:41.035"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works</arg>
</arguments>
<msg timestamp="20170903 17:07:41.038" level="INFO">Executing : Table Must Exist  |  view_works </msg>
<msg timestamp="20170903 17:07:41.038" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works' </msg>
<status status="PASS" endtime="20170903 17:07:41.040" starttime="20170903 17:07:41.038"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works_for_billing</arg>
</arguments>
<msg timestamp="20170903 17:07:41.040" level="INFO">Executing : Table Must Exist  |  view_works_for_billing </msg>
<msg timestamp="20170903 17:07:41.041" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works_for_billing' </msg>
<status status="PASS" endtime="20170903 17:07:41.042" starttime="20170903 17:07:41.040"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works_for_billing_with_file_sizes</arg>
</arguments>
<msg timestamp="20170903 17:07:41.043" level="INFO">Executing : Table Must Exist  |  view_works_for_billing_with_file_sizes </msg>
<msg timestamp="20170903 17:07:41.043" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works_for_billing_with_file_sizes' </msg>
<status status="PASS" endtime="20170903 17:07:41.045" starttime="20170903 17:07:41.042"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works</arg>
</arguments>
<msg timestamp="20170903 17:07:41.045" level="INFO">Executing : Table Must Exist  |  works </msg>
<msg timestamp="20170903 17:07:41.046" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='works' </msg>
<status status="PASS" endtime="20170903 17:07:41.048" starttime="20170903 17:07:41.045"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works_history</arg>
</arguments>
<msg timestamp="20170903 17:07:41.048" level="INFO">Executing : Table Must Exist  |  works_history </msg>
<msg timestamp="20170903 17:07:41.048" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='works_history' </msg>
<status status="PASS" endtime="20170903 17:07:41.050" starttime="20170903 17:07:41.048"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170903 17:07:41.051" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170903 17:07:41.051" starttime="20170903 17:07:41.050"></status>
</kw>
<status status="PASS" endtime="20170903 17:07:41.051" starttime="20170903 17:07:41.050"></status>
</kw>
<status status="PASS" endtime="20170903 17:07:41.051" starttime="20170903 17:07:40.914"></status>
</kw>
<status status="PASS" endtime="20170903 17:07:41.051" starttime="20170903 17:07:40.914"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>TODO ping XWtremWeb server up</arg>
</arguments>
<msg timestamp="20170903 17:07:41.052" level="INFO">TODO ping XWtremWeb server up</msg>
<status status="PASS" endtime="20170903 17:07:41.052" starttime="20170903 17:07:41.051"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>TODO ping XWtremWeb worker up before one test</arg>
</arguments>
<msg timestamp="20170903 17:07:41.052" level="INFO">TODO ping XWtremWeb worker up before one test</msg>
<status status="PASS" endtime="20170903 17:07:41.052" starttime="20170903 17:07:41.052"></status>
</kw>
<kw name="Delete Fonctionnal Xtremweb Tables" library="MySql">
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170903 17:07:41.054" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170903 17:07:41.056" starttime="20170903 17:07:41.054"></status>
</kw>
<status status="PASS" endtime="20170903 17:07:41.056" starttime="20170903 17:07:41.054"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps</arg>
</arguments>
<msg timestamp="20170903 17:07:41.056" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM apps; </msg>
<status status="PASS" endtime="20170903 17:07:41.057" starttime="20170903 17:07:41.056"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps_history</arg>
</arguments>
<msg timestamp="20170903 17:07:41.058" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM apps_history; </msg>
<status status="PASS" endtime="20170903 17:07:41.059" starttime="20170903 17:07:41.058"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas</arg>
</arguments>
<msg timestamp="20170903 17:07:41.059" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM datas; </msg>
<status status="PASS" endtime="20170903 17:07:41.060" starttime="20170903 17:07:41.059"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas_history</arg>
</arguments>
<msg timestamp="20170903 17:07:41.061" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM datas_history; </msg>
<status status="PASS" endtime="20170903 17:07:41.061" starttime="20170903 17:07:41.060"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables</arg>
</arguments>
<msg timestamp="20170903 17:07:41.061" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM executables; </msg>
<status status="PASS" endtime="20170903 17:07:41.062" starttime="20170903 17:07:41.061"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables_history</arg>
</arguments>
<msg timestamp="20170903 17:07:41.062" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM executables_history; </msg>
<status status="PASS" endtime="20170903 17:07:41.062" starttime="20170903 17:07:41.062"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups</arg>
</arguments>
<msg timestamp="20170903 17:07:41.063" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM groups; </msg>
<status status="PASS" endtime="20170903 17:07:41.063" starttime="20170903 17:07:41.062"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups_history</arg>
</arguments>
<msg timestamp="20170903 17:07:41.063" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM groups_history; </msg>
<status status="PASS" endtime="20170903 17:07:41.064" starttime="20170903 17:07:41.063"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts</arg>
</arguments>
<msg timestamp="20170903 17:07:41.064" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM hosts; </msg>
<status status="PASS" endtime="20170903 17:07:41.065" starttime="20170903 17:07:41.064"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts_history</arg>
</arguments>
<msg timestamp="20170903 17:07:41.065" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM hosts_history; </msg>
<status status="PASS" endtime="20170903 17:07:41.066" starttime="20170903 17:07:41.065"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships</arg>
</arguments>
<msg timestamp="20170903 17:07:41.066" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM memberships; </msg>
<status status="PASS" endtime="20170903 17:07:41.067" starttime="20170903 17:07:41.066"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships_history</arg>
</arguments>
<msg timestamp="20170903 17:07:41.067" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM memberships_history; </msg>
<status status="PASS" endtime="20170903 17:07:41.068" starttime="20170903 17:07:41.067"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions</arg>
</arguments>
<msg timestamp="20170903 17:07:41.068" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sessions; </msg>
<status status="PASS" endtime="20170903 17:07:41.069" starttime="20170903 17:07:41.068"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions_history</arg>
</arguments>
<msg timestamp="20170903 17:07:41.069" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sessions_history; </msg>
<status status="PASS" endtime="20170903 17:07:41.069" starttime="20170903 17:07:41.069"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes</arg>
</arguments>
<msg timestamp="20170903 17:07:41.070" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedAppTypes; </msg>
<status status="PASS" endtime="20170903 17:07:41.070" starttime="20170903 17:07:41.070"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes_history</arg>
</arguments>
<msg timestamp="20170903 17:07:41.071" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedAppTypes_history; </msg>
<status status="PASS" endtime="20170903 17:07:41.071" starttime="20170903 17:07:41.071"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes</arg>
</arguments>
<msg timestamp="20170903 17:07:41.072" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedPackageTypes; </msg>
<status status="PASS" endtime="20170903 17:07:41.072" starttime="20170903 17:07:41.071"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes_history</arg>
</arguments>
<msg timestamp="20170903 17:07:41.072" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedPackageTypes_history; </msg>
<status status="PASS" endtime="20170903 17:07:41.073" starttime="20170903 17:07:41.072"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks</arg>
</arguments>
<msg timestamp="20170903 17:07:41.073" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM tasks; </msg>
<status status="PASS" endtime="20170903 17:07:41.073" starttime="20170903 17:07:41.073"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks_history</arg>
</arguments>
<msg timestamp="20170903 17:07:41.074" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM tasks_history; </msg>
<status status="PASS" endtime="20170903 17:07:41.074" starttime="20170903 17:07:41.074"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces</arg>
</arguments>
<msg timestamp="20170903 17:07:41.075" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM traces; </msg>
<status status="PASS" endtime="20170903 17:07:41.075" starttime="20170903 17:07:41.074"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces_history</arg>
</arguments>
<msg timestamp="20170903 17:07:41.075" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM traces_history; </msg>
<status status="PASS" endtime="20170903 17:07:41.076" starttime="20170903 17:07:41.075"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups</arg>
</arguments>
<msg timestamp="20170903 17:07:41.076" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM usergroups; </msg>
<status status="PASS" endtime="20170903 17:07:41.077" starttime="20170903 17:07:41.076"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups_history</arg>
</arguments>
<msg timestamp="20170903 17:07:41.077" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM usergroups_history; </msg>
<status status="PASS" endtime="20170903 17:07:41.077" starttime="20170903 17:07:41.077"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users_history</arg>
</arguments>
<msg timestamp="20170903 17:07:41.078" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM users_history; </msg>
<status status="PASS" endtime="20170903 17:07:41.078" starttime="20170903 17:07:41.078"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works</arg>
</arguments>
<msg timestamp="20170903 17:07:41.079" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM works; </msg>
<status status="PASS" endtime="20170903 17:07:41.079" starttime="20170903 17:07:41.078"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works_history</arg>
</arguments>
<msg timestamp="20170903 17:07:41.080" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM works_history; </msg>
<status status="PASS" endtime="20170903 17:07:41.080" starttime="20170903 17:07:41.080"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170903 17:07:41.081" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170903 17:07:41.081" starttime="20170903 17:07:41.081"></status>
</kw>
<status status="PASS" endtime="20170903 17:07:41.081" starttime="20170903 17:07:41.080"></status>
</kw>
<status status="PASS" endtime="20170903 17:07:41.082" starttime="20170903 17:07:41.052"></status>
</kw>
<status status="PASS" endtime="20170903 17:07:41.082" starttime="20170903 17:07:40.913"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>TODO</arg>
</arguments>
<msg timestamp="20170903 17:07:41.083" level="INFO">TODO</msg>
<status status="PASS" endtime="20170903 17:07:41.083" starttime="20170903 17:07:41.082"></status>
</kw>
<kw type="teardown" name="End XWtremWeb Command Test" library="XWCommon">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Nothing to do</arg>
</arguments>
<msg timestamp="20170903 17:07:41.084" level="INFO">Nothing to do</msg>
<status status="PASS" endtime="20170903 17:07:41.085" starttime="20170903 17:07:41.084"></status>
</kw>
<status status="PASS" endtime="20170903 17:07:41.085" starttime="20170903 17:07:41.084"></status>
</kw>
<doc>Typiquement un fichier ou un répertoire de plus de 1Mb.</doc>
<tags>
<tag>CommandLine Tests</tag>
</tags>
<status status="PASS" endtime="20170903 17:07:41.085" critical="yes" starttime="20170903 17:07:40.911"></status>
</test>
<test id="s1-s4-t7" name="Test 4 Tester la ligne de commande et l’environnement">
<kw type="setup" name="Begin XWtremWeb Command Test" library="XWCommon">
<kw name="Ping XWtremWeb Database" library="XWServer">
<kw name="Xtremweb Tables Must Exist" library="MySql">
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170903 17:07:41.093" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170903 17:07:41.094" starttime="20170903 17:07:41.092"></status>
</kw>
<status status="PASS" endtime="20170903 17:07:41.095" starttime="20170903 17:07:41.092"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>appTypes</arg>
</arguments>
<msg timestamp="20170903 17:07:41.095" level="INFO">Executing : Table Must Exist  |  appTypes </msg>
<msg timestamp="20170903 17:07:41.095" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='appTypes' </msg>
<status status="PASS" endtime="20170903 17:07:41.096" starttime="20170903 17:07:41.095"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps</arg>
</arguments>
<msg timestamp="20170903 17:07:41.097" level="INFO">Executing : Table Must Exist  |  apps </msg>
<msg timestamp="20170903 17:07:41.097" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='apps' </msg>
<status status="PASS" endtime="20170903 17:07:41.098" starttime="20170903 17:07:41.097"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps_history</arg>
</arguments>
<msg timestamp="20170903 17:07:41.099" level="INFO">Executing : Table Must Exist  |  apps_history </msg>
<msg timestamp="20170903 17:07:41.099" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='apps_history' </msg>
<status status="PASS" endtime="20170903 17:07:41.100" starttime="20170903 17:07:41.098"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>cpuTypes</arg>
</arguments>
<msg timestamp="20170903 17:07:41.100" level="INFO">Executing : Table Must Exist  |  cpuTypes </msg>
<msg timestamp="20170903 17:07:41.100" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='cpuTypes' </msg>
<status status="PASS" endtime="20170903 17:07:41.102" starttime="20170903 17:07:41.100"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>dataTypes</arg>
</arguments>
<msg timestamp="20170903 17:07:41.102" level="INFO">Executing : Table Must Exist  |  dataTypes </msg>
<msg timestamp="20170903 17:07:41.102" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='dataTypes' </msg>
<status status="PASS" endtime="20170903 17:07:41.103" starttime="20170903 17:07:41.102"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas</arg>
</arguments>
<msg timestamp="20170903 17:07:41.104" level="INFO">Executing : Table Must Exist  |  datas </msg>
<msg timestamp="20170903 17:07:41.104" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='datas' </msg>
<status status="PASS" endtime="20170903 17:07:41.105" starttime="20170903 17:07:41.104"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas_history</arg>
</arguments>
<msg timestamp="20170903 17:07:41.106" level="INFO">Executing : Table Must Exist  |  datas_history </msg>
<msg timestamp="20170903 17:07:41.106" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='datas_history' </msg>
<status status="PASS" endtime="20170903 17:07:41.107" starttime="20170903 17:07:41.105"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables</arg>
</arguments>
<msg timestamp="20170903 17:07:41.107" level="INFO">Executing : Table Must Exist  |  executables </msg>
<msg timestamp="20170903 17:07:41.107" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='executables' </msg>
<status status="PASS" endtime="20170903 17:07:41.109" starttime="20170903 17:07:41.107"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables_history</arg>
</arguments>
<msg timestamp="20170903 17:07:41.110" level="INFO">Executing : Table Must Exist  |  executables_history </msg>
<msg timestamp="20170903 17:07:41.110" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='executables_history' </msg>
<status status="PASS" endtime="20170903 17:07:41.113" starttime="20170903 17:07:41.109"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups</arg>
</arguments>
<msg timestamp="20170903 17:07:41.114" level="INFO">Executing : Table Must Exist  |  groups </msg>
<msg timestamp="20170903 17:07:41.115" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='groups' </msg>
<status status="PASS" endtime="20170903 17:07:41.117" starttime="20170903 17:07:41.114"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups_history</arg>
</arguments>
<msg timestamp="20170903 17:07:41.120" level="INFO">Executing : Table Must Exist  |  groups_history </msg>
<msg timestamp="20170903 17:07:41.120" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='groups_history' </msg>
<status status="PASS" endtime="20170903 17:07:41.123" starttime="20170903 17:07:41.119"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts</arg>
</arguments>
<msg timestamp="20170903 17:07:41.124" level="INFO">Executing : Table Must Exist  |  hosts </msg>
<msg timestamp="20170903 17:07:41.124" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='hosts' </msg>
<status status="PASS" endtime="20170903 17:07:41.127" starttime="20170903 17:07:41.124"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts_history</arg>
</arguments>
<msg timestamp="20170903 17:07:41.128" level="INFO">Executing : Table Must Exist  |  hosts_history </msg>
<msg timestamp="20170903 17:07:41.128" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='hosts_history' </msg>
<status status="PASS" endtime="20170903 17:07:41.130" starttime="20170903 17:07:41.128"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships</arg>
</arguments>
<msg timestamp="20170903 17:07:41.131" level="INFO">Executing : Table Must Exist  |  memberships </msg>
<msg timestamp="20170903 17:07:41.132" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='memberships' </msg>
<status status="PASS" endtime="20170903 17:07:41.133" starttime="20170903 17:07:41.131"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships_history</arg>
</arguments>
<msg timestamp="20170903 17:07:41.134" level="INFO">Executing : Table Must Exist  |  memberships_history </msg>
<msg timestamp="20170903 17:07:41.134" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='memberships_history' </msg>
<status status="PASS" endtime="20170903 17:07:41.135" starttime="20170903 17:07:41.133"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>oses</arg>
</arguments>
<msg timestamp="20170903 17:07:41.136" level="INFO">Executing : Table Must Exist  |  oses </msg>
<msg timestamp="20170903 17:07:41.137" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='oses' </msg>
<status status="PASS" endtime="20170903 17:07:41.142" starttime="20170903 17:07:41.135"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>packageTypes</arg>
</arguments>
<msg timestamp="20170903 17:07:41.143" level="INFO">Executing : Table Must Exist  |  packageTypes </msg>
<msg timestamp="20170903 17:07:41.143" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='packageTypes' </msg>
<status status="PASS" endtime="20170903 17:07:41.145" starttime="20170903 17:07:41.142"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions</arg>
</arguments>
<msg timestamp="20170903 17:07:41.146" level="INFO">Executing : Table Must Exist  |  sessions </msg>
<msg timestamp="20170903 17:07:41.146" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sessions' </msg>
<status status="PASS" endtime="20170903 17:07:41.149" starttime="20170903 17:07:41.145"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions_history</arg>
</arguments>
<msg timestamp="20170903 17:07:41.149" level="INFO">Executing : Table Must Exist  |  sessions_history </msg>
<msg timestamp="20170903 17:07:41.149" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sessions_history' </msg>
<status status="PASS" endtime="20170903 17:07:41.152" starttime="20170903 17:07:41.149"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes</arg>
</arguments>
<msg timestamp="20170903 17:07:41.153" level="INFO">Executing : Table Must Exist  |  sharedAppTypes </msg>
<msg timestamp="20170903 17:07:41.153" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedAppTypes' </msg>
<status status="PASS" endtime="20170903 17:07:41.157" starttime="20170903 17:07:41.152"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes_history</arg>
</arguments>
<msg timestamp="20170903 17:07:41.158" level="INFO">Executing : Table Must Exist  |  sharedAppTypes_history </msg>
<msg timestamp="20170903 17:07:41.158" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedAppTypes_history' </msg>
<status status="PASS" endtime="20170903 17:07:41.161" starttime="20170903 17:07:41.158"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes</arg>
</arguments>
<msg timestamp="20170903 17:07:41.162" level="INFO">Executing : Table Must Exist  |  sharedPackageTypes </msg>
<msg timestamp="20170903 17:07:41.162" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedPackageTypes' </msg>
<status status="PASS" endtime="20170903 17:07:41.165" starttime="20170903 17:07:41.161"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes_history</arg>
</arguments>
<msg timestamp="20170903 17:07:41.166" level="INFO">Executing : Table Must Exist  |  sharedPackageTypes_history </msg>
<msg timestamp="20170903 17:07:41.166" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedPackageTypes_history' </msg>
<status status="PASS" endtime="20170903 17:07:41.169" starttime="20170903 17:07:41.165"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>statuses</arg>
</arguments>
<msg timestamp="20170903 17:07:41.170" level="INFO">Executing : Table Must Exist  |  statuses </msg>
<msg timestamp="20170903 17:07:41.170" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='statuses' </msg>
<status status="PASS" endtime="20170903 17:07:41.173" starttime="20170903 17:07:41.169"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks</arg>
</arguments>
<msg timestamp="20170903 17:07:41.174" level="INFO">Executing : Table Must Exist  |  tasks </msg>
<msg timestamp="20170903 17:07:41.174" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='tasks' </msg>
<status status="PASS" endtime="20170903 17:07:41.176" starttime="20170903 17:07:41.173"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks_history</arg>
</arguments>
<msg timestamp="20170903 17:07:41.177" level="INFO">Executing : Table Must Exist  |  tasks_history </msg>
<msg timestamp="20170903 17:07:41.177" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='tasks_history' </msg>
<status status="PASS" endtime="20170903 17:07:41.179" starttime="20170903 17:07:41.177"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces</arg>
</arguments>
<msg timestamp="20170903 17:07:41.181" level="INFO">Executing : Table Must Exist  |  traces </msg>
<msg timestamp="20170903 17:07:41.181" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='traces' </msg>
<status status="PASS" endtime="20170903 17:07:41.183" starttime="20170903 17:07:41.179"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces_history</arg>
</arguments>
<msg timestamp="20170903 17:07:41.183" level="INFO">Executing : Table Must Exist  |  traces_history </msg>
<msg timestamp="20170903 17:07:41.183" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='traces_history' </msg>
<status status="PASS" endtime="20170903 17:07:41.184" starttime="20170903 17:07:41.183"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>userRights</arg>
</arguments>
<msg timestamp="20170903 17:07:41.185" level="INFO">Executing : Table Must Exist  |  userRights </msg>
<msg timestamp="20170903 17:07:41.185" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='userRights' </msg>
<status status="PASS" endtime="20170903 17:07:41.186" starttime="20170903 17:07:41.184"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups</arg>
</arguments>
<msg timestamp="20170903 17:07:41.186" level="INFO">Executing : Table Must Exist  |  usergroups </msg>
<msg timestamp="20170903 17:07:41.186" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='usergroups' </msg>
<status status="PASS" endtime="20170903 17:07:41.187" starttime="20170903 17:07:41.186"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups_history</arg>
</arguments>
<msg timestamp="20170903 17:07:41.188" level="INFO">Executing : Table Must Exist  |  usergroups_history </msg>
<msg timestamp="20170903 17:07:41.188" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='usergroups_history' </msg>
<status status="PASS" endtime="20170903 17:07:41.189" starttime="20170903 17:07:41.187"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users</arg>
</arguments>
<msg timestamp="20170903 17:07:41.189" level="INFO">Executing : Table Must Exist  |  users </msg>
<msg timestamp="20170903 17:07:41.189" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='users' </msg>
<status status="PASS" endtime="20170903 17:07:41.191" starttime="20170903 17:07:41.189"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users_history</arg>
</arguments>
<msg timestamp="20170903 17:07:41.191" level="INFO">Executing : Table Must Exist  |  users_history </msg>
<msg timestamp="20170903 17:07:41.191" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='users_history' </msg>
<status status="PASS" endtime="20170903 17:07:41.193" starttime="20170903 17:07:41.191"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>version</arg>
</arguments>
<msg timestamp="20170903 17:07:41.194" level="INFO">Executing : Table Must Exist  |  version </msg>
<msg timestamp="20170903 17:07:41.194" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='version' </msg>
<status status="PASS" endtime="20170903 17:07:41.196" starttime="20170903 17:07:41.193"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>versions</arg>
</arguments>
<msg timestamp="20170903 17:07:41.197" level="INFO">Executing : Table Must Exist  |  versions </msg>
<msg timestamp="20170903 17:07:41.197" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='versions' </msg>
<status status="PASS" endtime="20170903 17:07:41.199" starttime="20170903 17:07:41.196"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps</arg>
</arguments>
<msg timestamp="20170903 17:07:41.200" level="INFO">Executing : Table Must Exist  |  view_apps </msg>
<msg timestamp="20170903 17:07:41.200" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps' </msg>
<status status="PASS" endtime="20170903 17:07:41.203" starttime="20170903 17:07:41.200"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps_for_offering</arg>
</arguments>
<msg timestamp="20170903 17:07:41.204" level="INFO">Executing : Table Must Exist  |  view_apps_for_offering </msg>
<msg timestamp="20170903 17:07:41.204" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps_for_offering' </msg>
<status status="PASS" endtime="20170903 17:07:41.206" starttime="20170903 17:07:41.203"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps_for_offering_with_file_sizes</arg>
</arguments>
<msg timestamp="20170903 17:07:41.207" level="INFO">Executing : Table Must Exist  |  view_apps_for_offering_with_file_sizes </msg>
<msg timestamp="20170903 17:07:41.207" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps_for_offering_with_file_sizes' </msg>
<status status="PASS" endtime="20170903 17:07:41.211" starttime="20170903 17:07:41.207"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_datas</arg>
</arguments>
<msg timestamp="20170903 17:07:41.212" level="INFO">Executing : Table Must Exist  |  view_datas </msg>
<msg timestamp="20170903 17:07:41.212" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_datas' </msg>
<status status="PASS" endtime="20170903 17:07:41.213" starttime="20170903 17:07:41.211"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_executables</arg>
</arguments>
<msg timestamp="20170903 17:07:41.214" level="INFO">Executing : Table Must Exist  |  view_executables </msg>
<msg timestamp="20170903 17:07:41.214" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_executables' </msg>
<status status="PASS" endtime="20170903 17:07:41.215" starttime="20170903 17:07:41.214"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_groups</arg>
</arguments>
<msg timestamp="20170903 17:07:41.215" level="INFO">Executing : Table Must Exist  |  view_groups </msg>
<msg timestamp="20170903 17:07:41.216" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_groups' </msg>
<status status="PASS" endtime="20170903 17:07:41.217" starttime="20170903 17:07:41.215"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts</arg>
</arguments>
<msg timestamp="20170903 17:07:41.218" level="INFO">Executing : Table Must Exist  |  view_hosts </msg>
<msg timestamp="20170903 17:07:41.218" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts' </msg>
<status status="PASS" endtime="20170903 17:07:41.219" starttime="20170903 17:07:41.217"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_deployable</arg>
</arguments>
<msg timestamp="20170903 17:07:41.220" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_deployable </msg>
<msg timestamp="20170903 17:07:41.220" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_deployable' </msg>
<status status="PASS" endtime="20170903 17:07:41.221" starttime="20170903 17:07:41.220"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_deployable_and_shared</arg>
</arguments>
<msg timestamp="20170903 17:07:41.222" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_deployable_and_shared </msg>
<msg timestamp="20170903 17:07:41.222" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_deployable_and_shared' </msg>
<status status="PASS" endtime="20170903 17:07:41.223" starttime="20170903 17:07:41.222"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_shared</arg>
</arguments>
<msg timestamp="20170903 17:07:41.224" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_shared </msg>
<msg timestamp="20170903 17:07:41.224" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_shared' </msg>
<status status="PASS" endtime="20170903 17:07:41.226" starttime="20170903 17:07:41.224"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_sessions</arg>
</arguments>
<msg timestamp="20170903 17:07:41.226" level="INFO">Executing : Table Must Exist  |  view_sessions </msg>
<msg timestamp="20170903 17:07:41.226" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_sessions' </msg>
<status status="PASS" endtime="20170903 17:07:41.227" starttime="20170903 17:07:41.226"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_tasks</arg>
</arguments>
<msg timestamp="20170903 17:07:41.228" level="INFO">Executing : Table Must Exist  |  view_tasks </msg>
<msg timestamp="20170903 17:07:41.228" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_tasks' </msg>
<status status="PASS" endtime="20170903 17:07:41.229" starttime="20170903 17:07:41.228"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_traces</arg>
</arguments>
<msg timestamp="20170903 17:07:41.230" level="INFO">Executing : Table Must Exist  |  view_traces </msg>
<msg timestamp="20170903 17:07:41.230" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_traces' </msg>
<status status="PASS" endtime="20170903 17:07:41.231" starttime="20170903 17:07:41.229"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_usergroups</arg>
</arguments>
<msg timestamp="20170903 17:07:41.231" level="INFO">Executing : Table Must Exist  |  view_usergroups </msg>
<msg timestamp="20170903 17:07:41.231" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_usergroups' </msg>
<status status="PASS" endtime="20170903 17:07:41.233" starttime="20170903 17:07:41.231"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users</arg>
</arguments>
<msg timestamp="20170903 17:07:41.233" level="INFO">Executing : Table Must Exist  |  view_users </msg>
<msg timestamp="20170903 17:07:41.233" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users' </msg>
<status status="PASS" endtime="20170903 17:07:41.235" starttime="20170903 17:07:41.233"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_apps</arg>
</arguments>
<msg timestamp="20170903 17:07:41.235" level="INFO">Executing : Table Must Exist  |  view_users_apps </msg>
<msg timestamp="20170903 17:07:41.235" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_apps' </msg>
<status status="PASS" endtime="20170903 17:07:41.237" starttime="20170903 17:07:41.235"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_datas</arg>
</arguments>
<msg timestamp="20170903 17:07:41.237" level="INFO">Executing : Table Must Exist  |  view_users_datas </msg>
<msg timestamp="20170903 17:07:41.238" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_datas' </msg>
<status status="PASS" endtime="20170903 17:07:41.239" starttime="20170903 17:07:41.237"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_groups</arg>
</arguments>
<msg timestamp="20170903 17:07:41.240" level="INFO">Executing : Table Must Exist  |  view_users_groups </msg>
<msg timestamp="20170903 17:07:41.240" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_groups' </msg>
<status status="PASS" endtime="20170903 17:07:41.241" starttime="20170903 17:07:41.239"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_hosts</arg>
</arguments>
<msg timestamp="20170903 17:07:41.241" level="INFO">Executing : Table Must Exist  |  view_users_hosts </msg>
<msg timestamp="20170903 17:07:41.241" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_hosts' </msg>
<status status="PASS" endtime="20170903 17:07:41.243" starttime="20170903 17:07:41.241"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_sessions</arg>
</arguments>
<msg timestamp="20170903 17:07:41.244" level="INFO">Executing : Table Must Exist  |  view_users_sessions </msg>
<msg timestamp="20170903 17:07:41.244" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_sessions' </msg>
<status status="PASS" endtime="20170903 17:07:41.245" starttime="20170903 17:07:41.243"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_tasks</arg>
</arguments>
<msg timestamp="20170903 17:07:41.246" level="INFO">Executing : Table Must Exist  |  view_users_tasks </msg>
<msg timestamp="20170903 17:07:41.246" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_tasks' </msg>
<status status="PASS" endtime="20170903 17:07:41.248" starttime="20170903 17:07:41.246"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_traces</arg>
</arguments>
<msg timestamp="20170903 17:07:41.248" level="INFO">Executing : Table Must Exist  |  view_users_traces </msg>
<msg timestamp="20170903 17:07:41.248" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_traces' </msg>
<status status="PASS" endtime="20170903 17:07:41.250" starttime="20170903 17:07:41.248"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_usergroups</arg>
</arguments>
<msg timestamp="20170903 17:07:41.250" level="INFO">Executing : Table Must Exist  |  view_users_usergroups </msg>
<msg timestamp="20170903 17:07:41.250" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_usergroups' </msg>
<status status="PASS" endtime="20170903 17:07:41.251" starttime="20170903 17:07:41.250"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_users</arg>
</arguments>
<msg timestamp="20170903 17:07:41.252" level="INFO">Executing : Table Must Exist  |  view_users_users </msg>
<msg timestamp="20170903 17:07:41.252" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_users' </msg>
<status status="PASS" endtime="20170903 17:07:41.254" starttime="20170903 17:07:41.252"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_works</arg>
</arguments>
<msg timestamp="20170903 17:07:41.254" level="INFO">Executing : Table Must Exist  |  view_users_works </msg>
<msg timestamp="20170903 17:07:41.254" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_works' </msg>
<status status="PASS" endtime="20170903 17:07:41.255" starttime="20170903 17:07:41.254"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works</arg>
</arguments>
<msg timestamp="20170903 17:07:41.257" level="INFO">Executing : Table Must Exist  |  view_works </msg>
<msg timestamp="20170903 17:07:41.257" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works' </msg>
<status status="PASS" endtime="20170903 17:07:41.259" starttime="20170903 17:07:41.257"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works_for_billing</arg>
</arguments>
<msg timestamp="20170903 17:07:41.260" level="INFO">Executing : Table Must Exist  |  view_works_for_billing </msg>
<msg timestamp="20170903 17:07:41.260" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works_for_billing' </msg>
<status status="PASS" endtime="20170903 17:07:41.262" starttime="20170903 17:07:41.259"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works_for_billing_with_file_sizes</arg>
</arguments>
<msg timestamp="20170903 17:07:41.262" level="INFO">Executing : Table Must Exist  |  view_works_for_billing_with_file_sizes </msg>
<msg timestamp="20170903 17:07:41.262" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works_for_billing_with_file_sizes' </msg>
<status status="PASS" endtime="20170903 17:07:41.264" starttime="20170903 17:07:41.262"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works</arg>
</arguments>
<msg timestamp="20170903 17:07:41.264" level="INFO">Executing : Table Must Exist  |  works </msg>
<msg timestamp="20170903 17:07:41.264" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='works' </msg>
<status status="PASS" endtime="20170903 17:07:41.266" starttime="20170903 17:07:41.264"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works_history</arg>
</arguments>
<msg timestamp="20170903 17:07:41.266" level="INFO">Executing : Table Must Exist  |  works_history </msg>
<msg timestamp="20170903 17:07:41.266" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='works_history' </msg>
<status status="PASS" endtime="20170903 17:07:41.268" starttime="20170903 17:07:41.266"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170903 17:07:41.268" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170903 17:07:41.269" starttime="20170903 17:07:41.268"></status>
</kw>
<status status="PASS" endtime="20170903 17:07:41.269" starttime="20170903 17:07:41.268"></status>
</kw>
<status status="PASS" endtime="20170903 17:07:41.269" starttime="20170903 17:07:41.092"></status>
</kw>
<status status="PASS" endtime="20170903 17:07:41.269" starttime="20170903 17:07:41.091"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>TODO ping XWtremWeb server up</arg>
</arguments>
<msg timestamp="20170903 17:07:41.269" level="INFO">TODO ping XWtremWeb server up</msg>
<status status="PASS" endtime="20170903 17:07:41.270" starttime="20170903 17:07:41.269"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>TODO ping XWtremWeb worker up before one test</arg>
</arguments>
<msg timestamp="20170903 17:07:41.270" level="INFO">TODO ping XWtremWeb worker up before one test</msg>
<status status="PASS" endtime="20170903 17:07:41.270" starttime="20170903 17:07:41.270"></status>
</kw>
<kw name="Delete Fonctionnal Xtremweb Tables" library="MySql">
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170903 17:07:41.271" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170903 17:07:41.273" starttime="20170903 17:07:41.271"></status>
</kw>
<status status="PASS" endtime="20170903 17:07:41.273" starttime="20170903 17:07:41.270"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps</arg>
</arguments>
<msg timestamp="20170903 17:07:41.273" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM apps; </msg>
<status status="PASS" endtime="20170903 17:07:41.274" starttime="20170903 17:07:41.273"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps_history</arg>
</arguments>
<msg timestamp="20170903 17:07:41.274" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM apps_history; </msg>
<status status="PASS" endtime="20170903 17:07:41.275" starttime="20170903 17:07:41.274"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas</arg>
</arguments>
<msg timestamp="20170903 17:07:41.276" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM datas; </msg>
<status status="PASS" endtime="20170903 17:07:41.276" starttime="20170903 17:07:41.275"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas_history</arg>
</arguments>
<msg timestamp="20170903 17:07:41.277" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM datas_history; </msg>
<status status="PASS" endtime="20170903 17:07:41.277" starttime="20170903 17:07:41.276"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables</arg>
</arguments>
<msg timestamp="20170903 17:07:41.278" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM executables; </msg>
<status status="PASS" endtime="20170903 17:07:41.278" starttime="20170903 17:07:41.277"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables_history</arg>
</arguments>
<msg timestamp="20170903 17:07:41.278" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM executables_history; </msg>
<status status="PASS" endtime="20170903 17:07:41.279" starttime="20170903 17:07:41.278"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups</arg>
</arguments>
<msg timestamp="20170903 17:07:41.279" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM groups; </msg>
<status status="PASS" endtime="20170903 17:07:41.280" starttime="20170903 17:07:41.279"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups_history</arg>
</arguments>
<msg timestamp="20170903 17:07:41.280" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM groups_history; </msg>
<status status="PASS" endtime="20170903 17:07:41.281" starttime="20170903 17:07:41.280"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts</arg>
</arguments>
<msg timestamp="20170903 17:07:41.281" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM hosts; </msg>
<status status="PASS" endtime="20170903 17:07:41.282" starttime="20170903 17:07:41.281"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts_history</arg>
</arguments>
<msg timestamp="20170903 17:07:41.282" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM hosts_history; </msg>
<status status="PASS" endtime="20170903 17:07:41.283" starttime="20170903 17:07:41.282"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships</arg>
</arguments>
<msg timestamp="20170903 17:07:41.283" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM memberships; </msg>
<status status="PASS" endtime="20170903 17:07:41.283" starttime="20170903 17:07:41.283"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships_history</arg>
</arguments>
<msg timestamp="20170903 17:07:41.284" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM memberships_history; </msg>
<status status="PASS" endtime="20170903 17:07:41.284" starttime="20170903 17:07:41.284"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions</arg>
</arguments>
<msg timestamp="20170903 17:07:41.285" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sessions; </msg>
<status status="PASS" endtime="20170903 17:07:41.285" starttime="20170903 17:07:41.284"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions_history</arg>
</arguments>
<msg timestamp="20170903 17:07:41.285" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sessions_history; </msg>
<status status="PASS" endtime="20170903 17:07:41.286" starttime="20170903 17:07:41.285"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes</arg>
</arguments>
<msg timestamp="20170903 17:07:41.286" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedAppTypes; </msg>
<status status="PASS" endtime="20170903 17:07:41.287" starttime="20170903 17:07:41.286"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes_history</arg>
</arguments>
<msg timestamp="20170903 17:07:41.287" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedAppTypes_history; </msg>
<status status="PASS" endtime="20170903 17:07:41.288" starttime="20170903 17:07:41.287"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes</arg>
</arguments>
<msg timestamp="20170903 17:07:41.288" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedPackageTypes; </msg>
<status status="PASS" endtime="20170903 17:07:41.289" starttime="20170903 17:07:41.288"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes_history</arg>
</arguments>
<msg timestamp="20170903 17:07:41.289" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedPackageTypes_history; </msg>
<status status="PASS" endtime="20170903 17:07:41.290" starttime="20170903 17:07:41.289"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks</arg>
</arguments>
<msg timestamp="20170903 17:07:41.290" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM tasks; </msg>
<status status="PASS" endtime="20170903 17:07:41.291" starttime="20170903 17:07:41.290"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks_history</arg>
</arguments>
<msg timestamp="20170903 17:07:41.291" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM tasks_history; </msg>
<status status="PASS" endtime="20170903 17:07:41.292" starttime="20170903 17:07:41.291"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces</arg>
</arguments>
<msg timestamp="20170903 17:07:41.292" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM traces; </msg>
<status status="PASS" endtime="20170903 17:07:41.293" starttime="20170903 17:07:41.292"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces_history</arg>
</arguments>
<msg timestamp="20170903 17:07:41.293" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM traces_history; </msg>
<status status="PASS" endtime="20170903 17:07:41.294" starttime="20170903 17:07:41.293"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups</arg>
</arguments>
<msg timestamp="20170903 17:07:41.294" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM usergroups; </msg>
<status status="PASS" endtime="20170903 17:07:41.295" starttime="20170903 17:07:41.294"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups_history</arg>
</arguments>
<msg timestamp="20170903 17:07:41.296" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM usergroups_history; </msg>
<status status="PASS" endtime="20170903 17:07:41.296" starttime="20170903 17:07:41.295"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users_history</arg>
</arguments>
<msg timestamp="20170903 17:07:41.297" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM users_history; </msg>
<status status="PASS" endtime="20170903 17:07:41.297" starttime="20170903 17:07:41.296"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works</arg>
</arguments>
<msg timestamp="20170903 17:07:41.297" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM works; </msg>
<status status="PASS" endtime="20170903 17:07:41.298" starttime="20170903 17:07:41.297"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works_history</arg>
</arguments>
<msg timestamp="20170903 17:07:41.298" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM works_history; </msg>
<status status="PASS" endtime="20170903 17:07:41.299" starttime="20170903 17:07:41.298"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170903 17:07:41.300" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170903 17:07:41.300" starttime="20170903 17:07:41.300"></status>
</kw>
<status status="PASS" endtime="20170903 17:07:41.301" starttime="20170903 17:07:41.299"></status>
</kw>
<status status="PASS" endtime="20170903 17:07:41.301" starttime="20170903 17:07:41.270"></status>
</kw>
<status status="PASS" endtime="20170903 17:07:41.301" starttime="20170903 17:07:41.091"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>TODO</arg>
</arguments>
<msg timestamp="20170903 17:07:41.302" level="INFO">TODO</msg>
<status status="PASS" endtime="20170903 17:07:41.302" starttime="20170903 17:07:41.302"></status>
</kw>
<kw type="teardown" name="End XWtremWeb Command Test" library="XWCommon">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Nothing to do</arg>
</arguments>
<msg timestamp="20170903 17:07:41.304" level="INFO">Nothing to do</msg>
<status status="PASS" endtime="20170903 17:07:41.304" starttime="20170903 17:07:41.303"></status>
</kw>
<status status="PASS" endtime="20170903 17:07:41.304" starttime="20170903 17:07:41.303"></status>
</kw>
<tags>
<tag>CommandLine Tests</tag>
</tags>
<status status="PASS" endtime="20170903 17:07:41.305" critical="yes" starttime="20170903 17:07:41.090"></status>
</test>
<test id="s1-s4-t8" name="Test 5 Tester le matchmaking">
<kw type="setup" name="Begin XWtremWeb Command Test" library="XWCommon">
<kw name="Ping XWtremWeb Database" library="XWServer">
<kw name="Xtremweb Tables Must Exist" library="MySql">
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170903 17:07:41.320" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170903 17:07:41.322" starttime="20170903 17:07:41.319"></status>
</kw>
<status status="PASS" endtime="20170903 17:07:41.322" starttime="20170903 17:07:41.319"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>appTypes</arg>
</arguments>
<msg timestamp="20170903 17:07:41.323" level="INFO">Executing : Table Must Exist  |  appTypes </msg>
<msg timestamp="20170903 17:07:41.323" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='appTypes' </msg>
<status status="PASS" endtime="20170903 17:07:41.324" starttime="20170903 17:07:41.322"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps</arg>
</arguments>
<msg timestamp="20170903 17:07:41.325" level="INFO">Executing : Table Must Exist  |  apps </msg>
<msg timestamp="20170903 17:07:41.325" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='apps' </msg>
<status status="PASS" endtime="20170903 17:07:41.326" starttime="20170903 17:07:41.324"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps_history</arg>
</arguments>
<msg timestamp="20170903 17:07:41.326" level="INFO">Executing : Table Must Exist  |  apps_history </msg>
<msg timestamp="20170903 17:07:41.327" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='apps_history' </msg>
<status status="PASS" endtime="20170903 17:07:41.328" starttime="20170903 17:07:41.326"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>cpuTypes</arg>
</arguments>
<msg timestamp="20170903 17:07:41.328" level="INFO">Executing : Table Must Exist  |  cpuTypes </msg>
<msg timestamp="20170903 17:07:41.328" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='cpuTypes' </msg>
<status status="PASS" endtime="20170903 17:07:41.329" starttime="20170903 17:07:41.328"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>dataTypes</arg>
</arguments>
<msg timestamp="20170903 17:07:41.330" level="INFO">Executing : Table Must Exist  |  dataTypes </msg>
<msg timestamp="20170903 17:07:41.330" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='dataTypes' </msg>
<status status="PASS" endtime="20170903 17:07:41.331" starttime="20170903 17:07:41.329"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas</arg>
</arguments>
<msg timestamp="20170903 17:07:41.331" level="INFO">Executing : Table Must Exist  |  datas </msg>
<msg timestamp="20170903 17:07:41.331" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='datas' </msg>
<status status="PASS" endtime="20170903 17:07:41.333" starttime="20170903 17:07:41.331"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas_history</arg>
</arguments>
<msg timestamp="20170903 17:07:41.334" level="INFO">Executing : Table Must Exist  |  datas_history </msg>
<msg timestamp="20170903 17:07:41.334" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='datas_history' </msg>
<status status="PASS" endtime="20170903 17:07:41.335" starttime="20170903 17:07:41.334"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables</arg>
</arguments>
<msg timestamp="20170903 17:07:41.335" level="INFO">Executing : Table Must Exist  |  executables </msg>
<msg timestamp="20170903 17:07:41.336" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='executables' </msg>
<status status="PASS" endtime="20170903 17:07:41.338" starttime="20170903 17:07:41.335"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables_history</arg>
</arguments>
<msg timestamp="20170903 17:07:41.340" level="INFO">Executing : Table Must Exist  |  executables_history </msg>
<msg timestamp="20170903 17:07:41.340" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='executables_history' </msg>
<status status="PASS" endtime="20170903 17:07:41.343" starttime="20170903 17:07:41.339"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups</arg>
</arguments>
<msg timestamp="20170903 17:07:41.344" level="INFO">Executing : Table Must Exist  |  groups </msg>
<msg timestamp="20170903 17:07:41.345" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='groups' </msg>
<status status="PASS" endtime="20170903 17:07:41.346" starttime="20170903 17:07:41.343"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups_history</arg>
</arguments>
<msg timestamp="20170903 17:07:41.346" level="INFO">Executing : Table Must Exist  |  groups_history </msg>
<msg timestamp="20170903 17:07:41.347" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='groups_history' </msg>
<status status="PASS" endtime="20170903 17:07:41.348" starttime="20170903 17:07:41.346"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts</arg>
</arguments>
<msg timestamp="20170903 17:07:41.348" level="INFO">Executing : Table Must Exist  |  hosts </msg>
<msg timestamp="20170903 17:07:41.348" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='hosts' </msg>
<status status="PASS" endtime="20170903 17:07:41.350" starttime="20170903 17:07:41.348"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts_history</arg>
</arguments>
<msg timestamp="20170903 17:07:41.350" level="INFO">Executing : Table Must Exist  |  hosts_history </msg>
<msg timestamp="20170903 17:07:41.350" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='hosts_history' </msg>
<status status="PASS" endtime="20170903 17:07:41.351" starttime="20170903 17:07:41.350"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships</arg>
</arguments>
<msg timestamp="20170903 17:07:41.352" level="INFO">Executing : Table Must Exist  |  memberships </msg>
<msg timestamp="20170903 17:07:41.352" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='memberships' </msg>
<status status="PASS" endtime="20170903 17:07:41.353" starttime="20170903 17:07:41.352"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships_history</arg>
</arguments>
<msg timestamp="20170903 17:07:41.354" level="INFO">Executing : Table Must Exist  |  memberships_history </msg>
<msg timestamp="20170903 17:07:41.354" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='memberships_history' </msg>
<status status="PASS" endtime="20170903 17:07:41.355" starttime="20170903 17:07:41.353"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>oses</arg>
</arguments>
<msg timestamp="20170903 17:07:41.355" level="INFO">Executing : Table Must Exist  |  oses </msg>
<msg timestamp="20170903 17:07:41.356" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='oses' </msg>
<status status="PASS" endtime="20170903 17:07:41.357" starttime="20170903 17:07:41.355"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>packageTypes</arg>
</arguments>
<msg timestamp="20170903 17:07:41.358" level="INFO">Executing : Table Must Exist  |  packageTypes </msg>
<msg timestamp="20170903 17:07:41.358" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='packageTypes' </msg>
<status status="PASS" endtime="20170903 17:07:41.359" starttime="20170903 17:07:41.357"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions</arg>
</arguments>
<msg timestamp="20170903 17:07:41.360" level="INFO">Executing : Table Must Exist  |  sessions </msg>
<msg timestamp="20170903 17:07:41.360" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sessions' </msg>
<status status="PASS" endtime="20170903 17:07:41.364" starttime="20170903 17:07:41.359"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions_history</arg>
</arguments>
<msg timestamp="20170903 17:07:41.366" level="INFO">Executing : Table Must Exist  |  sessions_history </msg>
<msg timestamp="20170903 17:07:41.366" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sessions_history' </msg>
<status status="PASS" endtime="20170903 17:07:41.370" starttime="20170903 17:07:41.365"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes</arg>
</arguments>
<msg timestamp="20170903 17:07:41.370" level="INFO">Executing : Table Must Exist  |  sharedAppTypes </msg>
<msg timestamp="20170903 17:07:41.370" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedAppTypes' </msg>
<status status="PASS" endtime="20170903 17:07:41.371" starttime="20170903 17:07:41.370"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes_history</arg>
</arguments>
<msg timestamp="20170903 17:07:41.372" level="INFO">Executing : Table Must Exist  |  sharedAppTypes_history </msg>
<msg timestamp="20170903 17:07:41.372" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedAppTypes_history' </msg>
<status status="PASS" endtime="20170903 17:07:41.373" starttime="20170903 17:07:41.372"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes</arg>
</arguments>
<msg timestamp="20170903 17:07:41.373" level="INFO">Executing : Table Must Exist  |  sharedPackageTypes </msg>
<msg timestamp="20170903 17:07:41.373" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedPackageTypes' </msg>
<status status="PASS" endtime="20170903 17:07:41.375" starttime="20170903 17:07:41.373"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes_history</arg>
</arguments>
<msg timestamp="20170903 17:07:41.375" level="INFO">Executing : Table Must Exist  |  sharedPackageTypes_history </msg>
<msg timestamp="20170903 17:07:41.375" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedPackageTypes_history' </msg>
<status status="PASS" endtime="20170903 17:07:41.376" starttime="20170903 17:07:41.375"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>statuses</arg>
</arguments>
<msg timestamp="20170903 17:07:41.377" level="INFO">Executing : Table Must Exist  |  statuses </msg>
<msg timestamp="20170903 17:07:41.377" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='statuses' </msg>
<status status="PASS" endtime="20170903 17:07:41.378" starttime="20170903 17:07:41.376"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks</arg>
</arguments>
<msg timestamp="20170903 17:07:41.379" level="INFO">Executing : Table Must Exist  |  tasks </msg>
<msg timestamp="20170903 17:07:41.379" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='tasks' </msg>
<status status="PASS" endtime="20170903 17:07:41.380" starttime="20170903 17:07:41.378"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks_history</arg>
</arguments>
<msg timestamp="20170903 17:07:41.380" level="INFO">Executing : Table Must Exist  |  tasks_history </msg>
<msg timestamp="20170903 17:07:41.380" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='tasks_history' </msg>
<status status="PASS" endtime="20170903 17:07:41.381" starttime="20170903 17:07:41.380"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces</arg>
</arguments>
<msg timestamp="20170903 17:07:41.382" level="INFO">Executing : Table Must Exist  |  traces </msg>
<msg timestamp="20170903 17:07:41.382" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='traces' </msg>
<status status="PASS" endtime="20170903 17:07:41.383" starttime="20170903 17:07:41.382"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces_history</arg>
</arguments>
<msg timestamp="20170903 17:07:41.383" level="INFO">Executing : Table Must Exist  |  traces_history </msg>
<msg timestamp="20170903 17:07:41.383" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='traces_history' </msg>
<status status="PASS" endtime="20170903 17:07:41.385" starttime="20170903 17:07:41.383"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>userRights</arg>
</arguments>
<msg timestamp="20170903 17:07:41.386" level="INFO">Executing : Table Must Exist  |  userRights </msg>
<msg timestamp="20170903 17:07:41.386" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='userRights' </msg>
<status status="PASS" endtime="20170903 17:07:41.389" starttime="20170903 17:07:41.385"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups</arg>
</arguments>
<msg timestamp="20170903 17:07:41.393" level="INFO">Executing : Table Must Exist  |  usergroups </msg>
<msg timestamp="20170903 17:07:41.393" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='usergroups' </msg>
<status status="PASS" endtime="20170903 17:07:41.395" starttime="20170903 17:07:41.390"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups_history</arg>
</arguments>
<msg timestamp="20170903 17:07:41.395" level="INFO">Executing : Table Must Exist  |  usergroups_history </msg>
<msg timestamp="20170903 17:07:41.396" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='usergroups_history' </msg>
<status status="PASS" endtime="20170903 17:07:41.397" starttime="20170903 17:07:41.395"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users</arg>
</arguments>
<msg timestamp="20170903 17:07:41.398" level="INFO">Executing : Table Must Exist  |  users </msg>
<msg timestamp="20170903 17:07:41.398" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='users' </msg>
<status status="PASS" endtime="20170903 17:07:41.399" starttime="20170903 17:07:41.398"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users_history</arg>
</arguments>
<msg timestamp="20170903 17:07:41.400" level="INFO">Executing : Table Must Exist  |  users_history </msg>
<msg timestamp="20170903 17:07:41.400" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='users_history' </msg>
<status status="PASS" endtime="20170903 17:07:41.402" starttime="20170903 17:07:41.399"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>version</arg>
</arguments>
<msg timestamp="20170903 17:07:41.402" level="INFO">Executing : Table Must Exist  |  version </msg>
<msg timestamp="20170903 17:07:41.402" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='version' </msg>
<status status="PASS" endtime="20170903 17:07:41.403" starttime="20170903 17:07:41.402"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>versions</arg>
</arguments>
<msg timestamp="20170903 17:07:41.404" level="INFO">Executing : Table Must Exist  |  versions </msg>
<msg timestamp="20170903 17:07:41.404" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='versions' </msg>
<status status="PASS" endtime="20170903 17:07:41.405" starttime="20170903 17:07:41.404"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps</arg>
</arguments>
<msg timestamp="20170903 17:07:41.406" level="INFO">Executing : Table Must Exist  |  view_apps </msg>
<msg timestamp="20170903 17:07:41.406" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps' </msg>
<status status="PASS" endtime="20170903 17:07:41.408" starttime="20170903 17:07:41.406"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps_for_offering</arg>
</arguments>
<msg timestamp="20170903 17:07:41.408" level="INFO">Executing : Table Must Exist  |  view_apps_for_offering </msg>
<msg timestamp="20170903 17:07:41.408" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps_for_offering' </msg>
<status status="PASS" endtime="20170903 17:07:41.410" starttime="20170903 17:07:41.408"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps_for_offering_with_file_sizes</arg>
</arguments>
<msg timestamp="20170903 17:07:41.410" level="INFO">Executing : Table Must Exist  |  view_apps_for_offering_with_file_sizes </msg>
<msg timestamp="20170903 17:07:41.410" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps_for_offering_with_file_sizes' </msg>
<status status="PASS" endtime="20170903 17:07:41.412" starttime="20170903 17:07:41.410"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_datas</arg>
</arguments>
<msg timestamp="20170903 17:07:41.412" level="INFO">Executing : Table Must Exist  |  view_datas </msg>
<msg timestamp="20170903 17:07:41.412" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_datas' </msg>
<status status="PASS" endtime="20170903 17:07:41.414" starttime="20170903 17:07:41.412"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_executables</arg>
</arguments>
<msg timestamp="20170903 17:07:41.415" level="INFO">Executing : Table Must Exist  |  view_executables </msg>
<msg timestamp="20170903 17:07:41.415" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_executables' </msg>
<status status="PASS" endtime="20170903 17:07:41.419" starttime="20170903 17:07:41.414"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_groups</arg>
</arguments>
<msg timestamp="20170903 17:07:41.420" level="INFO">Executing : Table Must Exist  |  view_groups </msg>
<msg timestamp="20170903 17:07:41.420" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_groups' </msg>
<status status="PASS" endtime="20170903 17:07:41.421" starttime="20170903 17:07:41.420"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts</arg>
</arguments>
<msg timestamp="20170903 17:07:41.422" level="INFO">Executing : Table Must Exist  |  view_hosts </msg>
<msg timestamp="20170903 17:07:41.422" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts' </msg>
<status status="PASS" endtime="20170903 17:07:41.425" starttime="20170903 17:07:41.422"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_deployable</arg>
</arguments>
<msg timestamp="20170903 17:07:41.425" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_deployable </msg>
<msg timestamp="20170903 17:07:41.425" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_deployable' </msg>
<status status="PASS" endtime="20170903 17:07:41.429" starttime="20170903 17:07:41.425"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_deployable_and_shared</arg>
</arguments>
<msg timestamp="20170903 17:07:41.429" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_deployable_and_shared </msg>
<msg timestamp="20170903 17:07:41.429" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_deployable_and_shared' </msg>
<status status="PASS" endtime="20170903 17:07:41.432" starttime="20170903 17:07:41.429"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_shared</arg>
</arguments>
<msg timestamp="20170903 17:07:41.433" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_shared </msg>
<msg timestamp="20170903 17:07:41.433" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_shared' </msg>
<status status="PASS" endtime="20170903 17:07:41.434" starttime="20170903 17:07:41.432"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_sessions</arg>
</arguments>
<msg timestamp="20170903 17:07:41.434" level="INFO">Executing : Table Must Exist  |  view_sessions </msg>
<msg timestamp="20170903 17:07:41.435" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_sessions' </msg>
<status status="PASS" endtime="20170903 17:07:41.439" starttime="20170903 17:07:41.434"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_tasks</arg>
</arguments>
<msg timestamp="20170903 17:07:41.439" level="INFO">Executing : Table Must Exist  |  view_tasks </msg>
<msg timestamp="20170903 17:07:41.439" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_tasks' </msg>
<status status="PASS" endtime="20170903 17:07:41.441" starttime="20170903 17:07:41.439"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_traces</arg>
</arguments>
<msg timestamp="20170903 17:07:41.441" level="INFO">Executing : Table Must Exist  |  view_traces </msg>
<msg timestamp="20170903 17:07:41.441" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_traces' </msg>
<status status="PASS" endtime="20170903 17:07:41.443" starttime="20170903 17:07:41.441"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_usergroups</arg>
</arguments>
<msg timestamp="20170903 17:07:41.443" level="INFO">Executing : Table Must Exist  |  view_usergroups </msg>
<msg timestamp="20170903 17:07:41.443" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_usergroups' </msg>
<status status="PASS" endtime="20170903 17:07:41.445" starttime="20170903 17:07:41.443"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users</arg>
</arguments>
<msg timestamp="20170903 17:07:41.445" level="INFO">Executing : Table Must Exist  |  view_users </msg>
<msg timestamp="20170903 17:07:41.445" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users' </msg>
<status status="PASS" endtime="20170903 17:07:41.447" starttime="20170903 17:07:41.445"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_apps</arg>
</arguments>
<msg timestamp="20170903 17:07:41.447" level="INFO">Executing : Table Must Exist  |  view_users_apps </msg>
<msg timestamp="20170903 17:07:41.447" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_apps' </msg>
<status status="PASS" endtime="20170903 17:07:41.449" starttime="20170903 17:07:41.447"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_datas</arg>
</arguments>
<msg timestamp="20170903 17:07:41.449" level="INFO">Executing : Table Must Exist  |  view_users_datas </msg>
<msg timestamp="20170903 17:07:41.449" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_datas' </msg>
<status status="PASS" endtime="20170903 17:07:41.451" starttime="20170903 17:07:41.449"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_groups</arg>
</arguments>
<msg timestamp="20170903 17:07:41.451" level="INFO">Executing : Table Must Exist  |  view_users_groups </msg>
<msg timestamp="20170903 17:07:41.451" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_groups' </msg>
<status status="PASS" endtime="20170903 17:07:41.453" starttime="20170903 17:07:41.451"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_hosts</arg>
</arguments>
<msg timestamp="20170903 17:07:41.453" level="INFO">Executing : Table Must Exist  |  view_users_hosts </msg>
<msg timestamp="20170903 17:07:41.454" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_hosts' </msg>
<status status="PASS" endtime="20170903 17:07:41.455" starttime="20170903 17:07:41.453"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_sessions</arg>
</arguments>
<msg timestamp="20170903 17:07:41.455" level="INFO">Executing : Table Must Exist  |  view_users_sessions </msg>
<msg timestamp="20170903 17:07:41.455" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_sessions' </msg>
<status status="PASS" endtime="20170903 17:07:41.456" starttime="20170903 17:07:41.455"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_tasks</arg>
</arguments>
<msg timestamp="20170903 17:07:41.456" level="INFO">Executing : Table Must Exist  |  view_users_tasks </msg>
<msg timestamp="20170903 17:07:41.457" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_tasks' </msg>
<status status="PASS" endtime="20170903 17:07:41.458" starttime="20170903 17:07:41.456"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_traces</arg>
</arguments>
<msg timestamp="20170903 17:07:41.459" level="INFO">Executing : Table Must Exist  |  view_users_traces </msg>
<msg timestamp="20170903 17:07:41.459" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_traces' </msg>
<status status="PASS" endtime="20170903 17:07:41.460" starttime="20170903 17:07:41.458"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_usergroups</arg>
</arguments>
<msg timestamp="20170903 17:07:41.460" level="INFO">Executing : Table Must Exist  |  view_users_usergroups </msg>
<msg timestamp="20170903 17:07:41.460" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_usergroups' </msg>
<status status="PASS" endtime="20170903 17:07:41.462" starttime="20170903 17:07:41.460"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_users</arg>
</arguments>
<msg timestamp="20170903 17:07:41.462" level="INFO">Executing : Table Must Exist  |  view_users_users </msg>
<msg timestamp="20170903 17:07:41.462" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_users' </msg>
<status status="PASS" endtime="20170903 17:07:41.464" starttime="20170903 17:07:41.462"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_works</arg>
</arguments>
<msg timestamp="20170903 17:07:41.464" level="INFO">Executing : Table Must Exist  |  view_users_works </msg>
<msg timestamp="20170903 17:07:41.464" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_works' </msg>
<status status="PASS" endtime="20170903 17:07:41.467" starttime="20170903 17:07:41.464"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works</arg>
</arguments>
<msg timestamp="20170903 17:07:41.467" level="INFO">Executing : Table Must Exist  |  view_works </msg>
<msg timestamp="20170903 17:07:41.467" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works' </msg>
<status status="PASS" endtime="20170903 17:07:41.469" starttime="20170903 17:07:41.467"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works_for_billing</arg>
</arguments>
<msg timestamp="20170903 17:07:41.470" level="INFO">Executing : Table Must Exist  |  view_works_for_billing </msg>
<msg timestamp="20170903 17:07:41.470" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works_for_billing' </msg>
<status status="PASS" endtime="20170903 17:07:41.471" starttime="20170903 17:07:41.469"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works_for_billing_with_file_sizes</arg>
</arguments>
<msg timestamp="20170903 17:07:41.472" level="INFO">Executing : Table Must Exist  |  view_works_for_billing_with_file_sizes </msg>
<msg timestamp="20170903 17:07:41.472" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works_for_billing_with_file_sizes' </msg>
<status status="PASS" endtime="20170903 17:07:41.473" starttime="20170903 17:07:41.471"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works</arg>
</arguments>
<msg timestamp="20170903 17:07:41.474" level="INFO">Executing : Table Must Exist  |  works </msg>
<msg timestamp="20170903 17:07:41.474" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='works' </msg>
<status status="PASS" endtime="20170903 17:07:41.475" starttime="20170903 17:07:41.473"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works_history</arg>
</arguments>
<msg timestamp="20170903 17:07:41.475" level="INFO">Executing : Table Must Exist  |  works_history </msg>
<msg timestamp="20170903 17:07:41.475" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='works_history' </msg>
<status status="PASS" endtime="20170903 17:07:41.477" starttime="20170903 17:07:41.475"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170903 17:07:41.478" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170903 17:07:41.478" starttime="20170903 17:07:41.477"></status>
</kw>
<status status="PASS" endtime="20170903 17:07:41.478" starttime="20170903 17:07:41.477"></status>
</kw>
<status status="PASS" endtime="20170903 17:07:41.478" starttime="20170903 17:07:41.319"></status>
</kw>
<status status="PASS" endtime="20170903 17:07:41.478" starttime="20170903 17:07:41.318"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>TODO ping XWtremWeb server up</arg>
</arguments>
<msg timestamp="20170903 17:07:41.479" level="INFO">TODO ping XWtremWeb server up</msg>
<status status="PASS" endtime="20170903 17:07:41.479" starttime="20170903 17:07:41.479"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>TODO ping XWtremWeb worker up before one test</arg>
</arguments>
<msg timestamp="20170903 17:07:41.479" level="INFO">TODO ping XWtremWeb worker up before one test</msg>
<status status="PASS" endtime="20170903 17:07:41.479" starttime="20170903 17:07:41.479"></status>
</kw>
<kw name="Delete Fonctionnal Xtremweb Tables" library="MySql">
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170903 17:07:41.481" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170903 17:07:41.482" starttime="20170903 17:07:41.480"></status>
</kw>
<status status="PASS" endtime="20170903 17:07:41.482" starttime="20170903 17:07:41.480"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps</arg>
</arguments>
<msg timestamp="20170903 17:07:41.483" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM apps; </msg>
<status status="PASS" endtime="20170903 17:07:41.483" starttime="20170903 17:07:41.482"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps_history</arg>
</arguments>
<msg timestamp="20170903 17:07:41.484" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM apps_history; </msg>
<status status="PASS" endtime="20170903 17:07:41.485" starttime="20170903 17:07:41.484"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas</arg>
</arguments>
<msg timestamp="20170903 17:07:41.485" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM datas; </msg>
<status status="PASS" endtime="20170903 17:07:41.486" starttime="20170903 17:07:41.485"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas_history</arg>
</arguments>
<msg timestamp="20170903 17:07:41.486" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM datas_history; </msg>
<status status="PASS" endtime="20170903 17:07:41.487" starttime="20170903 17:07:41.486"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables</arg>
</arguments>
<msg timestamp="20170903 17:07:41.487" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM executables; </msg>
<status status="PASS" endtime="20170903 17:07:41.488" starttime="20170903 17:07:41.487"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables_history</arg>
</arguments>
<msg timestamp="20170903 17:07:41.489" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM executables_history; </msg>
<status status="PASS" endtime="20170903 17:07:41.490" starttime="20170903 17:07:41.488"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups</arg>
</arguments>
<msg timestamp="20170903 17:07:41.491" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM groups; </msg>
<status status="PASS" endtime="20170903 17:07:41.492" starttime="20170903 17:07:41.491"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups_history</arg>
</arguments>
<msg timestamp="20170903 17:07:41.493" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM groups_history; </msg>
<status status="PASS" endtime="20170903 17:07:41.493" starttime="20170903 17:07:41.492"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts</arg>
</arguments>
<msg timestamp="20170903 17:07:41.494" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM hosts; </msg>
<status status="PASS" endtime="20170903 17:07:41.494" starttime="20170903 17:07:41.494"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts_history</arg>
</arguments>
<msg timestamp="20170903 17:07:41.495" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM hosts_history; </msg>
<status status="PASS" endtime="20170903 17:07:41.495" starttime="20170903 17:07:41.495"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships</arg>
</arguments>
<msg timestamp="20170903 17:07:41.496" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM memberships; </msg>
<status status="PASS" endtime="20170903 17:07:41.497" starttime="20170903 17:07:41.496"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships_history</arg>
</arguments>
<msg timestamp="20170903 17:07:41.497" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM memberships_history; </msg>
<status status="PASS" endtime="20170903 17:07:41.498" starttime="20170903 17:07:41.497"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions</arg>
</arguments>
<msg timestamp="20170903 17:07:41.498" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sessions; </msg>
<status status="PASS" endtime="20170903 17:07:41.499" starttime="20170903 17:07:41.498"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions_history</arg>
</arguments>
<msg timestamp="20170903 17:07:41.499" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sessions_history; </msg>
<status status="PASS" endtime="20170903 17:07:41.500" starttime="20170903 17:07:41.499"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes</arg>
</arguments>
<msg timestamp="20170903 17:07:41.500" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedAppTypes; </msg>
<status status="PASS" endtime="20170903 17:07:41.500" starttime="20170903 17:07:41.500"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes_history</arg>
</arguments>
<msg timestamp="20170903 17:07:41.501" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedAppTypes_history; </msg>
<status status="PASS" endtime="20170903 17:07:41.501" starttime="20170903 17:07:41.501"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes</arg>
</arguments>
<msg timestamp="20170903 17:07:41.502" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedPackageTypes; </msg>
<status status="PASS" endtime="20170903 17:07:41.502" starttime="20170903 17:07:41.501"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes_history</arg>
</arguments>
<msg timestamp="20170903 17:07:41.503" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedPackageTypes_history; </msg>
<status status="PASS" endtime="20170903 17:07:41.503" starttime="20170903 17:07:41.502"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks</arg>
</arguments>
<msg timestamp="20170903 17:07:41.504" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM tasks; </msg>
<status status="PASS" endtime="20170903 17:07:41.505" starttime="20170903 17:07:41.504"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks_history</arg>
</arguments>
<msg timestamp="20170903 17:07:41.505" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM tasks_history; </msg>
<status status="PASS" endtime="20170903 17:07:41.507" starttime="20170903 17:07:41.505"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces</arg>
</arguments>
<msg timestamp="20170903 17:07:41.507" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM traces; </msg>
<status status="PASS" endtime="20170903 17:07:41.508" starttime="20170903 17:07:41.507"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces_history</arg>
</arguments>
<msg timestamp="20170903 17:07:41.508" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM traces_history; </msg>
<status status="PASS" endtime="20170903 17:07:41.509" starttime="20170903 17:07:41.508"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups</arg>
</arguments>
<msg timestamp="20170903 17:07:41.509" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM usergroups; </msg>
<status status="PASS" endtime="20170903 17:07:41.510" starttime="20170903 17:07:41.509"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups_history</arg>
</arguments>
<msg timestamp="20170903 17:07:41.511" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM usergroups_history; </msg>
<status status="PASS" endtime="20170903 17:07:41.511" starttime="20170903 17:07:41.510"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users_history</arg>
</arguments>
<msg timestamp="20170903 17:07:41.512" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM users_history; </msg>
<status status="PASS" endtime="20170903 17:07:41.512" starttime="20170903 17:07:41.511"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works</arg>
</arguments>
<msg timestamp="20170903 17:07:41.513" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM works; </msg>
<status status="PASS" endtime="20170903 17:07:41.513" starttime="20170903 17:07:41.512"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works_history</arg>
</arguments>
<msg timestamp="20170903 17:07:41.514" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM works_history; </msg>
<status status="PASS" endtime="20170903 17:07:41.514" starttime="20170903 17:07:41.513"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170903 17:07:41.515" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170903 17:07:41.515" starttime="20170903 17:07:41.515"></status>
</kw>
<status status="PASS" endtime="20170903 17:07:41.516" starttime="20170903 17:07:41.514"></status>
</kw>
<status status="PASS" endtime="20170903 17:07:41.516" starttime="20170903 17:07:41.479"></status>
</kw>
<status status="PASS" endtime="20170903 17:07:41.516" starttime="20170903 17:07:41.316"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>TODO</arg>
</arguments>
<msg timestamp="20170903 17:07:41.517" level="INFO">TODO</msg>
<status status="PASS" endtime="20170903 17:07:41.518" starttime="20170903 17:07:41.517"></status>
</kw>
<kw type="teardown" name="End XWtremWeb Command Test" library="XWCommon">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Nothing to do</arg>
</arguments>
<msg timestamp="20170903 17:07:41.520" level="INFO">Nothing to do</msg>
<status status="PASS" endtime="20170903 17:07:41.520" starttime="20170903 17:07:41.519"></status>
</kw>
<status status="PASS" endtime="20170903 17:07:41.520" starttime="20170903 17:07:41.519"></status>
</kw>
<doc>Ces test doivent prouver que le scheduler fonctionne correctement.Pour ce faire, il faut insérer une application avec un binaire qui ne correspond à aucun worker du déploiement. Pour ce test nous pouvons utiliser n’importe quelle application avec n’importe quel binaire. Il convient cependant de s’assurer qu’on enregistre l’application avec un type de binaire inutilisable pour le déploiement présenté dans l’introduction.</doc>
<tags>
<tag>CommandLine Tests</tag>
</tags>
<status status="PASS" endtime="20170903 17:07:41.521" critical="yes" starttime="20170903 17:07:41.311"></status>
</test>
<test id="s1-s4-t9" name="Test 6 Récupérer les résultats un job">
<kw type="setup" name="Begin XWtremWeb Command Test" library="XWCommon">
<kw name="Ping XWtremWeb Database" library="XWServer">
<kw name="Xtremweb Tables Must Exist" library="MySql">
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170903 17:07:41.533" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170903 17:07:41.534" starttime="20170903 17:07:41.532"></status>
</kw>
<status status="PASS" endtime="20170903 17:07:41.534" starttime="20170903 17:07:41.532"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>appTypes</arg>
</arguments>
<msg timestamp="20170903 17:07:41.535" level="INFO">Executing : Table Must Exist  |  appTypes </msg>
<msg timestamp="20170903 17:07:41.535" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='appTypes' </msg>
<status status="PASS" endtime="20170903 17:07:41.536" starttime="20170903 17:07:41.535"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps</arg>
</arguments>
<msg timestamp="20170903 17:07:41.537" level="INFO">Executing : Table Must Exist  |  apps </msg>
<msg timestamp="20170903 17:07:41.537" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='apps' </msg>
<status status="PASS" endtime="20170903 17:07:41.538" starttime="20170903 17:07:41.537"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps_history</arg>
</arguments>
<msg timestamp="20170903 17:07:41.539" level="INFO">Executing : Table Must Exist  |  apps_history </msg>
<msg timestamp="20170903 17:07:41.539" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='apps_history' </msg>
<status status="PASS" endtime="20170903 17:07:41.540" starttime="20170903 17:07:41.538"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>cpuTypes</arg>
</arguments>
<msg timestamp="20170903 17:07:41.540" level="INFO">Executing : Table Must Exist  |  cpuTypes </msg>
<msg timestamp="20170903 17:07:41.540" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='cpuTypes' </msg>
<status status="PASS" endtime="20170903 17:07:41.542" starttime="20170903 17:07:41.540"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>dataTypes</arg>
</arguments>
<msg timestamp="20170903 17:07:41.542" level="INFO">Executing : Table Must Exist  |  dataTypes </msg>
<msg timestamp="20170903 17:07:41.542" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='dataTypes' </msg>
<status status="PASS" endtime="20170903 17:07:41.544" starttime="20170903 17:07:41.542"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas</arg>
</arguments>
<msg timestamp="20170903 17:07:41.545" level="INFO">Executing : Table Must Exist  |  datas </msg>
<msg timestamp="20170903 17:07:41.545" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='datas' </msg>
<status status="PASS" endtime="20170903 17:07:41.547" starttime="20170903 17:07:41.545"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas_history</arg>
</arguments>
<msg timestamp="20170903 17:07:41.549" level="INFO">Executing : Table Must Exist  |  datas_history </msg>
<msg timestamp="20170903 17:07:41.549" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='datas_history' </msg>
<status status="PASS" endtime="20170903 17:07:41.551" starttime="20170903 17:07:41.548"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables</arg>
</arguments>
<msg timestamp="20170903 17:07:41.553" level="INFO">Executing : Table Must Exist  |  executables </msg>
<msg timestamp="20170903 17:07:41.553" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='executables' </msg>
<status status="PASS" endtime="20170903 17:07:41.556" starttime="20170903 17:07:41.553"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables_history</arg>
</arguments>
<msg timestamp="20170903 17:07:41.557" level="INFO">Executing : Table Must Exist  |  executables_history </msg>
<msg timestamp="20170903 17:07:41.557" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='executables_history' </msg>
<status status="PASS" endtime="20170903 17:07:41.559" starttime="20170903 17:07:41.556"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups</arg>
</arguments>
<msg timestamp="20170903 17:07:41.564" level="INFO">Executing : Table Must Exist  |  groups </msg>
<msg timestamp="20170903 17:07:41.564" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='groups' </msg>
<status status="PASS" endtime="20170903 17:07:41.567" starttime="20170903 17:07:41.559"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups_history</arg>
</arguments>
<msg timestamp="20170903 17:07:41.568" level="INFO">Executing : Table Must Exist  |  groups_history </msg>
<msg timestamp="20170903 17:07:41.568" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='groups_history' </msg>
<status status="PASS" endtime="20170903 17:07:41.571" starttime="20170903 17:07:41.567"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts</arg>
</arguments>
<msg timestamp="20170903 17:07:41.572" level="INFO">Executing : Table Must Exist  |  hosts </msg>
<msg timestamp="20170903 17:07:41.573" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='hosts' </msg>
<status status="PASS" endtime="20170903 17:07:41.575" starttime="20170903 17:07:41.572"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts_history</arg>
</arguments>
<msg timestamp="20170903 17:07:41.576" level="INFO">Executing : Table Must Exist  |  hosts_history </msg>
<msg timestamp="20170903 17:07:41.577" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='hosts_history' </msg>
<status status="PASS" endtime="20170903 17:07:41.579" starttime="20170903 17:07:41.576"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships</arg>
</arguments>
<msg timestamp="20170903 17:07:41.581" level="INFO">Executing : Table Must Exist  |  memberships </msg>
<msg timestamp="20170903 17:07:41.581" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='memberships' </msg>
<status status="PASS" endtime="20170903 17:07:41.583" starttime="20170903 17:07:41.581"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships_history</arg>
</arguments>
<msg timestamp="20170903 17:07:41.583" level="INFO">Executing : Table Must Exist  |  memberships_history </msg>
<msg timestamp="20170903 17:07:41.584" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='memberships_history' </msg>
<status status="PASS" endtime="20170903 17:07:41.585" starttime="20170903 17:07:41.583"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>oses</arg>
</arguments>
<msg timestamp="20170903 17:07:41.586" level="INFO">Executing : Table Must Exist  |  oses </msg>
<msg timestamp="20170903 17:07:41.586" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='oses' </msg>
<status status="PASS" endtime="20170903 17:07:41.589" starttime="20170903 17:07:41.585"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>packageTypes</arg>
</arguments>
<msg timestamp="20170903 17:07:41.590" level="INFO">Executing : Table Must Exist  |  packageTypes </msg>
<msg timestamp="20170903 17:07:41.590" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='packageTypes' </msg>
<status status="PASS" endtime="20170903 17:07:41.594" starttime="20170903 17:07:41.589"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions</arg>
</arguments>
<msg timestamp="20170903 17:07:41.595" level="INFO">Executing : Table Must Exist  |  sessions </msg>
<msg timestamp="20170903 17:07:41.596" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sessions' </msg>
<status status="PASS" endtime="20170903 17:07:41.599" starttime="20170903 17:07:41.595"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions_history</arg>
</arguments>
<msg timestamp="20170903 17:07:41.600" level="INFO">Executing : Table Must Exist  |  sessions_history </msg>
<msg timestamp="20170903 17:07:41.600" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sessions_history' </msg>
<status status="PASS" endtime="20170903 17:07:41.602" starttime="20170903 17:07:41.599"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes</arg>
</arguments>
<msg timestamp="20170903 17:07:41.603" level="INFO">Executing : Table Must Exist  |  sharedAppTypes </msg>
<msg timestamp="20170903 17:07:41.603" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedAppTypes' </msg>
<status status="PASS" endtime="20170903 17:07:41.606" starttime="20170903 17:07:41.602"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes_history</arg>
</arguments>
<msg timestamp="20170903 17:07:41.607" level="INFO">Executing : Table Must Exist  |  sharedAppTypes_history </msg>
<msg timestamp="20170903 17:07:41.607" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedAppTypes_history' </msg>
<status status="PASS" endtime="20170903 17:07:41.610" starttime="20170903 17:07:41.606"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes</arg>
</arguments>
<msg timestamp="20170903 17:07:41.611" level="INFO">Executing : Table Must Exist  |  sharedPackageTypes </msg>
<msg timestamp="20170903 17:07:41.611" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedPackageTypes' </msg>
<status status="PASS" endtime="20170903 17:07:41.614" starttime="20170903 17:07:41.611"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes_history</arg>
</arguments>
<msg timestamp="20170903 17:07:41.615" level="INFO">Executing : Table Must Exist  |  sharedPackageTypes_history </msg>
<msg timestamp="20170903 17:07:41.615" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedPackageTypes_history' </msg>
<status status="PASS" endtime="20170903 17:07:41.617" starttime="20170903 17:07:41.614"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>statuses</arg>
</arguments>
<msg timestamp="20170903 17:07:41.619" level="INFO">Executing : Table Must Exist  |  statuses </msg>
<msg timestamp="20170903 17:07:41.619" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='statuses' </msg>
<status status="PASS" endtime="20170903 17:07:41.621" starttime="20170903 17:07:41.618"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks</arg>
</arguments>
<msg timestamp="20170903 17:07:41.622" level="INFO">Executing : Table Must Exist  |  tasks </msg>
<msg timestamp="20170903 17:07:41.623" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='tasks' </msg>
<status status="PASS" endtime="20170903 17:07:41.626" starttime="20170903 17:07:41.622"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks_history</arg>
</arguments>
<msg timestamp="20170903 17:07:41.627" level="INFO">Executing : Table Must Exist  |  tasks_history </msg>
<msg timestamp="20170903 17:07:41.627" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='tasks_history' </msg>
<status status="PASS" endtime="20170903 17:07:41.629" starttime="20170903 17:07:41.627"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces</arg>
</arguments>
<msg timestamp="20170903 17:07:41.630" level="INFO">Executing : Table Must Exist  |  traces </msg>
<msg timestamp="20170903 17:07:41.630" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='traces' </msg>
<status status="PASS" endtime="20170903 17:07:41.631" starttime="20170903 17:07:41.630"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces_history</arg>
</arguments>
<msg timestamp="20170903 17:07:41.632" level="INFO">Executing : Table Must Exist  |  traces_history </msg>
<msg timestamp="20170903 17:07:41.632" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='traces_history' </msg>
<status status="PASS" endtime="20170903 17:07:41.633" starttime="20170903 17:07:41.631"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>userRights</arg>
</arguments>
<msg timestamp="20170903 17:07:41.633" level="INFO">Executing : Table Must Exist  |  userRights </msg>
<msg timestamp="20170903 17:07:41.633" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='userRights' </msg>
<status status="PASS" endtime="20170903 17:07:41.635" starttime="20170903 17:07:41.633"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups</arg>
</arguments>
<msg timestamp="20170903 17:07:41.635" level="INFO">Executing : Table Must Exist  |  usergroups </msg>
<msg timestamp="20170903 17:07:41.635" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='usergroups' </msg>
<status status="PASS" endtime="20170903 17:07:41.636" starttime="20170903 17:07:41.635"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups_history</arg>
</arguments>
<msg timestamp="20170903 17:07:41.637" level="INFO">Executing : Table Must Exist  |  usergroups_history </msg>
<msg timestamp="20170903 17:07:41.637" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='usergroups_history' </msg>
<status status="PASS" endtime="20170903 17:07:41.638" starttime="20170903 17:07:41.636"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users</arg>
</arguments>
<msg timestamp="20170903 17:07:41.638" level="INFO">Executing : Table Must Exist  |  users </msg>
<msg timestamp="20170903 17:07:41.638" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='users' </msg>
<status status="PASS" endtime="20170903 17:07:41.639" starttime="20170903 17:07:41.638"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users_history</arg>
</arguments>
<msg timestamp="20170903 17:07:41.640" level="INFO">Executing : Table Must Exist  |  users_history </msg>
<msg timestamp="20170903 17:07:41.640" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='users_history' </msg>
<status status="PASS" endtime="20170903 17:07:41.641" starttime="20170903 17:07:41.639"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>version</arg>
</arguments>
<msg timestamp="20170903 17:07:41.641" level="INFO">Executing : Table Must Exist  |  version </msg>
<msg timestamp="20170903 17:07:41.641" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='version' </msg>
<status status="PASS" endtime="20170903 17:07:41.643" starttime="20170903 17:07:41.641"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>versions</arg>
</arguments>
<msg timestamp="20170903 17:07:41.643" level="INFO">Executing : Table Must Exist  |  versions </msg>
<msg timestamp="20170903 17:07:41.643" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='versions' </msg>
<status status="PASS" endtime="20170903 17:07:41.645" starttime="20170903 17:07:41.643"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps</arg>
</arguments>
<msg timestamp="20170903 17:07:41.645" level="INFO">Executing : Table Must Exist  |  view_apps </msg>
<msg timestamp="20170903 17:07:41.645" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps' </msg>
<status status="PASS" endtime="20170903 17:07:41.647" starttime="20170903 17:07:41.645"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps_for_offering</arg>
</arguments>
<msg timestamp="20170903 17:07:41.647" level="INFO">Executing : Table Must Exist  |  view_apps_for_offering </msg>
<msg timestamp="20170903 17:07:41.647" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps_for_offering' </msg>
<status status="PASS" endtime="20170903 17:07:41.649" starttime="20170903 17:07:41.647"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps_for_offering_with_file_sizes</arg>
</arguments>
<msg timestamp="20170903 17:07:41.649" level="INFO">Executing : Table Must Exist  |  view_apps_for_offering_with_file_sizes </msg>
<msg timestamp="20170903 17:07:41.649" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps_for_offering_with_file_sizes' </msg>
<status status="PASS" endtime="20170903 17:07:41.651" starttime="20170903 17:07:41.649"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_datas</arg>
</arguments>
<msg timestamp="20170903 17:07:41.651" level="INFO">Executing : Table Must Exist  |  view_datas </msg>
<msg timestamp="20170903 17:07:41.651" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_datas' </msg>
<status status="PASS" endtime="20170903 17:07:41.653" starttime="20170903 17:07:41.651"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_executables</arg>
</arguments>
<msg timestamp="20170903 17:07:41.654" level="INFO">Executing : Table Must Exist  |  view_executables </msg>
<msg timestamp="20170903 17:07:41.654" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_executables' </msg>
<status status="PASS" endtime="20170903 17:07:41.656" starttime="20170903 17:07:41.653"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_groups</arg>
</arguments>
<msg timestamp="20170903 17:07:41.656" level="INFO">Executing : Table Must Exist  |  view_groups </msg>
<msg timestamp="20170903 17:07:41.656" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_groups' </msg>
<status status="PASS" endtime="20170903 17:07:41.658" starttime="20170903 17:07:41.656"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts</arg>
</arguments>
<msg timestamp="20170903 17:07:41.658" level="INFO">Executing : Table Must Exist  |  view_hosts </msg>
<msg timestamp="20170903 17:07:41.658" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts' </msg>
<status status="PASS" endtime="20170903 17:07:41.660" starttime="20170903 17:07:41.658"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_deployable</arg>
</arguments>
<msg timestamp="20170903 17:07:41.661" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_deployable </msg>
<msg timestamp="20170903 17:07:41.661" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_deployable' </msg>
<status status="PASS" endtime="20170903 17:07:41.662" starttime="20170903 17:07:41.660"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_deployable_and_shared</arg>
</arguments>
<msg timestamp="20170903 17:07:41.663" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_deployable_and_shared </msg>
<msg timestamp="20170903 17:07:41.663" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_deployable_and_shared' </msg>
<status status="PASS" endtime="20170903 17:07:41.665" starttime="20170903 17:07:41.663"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_shared</arg>
</arguments>
<msg timestamp="20170903 17:07:41.665" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_shared </msg>
<msg timestamp="20170903 17:07:41.665" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_shared' </msg>
<status status="PASS" endtime="20170903 17:07:41.667" starttime="20170903 17:07:41.665"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_sessions</arg>
</arguments>
<msg timestamp="20170903 17:07:41.668" level="INFO">Executing : Table Must Exist  |  view_sessions </msg>
<msg timestamp="20170903 17:07:41.668" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_sessions' </msg>
<status status="PASS" endtime="20170903 17:07:41.669" starttime="20170903 17:07:41.667"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_tasks</arg>
</arguments>
<msg timestamp="20170903 17:07:41.669" level="INFO">Executing : Table Must Exist  |  view_tasks </msg>
<msg timestamp="20170903 17:07:41.669" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_tasks' </msg>
<status status="PASS" endtime="20170903 17:07:41.671" starttime="20170903 17:07:41.669"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_traces</arg>
</arguments>
<msg timestamp="20170903 17:07:41.671" level="INFO">Executing : Table Must Exist  |  view_traces </msg>
<msg timestamp="20170903 17:07:41.671" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_traces' </msg>
<status status="PASS" endtime="20170903 17:07:41.672" starttime="20170903 17:07:41.671"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_usergroups</arg>
</arguments>
<msg timestamp="20170903 17:07:41.673" level="INFO">Executing : Table Must Exist  |  view_usergroups </msg>
<msg timestamp="20170903 17:07:41.673" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_usergroups' </msg>
<status status="PASS" endtime="20170903 17:07:41.674" starttime="20170903 17:07:41.672"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users</arg>
</arguments>
<msg timestamp="20170903 17:07:41.674" level="INFO">Executing : Table Must Exist  |  view_users </msg>
<msg timestamp="20170903 17:07:41.674" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users' </msg>
<status status="PASS" endtime="20170903 17:07:41.676" starttime="20170903 17:07:41.674"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_apps</arg>
</arguments>
<msg timestamp="20170903 17:07:41.676" level="INFO">Executing : Table Must Exist  |  view_users_apps </msg>
<msg timestamp="20170903 17:07:41.676" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_apps' </msg>
<status status="PASS" endtime="20170903 17:07:41.678" starttime="20170903 17:07:41.676"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_datas</arg>
</arguments>
<msg timestamp="20170903 17:07:41.678" level="INFO">Executing : Table Must Exist  |  view_users_datas </msg>
<msg timestamp="20170903 17:07:41.678" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_datas' </msg>
<status status="PASS" endtime="20170903 17:07:41.680" starttime="20170903 17:07:41.678"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_groups</arg>
</arguments>
<msg timestamp="20170903 17:07:41.681" level="INFO">Executing : Table Must Exist  |  view_users_groups </msg>
<msg timestamp="20170903 17:07:41.681" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_groups' </msg>
<status status="PASS" endtime="20170903 17:07:41.682" starttime="20170903 17:07:41.681"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_hosts</arg>
</arguments>
<msg timestamp="20170903 17:07:41.683" level="INFO">Executing : Table Must Exist  |  view_users_hosts </msg>
<msg timestamp="20170903 17:07:41.683" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_hosts' </msg>
<status status="PASS" endtime="20170903 17:07:41.686" starttime="20170903 17:07:41.683"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_sessions</arg>
</arguments>
<msg timestamp="20170903 17:07:41.687" level="INFO">Executing : Table Must Exist  |  view_users_sessions </msg>
<msg timestamp="20170903 17:07:41.687" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_sessions' </msg>
<status status="PASS" endtime="20170903 17:07:41.688" starttime="20170903 17:07:41.686"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_tasks</arg>
</arguments>
<msg timestamp="20170903 17:07:41.689" level="INFO">Executing : Table Must Exist  |  view_users_tasks </msg>
<msg timestamp="20170903 17:07:41.689" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_tasks' </msg>
<status status="PASS" endtime="20170903 17:07:41.690" starttime="20170903 17:07:41.688"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_traces</arg>
</arguments>
<msg timestamp="20170903 17:07:41.691" level="INFO">Executing : Table Must Exist  |  view_users_traces </msg>
<msg timestamp="20170903 17:07:41.691" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_traces' </msg>
<status status="PASS" endtime="20170903 17:07:41.692" starttime="20170903 17:07:41.690"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_usergroups</arg>
</arguments>
<msg timestamp="20170903 17:07:41.693" level="INFO">Executing : Table Must Exist  |  view_users_usergroups </msg>
<msg timestamp="20170903 17:07:41.693" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_usergroups' </msg>
<status status="PASS" endtime="20170903 17:07:41.694" starttime="20170903 17:07:41.692"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_users</arg>
</arguments>
<msg timestamp="20170903 17:07:41.695" level="INFO">Executing : Table Must Exist  |  view_users_users </msg>
<msg timestamp="20170903 17:07:41.695" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_users' </msg>
<status status="PASS" endtime="20170903 17:07:41.697" starttime="20170903 17:07:41.695"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_works</arg>
</arguments>
<msg timestamp="20170903 17:07:41.697" level="INFO">Executing : Table Must Exist  |  view_users_works </msg>
<msg timestamp="20170903 17:07:41.698" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_works' </msg>
<status status="PASS" endtime="20170903 17:07:41.699" starttime="20170903 17:07:41.697"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works</arg>
</arguments>
<msg timestamp="20170903 17:07:41.700" level="INFO">Executing : Table Must Exist  |  view_works </msg>
<msg timestamp="20170903 17:07:41.700" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works' </msg>
<status status="PASS" endtime="20170903 17:07:41.701" starttime="20170903 17:07:41.699"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works_for_billing</arg>
</arguments>
<msg timestamp="20170903 17:07:41.702" level="INFO">Executing : Table Must Exist  |  view_works_for_billing </msg>
<msg timestamp="20170903 17:07:41.702" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works_for_billing' </msg>
<status status="PASS" endtime="20170903 17:07:41.703" starttime="20170903 17:07:41.701"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works_for_billing_with_file_sizes</arg>
</arguments>
<msg timestamp="20170903 17:07:41.704" level="INFO">Executing : Table Must Exist  |  view_works_for_billing_with_file_sizes </msg>
<msg timestamp="20170903 17:07:41.704" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works_for_billing_with_file_sizes' </msg>
<status status="PASS" endtime="20170903 17:07:41.705" starttime="20170903 17:07:41.703"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works</arg>
</arguments>
<msg timestamp="20170903 17:07:41.706" level="INFO">Executing : Table Must Exist  |  works </msg>
<msg timestamp="20170903 17:07:41.706" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='works' </msg>
<status status="PASS" endtime="20170903 17:07:41.708" starttime="20170903 17:07:41.705"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works_history</arg>
</arguments>
<msg timestamp="20170903 17:07:41.709" level="INFO">Executing : Table Must Exist  |  works_history </msg>
<msg timestamp="20170903 17:07:41.709" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='works_history' </msg>
<status status="PASS" endtime="20170903 17:07:41.711" starttime="20170903 17:07:41.709"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170903 17:07:41.713" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170903 17:07:41.713" starttime="20170903 17:07:41.712"></status>
</kw>
<status status="PASS" endtime="20170903 17:07:41.714" starttime="20170903 17:07:41.712"></status>
</kw>
<status status="PASS" endtime="20170903 17:07:41.714" starttime="20170903 17:07:41.531"></status>
</kw>
<status status="PASS" endtime="20170903 17:07:41.714" starttime="20170903 17:07:41.530"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>TODO ping XWtremWeb server up</arg>
</arguments>
<msg timestamp="20170903 17:07:41.715" level="INFO">TODO ping XWtremWeb server up</msg>
<status status="PASS" endtime="20170903 17:07:41.715" starttime="20170903 17:07:41.714"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>TODO ping XWtremWeb worker up before one test</arg>
</arguments>
<msg timestamp="20170903 17:07:41.716" level="INFO">TODO ping XWtremWeb worker up before one test</msg>
<status status="PASS" endtime="20170903 17:07:41.716" starttime="20170903 17:07:41.715"></status>
</kw>
<kw name="Delete Fonctionnal Xtremweb Tables" library="MySql">
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170903 17:07:41.719" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170903 17:07:41.721" starttime="20170903 17:07:41.718"></status>
</kw>
<status status="PASS" endtime="20170903 17:07:41.721" starttime="20170903 17:07:41.717"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps</arg>
</arguments>
<msg timestamp="20170903 17:07:41.722" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM apps; </msg>
<status status="PASS" endtime="20170903 17:07:41.723" starttime="20170903 17:07:41.721"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps_history</arg>
</arguments>
<msg timestamp="20170903 17:07:41.724" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM apps_history; </msg>
<status status="PASS" endtime="20170903 17:07:41.725" starttime="20170903 17:07:41.723"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas</arg>
</arguments>
<msg timestamp="20170903 17:07:41.726" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM datas; </msg>
<status status="PASS" endtime="20170903 17:07:41.727" starttime="20170903 17:07:41.726"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas_history</arg>
</arguments>
<msg timestamp="20170903 17:07:41.729" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM datas_history; </msg>
<status status="PASS" endtime="20170903 17:07:41.730" starttime="20170903 17:07:41.728"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables</arg>
</arguments>
<msg timestamp="20170903 17:07:41.731" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM executables; </msg>
<status status="PASS" endtime="20170903 17:07:41.732" starttime="20170903 17:07:41.730"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables_history</arg>
</arguments>
<msg timestamp="20170903 17:07:41.733" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM executables_history; </msg>
<status status="PASS" endtime="20170903 17:07:41.734" starttime="20170903 17:07:41.733"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups</arg>
</arguments>
<msg timestamp="20170903 17:07:41.734" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM groups; </msg>
<status status="PASS" endtime="20170903 17:07:41.735" starttime="20170903 17:07:41.734"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups_history</arg>
</arguments>
<msg timestamp="20170903 17:07:41.735" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM groups_history; </msg>
<status status="PASS" endtime="20170903 17:07:41.736" starttime="20170903 17:07:41.735"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts</arg>
</arguments>
<msg timestamp="20170903 17:07:41.736" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM hosts; </msg>
<status status="PASS" endtime="20170903 17:07:41.737" starttime="20170903 17:07:41.736"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts_history</arg>
</arguments>
<msg timestamp="20170903 17:07:41.738" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM hosts_history; </msg>
<status status="PASS" endtime="20170903 17:07:41.738" starttime="20170903 17:07:41.737"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships</arg>
</arguments>
<msg timestamp="20170903 17:07:41.739" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM memberships; </msg>
<status status="PASS" endtime="20170903 17:07:41.739" starttime="20170903 17:07:41.738"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships_history</arg>
</arguments>
<msg timestamp="20170903 17:07:41.739" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM memberships_history; </msg>
<status status="PASS" endtime="20170903 17:07:41.740" starttime="20170903 17:07:41.739"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions</arg>
</arguments>
<msg timestamp="20170903 17:07:41.740" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sessions; </msg>
<status status="PASS" endtime="20170903 17:07:41.741" starttime="20170903 17:07:41.740"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions_history</arg>
</arguments>
<msg timestamp="20170903 17:07:41.741" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sessions_history; </msg>
<status status="PASS" endtime="20170903 17:07:41.742" starttime="20170903 17:07:41.741"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes</arg>
</arguments>
<msg timestamp="20170903 17:07:41.742" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedAppTypes; </msg>
<status status="PASS" endtime="20170903 17:07:41.743" starttime="20170903 17:07:41.742"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes_history</arg>
</arguments>
<msg timestamp="20170903 17:07:41.744" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedAppTypes_history; </msg>
<status status="PASS" endtime="20170903 17:07:41.745" starttime="20170903 17:07:41.743"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes</arg>
</arguments>
<msg timestamp="20170903 17:07:41.745" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedPackageTypes; </msg>
<status status="PASS" endtime="20170903 17:07:41.747" starttime="20170903 17:07:41.745"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes_history</arg>
</arguments>
<msg timestamp="20170903 17:07:41.747" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedPackageTypes_history; </msg>
<status status="PASS" endtime="20170903 17:07:41.749" starttime="20170903 17:07:41.747"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks</arg>
</arguments>
<msg timestamp="20170903 17:07:41.750" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM tasks; </msg>
<status status="PASS" endtime="20170903 17:07:41.751" starttime="20170903 17:07:41.749"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks_history</arg>
</arguments>
<msg timestamp="20170903 17:07:41.752" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM tasks_history; </msg>
<status status="PASS" endtime="20170903 17:07:41.753" starttime="20170903 17:07:41.751"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces</arg>
</arguments>
<msg timestamp="20170903 17:07:41.754" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM traces; </msg>
<status status="PASS" endtime="20170903 17:07:41.756" starttime="20170903 17:07:41.754"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces_history</arg>
</arguments>
<msg timestamp="20170903 17:07:41.757" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM traces_history; </msg>
<status status="PASS" endtime="20170903 17:07:41.759" starttime="20170903 17:07:41.756"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups</arg>
</arguments>
<msg timestamp="20170903 17:07:41.760" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM usergroups; </msg>
<status status="PASS" endtime="20170903 17:07:41.761" starttime="20170903 17:07:41.760"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups_history</arg>
</arguments>
<msg timestamp="20170903 17:07:41.762" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM usergroups_history; </msg>
<status status="PASS" endtime="20170903 17:07:41.763" starttime="20170903 17:07:41.761"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users_history</arg>
</arguments>
<msg timestamp="20170903 17:07:41.763" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM users_history; </msg>
<status status="PASS" endtime="20170903 17:07:41.764" starttime="20170903 17:07:41.763"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works</arg>
</arguments>
<msg timestamp="20170903 17:07:41.765" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM works; </msg>
<status status="PASS" endtime="20170903 17:07:41.766" starttime="20170903 17:07:41.764"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works_history</arg>
</arguments>
<msg timestamp="20170903 17:07:41.767" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM works_history; </msg>
<status status="PASS" endtime="20170903 17:07:41.767" starttime="20170903 17:07:41.766"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170903 17:07:41.769" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170903 17:07:41.770" starttime="20170903 17:07:41.769"></status>
</kw>
<status status="PASS" endtime="20170903 17:07:41.770" starttime="20170903 17:07:41.768"></status>
</kw>
<status status="PASS" endtime="20170903 17:07:41.771" starttime="20170903 17:07:41.716"></status>
</kw>
<status status="PASS" endtime="20170903 17:07:41.771" starttime="20170903 17:07:41.530"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>TODO</arg>
</arguments>
<msg timestamp="20170903 17:07:41.772" level="INFO">TODO</msg>
<status status="PASS" endtime="20170903 17:07:41.773" starttime="20170903 17:07:41.772"></status>
</kw>
<kw type="teardown" name="End XWtremWeb Command Test" library="XWCommon">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Nothing to do</arg>
</arguments>
<msg timestamp="20170903 17:07:41.775" level="INFO">Nothing to do</msg>
<status status="PASS" endtime="20170903 17:07:41.775" starttime="20170903 17:07:41.775"></status>
</kw>
<status status="PASS" endtime="20170903 17:07:41.776" starttime="20170903 17:07:41.774"></status>
</kw>
<doc>Récupérer les résultats un job. Vérifier les résultats. Vérifier que le job est bien supprimé.</doc>
<tags>
<tag>CommandLine Tests</tag>
</tags>
<status status="PASS" endtime="20170903 17:07:41.777" critical="yes" starttime="20170903 17:07:41.528"></status>
</test>
<test id="s1-s4-t10" name="Test 7 Tester la durée d’exécution">
<kw type="setup" name="Begin XWtremWeb Command Test" library="XWCommon">
<kw name="Ping XWtremWeb Database" library="XWServer">
<kw name="Xtremweb Tables Must Exist" library="MySql">
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170903 17:07:41.787" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170903 17:07:41.789" starttime="20170903 17:07:41.787"></status>
</kw>
<status status="PASS" endtime="20170903 17:07:41.789" starttime="20170903 17:07:41.787"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>appTypes</arg>
</arguments>
<msg timestamp="20170903 17:07:41.790" level="INFO">Executing : Table Must Exist  |  appTypes </msg>
<msg timestamp="20170903 17:07:41.790" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='appTypes' </msg>
<status status="PASS" endtime="20170903 17:07:41.791" starttime="20170903 17:07:41.789"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps</arg>
</arguments>
<msg timestamp="20170903 17:07:41.791" level="INFO">Executing : Table Must Exist  |  apps </msg>
<msg timestamp="20170903 17:07:41.791" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='apps' </msg>
<status status="PASS" endtime="20170903 17:07:41.793" starttime="20170903 17:07:41.791"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps_history</arg>
</arguments>
<msg timestamp="20170903 17:07:41.794" level="INFO">Executing : Table Must Exist  |  apps_history </msg>
<msg timestamp="20170903 17:07:41.794" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='apps_history' </msg>
<status status="PASS" endtime="20170903 17:07:41.797" starttime="20170903 17:07:41.793"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>cpuTypes</arg>
</arguments>
<msg timestamp="20170903 17:07:41.798" level="INFO">Executing : Table Must Exist  |  cpuTypes </msg>
<msg timestamp="20170903 17:07:41.798" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='cpuTypes' </msg>
<status status="PASS" endtime="20170903 17:07:41.800" starttime="20170903 17:07:41.797"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>dataTypes</arg>
</arguments>
<msg timestamp="20170903 17:07:41.801" level="INFO">Executing : Table Must Exist  |  dataTypes </msg>
<msg timestamp="20170903 17:07:41.801" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='dataTypes' </msg>
<status status="PASS" endtime="20170903 17:07:41.803" starttime="20170903 17:07:41.800"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas</arg>
</arguments>
<msg timestamp="20170903 17:07:41.805" level="INFO">Executing : Table Must Exist  |  datas </msg>
<msg timestamp="20170903 17:07:41.805" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='datas' </msg>
<status status="PASS" endtime="20170903 17:07:41.806" starttime="20170903 17:07:41.803"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas_history</arg>
</arguments>
<msg timestamp="20170903 17:07:41.808" level="INFO">Executing : Table Must Exist  |  datas_history </msg>
<msg timestamp="20170903 17:07:41.808" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='datas_history' </msg>
<status status="PASS" endtime="20170903 17:07:41.809" starttime="20170903 17:07:41.807"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables</arg>
</arguments>
<msg timestamp="20170903 17:07:41.810" level="INFO">Executing : Table Must Exist  |  executables </msg>
<msg timestamp="20170903 17:07:41.810" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='executables' </msg>
<status status="PASS" endtime="20170903 17:07:41.813" starttime="20170903 17:07:41.809"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables_history</arg>
</arguments>
<msg timestamp="20170903 17:07:41.813" level="INFO">Executing : Table Must Exist  |  executables_history </msg>
<msg timestamp="20170903 17:07:41.814" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='executables_history' </msg>
<status status="PASS" endtime="20170903 17:07:41.816" starttime="20170903 17:07:41.813"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups</arg>
</arguments>
<msg timestamp="20170903 17:07:41.818" level="INFO">Executing : Table Must Exist  |  groups </msg>
<msg timestamp="20170903 17:07:41.818" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='groups' </msg>
<status status="PASS" endtime="20170903 17:07:41.825" starttime="20170903 17:07:41.817"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups_history</arg>
</arguments>
<msg timestamp="20170903 17:07:41.826" level="INFO">Executing : Table Must Exist  |  groups_history </msg>
<msg timestamp="20170903 17:07:41.826" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='groups_history' </msg>
<status status="PASS" endtime="20170903 17:07:41.827" starttime="20170903 17:07:41.826"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts</arg>
</arguments>
<msg timestamp="20170903 17:07:41.828" level="INFO">Executing : Table Must Exist  |  hosts </msg>
<msg timestamp="20170903 17:07:41.828" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='hosts' </msg>
<status status="PASS" endtime="20170903 17:07:41.829" starttime="20170903 17:07:41.828"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts_history</arg>
</arguments>
<msg timestamp="20170903 17:07:41.830" level="INFO">Executing : Table Must Exist  |  hosts_history </msg>
<msg timestamp="20170903 17:07:41.830" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='hosts_history' </msg>
<status status="PASS" endtime="20170903 17:07:41.831" starttime="20170903 17:07:41.830"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships</arg>
</arguments>
<msg timestamp="20170903 17:07:41.832" level="INFO">Executing : Table Must Exist  |  memberships </msg>
<msg timestamp="20170903 17:07:41.832" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='memberships' </msg>
<status status="PASS" endtime="20170903 17:07:41.833" starttime="20170903 17:07:41.831"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships_history</arg>
</arguments>
<msg timestamp="20170903 17:07:41.834" level="INFO">Executing : Table Must Exist  |  memberships_history </msg>
<msg timestamp="20170903 17:07:41.834" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='memberships_history' </msg>
<status status="PASS" endtime="20170903 17:07:41.835" starttime="20170903 17:07:41.833"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>oses</arg>
</arguments>
<msg timestamp="20170903 17:07:41.835" level="INFO">Executing : Table Must Exist  |  oses </msg>
<msg timestamp="20170903 17:07:41.835" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='oses' </msg>
<status status="PASS" endtime="20170903 17:07:41.837" starttime="20170903 17:07:41.835"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>packageTypes</arg>
</arguments>
<msg timestamp="20170903 17:07:41.837" level="INFO">Executing : Table Must Exist  |  packageTypes </msg>
<msg timestamp="20170903 17:07:41.837" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='packageTypes' </msg>
<status status="PASS" endtime="20170903 17:07:41.839" starttime="20170903 17:07:41.837"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions</arg>
</arguments>
<msg timestamp="20170903 17:07:41.839" level="INFO">Executing : Table Must Exist  |  sessions </msg>
<msg timestamp="20170903 17:07:41.839" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sessions' </msg>
<status status="PASS" endtime="20170903 17:07:41.840" starttime="20170903 17:07:41.839"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions_history</arg>
</arguments>
<msg timestamp="20170903 17:07:41.841" level="INFO">Executing : Table Must Exist  |  sessions_history </msg>
<msg timestamp="20170903 17:07:41.841" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sessions_history' </msg>
<status status="PASS" endtime="20170903 17:07:41.842" starttime="20170903 17:07:41.840"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes</arg>
</arguments>
<msg timestamp="20170903 17:07:41.842" level="INFO">Executing : Table Must Exist  |  sharedAppTypes </msg>
<msg timestamp="20170903 17:07:41.842" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedAppTypes' </msg>
<status status="PASS" endtime="20170903 17:07:41.843" starttime="20170903 17:07:41.842"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes_history</arg>
</arguments>
<msg timestamp="20170903 17:07:41.844" level="INFO">Executing : Table Must Exist  |  sharedAppTypes_history </msg>
<msg timestamp="20170903 17:07:41.844" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedAppTypes_history' </msg>
<status status="PASS" endtime="20170903 17:07:41.845" starttime="20170903 17:07:41.844"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes</arg>
</arguments>
<msg timestamp="20170903 17:07:41.846" level="INFO">Executing : Table Must Exist  |  sharedPackageTypes </msg>
<msg timestamp="20170903 17:07:41.846" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedPackageTypes' </msg>
<status status="PASS" endtime="20170903 17:07:41.847" starttime="20170903 17:07:41.845"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes_history</arg>
</arguments>
<msg timestamp="20170903 17:07:41.849" level="INFO">Executing : Table Must Exist  |  sharedPackageTypes_history </msg>
<msg timestamp="20170903 17:07:41.849" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedPackageTypes_history' </msg>
<status status="PASS" endtime="20170903 17:07:41.850" starttime="20170903 17:07:41.848"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>statuses</arg>
</arguments>
<msg timestamp="20170903 17:07:41.851" level="INFO">Executing : Table Must Exist  |  statuses </msg>
<msg timestamp="20170903 17:07:41.851" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='statuses' </msg>
<status status="PASS" endtime="20170903 17:07:41.853" starttime="20170903 17:07:41.851"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks</arg>
</arguments>
<msg timestamp="20170903 17:07:41.853" level="INFO">Executing : Table Must Exist  |  tasks </msg>
<msg timestamp="20170903 17:07:41.854" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='tasks' </msg>
<status status="PASS" endtime="20170903 17:07:41.855" starttime="20170903 17:07:41.853"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks_history</arg>
</arguments>
<msg timestamp="20170903 17:07:41.855" level="INFO">Executing : Table Must Exist  |  tasks_history </msg>
<msg timestamp="20170903 17:07:41.855" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='tasks_history' </msg>
<status status="PASS" endtime="20170903 17:07:41.857" starttime="20170903 17:07:41.855"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces</arg>
</arguments>
<msg timestamp="20170903 17:07:41.858" level="INFO">Executing : Table Must Exist  |  traces </msg>
<msg timestamp="20170903 17:07:41.858" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='traces' </msg>
<status status="PASS" endtime="20170903 17:07:41.861" starttime="20170903 17:07:41.858"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces_history</arg>
</arguments>
<msg timestamp="20170903 17:07:41.862" level="INFO">Executing : Table Must Exist  |  traces_history </msg>
<msg timestamp="20170903 17:07:41.862" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='traces_history' </msg>
<status status="PASS" endtime="20170903 17:07:41.866" starttime="20170903 17:07:41.862"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>userRights</arg>
</arguments>
<msg timestamp="20170903 17:07:41.867" level="INFO">Executing : Table Must Exist  |  userRights </msg>
<msg timestamp="20170903 17:07:41.867" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='userRights' </msg>
<status status="PASS" endtime="20170903 17:07:41.870" starttime="20170903 17:07:41.866"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups</arg>
</arguments>
<msg timestamp="20170903 17:07:41.871" level="INFO">Executing : Table Must Exist  |  usergroups </msg>
<msg timestamp="20170903 17:07:41.871" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='usergroups' </msg>
<status status="PASS" endtime="20170903 17:07:41.873" starttime="20170903 17:07:41.870"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups_history</arg>
</arguments>
<msg timestamp="20170903 17:07:41.874" level="INFO">Executing : Table Must Exist  |  usergroups_history </msg>
<msg timestamp="20170903 17:07:41.874" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='usergroups_history' </msg>
<status status="PASS" endtime="20170903 17:07:41.876" starttime="20170903 17:07:41.873"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users</arg>
</arguments>
<msg timestamp="20170903 17:07:41.877" level="INFO">Executing : Table Must Exist  |  users </msg>
<msg timestamp="20170903 17:07:41.877" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='users' </msg>
<status status="PASS" endtime="20170903 17:07:41.879" starttime="20170903 17:07:41.876"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users_history</arg>
</arguments>
<msg timestamp="20170903 17:07:41.880" level="INFO">Executing : Table Must Exist  |  users_history </msg>
<msg timestamp="20170903 17:07:41.880" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='users_history' </msg>
<status status="PASS" endtime="20170903 17:07:41.882" starttime="20170903 17:07:41.879"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>version</arg>
</arguments>
<msg timestamp="20170903 17:07:41.882" level="INFO">Executing : Table Must Exist  |  version </msg>
<msg timestamp="20170903 17:07:41.882" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='version' </msg>
<status status="PASS" endtime="20170903 17:07:41.883" starttime="20170903 17:07:41.882"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>versions</arg>
</arguments>
<msg timestamp="20170903 17:07:41.884" level="INFO">Executing : Table Must Exist  |  versions </msg>
<msg timestamp="20170903 17:07:41.884" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='versions' </msg>
<status status="PASS" endtime="20170903 17:07:41.885" starttime="20170903 17:07:41.883"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps</arg>
</arguments>
<msg timestamp="20170903 17:07:41.886" level="INFO">Executing : Table Must Exist  |  view_apps </msg>
<msg timestamp="20170903 17:07:41.886" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps' </msg>
<status status="PASS" endtime="20170903 17:07:41.887" starttime="20170903 17:07:41.885"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps_for_offering</arg>
</arguments>
<msg timestamp="20170903 17:07:41.888" level="INFO">Executing : Table Must Exist  |  view_apps_for_offering </msg>
<msg timestamp="20170903 17:07:41.888" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps_for_offering' </msg>
<status status="PASS" endtime="20170903 17:07:41.890" starttime="20170903 17:07:41.887"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps_for_offering_with_file_sizes</arg>
</arguments>
<msg timestamp="20170903 17:07:41.890" level="INFO">Executing : Table Must Exist  |  view_apps_for_offering_with_file_sizes </msg>
<msg timestamp="20170903 17:07:41.890" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps_for_offering_with_file_sizes' </msg>
<status status="PASS" endtime="20170903 17:07:41.891" starttime="20170903 17:07:41.890"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_datas</arg>
</arguments>
<msg timestamp="20170903 17:07:41.892" level="INFO">Executing : Table Must Exist  |  view_datas </msg>
<msg timestamp="20170903 17:07:41.892" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_datas' </msg>
<status status="PASS" endtime="20170903 17:07:41.894" starttime="20170903 17:07:41.892"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_executables</arg>
</arguments>
<msg timestamp="20170903 17:07:41.895" level="INFO">Executing : Table Must Exist  |  view_executables </msg>
<msg timestamp="20170903 17:07:41.895" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_executables' </msg>
<status status="PASS" endtime="20170903 17:07:41.897" starttime="20170903 17:07:41.895"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_groups</arg>
</arguments>
<msg timestamp="20170903 17:07:41.898" level="INFO">Executing : Table Must Exist  |  view_groups </msg>
<msg timestamp="20170903 17:07:41.898" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_groups' </msg>
<status status="PASS" endtime="20170903 17:07:41.900" starttime="20170903 17:07:41.898"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts</arg>
</arguments>
<msg timestamp="20170903 17:07:41.901" level="INFO">Executing : Table Must Exist  |  view_hosts </msg>
<msg timestamp="20170903 17:07:41.901" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts' </msg>
<status status="PASS" endtime="20170903 17:07:41.904" starttime="20170903 17:07:41.901"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_deployable</arg>
</arguments>
<msg timestamp="20170903 17:07:41.905" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_deployable </msg>
<msg timestamp="20170903 17:07:41.905" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_deployable' </msg>
<status status="PASS" endtime="20170903 17:07:41.908" starttime="20170903 17:07:41.904"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_deployable_and_shared</arg>
</arguments>
<msg timestamp="20170903 17:07:41.909" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_deployable_and_shared </msg>
<msg timestamp="20170903 17:07:41.909" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_deployable_and_shared' </msg>
<status status="PASS" endtime="20170903 17:07:41.913" starttime="20170903 17:07:41.909"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_shared</arg>
</arguments>
<msg timestamp="20170903 17:07:41.914" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_shared </msg>
<msg timestamp="20170903 17:07:41.914" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_shared' </msg>
<status status="PASS" endtime="20170903 17:07:41.918" starttime="20170903 17:07:41.914"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_sessions</arg>
</arguments>
<msg timestamp="20170903 17:07:41.919" level="INFO">Executing : Table Must Exist  |  view_sessions </msg>
<msg timestamp="20170903 17:07:41.919" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_sessions' </msg>
<status status="PASS" endtime="20170903 17:07:41.922" starttime="20170903 17:07:41.918"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_tasks</arg>
</arguments>
<msg timestamp="20170903 17:07:41.923" level="INFO">Executing : Table Must Exist  |  view_tasks </msg>
<msg timestamp="20170903 17:07:41.923" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_tasks' </msg>
<status status="PASS" endtime="20170903 17:07:41.925" starttime="20170903 17:07:41.922"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_traces</arg>
</arguments>
<msg timestamp="20170903 17:07:41.926" level="INFO">Executing : Table Must Exist  |  view_traces </msg>
<msg timestamp="20170903 17:07:41.926" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_traces' </msg>
<status status="PASS" endtime="20170903 17:07:41.928" starttime="20170903 17:07:41.925"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_usergroups</arg>
</arguments>
<msg timestamp="20170903 17:07:41.928" level="INFO">Executing : Table Must Exist  |  view_usergroups </msg>
<msg timestamp="20170903 17:07:41.928" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_usergroups' </msg>
<status status="PASS" endtime="20170903 17:07:41.931" starttime="20170903 17:07:41.928"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users</arg>
</arguments>
<msg timestamp="20170903 17:07:41.931" level="INFO">Executing : Table Must Exist  |  view_users </msg>
<msg timestamp="20170903 17:07:41.931" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users' </msg>
<status status="PASS" endtime="20170903 17:07:41.933" starttime="20170903 17:07:41.931"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_apps</arg>
</arguments>
<msg timestamp="20170903 17:07:41.934" level="INFO">Executing : Table Must Exist  |  view_users_apps </msg>
<msg timestamp="20170903 17:07:41.934" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_apps' </msg>
<status status="PASS" endtime="20170903 17:07:41.935" starttime="20170903 17:07:41.933"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_datas</arg>
</arguments>
<msg timestamp="20170903 17:07:41.936" level="INFO">Executing : Table Must Exist  |  view_users_datas </msg>
<msg timestamp="20170903 17:07:41.936" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_datas' </msg>
<status status="PASS" endtime="20170903 17:07:41.938" starttime="20170903 17:07:41.936"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_groups</arg>
</arguments>
<msg timestamp="20170903 17:07:41.939" level="INFO">Executing : Table Must Exist  |  view_users_groups </msg>
<msg timestamp="20170903 17:07:41.939" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_groups' </msg>
<status status="PASS" endtime="20170903 17:07:41.940" starttime="20170903 17:07:41.938"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_hosts</arg>
</arguments>
<msg timestamp="20170903 17:07:41.941" level="INFO">Executing : Table Must Exist  |  view_users_hosts </msg>
<msg timestamp="20170903 17:07:41.941" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_hosts' </msg>
<status status="PASS" endtime="20170903 17:07:41.942" starttime="20170903 17:07:41.940"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_sessions</arg>
</arguments>
<msg timestamp="20170903 17:07:41.943" level="INFO">Executing : Table Must Exist  |  view_users_sessions </msg>
<msg timestamp="20170903 17:07:41.943" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_sessions' </msg>
<status status="PASS" endtime="20170903 17:07:41.945" starttime="20170903 17:07:41.943"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_tasks</arg>
</arguments>
<msg timestamp="20170903 17:07:41.946" level="INFO">Executing : Table Must Exist  |  view_users_tasks </msg>
<msg timestamp="20170903 17:07:41.946" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_tasks' </msg>
<status status="PASS" endtime="20170903 17:07:41.949" starttime="20170903 17:07:41.946"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_traces</arg>
</arguments>
<msg timestamp="20170903 17:07:41.949" level="INFO">Executing : Table Must Exist  |  view_users_traces </msg>
<msg timestamp="20170903 17:07:41.949" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_traces' </msg>
<status status="PASS" endtime="20170903 17:07:41.952" starttime="20170903 17:07:41.949"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_usergroups</arg>
</arguments>
<msg timestamp="20170903 17:07:41.953" level="INFO">Executing : Table Must Exist  |  view_users_usergroups </msg>
<msg timestamp="20170903 17:07:41.953" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_usergroups' </msg>
<status status="PASS" endtime="20170903 17:07:41.956" starttime="20170903 17:07:41.953"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_users</arg>
</arguments>
<msg timestamp="20170903 17:07:41.956" level="INFO">Executing : Table Must Exist  |  view_users_users </msg>
<msg timestamp="20170903 17:07:41.956" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_users' </msg>
<status status="PASS" endtime="20170903 17:07:41.959" starttime="20170903 17:07:41.956"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_works</arg>
</arguments>
<msg timestamp="20170903 17:07:41.960" level="INFO">Executing : Table Must Exist  |  view_users_works </msg>
<msg timestamp="20170903 17:07:41.961" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_works' </msg>
<status status="PASS" endtime="20170903 17:07:41.964" starttime="20170903 17:07:41.959"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works</arg>
</arguments>
<msg timestamp="20170903 17:07:41.965" level="INFO">Executing : Table Must Exist  |  view_works </msg>
<msg timestamp="20170903 17:07:41.965" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works' </msg>
<status status="PASS" endtime="20170903 17:07:41.967" starttime="20170903 17:07:41.965"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works_for_billing</arg>
</arguments>
<msg timestamp="20170903 17:07:41.968" level="INFO">Executing : Table Must Exist  |  view_works_for_billing </msg>
<msg timestamp="20170903 17:07:41.968" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works_for_billing' </msg>
<status status="PASS" endtime="20170903 17:07:41.970" starttime="20170903 17:07:41.968"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works_for_billing_with_file_sizes</arg>
</arguments>
<msg timestamp="20170903 17:07:41.971" level="INFO">Executing : Table Must Exist  |  view_works_for_billing_with_file_sizes </msg>
<msg timestamp="20170903 17:07:41.971" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works_for_billing_with_file_sizes' </msg>
<status status="PASS" endtime="20170903 17:07:41.975" starttime="20170903 17:07:41.971"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works</arg>
</arguments>
<msg timestamp="20170903 17:07:41.976" level="INFO">Executing : Table Must Exist  |  works </msg>
<msg timestamp="20170903 17:07:41.976" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='works' </msg>
<status status="PASS" endtime="20170903 17:07:41.978" starttime="20170903 17:07:41.975"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works_history</arg>
</arguments>
<msg timestamp="20170903 17:07:41.979" level="INFO">Executing : Table Must Exist  |  works_history </msg>
<msg timestamp="20170903 17:07:41.979" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='works_history' </msg>
<status status="PASS" endtime="20170903 17:07:41.982" starttime="20170903 17:07:41.979"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170903 17:07:41.983" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170903 17:07:41.983" starttime="20170903 17:07:41.982"></status>
</kw>
<status status="PASS" endtime="20170903 17:07:41.983" starttime="20170903 17:07:41.982"></status>
</kw>
<status status="PASS" endtime="20170903 17:07:41.983" starttime="20170903 17:07:41.786"></status>
</kw>
<status status="PASS" endtime="20170903 17:07:41.983" starttime="20170903 17:07:41.785"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>TODO ping XWtremWeb server up</arg>
</arguments>
<msg timestamp="20170903 17:07:41.984" level="INFO">TODO ping XWtremWeb server up</msg>
<status status="PASS" endtime="20170903 17:07:41.984" starttime="20170903 17:07:41.984"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>TODO ping XWtremWeb worker up before one test</arg>
</arguments>
<msg timestamp="20170903 17:07:41.984" level="INFO">TODO ping XWtremWeb worker up before one test</msg>
<status status="PASS" endtime="20170903 17:07:41.984" starttime="20170903 17:07:41.984"></status>
</kw>
<kw name="Delete Fonctionnal Xtremweb Tables" library="MySql">
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170903 17:07:41.986" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170903 17:07:41.988" starttime="20170903 17:07:41.985"></status>
</kw>
<status status="PASS" endtime="20170903 17:07:41.988" starttime="20170903 17:07:41.985"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps</arg>
</arguments>
<msg timestamp="20170903 17:07:41.989" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM apps; </msg>
<status status="PASS" endtime="20170903 17:07:41.991" starttime="20170903 17:07:41.989"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps_history</arg>
</arguments>
<msg timestamp="20170903 17:07:41.991" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM apps_history; </msg>
<status status="PASS" endtime="20170903 17:07:41.993" starttime="20170903 17:07:41.991"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas</arg>
</arguments>
<msg timestamp="20170903 17:07:41.994" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM datas; </msg>
<status status="PASS" endtime="20170903 17:07:41.995" starttime="20170903 17:07:41.993"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas_history</arg>
</arguments>
<msg timestamp="20170903 17:07:41.996" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM datas_history; </msg>
<status status="PASS" endtime="20170903 17:07:41.997" starttime="20170903 17:07:41.995"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables</arg>
</arguments>
<msg timestamp="20170903 17:07:41.998" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM executables; </msg>
<status status="PASS" endtime="20170903 17:07:41.999" starttime="20170903 17:07:41.997"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables_history</arg>
</arguments>
<msg timestamp="20170903 17:07:42.000" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM executables_history; </msg>
<status status="PASS" endtime="20170903 17:07:42.002" starttime="20170903 17:07:42.000"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups</arg>
</arguments>
<msg timestamp="20170903 17:07:42.002" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM groups; </msg>
<status status="PASS" endtime="20170903 17:07:42.004" starttime="20170903 17:07:42.002"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups_history</arg>
</arguments>
<msg timestamp="20170903 17:07:42.006" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM groups_history; </msg>
<status status="PASS" endtime="20170903 17:07:42.007" starttime="20170903 17:07:42.005"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts</arg>
</arguments>
<msg timestamp="20170903 17:07:42.008" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM hosts; </msg>
<status status="PASS" endtime="20170903 17:07:42.010" starttime="20170903 17:07:42.007"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts_history</arg>
</arguments>
<msg timestamp="20170903 17:07:42.011" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM hosts_history; </msg>
<status status="PASS" endtime="20170903 17:07:42.013" starttime="20170903 17:07:42.010"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships</arg>
</arguments>
<msg timestamp="20170903 17:07:42.014" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM memberships; </msg>
<status status="PASS" endtime="20170903 17:07:42.015" starttime="20170903 17:07:42.013"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships_history</arg>
</arguments>
<msg timestamp="20170903 17:07:42.016" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM memberships_history; </msg>
<status status="PASS" endtime="20170903 17:07:42.017" starttime="20170903 17:07:42.015"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions</arg>
</arguments>
<msg timestamp="20170903 17:07:42.018" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sessions; </msg>
<status status="PASS" endtime="20170903 17:07:42.019" starttime="20170903 17:07:42.018"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions_history</arg>
</arguments>
<msg timestamp="20170903 17:07:42.021" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sessions_history; </msg>
<status status="PASS" endtime="20170903 17:07:42.022" starttime="20170903 17:07:42.021"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes</arg>
</arguments>
<msg timestamp="20170903 17:07:42.023" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedAppTypes; </msg>
<status status="PASS" endtime="20170903 17:07:42.025" starttime="20170903 17:07:42.023"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes_history</arg>
</arguments>
<msg timestamp="20170903 17:07:42.026" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedAppTypes_history; </msg>
<status status="PASS" endtime="20170903 17:07:42.027" starttime="20170903 17:07:42.026"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes</arg>
</arguments>
<msg timestamp="20170903 17:07:42.028" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedPackageTypes; </msg>
<status status="PASS" endtime="20170903 17:07:42.029" starttime="20170903 17:07:42.028"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes_history</arg>
</arguments>
<msg timestamp="20170903 17:07:42.030" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedPackageTypes_history; </msg>
<status status="PASS" endtime="20170903 17:07:42.031" starttime="20170903 17:07:42.030"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks</arg>
</arguments>
<msg timestamp="20170903 17:07:42.032" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM tasks; </msg>
<status status="PASS" endtime="20170903 17:07:42.033" starttime="20170903 17:07:42.032"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks_history</arg>
</arguments>
<msg timestamp="20170903 17:07:42.033" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM tasks_history; </msg>
<status status="PASS" endtime="20170903 17:07:42.034" starttime="20170903 17:07:42.033"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces</arg>
</arguments>
<msg timestamp="20170903 17:07:42.034" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM traces; </msg>
<status status="PASS" endtime="20170903 17:07:42.035" starttime="20170903 17:07:42.034"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces_history</arg>
</arguments>
<msg timestamp="20170903 17:07:42.035" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM traces_history; </msg>
<status status="PASS" endtime="20170903 17:07:42.036" starttime="20170903 17:07:42.035"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups</arg>
</arguments>
<msg timestamp="20170903 17:07:42.037" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM usergroups; </msg>
<status status="PASS" endtime="20170903 17:07:42.037" starttime="20170903 17:07:42.036"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups_history</arg>
</arguments>
<msg timestamp="20170903 17:07:42.038" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM usergroups_history; </msg>
<status status="PASS" endtime="20170903 17:07:42.038" starttime="20170903 17:07:42.037"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users_history</arg>
</arguments>
<msg timestamp="20170903 17:07:42.038" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM users_history; </msg>
<status status="PASS" endtime="20170903 17:07:42.039" starttime="20170903 17:07:42.038"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works</arg>
</arguments>
<msg timestamp="20170903 17:07:42.040" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM works; </msg>
<status status="PASS" endtime="20170903 17:07:42.040" starttime="20170903 17:07:42.039"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works_history</arg>
</arguments>
<msg timestamp="20170903 17:07:42.041" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM works_history; </msg>
<status status="PASS" endtime="20170903 17:07:42.041" starttime="20170903 17:07:42.041"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170903 17:07:42.042" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170903 17:07:42.043" starttime="20170903 17:07:42.042"></status>
</kw>
<status status="PASS" endtime="20170903 17:07:42.043" starttime="20170903 17:07:42.041"></status>
</kw>
<status status="PASS" endtime="20170903 17:07:42.043" starttime="20170903 17:07:41.985"></status>
</kw>
<status status="PASS" endtime="20170903 17:07:42.043" starttime="20170903 17:07:41.785"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>TODO</arg>
</arguments>
<msg timestamp="20170903 17:07:42.045" level="INFO">TODO</msg>
<status status="PASS" endtime="20170903 17:07:42.045" starttime="20170903 17:07:42.045"></status>
</kw>
<kw type="teardown" name="End XWtremWeb Command Test" library="XWCommon">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Nothing to do</arg>
</arguments>
<msg timestamp="20170903 17:07:42.048" level="INFO">Nothing to do</msg>
<status status="PASS" endtime="20170903 17:07:42.048" starttime="20170903 17:07:42.048"></status>
</kw>
<status status="PASS" endtime="20170903 17:07:42.048" starttime="20170903 17:07:42.047"></status>
</kw>
<doc>Ces tests doivent prouver que la synchronisation scheduler/worker est correcte. Par défaut les messages de synchronisation worker/scheduler se font toutes les 5mn. Au bout de trois messages non reçus par le scheduler, le job est considéré comme perdu et doit être reschédulé.</doc>
<tags>
<tag>CommandLine Tests</tag>
</tags>
<status status="PASS" endtime="20170903 17:07:42.049" critical="yes" starttime="20170903 17:07:41.783"></status>
</test>
<test id="s1-s4-t11" name="Test 8 Tester la perte des jobs">
<kw type="setup" name="Begin XWtremWeb Command Test" library="XWCommon">
<kw name="Ping XWtremWeb Database" library="XWServer">
<kw name="Xtremweb Tables Must Exist" library="MySql">
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170903 17:07:42.066" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170903 17:07:42.068" starttime="20170903 17:07:42.065"></status>
</kw>
<status status="PASS" endtime="20170903 17:07:42.070" starttime="20170903 17:07:42.064"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>appTypes</arg>
</arguments>
<msg timestamp="20170903 17:07:42.071" level="INFO">Executing : Table Must Exist  |  appTypes </msg>
<msg timestamp="20170903 17:07:42.071" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='appTypes' </msg>
<status status="PASS" endtime="20170903 17:07:42.074" starttime="20170903 17:07:42.070"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps</arg>
</arguments>
<msg timestamp="20170903 17:07:42.075" level="INFO">Executing : Table Must Exist  |  apps </msg>
<msg timestamp="20170903 17:07:42.075" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='apps' </msg>
<status status="PASS" endtime="20170903 17:07:42.078" starttime="20170903 17:07:42.075"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps_history</arg>
</arguments>
<msg timestamp="20170903 17:07:42.079" level="INFO">Executing : Table Must Exist  |  apps_history </msg>
<msg timestamp="20170903 17:07:42.079" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='apps_history' </msg>
<status status="PASS" endtime="20170903 17:07:42.082" starttime="20170903 17:07:42.078"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>cpuTypes</arg>
</arguments>
<msg timestamp="20170903 17:07:42.082" level="INFO">Executing : Table Must Exist  |  cpuTypes </msg>
<msg timestamp="20170903 17:07:42.082" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='cpuTypes' </msg>
<status status="PASS" endtime="20170903 17:07:42.084" starttime="20170903 17:07:42.082"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>dataTypes</arg>
</arguments>
<msg timestamp="20170903 17:07:42.084" level="INFO">Executing : Table Must Exist  |  dataTypes </msg>
<msg timestamp="20170903 17:07:42.084" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='dataTypes' </msg>
<status status="PASS" endtime="20170903 17:07:42.087" starttime="20170903 17:07:42.084"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas</arg>
</arguments>
<msg timestamp="20170903 17:07:42.088" level="INFO">Executing : Table Must Exist  |  datas </msg>
<msg timestamp="20170903 17:07:42.088" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='datas' </msg>
<status status="PASS" endtime="20170903 17:07:42.093" starttime="20170903 17:07:42.087"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas_history</arg>
</arguments>
<msg timestamp="20170903 17:07:42.094" level="INFO">Executing : Table Must Exist  |  datas_history </msg>
<msg timestamp="20170903 17:07:42.094" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='datas_history' </msg>
<status status="PASS" endtime="20170903 17:07:42.097" starttime="20170903 17:07:42.094"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables</arg>
</arguments>
<msg timestamp="20170903 17:07:42.097" level="INFO">Executing : Table Must Exist  |  executables </msg>
<msg timestamp="20170903 17:07:42.098" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='executables' </msg>
<status status="PASS" endtime="20170903 17:07:42.100" starttime="20170903 17:07:42.097"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables_history</arg>
</arguments>
<msg timestamp="20170903 17:07:42.101" level="INFO">Executing : Table Must Exist  |  executables_history </msg>
<msg timestamp="20170903 17:07:42.101" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='executables_history' </msg>
<status status="PASS" endtime="20170903 17:07:42.104" starttime="20170903 17:07:42.101"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups</arg>
</arguments>
<msg timestamp="20170903 17:07:42.104" level="INFO">Executing : Table Must Exist  |  groups </msg>
<msg timestamp="20170903 17:07:42.105" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='groups' </msg>
<status status="PASS" endtime="20170903 17:07:42.107" starttime="20170903 17:07:42.104"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups_history</arg>
</arguments>
<msg timestamp="20170903 17:07:42.108" level="INFO">Executing : Table Must Exist  |  groups_history </msg>
<msg timestamp="20170903 17:07:42.108" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='groups_history' </msg>
<status status="PASS" endtime="20170903 17:07:42.111" starttime="20170903 17:07:42.108"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts</arg>
</arguments>
<msg timestamp="20170903 17:07:42.112" level="INFO">Executing : Table Must Exist  |  hosts </msg>
<msg timestamp="20170903 17:07:42.112" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='hosts' </msg>
<status status="PASS" endtime="20170903 17:07:42.114" starttime="20170903 17:07:42.111"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts_history</arg>
</arguments>
<msg timestamp="20170903 17:07:42.115" level="INFO">Executing : Table Must Exist  |  hosts_history </msg>
<msg timestamp="20170903 17:07:42.115" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='hosts_history' </msg>
<status status="PASS" endtime="20170903 17:07:42.118" starttime="20170903 17:07:42.115"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships</arg>
</arguments>
<msg timestamp="20170903 17:07:42.119" level="INFO">Executing : Table Must Exist  |  memberships </msg>
<msg timestamp="20170903 17:07:42.119" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='memberships' </msg>
<status status="PASS" endtime="20170903 17:07:42.122" starttime="20170903 17:07:42.119"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships_history</arg>
</arguments>
<msg timestamp="20170903 17:07:42.123" level="INFO">Executing : Table Must Exist  |  memberships_history </msg>
<msg timestamp="20170903 17:07:42.123" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='memberships_history' </msg>
<status status="PASS" endtime="20170903 17:07:42.125" starttime="20170903 17:07:42.122"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>oses</arg>
</arguments>
<msg timestamp="20170903 17:07:42.127" level="INFO">Executing : Table Must Exist  |  oses </msg>
<msg timestamp="20170903 17:07:42.127" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='oses' </msg>
<status status="PASS" endtime="20170903 17:07:42.129" starttime="20170903 17:07:42.126"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>packageTypes</arg>
</arguments>
<msg timestamp="20170903 17:07:42.129" level="INFO">Executing : Table Must Exist  |  packageTypes </msg>
<msg timestamp="20170903 17:07:42.130" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='packageTypes' </msg>
<status status="PASS" endtime="20170903 17:07:42.131" starttime="20170903 17:07:42.129"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions</arg>
</arguments>
<msg timestamp="20170903 17:07:42.132" level="INFO">Executing : Table Must Exist  |  sessions </msg>
<msg timestamp="20170903 17:07:42.132" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sessions' </msg>
<status status="PASS" endtime="20170903 17:07:42.135" starttime="20170903 17:07:42.132"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions_history</arg>
</arguments>
<msg timestamp="20170903 17:07:42.135" level="INFO">Executing : Table Must Exist  |  sessions_history </msg>
<msg timestamp="20170903 17:07:42.135" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sessions_history' </msg>
<status status="PASS" endtime="20170903 17:07:42.136" starttime="20170903 17:07:42.135"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes</arg>
</arguments>
<msg timestamp="20170903 17:07:42.137" level="INFO">Executing : Table Must Exist  |  sharedAppTypes </msg>
<msg timestamp="20170903 17:07:42.137" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedAppTypes' </msg>
<status status="PASS" endtime="20170903 17:07:42.138" starttime="20170903 17:07:42.137"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes_history</arg>
</arguments>
<msg timestamp="20170903 17:07:42.138" level="INFO">Executing : Table Must Exist  |  sharedAppTypes_history </msg>
<msg timestamp="20170903 17:07:42.139" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedAppTypes_history' </msg>
<status status="PASS" endtime="20170903 17:07:42.140" starttime="20170903 17:07:42.138"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes</arg>
</arguments>
<msg timestamp="20170903 17:07:42.141" level="INFO">Executing : Table Must Exist  |  sharedPackageTypes </msg>
<msg timestamp="20170903 17:07:42.141" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedPackageTypes' </msg>
<status status="PASS" endtime="20170903 17:07:42.143" starttime="20170903 17:07:42.141"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes_history</arg>
</arguments>
<msg timestamp="20170903 17:07:42.144" level="INFO">Executing : Table Must Exist  |  sharedPackageTypes_history </msg>
<msg timestamp="20170903 17:07:42.144" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedPackageTypes_history' </msg>
<status status="PASS" endtime="20170903 17:07:42.147" starttime="20170903 17:07:42.143"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>statuses</arg>
</arguments>
<msg timestamp="20170903 17:07:42.148" level="INFO">Executing : Table Must Exist  |  statuses </msg>
<msg timestamp="20170903 17:07:42.148" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='statuses' </msg>
<status status="PASS" endtime="20170903 17:07:42.154" starttime="20170903 17:07:42.147"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks</arg>
</arguments>
<msg timestamp="20170903 17:07:42.155" level="INFO">Executing : Table Must Exist  |  tasks </msg>
<msg timestamp="20170903 17:07:42.156" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='tasks' </msg>
<status status="PASS" endtime="20170903 17:07:42.162" starttime="20170903 17:07:42.155"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks_history</arg>
</arguments>
<msg timestamp="20170903 17:07:42.163" level="INFO">Executing : Table Must Exist  |  tasks_history </msg>
<msg timestamp="20170903 17:07:42.163" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='tasks_history' </msg>
<status status="PASS" endtime="20170903 17:07:42.169" starttime="20170903 17:07:42.162"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces</arg>
</arguments>
<msg timestamp="20170903 17:07:42.170" level="INFO">Executing : Table Must Exist  |  traces </msg>
<msg timestamp="20170903 17:07:42.170" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='traces' </msg>
<status status="PASS" endtime="20170903 17:07:42.176" starttime="20170903 17:07:42.169"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces_history</arg>
</arguments>
<msg timestamp="20170903 17:07:42.177" level="INFO">Executing : Table Must Exist  |  traces_history </msg>
<msg timestamp="20170903 17:07:42.177" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='traces_history' </msg>
<status status="PASS" endtime="20170903 17:07:42.180" starttime="20170903 17:07:42.176"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>userRights</arg>
</arguments>
<msg timestamp="20170903 17:07:42.181" level="INFO">Executing : Table Must Exist  |  userRights </msg>
<msg timestamp="20170903 17:07:42.181" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='userRights' </msg>
<status status="PASS" endtime="20170903 17:07:42.184" starttime="20170903 17:07:42.180"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups</arg>
</arguments>
<msg timestamp="20170903 17:07:42.185" level="INFO">Executing : Table Must Exist  |  usergroups </msg>
<msg timestamp="20170903 17:07:42.185" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='usergroups' </msg>
<status status="PASS" endtime="20170903 17:07:42.188" starttime="20170903 17:07:42.184"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups_history</arg>
</arguments>
<msg timestamp="20170903 17:07:42.189" level="INFO">Executing : Table Must Exist  |  usergroups_history </msg>
<msg timestamp="20170903 17:07:42.189" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='usergroups_history' </msg>
<status status="PASS" endtime="20170903 17:07:42.192" starttime="20170903 17:07:42.188"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users</arg>
</arguments>
<msg timestamp="20170903 17:07:42.193" level="INFO">Executing : Table Must Exist  |  users </msg>
<msg timestamp="20170903 17:07:42.193" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='users' </msg>
<status status="PASS" endtime="20170903 17:07:42.196" starttime="20170903 17:07:42.192"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users_history</arg>
</arguments>
<msg timestamp="20170903 17:07:42.197" level="INFO">Executing : Table Must Exist  |  users_history </msg>
<msg timestamp="20170903 17:07:42.197" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='users_history' </msg>
<status status="PASS" endtime="20170903 17:07:42.199" starttime="20170903 17:07:42.197"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>version</arg>
</arguments>
<msg timestamp="20170903 17:07:42.200" level="INFO">Executing : Table Must Exist  |  version </msg>
<msg timestamp="20170903 17:07:42.204" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='version' </msg>
<status status="PASS" endtime="20170903 17:07:42.207" starttime="20170903 17:07:42.199"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>versions</arg>
</arguments>
<msg timestamp="20170903 17:07:42.207" level="INFO">Executing : Table Must Exist  |  versions </msg>
<msg timestamp="20170903 17:07:42.212" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='versions' </msg>
<status status="PASS" endtime="20170903 17:07:42.214" starttime="20170903 17:07:42.207"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps</arg>
</arguments>
<msg timestamp="20170903 17:07:42.215" level="INFO">Executing : Table Must Exist  |  view_apps </msg>
<msg timestamp="20170903 17:07:42.215" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps' </msg>
<status status="PASS" endtime="20170903 17:07:42.222" starttime="20170903 17:07:42.215"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps_for_offering</arg>
</arguments>
<msg timestamp="20170903 17:07:42.222" level="INFO">Executing : Table Must Exist  |  view_apps_for_offering </msg>
<msg timestamp="20170903 17:07:42.223" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps_for_offering' </msg>
<status status="PASS" endtime="20170903 17:07:42.228" starttime="20170903 17:07:42.222"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps_for_offering_with_file_sizes</arg>
</arguments>
<msg timestamp="20170903 17:07:42.229" level="INFO">Executing : Table Must Exist  |  view_apps_for_offering_with_file_sizes </msg>
<msg timestamp="20170903 17:07:42.229" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps_for_offering_with_file_sizes' </msg>
<status status="PASS" endtime="20170903 17:07:42.232" starttime="20170903 17:07:42.229"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_datas</arg>
</arguments>
<msg timestamp="20170903 17:07:42.233" level="INFO">Executing : Table Must Exist  |  view_datas </msg>
<msg timestamp="20170903 17:07:42.233" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_datas' </msg>
<status status="PASS" endtime="20170903 17:07:42.238" starttime="20170903 17:07:42.233"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_executables</arg>
</arguments>
<msg timestamp="20170903 17:07:42.238" level="INFO">Executing : Table Must Exist  |  view_executables </msg>
<msg timestamp="20170903 17:07:42.238" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_executables' </msg>
<status status="PASS" endtime="20170903 17:07:42.244" starttime="20170903 17:07:42.238"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_groups</arg>
</arguments>
<msg timestamp="20170903 17:07:42.245" level="INFO">Executing : Table Must Exist  |  view_groups </msg>
<msg timestamp="20170903 17:07:42.245" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_groups' </msg>
<status status="PASS" endtime="20170903 17:07:42.247" starttime="20170903 17:07:42.245"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts</arg>
</arguments>
<msg timestamp="20170903 17:07:42.248" level="INFO">Executing : Table Must Exist  |  view_hosts </msg>
<msg timestamp="20170903 17:07:42.249" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts' </msg>
<status status="PASS" endtime="20170903 17:07:42.252" starttime="20170903 17:07:42.248"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_deployable</arg>
</arguments>
<msg timestamp="20170903 17:07:42.253" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_deployable </msg>
<msg timestamp="20170903 17:07:42.253" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_deployable' </msg>
<status status="PASS" endtime="20170903 17:07:42.259" starttime="20170903 17:07:42.253"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_deployable_and_shared</arg>
</arguments>
<msg timestamp="20170903 17:07:42.260" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_deployable_and_shared </msg>
<msg timestamp="20170903 17:07:42.260" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_deployable_and_shared' </msg>
<status status="PASS" endtime="20170903 17:07:42.265" starttime="20170903 17:07:42.260"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_shared</arg>
</arguments>
<msg timestamp="20170903 17:07:42.266" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_shared </msg>
<msg timestamp="20170903 17:07:42.266" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_shared' </msg>
<status status="PASS" endtime="20170903 17:07:42.273" starttime="20170903 17:07:42.266"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_sessions</arg>
</arguments>
<msg timestamp="20170903 17:07:42.273" level="INFO">Executing : Table Must Exist  |  view_sessions </msg>
<msg timestamp="20170903 17:07:42.273" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_sessions' </msg>
<status status="PASS" endtime="20170903 17:07:42.280" starttime="20170903 17:07:42.273"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_tasks</arg>
</arguments>
<msg timestamp="20170903 17:07:42.281" level="INFO">Executing : Table Must Exist  |  view_tasks </msg>
<msg timestamp="20170903 17:07:42.281" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_tasks' </msg>
<status status="PASS" endtime="20170903 17:07:42.283" starttime="20170903 17:07:42.281"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_traces</arg>
</arguments>
<msg timestamp="20170903 17:07:42.283" level="INFO">Executing : Table Must Exist  |  view_traces </msg>
<msg timestamp="20170903 17:07:42.283" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_traces' </msg>
<status status="PASS" endtime="20170903 17:07:42.288" starttime="20170903 17:07:42.283"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_usergroups</arg>
</arguments>
<msg timestamp="20170903 17:07:42.289" level="INFO">Executing : Table Must Exist  |  view_usergroups </msg>
<msg timestamp="20170903 17:07:42.289" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_usergroups' </msg>
<status status="PASS" endtime="20170903 17:07:42.290" starttime="20170903 17:07:42.288"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users</arg>
</arguments>
<msg timestamp="20170903 17:07:42.291" level="INFO">Executing : Table Must Exist  |  view_users </msg>
<msg timestamp="20170903 17:07:42.291" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users' </msg>
<status status="PASS" endtime="20170903 17:07:42.296" starttime="20170903 17:07:42.290"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_apps</arg>
</arguments>
<msg timestamp="20170903 17:07:42.297" level="INFO">Executing : Table Must Exist  |  view_users_apps </msg>
<msg timestamp="20170903 17:07:42.297" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_apps' </msg>
<status status="PASS" endtime="20170903 17:07:42.298" starttime="20170903 17:07:42.296"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_datas</arg>
</arguments>
<msg timestamp="20170903 17:07:42.299" level="INFO">Executing : Table Must Exist  |  view_users_datas </msg>
<msg timestamp="20170903 17:07:42.299" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_datas' </msg>
<status status="PASS" endtime="20170903 17:07:42.300" starttime="20170903 17:07:42.298"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_groups</arg>
</arguments>
<msg timestamp="20170903 17:07:42.301" level="INFO">Executing : Table Must Exist  |  view_users_groups </msg>
<msg timestamp="20170903 17:07:42.301" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_groups' </msg>
<status status="PASS" endtime="20170903 17:07:42.304" starttime="20170903 17:07:42.301"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_hosts</arg>
</arguments>
<msg timestamp="20170903 17:07:42.304" level="INFO">Executing : Table Must Exist  |  view_users_hosts </msg>
<msg timestamp="20170903 17:07:42.304" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_hosts' </msg>
<status status="PASS" endtime="20170903 17:07:42.306" starttime="20170903 17:07:42.304"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_sessions</arg>
</arguments>
<msg timestamp="20170903 17:07:42.307" level="INFO">Executing : Table Must Exist  |  view_users_sessions </msg>
<msg timestamp="20170903 17:07:42.307" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_sessions' </msg>
<status status="PASS" endtime="20170903 17:07:42.309" starttime="20170903 17:07:42.307"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_tasks</arg>
</arguments>
<msg timestamp="20170903 17:07:42.309" level="INFO">Executing : Table Must Exist  |  view_users_tasks </msg>
<msg timestamp="20170903 17:07:42.309" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_tasks' </msg>
<status status="PASS" endtime="20170903 17:07:42.313" starttime="20170903 17:07:42.309"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_traces</arg>
</arguments>
<msg timestamp="20170903 17:07:42.313" level="INFO">Executing : Table Must Exist  |  view_users_traces </msg>
<msg timestamp="20170903 17:07:42.313" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_traces' </msg>
<status status="PASS" endtime="20170903 17:07:42.315" starttime="20170903 17:07:42.313"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_usergroups</arg>
</arguments>
<msg timestamp="20170903 17:07:42.316" level="INFO">Executing : Table Must Exist  |  view_users_usergroups </msg>
<msg timestamp="20170903 17:07:42.316" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_usergroups' </msg>
<status status="PASS" endtime="20170903 17:07:42.328" starttime="20170903 17:07:42.315"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_users</arg>
</arguments>
<msg timestamp="20170903 17:07:42.329" level="INFO">Executing : Table Must Exist  |  view_users_users </msg>
<msg timestamp="20170903 17:07:42.329" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_users' </msg>
<status status="PASS" endtime="20170903 17:07:42.331" starttime="20170903 17:07:42.328"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_works</arg>
</arguments>
<msg timestamp="20170903 17:07:42.331" level="INFO">Executing : Table Must Exist  |  view_users_works </msg>
<msg timestamp="20170903 17:07:42.331" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_works' </msg>
<status status="PASS" endtime="20170903 17:07:42.333" starttime="20170903 17:07:42.331"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works</arg>
</arguments>
<msg timestamp="20170903 17:07:42.334" level="INFO">Executing : Table Must Exist  |  view_works </msg>
<msg timestamp="20170903 17:07:42.334" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works' </msg>
<status status="PASS" endtime="20170903 17:07:42.335" starttime="20170903 17:07:42.334"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works_for_billing</arg>
</arguments>
<msg timestamp="20170903 17:07:42.336" level="INFO">Executing : Table Must Exist  |  view_works_for_billing </msg>
<msg timestamp="20170903 17:07:42.336" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works_for_billing' </msg>
<status status="PASS" endtime="20170903 17:07:42.337" starttime="20170903 17:07:42.336"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works_for_billing_with_file_sizes</arg>
</arguments>
<msg timestamp="20170903 17:07:42.338" level="INFO">Executing : Table Must Exist  |  view_works_for_billing_with_file_sizes </msg>
<msg timestamp="20170903 17:07:42.338" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works_for_billing_with_file_sizes' </msg>
<status status="PASS" endtime="20170903 17:07:42.339" starttime="20170903 17:07:42.338"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works</arg>
</arguments>
<msg timestamp="20170903 17:07:42.340" level="INFO">Executing : Table Must Exist  |  works </msg>
<msg timestamp="20170903 17:07:42.340" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='works' </msg>
<status status="PASS" endtime="20170903 17:07:42.341" starttime="20170903 17:07:42.339"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works_history</arg>
</arguments>
<msg timestamp="20170903 17:07:42.341" level="INFO">Executing : Table Must Exist  |  works_history </msg>
<msg timestamp="20170903 17:07:42.342" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='works_history' </msg>
<status status="PASS" endtime="20170903 17:07:42.343" starttime="20170903 17:07:42.341"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170903 17:07:42.345" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170903 17:07:42.345" starttime="20170903 17:07:42.344"></status>
</kw>
<status status="PASS" endtime="20170903 17:07:42.350" starttime="20170903 17:07:42.343"></status>
</kw>
<status status="PASS" endtime="20170903 17:07:42.356" starttime="20170903 17:07:42.063"></status>
</kw>
<status status="PASS" endtime="20170903 17:07:42.356" starttime="20170903 17:07:42.061"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>TODO ping XWtremWeb server up</arg>
</arguments>
<msg timestamp="20170903 17:07:42.357" level="INFO">TODO ping XWtremWeb server up</msg>
<status status="PASS" endtime="20170903 17:07:42.357" starttime="20170903 17:07:42.357"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>TODO ping XWtremWeb worker up before one test</arg>
</arguments>
<msg timestamp="20170903 17:07:42.358" level="INFO">TODO ping XWtremWeb worker up before one test</msg>
<status status="PASS" endtime="20170903 17:07:42.358" starttime="20170903 17:07:42.357"></status>
</kw>
<kw name="Delete Fonctionnal Xtremweb Tables" library="MySql">
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170903 17:07:42.359" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170903 17:07:42.365" starttime="20170903 17:07:42.359"></status>
</kw>
<status status="PASS" endtime="20170903 17:07:42.365" starttime="20170903 17:07:42.358"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps</arg>
</arguments>
<msg timestamp="20170903 17:07:42.366" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM apps; </msg>
<status status="PASS" endtime="20170903 17:07:42.373" starttime="20170903 17:07:42.366"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps_history</arg>
</arguments>
<msg timestamp="20170903 17:07:42.373" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM apps_history; </msg>
<status status="PASS" endtime="20170903 17:07:42.375" starttime="20170903 17:07:42.373"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas</arg>
</arguments>
<msg timestamp="20170903 17:07:42.376" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM datas; </msg>
<status status="PASS" endtime="20170903 17:07:42.381" starttime="20170903 17:07:42.375"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas_history</arg>
</arguments>
<msg timestamp="20170903 17:07:42.381" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM datas_history; </msg>
<status status="PASS" endtime="20170903 17:07:42.382" starttime="20170903 17:07:42.381"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables</arg>
</arguments>
<msg timestamp="20170903 17:07:42.382" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM executables; </msg>
<status status="PASS" endtime="20170903 17:07:42.383" starttime="20170903 17:07:42.382"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables_history</arg>
</arguments>
<msg timestamp="20170903 17:07:42.383" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM executables_history; </msg>
<status status="PASS" endtime="20170903 17:07:42.384" starttime="20170903 17:07:42.383"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups</arg>
</arguments>
<msg timestamp="20170903 17:07:42.384" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM groups; </msg>
<status status="PASS" endtime="20170903 17:07:42.388" starttime="20170903 17:07:42.384"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups_history</arg>
</arguments>
<msg timestamp="20170903 17:07:42.389" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM groups_history; </msg>
<status status="PASS" endtime="20170903 17:07:42.389" starttime="20170903 17:07:42.388"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts</arg>
</arguments>
<msg timestamp="20170903 17:07:42.390" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM hosts; </msg>
<status status="PASS" endtime="20170903 17:07:42.390" starttime="20170903 17:07:42.389"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts_history</arg>
</arguments>
<msg timestamp="20170903 17:07:42.391" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM hosts_history; </msg>
<status status="PASS" endtime="20170903 17:07:42.392" starttime="20170903 17:07:42.390"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships</arg>
</arguments>
<msg timestamp="20170903 17:07:42.393" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM memberships; </msg>
<status status="PASS" endtime="20170903 17:07:42.399" starttime="20170903 17:07:42.393"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships_history</arg>
</arguments>
<msg timestamp="20170903 17:07:42.401" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM memberships_history; </msg>
<status status="PASS" endtime="20170903 17:07:42.405" starttime="20170903 17:07:42.401"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions</arg>
</arguments>
<msg timestamp="20170903 17:07:42.406" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sessions; </msg>
<status status="PASS" endtime="20170903 17:07:42.410" starttime="20170903 17:07:42.405"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions_history</arg>
</arguments>
<msg timestamp="20170903 17:07:42.411" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sessions_history; </msg>
<status status="PASS" endtime="20170903 17:07:42.417" starttime="20170903 17:07:42.410"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes</arg>
</arguments>
<msg timestamp="20170903 17:07:42.418" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedAppTypes; </msg>
<status status="PASS" endtime="20170903 17:07:42.420" starttime="20170903 17:07:42.418"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes_history</arg>
</arguments>
<msg timestamp="20170903 17:07:42.422" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedAppTypes_history; </msg>
<status status="PASS" endtime="20170903 17:07:42.425" starttime="20170903 17:07:42.421"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes</arg>
</arguments>
<msg timestamp="20170903 17:07:42.426" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedPackageTypes; </msg>
<status status="PASS" endtime="20170903 17:07:42.429" starttime="20170903 17:07:42.425"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes_history</arg>
</arguments>
<msg timestamp="20170903 17:07:42.430" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedPackageTypes_history; </msg>
<status status="PASS" endtime="20170903 17:07:42.432" starttime="20170903 17:07:42.430"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks</arg>
</arguments>
<msg timestamp="20170903 17:07:42.433" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM tasks; </msg>
<status status="PASS" endtime="20170903 17:07:42.433" starttime="20170903 17:07:42.432"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks_history</arg>
</arguments>
<msg timestamp="20170903 17:07:42.434" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM tasks_history; </msg>
<status status="PASS" endtime="20170903 17:07:42.436" starttime="20170903 17:07:42.434"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces</arg>
</arguments>
<msg timestamp="20170903 17:07:42.437" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM traces; </msg>
<status status="PASS" endtime="20170903 17:07:42.438" starttime="20170903 17:07:42.437"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces_history</arg>
</arguments>
<msg timestamp="20170903 17:07:42.438" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM traces_history; </msg>
<status status="PASS" endtime="20170903 17:07:42.444" starttime="20170903 17:07:42.438"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups</arg>
</arguments>
<msg timestamp="20170903 17:07:42.445" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM usergroups; </msg>
<status status="PASS" endtime="20170903 17:07:42.446" starttime="20170903 17:07:42.444"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups_history</arg>
</arguments>
<msg timestamp="20170903 17:07:42.447" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM usergroups_history; </msg>
<status status="PASS" endtime="20170903 17:07:42.448" starttime="20170903 17:07:42.446"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users_history</arg>
</arguments>
<msg timestamp="20170903 17:07:42.449" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM users_history; </msg>
<status status="PASS" endtime="20170903 17:07:42.458" starttime="20170903 17:07:42.448"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works</arg>
</arguments>
<msg timestamp="20170903 17:07:42.459" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM works; </msg>
<status status="PASS" endtime="20170903 17:07:42.461" starttime="20170903 17:07:42.459"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works_history</arg>
</arguments>
<msg timestamp="20170903 17:07:42.462" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM works_history; </msg>
<status status="PASS" endtime="20170903 17:07:42.463" starttime="20170903 17:07:42.461"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170903 17:07:42.464" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170903 17:07:42.465" starttime="20170903 17:07:42.463"></status>
</kw>
<status status="PASS" endtime="20170903 17:07:42.465" starttime="20170903 17:07:42.463"></status>
</kw>
<status status="PASS" endtime="20170903 17:07:42.465" starttime="20170903 17:07:42.358"></status>
</kw>
<status status="PASS" endtime="20170903 17:07:42.465" starttime="20170903 17:07:42.061"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>TODO</arg>
</arguments>
<msg timestamp="20170903 17:07:42.467" level="INFO">TODO</msg>
<status status="PASS" endtime="20170903 17:07:42.467" starttime="20170903 17:07:42.467"></status>
</kw>
<kw type="teardown" name="End XWtremWeb Command Test" library="XWCommon">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Nothing to do</arg>
</arguments>
<msg timestamp="20170903 17:07:42.473" level="INFO">Nothing to do</msg>
<status status="PASS" endtime="20170903 17:07:42.473" starttime="20170903 17:07:42.473"></status>
</kw>
<status status="PASS" endtime="20170903 17:07:42.473" starttime="20170903 17:07:42.472"></status>
</kw>
<tags>
<tag>CommandLine Tests</tag>
</tags>
<status status="PASS" endtime="20170903 17:07:42.474" critical="yes" starttime="20170903 17:07:42.058"></status>
</test>
<kw type="teardown" name="Stop XWtremWeb Server And XWtremWeb Worker" library="XWCommon">
<kw name="Stop XtremWeb Server" library="XWServer">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${SERVER_PROCESS}</arg>
</arguments>
<msg timestamp="20170903 17:07:42.481" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20170903 17:07:42.586" level="INFO">Process completed.</msg>
<status status="PASS" endtime="20170903 17:07:42.586" starttime="20170903 17:07:42.480"></status>
</kw>
<status status="PASS" endtime="20170903 17:07:42.586" starttime="20170903 17:07:42.480"></status>
</kw>
<kw name="Log XtremWeb Server" library="XWCommon">
<kw name="Log XtremWeb Process Log File" library="XWServer">
<kw name="Log File" library="OperatingSystem">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<msg timestamp="20170903 17:07:42.588" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170903 17:07:42.589" level="INFO">Sun Sep  3 17:07:26 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : checking launch url
Sun Sep  3 17:07:26 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] WARNING : no launcher URL defined
Sun Sep  3 17:07:26 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : launching SmartSockets hub
[03/Sep/2017:17:07:29 +0000] [main_1] ERROR : setRole : role redefined ?! (was SERVER)
[03/Sep/2017:17:07:29 +0000] [xtremweb.database.DBConnPoolThread_main_1] INFO : Connection to database jdbc:mysql://localhost/xtremweb is ok, 70 created
[03/Sep/2017:17:07:30 +0000] [xtremweb.dispatcher.DBInterface_main_1] WARN : Can't retrieve any app
[03/Sep/2017:17:07:30 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't create ProxyValidator
[03/Sep/2017:17:07:30 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.io.FileNotFoundException: /tmp/castore (No such file or directory) (/tmp/castore (No such file or directory))
[03/Sep/2017:17:07:30 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't add CA certificates to keystore
[03/Sep/2017:17:07:30 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.lang.NullPointerException (null)
[03/Sep/2017:17:07:30 +0000] [xtremweb.dispatcher.HashTaskSet_TaskSet_14] INFO : TaskSet started (300000)
[03/Sep/2017:17:07:31 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : still waiting task set...
[03/Sep/2017:17:07:31 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : UDP server not started
[03/Sep/2017:17:07:31 +0000] [xtremweb.communications.TCPServer_TCPServerNIO_15] INFO : started, listening on port : 4321
log4j:WARN No appenders could be found for logger (org.eclipse.jetty.util.log).
log4j:WARN Please initialize the log4j system properly.
log4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.
[03/Sep/2017:17:07:31 +0000] [xtremweb.communications.HTTPServer_main_1] INFO : started, listening on port : 9443
[03/Sep/2017:17:07:31 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : FACEBOOK : java.net.MalformedURLException: no protocol: 
[03/Sep/2017:17:07:31 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : GOOGLE : java.net.MalformedURLException: no protocol: 
[03/Sep/2017:17:07:31 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : TWITTER : java.net.MalformedURLException: no protocol: 
[03/Sep/2017:17:07:31 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : YAHOO : java.net.MalformedURLException: no protocol: 
[03/Sep/2017:17:07:31 +0000] [main_1] ERROR : Can't add new entry to keystore
[03/Sep/2017:17:07:31 +0000] [main_1] WARN : javax.net.ssl.SSLHandshakeException: sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target (sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target)
[03/Sep/2017:17:07:31 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : XWHEP Dispatcher(10.6.0-head) started [Sun Sep 03 17:07:31 UTC 2017]
[03/Sep/2017:17:07:31 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : DB vendor  = mysql
[03/Sep/2017:17:07:31 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : mileStone  = 
[03/Sep/2017:17:07:31 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Time out   = 15000
[03/Sep/2017:17:07:31 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Disk opt'd = true
[03/Sep/2017:17:07:31 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Net  opt'd = true
[03/Sep/2017:17:07:31 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : NIO        = true
XWHEP Dispatcher started  Sun Sep 03 17:07:31 UTC 2017
Name             : vagrant-ubuntu-trusty-64
Version          : 10.6.0-head
Identity         : 
XWRole           : SERVER
Started on       : Sun Sep 03 17:07:29 UTC 2017
Scheduler        : xtremweb.dispatcher.MatchingScheduler
SmartSockets hub : 172.28.128.3/172.17.0.1/10.0.2.15-4329#b2.1e.e0.de.ca.7c.00.00.14.16.02.42.ef.10.3f.c1~vagrant
Server HTTP      : true
Alive            : 300
Alive time out   : 900
Polling time out : 15000
Optimize zip     : true
Optimize network : true
NIO              : true
Comm layer       : xtremweb.communications.TCPClient
Socket time out  : 60000
Socket retries   : 50
Max connections  : 200
TCP port         : 4321
UDP port         : 4323
HTPP  port       : 80
HTPPS port       : 9443
Sun RPC interposition port : 4328
Sandbox path : /usr/bin/lxc
Sandbox launch args : 
Host &lt;host&gt;&lt;uid&gt;7aa94bfa-caed-4c57-be20-3360765fe436&lt;/uid&gt;&lt;accessrights&gt;0x755&lt;/accessrights&gt;&lt;name&gt;vagrant-ubuntu-trusty-64&lt;/name&gt;&lt;cpuload&gt;50&lt;/cpuload&gt;&lt;natedipaddr&gt;10.0.2.15&lt;/natedipaddr&gt;&lt;ipaddr&gt;10.0.2.15&lt;/ipaddr&gt;&lt;hwaddr&gt;&lt;/hwaddr&gt;&lt;timezone&gt;Etc/UTC&lt;/timezone&gt;&lt;os&gt;LINUX&lt;/os&gt;&lt;osversion&gt;3.13.0-129-generic&lt;/osversion&gt;&lt;javaversion&gt;1.8.0_141&lt;/javaversion&gt;&lt;javadatamodel&gt;64&lt;/javadatamodel&gt;&lt;cputype&gt;AMD64&lt;/cputype&gt;&lt;cpunb&gt;1&lt;/cpunb&gt;&lt;cpumodel&gt;unknown&lt;/cpumodel&gt;&lt;cpuspeed&gt;0&lt;/cpuspeed&gt;&lt;totalmem&gt;0&lt;/totalmem&gt;&lt;totalswap&gt;0&lt;/totalswap&gt;&lt;totaltmp&gt;40284&lt;/totaltmp&gt;&lt;freetmp&gt;37287&lt;/freetmp&gt;&lt;project&gt;&lt;/project&gt;&lt;active&gt;true&lt;/active&gt;&lt;incomingconnections&gt;false&lt;/incomingconnections&gt;&lt;available&gt;false&lt;/available&gt;&lt;pilotjob&gt;false&lt;/pilotjob&gt;&lt;sgid&gt;&lt;/sgid&gt;&lt;timeout&gt;15000&lt;/timeout&gt;&lt;traces&gt;false&lt;/traces&gt;&lt;acceptbin&gt;false&lt;/acceptbin&gt;&lt;version&gt;10.6.0-head&lt;/version&gt;&lt;/host&gt;
[03/Sep/2017:17:07:31 +0000] [xtremweb.communications.HTTPServer_HTTPServer_218] INFO : started, listening on port : 9443
[03/Sep/2017:17:07:38 +0000] [xtremweb.common.StreamIO_TCPHandler_17] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[03/Sep/2017:17:07:38 +0000] [xtremweb.common.StreamIO_TCPHandler_18] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[03/Sep/2017:17:07:40 +0000] [xtremweb.common.StreamIO_TCPHandler_19] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[03/Sep/2017:17:07:42 +0000] [xtremweb.communications.TCPServer_TCPServerNIO_15] WARN : java.net.SocketException: Socket closed (Socket closed)
</msg>
<status status="PASS" endtime="20170903 17:07:42.589" starttime="20170903 17:07:42.587"></status>
</kw>
<status status="PASS" endtime="20170903 17:07:42.589" starttime="20170903 17:07:42.587"></status>
</kw>
<status status="PASS" endtime="20170903 17:07:42.589" starttime="20170903 17:07:42.586"></status>
</kw>
<kw name="Stop XtremWeb Worker" library="XWWorker">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Stop XtremWeb Worker</arg>
</arguments>
<msg timestamp="20170903 17:07:42.590" level="INFO">Stop XtremWeb Worker</msg>
<status status="PASS" endtime="20170903 17:07:42.590" starttime="20170903 17:07:42.590"></status>
</kw>
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${WORKER_PROCESS}</arg>
</arguments>
<msg timestamp="20170903 17:07:42.590" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20170903 17:07:42.592" level="INFO">Process completed.</msg>
<status status="PASS" endtime="20170903 17:07:42.592" starttime="20170903 17:07:42.590"></status>
</kw>
<status status="PASS" endtime="20170903 17:07:42.592" starttime="20170903 17:07:42.589"></status>
</kw>
<status status="PASS" endtime="20170903 17:07:42.593" starttime="20170903 17:07:42.480"></status>
</kw>
<doc>All XtremWeb commands line tests</doc>
<status status="PASS" endtime="20170903 17:07:42.593" starttime="20170903 17:01:09.779"></status>
</suite>
<status status="PASS" endtime="20170903 17:07:42.602" starttime="20170903 16:43:57.656"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="14">Critical Tests</stat>
<stat fail="0" pass="14">All Tests</stat>
</total>
<tag>
<stat fail="0" pass="11">CommandLine Tests</stat>
<stat fail="0" pass="2">Smart contract Tests</stat>
<stat fail="0" pass="1">Web Tests</stat>
</tag>
<suite>
<stat fail="0" id="s1" name="Tests" pass="14">Tests</stat>
<stat fail="0" id="s1-s1" name="interfaceSuite" pass="1">Tests.interfaceSuite</stat>
<stat fail="0" id="s1-s2" name="truffleTestsOnLocalGeth" pass="1">Tests.truffleTestsOnLocalGeth</stat>
<stat fail="0" id="s1-s3" name="truffleTestsOnTestrpc" pass="1">Tests.truffleTestsOnTestrpc</stat>
<stat fail="0" id="s1-s4" name="xwcommandsSuite" pass="11">Tests.xwcommandsSuite</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
