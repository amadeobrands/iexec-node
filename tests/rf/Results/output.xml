<?xml version="1.0" encoding="UTF-8"?>
<robot generated="20170913 18:46:28.314" generator="Robot 3.0.2 (Python 2.7.6 on linux2)">
<suite source="/home/vagrant/iexecdev/iexec-node/tests/rf/Tests" id="s1" name="Tests">
<suite source="/home/vagrant/iexecdev/iexec-node/tests/rf/Tests/helloWorldSuiteOnLocalGeth.robot" id="s1-s1" name="helloWorldSuiteOnLocalGeth">
<kw type="setup" name="Start Oracle Bridge And Xtremweb">
<kw name="Prepare And Start XWtremWeb Server And XWtremWeb Worker" library="XWCommon">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${XW_FORCE_GIT_CLONE}' == 'true'</arg>
<arg>Git Clone XWtremWeb</arg>
</arguments>
<status status="PASS" endtime="20170913 18:46:28.461" starttime="20170913 18:46:28.460"></status>
</kw>
<kw name="Compile XWtremWeb" library="XWCommon">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd ${BUILD_PATH} &amp;&amp; make clean &amp;&amp; make</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${compile_result}</var>
</assign>
<msg timestamp="20170913 18:46:28.461" level="INFO">Starting process:
cd ./xtremweb-hep/build &amp;&amp; make clean &amp;&amp; make</msg>
<msg timestamp="20170913 18:46:28.464" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170913 18:47:00.292" level="INFO">Process completed.</msg>
<msg timestamp="20170913 18:47:00.292" level="INFO">${compile_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170913 18:47:00.292" starttime="20170913 18:46:28.461"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${compile_result.stderr}</arg>
</arguments>
<msg timestamp="20170913 18:47:00.293" level="INFO"></msg>
<status status="PASS" endtime="20170913 18:47:00.293" starttime="20170913 18:47:00.292"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${compile_result.stdout}</arg>
</arguments>
<msg timestamp="20170913 18:47:00.293" level="INFO">./build.sh -f build.xml clean 
Buildfile: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/build.xml

tstamp:
[echoproperties] #Ant properties
[echoproperties] #Wed Sep 13 18:46:28 UTC 2017
[echoproperties] v.branch=head
[echoproperties] v.build=201709131846
[echoproperties] v.major=10
[echoproperties] v.micro=0
[echoproperties] v.minor=6

version:

clean:
   [delete] Deleting: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/.build
   [delete] Deleting directory /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes
     [exec] mkdir: cannot create directory ‘../../build/classes/obj/’: No such file or directory
     [exec] make[1]: Entering directory `/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/natif'
     [exec] rm -f XWInterruptsImpl.h PortMapper.h XWUtilImpl.h XWTracerImpl.h
     [exec] make[1]: Leaving directory `/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/natif'

BUILD SUCCESSFUL
Total time: 2 seconds
./build.sh distrib 
Buildfile: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/build.xml

tstamp:
[echoproperties] #Ant properties
[echoproperties] #Wed Sep 13 18:46:31 UTC 2017
[echoproperties] v.branch=head
[echoproperties] v.build=201709131846
[echoproperties] v.major=10
[echoproperties] v.micro=0
[echoproperties] v.minor=6

version:

configure:
     [echo] 
     [echo]       ant version = Apache Ant(TM) version 1.8.4 compiled on May 22 2012
     [echo] 
     [echo]       os         = Linux
     [echo]       os.arch    = amd64
     [echo]       target     = Linux
     [echo]       xwarch     = amd64
     [echo]       xwsuffix   = linux-amd64
     [echo]       debug      = true
     [echo]       debuglevel = source,lines
     [echo] 
     [echo]         cross=${cross.prefix}
     [echo]         target java home =${cross.java.home}
     [echo]     	target           =Linux
     [echo]     	xwversion=10.6.0

templates:
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common

prepare:
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes/obj
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes/obj/linux-amd64
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes/jni
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes/xwclasses
     [echo] 
     [echo]       classpath=/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/test:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/JOpenId-1.08.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/JSON-java.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/MinML.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/activation.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/antlr.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/attic-all-0.3.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/bcpkix-jdk15on-151.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/bcprov-jdk15on-151.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/bcprov-jdk16-140.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/commons-codec-1.3.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/commons-fileupload-1.2.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/commons-httpclient-3.0.1.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/commons-io-1.3.2.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/commons-logging-1.1.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/ibis-util-2.1.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/jcert.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/jetty-http-9.3.8.v20160314.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/jetty-io-9.3.8.v20160314.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/jetty-server-9.3.8.v20160314.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/jetty-util-9.3.8.v20160314.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/jose4j-0.5.5.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/junit-4.10.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/log4j-1.2.17.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/mail.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/mysql-connector-java-5.1.6-bin.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/scribejava-apis-3.3.1-SNAPSHOT.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/scribejava-core-3.3.1-SNAPSHOT.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/servlet-api-3.1.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/slf4j-api-1.7.2.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/slf4j-log4j12-1.7.2.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/smartsockets-1.4.jar
     [echo]     

common:
    [javac] Compiling 277 source files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/XWTools.java:61: warning: [deprecation] HTTPOpenIdHandler in xtremweb.dispatcher has been deprecated
    [javac] import xtremweb.dispatcher.HTTPOpenIdHandler;
    [javac]                           ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/security/ACLConnect.java:36: warning: AclEntryImpl is internal proprietary API and may be removed in a future release
    [javac] import sun.security.acl.AclEntryImpl;
    [javac]                        ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/security/ACLConnect.java:37: warning: AclImpl is internal proprietary API and may be removed in a future release
    [javac] import sun.security.acl.AclImpl;
    [javac]                        ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/security/ACLConnect.java:38: warning: PermissionImpl is internal proprietary API and may be removed in a future release
    [javac] import sun.security.acl.PermissionImpl;
    [javac]                        ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/security/ACLConnect.java:39: warning: PrincipalImpl is internal proprietary API and may be removed in a future release
    [javac] import sun.security.acl.PrincipalImpl;
    [javac]                        ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/communications/CommClient.java:870: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] 		return version(new XMLRPCCommandVersion(newURI()));
    [javac] 		                   ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/communications/CommClient.java:881: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] 	public Version version(final XMLRPCCommandVersion command)
    [javac] 	                             ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/DataInterface.java:625: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/communications/IdRpc.java:89: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] 		public XMLRPCCommandVersion newCommand(final URI uri, final UserInterface client, final Table obj)
    [javac] 		       ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/communications/IdRpc.java:91: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] 			return new XMLRPCCommandVersion(uri, client);
    [javac] 			           ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/communications/XMLRPCCommand.java:614: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] 			return new XMLRPCCommandVersion(input);
    [javac] 			           ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/AppInterface.java:1446: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/UserInterface.java:577: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/GroupInterface.java:319: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/HostInterface.java:1212: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/SessionInterface.java:264: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/TaskInterface.java:441: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/TraceInterface.java:348: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/UserGroupInterface.java:365: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/WorkInterface.java:933: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/AppType.java:263: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/CPUType.java:223: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/DataType.java:265: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/Executable.java:294: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/JobInterface.java:409: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/OSType.java:243: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/Status.java:245: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/UserRightsType.java:243: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/XWTools.java:805: warning: [deprecation] HTTPOpenIdHandler in xtremweb.dispatcher has been deprecated
    [javac] 		final Logger logger = new Logger(HTTPOpenIdHandler.class);
    [javac] 		                                 ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/XWTools.java:817: warning: BASE64Encoder is internal proprietary API and may be removed in a future release
    [javac] 			out.println(new sun.misc.BASE64Encoder().encode(cert.getEncoded()));
    [javac] 			                        ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/communications/HTTPClient.java:238: warning: [deprecation] Protocol(String,SecureProtocolSocketFactory,int) in Protocol has been deprecated
    [javac] 				xwssl = new Protocol(uri.getScheme(), new AuthSSLProtocolSocketFactory(uri.getScheme(), keyStore,
    [javac] 				        ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/dispatcher/Dispatcher.java:216: warning: [deprecation] HTTPOpenIdHandler in xtremweb.dispatcher has been deprecated
    [javac] 				HTTPOpenIdHandler.setCACertificateEntries(getConfig().getKeyStore());
    [javac] 				^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/security/ACLConnect.java:65: warning: PermissionImpl is internal proprietary API and may be removed in a future release
    [javac] 	private final Permission _connect = new PermissionImpl("CONNECT");
    [javac] 	                                        ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/security/ACLConnect.java:66: warning: PrincipalImpl is internal proprietary API and may be removed in a future release
    [javac] 	private final Principal _owner = new PrincipalImpl("localhost");
    [javac] 	                                     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/security/ACLConnect.java:67: warning: AclImpl is internal proprietary API and may be removed in a future release
    [javac] 	private Acl _acl = new AclImpl(_owner, "ConnectACL");
    [javac] 	                       ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/security/ACLConnect.java:80: warning: AclImpl is internal proprietary API and may be removed in a future release
    [javac] 		_acl = new AclImpl(_owner, "ConnectACL");
    [javac] 		           ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/security/ACLConnect.java:81: warning: AclEntryImpl is internal proprietary API and may be removed in a future release
    [javac] 		final AclEntry allowConnections = new AclEntryImpl(_owner);
    [javac] 		                                      ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/security/ACLConnect.java:104: warning: PrincipalImpl is internal proprietary API and may be removed in a future release
    [javac] 			final Principal prince = new PrincipalImpl(regexp);
    [javac] 			                             ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/security/ACLConnect.java:105: warning: AclEntryImpl is internal proprietary API and may be removed in a future release
    [javac] 			final AclEntry entry = new AclEntryImpl(prince);
    [javac] 			                           ^
    [javac] Note: Some input files use unchecked or unsafe operations.
    [javac] Note: Recompile with -Xlint:unchecked for details.
    [javac] 39 warnings
    [javac] Creating empty /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes/database/package-info.class

obj:

iface:

communications:
    [javac] Compiling 60 source files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/communications/IdRpc.java:89: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] 		public XMLRPCCommandVersion newCommand(final URI uri, final UserInterface client, final Table obj)
    [javac] 		       ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/communications/IdRpc.java:91: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] 			return new XMLRPCCommandVersion(uri, client);
    [javac] 			           ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/communications/XMLRPCCommand.java:614: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] 			return new XMLRPCCommandVersion(input);
    [javac] 			           ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/communications/CommClient.java:870: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] 		return version(new XMLRPCCommandVersion(newURI()));
    [javac] 		                   ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/communications/CommClient.java:881: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] 	public Version version(final XMLRPCCommandVersion command)
    [javac] 	                             ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/communications/HTTPClient.java:238: warning: [deprecation] Protocol(String,SecureProtocolSocketFactory,int) in Protocol has been deprecated
    [javac] 				xwssl = new Protocol(uri.getScheme(), new AuthSSLProtocolSocketFactory(uri.getScheme(), keyStore,
    [javac] 				        ^
    [javac] Note: Some input files use unchecked or unsafe operations.
    [javac] Note: Recompile with -Xlint:unchecked for details.
    [javac] 6 warnings

services:
    [javac] Compiling 7 source files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes

archdep:
    [javac] Compiling 20 source files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes

upgrade:

worker:
    [javac] Compiling 42 source files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes
    [javac] Note: Some input files use unchecked or unsafe operations.
    [javac] Note: Recompile with -Xlint:unchecked for details.

dispatcher:
    [javac] Compiling 14 source files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/dispatcher/Dispatcher.java:216: warning: [deprecation] HTTPOpenIdHandler in xtremweb.dispatcher has been deprecated
    [javac] 				HTTPOpenIdHandler.setCACertificateEntries(getConfig().getKeyStore());
    [javac] 				^
    [javac] Note: Some input files use unchecked or unsafe operations.
    [javac] Note: Recompile with -Xlint:unchecked for details.
    [javac] 1 warning

worker.manifest:

jni:
     [copy] Copying 10 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/natif
     [exec] make[1]: Entering directory `/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/natif'
     [exec] gcc -c  -fPIC -g -Wall -I'/usr/lib/jvm/java-8-openjdk-amd64/include/linux' -fPIC -I'/usr/lib/jvm/java-8-openjdk-amd64/include' -o ../../build/classes/obj/linux-amd64/XWUtilUnix.o XWUtilUnix.c
     [exec] gcc -shared  -fPIC  -L'/usr/lib/jvm/java-8-openjdk-amd64/lib' -o ../../build/classes/obj/linux-amd64/XWUtil.jni ../../build/classes/obj/linux-amd64/XWUtilUnix.o 
     [exec] cp ../../build/classes/obj/linux-amd64/XWUtil.jni ../../build/classes/jni/XWUtil.jni.10.6.0.linux-amd64
     [exec] gcc -c  -fPIC -g -Wall -I'/usr/lib/jvm/java-8-openjdk-amd64/include/linux' -fPIC -I'/usr/lib/jvm/java-8-openjdk-amd64/include' -o ../../build/classes/obj/linux-amd64/XWTracerUnixlib.o XWTracerUnixlib.c
     [exec] mkdir: cannot create directory ‘../../build/classes/obj/linux-amd64’: File exists
     [exec] gcc -c  -fPIC -g -Wall -I'/usr/lib/jvm/java-8-openjdk-amd64/include/linux' -fPIC -I'/usr/lib/jvm/java-8-openjdk-amd64/include' -o ../../build/classes/obj/linux-amd64/XWTracerUnixImpl.o XWTracerUnixImpl.c
     [exec] XWTracerUnixlib.c: In function ‘processCpustate’:
     [exec] XWTracerUnixlib.c:194:19: warning: variable ‘relative_jiffies’ set but not used [-Wunused-but-set-variable]
     [exec]      idle_jiffies, relative_jiffies, absolute_jiffies;
     [exec]                    ^
     [exec] XWTracerUnixlib.c:191:49: warning: variable ‘cpu_idle’ set but not used [-Wunused-but-set-variable]
     [exec]    static double cpu_user, cpu_nice, cpu_system, cpu_idle;
     [exec]                                                  ^
     [exec] XWTracerUnixlib.c:191:37: warning: variable ‘cpu_system’ set but not used [-Wunused-but-set-variable]
     [exec]    static double cpu_user, cpu_nice, cpu_system, cpu_idle;
     [exec]                                      ^
     [exec] XWTracerUnixlib.c:191:27: warning: variable ‘cpu_nice’ set but not used [-Wunused-but-set-variable]
     [exec]    static double cpu_user, cpu_nice, cpu_system, cpu_idle;
     [exec]                            ^
     [exec] XWTracerUnixlib.c:191:17: warning: variable ‘cpu_user’ set but not used [-Wunused-but-set-variable]
     [exec]    static double cpu_user, cpu_nice, cpu_system, cpu_idle;
     [exec]                  ^
     [exec] XWTracerUnixlib.c: In function ‘writeState’:
     [exec] XWTracerUnixlib.c:589:7: warning: variable ‘test’ set but not used [-Wunused-but-set-variable]
     [exec]    int test;
     [exec]        ^
     [exec] XWTracerUnixlib.c:587:8: warning: variable ‘k’ set but not used [-Wunused-but-set-variable]
     [exec]    char k[1];
     [exec]         ^
     [exec] XWTracerUnixlib.c:584:9: warning: variable ‘c’ set but not used [-Wunused-but-set-variable]
     [exec]    char* c;
     [exec]          ^
     [exec] PortMapper.c: In function ‘getport’:
     [exec] PortMapper.c:29:2: warning: implicit declaration of function ‘pmap_getport’ [-Wimplicit-function-declaration]
     [exec]   return pmap_getport (&amp;addr, prog, version, protocol);
     [exec]   ^
     [exec] gcc -shared  -fPIC  -L'/usr/lib/jvm/java-8-openjdk-amd64/lib' -o ../../build/classes/obj/linux-amd64/XwTracer.jni ../../build/classes/obj/linux-amd64/XWTracerUnixlib.o ../../build/classes/obj/linux-amd64/XWTracerUnixImpl.o 
     [exec] cp ../../build/classes/obj/linux-amd64/XwTracer.jni ../../build/classes/jni/XwTracer.jni.10.6.0.linux-amd64
     [exec] gcc -c  -fPIC -g -Wall -I'/usr/lib/jvm/java-8-openjdk-amd64/include/linux' -fPIC -I'/usr/lib/jvm/java-8-openjdk-amd64/include' -o ../../build/classes/obj/linux-amd64/PortMapper.o PortMapper.c
     [exec] gcc -shared  -fPIC  -L'/usr/lib/jvm/java-8-openjdk-amd64/lib' -o ../../build/classes/obj/linux-amd64/PortMapper.jni ../../build/classes/obj/linux-amd64/PortMapper.o 
     [exec] cp ../../build/classes/obj/linux-amd64/PortMapper.jni ../../build/classes/jni/PortMapper.jni.10.6.0.linux-amd64
     [exec] make[1]: Leaving directory `/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/natif'

Worker:
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes/data
     [copy] Copying 23 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes/data

tests:
    [javac] Compiling 50 source files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/test/xtremweb/communications/XMLRPCCommandVersionTest.java:29: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] import xtremweb.communications.XMLRPCCommandVersion;
    [javac]                               ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/test/xtremweb/communications/XMLRPCCommandVersionTest.java:47: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] 			setCmd(new XMLRPCCommandVersion());
    [javac] 			           ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/test/xtremweb/communications/XMLRPCCommandVersionTest.java:48: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] 			setCmd2(new XMLRPCCommandVersion());
    [javac] 			            ^
    [javac] Note: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/test/xtremweb/common/XMLHashtableTest.java uses unchecked or unsafe operations.
    [javac] Note: Recompile with -Xlint:unchecked for details.
    [javac] 3 warnings

client:

allservices:

Dispatcher:
     [echo]  
     [echo] 	JAR JAR JAR
     [echo] 	basedir="/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes"
     [echo] 	jarfile="/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/lib/xtremweb.jar"
     [echo] 	manifest="/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/misc/worker.manifest"
     [echo]       
      [jar] Building jar: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/lib/xtremweb.jar

rpcv:

all:

copylibs:

distrib:

BUILD SUCCESSFUL
Total time: 18 seconds
./build.sh -f install.xml install 
Buildfile: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/install.xml

tstamp:

version:

prepare:

configure:
     [echo] 
     [echo] user  login : ${xtremweb.admin.login} ${xtremweb.admin.password}
     [echo] admin login : ${xtremweb.admin.login} ${xtremweb.admin.password}
     [echo] DB su login :  
     [echo] ENGINE : ""
     [echo] launcher.url = http://nohost/
     [echo] system.user  = xwhep
     [echo] xwsuffix=LINUX-AMD64
     [echo] xwarch=AMD64
     [echo] target.os=Linux
     [echo] cross.prefix=${cross.prefix}
     [echo] cross.java.home=${cross.java.home}
     [echo] version=10.6.0

installConfig:
     [echo] 
     [echo]        ==&gt; version    = 10.6.0
     [echo]        ==&gt; dist.dir   = /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0
     [echo]        ==&gt; installDir = /opt/xwhep-10.6.0
     [echo]     

installFiles:
     [copy] Copying 98 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/doc
     [copy] Copying 17 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/docker
     [copy] Copying 31 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/lib
     [copy] Copying 31 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.server/installer/PckRoot/private/etc/xwhep.server/lib
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf
     [echo] 
     [echo]       xtremweb.admin.login=${xtremweb.admin.login}
     [echo]       xtremweb.admin.password=${xtremweb.admin.password}
     [echo]     
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf
     [echo] 
     [echo]       xtremweb.worker.login=${xtremweb.worker.login}
     [echo]       xtremweb.worker.password=${xtremweb.worker.password}
     [echo]     
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.worker/installer/PckRoot/private/etc/xwhep.worker/conf
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.worker/installer/PckRoot/Applications/xwhep.worker
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.worker/installer/PckRoot/private/etc/xwhep.worker/conf
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.vworker/installer/PckRoot/Applications/xwhep.vworker
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.vworker/installer/PckRoot/private/etc/xwhep.vworker/bin
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.client/installer/PckRoot/Applications/xwhep.client/conf
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.server/installer/PckRoot/private/etc/xwhep.server/conf
     [copy] Copying 98 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.server/installer/PckRoot/Applications/xwhep.server/doc
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.client/conf
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.client/innoSetup/client/conf
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/conf
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/innoSetup/worker/conf
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/conf
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/innoSetup/worker/conf
     [copy] Copying 2 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/lib
     [copy] Copying 2 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/innoSetup/worker/lib
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/innoSetup/worker/lib
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/innoSetup/worker/lib
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/innoSetup/worker/misc
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/innoSetup/worker/doc
     [copy] Copying 8 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/bin
     [copy] Copying 5 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/innoSetup/worker/bin
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/doc
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.server/conf
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.server/innoSetup/server/conf
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.server/conf
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.server/innoSetup/server/conf
     [copy] Copying 2 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.server/lib
     [copy] Copying 2 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.server/innoSetup/server/lib
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.server/innoSetup/server/misc
     [copy] Copying 2 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.server/innoSetup/server/bin

setupScripts:
     [copy] Copying 266 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/db-maintenance

installScripts:

createDownload:
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.worker/installer/PckRoot/private/etc/xwhep.worker/keystore
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.client/installer/PckRoot/Applications/xwhep.client/lib
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.client/installer/PckRoot/Applications/xwhep.client/lib
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.client/installer/PckRoot/Applications/xwhep.client/keystore
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.server/installer/PckRoot/private/etc/xwhep.server/keystore
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/db-maintenance
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/db-maintenance
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin
     [copy] Copying 98 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/doc/xwhep.client/doc
[jarbundler] Creating application bundle: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/xwhep.client.app
     [copy] Copying 5 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/xwhep.client.app
     [copy] Copying 20 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.worker
     [copy] Copying 17 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.vworker
     [copy] Copying 12 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.client
     [copy] Copying 19 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.server
     [copy] Copying 3 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/innoSetup
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker
     [copy] Copying 3 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.server/innoSetup
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.server
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.server.conf
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.server/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.server/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.server/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.server/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.server/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.server/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.server.conf/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.server.conf/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.server.conf/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.server.conf/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.server.conf/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.server.conf/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.bridgedgsg
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.bridgedgsg/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.bridgedgsg/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.bridgedgsg/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.bridgedgsg/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.bridgedgsg/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.bridgedgsg/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.client
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.client/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.client/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.client/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.client/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.client/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.client/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.worker
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.worker/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.worker/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.worker/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.worker/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.worker/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.worker/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.client/innoSetup/client/lib
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.client/innoSetup/client/lib
     [copy] Copying 11 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0
     [copy] Copying 6 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/apptest

ganglia:

install:
     [echo] 
     [echo]       Installation done
     [echo]     

BUILD SUCCESSFUL
Total time: 10 seconds</msg>
<status status="PASS" endtime="20170913 18:47:00.294" starttime="20170913 18:47:00.293"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${compile_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170913 18:47:00.294" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170913 18:47:00.294" starttime="20170913 18:47:00.294"></status>
</kw>
<kw name="Get Lines Containing String" library="String">
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<arguments>
<arg>${compile_result.stdout}</arg>
<arg>BUILD SUCCESSFUL</arg>
</arguments>
<assign>
<var>${extract_build_successful}</var>
</assign>
<msg timestamp="20170913 18:47:00.295" level="INFO">3 out of 486 lines matched</msg>
<msg timestamp="20170913 18:47:00.295" level="INFO">${extract_build_successful} = BUILD SUCCESSFUL
BUILD SUCCESSFUL
BUILD SUCCESSFUL</msg>
<status status="PASS" endtime="20170913 18:47:00.295" starttime="20170913 18:47:00.294"></status>
</kw>
<kw name="Get Line Count" library="String">
<doc>Returns and logs the number of lines in the given string.</doc>
<arguments>
<arg>${extract_build_successful}</arg>
</arguments>
<assign>
<var>${line_count_build_successful}</var>
</assign>
<msg timestamp="20170913 18:47:00.295" level="INFO">3 lines</msg>
<msg timestamp="20170913 18:47:00.295" level="INFO">${line_count_build_successful} = 3</msg>
<status status="PASS" endtime="20170913 18:47:00.295" starttime="20170913 18:47:00.295"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${line_count_build_successful}</arg>
<arg>3</arg>
</arguments>
<msg timestamp="20170913 18:47:00.296" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170913 18:47:00.296" starttime="20170913 18:47:00.296"></status>
</kw>
<status status="PASS" endtime="20170913 18:47:00.296" starttime="20170913 18:46:28.461"></status>
</kw>
<kw name="Install XWtremWeb" library="XWCommon">
<kw name="List Directories In Directory" library="OperatingSystem">
<doc>Wrapper for `List Directory` that returns only directories.</doc>
<arguments>
<arg>${DIST_PATH}</arg>
<arg>xwhep-*</arg>
<arg>absolute</arg>
</arguments>
<assign>
<var>@{list_directories_dist_path}</var>
</assign>
<msg timestamp="20170913 18:47:00.297" html="yes" level="INFO">Listing contents of directory '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist&lt;/a&gt;'.</msg>
<msg timestamp="20170913 18:47:00.300" level="INFO">1 directory:
/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0</msg>
<msg timestamp="20170913 18:47:00.300" level="INFO">@{list_directories_dist_path} = [ /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0 ]</msg>
<status status="PASS" endtime="20170913 18:47:00.300" starttime="20170913 18:47:00.296"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>@{list_directories_dist_path}[0]</arg>
</arguments>
<msg timestamp="20170913 18:47:00.301" level="INFO">/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0</msg>
<status status="PASS" endtime="20170913 18:47:00.301" starttime="20170913 18:47:00.300"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}</arg>
<arg>@{list_directories_dist_path}[0]</arg>
</arguments>
<msg timestamp="20170913 18:47:00.301" level="INFO">${DIST_XWHEP_PATH} = /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0</msg>
<status status="PASS" endtime="20170913 18:47:00.301" starttime="20170913 18:47:00.301"></status>
</kw>
<kw name="Directory Should Exist" library="OperatingSystem">
<doc>Fails unless the given path points to an existing directory.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}</arg>
</arguments>
<msg timestamp="20170913 18:47:00.302" html="yes" level="INFO">Directory '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0&lt;/a&gt;' exists.</msg>
<status status="PASS" endtime="20170913 18:47:00.302" starttime="20170913 18:47:00.301"></status>
</kw>
<kw name="Create XWCONFIGURE.VALUES FILE" library="XWCommon">
<arguments>
<arg>${DIST_XWHEP_PATH}</arg>
</arguments>
<kw name="Directory Should Exist" library="OperatingSystem">
<doc>Fails unless the given path points to an existing directory.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf</arg>
</arguments>
<msg timestamp="20170913 18:47:00.303" html="yes" level="INFO">Directory '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf&lt;/a&gt;' exists.</msg>
<status status="PASS" endtime="20170913 18:47:00.303" starttime="20170913 18:47:00.302"></status>
</kw>
<kw name="Remove File" library="OperatingSystem">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
</arguments>
<msg timestamp="20170913 18:47:00.304" html="yes" level="INFO">Removed file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170913 18:47:00.304" starttime="20170913 18:47:00.303"></status>
</kw>
<kw name="Create File" library="OperatingSystem">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
</arguments>
<msg timestamp="20170913 18:47:00.305" html="yes" level="INFO">Created file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170913 18:47:00.305" starttime="20170913 18:47:00.304"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>XWUSER='${XWCONFIGURE.VALUES.XWUSER}'\n</arg>
</arguments>
<msg timestamp="20170913 18:47:00.312" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170913 18:47:00.313" starttime="20170913 18:47:00.305"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>DBVENDOR='${XWCONFIGURE.VALUES.DBVENDOR}'\n</arg>
</arguments>
<msg timestamp="20170913 18:47:00.315" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170913 18:47:00.315" starttime="20170913 18:47:00.313"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>DBENGINE='${XWCONFIGURE.VALUES.DBENGINE}'\n</arg>
</arguments>
<msg timestamp="20170913 18:47:00.317" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170913 18:47:00.317" starttime="20170913 18:47:00.315"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>DBHOST='${XWCONFIGURE.VALUES.DBHOST}'\n</arg>
</arguments>
<msg timestamp="20170913 18:47:00.318" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170913 18:47:00.319" starttime="20170913 18:47:00.317"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>DBADMINLOGIN='${XWCONFIGURE.VALUES.DBADMINLOGIN}'\n</arg>
</arguments>
<msg timestamp="20170913 18:47:00.320" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170913 18:47:00.320" starttime="20170913 18:47:00.319"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>DBADMINPASSWORD='${XWCONFIGURE.VALUES.DBADMINPASSWORD}'\n</arg>
</arguments>
<msg timestamp="20170913 18:47:00.322" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170913 18:47:00.322" starttime="20170913 18:47:00.321"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>DBNAME='${XWCONFIGURE.VALUES.DBNAME}'\n</arg>
</arguments>
<msg timestamp="20170913 18:47:00.323" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170913 18:47:00.323" starttime="20170913 18:47:00.322"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>DBUSERLOGIN='${XWCONFIGURE.VALUES.DBUSERLOGIN}'\n</arg>
</arguments>
<msg timestamp="20170913 18:47:00.324" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170913 18:47:00.325" starttime="20170913 18:47:00.323"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>DBUSERPASSWORD='${XWCONFIGURE.VALUES.DBUSERPASSWORD}'\n</arg>
</arguments>
<msg timestamp="20170913 18:47:00.326" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170913 18:47:00.326" starttime="20170913 18:47:00.325"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>XWADMINLOGIN='${XWCONFIGURE.VALUES.XWADMINLOGIN}'\n</arg>
</arguments>
<msg timestamp="20170913 18:47:00.327" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170913 18:47:00.327" starttime="20170913 18:47:00.326"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>XWADMINPASSWORD='${XWCONFIGURE.VALUES.XWADMINPASSWORD}'\n</arg>
</arguments>
<msg timestamp="20170913 18:47:00.328" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170913 18:47:00.328" starttime="20170913 18:47:00.327"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>XWWORKERLOGIN='${XWCONFIGURE.VALUES.XWWORKERLOGIN}'\n</arg>
</arguments>
<msg timestamp="20170913 18:47:00.330" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170913 18:47:00.330" starttime="20170913 18:47:00.329"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>XWWORKERPASSWORD='${XWCONFIGURE.VALUES.XWWORKERPASSWORD}'\n</arg>
</arguments>
<msg timestamp="20170913 18:47:00.331" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170913 18:47:00.331" starttime="20170913 18:47:00.330"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>XWSERVER='${XWCONFIGURE.VALUES.XWSERVER}'\n</arg>
</arguments>
<msg timestamp="20170913 18:47:00.332" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170913 18:47:00.332" starttime="20170913 18:47:00.331"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>CERTCN='${XWCONFIGURE.VALUES.CERTCN}'\n</arg>
</arguments>
<msg timestamp="20170913 18:47:00.334" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170913 18:47:00.334" starttime="20170913 18:47:00.333"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>CERTOU='${XWCONFIGURE.VALUES.CERTOU}'\n</arg>
</arguments>
<msg timestamp="20170913 18:47:00.335" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170913 18:47:00.335" starttime="20170913 18:47:00.334"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>CERTO='${XWCONFIGURE.VALUES.CERTO}'\n</arg>
</arguments>
<msg timestamp="20170913 18:47:00.367" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170913 18:47:00.367" starttime="20170913 18:47:00.335"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>CERTL='${XWCONFIGURE.VALUES.CERTL}'\n</arg>
</arguments>
<msg timestamp="20170913 18:47:00.369" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170913 18:47:00.369" starttime="20170913 18:47:00.367"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>CERTC='${XWCONFIGURE.VALUES.CERTC}'\n</arg>
</arguments>
<msg timestamp="20170913 18:47:00.370" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170913 18:47:00.371" starttime="20170913 18:47:00.369"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>CERTC='${XWCONFIGURE.VALUES.CERTC}'\n</arg>
</arguments>
<msg timestamp="20170913 18:47:00.372" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170913 18:47:00.372" starttime="20170913 18:47:00.371"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>SSLKEYPASSPHRASE='${XWCONFIGURE.VALUES.SSLKEYPASSPHRASE}'\n</arg>
</arguments>
<msg timestamp="20170913 18:47:00.374" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170913 18:47:00.374" starttime="20170913 18:47:00.373"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>SSLKEYSERVERPASSWORD='${XWCONFIGURE.VALUES.SSLKEYSERVERPASSWORD}'\n</arg>
</arguments>
<msg timestamp="20170913 18:47:00.376" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170913 18:47:00.376" starttime="20170913 18:47:00.374"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>SSLKEYWORKERPASSWORD='${XWCONFIGURE.VALUES.SSLKEYWORKERPASSWORD}'\n</arg>
</arguments>
<msg timestamp="20170913 18:47:00.377" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170913 18:47:00.377" starttime="20170913 18:47:00.376"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>SSLKEYCLIENTPASSWORD='${XWCONFIGURE.VALUES.SSLKEYCLIENTPASSWORD}'\n</arg>
</arguments>
<msg timestamp="20170913 18:47:00.379" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170913 18:47:00.379" starttime="20170913 18:47:00.377"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>X509CERTDIR='${XWCONFIGURE.VALUES.X509CERTDIR}'\n</arg>
</arguments>
<msg timestamp="20170913 18:47:00.380" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170913 18:47:00.381" starttime="20170913 18:47:00.379"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>USERCERTDIR='${XWCONFIGURE.VALUES.USERCERTDIR}'\n</arg>
</arguments>
<msg timestamp="20170913 18:47:00.382" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170913 18:47:00.383" starttime="20170913 18:47:00.381"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>XWUPGRADEURL='${XWCONFIGURE.VALUES.XWUPGRADEURL}'\n</arg>
</arguments>
<msg timestamp="20170913 18:47:00.384" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170913 18:47:00.385" starttime="20170913 18:47:00.383"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>HTTPSPORT='${XWCONFIGURE.VALUES.HTTPSPORT}'\n</arg>
</arguments>
<msg timestamp="20170913 18:47:00.386" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170913 18:47:00.386" starttime="20170913 18:47:00.385"></status>
</kw>
<kw name="Log File" library="OperatingSystem">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
</arguments>
<msg timestamp="20170913 18:47:00.387" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<msg timestamp="20170913 18:47:00.387" level="INFO">XWUSER='root'
DBVENDOR='mysql'
DBENGINE='InnoDB'
DBHOST='localhost'
DBADMINLOGIN='root'
DBADMINPASSWORD='root'
DBNAME='xtremweb'
DBUSERLOGIN='xwuser'
DBUSERPASSWORD='xwuser'
XWADMINLOGIN='admin'
XWADMINPASSWORD='admin'
XWWORKERLOGIN='worker'
XWWORKERPASSWORD='worker'
XWSERVER='localhost'
CERTCN='localhost'
CERTOU='MrRobotFramework'
CERTO='MrRobotFramework'
CERTL='MrRobotFramework'
CERTC='fr'
CERTC='fr'
SSLKEYPASSPHRASE='MrRobotFramework'
SSLKEYSERVERPASSWORD='MrRobotFramework'
SSLKEYWORKERPASSWORD='MrRobotFramework'
SSLKEYCLIENTPASSWORD='MrRobotFramework'
X509CERTDIR='/tmp/castore'
USERCERTDIR=''
XWUPGRADEURL='http://localhost:8080/somewhere/xtremweb.jar'
HTTPSPORT='9443'
</msg>
<status status="PASS" endtime="20170913 18:47:00.387" starttime="20170913 18:47:00.386"></status>
</kw>
<status status="PASS" endtime="20170913 18:47:00.387" starttime="20170913 18:47:00.302"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd ${DIST_XWHEP_PATH} &amp;&amp; ./bin/xwconfigure --yes --nopkg --rmdb</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${install_result}</var>
</assign>
<msg timestamp="20170913 18:47:00.388" level="INFO">Starting process:
cd /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0 &amp;&amp; ./bin/xwconfigure --yes --nopkg --rmdb</msg>
<msg timestamp="20170913 18:47:00.390" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170913 18:47:44.018" level="INFO">Process completed.</msg>
<msg timestamp="20170913 18:47:44.018" level="INFO">${install_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170913 18:47:44.018" starttime="20170913 18:47:00.387"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${install_result.stdout}</arg>
</arguments>
<msg timestamp="20170913 18:47:44.019" level="INFO">
--------------------------------------------------
         XtremWeb-HEP 10.6.0 
         XWConfigurator

This script helps to configure an XtremWeb-HEP deployment 
--------------------------------------------------

This script aims to :
 - install a new database: Since 9.1. MySQL (http://www.mysql.com/) only is supported
 - creates electronic keys : 
   * server private key
   * client key store including server public key
   * worker key store including server public key
 - prepare installers
   * Win32 InnoSetup project (http://www.jrsoftware.org/isinfo.php)
   * Mac OS X Package Maker projects (http:/www.apple.com)
   * Linux RPM (http://www.rpm.org)
   * Linux Debian package (http://www.debian.org)

In order to complete configuration, several informations are needed :
 -1- MySQL administrator account (login and password)
     =&gt; If you don't know it, please ask your system administrator
 -1.1- Database server, if using MySQL
     =&gt; The name or IP address of your MySQL server
 -1.2- Database name
     =&gt; If you don't have a valid MySQL administrator account, you won't be able to perform this
     =&gt; In such a case, please ask your system administrator to create one new empty database for us
 -1.3- Database user (login and password), if using MySQL
     =&gt; This account must have insert/update/delete privileges to the previous database
     =&gt; This account will be used by the XW server to access database
     =&gt; If you don't have a valid MySQL administrator account, you won't be able to perform this
     =&gt; In such a case, please ask your system administrator to create one for you
 -2- Electronic key passphrase
     =&gt; This is free and up to you
 -3- Electronic key password for the server
     =&gt; This is free and up to you
 -4- Electronic key password for the worker
     =&gt; This is free and up to you
 -5- Electronic key password for the client
     =&gt; This is free and up to you

All informations are stored in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values
So that, you can stop this script when you want, and don't have to re-enter all informations

To reset any variable, edit or erase /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values

You should be aware that /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values stores some critical informations!!!

-----------------------------

DB vendor set to 'mysql'
DB engine set to 'InnoDB'
***********************
 Electronic keys found 
***********************
Upgrade URL is localhost : I guess this is for testing only...
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Can't download xtremweb.jar from 'http://localhost:8080/somewhere/xtremweb.jar'
You will have to ensure that xtremweb.jar can be downloaded from 'http://localhost:8080/somewhere/xtremweb.jar'
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

You entered :
**** Account to run the middleware : 
     USER                 = 'root'
**** Database configuration : 
     DBVENDOR             = 'mysql'
     DBENGINE             = 'InnoDB'
     DBHOST               = 'localhost'
     DBNAME               = 'xtremweb'
     DBADMINLOGIN         = 'root'
     DBADMINPASSWORD      = 'root'
     DBUSERLOGIN          = 'xwuser'
     DBUSERPASSWORD       = 'xwuser'
**** XtremWeb-HEP administrator client configuration : 
     XWADMINLOGIN         = 'admin'
     XWADMINPASSWORD      = 'admin'
**** XtremWeb-HEP public worker configuration : 
     XWWORKERLOGIN        = 'worker'
     XWWORKERPASSWORD     = 'worker'
**** XtremWeb-HEP server configuration : 
     XWSERVER             = 'localhost'
     XWUPGRADEURL         = 'http://localhost:8080/somewhere/xtremweb.jar'
**** CA certificates path : 
     X509CERTDIR          = '/tmp/castore'
**** Certificate configuration : 
     Keys found           = ''
     SSLKEYPASSPHRASE     = 'MrRobotFramework'
     SSLKEYCLIENTPASSWORD = 'MrRobotFramework'
     SSLKEYSERVERPASSWORD = 'MrRobotFramework'
     SSLKEYWORKERPASSWORD = 'MrRobotFramework'
     Common Name          = 'localhost'
     Organisation Unit    = 'MrRobotFramework'
     Organization Name    = 'MrRobotFramework'
     Locality Name        = 'MrRobotFramework'
     Country              = 'fr'

Database schema 'xtremweb' exists : DB reset forced
Resetting database schema 'xtremweb'
Preparing database script............Done
Preparing database schema 'xtremweb'
DB engine for 'xtremweb' is InnoDB :  Creating foreign keys for live tables ...
Creating DB triggers using xwhep-core-tables-create-triggers-for-data-coming-from-8.sql ...

Table "users"

Table "hosts"

Table "datas"

Table "works"

Table "tasks"

Table "apps"
Creating DB triggers using xwhep-core-tables-create-triggers-for-history-coming-from-8.sql ...

Table "users_history"

Table "hosts_history"

Table "datas_history"

Table "works_history"

Table "tasks_history"

Table "apps_history"
Create the SQL script for the creation of DB views in the current schema ...
Create the SQL script for the creation of DB users views in the current schema ...
Creating DB views using xwhep-core-tables-create-views-for-tables.sql ...
Creating DB views using xwhep-core-tables-create-users-views.sql ...
Creating DB views using xwhep-core-tables-create-views-for-sessions-and-groups.sql ...
Creating DB views using xwhep-core-tables-create-views-for-relationships.sql ...
Creating DB views using xwhep-core-tables-create-views-for-offering-and-billing.sql ...
Creating DB views using xwhep-core-tables-create-views-hosts-matching-works.sql ...
Granting access to DB schema 'xtremweb' ...
Database schema 'xtremweb' : checking compliance to '05.7.3'
Database schema 'xtremweb' : is compliant to 05.7.3
Database schema 'xtremweb' : checking compliance to '05.8.0'
Database schema 'xtremweb' : is compliant to 05.8.0
Database schema 'xtremweb' : checking compliance to '06.0.1'
Database schema 'xtremweb' : is compliant to 06.0.1
Database schema 'xtremweb' : checking compliance to '07.0.0'
Database schema 'xtremweb' : is compliant to 07.0.0
Database schema 'xtremweb' : checking compliance to '07.2.0'
Database schema 'xtremweb' : is compliant to 07.2.0
Database schema 'xtremweb' : checking compliance to '07.4.1'
Database schema 'xtremweb' : is compliant to 07.4.1
Database schema 'xtremweb' : checking compliance to '07.5.0'
Database schema 'xtremweb' : is compliant to 07.5.0
Database schema 'xtremweb' : checking compliance to '08.0.0'
Database schema 'xtremweb' : is compliant to 08.0.0
Database schema 'xtremweb' : checking compliance to '08.2.0'
Database schema 'xtremweb' : is compliant to 08.2.0
Database schema 'xtremweb' : checking compliance to '08.3.1'
Database schema 'xtremweb' : is compliant to 08.3.1
Database schema 'xtremweb' : checking compliance to '09.1.0'
Database schema 'xtremweb' : is compliant to 09.1.0
Database schema 'xtremweb' : checking compliance to '10.0.0'
Database schema 'xtremweb' : is compliant to 10.0.0
Database schema 'xtremweb' : checking compliance to '10.2.0'
Database schema 'xtremweb' : is compliant to 10.2.0
Database schema 'xtremweb' : checking compliance to '10.6.0'
Database schema 'xtremweb' : is not compliant to '10.6.0'; updating
10.6.0 is compliant, dont worry
10.6.0 is compliant, dont worry
Database schema 'xtremweb' : updated to '10.6.0'
Set current version to '10.6.0'
Setting the account to run the middleware to 'root'..........................Done
Preparing server configuration file '/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf'................. Done
Preparing xtremweb.ganglia...Done
Generating script to manage keystores (/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/xwhepgenkeys)  Done
Generating script to manage OpenId server certificates (/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/xwhepupdateopenidcerts) Done
Preparing worker configuration file '/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf'.... Done
Copying worker configuration file /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.worker/installer/PckRoot/private/etc/xwhep.worker/conf/xtremweb.worker.conf
Copying worker configuration file /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/innoSetup/worker/conf/xtremweb.worker.conf
Done
Preparing client configuration file '/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.client.conf'...Done
Copying client configuration file /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.client.conf to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.client/innoSetup/client/conf/xtremweb.client.conf
****************************************************************************************
Done
*******************
Keystores unmodified
*******************

Preparing  client package to '/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/xwhep.client'.....Done
Copying client configuration file /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/xwhep.client/10.6.0/conf/xtremweb.client.conf.template to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.client/installer/PckRoot/Applications/xwhep.client/conf/xtremweb.client.conf
 Done

Preparing server RPM package to '/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.server'.... Done

Preparing server configuration RPM package to '/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.server.conf'.... Done

Preparing server Debian package
Server Debian package ready

Preparing server configuration Debian package
Server Configuration Debian package ready
Preparing DG to SG bridge RPM package to '/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.bridgedgsg'............ Done

Preparing bridgedgsg Debian package
Bridgedgsg Debian package ready
Preparing SG to DG bridge RPM package to '/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.bridgesgdg'........ Done

Preparing bridgesgdg Debian package
Bridgesgdg Debian package ready
Preparing client RPM package to '/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.client'.... Done

Preparing client Debian package
Client Debian package ready

Preparing worker RPM package to '/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.worker'.... Done

Preparing worker Debian package
Worker Debian package ready

&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;
! Everything is now prepared !
&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;

Available packages :
  * server
   - RedHat RPM  in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.server
   - Debian DPKG in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.server
   - Apple  PKG  in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.server

  * Desktop Grid to Service Grid bridge
   - RedHat RPM  in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.bridgedgsg
   - Debian DPKG in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.bridgedgsg

  * Service Grid to Desktop Grid bridge
   - RedHat RPM  in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.bridgesgdg
   - Debian DPKG in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.bridgesgdg

  * client
   - RedHat RPM  in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.client
   - Debian DPKG in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.client
   - Apple  PKG  in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.client
   - Windows installer  in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.client/innoSetup
                        (http://www.innosetup.com/isinfo.php)

  * worker
   - RedHat  RPM        in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.worker
   - Debian  DPKG       in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.worker
   - Apple   PKG        in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.worker
   - Windows installer  in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/innoSetup
                        (http://www.innosetup.com/isinfo.php)

  * client
   - Zip file (platform independant)  in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/xwhep-client-10.6.0.zip


You can manually :
  * start the server
   - /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/xwhep.server console
  * start a worker
   - /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/xwhep.worker console
  * as soon as your server is started you can use the client
   - /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/xwworkers : if you have started a worker, it is in the list
   - /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/xwusers
   - /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/xwapps
   - etc.

As soon as everything is ok you should :
  * install you server using its packages
  * deploy worker over your own volunteer PCs using its packages
  * install your worker packages on any of your web sites
    if you wish to enable anonymous volunteer power
  * install your client ZIP file on any of your web sites
    to allow registered users to use the platform

That's all folks
</msg>
<status status="PASS" endtime="20170913 18:47:44.019" starttime="20170913 18:47:44.018"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${install_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170913 18:47:44.019" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170913 18:47:44.019" starttime="20170913 18:47:44.019"></status>
</kw>
<kw name="Get Lines Containing String" library="String">
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<arguments>
<arg>${install_result.stdout}</arg>
<arg>That's all folks</arg>
</arguments>
<assign>
<var>${install_result_successful}</var>
</assign>
<msg timestamp="20170913 18:47:44.020" level="INFO">1 out of 273 lines matched</msg>
<msg timestamp="20170913 18:47:44.020" level="INFO">${install_result_successful} = That's all folks</msg>
<status status="PASS" endtime="20170913 18:47:44.020" starttime="20170913 18:47:44.020"></status>
</kw>
<kw name="Get Line Count" library="String">
<doc>Returns and logs the number of lines in the given string.</doc>
<arguments>
<arg>${install_result_successful}</arg>
</arguments>
<assign>
<var>${line_install_result_successful}</var>
</assign>
<msg timestamp="20170913 18:47:44.020" level="INFO">1 lines</msg>
<msg timestamp="20170913 18:47:44.020" level="INFO">${line_install_result_successful} = 1</msg>
<status status="PASS" endtime="20170913 18:47:44.021" starttime="20170913 18:47:44.020"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${line_install_result_successful}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20170913 18:47:44.021" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170913 18:47:44.021" starttime="20170913 18:47:44.021"></status>
</kw>
<status status="PASS" endtime="20170913 18:47:44.021" starttime="20170913 18:47:00.296"></status>
</kw>
<kw name="Start XWtremWeb Server And XWtremWeb Worker" library="XWCommon">
<kw name="Ping XWtremWeb Database" library="XWServer">
<kw name="Xtremweb Tables Must Exist" library="MySql">
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170913 18:47:44.031" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170913 18:47:44.032" starttime="20170913 18:47:44.022"></status>
</kw>
<status status="PASS" endtime="20170913 18:47:44.032" starttime="20170913 18:47:44.022"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>appTypes</arg>
</arguments>
<msg timestamp="20170913 18:47:44.033" level="INFO">Executing : Table Must Exist  |  appTypes </msg>
<msg timestamp="20170913 18:47:44.033" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='appTypes' </msg>
<status status="PASS" endtime="20170913 18:47:44.033" starttime="20170913 18:47:44.032"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps</arg>
</arguments>
<msg timestamp="20170913 18:47:44.034" level="INFO">Executing : Table Must Exist  |  apps </msg>
<msg timestamp="20170913 18:47:44.034" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='apps' </msg>
<status status="PASS" endtime="20170913 18:47:44.034" starttime="20170913 18:47:44.034"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps_history</arg>
</arguments>
<msg timestamp="20170913 18:47:44.035" level="INFO">Executing : Table Must Exist  |  apps_history </msg>
<msg timestamp="20170913 18:47:44.035" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='apps_history' </msg>
<status status="PASS" endtime="20170913 18:47:44.035" starttime="20170913 18:47:44.034"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>cpuTypes</arg>
</arguments>
<msg timestamp="20170913 18:47:44.036" level="INFO">Executing : Table Must Exist  |  cpuTypes </msg>
<msg timestamp="20170913 18:47:44.036" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='cpuTypes' </msg>
<status status="PASS" endtime="20170913 18:47:44.036" starttime="20170913 18:47:44.035"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>dataTypes</arg>
</arguments>
<msg timestamp="20170913 18:47:44.037" level="INFO">Executing : Table Must Exist  |  dataTypes </msg>
<msg timestamp="20170913 18:47:44.037" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='dataTypes' </msg>
<status status="PASS" endtime="20170913 18:47:44.037" starttime="20170913 18:47:44.036"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas</arg>
</arguments>
<msg timestamp="20170913 18:47:44.038" level="INFO">Executing : Table Must Exist  |  datas </msg>
<msg timestamp="20170913 18:47:44.038" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='datas' </msg>
<status status="PASS" endtime="20170913 18:47:44.038" starttime="20170913 18:47:44.037"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas_history</arg>
</arguments>
<msg timestamp="20170913 18:47:44.039" level="INFO">Executing : Table Must Exist  |  datas_history </msg>
<msg timestamp="20170913 18:47:44.039" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='datas_history' </msg>
<status status="PASS" endtime="20170913 18:47:44.040" starttime="20170913 18:47:44.038"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables</arg>
</arguments>
<msg timestamp="20170913 18:47:44.040" level="INFO">Executing : Table Must Exist  |  executables </msg>
<msg timestamp="20170913 18:47:44.040" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='executables' </msg>
<status status="PASS" endtime="20170913 18:47:44.041" starttime="20170913 18:47:44.040"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables_history</arg>
</arguments>
<msg timestamp="20170913 18:47:44.041" level="INFO">Executing : Table Must Exist  |  executables_history </msg>
<msg timestamp="20170913 18:47:44.041" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='executables_history' </msg>
<status status="PASS" endtime="20170913 18:47:44.042" starttime="20170913 18:47:44.041"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups</arg>
</arguments>
<msg timestamp="20170913 18:47:44.042" level="INFO">Executing : Table Must Exist  |  groups </msg>
<msg timestamp="20170913 18:47:44.042" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='groups' </msg>
<status status="PASS" endtime="20170913 18:47:44.043" starttime="20170913 18:47:44.042"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups_history</arg>
</arguments>
<msg timestamp="20170913 18:47:44.044" level="INFO">Executing : Table Must Exist  |  groups_history </msg>
<msg timestamp="20170913 18:47:44.044" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='groups_history' </msg>
<status status="PASS" endtime="20170913 18:47:44.044" starttime="20170913 18:47:44.043"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts</arg>
</arguments>
<msg timestamp="20170913 18:47:44.045" level="INFO">Executing : Table Must Exist  |  hosts </msg>
<msg timestamp="20170913 18:47:44.045" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='hosts' </msg>
<status status="PASS" endtime="20170913 18:47:44.045" starttime="20170913 18:47:44.044"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts_history</arg>
</arguments>
<msg timestamp="20170913 18:47:44.045" level="INFO">Executing : Table Must Exist  |  hosts_history </msg>
<msg timestamp="20170913 18:47:44.046" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='hosts_history' </msg>
<status status="PASS" endtime="20170913 18:47:44.046" starttime="20170913 18:47:44.045"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships</arg>
</arguments>
<msg timestamp="20170913 18:47:44.047" level="INFO">Executing : Table Must Exist  |  memberships </msg>
<msg timestamp="20170913 18:47:44.047" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='memberships' </msg>
<status status="PASS" endtime="20170913 18:47:44.047" starttime="20170913 18:47:44.047"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships_history</arg>
</arguments>
<msg timestamp="20170913 18:47:44.048" level="INFO">Executing : Table Must Exist  |  memberships_history </msg>
<msg timestamp="20170913 18:47:44.048" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='memberships_history' </msg>
<status status="PASS" endtime="20170913 18:47:44.048" starttime="20170913 18:47:44.048"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>oses</arg>
</arguments>
<msg timestamp="20170913 18:47:44.049" level="INFO">Executing : Table Must Exist  |  oses </msg>
<msg timestamp="20170913 18:47:44.049" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='oses' </msg>
<status status="PASS" endtime="20170913 18:47:44.049" starttime="20170913 18:47:44.049"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>packageTypes</arg>
</arguments>
<msg timestamp="20170913 18:47:44.050" level="INFO">Executing : Table Must Exist  |  packageTypes </msg>
<msg timestamp="20170913 18:47:44.050" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='packageTypes' </msg>
<status status="PASS" endtime="20170913 18:47:44.050" starttime="20170913 18:47:44.050"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions</arg>
</arguments>
<msg timestamp="20170913 18:47:44.051" level="INFO">Executing : Table Must Exist  |  sessions </msg>
<msg timestamp="20170913 18:47:44.051" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sessions' </msg>
<status status="PASS" endtime="20170913 18:47:44.051" starttime="20170913 18:47:44.050"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions_history</arg>
</arguments>
<msg timestamp="20170913 18:47:44.052" level="INFO">Executing : Table Must Exist  |  sessions_history </msg>
<msg timestamp="20170913 18:47:44.052" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sessions_history' </msg>
<status status="PASS" endtime="20170913 18:47:44.052" starttime="20170913 18:47:44.051"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes</arg>
</arguments>
<msg timestamp="20170913 18:47:44.053" level="INFO">Executing : Table Must Exist  |  sharedAppTypes </msg>
<msg timestamp="20170913 18:47:44.053" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedAppTypes' </msg>
<status status="PASS" endtime="20170913 18:47:44.053" starttime="20170913 18:47:44.052"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes_history</arg>
</arguments>
<msg timestamp="20170913 18:47:44.054" level="INFO">Executing : Table Must Exist  |  sharedAppTypes_history </msg>
<msg timestamp="20170913 18:47:44.054" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedAppTypes_history' </msg>
<status status="PASS" endtime="20170913 18:47:44.054" starttime="20170913 18:47:44.053"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes</arg>
</arguments>
<msg timestamp="20170913 18:47:44.055" level="INFO">Executing : Table Must Exist  |  sharedPackageTypes </msg>
<msg timestamp="20170913 18:47:44.055" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedPackageTypes' </msg>
<status status="PASS" endtime="20170913 18:47:44.055" starttime="20170913 18:47:44.055"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes_history</arg>
</arguments>
<msg timestamp="20170913 18:47:44.056" level="INFO">Executing : Table Must Exist  |  sharedPackageTypes_history </msg>
<msg timestamp="20170913 18:47:44.056" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedPackageTypes_history' </msg>
<status status="PASS" endtime="20170913 18:47:44.056" starttime="20170913 18:47:44.056"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>statuses</arg>
</arguments>
<msg timestamp="20170913 18:47:44.057" level="INFO">Executing : Table Must Exist  |  statuses </msg>
<msg timestamp="20170913 18:47:44.057" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='statuses' </msg>
<status status="PASS" endtime="20170913 18:47:44.057" starttime="20170913 18:47:44.057"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks</arg>
</arguments>
<msg timestamp="20170913 18:47:44.058" level="INFO">Executing : Table Must Exist  |  tasks </msg>
<msg timestamp="20170913 18:47:44.058" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='tasks' </msg>
<status status="PASS" endtime="20170913 18:47:44.058" starttime="20170913 18:47:44.058"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks_history</arg>
</arguments>
<msg timestamp="20170913 18:47:44.059" level="INFO">Executing : Table Must Exist  |  tasks_history </msg>
<msg timestamp="20170913 18:47:44.059" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='tasks_history' </msg>
<status status="PASS" endtime="20170913 18:47:44.059" starttime="20170913 18:47:44.058"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces</arg>
</arguments>
<msg timestamp="20170913 18:47:44.060" level="INFO">Executing : Table Must Exist  |  traces </msg>
<msg timestamp="20170913 18:47:44.060" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='traces' </msg>
<status status="PASS" endtime="20170913 18:47:44.060" starttime="20170913 18:47:44.060"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces_history</arg>
</arguments>
<msg timestamp="20170913 18:47:44.061" level="INFO">Executing : Table Must Exist  |  traces_history </msg>
<msg timestamp="20170913 18:47:44.061" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='traces_history' </msg>
<status status="PASS" endtime="20170913 18:47:44.061" starttime="20170913 18:47:44.061"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>userRights</arg>
</arguments>
<msg timestamp="20170913 18:47:44.062" level="INFO">Executing : Table Must Exist  |  userRights </msg>
<msg timestamp="20170913 18:47:44.062" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='userRights' </msg>
<status status="PASS" endtime="20170913 18:47:44.063" starttime="20170913 18:47:44.062"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups</arg>
</arguments>
<msg timestamp="20170913 18:47:44.063" level="INFO">Executing : Table Must Exist  |  usergroups </msg>
<msg timestamp="20170913 18:47:44.063" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='usergroups' </msg>
<status status="PASS" endtime="20170913 18:47:44.064" starttime="20170913 18:47:44.063"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups_history</arg>
</arguments>
<msg timestamp="20170913 18:47:44.064" level="INFO">Executing : Table Must Exist  |  usergroups_history </msg>
<msg timestamp="20170913 18:47:44.065" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='usergroups_history' </msg>
<status status="PASS" endtime="20170913 18:47:44.065" starttime="20170913 18:47:44.064"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users</arg>
</arguments>
<msg timestamp="20170913 18:47:44.065" level="INFO">Executing : Table Must Exist  |  users </msg>
<msg timestamp="20170913 18:47:44.065" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='users' </msg>
<status status="PASS" endtime="20170913 18:47:44.066" starttime="20170913 18:47:44.065"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users_history</arg>
</arguments>
<msg timestamp="20170913 18:47:44.066" level="INFO">Executing : Table Must Exist  |  users_history </msg>
<msg timestamp="20170913 18:47:44.066" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='users_history' </msg>
<status status="PASS" endtime="20170913 18:47:44.067" starttime="20170913 18:47:44.066"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>version</arg>
</arguments>
<msg timestamp="20170913 18:47:44.067" level="INFO">Executing : Table Must Exist  |  version </msg>
<msg timestamp="20170913 18:47:44.067" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='version' </msg>
<status status="PASS" endtime="20170913 18:47:44.068" starttime="20170913 18:47:44.067"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>versions</arg>
</arguments>
<msg timestamp="20170913 18:47:44.068" level="INFO">Executing : Table Must Exist  |  versions </msg>
<msg timestamp="20170913 18:47:44.068" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='versions' </msg>
<status status="PASS" endtime="20170913 18:47:44.069" starttime="20170913 18:47:44.068"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps</arg>
</arguments>
<msg timestamp="20170913 18:47:44.069" level="INFO">Executing : Table Must Exist  |  view_apps </msg>
<msg timestamp="20170913 18:47:44.069" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps' </msg>
<status status="PASS" endtime="20170913 18:47:44.070" starttime="20170913 18:47:44.069"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps_for_offering</arg>
</arguments>
<msg timestamp="20170913 18:47:44.070" level="INFO">Executing : Table Must Exist  |  view_apps_for_offering </msg>
<msg timestamp="20170913 18:47:44.070" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps_for_offering' </msg>
<status status="PASS" endtime="20170913 18:47:44.071" starttime="20170913 18:47:44.070"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps_for_offering_with_file_sizes</arg>
</arguments>
<msg timestamp="20170913 18:47:44.071" level="INFO">Executing : Table Must Exist  |  view_apps_for_offering_with_file_sizes </msg>
<msg timestamp="20170913 18:47:44.071" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps_for_offering_with_file_sizes' </msg>
<status status="PASS" endtime="20170913 18:47:44.072" starttime="20170913 18:47:44.071"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_datas</arg>
</arguments>
<msg timestamp="20170913 18:47:44.072" level="INFO">Executing : Table Must Exist  |  view_datas </msg>
<msg timestamp="20170913 18:47:44.072" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_datas' </msg>
<status status="PASS" endtime="20170913 18:47:44.073" starttime="20170913 18:47:44.072"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_executables</arg>
</arguments>
<msg timestamp="20170913 18:47:44.073" level="INFO">Executing : Table Must Exist  |  view_executables </msg>
<msg timestamp="20170913 18:47:44.073" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_executables' </msg>
<status status="PASS" endtime="20170913 18:47:44.074" starttime="20170913 18:47:44.073"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_groups</arg>
</arguments>
<msg timestamp="20170913 18:47:44.074" level="INFO">Executing : Table Must Exist  |  view_groups </msg>
<msg timestamp="20170913 18:47:44.074" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_groups' </msg>
<status status="PASS" endtime="20170913 18:47:44.075" starttime="20170913 18:47:44.074"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts</arg>
</arguments>
<msg timestamp="20170913 18:47:44.075" level="INFO">Executing : Table Must Exist  |  view_hosts </msg>
<msg timestamp="20170913 18:47:44.075" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts' </msg>
<status status="PASS" endtime="20170913 18:47:44.076" starttime="20170913 18:47:44.075"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_deployable</arg>
</arguments>
<msg timestamp="20170913 18:47:44.076" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_deployable </msg>
<msg timestamp="20170913 18:47:44.076" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_deployable' </msg>
<status status="PASS" endtime="20170913 18:47:44.077" starttime="20170913 18:47:44.076"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_deployable_and_shared</arg>
</arguments>
<msg timestamp="20170913 18:47:44.077" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_deployable_and_shared </msg>
<msg timestamp="20170913 18:47:44.078" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_deployable_and_shared' </msg>
<status status="PASS" endtime="20170913 18:47:44.078" starttime="20170913 18:47:44.077"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_shared</arg>
</arguments>
<msg timestamp="20170913 18:47:44.079" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_shared </msg>
<msg timestamp="20170913 18:47:44.079" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_shared' </msg>
<status status="PASS" endtime="20170913 18:47:44.079" starttime="20170913 18:47:44.078"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_sessions</arg>
</arguments>
<msg timestamp="20170913 18:47:44.080" level="INFO">Executing : Table Must Exist  |  view_sessions </msg>
<msg timestamp="20170913 18:47:44.080" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_sessions' </msg>
<status status="PASS" endtime="20170913 18:47:44.080" starttime="20170913 18:47:44.080"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_tasks</arg>
</arguments>
<msg timestamp="20170913 18:47:44.081" level="INFO">Executing : Table Must Exist  |  view_tasks </msg>
<msg timestamp="20170913 18:47:44.081" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_tasks' </msg>
<status status="PASS" endtime="20170913 18:47:44.081" starttime="20170913 18:47:44.081"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_traces</arg>
</arguments>
<msg timestamp="20170913 18:47:44.082" level="INFO">Executing : Table Must Exist  |  view_traces </msg>
<msg timestamp="20170913 18:47:44.082" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_traces' </msg>
<status status="PASS" endtime="20170913 18:47:44.082" starttime="20170913 18:47:44.081"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_usergroups</arg>
</arguments>
<msg timestamp="20170913 18:47:44.083" level="INFO">Executing : Table Must Exist  |  view_usergroups </msg>
<msg timestamp="20170913 18:47:44.083" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_usergroups' </msg>
<status status="PASS" endtime="20170913 18:47:44.083" starttime="20170913 18:47:44.083"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users</arg>
</arguments>
<msg timestamp="20170913 18:47:44.084" level="INFO">Executing : Table Must Exist  |  view_users </msg>
<msg timestamp="20170913 18:47:44.084" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users' </msg>
<status status="PASS" endtime="20170913 18:47:44.084" starttime="20170913 18:47:44.083"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_apps</arg>
</arguments>
<msg timestamp="20170913 18:47:44.085" level="INFO">Executing : Table Must Exist  |  view_users_apps </msg>
<msg timestamp="20170913 18:47:44.085" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_apps' </msg>
<status status="PASS" endtime="20170913 18:47:44.085" starttime="20170913 18:47:44.084"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_datas</arg>
</arguments>
<msg timestamp="20170913 18:47:44.086" level="INFO">Executing : Table Must Exist  |  view_users_datas </msg>
<msg timestamp="20170913 18:47:44.086" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_datas' </msg>
<status status="PASS" endtime="20170913 18:47:44.086" starttime="20170913 18:47:44.086"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_groups</arg>
</arguments>
<msg timestamp="20170913 18:47:44.087" level="INFO">Executing : Table Must Exist  |  view_users_groups </msg>
<msg timestamp="20170913 18:47:44.087" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_groups' </msg>
<status status="PASS" endtime="20170913 18:47:44.087" starttime="20170913 18:47:44.086"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_hosts</arg>
</arguments>
<msg timestamp="20170913 18:47:44.088" level="INFO">Executing : Table Must Exist  |  view_users_hosts </msg>
<msg timestamp="20170913 18:47:44.088" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_hosts' </msg>
<status status="PASS" endtime="20170913 18:47:44.088" starttime="20170913 18:47:44.087"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_sessions</arg>
</arguments>
<msg timestamp="20170913 18:47:44.089" level="INFO">Executing : Table Must Exist  |  view_users_sessions </msg>
<msg timestamp="20170913 18:47:44.089" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_sessions' </msg>
<status status="PASS" endtime="20170913 18:47:44.089" starttime="20170913 18:47:44.088"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_tasks</arg>
</arguments>
<msg timestamp="20170913 18:47:44.090" level="INFO">Executing : Table Must Exist  |  view_users_tasks </msg>
<msg timestamp="20170913 18:47:44.090" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_tasks' </msg>
<status status="PASS" endtime="20170913 18:47:44.090" starttime="20170913 18:47:44.090"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_traces</arg>
</arguments>
<msg timestamp="20170913 18:47:44.091" level="INFO">Executing : Table Must Exist  |  view_users_traces </msg>
<msg timestamp="20170913 18:47:44.091" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_traces' </msg>
<status status="PASS" endtime="20170913 18:47:44.091" starttime="20170913 18:47:44.090"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_usergroups</arg>
</arguments>
<msg timestamp="20170913 18:47:44.092" level="INFO">Executing : Table Must Exist  |  view_users_usergroups </msg>
<msg timestamp="20170913 18:47:44.092" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_usergroups' </msg>
<status status="PASS" endtime="20170913 18:47:44.092" starttime="20170913 18:47:44.091"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_users</arg>
</arguments>
<msg timestamp="20170913 18:47:44.093" level="INFO">Executing : Table Must Exist  |  view_users_users </msg>
<msg timestamp="20170913 18:47:44.093" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_users' </msg>
<status status="PASS" endtime="20170913 18:47:44.093" starttime="20170913 18:47:44.092"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_works</arg>
</arguments>
<msg timestamp="20170913 18:47:44.094" level="INFO">Executing : Table Must Exist  |  view_users_works </msg>
<msg timestamp="20170913 18:47:44.094" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_works' </msg>
<status status="PASS" endtime="20170913 18:47:44.094" starttime="20170913 18:47:44.093"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works</arg>
</arguments>
<msg timestamp="20170913 18:47:44.095" level="INFO">Executing : Table Must Exist  |  view_works </msg>
<msg timestamp="20170913 18:47:44.095" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works' </msg>
<status status="PASS" endtime="20170913 18:47:44.096" starttime="20170913 18:47:44.095"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works_for_billing</arg>
</arguments>
<msg timestamp="20170913 18:47:44.096" level="INFO">Executing : Table Must Exist  |  view_works_for_billing </msg>
<msg timestamp="20170913 18:47:44.096" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works_for_billing' </msg>
<status status="PASS" endtime="20170913 18:47:44.097" starttime="20170913 18:47:44.096"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works_for_billing_with_file_sizes</arg>
</arguments>
<msg timestamp="20170913 18:47:44.097" level="INFO">Executing : Table Must Exist  |  view_works_for_billing_with_file_sizes </msg>
<msg timestamp="20170913 18:47:44.097" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works_for_billing_with_file_sizes' </msg>
<status status="PASS" endtime="20170913 18:47:44.097" starttime="20170913 18:47:44.097"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works</arg>
</arguments>
<msg timestamp="20170913 18:47:44.098" level="INFO">Executing : Table Must Exist  |  works </msg>
<msg timestamp="20170913 18:47:44.098" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='works' </msg>
<status status="PASS" endtime="20170913 18:47:44.099" starttime="20170913 18:47:44.098"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works_history</arg>
</arguments>
<msg timestamp="20170913 18:47:44.100" level="INFO">Executing : Table Must Exist  |  works_history </msg>
<msg timestamp="20170913 18:47:44.100" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='works_history' </msg>
<status status="PASS" endtime="20170913 18:47:44.100" starttime="20170913 18:47:44.099"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170913 18:47:44.101" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170913 18:47:44.101" starttime="20170913 18:47:44.101"></status>
</kw>
<status status="PASS" endtime="20170913 18:47:44.101" starttime="20170913 18:47:44.101"></status>
</kw>
<status status="PASS" endtime="20170913 18:47:44.101" starttime="20170913 18:47:44.022"></status>
</kw>
<status status="PASS" endtime="20170913 18:47:44.101" starttime="20170913 18:47:44.022"></status>
</kw>
<kw name="Start XtremWeb Server" library="XWServer">
<arguments>
<arg>${DIST_XWHEP_PATH}</arg>
</arguments>
<kw name="File Should Exist" library="OperatingSystem">
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xtremweb.server.conf</arg>
</arguments>
<msg timestamp="20170913 18:47:44.102" html="yes" level="INFO">File '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf&lt;/a&gt;' exists.</msg>
<status status="PASS" endtime="20170913 18:47:44.102" starttime="20170913 18:47:44.102"></status>
</kw>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xtremweb.server.conf</arg>
</arguments>
<assign>
<var>${config_content}</var>
</assign>
<msg timestamp="20170913 18:47:44.103" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf&lt;/a&gt;'.</msg>
<msg timestamp="20170913 18:47:44.104" level="INFO">${config_content} = #
# Copyrights     : CNRS
# Author         : Oleg Lodygensky
# Acknowledgment : XtremWeb-HEP is based on XtremWeb 1.8.0 by inria : http://www.xtremweb.net/
# Web            : http://www.xtremweb-hep.o...</msg>
<status status="PASS" endtime="20170913 18:47:44.104" starttime="20170913 18:47:44.103"></status>
</kw>
<kw name="Remove String Using Regexp" library="String">
<doc>Removes ``patterns`` from the given ``string``.</doc>
<arguments>
<arg>${config_content}</arg>
<arg>LAUNCHERURL=${XWCONFIGURE.VALUES.XWUPGRADEURL}</arg>
</arguments>
<assign>
<var>${config_content_filtered}</var>
</assign>
<msg timestamp="20170913 18:47:44.104" level="INFO">${config_content_filtered} = #
# Copyrights     : CNRS
# Author         : Oleg Lodygensky
# Acknowledgment : XtremWeb-HEP is based on XtremWeb 1.8.0 by inria : http://www.xtremweb.net/
# Web            : http://www.xtremweb-hep.o...</msg>
<status status="PASS" endtime="20170913 18:47:44.104" starttime="20170913 18:47:44.104"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${config_content_filtered}</arg>
<arg>\## HTTPSPORT=443</arg>
<arg>HTTPSPORT=${XWCONFIGURE.VALUES.HTTPSPORT}</arg>
</arguments>
<assign>
<var>${config_content_filtered}</var>
</assign>
<msg timestamp="20170913 18:47:44.105" level="INFO">${config_content_filtered} = #
# Copyrights     : CNRS
# Author         : Oleg Lodygensky
# Acknowledgment : XtremWeb-HEP is based on XtremWeb 1.8.0 by inria : http://www.xtremweb.net/
# Web            : http://www.xtremweb-hep.o...</msg>
<status status="PASS" endtime="20170913 18:47:44.105" starttime="20170913 18:47:44.104"></status>
</kw>
<kw name="Create File" library="OperatingSystem">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xtremweb.server.conf</arg>
<arg>content=${config_content_filtered}</arg>
</arguments>
<msg timestamp="20170913 18:47:44.113" html="yes" level="INFO">Created file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170913 18:47:44.113" starttime="20170913 18:47:44.105"></status>
</kw>
<kw name="Remove File" library="OperatingSystem">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<msg timestamp="20170913 18:47:44.115" html="yes" level="INFO">Removed file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170913 18:47:44.116" starttime="20170913 18:47:44.114"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/bin/xtremweb.server console</arg>
<arg>shell=yes</arg>
<arg>stderr=STDOUT</arg>
<arg>stdout=${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<assign>
<var>${created_process}</var>
</assign>
<msg timestamp="20170913 18:47:44.117" level="INFO">Starting process:
/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/xtremweb.server console</msg>
<msg timestamp="20170913 18:47:44.120" level="INFO">${created_process} = 3</msg>
<status status="PASS" endtime="20170913 18:47:44.120" starttime="20170913 18:47:44.116"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SERVER_PROCESS}</arg>
<arg>${created_process}</arg>
</arguments>
<msg timestamp="20170913 18:47:44.121" level="INFO">${SERVER_PROCESS} = 3</msg>
<status status="PASS" endtime="20170913 18:47:44.122" starttime="20170913 18:47:44.121"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2 min</arg>
<arg>5 sec</arg>
<arg>Check XtremWeb Server Start From Log</arg>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<kw name="Check XtremWeb Server Start From Log" library="XWServer">
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<kw name="Log XtremWeb Process Log File" library="XWServer">
<kw name="Log File" library="OperatingSystem">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<msg timestamp="20170913 18:47:44.123" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170913 18:47:44.125" level="INFO"></msg>
<status status="PASS" endtime="20170913 18:47:44.125" starttime="20170913 18:47:44.123"></status>
</kw>
<status status="PASS" endtime="20170913 18:47:44.125" starttime="20170913 18:47:44.123"></status>
</kw>
<kw name="Grep File" library="OperatingSystem">
<doc>Returns the lines of the specified file that match the ``pattern``.</doc>
<arguments>
<arg>${log}</arg>
<arg>listening on port : ${XWCONFIGURE.VALUES.HTTPSPORT}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20170913 18:47:44.126" html="yes" level="INFO">Reading file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170913 18:47:44.126" level="INFO">0 out of 0 lines matched</msg>
<msg timestamp="20170913 18:47:44.126" level="INFO">${ret} = </msg>
<status status="PASS" endtime="20170913 18:47:44.126" starttime="20170913 18:47:44.125"></status>
</kw>
<kw name="Get Line Count" library="String">
<doc>Returns and logs the number of lines in the given string.</doc>
<arguments>
<arg>${ret}</arg>
</arguments>
<assign>
<var>${line_count}</var>
</assign>
<msg timestamp="20170913 18:47:44.127" level="INFO">0 lines</msg>
<msg timestamp="20170913 18:47:44.127" level="INFO">${line_count} = 0</msg>
<status status="PASS" endtime="20170913 18:47:44.127" starttime="20170913 18:47:44.126"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${line_count}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20170913 18:47:44.127" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20170913 18:47:44.128" level="FAIL">0 != 2</msg>
<status status="FAIL" endtime="20170913 18:47:44.128" starttime="20170913 18:47:44.127"></status>
</kw>
<status status="FAIL" endtime="20170913 18:47:44.128" starttime="20170913 18:47:44.122"></status>
</kw>
<kw name="Check XtremWeb Server Start From Log" library="XWServer">
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<kw name="Log XtremWeb Process Log File" library="XWServer">
<kw name="Log File" library="OperatingSystem">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<msg timestamp="20170913 18:47:49.131" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170913 18:47:49.138" level="INFO">Wed Sep 13 18:47:44 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : checking launch url
Wed Sep 13 18:47:44 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] WARNING : no launcher URL defined
Wed Sep 13 18:47:44 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : launching SmartSockets hub
[13/Sep/2017:18:47:46 +0000] [main_1] ERROR : setRole : role redefined ?! (was SERVER)
[13/Sep/2017:18:47:46 +0000] [xtremweb.database.DBConnPoolThread_main_1] INFO : Connection to database jdbc:mysql://localhost/xtremweb is ok, 70 created
[13/Sep/2017:18:47:46 +0000] [xtremweb.dispatcher.DBInterface_main_1] WARN : Can't retrieve any app
[13/Sep/2017:18:47:47 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't create ProxyValidator
[13/Sep/2017:18:47:47 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.io.FileNotFoundException: /tmp/castore (No such file or directory) (/tmp/castore (No such file or directory))
[13/Sep/2017:18:47:47 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't add CA certificates to keystore
[13/Sep/2017:18:47:47 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.lang.NullPointerException (null)
[13/Sep/2017:18:47:47 +0000] [xtremweb.dispatcher.HashTaskSet_TaskSet_14] INFO : TaskSet started (300000)
[13/Sep/2017:18:47:48 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : still waiting task set...
[13/Sep/2017:18:47:48 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : UDP server not started
[13/Sep/2017:18:47:48 +0000] [xtremweb.communications.TCPServer_TCPServerNIO_15] INFO : started, listening on port : 4321
log4j:WARN No appenders could be found for logger (org.eclipse.jetty.util.log).
log4j:WARN Please initialize the log4j system properly.
log4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.
[13/Sep/2017:18:47:48 +0000] [xtremweb.communications.HTTPServer_main_1] INFO : started, listening on port : 9443
[13/Sep/2017:18:47:48 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : FACEBOOK : java.net.MalformedURLException: no protocol: 
[13/Sep/2017:18:47:48 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : GOOGLE : java.net.MalformedURLException: no protocol: 
[13/Sep/2017:18:47:48 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : TWITTER : java.net.MalformedURLException: no protocol: 
[13/Sep/2017:18:47:48 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : YAHOO : java.net.MalformedURLException: no protocol: 
[13/Sep/2017:18:47:48 +0000] [main_1] ERROR : Can't add new entry to keystore
[13/Sep/2017:18:47:48 +0000] [main_1] WARN : javax.net.ssl.SSLHandshakeException: sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target (sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target)
[13/Sep/2017:18:47:48 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : XWHEP Dispatcher(10.6.0-head) started [Wed Sep 13 18:47:48 UTC 2017]
[13/Sep/2017:18:47:48 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : DB vendor  = mysql
[13/Sep/2017:18:47:48 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : mileStone  = 
[13/Sep/2017:18:47:48 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Time out   = 15000
[13/Sep/2017:18:47:48 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Disk opt'd = true
[13/Sep/2017:18:47:48 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Net  opt'd = true
[13/Sep/2017:18:47:48 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : NIO        = true
XWHEP Dispatcher started  Wed Sep 13 18:47:48 UTC 2017
Name             : vagrant-ubuntu-trusty-64
Version          : 10.6.0-head
Identity         : 
XWRole           : SERVER
Started on       : Wed Sep 13 18:47:46 UTC 2017
Scheduler        : xtremweb.dispatcher.MatchingScheduler
SmartSockets hub : 172.28.128.3/172.17.0.1/10.0.2.15-4329#52.45.72.e5.cc.7c.00.00.d5.75.02.42.7b.de.a1.dc~vagrant
Server HTTP      : true
Alive            : 300
Alive time out   : 900
Polling time out : 15000
Optimize zip     : true
Optimize network : true
NIO              : true
Comm layer       : xtremweb.communications.TCPClient
Socket time out  : 60000
Socket retries   : 50
Max connections  : 200
TCP port         : 4321
UDP port         : 4323
HTPP  port       : 80
HTPPS port       : 9443
Sun RPC interposition port : 4328
Sandbox path : /usr/bin/lxc
Sandbox launch args : 
Host &lt;host&gt;&lt;uid&gt;c5e6817e-133e-4df4-9471-edf218252921&lt;/uid&gt;&lt;accessrights&gt;0x755&lt;/accessrights&gt;&lt;name&gt;vagrant-ubuntu-trusty-64&lt;/name&gt;&lt;cpuload&gt;50&lt;/cpuload&gt;&lt;natedipaddr&gt;10.0.2.15&lt;/natedipaddr&gt;&lt;ipaddr&gt;10.0.2.15&lt;/ipaddr&gt;&lt;hwaddr&gt;&lt;/hwaddr&gt;&lt;timezone&gt;Etc/UTC&lt;/timezone&gt;&lt;os&gt;LINUX&lt;/os&gt;&lt;osversion&gt;3.13.0-129-generic&lt;/osversion&gt;&lt;javaversion&gt;1.8.0_141&lt;/javaversion&gt;&lt;javadatamodel&gt;64&lt;/javadatamodel&gt;&lt;cputype&gt;AMD64&lt;/cputype&gt;&lt;cpunb&gt;1&lt;/cpunb&gt;&lt;cpumodel&gt;unknown&lt;/cpumodel&gt;&lt;cpuspeed&gt;0&lt;/cpuspeed&gt;&lt;totalmem&gt;0&lt;/totalmem&gt;&lt;totalswap&gt;0&lt;/totalswap&gt;&lt;totaltmp&gt;40284&lt;/totaltmp&gt;&lt;freetmp&gt;37328&lt;/freetmp&gt;&lt;project&gt;&lt;/project&gt;&lt;active&gt;true&lt;/active&gt;&lt;incomingconnections&gt;false&lt;/incomingconnections&gt;&lt;available&gt;false&lt;/available&gt;&lt;pilotjob&gt;false&lt;/pilotjob&gt;&lt;sgid&gt;&lt;/sgid&gt;&lt;timeout&gt;15000&lt;/timeout&gt;&lt;traces&gt;false&lt;/traces&gt;&lt;acceptbin&gt;false&lt;/acceptbin&gt;&lt;version&gt;10.6.0-head&lt;/version&gt;&lt;/host&gt;
[13/Sep/2017:18:47:48 +0000] [xtremweb.communications.HTTPServer_HTTPServer_218] INFO : started, listening on port : 9443
</msg>
<status status="PASS" endtime="20170913 18:47:49.138" starttime="20170913 18:47:49.130"></status>
</kw>
<status status="PASS" endtime="20170913 18:47:49.139" starttime="20170913 18:47:49.130"></status>
</kw>
<kw name="Grep File" library="OperatingSystem">
<doc>Returns the lines of the specified file that match the ``pattern``.</doc>
<arguments>
<arg>${log}</arg>
<arg>listening on port : ${XWCONFIGURE.VALUES.HTTPSPORT}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20170913 18:47:49.139" html="yes" level="INFO">Reading file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170913 18:47:49.141" level="INFO">2 out of 59 lines matched</msg>
<msg timestamp="20170913 18:47:49.141" level="INFO">${ret} = [13/Sep/2017:18:47:48 +0000] [xtremweb.communications.HTTPServer_main_1] INFO : started, listening on port : 9443
[13/Sep/2017:18:47:48 +0000] [xtremweb.communications.HTTPServer_HTTPServer_218] INFO ...</msg>
<status status="PASS" endtime="20170913 18:47:49.141" starttime="20170913 18:47:49.139"></status>
</kw>
<kw name="Get Line Count" library="String">
<doc>Returns and logs the number of lines in the given string.</doc>
<arguments>
<arg>${ret}</arg>
</arguments>
<assign>
<var>${line_count}</var>
</assign>
<msg timestamp="20170913 18:47:49.142" level="INFO">2 lines</msg>
<msg timestamp="20170913 18:47:49.142" level="INFO">${line_count} = 2</msg>
<status status="PASS" endtime="20170913 18:47:49.142" starttime="20170913 18:47:49.141"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${line_count}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20170913 18:47:49.142" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170913 18:47:49.142" starttime="20170913 18:47:49.142"></status>
</kw>
<status status="PASS" endtime="20170913 18:47:49.142" starttime="20170913 18:47:49.129"></status>
</kw>
<status status="PASS" endtime="20170913 18:47:49.142" starttime="20170913 18:47:44.122"></status>
</kw>
<kw name="Log XtremWeb Process Log File" library="XWServer">
<kw name="Log File" library="OperatingSystem">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<msg timestamp="20170913 18:47:49.143" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170913 18:47:49.144" level="INFO">Wed Sep 13 18:47:44 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : checking launch url
Wed Sep 13 18:47:44 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] WARNING : no launcher URL defined
Wed Sep 13 18:47:44 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : launching SmartSockets hub
[13/Sep/2017:18:47:46 +0000] [main_1] ERROR : setRole : role redefined ?! (was SERVER)
[13/Sep/2017:18:47:46 +0000] [xtremweb.database.DBConnPoolThread_main_1] INFO : Connection to database jdbc:mysql://localhost/xtremweb is ok, 70 created
[13/Sep/2017:18:47:46 +0000] [xtremweb.dispatcher.DBInterface_main_1] WARN : Can't retrieve any app
[13/Sep/2017:18:47:47 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't create ProxyValidator
[13/Sep/2017:18:47:47 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.io.FileNotFoundException: /tmp/castore (No such file or directory) (/tmp/castore (No such file or directory))
[13/Sep/2017:18:47:47 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't add CA certificates to keystore
[13/Sep/2017:18:47:47 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.lang.NullPointerException (null)
[13/Sep/2017:18:47:47 +0000] [xtremweb.dispatcher.HashTaskSet_TaskSet_14] INFO : TaskSet started (300000)
[13/Sep/2017:18:47:48 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : still waiting task set...
[13/Sep/2017:18:47:48 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : UDP server not started
[13/Sep/2017:18:47:48 +0000] [xtremweb.communications.TCPServer_TCPServerNIO_15] INFO : started, listening on port : 4321
log4j:WARN No appenders could be found for logger (org.eclipse.jetty.util.log).
log4j:WARN Please initialize the log4j system properly.
log4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.
[13/Sep/2017:18:47:48 +0000] [xtremweb.communications.HTTPServer_main_1] INFO : started, listening on port : 9443
[13/Sep/2017:18:47:48 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : FACEBOOK : java.net.MalformedURLException: no protocol: 
[13/Sep/2017:18:47:48 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : GOOGLE : java.net.MalformedURLException: no protocol: 
[13/Sep/2017:18:47:48 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : TWITTER : java.net.MalformedURLException: no protocol: 
[13/Sep/2017:18:47:48 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : YAHOO : java.net.MalformedURLException: no protocol: 
[13/Sep/2017:18:47:48 +0000] [main_1] ERROR : Can't add new entry to keystore
[13/Sep/2017:18:47:48 +0000] [main_1] WARN : javax.net.ssl.SSLHandshakeException: sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target (sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target)
[13/Sep/2017:18:47:48 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : XWHEP Dispatcher(10.6.0-head) started [Wed Sep 13 18:47:48 UTC 2017]
[13/Sep/2017:18:47:48 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : DB vendor  = mysql
[13/Sep/2017:18:47:48 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : mileStone  = 
[13/Sep/2017:18:47:48 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Time out   = 15000
[13/Sep/2017:18:47:48 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Disk opt'd = true
[13/Sep/2017:18:47:48 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Net  opt'd = true
[13/Sep/2017:18:47:48 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : NIO        = true
XWHEP Dispatcher started  Wed Sep 13 18:47:48 UTC 2017
Name             : vagrant-ubuntu-trusty-64
Version          : 10.6.0-head
Identity         : 
XWRole           : SERVER
Started on       : Wed Sep 13 18:47:46 UTC 2017
Scheduler        : xtremweb.dispatcher.MatchingScheduler
SmartSockets hub : 172.28.128.3/172.17.0.1/10.0.2.15-4329#52.45.72.e5.cc.7c.00.00.d5.75.02.42.7b.de.a1.dc~vagrant
Server HTTP      : true
Alive            : 300
Alive time out   : 900
Polling time out : 15000
Optimize zip     : true
Optimize network : true
NIO              : true
Comm layer       : xtremweb.communications.TCPClient
Socket time out  : 60000
Socket retries   : 50
Max connections  : 200
TCP port         : 4321
UDP port         : 4323
HTPP  port       : 80
HTPPS port       : 9443
Sun RPC interposition port : 4328
Sandbox path : /usr/bin/lxc
Sandbox launch args : 
Host &lt;host&gt;&lt;uid&gt;c5e6817e-133e-4df4-9471-edf218252921&lt;/uid&gt;&lt;accessrights&gt;0x755&lt;/accessrights&gt;&lt;name&gt;vagrant-ubuntu-trusty-64&lt;/name&gt;&lt;cpuload&gt;50&lt;/cpuload&gt;&lt;natedipaddr&gt;10.0.2.15&lt;/natedipaddr&gt;&lt;ipaddr&gt;10.0.2.15&lt;/ipaddr&gt;&lt;hwaddr&gt;&lt;/hwaddr&gt;&lt;timezone&gt;Etc/UTC&lt;/timezone&gt;&lt;os&gt;LINUX&lt;/os&gt;&lt;osversion&gt;3.13.0-129-generic&lt;/osversion&gt;&lt;javaversion&gt;1.8.0_141&lt;/javaversion&gt;&lt;javadatamodel&gt;64&lt;/javadatamodel&gt;&lt;cputype&gt;AMD64&lt;/cputype&gt;&lt;cpunb&gt;1&lt;/cpunb&gt;&lt;cpumodel&gt;unknown&lt;/cpumodel&gt;&lt;cpuspeed&gt;0&lt;/cpuspeed&gt;&lt;totalmem&gt;0&lt;/totalmem&gt;&lt;totalswap&gt;0&lt;/totalswap&gt;&lt;totaltmp&gt;40284&lt;/totaltmp&gt;&lt;freetmp&gt;37328&lt;/freetmp&gt;&lt;project&gt;&lt;/project&gt;&lt;active&gt;true&lt;/active&gt;&lt;incomingconnections&gt;false&lt;/incomingconnections&gt;&lt;available&gt;false&lt;/available&gt;&lt;pilotjob&gt;false&lt;/pilotjob&gt;&lt;sgid&gt;&lt;/sgid&gt;&lt;timeout&gt;15000&lt;/timeout&gt;&lt;traces&gt;false&lt;/traces&gt;&lt;acceptbin&gt;false&lt;/acceptbin&gt;&lt;version&gt;10.6.0-head&lt;/version&gt;&lt;/host&gt;
[13/Sep/2017:18:47:48 +0000] [xtremweb.communications.HTTPServer_HTTPServer_218] INFO : started, listening on port : 9443
</msg>
<status status="PASS" endtime="20170913 18:47:49.144" starttime="20170913 18:47:49.143"></status>
</kw>
<status status="PASS" endtime="20170913 18:47:49.144" starttime="20170913 18:47:49.143"></status>
</kw>
<status status="PASS" endtime="20170913 18:47:49.144" starttime="20170913 18:47:44.101"></status>
</kw>
<kw name="Start XtremWeb Worker" library="XWWorker">
<arguments>
<arg>${DIST_XWHEP_PATH}</arg>
</arguments>
<kw name="File Should Exist" library="OperatingSystem">
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xtremweb.worker.conf</arg>
</arguments>
<msg timestamp="20170913 18:47:49.145" html="yes" level="INFO">File '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf&lt;/a&gt;' exists.</msg>
<status status="PASS" endtime="20170913 18:47:49.145" starttime="20170913 18:47:49.145"></status>
</kw>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xtremweb.worker.conf</arg>
</arguments>
<assign>
<var>${config_content}</var>
</assign>
<msg timestamp="20170913 18:47:49.146" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf&lt;/a&gt;'.</msg>
<msg timestamp="20170913 18:47:49.147" level="INFO">${config_content} = #
# Copyrights     : CNRS
# Author         : Oleg Lodygensky
# Acknowledgment : XtremWeb-HEP is based on XtremWeb 1.8.0 by inria : http://www.xtremweb.net/
# Web            : http://www.xtremweb-hep.o...</msg>
<status status="PASS" endtime="20170913 18:47:49.147" starttime="20170913 18:47:49.145"></status>
</kw>
<kw name="Remove String Using Regexp" library="String">
<doc>Removes ``patterns`` from the given ``string``.</doc>
<arguments>
<arg>${config_content}</arg>
<arg>LAUNCHERURL=${XWCONFIGURE.VALUES.XWUPGRADEURL}</arg>
</arguments>
<assign>
<var>${config_content_filtered}</var>
</assign>
<msg timestamp="20170913 18:47:49.148" level="INFO">${config_content_filtered} = #
# Copyrights     : CNRS
# Author         : Oleg Lodygensky
# Acknowledgment : XtremWeb-HEP is based on XtremWeb 1.8.0 by inria : http://www.xtremweb.net/
# Web            : http://www.xtremweb-hep.o...</msg>
<status status="PASS" endtime="20170913 18:47:49.148" starttime="20170913 18:47:49.147"></status>
</kw>
<kw name="Create File" library="OperatingSystem">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xtremweb.worker.conf</arg>
<arg>content=${config_content_filtered}</arg>
</arguments>
<msg timestamp="20170913 18:47:49.150" html="yes" level="INFO">Created file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170913 18:47:49.150" starttime="20170913 18:47:49.148"></status>
</kw>
<kw name="Remove File" library="OperatingSystem">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.worker.process.log</arg>
</arguments>
<msg timestamp="20170913 18:47:49.152" html="yes" level="INFO">Removed file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.worker.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.worker.process.log&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170913 18:47:49.152" starttime="20170913 18:47:49.150"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/bin/xtremweb.worker console</arg>
<arg>shell=yes</arg>
<arg>stderr=STDOUT</arg>
<arg>stdout=${DIST_XWHEP_PATH}/xwhep.worker.process.log</arg>
</arguments>
<assign>
<var>${created_process}</var>
</assign>
<msg timestamp="20170913 18:47:49.153" level="INFO">Starting process:
/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/xtremweb.worker console</msg>
<msg timestamp="20170913 18:47:49.156" level="INFO">${created_process} = 4</msg>
<status status="PASS" endtime="20170913 18:47:49.156" starttime="20170913 18:47:49.152"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${WORKER_PROCESS}</arg>
<arg>${created_process}</arg>
</arguments>
<msg timestamp="20170913 18:47:49.157" level="INFO">${WORKER_PROCESS} = 4</msg>
<status status="PASS" endtime="20170913 18:47:49.157" starttime="20170913 18:47:49.157"></status>
</kw>
<kw name="Log File" library="OperatingSystem">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.worker.process.log</arg>
</arguments>
<msg timestamp="20170913 18:47:49.158" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.worker.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.worker.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170913 18:47:49.159" level="INFO"></msg>
<status status="PASS" endtime="20170913 18:47:49.159" starttime="20170913 18:47:49.158"></status>
</kw>
<status status="PASS" endtime="20170913 18:47:49.160" starttime="20170913 18:47:49.144"></status>
</kw>
<status status="PASS" endtime="20170913 18:47:49.160" starttime="20170913 18:47:44.021"></status>
</kw>
<status status="PASS" endtime="20170913 18:47:49.160" starttime="20170913 18:46:28.460"></status>
</kw>
<kw name="Start Geth42" library="ETHGeth">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd ~/gethUtils &amp;&amp; ./resetANewChain42AndMine.sh</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${geth_result}</var>
</assign>
<msg timestamp="20170913 18:47:49.162" level="INFO">Starting process:
cd ~/gethUtils &amp;&amp; ./resetANewChain42AndMine.sh</msg>
<msg timestamp="20170913 18:47:49.166" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170913 18:58:08.105" level="INFO">Process completed.</msg>
<msg timestamp="20170913 18:58:08.106" level="INFO">${geth_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170913 18:58:08.106" starttime="20170913 18:47:49.161"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${geth_result.stderr}</arg>
</arguments>
<msg timestamp="20170913 18:58:08.106" level="INFO">WARN [09-13|18:47:54] No etherbase set and no accounts found as default 
INFO [09-13|18:47:54] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
INFO [09-13|18:47:54] Writing custom genesis block 
INFO [09-13|18:47:54] Successfully wrote genesis state         database=chaindata                                             hash=afad92…166fe3
INFO [09-13|18:47:54] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/lightchaindata cache=16 handles=16
INFO [09-13|18:47:54] Writing custom genesis block 
INFO [09-13|18:47:54] Successfully wrote genesis state         database=lightchaindata                                             hash=afad92…166fe3
WARN [09-13|18:47:54] No etherbase set and no accounts found as default 
INFO [09-13|18:48:01] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
INFO [09-13|18:48:01] Successfully wrote genesis state         database=chaindata                                             hash=afad92…166fe3
INFO [09-13|18:48:01] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/lightchaindata cache=16 handles=16
INFO [09-13|18:48:01] Successfully wrote genesis state         database=lightchaindata                                             hash=afad92…166fe3
INFO [09-13|18:48:04] Generating DAG in progress               epoch=1 percentage=0 elapsed=2.082s
INFO [09-13|18:48:06] Generating DAG in progress               epoch=1 percentage=1 elapsed=4.198s
INFO [09-13|18:48:09] Generating DAG in progress               epoch=1 percentage=2 elapsed=6.831s
INFO [09-13|18:48:11] Generating DAG in progress               epoch=1 percentage=3 elapsed=9.403s
INFO [09-13|18:48:14] Generating DAG in progress               epoch=1 percentage=4 elapsed=11.926s
INFO [09-13|18:48:16] Generating DAG in progress               epoch=1 percentage=5 elapsed=14.455s
INFO [09-13|18:48:19] Generating DAG in progress               epoch=1 percentage=6 elapsed=17.049s
INFO [09-13|18:48:21] Generating DAG in progress               epoch=1 percentage=7 elapsed=19.593s
INFO [09-13|18:48:24] Generating DAG in progress               epoch=1 percentage=8 elapsed=22.135s
INFO [09-13|18:48:26] Generating DAG in progress               epoch=1 percentage=9 elapsed=24.671s
INFO [09-13|18:48:29] Generating DAG in progress               epoch=1 percentage=10 elapsed=27.229s
INFO [09-13|18:48:32] Generating DAG in progress               epoch=1 percentage=11 elapsed=29.788s
INFO [09-13|18:48:35] Generating DAG in progress               epoch=1 percentage=12 elapsed=33.336s
INFO [09-13|18:48:38] Generating DAG in progress               epoch=1 percentage=13 elapsed=35.977s
INFO [09-13|18:48:41] Generating DAG in progress               epoch=1 percentage=14 elapsed=38.760s
INFO [09-13|18:48:43] Generating DAG in progress               epoch=1 percentage=15 elapsed=41.277s
INFO [09-13|18:48:46] Generating DAG in progress               epoch=1 percentage=16 elapsed=43.985s
INFO [09-13|18:48:48] Generating DAG in progress               epoch=1 percentage=17 elapsed=46.580s
INFO [09-13|18:48:51] Generating DAG in progress               epoch=1 percentage=18 elapsed=49.230s
INFO [09-13|18:48:54] Generating DAG in progress               epoch=1 percentage=19 elapsed=51.853s
INFO [09-13|18:48:56] Generating DAG in progress               epoch=1 percentage=20 elapsed=54.457s
INFO [09-13|18:48:59] Generating DAG in progress               epoch=1 percentage=21 elapsed=56.976s
INFO [09-13|18:49:01] Generating DAG in progress               epoch=1 percentage=22 elapsed=59.513s
INFO [09-13|18:49:04] Generating DAG in progress               epoch=1 percentage=23 elapsed=1m2.100s
INFO [09-13|18:49:06] Generating DAG in progress               epoch=1 percentage=24 elapsed=1m4.626s
INFO [09-13|18:49:09] Generating DAG in progress               epoch=1 percentage=25 elapsed=1m7.169s
INFO [09-13|18:49:11] Generating DAG in progress               epoch=1 percentage=26 elapsed=1m9.680s
INFO [09-13|18:49:14] Generating DAG in progress               epoch=1 percentage=27 elapsed=1m12.213s
INFO [09-13|18:49:17] Generating DAG in progress               epoch=1 percentage=28 elapsed=1m14.723s
INFO [09-13|18:49:19] Generating DAG in progress               epoch=1 percentage=29 elapsed=1m17.316s
INFO [09-13|18:49:22] Generating DAG in progress               epoch=1 percentage=30 elapsed=1m19.840s
INFO [09-13|18:49:24] Generating DAG in progress               epoch=1 percentage=31 elapsed=1m22.321s
INFO [09-13|18:49:27] Generating DAG in progress               epoch=1 percentage=32 elapsed=1m25.198s
INFO [09-13|18:49:30] Generating DAG in progress               epoch=1 percentage=33 elapsed=1m27.763s
INFO [09-13|18:49:32] Generating DAG in progress               epoch=1 percentage=34 elapsed=1m30.419s
INFO [09-13|18:49:35] Generating DAG in progress               epoch=1 percentage=35 elapsed=1m32.992s
INFO [09-13|18:49:37] Generating DAG in progress               epoch=1 percentage=36 elapsed=1m35.689s
INFO [09-13|18:49:40] Generating DAG in progress               epoch=1 percentage=37 elapsed=1m38.281s
INFO [09-13|18:49:43] Generating DAG in progress               epoch=1 percentage=38 elapsed=1m40.953s
INFO [09-13|18:49:45] Generating DAG in progress               epoch=1 percentage=39 elapsed=1m43.467s
INFO [09-13|18:49:48] Generating DAG in progress               epoch=1 percentage=40 elapsed=1m46.033s
INFO [09-13|18:49:50] Generating DAG in progress               epoch=1 percentage=41 elapsed=1m48.618s
INFO [09-13|18:49:53] Generating DAG in progress               epoch=1 percentage=42 elapsed=1m51.150s
INFO [09-13|18:49:55] Generating DAG in progress               epoch=1 percentage=43 elapsed=1m53.655s
INFO [09-13|18:49:58] Generating DAG in progress               epoch=1 percentage=44 elapsed=1m56.159s
INFO [09-13|18:50:00] Generating DAG in progress               epoch=1 percentage=45 elapsed=1m58.679s
INFO [09-13|18:50:03] Generating DAG in progress               epoch=1 percentage=46 elapsed=2m1.285s
INFO [09-13|18:50:06] Generating DAG in progress               epoch=1 percentage=47 elapsed=2m3.791s
INFO [09-13|18:50:08] Generating DAG in progress               epoch=1 percentage=48 elapsed=2m6.293s
INFO [09-13|18:50:11] Generating DAG in progress               epoch=1 percentage=49 elapsed=2m8.857s
INFO [09-13|18:50:14] Generating DAG in progress               epoch=1 percentage=50 elapsed=2m11.879s
INFO [09-13|18:50:16] Generating DAG in progress               epoch=1 percentage=51 elapsed=2m14.588s
INFO [09-13|18:50:19] Generating DAG in progress               epoch=1 percentage=52 elapsed=2m17.188s
INFO [09-13|18:50:22] Generating DAG in progress               epoch=1 percentage=53 elapsed=2m19.822s
INFO [09-13|18:50:24] Generating DAG in progress               epoch=1 percentage=54 elapsed=2m22.474s
INFO [09-13|18:50:27] Generating DAG in progress               epoch=1 percentage=55 elapsed=2m25.132s
INFO [09-13|18:50:29] Generating DAG in progress               epoch=1 percentage=56 elapsed=2m27.624s
INFO [09-13|18:50:32] Generating DAG in progress               epoch=1 percentage=57 elapsed=2m30.149s
INFO [09-13|18:50:34] Generating DAG in progress               epoch=1 percentage=58 elapsed=2m32.712s
INFO [09-13|18:50:37] Generating DAG in progress               epoch=1 percentage=59 elapsed=2m35.239s
INFO [09-13|18:50:40] Generating DAG in progress               epoch=1 percentage=60 elapsed=2m37.762s
INFO [09-13|18:50:42] Generating DAG in progress               epoch=1 percentage=61 elapsed=2m40.281s
INFO [09-13|18:50:45] Generating DAG in progress               epoch=1 percentage=62 elapsed=2m42.816s
INFO [09-13|18:50:47] Generating DAG in progress               epoch=1 percentage=63 elapsed=2m45.316s
INFO [09-13|18:50:50] Generating DAG in progress               epoch=1 percentage=64 elapsed=2m47.913s
INFO [09-13|18:50:52] Generating DAG in progress               epoch=1 percentage=65 elapsed=2m50.462s
INFO [09-13|18:50:55] Generating DAG in progress               epoch=1 percentage=66 elapsed=2m52.995s
INFO [09-13|18:50:58] Generating DAG in progress               epoch=1 percentage=67 elapsed=2m55.996s
INFO [09-13|18:51:00] Generating DAG in progress               epoch=1 percentage=68 elapsed=2m58.557s
INFO [09-13|18:51:03] Generating DAG in progress               epoch=1 percentage=69 elapsed=3m1.193s
INFO [09-13|18:51:05] Generating DAG in progress               epoch=1 percentage=70 elapsed=3m3.713s
INFO [09-13|18:51:08] Generating DAG in progress               epoch=1 percentage=71 elapsed=3m6.215s
INFO [09-13|18:51:11] Generating DAG in progress               epoch=1 percentage=72 elapsed=3m8.852s
INFO [09-13|18:51:13] Generating DAG in progress               epoch=1 percentage=73 elapsed=3m11.376s
INFO [09-13|18:51:16] Generating DAG in progress               epoch=1 percentage=74 elapsed=3m13.884s
INFO [09-13|18:51:18] Generating DAG in progress               epoch=1 percentage=75 elapsed=3m16.406s
INFO [09-13|18:51:21] Generating DAG in progress               epoch=1 percentage=76 elapsed=3m18.942s
INFO [09-13|18:51:23] Generating DAG in progress               epoch=1 percentage=77 elapsed=3m21.492s
INFO [09-13|18:51:26] Generating DAG in progress               epoch=1 percentage=78 elapsed=3m24.039s
INFO [09-13|18:51:28] Generating DAG in progress               epoch=1 percentage=79 elapsed=3m26.588s
INFO [09-13|18:51:31] Generating DAG in progress               epoch=1 percentage=80 elapsed=3m29.107s
INFO [09-13|18:51:34] Generating DAG in progress               epoch=1 percentage=81 elapsed=3m32.195s
INFO [09-13|18:51:36] Generating DAG in progress               epoch=1 percentage=82 elapsed=3m34.718s
INFO [09-13|18:51:39] Generating DAG in progress               epoch=1 percentage=83 elapsed=3m37.199s
INFO [09-13|18:51:42] Generating DAG in progress               epoch=1 percentage=84 elapsed=3m39.723s
INFO [09-13|18:51:44] Generating DAG in progress               epoch=1 percentage=85 elapsed=3m42.273s
INFO [09-13|18:51:47] Generating DAG in progress               epoch=1 percentage=86 elapsed=3m44.823s
INFO [09-13|18:51:49] Generating DAG in progress               epoch=1 percentage=87 elapsed=3m47.393s
INFO [09-13|18:51:52] Generating DAG in progress               epoch=1 percentage=88 elapsed=3m49.891s
INFO [09-13|18:51:54] Generating DAG in progress               epoch=1 percentage=89 elapsed=3m52.451s
INFO [09-13|18:51:57] Generating DAG in progress               epoch=1 percentage=90 elapsed=3m54.945s
INFO [09-13|18:51:59] Generating DAG in progress               epoch=1 percentage=91 elapsed=3m57.464s
INFO [09-13|18:52:02] Generating DAG in progress               epoch=1 percentage=92 elapsed=4m0.009s
INFO [09-13|18:52:05] Generating DAG in progress               epoch=1 percentage=93 elapsed=4m3.121s
INFO [09-13|18:52:07] Generating DAG in progress               epoch=1 percentage=94 elapsed=4m5.658s
INFO [09-13|18:52:10] Generating DAG in progress               epoch=1 percentage=95 elapsed=4m8.160s
INFO [09-13|18:52:13] Generating DAG in progress               epoch=1 percentage=96 elapsed=4m10.719s
INFO [09-13|18:52:15] Generating DAG in progress               epoch=1 percentage=97 elapsed=4m13.208s
INFO [09-13|18:52:18] Generating DAG in progress               epoch=1 percentage=98 elapsed=4m15.772s
INFO [09-13|18:52:20] Generating DAG in progress               epoch=1 percentage=99 elapsed=4m18.471s
INFO [09-13|18:52:20] Generated ethash verification cache      epoch=1 elapsed=4m18.473s
INFO [09-13|18:52:21] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
INFO [09-13|18:52:21] Successfully wrote genesis state         database=chaindata                                             hash=afad92…166fe3
INFO [09-13|18:52:21] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/lightchaindata cache=16 handles=16
INFO [09-13|18:52:21] Successfully wrote genesis state         database=lightchaindata                                             hash=afad92…166fe3
INFO [09-13|18:52:26] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-13|18:52:36] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-13|18:52:47] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-13|18:52:57] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-13|18:53:07] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-13|18:53:18] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-13|18:53:28] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-13|18:53:39] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-13|18:53:49] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-13|18:54:00] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-13|18:54:10] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-13|18:54:21] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-13|18:54:31] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-13|18:54:41] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-13|18:54:52] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-13|18:55:02] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-13|18:55:12] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-13|18:55:23] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-13|18:55:33] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-13|18:55:43] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-13|18:55:54] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-13|18:56:04] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-13|18:56:15] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-13|18:56:25] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-13|18:56:35] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-13|18:56:46] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-13|18:56:56] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-13|18:57:07] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-13|18:57:17] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-13|18:57:27] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-13|18:57:38] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-13|18:57:48] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-13|18:57:48] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable</msg>
<status status="PASS" endtime="20170913 18:58:08.107" starttime="20170913 18:58:08.106"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${geth_result.stdout}</arg>
</arguments>
<msg timestamp="20170913 18:58:08.107" level="INFO">kill existing geth process
clear ~/iexecdev/.ethereum/net42/ content
clear ~/.ethash content
creating 10 accounts
create account 1
Address: {c0977169256dc4b3338e237263daf7ecbfef99ae}
create account 2
Address: {ed706f73268ac746f18fadbd6a15b3fa00a2b793}
create account 3
Address: {f0f137c532e4c860049f48529c6a0c2320211821}
create account 4
Address: {1d728ec50d61afb613cf472355511bdb91bda00d}
create account 5
Address: {76e83d9eb6ca693c214376ddd75c2bebcc50b54e}
create account 6
Address: {515f7dc8f736f3595fac7c471f4987c96c373d53}
create account 7
Address: {95604c9c43f8b2f4078d976dc33f3b44131060d9}
create account 8
Address: {2efb9ee113df3ace4747206fef5c547e86e9933e}
create account 9
Address: {4a854e69971a9aa82e35a73d709e4e9b88cfaf63}
create account 10
Address: {fa0cb25b8f1d415f1908fc426a9cea3c14fb6067}
create DAG epoch 1
clear ~/.ethash content
making DAG, this could take awhile...
start a coinbase miner in background
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
5 blocks mined in geth 42 !
unlocked 9 accounts
Fatal: Failed to open database: resource temporarily unavailable
unlock account 1
true
unlock account 2
true
unlock account 3
true
unlock account 4
true
unlock account 5
true
unlock account 6
true
unlock account 7
true
unlock account 8
true
unlock account 9
true
local geth 42 ready to go for testing</msg>
<status status="PASS" endtime="20170913 18:58:08.107" starttime="20170913 18:58:08.107"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${geth_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170913 18:58:08.108" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170913 18:58:08.108" starttime="20170913 18:58:08.108"></status>
</kw>
<status status="PASS" endtime="20170913 18:58:08.108" starttime="20170913 18:47:49.161"></status>
</kw>
<kw name="Init Oracle" library="IexecOracle">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${IEXEC_ORACLE_FORCE_GIT_CLONE}' == 'true'</arg>
<arg>Git Clone Iexec Oracle</arg>
</arguments>
<status status="PASS" endtime="20170913 18:58:08.109" starttime="20170913 18:58:08.109"></status>
</kw>
<kw name="Npm Install Iexec Oracle" library="IexecOracle">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd iexec-oracle &amp;&amp; npm install</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${npm_result}</var>
</assign>
<msg timestamp="20170913 18:58:08.110" level="INFO">Starting process:
cd iexec-oracle &amp;&amp; npm install</msg>
<msg timestamp="20170913 18:58:08.116" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170913 18:58:22.337" level="INFO">Process completed.</msg>
<msg timestamp="20170913 18:58:22.337" level="INFO">${npm_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170913 18:58:22.337" starttime="20170913 18:58:08.110"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${npm_result.stderr}</arg>
</arguments>
<msg timestamp="20170913 18:58:22.338" level="INFO">npm WARN xtremwebinterface@1.0.0 No repository field.</msg>
<status status="PASS" endtime="20170913 18:58:22.338" starttime="20170913 18:58:22.338"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${npm_result.stdout}</arg>
</arguments>
<msg timestamp="20170913 18:58:22.339" level="INFO">xtremwebinterface@1.0.0 /home/vagrant/iexecdev/iexec-node/tests/rf/iexec-oracle
├── bluebird@3.5.0 
├── lodash@4.17.4 
├─┬ truffle@3.4.7 
│ ├─┬ mocha@3.5.3 
│ │ ├── browser-stdout@1.3.0 
│ │ ├─┬ commander@2.9.0 
│ │ │ └── graceful-readlink@1.0.1 
│ │ ├─┬ debug@2.6.8 
│ │ │ └── ms@2.0.0 
│ │ ├── diff@3.2.0 
│ │ ├── escape-string-regexp@1.0.5 
│ │ ├─┬ glob@7.1.1 
│ │ │ ├── fs.realpath@1.0.0 
│ │ │ ├─┬ inflight@1.0.6 
│ │ │ │ └── wrappy@1.0.2 
│ │ │ ├── inherits@2.0.3 
│ │ │ ├─┬ minimatch@3.0.4 
│ │ │ │ └─┬ brace-expansion@1.1.8 
│ │ │ │   ├── balanced-match@1.0.0 
│ │ │ │   └── concat-map@0.0.1 
│ │ │ ├── once@1.4.0 
│ │ │ └── path-is-absolute@1.0.1 
│ │ ├── growl@1.9.2 
│ │ ├── he@1.1.1 
│ │ ├── json3@3.3.2 
│ │ ├─┬ lodash.create@3.1.1 
│ │ │ ├─┬ lodash._baseassign@3.2.0 
│ │ │ │ ├── lodash._basecopy@3.0.1 
│ │ │ │ └─┬ lodash.keys@3.1.2 
│ │ │ │   ├── lodash._getnative@3.9.1 
│ │ │ │   ├── lodash.isarguments@3.1.0 
│ │ │ │   └── lodash.isarray@3.0.4 
│ │ │ ├── lodash._basecreate@3.0.3 
│ │ │ └── lodash._isiterateecall@3.0.9 
│ │ ├─┬ mkdirp@0.5.1 
│ │ │ └── minimist@0.0.8 
│ │ └─┬ supports-color@3.1.2 
│ │   └── has-flag@1.0.0 
│ ├── original-require@1.0.1 
│ └─┬ solc@0.4.13 
│   ├─┬ fs-extra@0.30.0 
│   │ ├── graceful-fs@4.1.11 
│   │ ├── jsonfile@2.4.0 
│   │ ├── klaw@1.3.1 
│   │ └── rimraf@2.6.2 
│   ├── memorystream@0.3.1 
│   ├── require-from-string@1.2.1 
│   ├── semver@5.4.1 
│   └─┬ yargs@4.8.1 
│     ├─┬ cliui@3.2.0 
│     │ ├─┬ strip-ansi@3.0.1 
│     │ │ └── ansi-regex@2.1.1 
│     │ └── wrap-ansi@2.1.0 
│     ├── decamelize@1.2.0 
│     ├── get-caller-file@1.0.2 
│     ├── lodash.assign@4.2.0 
│     ├─┬ os-locale@1.4.0 
│     │ └─┬ lcid@1.0.0 
│     │   └── invert-kv@1.0.0 
│     ├─┬ read-pkg-up@1.0.1 
│     │ ├─┬ find-up@1.1.2 
│     │ │ ├── path-exists@2.1.0 
│     │ │ └─┬ pinkie-promise@2.0.1 
│     │ │   └── pinkie@2.0.4 
│     │ └─┬ read-pkg@1.1.0 
│     │   ├─┬ load-json-file@1.1.0 
│     │   │ ├─┬ parse-json@2.2.0 
│     │   │ │ └─┬ error-ex@1.3.1 
│     │   │ │   └── is-arrayish@0.2.1 
│     │   │ ├── pify@2.3.0 
│     │   │ └─┬ strip-bom@2.0.0 
│     │   │   └── is-utf8@0.2.1 
│     │   ├─┬ normalize-package-data@2.4.0 
│     │   │ ├── hosted-git-info@2.5.0 
│     │   │ ├─┬ is-builtin-module@1.0.0 
│     │   │ │ └── builtin-modules@1.1.1 
│     │   │ └─┬ validate-npm-package-license@3.0.1 
│     │   │   ├─┬ spdx-correct@1.0.2 
│     │   │   │ └── spdx-license-ids@1.2.2 
│     │   │   └── spdx-expression-parse@1.0.4 
│     │   └── path-type@1.1.0 
│     ├── require-directory@2.1.1 
│     ├── require-main-filename@1.0.1 
│     ├── set-blocking@2.0.0 
│     ├─┬ string-width@1.0.2 
│     │ ├── code-point-at@1.1.0 
│     │ └─┬ is-fullwidth-code-point@1.0.0 
│     │   └── number-is-nan@1.0.1 
│     ├── which-module@1.0.0 
│     ├── window-size@0.2.0 
│     ├── y18n@3.2.1 
│     └─┬ yargs-parser@2.4.1 
│       └── camelcase@3.0.0 
├─┬ truffle-contract@2.0.0 
│ ├─┬ ethjs-abi@0.1.8 
│ │ ├── bn.js@4.11.6 
│ │ ├── js-sha3@0.5.5 
│ │ └─┬ number-to-bn@1.7.0 
│ │   └─┬ strip-hex-prefix@1.0.0 
│ │     └── is-hex-prefixed@1.0.0 
│ ├── truffle-blockchain-utils@0.0.1 
│ └─┬ truffle-contract-schema@0.0.5 
│   └── crypto-js@3.1.9-1 
└─┬ web3@0.18.4 
  ├── bignumber.js@2.0.7  (git+https://github.com/debris/bignumber.js.git#94d7146671b9719e00a09c29b01a691bc85048c2)
  ├── crypto-js@3.1.8 
  ├── utf8@2.1.2 
  ├── xhr2@0.1.4 
  └── xmlhttprequest@1.8.0 
</msg>
<status status="PASS" endtime="20170913 18:58:22.339" starttime="20170913 18:58:22.339"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${npm_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170913 18:58:22.340" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170913 18:58:22.340" starttime="20170913 18:58:22.339"></status>
</kw>
<status status="PASS" endtime="20170913 18:58:22.340" starttime="20170913 18:58:08.110"></status>
</kw>
<kw name="Iexec Oracle Truffle Migrate" library="IexecOracle">
<tags>
<tag>Smart contract Tests</tag>
</tags>
<doc>call truffle migrate</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>rm -rf iexec-oracle/build</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${rm_result}</var>
</assign>
<msg timestamp="20170913 18:58:22.341" level="INFO">Starting process:
rm -rf iexec-oracle/build</msg>
<msg timestamp="20170913 18:58:22.345" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170913 18:58:22.356" level="INFO">Process completed.</msg>
<msg timestamp="20170913 18:58:22.357" level="INFO">${rm_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170913 18:58:22.357" starttime="20170913 18:58:22.341"></status>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<doc>Verifies that the given item is empty.</doc>
<arguments>
<arg>${rm_result.stderr}</arg>
</arguments>
<msg timestamp="20170913 18:58:22.358" level="INFO">Length is 0</msg>
<status status="PASS" endtime="20170913 18:58:22.358" starttime="20170913 18:58:22.357"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rm_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170913 18:58:22.359" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170913 18:58:22.359" starttime="20170913 18:58:22.358"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd iexec-oracle &amp;&amp; ./node_modules/.bin/truffle migrate</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${truffletest_result}</var>
</assign>
<msg timestamp="20170913 18:58:22.359" level="INFO">Starting process:
cd iexec-oracle &amp;&amp; ./node_modules/.bin/truffle migrate</msg>
<msg timestamp="20170913 18:58:22.362" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170913 18:58:52.781" level="INFO">Process completed.</msg>
<msg timestamp="20170913 18:58:52.781" level="INFO">${truffletest_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170913 18:58:52.781" starttime="20170913 18:58:22.359"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stderr}</arg>
</arguments>
<msg timestamp="20170913 18:58:52.782" level="INFO"></msg>
<status status="PASS" endtime="20170913 18:58:52.782" starttime="20170913 18:58:52.782"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
</arguments>
<msg timestamp="20170913 18:58:52.783" level="INFO">Compiling ./contracts/HelloWorldTest.sol...
Compiling ./contracts/IexecLib.sol...
Compiling ./contracts/IexecOracle.sol...
Compiling ./contracts/IexecOracleAPI.sol...
Compiling ./contracts/Migrations.sol...
Compiling ./contracts/SafeMath.sol...

Compilation warnings encountered:

/home/vagrant/iexecdev/iexec-node/tests/rf/iexec-oracle/contracts/IexecOracle.sol:24:7: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
      string  name;
      ^----------^
,/home/vagrant/iexecdev/iexec-node/tests/rf/iexec-oracle/contracts/IexecOracle.sol:27:7: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
      string stdout;
      ^-----------^
,/home/vagrant/iexecdev/iexec-node/tests/rf/iexec-oracle/contracts/IexecOracle.sol:28:7: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
      string stderr;
      ^-----------^

Writing artifacts to ./build/contracts

Using network 'development'.

Running migration: 1_initial_migration.js
  Deploying Migrations...
  ... 0xc23d43f44e5a4b335b10128b0c79b4d4fc5b342947ad1d98347ace596642dbb4
  Migrations: 0xe9b3bc391f42ab7f45da5e510031c9bc3f9d10cf
Saving successful migration to network...
  ... 0x1042594a758e2a1fd2166724a801e0d0a896a10de449721ac03c297d85be97c2
Saving artifacts...
Running migration: 2_deploy_contracts.js
  Deploying IexecOracle...
  ... 0xfa7f2971adbbdf3b2d20d512828f9c271a9aaf371deb26ae3c2b9e234c149ff0
  IexecOracle: 0x4a000924a4661e812c33f24192fdb8df1ca82c3f
IexecOracle deployed at address :0x4a000924a4661e812c33f24192fdb8df1ca82c3f
  Deploying HelloWorldTest...
  ... 0x875cdb504e3ea095ca03ca7b6401cbb23ca4ee233ceb03cb4ece8d21d7476808
  HelloWorldTest: 0x322d57cf2505609e1368965dd9f4ec0e54c2f3bd
HelloWorldTest deployed at address :0x322d57cf2505609e1368965dd9f4ec0e54c2f3bd
Saving successful migration to network...
  ... 0x4dc1493885723bfa487fe40ba33b3553f78dc311b4d681f6c12e00851cbde77e
Saving artifacts...</msg>
<status status="PASS" endtime="20170913 18:58:52.783" starttime="20170913 18:58:52.783"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${truffletest_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170913 18:58:52.784" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170913 18:58:52.784" starttime="20170913 18:58:52.783"></status>
</kw>
<status status="PASS" endtime="20170913 18:58:52.784" starttime="20170913 18:58:22.340"></status>
</kw>
<kw name="Iexec Oracle Set Contract Address In Test" library="IexecOracle">
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>iexec-oracle/build/contracts/IexecOracle.json</arg>
</arguments>
<assign>
<var>${iexecOracle_json_content}</var>
</assign>
<msg timestamp="20170913 18:58:52.785" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/iexec-oracle/build/contracts/IexecOracle.json"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/iexec-oracle/build/contracts/IexecOracle.json&lt;/a&gt;'.</msg>
<msg timestamp="20170913 18:58:52.787" level="INFO">${iexecOracle_json_content} = {
  "contract_name": "IexecOracle",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "user",
          "type": "address"
        },
        {
          "name": "p...</msg>
<status status="PASS" endtime="20170913 18:58:52.787" starttime="20170913 18:58:52.784"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${iexecOracle_json_content}</arg>
<arg>"address": "(?P&lt;smartContractAddress&gt;.*)",</arg>
<arg>smartContractAddress</arg>
</arguments>
<assign>
<var>@{smartContractAddress}</var>
</assign>
<msg timestamp="20170913 18:58:52.788" level="INFO">@{smartContractAddress} = [ 0x4a000924a4661e812c33f24192fdb8df1ca82c3f ]</msg>
<status status="PASS" endtime="20170913 18:58:52.788" starttime="20170913 18:58:52.787"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>@{smartContractAddress}</arg>
</arguments>
<msg timestamp="20170913 18:58:52.788" level="INFO">0x4a000924a4661e812c33f24192fdb8df1ca82c3f</msg>
<status status="PASS" endtime="20170913 18:58:52.788" starttime="20170913 18:58:52.788"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>@{smartContractAddress}[0]</arg>
</arguments>
<msg timestamp="20170913 18:58:52.789" level="INFO">0x4a000924a4661e812c33f24192fdb8df1ca82c3f</msg>
<status status="PASS" endtime="20170913 18:58:52.789" starttime="20170913 18:58:52.788"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${IEXEC_ORACLE_SM_ADDRESS}</arg>
<arg>@{smartContractAddress}[0]</arg>
</arguments>
<msg timestamp="20170913 18:58:52.789" level="INFO">${IEXEC_ORACLE_SM_ADDRESS} = 0x4a000924a4661e812c33f24192fdb8df1ca82c3f</msg>
<status status="PASS" endtime="20170913 18:58:52.789" starttime="20170913 18:58:52.789"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>sed -i 's/.*return IexecOracle.at(.*/return IexecOracle.at(\"${IEXEC_ORACLE_SM_ADDRESS}\")/g' iexec-oracle/test/rf/*</arg>
</arguments>
<msg timestamp="20170913 18:58:52.791" level="INFO">Running command 'sed -i 's/.*return IexecOracle.at(.*/return IexecOracle.at("0x4a000924a4661e812c33f24192fdb8df1ca82c3f")/g' iexec-oracle/test/rf/* 2&gt;&amp;1'.</msg>
<status status="PASS" endtime="20170913 18:58:52.854" starttime="20170913 18:58:52.789"></status>
</kw>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>iexec-oracle/build/contracts/HelloWorldTest.json</arg>
</arguments>
<assign>
<var>${helloworld_json_content}</var>
</assign>
<msg timestamp="20170913 18:58:52.855" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/iexec-oracle/build/contracts/HelloWorldTest.json"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/iexec-oracle/build/contracts/HelloWorldTest.json&lt;/a&gt;'.</msg>
<msg timestamp="20170913 18:58:52.855" level="INFO">${helloworld_json_content} = {
  "contract_name": "HelloWorldTest",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "callbackType",
          "type": "string"
        },
        {
         ...</msg>
<status status="PASS" endtime="20170913 18:58:52.855" starttime="20170913 18:58:52.854"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${helloworld_json_content}</arg>
<arg>"address": "(?P&lt;smartContractAddress&gt;.*)",</arg>
<arg>smartContractAddress</arg>
</arguments>
<assign>
<var>@{smartContractAddress}</var>
</assign>
<msg timestamp="20170913 18:58:52.856" level="INFO">@{smartContractAddress} = [ 0x322d57cf2505609e1368965dd9f4ec0e54c2f3bd ]</msg>
<status status="PASS" endtime="20170913 18:58:52.856" starttime="20170913 18:58:52.855"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>@{smartContractAddress}</arg>
</arguments>
<msg timestamp="20170913 18:58:52.856" level="INFO">0x322d57cf2505609e1368965dd9f4ec0e54c2f3bd</msg>
<status status="PASS" endtime="20170913 18:58:52.856" starttime="20170913 18:58:52.856"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>@{smartContractAddress}[0]</arg>
</arguments>
<msg timestamp="20170913 18:58:52.856" level="INFO">0x322d57cf2505609e1368965dd9f4ec0e54c2f3bd</msg>
<status status="PASS" endtime="20170913 18:58:52.857" starttime="20170913 18:58:52.856"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${HELLO_WORLD_SM_ADDRESS}</arg>
<arg>@{smartContractAddress}[0]</arg>
</arguments>
<msg timestamp="20170913 18:58:52.857" level="INFO">${HELLO_WORLD_SM_ADDRESS} = 0x322d57cf2505609e1368965dd9f4ec0e54c2f3bd</msg>
<status status="PASS" endtime="20170913 18:58:52.857" starttime="20170913 18:58:52.857"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>sed -i 's/.*return HelloWorldTest.at(.*/return HelloWorldTest.at(\"${HELLO_WORLD_SM_ADDRESS}\")/g' iexec-oracle/test/rf/*</arg>
</arguments>
<msg timestamp="20170913 18:58:52.858" level="INFO">Running command 'sed -i 's/.*return HelloWorldTest.at(.*/return HelloWorldTest.at("0x322d57cf2505609e1368965dd9f4ec0e54c2f3bd")/g' iexec-oracle/test/rf/* 2&gt;&amp;1'.</msg>
<status status="PASS" endtime="20170913 18:58:52.894" starttime="20170913 18:58:52.857"></status>
</kw>
<status status="PASS" endtime="20170913 18:58:52.894" starttime="20170913 18:58:52.784"></status>
</kw>
<status status="PASS" endtime="20170913 18:58:52.895" starttime="20170913 18:58:08.109"></status>
</kw>
<kw name="Init Bridge" library="IexecBridge">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${IEXEC_BRIDGE_FORCE_GIT_CLONE}' == 'true'</arg>
<arg>Git Clone Iexec Bridge</arg>
</arguments>
<status status="PASS" endtime="20170913 18:58:52.896" starttime="20170913 18:58:52.895"></status>
</kw>
<kw name="Npm Install Bridge" library="IexecBridge">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd iexec-bridge &amp;&amp; npm install</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${npm_result}</var>
</assign>
<msg timestamp="20170913 18:58:52.896" level="INFO">Starting process:
cd iexec-bridge &amp;&amp; npm install</msg>
<msg timestamp="20170913 18:58:52.899" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170913 19:00:07.309" level="INFO">Process completed.</msg>
<msg timestamp="20170913 19:00:07.309" level="INFO">${npm_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170913 19:00:07.310" starttime="20170913 18:58:52.896"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${npm_result.stderr}</arg>
</arguments>
<msg timestamp="20170913 19:00:07.311" level="INFO">npm WARN deprecated babel-preset-latest@6.24.1: 💥  preset-latest accomplishes the same task as babel-preset-env. 🙏  Please install it with 'npm install babel-preset-env --save-dev'. '{ "presets": ["latest"] }' to '{ "presets": ["env"] }'. For more info, please check the docs: http://babeljs.io/docs/plugins/preset-env 👌. And let us know how you're liking Babel at @babeljs on 🐦 
npm WARN deprecated babel-preset-es2016@6.24.1: We're really excited that you're trying to use ES2016 syntax, but instead of making more yearly presets, Babel has a better preset that we recommend you use instead: npm install babel-preset-env --save-dev. Give us a follow @babeljs to get more updates
npm WARN deprecated babel-preset-es2017@6.24.1: We're really excited that you're trying to use ES2017 syntax, but instead of making more yearly presets, Babel has a better preset that we recommend you use instead: npm install babel-preset-env --save-dev. Give us a follow @babeljs to get more updates
npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@^1.0.0 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@1.1.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})
npm WARN babel-loader@7.1.2 requires a peer of webpack@2 || 3 but none was installed.</msg>
<status status="PASS" endtime="20170913 19:00:07.311" starttime="20170913 19:00:07.310"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${npm_result.stdout}</arg>
</arguments>
<msg timestamp="20170913 19:00:07.312" level="INFO">bridge@1.0.0 /home/vagrant/iexecdev/iexec-node/tests/rf/iexec-bridge
├─┬ async@2.5.0 
│ └── lodash@4.17.4 
├─┬ babel-cli@6.26.0 
│ ├─┬ babel-polyfill@6.26.0 
│ │ ├── core-js@2.5.1 
│ │ └── regenerator-runtime@0.10.5 
│ ├─┬ babel-register@6.26.0 
│ │ ├─┬ home-or-tmp@2.0.0 
│ │ │ └── os-tmpdir@1.0.2 
│ │ └── source-map-support@0.4.18 
│ ├─┬ babel-runtime@6.26.0 
│ │ └── regenerator-runtime@0.11.0 
│ ├─┬ chokidar@1.7.0 
│ │ ├─┬ anymatch@1.3.2 
│ │ │ ├─┬ micromatch@2.3.11 
│ │ │ │ ├─┬ arr-diff@2.0.0 
│ │ │ │ │ └── arr-flatten@1.1.0 
│ │ │ │ ├── array-unique@0.2.1 
│ │ │ │ ├─┬ braces@1.8.5 
│ │ │ │ │ ├─┬ expand-range@1.8.2 
│ │ │ │ │ │ └─┬ fill-range@2.2.3 
│ │ │ │ │ │   ├── is-number@2.1.0 
│ │ │ │ │ │   ├── isobject@2.1.0 
│ │ │ │ │ │   ├─┬ randomatic@1.1.7 
│ │ │ │ │ │   │ ├─┬ is-number@3.0.0 
│ │ │ │ │ │   │ │ └── kind-of@3.2.2 
│ │ │ │ │ │   │ └── kind-of@4.0.0 
│ │ │ │ │ │   └── repeat-string@1.6.1 
│ │ │ │ │ ├── preserve@0.2.0 
│ │ │ │ │ └── repeat-element@1.1.2 
│ │ │ │ ├─┬ expand-brackets@0.1.5 
│ │ │ │ │ └── is-posix-bracket@0.1.1 
│ │ │ │ ├── extglob@0.3.2 
│ │ │ │ ├── filename-regex@2.0.1 
│ │ │ │ ├─┬ kind-of@3.2.2 
│ │ │ │ │ └── is-buffer@1.1.5 
│ │ │ │ ├─┬ object.omit@2.0.1 
│ │ │ │ │ ├─┬ for-own@0.1.5 
│ │ │ │ │ │ └── for-in@1.0.2 
│ │ │ │ │ └── is-extendable@0.1.1 
│ │ │ │ ├─┬ parse-glob@3.0.4 
│ │ │ │ │ ├── glob-base@0.3.0 
│ │ │ │ │ └── is-dotfile@1.0.3 
│ │ │ │ └─┬ regex-cache@0.4.4 
│ │ │ │   └─┬ is-equal-shallow@0.1.3 
│ │ │ │     └── is-primitive@2.0.0 
│ │ │ └─┬ normalize-path@2.1.1 
│ │ │   └── remove-trailing-separator@1.1.0 
│ │ ├── async-each@1.0.1 
│ │ ├── glob-parent@2.0.0 
│ │ ├── inherits@2.0.3 
│ │ ├─┬ is-binary-path@1.0.1 
│ │ │ └── binary-extensions@1.10.0 
│ │ ├─┬ is-glob@2.0.1 
│ │ │ └── is-extglob@1.0.0 
│ │ └─┬ readdirp@2.1.0 
│ │   └── set-immediate-shim@1.0.1 
│ ├── commander@2.11.0 
│ ├── convert-source-map@1.5.0 
│ ├── fs-readdir-recursive@1.0.0 
│ ├─┬ glob@7.1.2 
│ │ ├── fs.realpath@1.0.0 
│ │ ├─┬ inflight@1.0.6 
│ │ │ └── wrappy@1.0.2 
│ │ └── once@1.4.0 
│ ├─┬ output-file-sync@1.1.2 
│ │ └── graceful-fs@4.1.11 
│ ├── path-is-absolute@1.0.1 
│ ├── slash@1.0.0 
│ ├── source-map@0.5.7 
│ └─┬ v8flags@2.1.1 
│   └── user-home@1.1.1 
├─┬ babel-core@6.26.0 
│ ├─┬ babel-code-frame@6.26.0 
│ │ └── js-tokens@3.0.2 
│ ├─┬ babel-generator@6.26.0 
│ │ ├─┬ detect-indent@4.0.0 
│ │ │ └─┬ repeating@2.0.1 
│ │ │   └── is-finite@1.0.2 
│ │ ├── jsesc@1.3.0 
│ │ └── trim-right@1.0.1 
│ ├── babel-helpers@6.24.1 
│ ├── babel-messages@6.23.0 
│ ├── babel-template@6.26.0 
│ ├── babel-traverse@6.26.0 
│ ├─┬ babel-types@6.26.0 
│ │ └── to-fast-properties@1.0.3 
│ ├── babylon@6.18.0 
│ ├─┬ debug@2.6.8 
│ │ └── ms@2.0.0 
│ ├── json5@0.5.1 
│ ├─┬ minimatch@3.0.4 
│ │ └─┬ brace-expansion@1.1.8 
│ │   ├── balanced-match@1.0.0 
│ │   └── concat-map@0.0.1 
│ └── private@0.1.7 
├── babel-eslint@7.2.3 
├─┬ babel-loader@7.1.2 
│ ├─┬ find-cache-dir@1.0.0 
│ │ ├── commondir@1.0.1 
│ │ ├─┬ make-dir@1.0.0 
│ │ │ └── pify@2.3.0 
│ │ └── pkg-dir@2.0.0 
│ ├─┬ loader-utils@1.1.0 
│ │ ├── big.js@3.1.3 
│ │ └── emojis-list@2.1.0 
│ └─┬ mkdirp@0.5.1 
│   └── minimist@0.0.8 
├─┬ babel-preset-env@1.6.0 
│ ├── babel-plugin-check-es2015-constants@6.22.0 
│ ├── babel-plugin-syntax-trailing-function-commas@6.22.0 
│ ├─┬ babel-plugin-transform-async-to-generator@6.24.1 
│ │ ├── babel-helper-remap-async-to-generator@6.24.1 
│ │ └── babel-plugin-syntax-async-functions@6.13.0 
│ ├── babel-plugin-transform-es2015-arrow-functions@6.22.0 
│ ├── babel-plugin-transform-es2015-block-scoped-functions@6.22.0 
│ ├── babel-plugin-transform-es2015-block-scoping@6.26.0 
│ ├─┬ babel-plugin-transform-es2015-classes@6.24.1 
│ │ ├── babel-helper-define-map@6.26.0 
│ │ ├── babel-helper-function-name@6.24.1 
│ │ ├── babel-helper-optimise-call-expression@6.24.1 
│ │ └── babel-helper-replace-supers@6.24.1 
│ ├── babel-plugin-transform-es2015-computed-properties@6.24.1 
│ ├── babel-plugin-transform-es2015-destructuring@6.23.0 
│ ├── babel-plugin-transform-es2015-duplicate-keys@6.24.1 
│ ├── babel-plugin-transform-es2015-for-of@6.23.0 
│ ├── babel-plugin-transform-es2015-function-name@6.24.1 
│ ├── babel-plugin-transform-es2015-literals@6.22.0 
│ ├── babel-plugin-transform-es2015-modules-amd@6.24.1 
│ ├─┬ babel-plugin-transform-es2015-modules-commonjs@6.26.0 
│ │ └── babel-plugin-transform-strict-mode@6.24.1 
│ ├─┬ babel-plugin-transform-es2015-modules-systemjs@6.24.1 
│ │ └── babel-helper-hoist-variables@6.24.1 
│ ├── babel-plugin-transform-es2015-modules-umd@6.24.1 
│ ├── babel-plugin-transform-es2015-object-super@6.24.1 
│ ├─┬ babel-plugin-transform-es2015-parameters@6.24.1 
│ │ ├── babel-helper-call-delegate@6.24.1 
│ │ └── babel-helper-get-function-arity@6.24.1 
│ ├── babel-plugin-transform-es2015-shorthand-properties@6.24.1 
│ ├── babel-plugin-transform-es2015-spread@6.22.0 
│ ├─┬ babel-plugin-transform-es2015-sticky-regex@6.24.1 
│ │ └── babel-helper-regex@6.26.0 
│ ├── babel-plugin-transform-es2015-template-literals@6.22.0 
│ ├── babel-plugin-transform-es2015-typeof-symbol@6.23.0 
│ ├─┬ babel-plugin-transform-es2015-unicode-regex@6.24.1 
│ │ └─┬ regexpu-core@2.0.0 
│ │   ├── regenerate@1.3.2 
│ │   ├── regjsgen@0.2.0 
│ │   └─┬ regjsparser@0.1.5 
│ │     └── jsesc@0.5.0 
│ ├─┬ babel-plugin-transform-exponentiation-operator@6.24.1 
│ │ ├─┬ babel-helper-builder-binary-assignment-operator-visitor@6.24.1 
│ │ │ └── babel-helper-explode-assignable-expression@6.24.1 
│ │ └── babel-plugin-syntax-exponentiation-operator@6.13.0 
│ ├─┬ babel-plugin-transform-regenerator@6.26.0 
│ │ └── regenerator-transform@0.10.1 
│ ├─┬ browserslist@2.4.0 
│ │ ├── caniuse-lite@1.0.30000727 
│ │ └── electron-to-chromium@1.3.21 
│ ├─┬ invariant@2.2.2 
│ │ └── loose-envify@1.3.1 
│ └── semver@5.4.1 
├─┬ babel-preset-latest@6.24.1 
│ ├── babel-preset-es2015@6.24.1 
│ ├── babel-preset-es2016@6.24.1 
│ └── babel-preset-es2017@6.24.1 
├─┬ babel-preset-stage-0@6.24.1 
│ ├─┬ babel-plugin-transform-do-expressions@6.22.0 
│ │ └── babel-plugin-syntax-do-expressions@6.13.0 
│ ├─┬ babel-plugin-transform-function-bind@6.22.0 
│ │ └── babel-plugin-syntax-function-bind@6.13.0 
│ └─┬ babel-preset-stage-1@6.24.1 
│   ├─┬ babel-plugin-transform-class-constructor-call@6.24.1 
│   │ └── babel-plugin-syntax-class-constructor-call@6.18.0 
│   ├─┬ babel-plugin-transform-export-extensions@6.22.0 
│   │ └── babel-plugin-syntax-export-extensions@6.13.0 
│   └─┬ babel-preset-stage-2@6.24.1 
│     ├── babel-plugin-syntax-dynamic-import@6.18.0 
│     ├─┬ babel-plugin-transform-class-properties@6.24.1 
│     │ └── babel-plugin-syntax-class-properties@6.13.0 
│     ├─┬ babel-plugin-transform-decorators@6.24.1 
│     │ ├─┬ babel-helper-explode-class@6.24.1 
│     │ │ └── babel-helper-bindify-decorators@6.24.1 
│     │ └── babel-plugin-syntax-decorators@6.13.0 
│     └─┬ babel-preset-stage-3@6.24.1 
│       ├─┬ babel-plugin-transform-async-generator-functions@6.24.1 
│       │ └── babel-plugin-syntax-async-generators@6.13.0 
│       └─┬ babel-plugin-transform-object-rest-spread@6.26.0 
│         └── babel-plugin-syntax-object-rest-spread@6.13.0 
├─┬ body-parser@1.18.1 
│ ├── bytes@3.0.0 
│ ├── content-type@1.0.4 
│ ├── depd@1.1.1 
│ ├─┬ http-errors@1.6.2 
│ │ ├── setprototypeof@1.0.3 
│ │ └── statuses@1.3.1 
│ ├── iconv-lite@0.4.19 
│ ├─┬ on-finished@2.3.0 
│ │ └── ee-first@1.1.1 
│ ├── qs@6.5.1 
│ ├─┬ raw-body@2.3.2 
│ │ └── unpipe@1.0.0 
│ └─┬ type-is@1.6.15 
│   └── media-typer@0.3.0 
├── child_process@1.0.2 
├─┬ cors@2.8.4 
│ ├── object-assign@4.1.1 
│ └── vary@1.1.1 
├─┬ eslint@3.19.0 
│ ├─┬ chalk@1.1.3 
│ │ ├── ansi-styles@2.2.1 
│ │ ├── escape-string-regexp@1.0.5 
│ │ ├─┬ has-ansi@2.0.0 
│ │ │ └── ansi-regex@2.1.1 
│ │ ├─┬ strip-ansi@3.0.1 
│ │ │ └── ansi-regex@2.1.1 
│ │ └── supports-color@2.0.0 
│ ├─┬ concat-stream@1.6.0 
│ │ ├─┬ readable-stream@2.3.3 
│ │ │ ├── core-util-is@1.0.2 
│ │ │ ├── process-nextick-args@1.0.7 
│ │ │ ├── string_decoder@1.0.3 
│ │ │ └── util-deprecate@1.0.2 
│ │ └── typedarray@0.0.6 
│ ├─┬ doctrine@2.0.0 
│ │ └── isarray@1.0.0 
│ ├─┬ escope@3.6.0 
│ │ ├─┬ es6-map@0.1.5 
│ │ │ ├── d@1.0.0 
│ │ │ ├── es5-ext@0.10.30 
│ │ │ ├── es6-iterator@2.0.1 
│ │ │ ├── es6-set@0.1.5 
│ │ │ ├── es6-symbol@3.1.1 
│ │ │ └── event-emitter@0.3.5 
│ │ ├── es6-weak-map@2.0.2 
│ │ └── esrecurse@4.2.0 
│ ├─┬ espree@3.5.0 
│ │ ├── acorn@5.1.2 
│ │ └─┬ acorn-jsx@3.0.1 
│ │   └── acorn@3.3.0 
│ ├── esquery@1.0.0 
│ ├── estraverse@4.2.0 
│ ├── esutils@2.0.2 
│ ├─┬ file-entry-cache@2.0.0 
│ │ └─┬ flat-cache@1.2.2 
│ │   ├── circular-json@0.3.3 
│ │   ├─┬ del@2.2.2 
│ │   │ ├─┬ globby@5.0.0 
│ │   │ │ ├─┬ array-union@1.0.2 
│ │   │ │ │ └── array-uniq@1.0.3 
│ │   │ │ └── arrify@1.0.1 
│ │   │ ├── is-path-cwd@1.0.0 
│ │   │ ├─┬ is-path-in-cwd@1.0.0 
│ │   │ │ └── is-path-inside@1.0.0 
│ │   │ └─┬ pinkie-promise@2.0.1 
│ │   │   └── pinkie@2.0.4 
│ │   └── write@0.2.1 
│ ├── globals@9.18.0 
│ ├── ignore@3.3.5 
│ ├── imurmurhash@0.1.4 
│ ├─┬ inquirer@0.12.0 
│ │ ├── ansi-escapes@1.4.0 
│ │ ├── ansi-regex@2.1.1 
│ │ ├─┬ cli-cursor@1.0.2 
│ │ │ └─┬ restore-cursor@1.0.1 
│ │ │   ├── exit-hook@1.1.1 
│ │ │   └── onetime@1.1.0 
│ │ ├── cli-width@2.2.0 
│ │ ├── figures@1.7.0 
│ │ ├─┬ readline2@1.0.1 
│ │ │ ├── is-fullwidth-code-point@1.0.0 
│ │ │ └── mute-stream@0.0.5 
│ │ ├── run-async@0.1.0 
│ │ ├── rx-lite@3.1.2 
│ │ ├─┬ string-width@1.0.2 
│ │ │ ├── code-point-at@1.1.0 
│ │ │ └─┬ is-fullwidth-code-point@1.0.0 
│ │ │   └── number-is-nan@1.0.1 
│ │ ├── strip-ansi@3.0.1 
│ │ └── through@2.3.8 
│ ├─┬ is-my-json-valid@2.16.1 
│ │ ├── generate-function@2.0.0 
│ │ ├─┬ generate-object-property@1.2.0 
│ │ │ └── is-property@1.0.2 
│ │ ├── jsonpointer@4.0.1 
│ │ └── xtend@4.0.1 
│ ├─┬ is-resolvable@1.0.0 
│ │ └── tryit@1.0.3 
│ ├─┬ js-yaml@3.10.0 
│ │ ├─┬ argparse@1.0.9 
│ │ │ └── sprintf-js@1.0.3 
│ │ └── esprima@4.0.0 
│ ├─┬ json-stable-stringify@1.0.1 
│ │ └── jsonify@0.0.0 
│ ├─┬ levn@0.3.0 
│ │ ├── prelude-ls@1.1.2 
│ │ └── type-check@0.3.2 
│ ├── natural-compare@1.4.0 
│ ├─┬ optionator@0.8.2 
│ │ ├── deep-is@0.1.3 
│ │ ├── fast-levenshtein@2.0.6 
│ │ └── wordwrap@1.0.0 
│ ├── path-is-inside@1.0.2 
│ ├── pluralize@1.2.1 
│ ├── progress@1.1.8 
│ ├─┬ require-uncached@1.0.3 
│ │ ├─┬ caller-path@0.1.0 
│ │ │ └── callsites@0.2.0 
│ │ └── resolve-from@1.0.1 
│ ├─┬ shelljs@0.7.8 
│ │ ├── interpret@1.0.4 
│ │ └── rechoir@0.6.2 
│ ├── strip-bom@3.0.0 
│ ├── strip-json-comments@2.0.1 
│ ├─┬ table@3.8.3 
│ │ ├─┬ ajv@4.11.8 
│ │ │ └── co@4.6.0 
│ │ ├── ajv-keywords@1.5.1 
│ │ ├── slice-ansi@0.0.4 
│ │ └─┬ string-width@2.1.1 
│ │   └── is-fullwidth-code-point@2.0.0 
│ ├── text-table@0.2.0 
│ └─┬ user-home@2.0.0 
│   └── os-homedir@1.0.2 
├─┬ eslint-config-airbnb-base@11.3.2 
│ └── eslint-restricted-globals@0.1.1 
├─┬ eslint-plugin-import@2.7.0 
│ ├── builtin-modules@1.1.1 
│ ├── contains-path@0.1.0 
│ ├── doctrine@1.5.0 
│ ├─┬ eslint-import-resolver-node@0.3.1 
│ │ └─┬ resolve@1.4.0 
│ │   └── path-parse@1.0.5 
│ ├─┬ eslint-module-utils@2.1.1 
│ │ └─┬ pkg-dir@1.0.0 
│ │   └─┬ find-up@1.1.2 
│ │     └── path-exists@2.1.0 
│ ├─┬ has@1.0.1 
│ │ └── function-bind@1.1.1 
│ ├── lodash.cond@4.5.2 
│ └─┬ read-pkg-up@2.0.0 
│   ├─┬ find-up@2.1.0 
│   │ └─┬ locate-path@2.0.0 
│   │   ├─┬ p-locate@2.0.0 
│   │   │ └── p-limit@1.1.0 
│   │   └── path-exists@3.0.0 
│   └─┬ read-pkg@2.0.0 
│     ├─┬ load-json-file@2.0.0 
│     │ └─┬ parse-json@2.2.0 
│     │   └─┬ error-ex@1.3.1 
│     │     └── is-arrayish@0.2.1 
│     ├─┬ normalize-package-data@2.4.0 
│     │ └── hosted-git-info@2.5.0 
│     └── path-type@2.0.0 
├── install@0.10.1 
├── json2xml@0.1.3 
├─┬ nodemon@1.12.0 
│ ├── es6-promise@3.3.1 
│ ├── ignore-by-default@1.0.1 
│ ├─┬ lodash.defaults@3.1.2 
│ │ ├─┬ lodash.assign@3.2.0 
│ │ │ ├─┬ lodash._baseassign@3.2.0 
│ │ │ │ └── lodash._basecopy@3.0.1 
│ │ │ ├─┬ lodash._createassigner@3.1.1 
│ │ │ │ ├── lodash._bindcallback@3.0.1 
│ │ │ │ └── lodash._isiterateecall@3.0.9 
│ │ │ └─┬ lodash.keys@3.1.2 
│ │ │   ├── lodash._getnative@3.9.1 
│ │ │   ├── lodash.isarguments@3.1.0 
│ │ │   └── lodash.isarray@3.0.4 
│ │ └── lodash.restparam@3.6.1 
│ ├─┬ ps-tree@1.1.0 
│ │ └─┬ event-stream@3.3.4 
│ │   ├── duplexer@0.1.1 
│ │   ├── from@0.1.7 
│ │   ├── map-stream@0.1.0 
│ │   ├── pause-stream@0.0.11 
│ │   ├── split@0.3.3 
│ │   └── stream-combiner@0.0.4 
│ ├─┬ touch@3.1.0 
│ │ └─┬ nopt@1.0.10 
│ │   └── abbrev@1.1.0 
│ ├── undefsafe@0.0.3 
│ └─┬ update-notifier@2.2.0 
│   ├─┬ boxen@1.2.1 
│   │ ├── ansi-align@2.0.0 
│   │ ├── chalk@2.1.0 
│   │ ├── cli-boxes@1.0.0 
│   │ ├─┬ term-size@1.2.0 
│   │ │ └─┬ execa@0.7.0 
│   │ │   ├─┬ cross-spawn@5.1.0 
│   │ │   │ ├─┬ lru-cache@4.1.1 
│   │ │   │ │ ├── pseudomap@1.0.2 
│   │ │   │ │ └── yallist@2.1.2 
│   │ │   │ ├─┬ shebang-command@1.2.0 
│   │ │   │ │ └── shebang-regex@1.0.0 
│   │ │   │ └─┬ which@1.3.0 
│   │ │   │   └── isexe@2.0.0 
│   │ │   ├── get-stream@3.0.0 
│   │ │   ├── is-stream@1.1.0 
│   │ │   ├─┬ npm-run-path@2.0.2 
│   │ │   │ └── path-key@2.0.1 
│   │ │   ├── p-finally@1.0.0 
│   │ │   └── strip-eof@1.0.0 
│   │ └─┬ widest-line@1.0.0 
│   │   └─┬ string-width@1.0.2 
│   │     ├── is-fullwidth-code-point@1.0.0 
│   │     └─┬ strip-ansi@3.0.1 
│   │       └── ansi-regex@2.1.1 
│   ├─┬ configstore@3.1.1 
│   │ ├─┬ dot-prop@4.2.0 
│   │ │ └── is-obj@1.0.1 
│   │ ├─┬ unique-string@1.0.0 
│   │ │ └── crypto-random-string@1.0.0 
│   │ └── write-file-atomic@2.3.0 
│   ├── import-lazy@2.1.0 
│   ├── is-npm@1.0.0 
│   ├─┬ latest-version@3.1.0 
│   │ └─┬ package-json@4.0.1 
│   │   ├─┬ got@6.7.1 
│   │   │ ├─┬ create-error-class@3.0.2 
│   │   │ │ └── capture-stack-trace@1.0.0 
│   │   │ ├── duplexer3@0.1.4 
│   │   │ ├── is-redirect@1.0.0 
│   │   │ ├── is-retry-allowed@1.1.0 
│   │   │ ├── lowercase-keys@1.0.0 
│   │   │ ├── timed-out@4.0.1 
│   │   │ ├── unzip-response@2.0.1 
│   │   │ └─┬ url-parse-lax@1.0.0 
│   │   │   └── prepend-http@1.0.4 
│   │   ├─┬ registry-auth-token@3.3.1 
│   │   │ └─┬ rc@1.2.1 
│   │   │   ├── deep-extend@0.4.2 
│   │   │   └── minimist@1.2.0 
│   │   └── registry-url@3.1.0 
│   ├── semver-diff@2.1.0 
│   └── xdg-basedir@3.0.0 
├─┬ npm@5.4.1 
│ ├── abbrev@1.1.0 
│ ├── ansi-regex@3.0.0 
│ ├── ansicolors@0.3.2 
│ ├── ansistyles@0.1.3 
│ ├── aproba@1.1.2 
│ ├── archy@1.0.0 
│ ├── bluebird@3.5.0 
│ ├─┬ cacache@9.2.9 
│ │ ├─┬ lru-cache@4.1.1 
│ │ │ ├── pseudomap@1.0.2 
│ │ │ └── yallist@2.1.2 
│ │ └── y18n@3.2.1 
│ ├── call-limit@1.1.0 
│ ├── chownr@1.0.1 
│ ├── cmd-shim@2.0.2 
│ ├─┬ columnify@1.5.4 
│ │ ├─┬ strip-ansi@3.0.1 
│ │ │ └── ansi-regex@2.1.1 
│ │ └─┬ wcwidth@1.0.1 
│ │   └─┬ defaults@1.0.3 
│ │     └── clone@1.0.2 
│ ├─┬ config-chain@1.1.11 
│ │ └── proto-list@1.2.4 
│ ├── debuglog@1.0.1 
│ ├── detect-indent@5.0.0 
│ ├─┬ dezalgo@1.0.3 
│ │ └── asap@2.0.5 
│ ├── editor@1.0.0 
│ ├── fs-vacuum@1.2.10 
│ ├── fs-write-stream-atomic@1.0.10 
│ ├─┬ glob@7.1.2 
│ │ ├── fs.realpath@1.0.0 
│ │ ├─┬ minimatch@3.0.4 
│ │ │ └─┬ brace-expansion@1.1.8 
│ │ │   ├── balanced-match@1.0.0 
│ │ │   └── concat-map@0.0.1 
│ │ └── path-is-absolute@1.0.1 
│ ├── graceful-fs@4.1.11 
│ ├── has-unicode@2.0.1 
│ ├── hosted-git-info@2.5.0 
│ ├── iferr@0.1.5 
│ ├── imurmurhash@0.1.4 
│ ├── inflight@1.0.6 
│ ├── inherits@2.0.3 
│ ├── ini@1.3.4 
│ ├─┬ init-package-json@1.10.1 
│ │ └── promzard@0.3.0 
│ ├─┬ JSONStream@1.3.1 
│ │ ├── jsonparse@1.3.1 
│ │ └── through@2.3.8 
│ ├── lazy-property@1.0.0 
│ ├─┬ libnpx@9.6.0 
│ │ ├── dotenv@4.0.0 
│ │ ├── y18n@3.2.1 
│ │ └─┬ yargs@8.0.2 
│ │   ├── camelcase@4.1.0 
│ │   ├─┬ cliui@3.2.0 
│ │   │ ├─┬ string-width@1.0.2 
│ │   │ │ ├── code-point-at@1.1.0 
│ │   │ │ └─┬ is-fullwidth-code-point@1.0.0 
│ │   │ │   └── number-is-nan@1.0.1 
│ │   │ ├─┬ strip-ansi@3.0.1 
│ │   │ │ └── ansi-regex@2.1.1 
│ │   │ └── wrap-ansi@2.1.0 
│ │   ├── decamelize@1.2.0 
│ │   ├── get-caller-file@1.0.2 
│ │   ├─┬ os-locale@2.1.0 
│ │   │ ├─┬ execa@0.7.0 
│ │   │ │ ├─┬ cross-spawn@5.1.0 
│ │   │ │ │ └─┬ shebang-command@1.2.0 
│ │   │ │ │   └── shebang-regex@1.0.0 
│ │   │ │ ├── get-stream@3.0.0 
│ │   │ │ ├── is-stream@1.1.0 
│ │   │ │ ├─┬ npm-run-path@2.0.2 
│ │   │ │ │ └── path-key@2.0.1 
│ │   │ │ ├── p-finally@1.0.0 
│ │   │ │ ├── signal-exit@3.0.2 
│ │   │ │ └── strip-eof@1.0.0 
│ │   │ ├─┬ lcid@1.0.0 
│ │   │ │ └── invert-kv@1.0.0 
│ │   │ └─┬ mem@1.1.0 
│ │   │   └── mimic-fn@1.1.0 
│ │   ├─┬ read-pkg-up@2.0.0 
│ │   │ ├─┬ find-up@2.1.0 
│ │   │ │ └─┬ locate-path@2.0.0 
│ │   │ │   ├─┬ p-locate@2.0.0 
│ │   │ │   │ └── p-limit@1.1.0 
│ │   │ │   └── path-exists@3.0.0 
│ │   │ └─┬ read-pkg@2.0.0 
│ │   │   ├─┬ load-json-file@2.0.0 
│ │   │   │ ├─┬ parse-json@2.2.0 
│ │   │   │ │ └─┬ error-ex@1.3.1 
│ │   │   │ │   └── is-arrayish@0.2.1 
│ │   │   │ ├── pify@2.3.0 
│ │   │   │ └── strip-bom@3.0.0 
│ │   │   └─┬ path-type@2.0.0 
│ │   │     └── pify@2.3.0 
│ │   ├── require-directory@2.1.1 
│ │   ├── require-main-filename@1.0.1 
│ │   ├── set-blocking@2.0.0 
│ │   ├─┬ string-width@2.1.1 
│ │   │ └── is-fullwidth-code-point@2.0.0 
│ │   ├── which-module@2.0.0 
│ │   └── yargs-parser@7.0.0 
│ ├── lockfile@1.0.3 
│ ├── lodash._baseindexof@3.1.0 
│ ├─┬ lodash._baseuniq@4.6.0 
│ │ ├── lodash._createset@4.0.3 
│ │ └── lodash._root@3.0.1 
│ ├── lodash._bindcallback@3.0.1 
│ ├── lodash._cacheindexof@3.0.2 
│ ├── lodash._createcache@3.1.2 
│ ├── lodash._getnative@3.9.1 
│ ├── lodash.clonedeep@4.5.0 
│ ├── lodash.restparam@3.6.1 
│ ├── lodash.union@4.6.0 
│ ├── lodash.uniq@4.5.0 
│ ├── lodash.without@4.4.0 
│ ├─┬ lru-cache@4.1.1 
│ │ ├── pseudomap@1.0.2 
│ │ └── yallist@2.1.2 
│ ├── meant@1.0.0 
│ ├─┬ mississippi@1.3.0 
│ │ ├─┬ concat-stream@1.6.0 
│ │ │ └── typedarray@0.0.6 
│ │ ├─┬ duplexify@3.5.0 
│ │ │ ├─┬ end-of-stream@1.0.0 
│ │ │ │ └── once@1.3.3 
│ │ │ └── stream-shift@1.0.0 
│ │ ├── end-of-stream@1.4.0 
│ │ ├── flush-write-stream@1.0.2 
│ │ ├── from2@2.3.0 
│ │ ├─┬ parallel-transform@1.1.0 
│ │ │ └── cyclist@0.2.2 
│ │ ├── pump@1.0.2 
│ │ ├── pumpify@1.3.5 
│ │ ├─┬ stream-each@1.2.0 
│ │ │ └── stream-shift@1.0.0 
│ │ └─┬ through2@2.0.3 
│ │   └── xtend@4.0.1 
│ ├─┬ mkdirp@0.5.1 
│ │ └── minimist@0.0.8 
│ ├─┬ move-concurrently@1.0.1 
│ │ ├── copy-concurrently@1.0.3 
│ │ └── run-queue@1.0.3 
│ ├─┬ node-gyp@3.6.2 
│ │ ├── fstream@1.0.11 
│ │ ├─┬ minimatch@3.0.4 
│ │ │ └─┬ brace-expansion@1.1.8 
│ │ │   ├── balanced-match@1.0.0 
│ │ │   └── concat-map@0.0.1 
│ │ ├── nopt@3.0.6 
│ │ ├── semver@5.3.0 
│ │ └─┬ tar@2.2.1 
│ │   └── block-stream@0.0.9 
│ ├── nopt@4.0.1 
│ ├─┬ normalize-package-data@2.4.0 
│ │ └─┬ is-builtin-module@1.0.0 
│ │   └── builtin-modules@1.1.1 
│ ├── npm-cache-filename@1.0.2 
│ ├── npm-install-checks@3.0.0 
│ ├── npm-lifecycle@1.0.2 
│ ├── npm-package-arg@5.1.2 
│ ├─┬ npm-packlist@1.1.8 
│ │ ├─┬ ignore-walk@3.0.0 
│ │ │ └─┬ minimatch@3.0.4 
│ │ │   └─┬ brace-expansion@1.1.8 
│ │ │     ├── balanced-match@1.0.0 
│ │ │     └── concat-map@0.0.1 
│ │ └── npm-bundled@1.0.3 
│ ├─┬ npm-registry-client@8.4.0 
│ │ └─┬ concat-stream@1.6.0 
│ │   └── typedarray@0.0.6 
│ ├── npm-user-validate@1.0.0 
│ ├─┬ npmlog@4.1.2 
│ │ ├─┬ are-we-there-yet@1.1.4 
│ │ │ └── delegates@1.0.0 
│ │ ├── console-control-strings@1.1.0 
│ │ ├─┬ gauge@2.7.4 
│ │ │ ├── object-assign@4.1.1 
│ │ │ ├── signal-exit@3.0.2 
│ │ │ ├─┬ string-width@1.0.2 
│ │ │ │ ├── code-point-at@1.1.0 
│ │ │ │ └─┬ is-fullwidth-code-point@1.0.0 
│ │ │ │   └── number-is-nan@1.0.1 
│ │ │ ├─┬ strip-ansi@3.0.1 
│ │ │ │ └── ansi-regex@2.1.1 
│ │ │ └── wide-align@1.1.2 
│ │ └── set-blocking@2.0.0 
│ ├── once@1.4.0 
│ ├── opener@1.4.3 
│ ├─┬ osenv@0.1.4 
│ │ ├── os-homedir@1.0.2 
│ │ └── os-tmpdir@1.0.2 
│ ├─┬ pacote@6.0.2 
│ │ ├─┬ make-fetch-happen@2.5.0 
│ │ │ ├─┬ agentkeepalive@3.3.0 
│ │ │ │ └─┬ humanize-ms@1.2.1 
│ │ │ │   └── ms@2.0.0 
│ │ │ ├── http-cache-semantics@3.7.3 
│ │ │ ├─┬ http-proxy-agent@2.0.0 
│ │ │ │ ├─┬ agent-base@4.1.1 
│ │ │ │ │ └─┬ es6-promisify@5.0.0 
│ │ │ │ │   └── es6-promise@4.1.1 
│ │ │ │ └─┬ debug@2.6.8 
│ │ │ │   └── ms@2.0.0 
│ │ │ ├─┬ https-proxy-agent@2.1.0 
│ │ │ │ ├─┬ agent-base@4.1.1 
│ │ │ │ │ └─┬ es6-promisify@5.0.0 
│ │ │ │ │   └── es6-promise@4.1.1 
│ │ │ │ └─┬ debug@2.6.8 
│ │ │ │   └── ms@2.0.0 
│ │ │ ├─┬ node-fetch-npm@2.0.2 
│ │ │ │ ├─┬ encoding@0.1.12 
│ │ │ │ │ └── iconv-lite@0.4.18 
│ │ │ │ └── json-parse-better-errors@1.0.1 
│ │ │ └─┬ socks-proxy-agent@3.0.0 
│ │ │   ├─┬ agent-base@4.1.1 
│ │ │   │ └─┬ es6-promisify@5.0.0 
│ │ │   │   └── es6-promise@4.1.1 
│ │ │   └─┬ socks@1.1.10 
│ │ │     ├── ip@1.1.5 
│ │ │     └── smart-buffer@1.1.15 
│ │ ├─┬ minimatch@3.0.4 
│ │ │ └─┬ brace-expansion@1.1.8 
│ │ │   ├── balanced-match@1.0.0 
│ │ │   └── concat-map@0.0.1 
│ │ ├── npm-pick-manifest@1.0.4 
│ │ ├─┬ promise-retry@1.1.1 
│ │ │ └── err-code@1.1.2 
│ │ └─┬ protoduck@4.0.0 
│ │   └── genfun@4.0.1 
│ ├── path-is-inside@1.0.2 
│ ├── promise-inflight@1.0.1 
│ ├─┬ read@1.0.7 
│ │ └── mute-stream@0.0.7 
│ ├── read-cmd-shim@1.0.1 
│ ├─┬ read-installed@4.0.3 
│ │ └── util-extend@1.0.3 
│ ├─┬ read-package-json@2.0.12 
│ │ ├── json-parse-better-errors@1.0.1 
│ │ └── slash@1.0.0 
│ ├── read-package-tree@5.1.6 
│ ├─┬ readable-stream@2.3.3 
│ │ ├── core-util-is@1.0.2 
│ │ ├── isarray@1.0.0 
│ │ ├── process-nextick-args@1.0.7 
│ │ ├── string_decoder@1.0.3 
│ │ └── util-deprecate@1.0.2 
│ ├── readdir-scoped-modules@1.0.2 
│ ├─┬ request@2.81.0 
│ │ ├── aws-sign2@0.6.0 
│ │ ├── aws4@1.6.0 
│ │ ├── caseless@0.12.0 
│ │ ├─┬ combined-stream@1.0.5 
│ │ │ └── delayed-stream@1.0.0 
│ │ ├── extend@3.0.1 
│ │ ├── forever-agent@0.6.1 
│ │ ├─┬ form-data@2.1.4 
│ │ │ └── asynckit@0.4.0 
│ │ ├─┬ har-validator@4.2.1 
│ │ │ ├─┬ ajv@4.11.8 
│ │ │ │ ├── co@4.6.0 
│ │ │ │ └─┬ json-stable-stringify@1.0.1 
│ │ │ │   └── jsonify@0.0.0 
│ │ │ └── har-schema@1.0.5 
│ │ ├─┬ hawk@3.1.3 
│ │ │ ├── boom@2.10.1 
│ │ │ ├── cryptiles@2.0.5 
│ │ │ ├── hoek@2.16.3 
│ │ │ └── sntp@1.0.9 
│ │ ├─┬ http-signature@1.1.1 
│ │ │ ├── assert-plus@0.2.0 
│ │ │ ├─┬ jsprim@1.4.0 
│ │ │ │ ├── assert-plus@1.0.0 
│ │ │ │ ├── extsprintf@1.0.2 
│ │ │ │ ├── json-schema@0.2.3 
│ │ │ │ └── verror@1.3.6 
│ │ │ └─┬ sshpk@1.13.1 
│ │ │   ├── asn1@0.2.3 
│ │ │   ├── assert-plus@1.0.0 
│ │ │   ├── bcrypt-pbkdf@1.0.1 
│ │ │   ├── dashdash@1.14.1 
│ │ │   ├── ecc-jsbn@0.1.1 
│ │ │   ├── getpass@0.1.7 
│ │ │   ├── jsbn@0.1.1 
│ │ │   └── tweetnacl@0.14.5 
│ │ ├── is-typedarray@1.0.0 
│ │ ├── isstream@0.1.2 
│ │ ├── json-stringify-safe@5.0.1 
│ │ ├─┬ mime-types@2.1.15 
│ │ │ └── mime-db@1.27.0 
│ │ ├── oauth-sign@0.8.2 
│ │ ├── performance-now@0.2.0 
│ │ ├── qs@6.4.0 
│ │ ├── stringstream@0.0.5 
│ │ ├─┬ tough-cookie@2.3.2 
│ │ │ └── punycode@1.4.1 
│ │ └── tunnel-agent@0.6.0 
│ ├── retry@0.10.1 
│ ├── rimraf@2.6.1 
│ ├── safe-buffer@5.1.1 
│ ├── semver@5.4.1 
│ ├── sha@2.0.1 
│ ├── slide@1.1.6 
│ ├── sorted-object@2.0.1 
│ ├─┬ sorted-union-stream@2.1.3 
│ │ ├─┬ from2@1.3.0 
│ │ │ └─┬ readable-stream@1.1.14 
│ │ │   ├── core-util-is@1.0.2 
│ │ │   ├── isarray@0.0.1 
│ │ │   └── string_decoder@0.10.31 
│ │ └─┬ stream-iterate@1.2.0 
│ │   └── stream-shift@1.0.0 
│ ├── ssri@4.1.6 
│ ├─┬ strip-ansi@4.0.0 
│ │ └── ansi-regex@3.0.0 
│ ├─┬ tar@4.0.1 
│ │ ├── minipass@2.2.1 
│ │ ├── minizlib@1.0.3 
│ │ └── yallist@3.0.2 
│ ├── text-table@0.2.0 
│ ├── uid-number@0.0.6 
│ ├── umask@1.1.0 
│ ├─┬ unique-filename@1.1.0 
│ │ └── unique-slug@2.0.0 
│ ├── unpipe@1.0.0 
│ ├─┬ update-notifier@2.2.0 
│ │ ├─┬ boxen@1.1.0 
│ │ │ ├── ansi-align@2.0.0 
│ │ │ ├── camelcase@4.1.0 
│ │ │ ├── cli-boxes@1.0.0 
│ │ │ ├─┬ string-width@2.1.0 
│ │ │ │ ├── is-fullwidth-code-point@2.0.0 
│ │ │ │ └── strip-ansi@4.0.0 
│ │ │ ├─┬ term-size@0.1.1 
│ │ │ │ └─┬ execa@0.4.0 
│ │ │ │   ├── cross-spawn-async@2.2.5 
│ │ │ │   ├── is-stream@1.1.0 
│ │ │ │   ├── npm-run-path@1.0.0 
│ │ │ │   ├── object-assign@4.1.1 
│ │ │ │   ├── path-key@1.0.0 
│ │ │ │   └── strip-eof@1.0.0 
│ │ │ └─┬ widest-line@1.0.0 
│ │ │   └─┬ string-width@1.0.2 
│ │ │     ├── code-point-at@1.1.0 
│ │ │     ├─┬ is-fullwidth-code-point@1.0.0 
│ │ │     │ └── number-is-nan@1.0.1 
│ │ │     └─┬ strip-ansi@3.0.1 
│ │ │       └── ansi-regex@2.1.1 
│ │ ├─┬ chalk@1.1.3 
│ │ │ ├── ansi-styles@2.2.1 
│ │ │ ├── escape-string-regexp@1.0.5 
│ │ │ ├─┬ has-ansi@2.0.0 
│ │ │ │ └── ansi-regex@2.1.1 
│ │ │ ├─┬ strip-ansi@3.0.1 
│ │ │ │ └── ansi-regex@2.1.1 
│ │ │ └── supports-color@2.0.0 
│ │ ├─┬ configstore@3.1.0 
│ │ │ ├─┬ dot-prop@4.1.1 
│ │ │ │ └── is-obj@1.0.1 
│ │ │ ├─┬ make-dir@1.0.0 
│ │ │ │ └── pify@2.3.0 
│ │ │ └─┬ unique-string@1.0.0 
│ │ │   └── crypto-random-string@1.0.0 
│ │ ├── import-lazy@2.1.0 
│ │ ├── is-npm@1.0.0 
│ │ ├─┬ latest-version@3.1.0 
│ │ │ └─┬ package-json@4.0.1 
│ │ │   ├─┬ got@6.7.1 
│ │ │   │ ├─┬ create-error-class@3.0.2 
│ │ │   │ │ └── capture-stack-trace@1.0.0 
│ │ │   │ ├── duplexer3@0.1.4 
│ │ │   │ ├── get-stream@3.0.0 
│ │ │   │ ├── is-redirect@1.0.0 
│ │ │   │ ├── is-retry-allowed@1.1.0 
│ │ │   │ ├── is-stream@1.1.0 
│ │ │   │ ├── lowercase-keys@1.0.0 
│ │ │   │ ├── timed-out@4.0.1 
│ │ │   │ ├── unzip-response@2.0.1 
│ │ │   │ └─┬ url-parse-lax@1.0.0 
│ │ │   │   └── prepend-http@1.0.4 
│ │ │   ├─┬ registry-auth-token@3.3.1 
│ │ │   │ └─┬ rc@1.2.1 
│ │ │   │   ├── deep-extend@0.4.2 
│ │ │   │   ├── minimist@1.2.0 
│ │ │   │   └── strip-json-comments@2.0.1 
│ │ │   └─┬ registry-url@3.1.0 
│ │ │     └─┬ rc@1.2.1 
│ │ │       ├── deep-extend@0.4.2 
│ │ │       ├── minimist@1.2.0 
│ │ │       └── strip-json-comments@2.0.1 
│ │ ├── semver-diff@2.1.0 
│ │ └── xdg-basedir@3.0.0 
│ ├── uuid@3.1.0 
│ ├─┬ validate-npm-package-license@3.0.1 
│ │ ├─┬ spdx-correct@1.0.2 
│ │ │ └── spdx-license-ids@1.2.2 
│ │ └── spdx-expression-parse@1.0.4 
│ ├─┬ validate-npm-package-name@3.0.0 
│ │ └── builtins@1.0.3 
│ ├─┬ which@1.3.0 
│ │ └── isexe@2.0.0 
│ ├─┬ worker-farm@1.5.0 
│ │ ├─┬ errno@0.1.4 
│ │ │ └── prr@0.0.0 
│ │ └── xtend@4.0.1 
│ ├── wrappy@1.0.2 
│ └─┬ write-file-atomic@2.3.0 
│   └── signal-exit@3.0.2 
├─┬ promise@7.3.1 
│ └── asap@2.0.6 
├── q@1.5.0 
├─┬ request@2.81.0 
│ ├── aws-sign2@0.6.0 
│ ├── aws4@1.6.0 
│ ├── caseless@0.12.0 
│ ├─┬ combined-stream@1.0.5 
│ │ └── delayed-stream@1.0.0 
│ ├── extend@3.0.1 
│ ├── forever-agent@0.6.1 
│ ├─┬ form-data@2.1.4 
│ │ └── asynckit@0.4.0 
│ ├─┬ har-validator@4.2.1 
│ │ └── har-schema@1.0.5 
│ ├─┬ hawk@3.1.3 
│ │ ├── boom@2.10.1 
│ │ ├── cryptiles@2.0.5 
│ │ ├── hoek@2.16.3 
│ │ └── sntp@1.0.9 
│ ├─┬ http-signature@1.1.1 
│ │ ├── assert-plus@0.2.0 
│ │ ├─┬ jsprim@1.4.1 
│ │ │ ├── assert-plus@1.0.0 
│ │ │ ├── extsprintf@1.3.0 
│ │ │ ├── json-schema@0.2.3 
│ │ │ └─┬ verror@1.10.0 
│ │ │   └── assert-plus@1.0.0 
│ │ └─┬ sshpk@1.13.1 
│ │   ├── asn1@0.2.3 
│ │   ├── assert-plus@1.0.0 
│ │   ├── bcrypt-pbkdf@1.0.1 
│ │   ├─┬ dashdash@1.14.1 
│ │   │ └── assert-plus@1.0.0 
│ │   ├── ecc-jsbn@0.1.1 
│ │   ├─┬ getpass@0.1.7 
│ │   │ └── assert-plus@1.0.0 
│ │   ├── jsbn@0.1.1 
│ │   └── tweetnacl@0.14.5 
│ ├── is-typedarray@1.0.0 
│ ├── isstream@0.1.2 
│ ├── json-stringify-safe@5.0.1 
│ ├─┬ mime-types@2.1.17 
│ │ └── mime-db@1.30.0 
│ ├── oauth-sign@0.8.2 
│ ├── performance-now@0.2.0 
│ ├── qs@6.4.0 
│ ├── safe-buffer@5.1.1 
│ ├── stringstream@0.0.5 
│ ├─┬ tough-cookie@2.3.2 
│ │ └── punycode@1.4.1 
│ └── tunnel-agent@0.6.0 
├── sequence@3.0.0 
├─┬ truffle-contract@2.0.5 
│ ├─┬ ethjs-abi@0.1.8 
│ │ ├── bn.js@4.11.6 
│ │ ├── js-sha3@0.5.5 
│ │ └─┬ number-to-bn@1.7.0 
│ │   └─┬ strip-hex-prefix@1.0.0 
│ │     └── is-hex-prefixed@1.0.0 
│ ├─┬ truffle-blockchain-utils@0.0.3 
│ │ └── web3@0.20.1 
│ ├─┬ truffle-contract-schema@0.0.5 
│ │ └── crypto-js@3.1.9-1 
│ └─┬ web3@0.20.1 
│   └── bignumber.js@2.0.7  (git+https://github.com/frozeman/bignumber.js-nolookahead.git#57692b3ecfc98bbdd6b3a516cb2353652ea49934)
├── uuid@3.1.0 
├── wait-promise@0.4.1 
├─┬ web3@0.19.1 
│ ├── bignumber.js@4.0.4 
│ ├── crypto-js@3.1.8 
│ ├── utf8@2.1.2 
│ ├── xhr2@0.1.4 
│ └── xmlhttprequest@1.8.0 
├── UNMET PEER DEPENDENCY webpack@2 || 3
├─┬ xml2js@0.4.19 
│ ├── sax@1.2.4 
│ └── xmlbuilder@9.0.4 
└─┬ yarn@0.24.6 
  ├── bytes@2.5.0 
  ├── camelcase@4.1.0 
  ├── cmd-shim@2.0.2 
  ├── death@1.1.0 
  ├── detect-indent@5.0.0 
  ├─┬ gunzip-maybe@1.4.1 
  │ ├─┬ browserify-zlib@0.1.4 
  │ │ └── pako@0.2.9 
  │ ├── is-deflate@1.0.0 
  │ ├── is-gzip@1.0.0 
  │ ├─┬ peek-stream@1.1.2 
  │ │ └─┬ duplexify@3.5.1 
  │ │   └── stream-shift@1.0.0 
  │ ├── pumpify@1.3.5 
  │ └── through2@2.0.3 
  ├── ini@1.3.4 
  ├─┬ inquirer@3.2.3 
  │ ├── ansi-escapes@2.0.0 
  │ ├─┬ chalk@2.1.0 
  │ │ ├─┬ ansi-styles@3.2.0 
  │ │ │ └─┬ color-convert@1.9.0 
  │ │ │   └── color-name@1.1.3 
  │ │ └─┬ supports-color@4.4.0 
  │ │   └── has-flag@2.0.0 
  │ ├─┬ cli-cursor@2.1.0 
  │ │ └─┬ restore-cursor@2.0.0 
  │ │   └─┬ onetime@2.0.1 
  │ │     └── mimic-fn@1.1.0 
  │ ├─┬ external-editor@2.0.4 
  │ │ ├── jschardet@1.5.1 
  │ │ └── tmp@0.0.31 
  │ ├── figures@2.0.0 
  │ ├── mute-stream@0.0.7 
  │ ├─┬ run-async@2.3.0 
  │ │ └── is-promise@2.1.0 
  │ ├── rx-lite@4.0.8 
  │ ├── rx-lite-aggregates@4.0.8 
  │ └─┬ strip-ansi@4.0.0 
  │   └── ansi-regex@3.0.0 
  ├── is-builtin-module@1.0.0 
  ├─┬ is-ci@1.0.10 
  │ └── ci-info@1.1.1 
  ├── leven@2.1.0 
  ├─┬ loud-rejection@1.6.0 
  │ ├─┬ currently-unhandled@0.4.1 
  │ │ └── array-find-index@1.0.2 
  │ └── signal-exit@3.0.2 
  ├─┬ node-emoji@1.8.1 
  │ └── lodash.toarray@4.4.0 
  ├── object-path@0.11.4 
  ├─┬ proper-lockfile@2.0.1 
  │ └── retry@0.10.1 
  ├── read@1.0.7 
  ├── request-capture-har@1.2.2 
  ├── rimraf@2.6.2 
  ├─┬ tar-fs@1.15.3 
  │ ├── chownr@1.0.1 
  │ └── pump@1.0.2 
  ├─┬ tar-stream@1.5.4 
  │ ├── bl@1.2.1 
  │ └── end-of-stream@1.4.0 
  ├── v8-compile-cache@1.1.0 
  └─┬ validate-npm-package-license@3.0.1 
    ├─┬ spdx-correct@1.0.2 
    │ └── spdx-license-ids@1.2.2 
    └── spdx-expression-parse@1.0.4 
</msg>
<status status="PASS" endtime="20170913 19:00:07.312" starttime="20170913 19:00:07.311"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${npm_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170913 19:00:07.313" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170913 19:00:07.313" starttime="20170913 19:00:07.313"></status>
</kw>
<status status="PASS" endtime="20170913 19:00:07.313" starttime="20170913 18:58:52.896"></status>
</kw>
<kw name="Set Oracle Address In Bridge" library="IexecBridge">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>sed -i 's/.*"ContractAddress":.*/"ContractAddress":\"${IEXEC_ORACLE_SM_ADDRESS}\"/g' iexec-bridge/config.json</arg>
</arguments>
<msg timestamp="20170913 19:00:07.315" level="INFO">Running command 'sed -i 's/.*"ContractAddress":.*/"ContractAddress":"0x4a000924a4661e812c33f24192fdb8df1ca82c3f"/g' iexec-bridge/config.json 2&gt;&amp;1'.</msg>
<status status="PASS" endtime="20170913 19:00:07.332" starttime="20170913 19:00:07.314"></status>
</kw>
<status status="PASS" endtime="20170913 19:00:07.333" starttime="20170913 19:00:07.313"></status>
</kw>
<kw name="Set XtremWeb Config In Bridge" library="IexecBridge">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${XWCONFIGURE.VALUES.XWSERVER}</arg>
</arguments>
<msg timestamp="20170913 19:00:07.334" level="INFO">localhost</msg>
<status status="PASS" endtime="20170913 19:00:07.334" starttime="20170913 19:00:07.334"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>sed -i "s/.*const LOCALHOSTNAME = .*/const LOCALHOSTNAME = '${XWCONFIGURE.VALUES.XWSERVER}';/g" iexec-bridge/xwhep.js</arg>
</arguments>
<msg timestamp="20170913 19:00:07.335" level="INFO">Running command 'sed -i "s/.*const LOCALHOSTNAME = .*/const LOCALHOSTNAME = 'localhost';/g" iexec-bridge/xwhep.js 2&gt;&amp;1'.</msg>
<status status="PASS" endtime="20170913 19:00:07.346" starttime="20170913 19:00:07.334"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${XWCONFIGURE.VALUES.HTTPSPORT}</arg>
</arguments>
<msg timestamp="20170913 19:00:07.347" level="INFO">9443</msg>
<status status="PASS" endtime="20170913 19:00:07.347" starttime="20170913 19:00:07.346"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>sed -i "s/.*const LOCALHOSTPORT = .*/const LOCALHOSTPORT = ${XWCONFIGURE.VALUES.HTTPSPORT};/g" iexec-bridge/xwhep.js</arg>
</arguments>
<msg timestamp="20170913 19:00:07.349" level="INFO">Running command 'sed -i "s/.*const LOCALHOSTPORT = .*/const LOCALHOSTPORT = 9443;/g" iexec-bridge/xwhep.js 2&gt;&amp;1'.</msg>
<status status="PASS" endtime="20170913 19:00:07.363" starttime="20170913 19:00:07.347"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${XWCONFIGURE.VALUES.XWADMINLOGIN}</arg>
</arguments>
<msg timestamp="20170913 19:00:07.364" level="INFO">admin</msg>
<status status="PASS" endtime="20170913 19:00:07.364" starttime="20170913 19:00:07.363"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>sed -i "s/.*const LOGIN = .*/const LOGIN = '${XWCONFIGURE.VALUES.XWADMINLOGIN}';/g" iexec-bridge/xwhep.js</arg>
</arguments>
<msg timestamp="20170913 19:00:07.366" level="INFO">Running command 'sed -i "s/.*const LOGIN = .*/const LOGIN = 'admin';/g" iexec-bridge/xwhep.js 2&gt;&amp;1'.</msg>
<status status="PASS" endtime="20170913 19:00:07.380" starttime="20170913 19:00:07.364"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${XWCONFIGURE.VALUES.XWADMINPASSWORD}</arg>
</arguments>
<msg timestamp="20170913 19:00:07.381" level="INFO">admin</msg>
<status status="PASS" endtime="20170913 19:00:07.381" starttime="20170913 19:00:07.380"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>sed -i "s/.*const PASSWD = .*/const PASSWD = '${XWCONFIGURE.VALUES.XWADMINPASSWORD}';/g" iexec-bridge/xwhep.js</arg>
</arguments>
<msg timestamp="20170913 19:00:07.384" level="INFO">Running command 'sed -i "s/.*const PASSWD = .*/const PASSWD = 'admin';/g" iexec-bridge/xwhep.js 2&gt;&amp;1'.</msg>
<status status="PASS" endtime="20170913 19:00:07.400" starttime="20170913 19:00:07.381"></status>
</kw>
<status status="PASS" endtime="20170913 19:00:07.400" starttime="20170913 19:00:07.333"></status>
</kw>
<status status="PASS" endtime="20170913 19:00:07.400" starttime="20170913 18:58:52.895"></status>
</kw>
<kw name="Start Bridge" library="IexecBridge">
<kw name="Remove File" library="OperatingSystem">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>iexec-bridge/bridge.log</arg>
</arguments>
<msg timestamp="20170913 19:00:07.402" html="yes" level="INFO">File '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/iexec-bridge/bridge.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/iexec-bridge/bridge.log&lt;/a&gt;' does not exist.</msg>
<status status="PASS" endtime="20170913 19:00:07.402" starttime="20170913 19:00:07.401"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>cd iexec-bridge &amp;&amp; npm run devbridgelog</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${created_process}</var>
</assign>
<msg timestamp="20170913 19:00:07.403" level="INFO">Starting process:
cd iexec-bridge &amp;&amp; npm run devbridgelog</msg>
<msg timestamp="20170913 19:00:07.407" level="INFO">${created_process} = 10</msg>
<status status="PASS" endtime="20170913 19:00:07.407" starttime="20170913 19:00:07.403"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${BRIDGE_PROCESS}</arg>
<arg>${created_process}</arg>
</arguments>
<msg timestamp="20170913 19:00:07.408" level="INFO">${BRIDGE_PROCESS} = 10</msg>
<status status="PASS" endtime="20170913 19:00:07.408" starttime="20170913 19:00:07.407"></status>
</kw>
<status status="PASS" endtime="20170913 19:00:07.408" starttime="20170913 19:00:07.400"></status>
</kw>
<status status="PASS" endtime="20170913 19:00:07.408" starttime="20170913 18:46:28.460"></status>
</kw>
<test id="s1-s1-t1" name="Test HelloWorld Submit Iexec">
<kw name="Get User Address" library="IexceOracleSmartContract">
<assign>
<var>${user}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd iexec-oracle &amp;&amp; ./node_modules/.bin/truffle test test/rf/getUserAddress.js</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${truffletest_result}</var>
</assign>
<msg timestamp="20170913 19:00:07.416" level="INFO">Starting process:
cd iexec-oracle &amp;&amp; ./node_modules/.bin/truffle test test/rf/getUserAddress.js</msg>
<msg timestamp="20170913 19:00:07.420" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170913 19:00:45.561" level="INFO">Process completed.</msg>
<msg timestamp="20170913 19:00:45.562" level="INFO">${truffletest_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170913 19:00:45.562" starttime="20170913 19:00:07.416"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stderr}</arg>
</arguments>
<msg timestamp="20170913 19:00:45.564" level="INFO"></msg>
<status status="PASS" endtime="20170913 19:00:45.564" starttime="20170913 19:00:45.563"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
</arguments>
<msg timestamp="20170913 19:00:45.564" level="INFO">Using network 'development'.

IexecOracle deployed at address :0x2b8972d0087a5f4d36866677d809c616c3859f9b
HelloWorldTest deployed at address :0x9a0d1969eb274a0392842a9fa5e5a26263fad6c0

[0m[0m
[0m  Contract: IexecOracle[0m
BEGIN_LOG0xf0f137c532e4c860049f48529c6a0c2320211821END_LOG
  [32m  ✓[0m[90m get a creator[0m


[92m [0m[32m 1 passing[0m[90m (185ms)[0m
</msg>
<status status="PASS" endtime="20170913 19:00:45.564" starttime="20170913 19:00:45.564"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${truffletest_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170913 19:00:45.565" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170913 19:00:45.565" starttime="20170913 19:00:45.565"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
<arg>BEGIN_LOG(?P&lt;address&gt;.*)END_LOG</arg>
<arg>address</arg>
</arguments>
<assign>
<var>@{address}</var>
</assign>
<msg timestamp="20170913 19:00:45.566" level="INFO">@{address} = [ 0xf0f137c532e4c860049f48529c6a0c2320211821 ]</msg>
<status status="PASS" endtime="20170913 19:00:45.566" starttime="20170913 19:00:45.565"></status>
</kw>
<msg timestamp="20170913 19:00:45.566" level="INFO">${user} = 0xf0f137c532e4c860049f48529c6a0c2320211821</msg>
<status status="PASS" endtime="20170913 19:00:45.566" starttime="20170913 19:00:07.415"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${USER}</arg>
<arg>${user}</arg>
</arguments>
<msg timestamp="20170913 19:00:45.567" level="INFO">${USER} = 0xf0f137c532e4c860049f48529c6a0c2320211821</msg>
<status status="PASS" endtime="20170913 19:00:45.567" starttime="20170913 19:00:45.567"></status>
</kw>
<kw name="Get Creator Address" library="IexceOracleSmartContract">
<assign>
<var>${creator}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd iexec-oracle &amp;&amp; ./node_modules/.bin/truffle test test/rf/getCreatorAddress.js</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${truffletest_result}</var>
</assign>
<msg timestamp="20170913 19:00:45.568" level="INFO">Starting process:
cd iexec-oracle &amp;&amp; ./node_modules/.bin/truffle test test/rf/getCreatorAddress.js</msg>
<msg timestamp="20170913 19:00:45.572" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170913 19:01:01.627" level="INFO">Process completed.</msg>
<msg timestamp="20170913 19:01:01.627" level="INFO">${truffletest_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170913 19:01:01.627" starttime="20170913 19:00:45.568"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stderr}</arg>
</arguments>
<msg timestamp="20170913 19:01:01.628" level="INFO"></msg>
<status status="PASS" endtime="20170913 19:01:01.628" starttime="20170913 19:01:01.628"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
</arguments>
<msg timestamp="20170913 19:01:01.629" level="INFO">Using network 'development'.

IexecOracle deployed at address :0xcb90dae431504f3115bbaa34d297f9c2b47988de
HelloWorldTest deployed at address :0x8060259d1ff1546a795b5450ed9455567879fa75

[0m[0m
[0m  Contract: IexecOracle[0m
BEGIN_LOG0xc0977169256dc4b3338e237263daf7ecbfef99aeEND_LOG
  [32m  ✓[0m[90m get a creator[0m


[92m [0m[32m 1 passing[0m[90m (226ms)[0m
</msg>
<status status="PASS" endtime="20170913 19:01:01.629" starttime="20170913 19:01:01.629"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${truffletest_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170913 19:01:01.630" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170913 19:01:01.630" starttime="20170913 19:01:01.629"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
<arg>BEGIN_LOG(?P&lt;address&gt;.*)END_LOG</arg>
<arg>address</arg>
</arguments>
<assign>
<var>@{address}</var>
</assign>
<msg timestamp="20170913 19:01:01.630" level="INFO">@{address} = [ 0xc0977169256dc4b3338e237263daf7ecbfef99ae ]</msg>
<status status="PASS" endtime="20170913 19:01:01.631" starttime="20170913 19:01:01.630"></status>
</kw>
<msg timestamp="20170913 19:01:01.631" level="INFO">${creator} = 0xc0977169256dc4b3338e237263daf7ecbfef99ae</msg>
<status status="PASS" endtime="20170913 19:01:01.631" starttime="20170913 19:00:45.567"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${CREATOR}</arg>
<arg>${creator}</arg>
</arguments>
<msg timestamp="20170913 19:01:01.632" level="INFO">${CREATOR} = 0xc0977169256dc4b3338e237263daf7ecbfef99ae</msg>
<status status="PASS" endtime="20170913 19:01:01.632" starttime="20170913 19:01:01.631"></status>
</kw>
<kw name="XWSENDAPPCommand" library="XWClient">
<doc>Usage : SENDAPP appName appType cpuType osName URI | UID : inserts/updates an application; URI or UID points to binary file ; application name must be the first parameter</doc>
<arguments>
<arg>echo</arg>
<arg>DEPLOYABLE</arg>
<arg>LINUX</arg>
<arg>AMD64</arg>
<arg>/bin/echo</arg>
</arguments>
<assign>
<var>${app_uid}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd ${DIST_XWHEP_PATH}/bin &amp;&amp; ./xwsendapp ${appName} ${appType} ${cpuType} ${osName} ${uri-udi}</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${cmd_result}</var>
</assign>
<msg timestamp="20170913 19:01:01.634" level="INFO">Starting process:
cd /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin &amp;&amp; ./xwsendapp echo DEPLOYABLE LINUX AMD64 /bin/echo</msg>
<msg timestamp="20170913 19:01:01.638" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170913 19:01:02.402" level="INFO">Process completed.</msg>
<msg timestamp="20170913 19:01:02.402" level="INFO">${cmd_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170913 19:01:02.402" starttime="20170913 19:01:01.633"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stderr}</arg>
</arguments>
<msg timestamp="20170913 19:01:02.403" level="INFO"></msg>
<status status="PASS" endtime="20170913 19:01:02.403" starttime="20170913 19:01:02.402"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
</arguments>
<msg timestamp="20170913 19:01:02.403" level="INFO">xw://vagrant-ubuntu-trusty-64/86fabe8b-916c-4df6-ba1d-f183ee0b713e</msg>
<status status="PASS" endtime="20170913 19:01:02.403" starttime="20170913 19:01:02.403"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${cmd_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170913 19:01:02.404" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170913 19:01:02.404" starttime="20170913 19:01:02.403"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
<arg>-36</arg>
</arguments>
<assign>
<var>${uid}</var>
</assign>
<msg timestamp="20170913 19:01:02.404" level="INFO">${uid} = 86fabe8b-916c-4df6-ba1d-f183ee0b713e</msg>
<status status="PASS" endtime="20170913 19:01:02.404" starttime="20170913 19:01:02.404"></status>
</kw>
<msg timestamp="20170913 19:01:02.404" level="INFO">${app_uid} = 86fabe8b-916c-4df6-ba1d-f183ee0b713e</msg>
<status status="PASS" endtime="20170913 19:01:02.404" starttime="20170913 19:01:01.633"></status>
</kw>
<kw name="Count From Apps Where Uid" library="XWServer">
<arguments>
<arg>${app_uid}</arg>
<arg>1</arg>
</arguments>
<kw name="Count From Table Where Uid" library="MySql">
<arguments>
<arg>apps</arg>
<arg>${uid}</arg>
<arg>${countExpected}</arg>
</arguments>
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170913 19:01:02.406" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170913 19:01:02.408" starttime="20170913 19:01:02.406"></status>
</kw>
<status status="PASS" endtime="20170913 19:01:02.408" starttime="20170913 19:01:02.406"></status>
</kw>
<kw name="Row Count Is Equal To X" library="DatabaseLibrary">
<doc>Check if the number of rows returned from `selectStatement` is equal to the value submitted. If not, then this</doc>
<arguments>
<arg>SELECT * FROM ${table} WHERE uid = '${uid}'</arg>
<arg>${countExpected}</arg>
</arguments>
<msg timestamp="20170913 19:01:02.409" level="INFO">Executing : Row Count Is Equal To X  |  SELECT * FROM apps WHERE uid = '86fabe8b-916c-4df6-ba1d-f183ee0b713e'  |  1 </msg>
<msg timestamp="20170913 19:01:02.409" level="INFO">Executing : Row Count  |  SELECT * FROM apps WHERE uid = '86fabe8b-916c-4df6-ba1d-f183ee0b713e' </msg>
<status status="PASS" endtime="20170913 19:01:02.410" starttime="20170913 19:01:02.409"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170913 19:01:02.411" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170913 19:01:02.411" starttime="20170913 19:01:02.411"></status>
</kw>
<status status="PASS" endtime="20170913 19:01:02.411" starttime="20170913 19:01:02.411"></status>
</kw>
<status status="PASS" endtime="20170913 19:01:02.411" starttime="20170913 19:01:02.405"></status>
</kw>
<status status="PASS" endtime="20170913 19:01:02.411" starttime="20170913 19:01:02.405"></status>
</kw>
<kw name="Count From Works" library="XWServer">
<arguments>
<arg>0</arg>
</arguments>
<kw name="Count From Table" library="MySql">
<arguments>
<arg>works</arg>
<arg>${countExpected}</arg>
</arguments>
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170913 19:01:02.413" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170913 19:01:02.414" starttime="20170913 19:01:02.413"></status>
</kw>
<status status="PASS" endtime="20170913 19:01:02.414" starttime="20170913 19:01:02.412"></status>
</kw>
<kw name="Row Count Is Equal To X" library="DatabaseLibrary">
<doc>Check if the number of rows returned from `selectStatement` is equal to the value submitted. If not, then this</doc>
<arguments>
<arg>SELECT * FROM ${table}</arg>
<arg>${countExpected}</arg>
</arguments>
<msg timestamp="20170913 19:01:02.414" level="INFO">Executing : Row Count Is Equal To X  |  SELECT * FROM works  |  0 </msg>
<msg timestamp="20170913 19:01:02.414" level="INFO">Executing : Row Count  |  SELECT * FROM works </msg>
<status status="PASS" endtime="20170913 19:01:02.415" starttime="20170913 19:01:02.414"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170913 19:01:02.416" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170913 19:01:02.416" starttime="20170913 19:01:02.416"></status>
</kw>
<status status="PASS" endtime="20170913 19:01:02.416" starttime="20170913 19:01:02.416"></status>
</kw>
<status status="PASS" endtime="20170913 19:01:02.416" starttime="20170913 19:01:02.412"></status>
</kw>
<status status="PASS" endtime="20170913 19:01:02.416" starttime="20170913 19:01:02.412"></status>
</kw>
<kw name="SubmitEcho" library="HelloWorldSmartContract">
<arguments>
<arg>HelloWorld!!!</arg>
</arguments>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>sed -i "s/.*return aHelloWorldInstance.iexecSubmit(.*/return aHelloWorldInstance.iexecSubmit(\\"echo\\",\\"${text}\\",{/g" iexec-oracle/test/rf/submitHelloWorldTest.js</arg>
</arguments>
<msg timestamp="20170913 19:01:02.418" level="INFO">Running command 'sed -i "s/.*return aHelloWorldInstance.iexecSubmit(.*/return aHelloWorldInstance.iexecSubmit(\"echo\",\"HelloWorld!!!\",{/g" iexec-oracle/test/rf/submitHelloWorldTest.js 2&gt;&amp;1'.</msg>
<status status="PASS" endtime="20170913 19:01:02.431" starttime="20170913 19:01:02.417"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd iexec-oracle &amp;&amp; ./node_modules/.bin/truffle test test/rf/submitHelloWorldTest.js</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${truffletest_result}</var>
</assign>
<msg timestamp="20170913 19:01:02.432" level="INFO">Starting process:
cd iexec-oracle &amp;&amp; ./node_modules/.bin/truffle test test/rf/submitHelloWorldTest.js</msg>
<msg timestamp="20170913 19:01:02.435" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170913 19:01:34.327" level="INFO">Process completed.</msg>
<msg timestamp="20170913 19:01:34.327" level="INFO">${truffletest_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170913 19:01:34.328" starttime="20170913 19:01:02.431"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stderr}</arg>
</arguments>
<msg timestamp="20170913 19:01:34.328" level="INFO"></msg>
<status status="PASS" endtime="20170913 19:01:34.328" starttime="20170913 19:01:34.328"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
</arguments>
<msg timestamp="20170913 19:01:34.329" level="INFO">Using network 'development'.

IexecOracle deployed at address :0x0a2cc713dcd87d0aec1b254e17a264bcfa4582e5
HelloWorldTest deployed at address :0xac8529239f03881bdd7e53412273433e39434b0b

[0m[0m
[0m  Contract: HelloWorldTest[0m
refill 20 ether to 0xf0f137c532e4c860049f48529c6a0c2320211821
BEGIN_LOG
{ tx: '0xdb809449cef8cd56e86445d0c7874c7e1f801b3c1cc9b519d25ab0c0d20e4a64',
  receipt: 
   { blockHash: '0x690abb6f30f6dfe8a5d16793f76ab7c8fb681438530b7b7d295fa26d81bfb5d6',
     blockNumber: 96,
     contractAddress: null,
     cumulativeGasUsed: 33325,
     from: '0xf0f137c532e4c860049f48529c6a0c2320211821',
     gasUsed: 33325,
     logs: [ [Object] ],
     logsBloom: '0x
     root: '0x79aa75fb00e8041121e04283b5ea3b702e029c88144fd5950b5df54ee3f3d852',
     to: '0x322d57cf2505609e1368965dd9f4ec0e54c2f3bd',
     transactionHash: '0xdb809449cef8cd56e86445d0c7874c7e1f801b3c1cc9b519d25ab0c0d20e4a64',
     transactionIndex: 0 },
  logs: [] }
END_LOG
  [32m  ✓[0m[90m should register a work[0m[31m (5268ms)[0m


[92m [0m[32m 1 passing[0m[90m (7s)[0m
</msg>
<status status="PASS" endtime="20170913 19:01:34.329" starttime="20170913 19:01:34.329"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${truffletest_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170913 19:01:34.330" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170913 19:01:34.330" starttime="20170913 19:01:34.329"></status>
</kw>
<status status="PASS" endtime="20170913 19:01:34.330" starttime="20170913 19:01:02.417"></status>
</kw>
<kw name="Check Submit Launch Event In IexceOracleSmartContract" library="IexceOracleSmartContract">
<arguments>
<arg>${HELLO_WORLD_SM_ADDRESS}</arg>
</arguments>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3 min</arg>
<arg>1 min</arg>
<arg>Watch LaunchEvent</arg>
</arguments>
<assign>
<var>${watch_launch_event}</var>
</assign>
<kw name="Watch LaunchEvent" library="IexceOracleSmartContract">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd iexec-oracle &amp;&amp; ./node_modules/.bin/truffle test test/rf/watchLaunchEventInIexecOracle.js</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${truffletest_result}</var>
</assign>
<msg timestamp="20170913 19:01:34.332" level="INFO">Starting process:
cd iexec-oracle &amp;&amp; ./node_modules/.bin/truffle test test/rf/watchLaunchEventInIexecOracle.js</msg>
<msg timestamp="20170913 19:01:34.334" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170913 19:01:59.002" level="INFO">Process completed.</msg>
<msg timestamp="20170913 19:01:59.002" level="INFO">${truffletest_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170913 19:01:59.002" starttime="20170913 19:01:34.332"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stderr}</arg>
</arguments>
<msg timestamp="20170913 19:01:59.003" level="INFO"></msg>
<status status="PASS" endtime="20170913 19:01:59.004" starttime="20170913 19:01:59.003"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
</arguments>
<msg timestamp="20170913 19:01:59.004" level="INFO">Using network 'development'.

IexecOracle deployed at address :0xe759f4d5b3ad78696796e11bdbf81ab5009e8ca0
HelloWorldTest deployed at address :0xc6b2831868cf9dba7cf077420d04717b33c31660

[0m[0m
[0m  Contract: IexecOracle[0m
BEGIN_LOG
[ { address: '0x4a000924a4661e812c33f24192fdb8df1ca82c3f',
    blockNumber: 96,
    transactionHash: '0xdb809449cef8cd56e86445d0c7874c7e1f801b3c1cc9b519d25ab0c0d20e4a64',
    transactionIndex: 0,
    blockHash: '0x690abb6f30f6dfe8a5d16793f76ab7c8fb681438530b7b7d295fa26d81bfb5d6',
    logIndex: 0,
    removed: false,
    event: 'Launch',
    args: 
     { user: '0xf0f137c532e4c860049f48529c6a0c2320211821',
       provider: '0x322d57cf2505609e1368965dd9f4ec0e54c2f3bd',
       creator: '0xc0977169256dc4b3338e237263daf7ecbfef99ae',
       functionName: 'submit',
       param1: 'echo',
       param2: 'HelloWorld!!!',
       workUid: '' } } ]
END_LOG
  [32m  ✓[0m[90m watch CallbackEvent[0m[31m (375ms)[0m


[92m [0m[32m 1 passing[0m[90m (534ms)[0m
</msg>
<status status="PASS" endtime="20170913 19:01:59.004" starttime="20170913 19:01:59.004"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${truffletest_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170913 19:01:59.005" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170913 19:01:59.005" starttime="20170913 19:01:59.005"></status>
</kw>
<status status="PASS" endtime="20170913 19:01:59.005" starttime="20170913 19:01:34.331"></status>
</kw>
<msg timestamp="20170913 19:01:59.012" level="INFO">${watch_launch_event} = Using network 'development'.

IexecOracle deployed at address :0xe759f4d5b3ad78696796e11bdbf81ab5009e8ca0
HelloWorldTest deployed at address :0xc6b2831868cf9dba7cf077420d04717b33c31660

[0m[0m
[0m ...</msg>
<status status="PASS" endtime="20170913 19:01:59.012" starttime="20170913 19:01:34.331"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${watch_launch_event}</arg>
<arg>functionName: 'submit'</arg>
</arguments>
<status status="PASS" endtime="20170913 19:01:59.013" starttime="20170913 19:01:59.013"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${watch_launch_event}</arg>
<arg>param1: 'echo'</arg>
</arguments>
<status status="PASS" endtime="20170913 19:01:59.013" starttime="20170913 19:01:59.013"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${watch_launch_event}</arg>
<arg>user: '${USER}'</arg>
</arguments>
<status status="PASS" endtime="20170913 19:01:59.014" starttime="20170913 19:01:59.014"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${watch_launch_event}</arg>
<arg>creator: '${CREATOR}'</arg>
</arguments>
<status status="PASS" endtime="20170913 19:01:59.014" starttime="20170913 19:01:59.014"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${watch_launch_event}</arg>
<arg>provider: '${provider}'</arg>
</arguments>
<status status="PASS" endtime="20170913 19:01:59.015" starttime="20170913 19:01:59.015"></status>
</kw>
<status status="PASS" endtime="20170913 19:01:59.015" starttime="20170913 19:01:34.330"></status>
</kw>
<kw name="Check Submit CallbackEvent Event In IexceOracleSmartContract" library="IexceOracleSmartContract">
<arguments>
<arg>${HELLO_WORLD_SM_ADDRESS}</arg>
</arguments>
<assign>
<var>${work_uid}</var>
</assign>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3 min</arg>
<arg>1 min</arg>
<arg>Watch CallbackEvent</arg>
</arguments>
<assign>
<var>${watch_callback_event}</var>
</assign>
<kw name="Watch CallbackEvent" library="IexceOracleSmartContract">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd iexec-oracle &amp;&amp; ./node_modules/.bin/truffle test test/rf/watchCallbackEventInIexecOracle.js</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${truffletest_result}</var>
</assign>
<msg timestamp="20170913 19:01:59.017" level="INFO">Starting process:
cd iexec-oracle &amp;&amp; ./node_modules/.bin/truffle test test/rf/watchCallbackEventInIexecOracle.js</msg>
<msg timestamp="20170913 19:01:59.021" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170913 19:02:41.495" level="INFO">Process completed.</msg>
<msg timestamp="20170913 19:02:41.495" level="INFO">${truffletest_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170913 19:02:41.495" starttime="20170913 19:01:59.017"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stderr}</arg>
</arguments>
<msg timestamp="20170913 19:02:41.496" level="INFO"></msg>
<status status="PASS" endtime="20170913 19:02:41.496" starttime="20170913 19:02:41.496"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
</arguments>
<msg timestamp="20170913 19:02:41.497" level="INFO">Using network 'development'.

IexecOracle deployed at address :0xd110ca92135d86a7b7ea087260166ca4032eddc5
HelloWorldTest deployed at address :0xf2ac36940f9e7880e6292979e2bae07f83dc21c4

[0m[0m
[0m  Contract: IexecOracle[0m
BEGIN_LOG
[ { address: '0x4a000924a4661e812c33f24192fdb8df1ca82c3f',
    blockNumber: 129,
    transactionHash: '0x9a51f4178c160b8435e0ff89d6db2403fa96c00e7a99bf8a055487e4b837a641',
    transactionIndex: 0,
    blockHash: '0xe96dab5ba048a29b28d8f08b173383b62eacc80b1f01cac27d735d1fe318b0e5',
    logIndex: 0,
    removed: false,
    event: 'CallbackEvent',
    args: 
     { callbackType: 'SubmitCallback',
       user: '0xf0f137c532e4c860049f48529c6a0c2320211821',
       provider: '0x322d57cf2505609e1368965dd9f4ec0e54c2f3bd',
       creator: '0xc0977169256dc4b3338e237263daf7ecbfef99ae',
       appName: 'echo',
       workUid: '5d54e2dd-82c9-4cce-a8b4-2972a724cf0b',
       status: [Object],
       stdout: 'HelloWorld!!!\n',
       stderr: '' } } ]
END_LOG
  [32m  ✓[0m[90m watch CallbackEvent[0m[31m (20976ms)[0m


[92m [0m[32m 1 passing[0m[90m (21s)[0m
</msg>
<status status="PASS" endtime="20170913 19:02:41.497" starttime="20170913 19:02:41.496"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${truffletest_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170913 19:02:41.497" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170913 19:02:41.498" starttime="20170913 19:02:41.497"></status>
</kw>
<status status="PASS" endtime="20170913 19:02:41.498" starttime="20170913 19:01:59.016"></status>
</kw>
<msg timestamp="20170913 19:02:41.498" level="INFO">${watch_callback_event} = Using network 'development'.

IexecOracle deployed at address :0xd110ca92135d86a7b7ea087260166ca4032eddc5
HelloWorldTest deployed at address :0xf2ac36940f9e7880e6292979e2bae07f83dc21c4

[0m[0m
[0m ...</msg>
<status status="PASS" endtime="20170913 19:02:41.498" starttime="20170913 19:01:59.016"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${watch_callback_event}</arg>
<arg>event: 'CallbackEvent'</arg>
</arguments>
<status status="PASS" endtime="20170913 19:02:41.499" starttime="20170913 19:02:41.498"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${watch_callback_event}</arg>
<arg>callbackType: 'SubmitCallback'</arg>
</arguments>
<status status="PASS" endtime="20170913 19:02:41.499" starttime="20170913 19:02:41.499"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${watch_callback_event}</arg>
<arg>appName: 'echo'</arg>
</arguments>
<status status="PASS" endtime="20170913 19:02:41.499" starttime="20170913 19:02:41.499"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${watch_callback_event}</arg>
<arg>user: '${USER}'</arg>
</arguments>
<status status="PASS" endtime="20170913 19:02:41.500" starttime="20170913 19:02:41.500"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${watch_callback_event}</arg>
<arg>creator: '${CREATOR}'</arg>
</arguments>
<status status="PASS" endtime="20170913 19:02:41.500" starttime="20170913 19:02:41.500"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${watch_callback_event}</arg>
<arg>provider: '${provider}'</arg>
</arguments>
<status status="PASS" endtime="20170913 19:02:41.501" starttime="20170913 19:02:41.500"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${watch_callback_event}</arg>
<arg>workUid: '(?P&lt;work_uid&gt;.*)',</arg>
<arg>work_uid</arg>
</arguments>
<assign>
<var>@{work_uid}</var>
</assign>
<msg timestamp="20170913 19:02:41.502" level="INFO">@{work_uid} = [ 5d54e2dd-82c9-4cce-a8b4-2972a724cf0b ]</msg>
<status status="PASS" endtime="20170913 19:02:41.502" starttime="20170913 19:02:41.501"></status>
</kw>
<msg timestamp="20170913 19:02:41.502" level="INFO">${work_uid} = 5d54e2dd-82c9-4cce-a8b4-2972a724cf0b</msg>
<status status="PASS" endtime="20170913 19:02:41.502" starttime="20170913 19:01:59.015"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${work_uid}</arg>
</arguments>
<msg timestamp="20170913 19:02:41.507" level="INFO">5d54e2dd-82c9-4cce-a8b4-2972a724cf0b</msg>
<status status="PASS" endtime="20170913 19:02:41.507" starttime="20170913 19:02:41.506"></status>
</kw>
<kw name="Check Submit CallbackEvent Event In HelloWorldSmartContract" library="HelloWorldSmartContract">
<arguments>
<arg>${work_uid}</arg>
<arg>${HELLO_WORLD_SM_ADDRESS}</arg>
</arguments>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3 min</arg>
<arg>1 min</arg>
<arg>Watch IExecCallbackEvent</arg>
</arguments>
<assign>
<var>${watch_callback_event}</var>
</assign>
<kw name="Watch IExecCallbackEvent" library="HelloWorldSmartContract">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd iexec-oracle &amp;&amp; ./node_modules/.bin/truffle test test/rf/watchIExecCallbackEventHelloWorldTest.js</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${truffletest_result}</var>
</assign>
<msg timestamp="20170913 19:02:41.508" level="INFO">Starting process:
cd iexec-oracle &amp;&amp; ./node_modules/.bin/truffle test test/rf/watchIExecCallbackEventHelloWorldTest.js</msg>
<msg timestamp="20170913 19:02:41.512" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170913 19:03:08.883" level="INFO">Process completed.</msg>
<msg timestamp="20170913 19:03:08.883" level="INFO">${truffletest_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170913 19:03:08.883" starttime="20170913 19:02:41.508"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stderr}</arg>
</arguments>
<msg timestamp="20170913 19:03:08.884" level="INFO"></msg>
<status status="PASS" endtime="20170913 19:03:08.884" starttime="20170913 19:03:08.883"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
</arguments>
<msg timestamp="20170913 19:03:08.885" level="INFO">Using network 'development'.

IexecOracle deployed at address :0xe07f6f9334409653be978af6988df55d2d0a7fb4
HelloWorldTest deployed at address :0x63b68f6bd39354c9e279ef9618dba91e3df8ce95

[0m[0m
[0m  Contract: IexecOracle[0m
BEGIN_LOG
[ { address: '0x322d57cf2505609e1368965dd9f4ec0e54c2f3bd',
    blockNumber: 129,
    transactionHash: '0x9a51f4178c160b8435e0ff89d6db2403fa96c00e7a99bf8a055487e4b837a641',
    transactionIndex: 0,
    blockHash: '0xe96dab5ba048a29b28d8f08b173383b62eacc80b1f01cac27d735d1fe318b0e5',
    logIndex: 1,
    removed: false,
    event: 'IexecCallbackEvent',
    args: 
     { callbackType: 'SubmitCallback',
       user: '0xf0f137c532e4c860049f48529c6a0c2320211821',
       provider: '0x322d57cf2505609e1368965dd9f4ec0e54c2f3bd',
       creator: '0xc0977169256dc4b3338e237263daf7ecbfef99ae',
       appName: 'echo',
       workUid: '5d54e2dd-82c9-4cce-a8b4-2972a724cf0b',
       status: [Object],
       stdout: 'HelloWorld!!!\n',
       stderr: '' } } ]
END_LOG
  [32m  ✓[0m[90m watch CallbackEvent[0m[31m (536ms)[0m


[92m [0m[32m 1 passing[0m[90m (748ms)[0m
</msg>
<status status="PASS" endtime="20170913 19:03:08.885" starttime="20170913 19:03:08.884"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${truffletest_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170913 19:03:08.885" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170913 19:03:08.886" starttime="20170913 19:03:08.885"></status>
</kw>
<status status="PASS" endtime="20170913 19:03:08.886" starttime="20170913 19:02:41.508"></status>
</kw>
<msg timestamp="20170913 19:03:08.886" level="INFO">${watch_callback_event} = Using network 'development'.

IexecOracle deployed at address :0xe07f6f9334409653be978af6988df55d2d0a7fb4
HelloWorldTest deployed at address :0x63b68f6bd39354c9e279ef9618dba91e3df8ce95

[0m[0m
[0m ...</msg>
<status status="PASS" endtime="20170913 19:03:08.886" starttime="20170913 19:02:41.507"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${watch_callback_event}</arg>
<arg>event: 'IexecCallbackEvent'</arg>
</arguments>
<status status="PASS" endtime="20170913 19:03:08.887" starttime="20170913 19:03:08.886"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${watch_callback_event}</arg>
<arg>callbackType: 'SubmitCallback'</arg>
</arguments>
<status status="PASS" endtime="20170913 19:03:08.887" starttime="20170913 19:03:08.887"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${watch_callback_event}</arg>
<arg>appName: 'echo'</arg>
</arguments>
<status status="PASS" endtime="20170913 19:03:08.888" starttime="20170913 19:03:08.887"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${watch_callback_event}</arg>
<arg>user: '${USER}'</arg>
</arguments>
<status status="PASS" endtime="20170913 19:03:08.888" starttime="20170913 19:03:08.888"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${watch_callback_event}</arg>
<arg>creator: '${CREATOR}'</arg>
</arguments>
<status status="PASS" endtime="20170913 19:03:08.889" starttime="20170913 19:03:08.888"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${watch_callback_event}</arg>
<arg>provider: '${provider}'</arg>
</arguments>
<status status="PASS" endtime="20170913 19:03:08.889" starttime="20170913 19:03:08.889"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${watch_callback_event}</arg>
<arg>workUid: '${work_uid}'</arg>
</arguments>
<status status="PASS" endtime="20170913 19:03:08.889" starttime="20170913 19:03:08.889"></status>
</kw>
<status status="PASS" endtime="20170913 19:03:08.890" starttime="20170913 19:02:41.507"></status>
</kw>
<kw name="Check Work Is Recorded in IexceOracleSmartContract After Submit" library="IexceOracleSmartContract">
<arguments>
<arg>${work_uid}</arg>
<arg>${HELLO_WORLD_SM_ADDRESS}</arg>
</arguments>
<kw name="Get Work" library="IexceOracleSmartContract">
<arguments>
<arg>${USER}</arg>
<arg>${provider}</arg>
<arg>${work_uid}</arg>
</arguments>
<assign>
<var>@{work_result}</var>
</assign>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>sed -i "s/.*getWork.call(.*/return aIexecOracleInstance.getWork.call('${user}','${provider}',\\"${uid}\\");/g" iexec-oracle/test/rf/getWorkInIexecOracle.js</arg>
</arguments>
<msg timestamp="20170913 19:03:08.893" level="INFO">Running command 'sed -i "s/.*getWork.call(.*/return aIexecOracleInstance.getWork.call('0xf0f137c532e4c860049f48529c6a0c2320211821','0x322d57cf2505609e1368965dd9f4ec0e54c2f3bd',\"5d54e2dd-82c9-4cce-a8b4-2972a724cf0b\");/g" iexec-oracle/test/rf/getWorkInIexecOracle.js 2&gt;&amp;1'.</msg>
<status status="PASS" endtime="20170913 19:03:08.908" starttime="20170913 19:03:08.891"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd iexec-oracle &amp;&amp; ./node_modules/.bin/truffle test test/rf/getWorkInIexecOracle.js</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${truffletest_result}</var>
</assign>
<msg timestamp="20170913 19:03:08.909" level="INFO">Starting process:
cd iexec-oracle &amp;&amp; ./node_modules/.bin/truffle test test/rf/getWorkInIexecOracle.js</msg>
<msg timestamp="20170913 19:03:08.915" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170913 19:03:34.951" level="INFO">Process completed.</msg>
<msg timestamp="20170913 19:03:34.951" level="INFO">${truffletest_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170913 19:03:34.951" starttime="20170913 19:03:08.908"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stderr}</arg>
</arguments>
<msg timestamp="20170913 19:03:34.953" level="INFO"></msg>
<status status="PASS" endtime="20170913 19:03:34.953" starttime="20170913 19:03:34.951"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
</arguments>
<msg timestamp="20170913 19:03:34.953" level="INFO">Using network 'development'.

IexecOracle deployed at address :0x3257a3edbf15fb18db45ba89d66ea550ab37adb2
HelloWorldTest deployed at address :0xec887025b70396b82888f18ea03d5325e8131abe

[0m[0m
[0m  Contract: IexecOracle[0m
BEGIN_LOG
name:echo
timestamp:1505329358
status:4
stdout:HelloWorld!!!

stderr:
END_LOG
  [32m  ✓[0m[90m get a work[0m[31m (78ms)[0m


[92m [0m[32m 1 passing[0m[90m (279ms)[0m
</msg>
<status status="PASS" endtime="20170913 19:03:34.953" starttime="20170913 19:03:34.953"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${truffletest_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170913 19:03:34.954" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170913 19:03:34.954" starttime="20170913 19:03:34.954"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
<arg>name:(?P&lt;name&gt;.*)</arg>
<arg>name</arg>
</arguments>
<assign>
<var>@{name}</var>
</assign>
<msg timestamp="20170913 19:03:34.959" level="INFO">@{name} = [ echo ]</msg>
<status status="PASS" endtime="20170913 19:03:34.959" starttime="20170913 19:03:34.954"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
<arg>timestamp:(?P&lt;timestamp&gt;.*)</arg>
<arg>timestamp</arg>
</arguments>
<assign>
<var>@{timestamp}</var>
</assign>
<msg timestamp="20170913 19:03:34.960" level="INFO">@{timestamp} = [ 1505329358 ]</msg>
<status status="PASS" endtime="20170913 19:03:34.960" starttime="20170913 19:03:34.959"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
<arg>status:(?P&lt;status&gt;.*)</arg>
<arg>status</arg>
</arguments>
<assign>
<var>@{status}</var>
</assign>
<msg timestamp="20170913 19:03:34.960" level="INFO">@{status} = [ 4 ]</msg>
<status status="PASS" endtime="20170913 19:03:34.960" starttime="20170913 19:03:34.960"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
<arg>stdout:(?P&lt;stdout&gt;.*)</arg>
<arg>stdout</arg>
</arguments>
<assign>
<var>@{stdout}</var>
</assign>
<msg timestamp="20170913 19:03:34.961" level="INFO">@{stdout} = [ HelloWorld!!! ]</msg>
<status status="PASS" endtime="20170913 19:03:34.961" starttime="20170913 19:03:34.960"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
<arg>stderr:(?P&lt;stderr&gt;.*)</arg>
<arg>stderr</arg>
</arguments>
<assign>
<var>@{stderr}</var>
</assign>
<msg timestamp="20170913 19:03:34.962" level="INFO">@{stderr} = [  ]</msg>
<status status="PASS" endtime="20170913 19:03:34.962" starttime="20170913 19:03:34.961"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>@{name}[0]</arg>
<arg>@{timestamp}[0]</arg>
<arg>@{status}[0]</arg>
<arg>@{stdout}[0]</arg>
<arg>@{stderr}[0]</arg>
</arguments>
<assign>
<var>@{work_result}</var>
</assign>
<msg timestamp="20170913 19:03:34.962" level="INFO">@{work_result} = [ echo | 1505329358 | 4 | HelloWorld!!! |  ]</msg>
<status status="PASS" endtime="20170913 19:03:34.962" starttime="20170913 19:03:34.962"></status>
</kw>
<msg timestamp="20170913 19:03:34.964" level="INFO">@{work_result} = [ echo | 1505329358 | 4 | HelloWorld!!! |  ]</msg>
<status status="PASS" endtime="20170913 19:03:34.964" starttime="20170913 19:03:08.891"></status>
</kw>
<kw name="Get Work Name" library="IexceOracleSmartContract">
<arguments>
<arg>${USER}</arg>
<arg>${provider}</arg>
<arg>${work_uid}</arg>
</arguments>
<assign>
<var>${work_name}</var>
</assign>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>sed -i "s/.*getWorkName.call(.*/return aIexecOracleInstance.getWorkName.call('${user}','${provider}',\\"${uid}\\");/g" iexec-oracle/test/rf/getWorkNameInIexecOracle.js</arg>
</arguments>
<msg timestamp="20170913 19:03:34.966" level="INFO">Running command 'sed -i "s/.*getWorkName.call(.*/return aIexecOracleInstance.getWorkName.call('0xf0f137c532e4c860049f48529c6a0c2320211821','0x322d57cf2505609e1368965dd9f4ec0e54c2f3bd',\"5d54e2dd-82c9-4cce-a8b4-2972a724cf0b\");/g" iexec-oracle/test/rf/getWorkNameInIexecOracle.js 2&gt;&amp;1'.</msg>
<status status="PASS" endtime="20170913 19:03:34.982" starttime="20170913 19:03:34.964"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd iexec-oracle &amp;&amp; ./node_modules/.bin/truffle test test/rf/getWorkNameInIexecOracle.js</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${truffletest_result}</var>
</assign>
<msg timestamp="20170913 19:03:34.983" level="INFO">Starting process:
cd iexec-oracle &amp;&amp; ./node_modules/.bin/truffle test test/rf/getWorkNameInIexecOracle.js</msg>
<msg timestamp="20170913 19:03:34.986" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170913 19:03:51.629" level="INFO">Process completed.</msg>
<msg timestamp="20170913 19:03:51.629" level="INFO">${truffletest_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170913 19:03:51.629" starttime="20170913 19:03:34.983"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stderr}</arg>
</arguments>
<msg timestamp="20170913 19:03:51.630" level="INFO"></msg>
<status status="PASS" endtime="20170913 19:03:51.630" starttime="20170913 19:03:51.630"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
</arguments>
<msg timestamp="20170913 19:03:51.631" level="INFO">Using network 'development'.

IexecOracle deployed at address :0x902b0868a8e17de0ac21603a9a1a322c8d4013e3
HelloWorldTest deployed at address :0x71fd15227fcf1298d33511ebda44ae0ec6a55724

[0m[0m
[0m  Contract: IexecOracle[0m
BEGIN_LOG
name:echo
END_LOG
  [32m  ✓[0m[90m get a work[0m[33m (63ms)[0m


[92m [0m[32m 1 passing[0m[90m (281ms)[0m
</msg>
<status status="PASS" endtime="20170913 19:03:51.632" starttime="20170913 19:03:51.631"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${truffletest_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170913 19:03:51.632" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170913 19:03:51.633" starttime="20170913 19:03:51.632"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
<arg>name:(?P&lt;name&gt;.*)</arg>
<arg>name</arg>
</arguments>
<assign>
<var>@{name}</var>
</assign>
<msg timestamp="20170913 19:03:51.633" level="INFO">@{name} = [ echo ]</msg>
<status status="PASS" endtime="20170913 19:03:51.634" starttime="20170913 19:03:51.633"></status>
</kw>
<msg timestamp="20170913 19:03:51.634" level="INFO">${work_name} = echo</msg>
<status status="PASS" endtime="20170913 19:03:51.634" starttime="20170913 19:03:34.964"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${work_name}</arg>
<arg>@{work_result}[0]</arg>
</arguments>
<status status="PASS" endtime="20170913 19:03:51.634" starttime="20170913 19:03:51.634"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${work_name}</arg>
<arg>echo</arg>
</arguments>
<status status="PASS" endtime="20170913 19:03:51.635" starttime="20170913 19:03:51.635"></status>
</kw>
<kw name="Get Work Timestamp" library="IexceOracleSmartContract">
<arguments>
<arg>${USER}</arg>
<arg>${provider}</arg>
<arg>${work_uid}</arg>
</arguments>
<assign>
<var>${work_timestamp}</var>
</assign>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>sed -i "s/.*getWorkTimestamp.call(.*/return aIexecOracleInstance.getWorkTimestamp.call('${user}','${provider}',\\"${uid}\\");/g" iexec-oracle/test/rf/getWorkTimestampInIexecOracle.js</arg>
</arguments>
<msg timestamp="20170913 19:03:51.637" level="INFO">Running command 'sed -i "s/.*getWorkTimestamp.call(.*/return aIexecOracleInstance.getWorkTimestamp.call('0xf0f137c532e4c860049f48529c6a0c2320211821','0x322d57cf2505609e1368965dd9f4ec0e54c2f3bd',\"5d54e2dd-82c9-4cce-a8b4-2972a724cf0b\");/g" iexec-oracle/test/rf/getWorkTimestampInIexecOracle.js 2&gt;&amp;1'.</msg>
<status status="PASS" endtime="20170913 19:03:51.655" starttime="20170913 19:03:51.635"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd iexec-oracle &amp;&amp; ./node_modules/.bin/truffle test test/rf/getWorkTimestampInIexecOracle.js</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${truffletest_result}</var>
</assign>
<msg timestamp="20170913 19:03:51.656" level="INFO">Starting process:
cd iexec-oracle &amp;&amp; ./node_modules/.bin/truffle test test/rf/getWorkTimestampInIexecOracle.js</msg>
<msg timestamp="20170913 19:03:51.661" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170913 19:04:19.040" level="INFO">Process completed.</msg>
<msg timestamp="20170913 19:04:19.040" level="INFO">${truffletest_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170913 19:04:19.040" starttime="20170913 19:03:51.655"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stderr}</arg>
</arguments>
<msg timestamp="20170913 19:04:19.041" level="INFO"></msg>
<status status="PASS" endtime="20170913 19:04:19.041" starttime="20170913 19:04:19.041"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
</arguments>
<msg timestamp="20170913 19:04:19.041" level="INFO">Using network 'development'.

IexecOracle deployed at address :0xf78b97ac3550acb8a6ad64ee972f8703427c08db
HelloWorldTest deployed at address :0x489766b640822aca3986b4c2bf8b712554c16d16

[0m[0m
[0m  Contract: IexecOracle[0m
BEGIN_LOG
timestamp:1505329358
END_LOG
  [32m  ✓[0m[90m get a work[0m[31m (80ms)[0m


[92m [0m[32m 1 passing[0m[90m (253ms)[0m
</msg>
<status status="PASS" endtime="20170913 19:04:19.042" starttime="20170913 19:04:19.041"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${truffletest_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170913 19:04:19.042" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170913 19:04:19.042" starttime="20170913 19:04:19.042"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
<arg>timestamp:(?P&lt;timestamp&gt;.*)</arg>
<arg>timestamp</arg>
</arguments>
<assign>
<var>@{timestamp}</var>
</assign>
<msg timestamp="20170913 19:04:19.043" level="INFO">@{timestamp} = [ 1505329358 ]</msg>
<status status="PASS" endtime="20170913 19:04:19.043" starttime="20170913 19:04:19.043"></status>
</kw>
<msg timestamp="20170913 19:04:19.044" level="INFO">${work_timestamp} = 1505329358</msg>
<status status="PASS" endtime="20170913 19:04:19.044" starttime="20170913 19:03:51.635"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${work_timestamp}</arg>
<arg>@{work_result}[1]</arg>
</arguments>
<status status="PASS" endtime="20170913 19:04:19.044" starttime="20170913 19:04:19.044"></status>
</kw>
<kw name="Get Work Status" library="IexceOracleSmartContract">
<arguments>
<arg>${USER}</arg>
<arg>${provider}</arg>
<arg>${work_uid}</arg>
</arguments>
<assign>
<var>${work_status}</var>
</assign>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>sed -i "s/.*getWorkStatus.call(.*/return aIexecOracleInstance.getWorkStatus.call('${user}','${provider}',\\"${uid}\\");/g" iexec-oracle/test/rf/getWorkStatusInIexecOracle.js</arg>
</arguments>
<msg timestamp="20170913 19:04:19.046" level="INFO">Running command 'sed -i "s/.*getWorkStatus.call(.*/return aIexecOracleInstance.getWorkStatus.call('0xf0f137c532e4c860049f48529c6a0c2320211821','0x322d57cf2505609e1368965dd9f4ec0e54c2f3bd',\"5d54e2dd-82c9-4cce-a8b4-2972a724cf0b\");/g" iexec-oracle/test/rf/getWorkStatusInIexecOracle.js 2&gt;&amp;1'.</msg>
<status status="PASS" endtime="20170913 19:04:19.067" starttime="20170913 19:04:19.045"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd iexec-oracle &amp;&amp; ./node_modules/.bin/truffle test test/rf/getWorkStatusInIexecOracle.js</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${truffletest_result}</var>
</assign>
<msg timestamp="20170913 19:04:19.068" level="INFO">Starting process:
cd iexec-oracle &amp;&amp; ./node_modules/.bin/truffle test test/rf/getWorkStatusInIexecOracle.js</msg>
<msg timestamp="20170913 19:04:19.071" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170913 19:04:46.743" level="INFO">Process completed.</msg>
<msg timestamp="20170913 19:04:46.743" level="INFO">${truffletest_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170913 19:04:46.743" starttime="20170913 19:04:19.067"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stderr}</arg>
</arguments>
<msg timestamp="20170913 19:04:46.744" level="INFO"></msg>
<status status="PASS" endtime="20170913 19:04:46.744" starttime="20170913 19:04:46.744"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
</arguments>
<msg timestamp="20170913 19:04:46.745" level="INFO">Using network 'development'.

IexecOracle deployed at address :0x32a8ce908c1e9318728cc70276ca392d7786890e
HelloWorldTest deployed at address :0x3e41f82bf293701dc8e68bf08e6a8ab7aa90f0df

[0m[0m
[0m  Contract: IexecOracle[0m
BEGIN_LOG
status:4
END_LOG
  [32m  ✓[0m[90m get a work[0m[31m (83ms)[0m


[92m [0m[32m 1 passing[0m[90m (318ms)[0m
</msg>
<status status="PASS" endtime="20170913 19:04:46.745" starttime="20170913 19:04:46.745"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${truffletest_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170913 19:04:46.746" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170913 19:04:46.746" starttime="20170913 19:04:46.745"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
<arg>status:(?P&lt;status&gt;.*)</arg>
<arg>status</arg>
</arguments>
<assign>
<var>@{status}</var>
</assign>
<msg timestamp="20170913 19:04:46.746" level="INFO">@{status} = [ 4 ]</msg>
<status status="PASS" endtime="20170913 19:04:46.746" starttime="20170913 19:04:46.746"></status>
</kw>
<msg timestamp="20170913 19:04:46.747" level="INFO">${work_status} = 4</msg>
<status status="PASS" endtime="20170913 19:04:46.747" starttime="20170913 19:04:19.044"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${work_status}</arg>
<arg>@{work_result}[2]</arg>
</arguments>
<status status="PASS" endtime="20170913 19:04:46.747" starttime="20170913 19:04:46.747"></status>
</kw>
<kw name="Get Work Stdout" library="IexceOracleSmartContract">
<arguments>
<arg>${USER}</arg>
<arg>${provider}</arg>
<arg>${work_uid}</arg>
</arguments>
<assign>
<var>${work_stdout}</var>
</assign>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>sed -i "s/.*getWorkStdout.call(.*/return aIexecOracleInstance.getWorkStdout.call('${user}','${provider}',\\"${uid}\\");/g" iexec-oracle/test/rf/getWorkStdoutInIexecOracle.js</arg>
</arguments>
<msg timestamp="20170913 19:04:46.750" level="INFO">Running command 'sed -i "s/.*getWorkStdout.call(.*/return aIexecOracleInstance.getWorkStdout.call('0xf0f137c532e4c860049f48529c6a0c2320211821','0x322d57cf2505609e1368965dd9f4ec0e54c2f3bd',\"5d54e2dd-82c9-4cce-a8b4-2972a724cf0b\");/g" iexec-oracle/test/rf/getWorkStdoutInIexecOracle.js 2&gt;&amp;1'.</msg>
<status status="PASS" endtime="20170913 19:04:46.763" starttime="20170913 19:04:46.748"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd iexec-oracle &amp;&amp; ./node_modules/.bin/truffle test test/rf/getWorkStdoutInIexecOracle.js</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${truffletest_result}</var>
</assign>
<msg timestamp="20170913 19:04:46.764" level="INFO">Starting process:
cd iexec-oracle &amp;&amp; ./node_modules/.bin/truffle test test/rf/getWorkStdoutInIexecOracle.js</msg>
<msg timestamp="20170913 19:04:46.770" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170913 19:05:06.160" level="INFO">Process completed.</msg>
<msg timestamp="20170913 19:05:06.160" level="INFO">${truffletest_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170913 19:05:06.160" starttime="20170913 19:04:46.763"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stderr}</arg>
</arguments>
<msg timestamp="20170913 19:05:06.161" level="INFO"></msg>
<status status="PASS" endtime="20170913 19:05:06.161" starttime="20170913 19:05:06.161"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
</arguments>
<msg timestamp="20170913 19:05:06.161" level="INFO">Using network 'development'.

IexecOracle deployed at address :0xa1ef8da0e11926314db26367924f8e49138717b9
HelloWorldTest deployed at address :0x4cf934ff284d92af37035e7554844ae64ab0e4b9

[0m[0m
[0m  Contract: IexecOracle[0m
BEGIN_LOG
stdout:HelloWorld!!!

END_LOG
  [32m  ✓[0m[90m get a work[0m


[92m [0m[32m 1 passing[0m[90m (45ms)[0m
</msg>
<status status="PASS" endtime="20170913 19:05:06.161" starttime="20170913 19:05:06.161"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${truffletest_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170913 19:05:06.162" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170913 19:05:06.162" starttime="20170913 19:05:06.162"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
<arg>stdout:(?P&lt;stdout&gt;.*)</arg>
<arg>stdout</arg>
</arguments>
<assign>
<var>@{stdout}</var>
</assign>
<msg timestamp="20170913 19:05:06.162" level="INFO">@{stdout} = [ HelloWorld!!! ]</msg>
<status status="PASS" endtime="20170913 19:05:06.162" starttime="20170913 19:05:06.162"></status>
</kw>
<msg timestamp="20170913 19:05:06.163" level="INFO">${work_stdout} = HelloWorld!!!</msg>
<status status="PASS" endtime="20170913 19:05:06.163" starttime="20170913 19:04:46.748"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${work_stdout}</arg>
<arg>@{work_result}[3]</arg>
</arguments>
<status status="PASS" endtime="20170913 19:05:06.163" starttime="20170913 19:05:06.163"></status>
</kw>
<kw name="Get Work Stderr" library="IexceOracleSmartContract">
<arguments>
<arg>${USER}</arg>
<arg>${provider}</arg>
<arg>${work_uid}</arg>
</arguments>
<assign>
<var>${work_stderr}</var>
</assign>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>sed -i "s/.*getWorkStderr.call(.*/return aIexecOracleInstance.getWorkStderr.call('${user}','${provider}',\\"${uid}\\");/g" iexec-oracle/test/rf/getWorkStderrInIexecOracle.js</arg>
</arguments>
<msg timestamp="20170913 19:05:06.165" level="INFO">Running command 'sed -i "s/.*getWorkStderr.call(.*/return aIexecOracleInstance.getWorkStderr.call('0xf0f137c532e4c860049f48529c6a0c2320211821','0x322d57cf2505609e1368965dd9f4ec0e54c2f3bd',\"5d54e2dd-82c9-4cce-a8b4-2972a724cf0b\");/g" iexec-oracle/test/rf/getWorkStderrInIexecOracle.js 2&gt;&amp;1'.</msg>
<status status="PASS" endtime="20170913 19:05:06.177" starttime="20170913 19:05:06.164"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd iexec-oracle &amp;&amp; ./node_modules/.bin/truffle test test/rf/getWorkStderrInIexecOracle.js</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${truffletest_result}</var>
</assign>
<msg timestamp="20170913 19:05:06.178" level="INFO">Starting process:
cd iexec-oracle &amp;&amp; ./node_modules/.bin/truffle test test/rf/getWorkStderrInIexecOracle.js</msg>
<msg timestamp="20170913 19:05:06.182" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170913 19:05:19.866" level="INFO">Process completed.</msg>
<msg timestamp="20170913 19:05:19.866" level="INFO">${truffletest_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170913 19:05:19.866" starttime="20170913 19:05:06.178"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stderr}</arg>
</arguments>
<msg timestamp="20170913 19:05:19.867" level="INFO"></msg>
<status status="PASS" endtime="20170913 19:05:19.867" starttime="20170913 19:05:19.866"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
</arguments>
<msg timestamp="20170913 19:05:19.868" level="INFO">Using network 'development'.

IexecOracle deployed at address :0x72e957bf63c587c5d2bd226c41a2b194436707b5
HelloWorldTest deployed at address :0x385a6ed93be23e7a80ba6cc8c7aafdf391c73f89

[0m[0m
[0m  Contract: IexecOracle[0m
BEGIN_LOG
stderr:
END_LOG
  [32m  ✓[0m[90m get a work[0m[31m (95ms)[0m


[92m [0m[32m 1 passing[0m[90m (340ms)[0m
</msg>
<status status="PASS" endtime="20170913 19:05:19.868" starttime="20170913 19:05:19.867"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${truffletest_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170913 19:05:19.868" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170913 19:05:19.868" starttime="20170913 19:05:19.868"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
<arg>stderr:(?P&lt;stderr&gt;.*)</arg>
<arg>stderr</arg>
</arguments>
<assign>
<var>@{stderr}</var>
</assign>
<msg timestamp="20170913 19:05:19.869" level="INFO">@{stderr} = [  ]</msg>
<status status="PASS" endtime="20170913 19:05:19.869" starttime="20170913 19:05:19.869"></status>
</kw>
<msg timestamp="20170913 19:05:19.869" level="INFO">${work_stderr} = </msg>
<status status="PASS" endtime="20170913 19:05:19.869" starttime="20170913 19:05:06.163"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${work_stderr}</arg>
<arg>@{work_result}[4]</arg>
</arguments>
<status status="PASS" endtime="20170913 19:05:19.870" starttime="20170913 19:05:19.870"></status>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<doc>Verifies that the given item is empty.</doc>
<arguments>
<arg>${work_stderr}</arg>
</arguments>
<msg timestamp="20170913 19:05:19.871" level="INFO">Length is 0</msg>
<status status="PASS" endtime="20170913 19:05:19.871" starttime="20170913 19:05:19.870"></status>
</kw>
<status status="PASS" endtime="20170913 19:05:19.871" starttime="20170913 19:03:08.890"></status>
</kw>
<kw name="Get Work Status" library="IexceOracleSmartContract">
<arguments>
<arg>${USER}</arg>
<arg>${HELLO_WORLD_SM_ADDRESS}</arg>
<arg>${work_uid}</arg>
</arguments>
<assign>
<var>${work_status}</var>
</assign>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>sed -i "s/.*getWorkStatus.call(.*/return aIexecOracleInstance.getWorkStatus.call('${user}','${provider}',\\"${uid}\\");/g" iexec-oracle/test/rf/getWorkStatusInIexecOracle.js</arg>
</arguments>
<msg timestamp="20170913 19:05:19.873" level="INFO">Running command 'sed -i "s/.*getWorkStatus.call(.*/return aIexecOracleInstance.getWorkStatus.call('0xf0f137c532e4c860049f48529c6a0c2320211821','0x322d57cf2505609e1368965dd9f4ec0e54c2f3bd',\"5d54e2dd-82c9-4cce-a8b4-2972a724cf0b\");/g" iexec-oracle/test/rf/getWorkStatusInIexecOracle.js 2&gt;&amp;1'.</msg>
<status status="PASS" endtime="20170913 19:05:19.887" starttime="20170913 19:05:19.872"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd iexec-oracle &amp;&amp; ./node_modules/.bin/truffle test test/rf/getWorkStatusInIexecOracle.js</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${truffletest_result}</var>
</assign>
<msg timestamp="20170913 19:05:19.888" level="INFO">Starting process:
cd iexec-oracle &amp;&amp; ./node_modules/.bin/truffle test test/rf/getWorkStatusInIexecOracle.js</msg>
<msg timestamp="20170913 19:05:19.892" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170913 19:05:40.502" level="INFO">Process completed.</msg>
<msg timestamp="20170913 19:05:40.502" level="INFO">${truffletest_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170913 19:05:40.502" starttime="20170913 19:05:19.887"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stderr}</arg>
</arguments>
<msg timestamp="20170913 19:05:40.503" level="INFO"></msg>
<status status="PASS" endtime="20170913 19:05:40.503" starttime="20170913 19:05:40.503"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
</arguments>
<msg timestamp="20170913 19:05:40.504" level="INFO">Using network 'development'.

IexecOracle deployed at address :0xcbd77fe2bbb21cef7a0155095278ea174fb17c6e
HelloWorldTest deployed at address :0x4fe687ed8d5f3f2a1aff7b8f280b4bd88d089053

[0m[0m
[0m  Contract: IexecOracle[0m
BEGIN_LOG
status:4
END_LOG
  [32m  ✓[0m[90m get a work[0m[33m (63ms)[0m


[92m [0m[32m 1 passing[0m[90m (270ms)[0m
</msg>
<status status="PASS" endtime="20170913 19:05:40.504" starttime="20170913 19:05:40.504"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${truffletest_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170913 19:05:40.505" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170913 19:05:40.505" starttime="20170913 19:05:40.504"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
<arg>status:(?P&lt;status&gt;.*)</arg>
<arg>status</arg>
</arguments>
<assign>
<var>@{status}</var>
</assign>
<msg timestamp="20170913 19:05:40.506" level="INFO">@{status} = [ 4 ]</msg>
<status status="PASS" endtime="20170913 19:05:40.506" starttime="20170913 19:05:40.505"></status>
</kw>
<msg timestamp="20170913 19:05:40.506" level="INFO">${work_status} = 4</msg>
<status status="PASS" endtime="20170913 19:05:40.506" starttime="20170913 19:05:19.871"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${work_status}</arg>
<arg>4</arg>
</arguments>
<status status="PASS" endtime="20170913 19:05:40.507" starttime="20170913 19:05:40.506"></status>
</kw>
<kw name="Count From Works Where Uid" library="XWServer">
<arguments>
<arg>${work_uid}</arg>
<arg>1</arg>
</arguments>
<kw name="Count From Table Where Uid" library="MySql">
<arguments>
<arg>works</arg>
<arg>${uid}</arg>
<arg>${countExpected}</arg>
</arguments>
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170913 19:05:40.509" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170913 19:05:40.510" starttime="20170913 19:05:40.508"></status>
</kw>
<status status="PASS" endtime="20170913 19:05:40.510" starttime="20170913 19:05:40.508"></status>
</kw>
<kw name="Row Count Is Equal To X" library="DatabaseLibrary">
<doc>Check if the number of rows returned from `selectStatement` is equal to the value submitted. If not, then this</doc>
<arguments>
<arg>SELECT * FROM ${table} WHERE uid = '${uid}'</arg>
<arg>${countExpected}</arg>
</arguments>
<msg timestamp="20170913 19:05:40.511" level="INFO">Executing : Row Count Is Equal To X  |  SELECT * FROM works WHERE uid = '5d54e2dd-82c9-4cce-a8b4-2972a724cf0b'  |  1 </msg>
<msg timestamp="20170913 19:05:40.511" level="INFO">Executing : Row Count  |  SELECT * FROM works WHERE uid = '5d54e2dd-82c9-4cce-a8b4-2972a724cf0b' </msg>
<status status="PASS" endtime="20170913 19:05:40.513" starttime="20170913 19:05:40.510"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170913 19:05:40.513" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170913 19:05:40.514" starttime="20170913 19:05:40.513"></status>
</kw>
<status status="PASS" endtime="20170913 19:05:40.514" starttime="20170913 19:05:40.513"></status>
</kw>
<status status="PASS" endtime="20170913 19:05:40.514" starttime="20170913 19:05:40.507"></status>
</kw>
<status status="PASS" endtime="20170913 19:05:40.514" starttime="20170913 19:05:40.507"></status>
</kw>
<doc>Test HelloWorld Submit Iexec</doc>
<tags>
<tag>HelloWorld Tests</tag>
</tags>
<status status="PASS" endtime="20170913 19:05:40.514" critical="yes" starttime="20170913 19:00:07.408"></status>
</test>
<kw type="teardown" name="Stop Oracle Bridge And Xtremweb">
<kw name="Stop Bridge" library="IexecBridge">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${BRIDGE_PROCESS}</arg>
</arguments>
<msg timestamp="20170913 19:05:40.524" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20170913 19:05:40.535" level="INFO">Process completed.</msg>
<status status="PASS" endtime="20170913 19:05:40.535" starttime="20170913 19:05:40.524"></status>
</kw>
<status status="PASS" endtime="20170913 19:05:40.535" starttime="20170913 19:05:40.523"></status>
</kw>
<kw name="Stop Geth42" library="ETHGeth">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd ~/gethUtils &amp;&amp; ./killGeth.sh</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${geth_result}</var>
</assign>
<msg timestamp="20170913 19:05:40.536" level="INFO">Starting process:
cd ~/gethUtils &amp;&amp; ./killGeth.sh</msg>
<msg timestamp="20170913 19:05:40.541" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170913 19:05:40.556" level="INFO">Process completed.</msg>
<msg timestamp="20170913 19:05:40.556" level="INFO">${geth_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170913 19:05:40.556" starttime="20170913 19:05:40.536"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${geth_result.stderr}</arg>
</arguments>
<msg timestamp="20170913 19:05:40.557" level="INFO"></msg>
<status status="PASS" endtime="20170913 19:05:40.557" starttime="20170913 19:05:40.557"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${geth_result.stdout}</arg>
</arguments>
<msg timestamp="20170913 19:05:40.558" level="INFO"></msg>
<status status="PASS" endtime="20170913 19:05:40.558" starttime="20170913 19:05:40.557"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${geth_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170913 19:05:40.558" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170913 19:05:40.558" starttime="20170913 19:05:40.558"></status>
</kw>
<status status="PASS" endtime="20170913 19:05:40.559" starttime="20170913 19:05:40.536"></status>
</kw>
<kw name="Stop XWtremWeb Server And XWtremWeb Worker" library="XWCommon">
<kw name="Stop XtremWeb Server" library="XWServer">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${SERVER_PROCESS}</arg>
</arguments>
<msg timestamp="20170913 19:05:40.560" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20170913 19:05:40.564" level="INFO">Process completed.</msg>
<status status="PASS" endtime="20170913 19:05:40.564" starttime="20170913 19:05:40.559"></status>
</kw>
<status status="PASS" endtime="20170913 19:05:40.564" starttime="20170913 19:05:40.559"></status>
</kw>
<kw name="Log XtremWeb Server" library="XWCommon">
<kw name="Log XtremWeb Process Log File" library="XWServer">
<kw name="Log File" library="OperatingSystem">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<msg timestamp="20170913 19:05:40.566" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170913 19:05:40.571" level="INFO">Wed Sep 13 18:47:44 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : checking launch url
Wed Sep 13 18:47:44 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] WARNING : no launcher URL defined
Wed Sep 13 18:47:44 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : launching SmartSockets hub
[13/Sep/2017:18:47:46 +0000] [main_1] ERROR : setRole : role redefined ?! (was SERVER)
[13/Sep/2017:18:47:46 +0000] [xtremweb.database.DBConnPoolThread_main_1] INFO : Connection to database jdbc:mysql://localhost/xtremweb is ok, 70 created
[13/Sep/2017:18:47:46 +0000] [xtremweb.dispatcher.DBInterface_main_1] WARN : Can't retrieve any app
[13/Sep/2017:18:47:47 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't create ProxyValidator
[13/Sep/2017:18:47:47 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.io.FileNotFoundException: /tmp/castore (No such file or directory) (/tmp/castore (No such file or directory))
[13/Sep/2017:18:47:47 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't add CA certificates to keystore
[13/Sep/2017:18:47:47 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.lang.NullPointerException (null)
[13/Sep/2017:18:47:47 +0000] [xtremweb.dispatcher.HashTaskSet_TaskSet_14] INFO : TaskSet started (300000)
[13/Sep/2017:18:47:48 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : still waiting task set...
[13/Sep/2017:18:47:48 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : UDP server not started
[13/Sep/2017:18:47:48 +0000] [xtremweb.communications.TCPServer_TCPServerNIO_15] INFO : started, listening on port : 4321
log4j:WARN No appenders could be found for logger (org.eclipse.jetty.util.log).
log4j:WARN Please initialize the log4j system properly.
log4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.
[13/Sep/2017:18:47:48 +0000] [xtremweb.communications.HTTPServer_main_1] INFO : started, listening on port : 9443
[13/Sep/2017:18:47:48 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : FACEBOOK : java.net.MalformedURLException: no protocol: 
[13/Sep/2017:18:47:48 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : GOOGLE : java.net.MalformedURLException: no protocol: 
[13/Sep/2017:18:47:48 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : TWITTER : java.net.MalformedURLException: no protocol: 
[13/Sep/2017:18:47:48 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : YAHOO : java.net.MalformedURLException: no protocol: 
[13/Sep/2017:18:47:48 +0000] [main_1] ERROR : Can't add new entry to keystore
[13/Sep/2017:18:47:48 +0000] [main_1] WARN : javax.net.ssl.SSLHandshakeException: sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target (sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target)
[13/Sep/2017:18:47:48 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : XWHEP Dispatcher(10.6.0-head) started [Wed Sep 13 18:47:48 UTC 2017]
[13/Sep/2017:18:47:48 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : DB vendor  = mysql
[13/Sep/2017:18:47:48 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : mileStone  = 
[13/Sep/2017:18:47:48 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Time out   = 15000
[13/Sep/2017:18:47:48 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Disk opt'd = true
[13/Sep/2017:18:47:48 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Net  opt'd = true
[13/Sep/2017:18:47:48 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : NIO        = true
XWHEP Dispatcher started  Wed Sep 13 18:47:48 UTC 2017
Name             : vagrant-ubuntu-trusty-64
Version          : 10.6.0-head
Identity         : 
XWRole           : SERVER
Started on       : Wed Sep 13 18:47:46 UTC 2017
Scheduler        : xtremweb.dispatcher.MatchingScheduler
SmartSockets hub : 172.28.128.3/172.17.0.1/10.0.2.15-4329#52.45.72.e5.cc.7c.00.00.d5.75.02.42.7b.de.a1.dc~vagrant
Server HTTP      : true
Alive            : 300
Alive time out   : 900
Polling time out : 15000
Optimize zip     : true
Optimize network : true
NIO              : true
Comm layer       : xtremweb.communications.TCPClient
Socket time out  : 60000
Socket retries   : 50
Max connections  : 200
TCP port         : 4321
UDP port         : 4323
HTPP  port       : 80
HTPPS port       : 9443
Sun RPC interposition port : 4328
Sandbox path : /usr/bin/lxc
Sandbox launch args : 
Host &lt;host&gt;&lt;uid&gt;c5e6817e-133e-4df4-9471-edf218252921&lt;/uid&gt;&lt;accessrights&gt;0x755&lt;/accessrights&gt;&lt;name&gt;vagrant-ubuntu-trusty-64&lt;/name&gt;&lt;cpuload&gt;50&lt;/cpuload&gt;&lt;natedipaddr&gt;10.0.2.15&lt;/natedipaddr&gt;&lt;ipaddr&gt;10.0.2.15&lt;/ipaddr&gt;&lt;hwaddr&gt;&lt;/hwaddr&gt;&lt;timezone&gt;Etc/UTC&lt;/timezone&gt;&lt;os&gt;LINUX&lt;/os&gt;&lt;osversion&gt;3.13.0-129-generic&lt;/osversion&gt;&lt;javaversion&gt;1.8.0_141&lt;/javaversion&gt;&lt;javadatamodel&gt;64&lt;/javadatamodel&gt;&lt;cputype&gt;AMD64&lt;/cputype&gt;&lt;cpunb&gt;1&lt;/cpunb&gt;&lt;cpumodel&gt;unknown&lt;/cpumodel&gt;&lt;cpuspeed&gt;0&lt;/cpuspeed&gt;&lt;totalmem&gt;0&lt;/totalmem&gt;&lt;totalswap&gt;0&lt;/totalswap&gt;&lt;totaltmp&gt;40284&lt;/totaltmp&gt;&lt;freetmp&gt;37328&lt;/freetmp&gt;&lt;project&gt;&lt;/project&gt;&lt;active&gt;true&lt;/active&gt;&lt;incomingconnections&gt;false&lt;/incomingconnections&gt;&lt;available&gt;false&lt;/available&gt;&lt;pilotjob&gt;false&lt;/pilotjob&gt;&lt;sgid&gt;&lt;/sgid&gt;&lt;timeout&gt;15000&lt;/timeout&gt;&lt;traces&gt;false&lt;/traces&gt;&lt;acceptbin&gt;false&lt;/acceptbin&gt;&lt;version&gt;10.6.0-head&lt;/version&gt;&lt;/host&gt;
[13/Sep/2017:18:47:48 +0000] [xtremweb.communications.HTTPServer_HTTPServer_218] INFO : started, listening on port : 9443
[13/Sep/2017:18:47:49 +0000] [xtremweb.common.StreamIO_TCPHandler_17] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[13/Sep/2017:18:47:52 +0000] [xtremweb.common.StreamIO_TCPHandler_18] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[13/Sep/2017:18:47:52 +0000] [xtremweb.common.StreamIO_TCPHandler_19] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[13/Sep/2017:18:47:52 +0000] [xtremweb.dispatcher.DBInterface_TCPHandler_20] INFO : vagrant-ubuntu-trusty-64 not in DB; inserting 1c3f840d-2dd6-4886-aaf4-0f5e9b769177
[13/Sep/2017:18:47:52 +0000] [xtremweb.common.StreamIO_TCPHandler_20] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[13/Sep/2017:18:48:07 +0000] [xtremweb.dispatcher.TCPHandler_TCPHandler_21] ERROR : Can't write result
[13/Sep/2017:18:48:07 +0000] [xtremweb.dispatcher.TCPHandler_TCPHandler_21] WARN : java.io.IOException: java.net.SocketException: Broken pipe (Write failed) (java.net.SocketException: Broken pipe (Write failed))
[13/Sep/2017:18:48:07 +0000] [xtremweb.common.StreamIO_TCPHandler_21] WARN : javax.net.ssl.SSLException: Connection has been shutdown: javax.net.ssl.SSLException: java.net.SocketException: Broken pipe (Write failed) (javax.net.ssl.SSLException: java.net.SocketException: Broken pipe (Write failed))
[13/Sep/2017:18:48:53 +0000] [xtremweb.dispatcher.TCPHandler_TCPHandler_22] ERROR : Can't write result
[13/Sep/2017:18:48:53 +0000] [xtremweb.dispatcher.TCPHandler_TCPHandler_22] WARN : java.io.IOException: java.net.SocketException: Broken pipe (Write failed) (java.net.SocketException: Broken pipe (Write failed))
[13/Sep/2017:18:48:53 +0000] [xtremweb.common.StreamIO_TCPHandler_22] WARN : javax.net.ssl.SSLException: Connection has been shutdown: javax.net.ssl.SSLException: java.net.SocketException: Broken pipe (Write failed) (javax.net.ssl.SSLException: java.net.SocketException: Broken pipe (Write failed))
[13/Sep/2017:18:49:38 +0000] [xtremweb.dispatcher.TCPHandler_TCPHandler_23] ERROR : Can't write result
[13/Sep/2017:18:49:38 +0000] [xtremweb.dispatcher.TCPHandler_TCPHandler_23] WARN : java.io.IOException: java.net.SocketException: Broken pipe (Write failed) (java.net.SocketException: Broken pipe (Write failed))
[13/Sep/2017:18:49:38 +0000] [xtremweb.common.StreamIO_TCPHandler_23] WARN : javax.net.ssl.SSLException: Connection has been shutdown: javax.net.ssl.SSLException: java.net.SocketException: Broken pipe (Write failed) (javax.net.ssl.SSLException: java.net.SocketException: Broken pipe (Write failed))
[13/Sep/2017:18:50:23 +0000] [xtremweb.dispatcher.TCPHandler_TCPHandler_24] ERROR : Can't write result
[13/Sep/2017:18:50:23 +0000] [xtremweb.dispatcher.TCPHandler_TCPHandler_24] WARN : java.io.IOException: java.net.SocketException: Broken pipe (Write failed) (java.net.SocketException: Broken pipe (Write failed))
[13/Sep/2017:18:50:23 +0000] [xtremweb.common.StreamIO_TCPHandler_24] WARN : javax.net.ssl.SSLException: Connection has been shutdown: javax.net.ssl.SSLException: java.net.SocketException: Broken pipe (Write failed) (javax.net.ssl.SSLException: java.net.SocketException: Broken pipe (Write failed))
[13/Sep/2017:18:51:08 +0000] [xtremweb.common.StreamIO_TCPHandler_25] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[13/Sep/2017:18:51:53 +0000] [xtremweb.dispatcher.TCPHandler_TCPHandler_26] ERROR : Can't write result
[13/Sep/2017:18:51:53 +0000] [xtremweb.dispatcher.TCPHandler_TCPHandler_26] WARN : java.io.IOException: java.net.SocketException: Broken pipe (Write failed) (java.net.SocketException: Broken pipe (Write failed))
[13/Sep/2017:18:51:53 +0000] [xtremweb.common.StreamIO_TCPHandler_26] WARN : javax.net.ssl.SSLException: Connection has been shutdown: javax.net.ssl.SSLException: java.net.SocketException: Broken pipe (Write failed) (javax.net.ssl.SSLException: java.net.SocketException: Broken pipe (Write failed))
[13/Sep/2017:18:52:38 +0000] [xtremweb.common.StreamIO_TCPHandler_27] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[13/Sep/2017:18:52:52 +0000] [xtremweb.common.StreamIO_TCPHandler_28] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[13/Sep/2017:18:52:53 +0000] [xtremweb.common.StreamIO_TCPHandler_29] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[13/Sep/2017:18:53:24 +0000] [xtremweb.common.StreamIO_TCPHandler_30] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[13/Sep/2017:18:54:09 +0000] [xtremweb.common.StreamIO_TCPHandler_31] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[13/Sep/2017:18:54:54 +0000] [xtremweb.dispatcher.TCPHandler_TCPHandler_32] ERROR : Can't write result
[13/Sep/2017:18:54:54 +0000] [xtremweb.dispatcher.TCPHandler_TCPHandler_32] WARN : java.io.IOException: java.net.SocketException: Broken pipe (Write failed) (java.net.SocketException: Broken pipe (Write failed))
[13/Sep/2017:18:54:54 +0000] [xtremweb.common.StreamIO_TCPHandler_32] WARN : javax.net.ssl.SSLException: Connection has been shutdown: javax.net.ssl.SSLException: java.net.SocketException: Broken pipe (Write failed) (javax.net.ssl.SSLException: java.net.SocketException: Broken pipe (Write failed))
[13/Sep/2017:18:55:39 +0000] [xtremweb.dispatcher.TCPHandler_TCPHandler_33] ERROR : Can't write result
[13/Sep/2017:18:55:39 +0000] [xtremweb.dispatcher.TCPHandler_TCPHandler_33] WARN : java.io.IOException: java.net.SocketException: Broken pipe (Write failed) (java.net.SocketException: Broken pipe (Write failed))
[13/Sep/2017:18:55:39 +0000] [xtremweb.common.StreamIO_TCPHandler_33] WARN : javax.net.ssl.SSLException: Connection has been shutdown: javax.net.ssl.SSLException: java.net.SocketException: Broken pipe (Write failed) (javax.net.ssl.SSLException: java.net.SocketException: Broken pipe (Write failed))
[13/Sep/2017:18:56:24 +0000] [xtremweb.common.StreamIO_TCPHandler_34] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[13/Sep/2017:18:57:09 +0000] [xtremweb.dispatcher.TCPHandler_TCPHandler_35] ERROR : Can't write result
[13/Sep/2017:18:57:09 +0000] [xtremweb.dispatcher.TCPHandler_TCPHandler_35] WARN : java.io.IOException: java.net.SocketException: Broken pipe (Write failed) (java.net.SocketException: Broken pipe (Write failed))
[13/Sep/2017:18:57:09 +0000] [xtremweb.common.StreamIO_TCPHandler_35] WARN : javax.net.ssl.SSLException: Connection has been shutdown: javax.net.ssl.SSLException: java.net.SocketException: Broken pipe (Write failed) (javax.net.ssl.SSLException: java.net.SocketException: Broken pipe (Write failed))
[13/Sep/2017:18:57:53 +0000] [xtremweb.common.StreamIO_TCPHandler_36] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[13/Sep/2017:18:57:53 +0000] [xtremweb.common.StreamIO_TCPHandler_37] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[13/Sep/2017:18:57:54 +0000] [xtremweb.dispatcher.TCPHandler_TCPHandler_38] ERROR : Can't write result
[13/Sep/2017:18:57:54 +0000] [xtremweb.dispatcher.TCPHandler_TCPHandler_38] WARN : java.io.IOException: java.net.SocketException: Broken pipe (Write failed) (java.net.SocketException: Broken pipe (Write failed))
[13/Sep/2017:18:57:54 +0000] [xtremweb.common.StreamIO_TCPHandler_38] WARN : javax.net.ssl.SSLException: Connection has been shutdown: javax.net.ssl.SSLException: java.net.SocketException: Broken pipe (Write failed) (javax.net.ssl.SSLException: java.net.SocketException: Broken pipe (Write failed))
[13/Sep/2017:18:58:39 +0000] [xtremweb.dispatcher.TCPHandler_TCPHandler_39] ERROR : Can't write result
[13/Sep/2017:18:58:39 +0000] [xtremweb.dispatcher.TCPHandler_TCPHandler_39] WARN : java.io.IOException: java.net.SocketException: Broken pipe (Write failed) (java.net.SocketException: Broken pipe (Write failed))
[13/Sep/2017:18:58:39 +0000] [xtremweb.common.StreamIO_TCPHandler_39] WARN : javax.net.ssl.SSLException: Connection has been shutdown: javax.net.ssl.SSLException: java.net.SocketException: Broken pipe (Write failed) (javax.net.ssl.SSLException: java.net.SocketException: Broken pipe (Write failed))
[13/Sep/2017:18:59:25 +0000] [xtremweb.dispatcher.TCPHandler_TCPHandler_40] ERROR : Can't write result
[13/Sep/2017:18:59:25 +0000] [xtremweb.dispatcher.TCPHandler_TCPHandler_40] WARN : java.io.IOException: java.net.SocketException: Broken pipe (Write failed) (java.net.SocketException: Broken pipe (Write failed))
[13/Sep/2017:18:59:25 +0000] [xtremweb.common.StreamIO_TCPHandler_40] WARN : javax.net.ssl.SSLException: Connection has been shutdown: javax.net.ssl.SSLException: java.net.SocketException: Broken pipe (Write failed) (javax.net.ssl.SSLException: java.net.SocketException: Broken pipe (Write failed))
[13/Sep/2017:19:00:10 +0000] [xtremweb.common.StreamIO_TCPHandler_41] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[13/Sep/2017:19:00:55 +0000] [xtremweb.common.StreamIO_TCPHandler_42] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[13/Sep/2017:19:01:02 +0000] [xtremweb.common.StreamIO_TCPHandler_43] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[13/Sep/2017:19:01:34 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-227_227] WARN : 227 : getIdRpc a ete synchronise ! null
[13/Sep/2017:19:01:34 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-227_227] WARN : 227 : getIdRpc a ete synchronise ! GETAPPS
[13/Sep/2017:19:01:34 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-227_227] WARN : 227 : getIdRpc a ete synchronise ! GETAPPS
[13/Sep/2017:19:01:34 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-224_224] WARN : 224 : getIdRpc a ete synchronise ! null
[13/Sep/2017:19:01:34 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-224_224] WARN : 224 : getIdRpc a ete synchronise ! GET
[13/Sep/2017:19:01:34 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-224_224] WARN : 224 : getIdRpc a ete synchronise ! GET
[13/Sep/2017:19:01:34 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-231_231] WARN : 231 : getIdRpc a ete synchronise ! null
[13/Sep/2017:19:01:34 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-231_231] WARN : 231 : getIdRpc a ete synchronise ! SENDWORK
[13/Sep/2017:19:01:34 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-231_231] WARN : 231 : getIdRpc a ete synchronise ! SENDWORK
[13/Sep/2017:19:01:34 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-230_230] WARN : 230 : getIdRpc a ete synchronise ! null
[13/Sep/2017:19:01:34 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-230_230] WARN : 230 : getIdRpc a ete synchronise ! SENDWORK
[13/Sep/2017:19:01:34 +0000] [xtremweb.dispatcher.DBInterface_qtp2008966511-230_230] WARN : javax.mail.internet.AddressException: Missing local name in string ``@DBADMINEMAIL@'' (Missing local name)
[13/Sep/2017:19:01:34 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-230_230] WARN : 230 : getIdRpc a ete synchronise ! SENDWORK
[13/Sep/2017:19:01:34 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-224_224] WARN : 224 : getIdRpc a ete synchronise ! null
[13/Sep/2017:19:01:34 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-224_224] WARN : 224 : getIdRpc a ete synchronise ! GET
[13/Sep/2017:19:01:34 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-224_224] WARN : 224 : getIdRpc a ete synchronise ! GET
[13/Sep/2017:19:01:34 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-227_227] WARN : 227 : getIdRpc a ete synchronise ! null
[13/Sep/2017:19:01:34 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-227_227] WARN : 227 : getIdRpc a ete synchronise ! SENDWORK
[13/Sep/2017:19:01:34 +0000] [xtremweb.dispatcher.DBInterface_qtp2008966511-227_227] WARN : javax.mail.internet.AddressException: Missing local name in string ``@DBADMINEMAIL@'' (Missing local name)
[13/Sep/2017:19:01:34 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-227_227] WARN : 227 : getIdRpc a ete synchronise ! SENDWORK
[13/Sep/2017:19:01:34 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-231_231] WARN : 231 : getIdRpc a ete synchronise ! null
[13/Sep/2017:19:01:34 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-231_231] WARN : 231 : getIdRpc a ete synchronise ! GET
[13/Sep/2017:19:01:34 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-231_231] WARN : 231 : getIdRpc a ete synchronise ! GET
[13/Sep/2017:19:01:34 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-230_230] WARN : 230 : getIdRpc a ete synchronise ! null
[13/Sep/2017:19:01:34 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-230_230] WARN : 230 : getIdRpc a ete synchronise ! SENDWORK
[13/Sep/2017:19:01:34 +0000] [xtremweb.dispatcher.DBInterface_qtp2008966511-230_230] WARN : javax.mail.internet.AddressException: Missing local name in string ``@DBADMINEMAIL@'' (Missing local name)
[13/Sep/2017:19:01:35 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-230_230] WARN : 230 : getIdRpc a ete synchronise ! SENDWORK
[13/Sep/2017:19:01:40 +0000] [xtremweb.common.StreamIO_TCPHandler_44] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[13/Sep/2017:19:01:40 +0000] [xtremweb.common.StreamIO_TCPHandler_45] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[13/Sep/2017:19:01:40 +0000] [xtremweb.common.StreamIO_TCPHandler_46] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[13/Sep/2017:19:01:40 +0000] [xtremweb.common.StreamIO_TCPHandler_47] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[13/Sep/2017:19:01:40 +0000] [xtremweb.dispatcher.TCPHandler_TCPHandler_48] ERROR : Can't write result
[13/Sep/2017:19:01:40 +0000] [xtremweb.dispatcher.TCPHandler_TCPHandler_48] WARN : java.io.IOException: java.net.SocketException: Broken pipe (Write failed) (java.net.SocketException: Broken pipe (Write failed))
[13/Sep/2017:19:01:40 +0000] [xtremweb.common.StreamIO_TCPHandler_48] WARN : javax.net.ssl.SSLException: Connection has been shutdown: javax.net.ssl.SSLException: java.net.SocketException: Broken pipe (Write failed) (javax.net.ssl.SSLException: java.net.SocketException: Broken pipe (Write failed))
[13/Sep/2017:19:01:45 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-224_224] WARN : 224 : getIdRpc a ete synchronise ! null
[13/Sep/2017:19:01:45 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-224_224] WARN : 224 : getIdRpc a ete synchronise ! GET
[13/Sep/2017:19:01:45 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-224_224] WARN : 224 : getIdRpc a ete synchronise ! GET
[13/Sep/2017:19:01:55 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-230_230] WARN : 230 : getIdRpc a ete synchronise ! null
[13/Sep/2017:19:01:55 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-230_230] WARN : 230 : getIdRpc a ete synchronise ! GET
[13/Sep/2017:19:01:55 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-230_230] WARN : 230 : getIdRpc a ete synchronise ! GET
[13/Sep/2017:19:01:55 +0000] [xtremweb.dispatcher.DBInterface_TCPHandler_49] WARN : javax.mail.internet.AddressException: Missing local name in string ``@DBADMINEMAIL@'' (Missing local name)
[13/Sep/2017:19:01:55 +0000] [xtremweb.common.StreamIO_TCPHandler_49] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[13/Sep/2017:19:01:55 +0000] [xtremweb.common.StreamIO_TCPHandler_50] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[13/Sep/2017:19:02:05 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-226_226] WARN : 226 : getIdRpc a ete synchronise ! null
[13/Sep/2017:19:02:05 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-226_226] WARN : 226 : getIdRpc a ete synchronise ! GET
[13/Sep/2017:19:02:05 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-226_226] WARN : 226 : getIdRpc a ete synchronise ! GET
[13/Sep/2017:19:02:15 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-229_229] WARN : 229 : getIdRpc a ete synchronise ! null
[13/Sep/2017:19:02:15 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-229_229] WARN : 229 : getIdRpc a ete synchronise ! GET
[13/Sep/2017:19:02:15 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-229_229] WARN : 229 : getIdRpc a ete synchronise ! GET
[13/Sep/2017:19:02:25 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-231_231] WARN : 231 : getIdRpc a ete synchronise ! null
[13/Sep/2017:19:02:25 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-231_231] WARN : 231 : getIdRpc a ete synchronise ! GET
[13/Sep/2017:19:02:25 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-231_231] WARN : 231 : getIdRpc a ete synchronise ! GET
[13/Sep/2017:19:02:26 +0000] [xtremweb.common.StreamIO_TCPHandler_51] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[13/Sep/2017:19:02:26 +0000] [xtremweb.common.StreamIO_TCPHandler_52] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[13/Sep/2017:19:02:26 +0000] [xtremweb.common.StreamIO_TCPHandler_53] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[13/Sep/2017:19:02:26 +0000] [xtremweb.dispatcher.DBInterface_TCPHandler_54] WARN : javax.mail.internet.AddressException: Missing local name in string ``@DBADMINEMAIL@'' (Missing local name)
[13/Sep/2017:19:02:26 +0000] [xtremweb.common.StreamIO_TCPHandler_54] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[13/Sep/2017:19:02:26 +0000] [xtremweb.common.StreamIO_TCPHandler_55] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[13/Sep/2017:19:02:35 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-224_224] WARN : 224 : getIdRpc a ete synchronise ! null
[13/Sep/2017:19:02:35 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-224_224] WARN : 224 : getIdRpc a ete synchronise ! GET
[13/Sep/2017:19:02:35 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-224_224] WARN : 224 : getIdRpc a ete synchronise ! GET
[13/Sep/2017:19:02:35 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-229_229] WARN : 229 : getIdRpc a ete synchronise ! null
[13/Sep/2017:19:02:35 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-229_229] WARN : 229 : getIdRpc a ete synchronise ! GET
[13/Sep/2017:19:02:35 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-229_229] WARN : 229 : getIdRpc a ete synchronise ! GET
[13/Sep/2017:19:02:35 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-230_230] WARN : 230 : getIdRpc a ete synchronise ! null
[13/Sep/2017:19:02:35 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-230_230] WARN : 230 : getIdRpc a ete synchronise ! GET
[13/Sep/2017:19:02:35 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-230_230] WARN : 230 : getIdRpc a ete synchronise ! GET
[13/Sep/2017:19:02:35 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-228_228] WARN : 228 : getIdRpc a ete synchronise ! null
[13/Sep/2017:19:02:35 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-228_228] WARN : 228 : getIdRpc a ete synchronise ! DOWNLOADDATA
[13/Sep/2017:19:02:35 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-228_228] WARN : 228 : getIdRpc a ete synchronise ! DOWNLOADDATA
[13/Sep/2017:19:02:53 +0000] [xtremweb.common.StreamIO_TCPHandler_56] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[13/Sep/2017:19:02:53 +0000] [xtremweb.common.StreamIO_TCPHandler_57] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[13/Sep/2017:19:03:11 +0000] [xtremweb.common.StreamIO_TCPHandler_58] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[13/Sep/2017:19:03:56 +0000] [xtremweb.common.StreamIO_TCPHandler_59] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[13/Sep/2017:19:04:41 +0000] [xtremweb.common.StreamIO_TCPHandler_60] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[13/Sep/2017:19:05:26 +0000] [xtremweb.common.StreamIO_TCPHandler_61] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[13/Sep/2017:19:05:40 +0000] [xtremweb.communications.TCPServer_TCPServerNIO_15] WARN : java.net.SocketException: Socket closed (Socket closed)
</msg>
<status status="PASS" endtime="20170913 19:05:40.572" starttime="20170913 19:05:40.565"></status>
</kw>
<status status="PASS" endtime="20170913 19:05:40.572" starttime="20170913 19:05:40.565"></status>
</kw>
<status status="PASS" endtime="20170913 19:05:40.572" starttime="20170913 19:05:40.565"></status>
</kw>
<kw name="Stop XtremWeb Worker" library="XWWorker">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Stop XtremWeb Worker</arg>
</arguments>
<msg timestamp="20170913 19:05:40.573" level="INFO">Stop XtremWeb Worker</msg>
<status status="PASS" endtime="20170913 19:05:40.573" starttime="20170913 19:05:40.573"></status>
</kw>
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${WORKER_PROCESS}</arg>
</arguments>
<msg timestamp="20170913 19:05:40.573" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20170913 19:05:40.574" level="INFO">Process completed.</msg>
<status status="PASS" endtime="20170913 19:05:40.574" starttime="20170913 19:05:40.573"></status>
</kw>
<status status="PASS" endtime="20170913 19:05:40.574" starttime="20170913 19:05:40.572"></status>
</kw>
<status status="PASS" endtime="20170913 19:05:40.574" starttime="20170913 19:05:40.559"></status>
</kw>
<status status="PASS" endtime="20170913 19:05:40.575" starttime="20170913 19:05:40.522"></status>
</kw>
<doc>End-to-End test HelloWorld usecase Oracle+bridge+xtremweb</doc>
<status status="PASS" endtime="20170913 19:05:40.575" starttime="20170913 18:46:28.330"></status>
</suite>
<suite source="/home/vagrant/iexecdev/iexec-node/tests/rf/Tests/helloWorldSuiteOnTestRpc.robot" id="s1-s2" name="helloWorldSuiteOnTestRpc">
<kw type="setup" name="Start Oracle Bridge And Xtremweb">
<kw name="Prepare And Start XWtremWeb Server And XWtremWeb Worker" library="XWCommon">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${XW_FORCE_GIT_CLONE}' == 'true'</arg>
<arg>Git Clone XWtremWeb</arg>
</arguments>
<status status="PASS" endtime="20170913 19:05:40.641" starttime="20170913 19:05:40.640"></status>
</kw>
<kw name="Compile XWtremWeb" library="XWCommon">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd ${BUILD_PATH} &amp;&amp; make clean &amp;&amp; make</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${compile_result}</var>
</assign>
<msg timestamp="20170913 19:05:40.642" level="INFO">Starting process:
cd ./xtremweb-hep/build &amp;&amp; make clean &amp;&amp; make</msg>
<msg timestamp="20170913 19:05:40.647" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170913 19:06:07.711" level="INFO">Process completed.</msg>
<msg timestamp="20170913 19:06:07.711" level="INFO">${compile_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170913 19:06:07.711" starttime="20170913 19:05:40.641"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${compile_result.stderr}</arg>
</arguments>
<msg timestamp="20170913 19:06:07.712" level="INFO"></msg>
<status status="PASS" endtime="20170913 19:06:07.712" starttime="20170913 19:06:07.712"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${compile_result.stdout}</arg>
</arguments>
<msg timestamp="20170913 19:06:07.713" level="INFO">./build.sh -f build.xml clean 
Buildfile: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/build.xml

tstamp:
[echoproperties] #Ant properties
[echoproperties] #Wed Sep 13 19:05:41 UTC 2017
[echoproperties] v.branch=head
[echoproperties] v.build=201709131905
[echoproperties] v.major=10
[echoproperties] v.micro=0
[echoproperties] v.minor=6

version:

clean:
   [delete] Deleting: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/.build
   [delete] Deleting directory /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes
     [exec] make[1]: Entering directory `/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/natif'
     [exec] rm -f XWInterruptsImpl.h PortMapper.h XWUtilImpl.h XWTracerImpl.h
     [exec] make[1]: Leaving directory `/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/natif'
     [exec] mkdir: cannot create directory ‘../../build/classes/obj/’: No such file or directory

BUILD SUCCESSFUL
Total time: 1 second
./build.sh distrib 
Buildfile: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/build.xml

tstamp:
[echoproperties] #Ant properties
[echoproperties] #Wed Sep 13 19:05:42 UTC 2017
[echoproperties] v.branch=head
[echoproperties] v.build=201709131905
[echoproperties] v.major=10
[echoproperties] v.micro=0
[echoproperties] v.minor=6

version:

configure:
     [echo] 
     [echo]       ant version = Apache Ant(TM) version 1.8.4 compiled on May 22 2012
     [echo] 
     [echo]       os         = Linux
     [echo]       os.arch    = amd64
     [echo]       target     = Linux
     [echo]       xwarch     = amd64
     [echo]       xwsuffix   = linux-amd64
     [echo]       debug      = true
     [echo]       debuglevel = source,lines
     [echo] 
     [echo]         cross=${cross.prefix}
     [echo]         target java home =${cross.java.home}
     [echo]     	target           =Linux
     [echo]     	xwversion=10.6.0

templates:
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common

prepare:
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes/obj
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes/obj/linux-amd64
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes/jni
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes/xwclasses
     [echo] 
     [echo]       classpath=/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/test:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/JOpenId-1.08.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/JSON-java.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/MinML.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/activation.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/antlr.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/attic-all-0.3.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/bcpkix-jdk15on-151.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/bcprov-jdk15on-151.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/bcprov-jdk16-140.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/commons-codec-1.3.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/commons-fileupload-1.2.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/commons-httpclient-3.0.1.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/commons-io-1.3.2.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/commons-logging-1.1.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/ibis-util-2.1.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/jcert.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/jetty-http-9.3.8.v20160314.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/jetty-io-9.3.8.v20160314.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/jetty-server-9.3.8.v20160314.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/jetty-util-9.3.8.v20160314.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/jose4j-0.5.5.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/junit-4.10.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/log4j-1.2.17.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/mail.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/mysql-connector-java-5.1.6-bin.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/scribejava-apis-3.3.1-SNAPSHOT.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/scribejava-core-3.3.1-SNAPSHOT.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/servlet-api-3.1.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/slf4j-api-1.7.2.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/slf4j-log4j12-1.7.2.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/smartsockets-1.4.jar
     [echo]     

common:
    [javac] Compiling 277 source files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/XWTools.java:61: warning: [deprecation] HTTPOpenIdHandler in xtremweb.dispatcher has been deprecated
    [javac] import xtremweb.dispatcher.HTTPOpenIdHandler;
    [javac]                           ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/security/ACLConnect.java:36: warning: AclEntryImpl is internal proprietary API and may be removed in a future release
    [javac] import sun.security.acl.AclEntryImpl;
    [javac]                        ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/security/ACLConnect.java:37: warning: AclImpl is internal proprietary API and may be removed in a future release
    [javac] import sun.security.acl.AclImpl;
    [javac]                        ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/security/ACLConnect.java:38: warning: PermissionImpl is internal proprietary API and may be removed in a future release
    [javac] import sun.security.acl.PermissionImpl;
    [javac]                        ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/security/ACLConnect.java:39: warning: PrincipalImpl is internal proprietary API and may be removed in a future release
    [javac] import sun.security.acl.PrincipalImpl;
    [javac]                        ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/communications/CommClient.java:870: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] 		return version(new XMLRPCCommandVersion(newURI()));
    [javac] 		                   ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/communications/CommClient.java:881: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] 	public Version version(final XMLRPCCommandVersion command)
    [javac] 	                             ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/DataInterface.java:625: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/communications/IdRpc.java:89: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] 		public XMLRPCCommandVersion newCommand(final URI uri, final UserInterface client, final Table obj)
    [javac] 		       ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/communications/IdRpc.java:91: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] 			return new XMLRPCCommandVersion(uri, client);
    [javac] 			           ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/communications/XMLRPCCommand.java:614: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] 			return new XMLRPCCommandVersion(input);
    [javac] 			           ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/AppInterface.java:1446: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/UserInterface.java:577: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/GroupInterface.java:319: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/HostInterface.java:1212: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/SessionInterface.java:264: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/TaskInterface.java:441: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/TraceInterface.java:348: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/UserGroupInterface.java:365: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/WorkInterface.java:933: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/AppType.java:263: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/CPUType.java:223: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/DataType.java:265: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/Executable.java:294: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/JobInterface.java:409: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/OSType.java:243: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/Status.java:245: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/UserRightsType.java:243: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/XWTools.java:805: warning: [deprecation] HTTPOpenIdHandler in xtremweb.dispatcher has been deprecated
    [javac] 		final Logger logger = new Logger(HTTPOpenIdHandler.class);
    [javac] 		                                 ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/XWTools.java:817: warning: BASE64Encoder is internal proprietary API and may be removed in a future release
    [javac] 			out.println(new sun.misc.BASE64Encoder().encode(cert.getEncoded()));
    [javac] 			                        ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/communications/HTTPClient.java:238: warning: [deprecation] Protocol(String,SecureProtocolSocketFactory,int) in Protocol has been deprecated
    [javac] 				xwssl = new Protocol(uri.getScheme(), new AuthSSLProtocolSocketFactory(uri.getScheme(), keyStore,
    [javac] 				        ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/dispatcher/Dispatcher.java:216: warning: [deprecation] HTTPOpenIdHandler in xtremweb.dispatcher has been deprecated
    [javac] 				HTTPOpenIdHandler.setCACertificateEntries(getConfig().getKeyStore());
    [javac] 				^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/security/ACLConnect.java:65: warning: PermissionImpl is internal proprietary API and may be removed in a future release
    [javac] 	private final Permission _connect = new PermissionImpl("CONNECT");
    [javac] 	                                        ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/security/ACLConnect.java:66: warning: PrincipalImpl is internal proprietary API and may be removed in a future release
    [javac] 	private final Principal _owner = new PrincipalImpl("localhost");
    [javac] 	                                     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/security/ACLConnect.java:67: warning: AclImpl is internal proprietary API and may be removed in a future release
    [javac] 	private Acl _acl = new AclImpl(_owner, "ConnectACL");
    [javac] 	                       ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/security/ACLConnect.java:80: warning: AclImpl is internal proprietary API and may be removed in a future release
    [javac] 		_acl = new AclImpl(_owner, "ConnectACL");
    [javac] 		           ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/security/ACLConnect.java:81: warning: AclEntryImpl is internal proprietary API and may be removed in a future release
    [javac] 		final AclEntry allowConnections = new AclEntryImpl(_owner);
    [javac] 		                                      ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/security/ACLConnect.java:104: warning: PrincipalImpl is internal proprietary API and may be removed in a future release
    [javac] 			final Principal prince = new PrincipalImpl(regexp);
    [javac] 			                             ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/security/ACLConnect.java:105: warning: AclEntryImpl is internal proprietary API and may be removed in a future release
    [javac] 			final AclEntry entry = new AclEntryImpl(prince);
    [javac] 			                           ^
    [javac] Note: Some input files use unchecked or unsafe operations.
    [javac] Note: Recompile with -Xlint:unchecked for details.
    [javac] 39 warnings
    [javac] Creating empty /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes/database/package-info.class

obj:

iface:

communications:
    [javac] Compiling 60 source files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/communications/IdRpc.java:89: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] 		public XMLRPCCommandVersion newCommand(final URI uri, final UserInterface client, final Table obj)
    [javac] 		       ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/communications/IdRpc.java:91: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] 			return new XMLRPCCommandVersion(uri, client);
    [javac] 			           ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/communications/XMLRPCCommand.java:614: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] 			return new XMLRPCCommandVersion(input);
    [javac] 			           ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/communications/CommClient.java:870: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] 		return version(new XMLRPCCommandVersion(newURI()));
    [javac] 		                   ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/communications/CommClient.java:881: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] 	public Version version(final XMLRPCCommandVersion command)
    [javac] 	                             ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/communications/HTTPClient.java:238: warning: [deprecation] Protocol(String,SecureProtocolSocketFactory,int) in Protocol has been deprecated
    [javac] 				xwssl = new Protocol(uri.getScheme(), new AuthSSLProtocolSocketFactory(uri.getScheme(), keyStore,
    [javac] 				        ^
    [javac] Note: Some input files use unchecked or unsafe operations.
    [javac] Note: Recompile with -Xlint:unchecked for details.
    [javac] 6 warnings

services:
    [javac] Compiling 7 source files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes

archdep:
    [javac] Compiling 20 source files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes

upgrade:

worker:
    [javac] Compiling 42 source files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes
    [javac] Note: Some input files use unchecked or unsafe operations.
    [javac] Note: Recompile with -Xlint:unchecked for details.

dispatcher:
    [javac] Compiling 14 source files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/dispatcher/Dispatcher.java:216: warning: [deprecation] HTTPOpenIdHandler in xtremweb.dispatcher has been deprecated
    [javac] 				HTTPOpenIdHandler.setCACertificateEntries(getConfig().getKeyStore());
    [javac] 				^
    [javac] Note: Some input files use unchecked or unsafe operations.
    [javac] Note: Recompile with -Xlint:unchecked for details.
    [javac] 1 warning

worker.manifest:

jni:
     [copy] Copying 10 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/natif
     [exec] make[1]: Entering directory `/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/natif'
     [exec] gcc -c  -fPIC -g -Wall -I'/usr/lib/jvm/java-8-openjdk-amd64/include/linux' -fPIC -I'/usr/lib/jvm/java-8-openjdk-amd64/include' -o ../../build/classes/obj/linux-amd64/XWUtilUnix.o XWUtilUnix.c
     [exec] gcc -shared  -fPIC  -L'/usr/lib/jvm/java-8-openjdk-amd64/lib' -o ../../build/classes/obj/linux-amd64/XWUtil.jni ../../build/classes/obj/linux-amd64/XWUtilUnix.o 
     [exec] cp ../../build/classes/obj/linux-amd64/XWUtil.jni ../../build/classes/jni/XWUtil.jni.10.6.0.linux-amd64
     [exec] gcc -c  -fPIC -g -Wall -I'/usr/lib/jvm/java-8-openjdk-amd64/include/linux' -fPIC -I'/usr/lib/jvm/java-8-openjdk-amd64/include' -o ../../build/classes/obj/linux-amd64/XWTracerUnixlib.o XWTracerUnixlib.c
     [exec] mkdir: cannot create directory ‘../../build/classes/obj/linux-amd64’: File exists
     [exec] XWTracerUnixlib.c: In function ‘processCpustate’:gcc -c  -fPIC -g -Wall -I'/usr/lib/jvm/java-8-openjdk-amd64/include/linux' -fPIC -I'/usr/lib/jvm/java-8-openjdk-amd64/include' -o ../../build/classes/obj/linux-amd64/XWTracerUnixImpl.o XWTracerUnixImpl.c
     [exec] XWTracerUnixlib.c:194:19: warning: variable ‘relative_jiffies’ set but not used [-Wunused-but-set-variable]
     [exec]      idle_jiffies, relative_jiffies, absolute_jiffies;
     [exec]                    ^
     [exec] XWTracerUnixlib.c:191:49: warning: variable ‘cpu_idle’ set but not used [-Wunused-but-set-variable]
     [exec]    static double cpu_user, cpu_nice, cpu_system, cpu_idle;
     [exec]                                                  ^
     [exec] XWTracerUnixlib.c:191:37: warning: variable ‘cpu_system’ set but not used [-Wunused-but-set-variable]
     [exec]    static double cpu_user, cpu_nice, cpu_system, cpu_idle;
     [exec]                                      ^
     [exec] XWTracerUnixlib.c:191:27: warning: variable ‘cpu_nice’ set but not used [-Wunused-but-set-variable]
     [exec]    static double cpu_user, cpu_nice, cpu_system, cpu_idle;
     [exec]                            ^
     [exec] XWTracerUnixlib.c:191:17: warning: variable ‘cpu_user’ set but not used [-Wunused-but-set-variable]
     [exec]    static double cpu_user, cpu_nice, cpu_system, cpu_idle;
     [exec]                  ^
     [exec] XWTracerUnixlib.c: In function ‘writeState’:
     [exec] XWTracerUnixlib.c:589:7: warning: variable ‘test’ set but not used [-Wunused-but-set-variable]
     [exec]    int test;
     [exec]        ^
     [exec] XWTracerUnixlib.c:587:8: warning: variable ‘k’ set but not used [-Wunused-but-set-variable]
     [exec]    char k[1];
     [exec]         ^
     [exec] XWTracerUnixlib.c:584:9: warning: variable ‘c’ set but not used [-Wunused-but-set-variable]
     [exec]    char* c;
     [exec]          ^
     [exec] 
     [exec] PortMapper.c: In function ‘getport’:
     [exec] PortMapper.c:29:2: warning: implicit declaration of function ‘pmap_getport’ [-Wimplicit-function-declaration]
     [exec]   return pmap_getport (&amp;addr, prog, version, protocol);
     [exec]   ^
     [exec] gcc -shared  -fPIC  -L'/usr/lib/jvm/java-8-openjdk-amd64/lib' -o ../../build/classes/obj/linux-amd64/XwTracer.jni ../../build/classes/obj/linux-amd64/XWTracerUnixlib.o ../../build/classes/obj/linux-amd64/XWTracerUnixImpl.o 
     [exec] cp ../../build/classes/obj/linux-amd64/XwTracer.jni ../../build/classes/jni/XwTracer.jni.10.6.0.linux-amd64
     [exec] gcc -c  -fPIC -g -Wall -I'/usr/lib/jvm/java-8-openjdk-amd64/include/linux' -fPIC -I'/usr/lib/jvm/java-8-openjdk-amd64/include' -o ../../build/classes/obj/linux-amd64/PortMapper.o PortMapper.c
     [exec] gcc -shared  -fPIC  -L'/usr/lib/jvm/java-8-openjdk-amd64/lib' -o ../../build/classes/obj/linux-amd64/PortMapper.jni ../../build/classes/obj/linux-amd64/PortMapper.o 
     [exec] cp ../../build/classes/obj/linux-amd64/PortMapper.jni ../../build/classes/jni/PortMapper.jni.10.6.0.linux-amd64
     [exec] make[1]: Leaving directory `/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/natif'

Worker:
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes/data
     [copy] Copying 23 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes/data

tests:
    [javac] Compiling 50 source files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/test/xtremweb/communications/XMLRPCCommandVersionTest.java:29: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] import xtremweb.communications.XMLRPCCommandVersion;
    [javac]                               ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/test/xtremweb/communications/XMLRPCCommandVersionTest.java:47: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] 			setCmd(new XMLRPCCommandVersion());
    [javac] 			           ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/test/xtremweb/communications/XMLRPCCommandVersionTest.java:48: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] 			setCmd2(new XMLRPCCommandVersion());
    [javac] 			            ^
    [javac] Note: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/test/xtremweb/common/XMLHashtableTest.java uses unchecked or unsafe operations.
    [javac] Note: Recompile with -Xlint:unchecked for details.
    [javac] 3 warnings

client:

allservices:

Dispatcher:
     [echo]  
     [echo] 	JAR JAR JAR
     [echo] 	basedir="/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes"
     [echo] 	jarfile="/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/lib/xtremweb.jar"
     [echo] 	manifest="/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/misc/worker.manifest"
     [echo]       
      [jar] Building jar: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/lib/xtremweb.jar

rpcv:

all:

copylibs:

distrib:

BUILD SUCCESSFUL
Total time: 17 seconds
./build.sh -f install.xml install 
Buildfile: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/install.xml

tstamp:

version:

prepare:

configure:
     [echo] 
     [echo] user  login : ${xtremweb.admin.login} ${xtremweb.admin.password}
     [echo] admin login : ${xtremweb.admin.login} ${xtremweb.admin.password}
     [echo] DB su login :  
     [echo] ENGINE : ""
     [echo] launcher.url = http://nohost/
     [echo] system.user  = xwhep
     [echo] xwsuffix=LINUX-AMD64
     [echo] xwarch=AMD64
     [echo] target.os=Linux
     [echo] cross.prefix=${cross.prefix}
     [echo] cross.java.home=${cross.java.home}
     [echo] version=10.6.0

installConfig:
     [echo] 
     [echo]        ==&gt; version    = 10.6.0
     [echo]        ==&gt; dist.dir   = /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0
     [echo]        ==&gt; installDir = /opt/xwhep-10.6.0
     [echo]     

installFiles:
     [copy] Copying 98 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/doc
     [copy] Copying 17 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/docker
     [copy] Copying 31 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/lib
     [copy] Copying 31 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.server/installer/PckRoot/private/etc/xwhep.server/lib
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf
     [echo] 
     [echo]       xtremweb.admin.login=${xtremweb.admin.login}
     [echo]       xtremweb.admin.password=${xtremweb.admin.password}
     [echo]     
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf
     [echo] 
     [echo]       xtremweb.worker.login=${xtremweb.worker.login}
     [echo]       xtremweb.worker.password=${xtremweb.worker.password}
     [echo]     
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.worker/installer/PckRoot/private/etc/xwhep.worker/conf
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.worker/installer/PckRoot/Applications/xwhep.worker
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.worker/installer/PckRoot/private/etc/xwhep.worker/conf
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.vworker/installer/PckRoot/Applications/xwhep.vworker
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.vworker/installer/PckRoot/private/etc/xwhep.vworker/bin
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.client/installer/PckRoot/Applications/xwhep.client/conf
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.server/installer/PckRoot/private/etc/xwhep.server/conf
     [copy] Copying 98 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.server/installer/PckRoot/Applications/xwhep.server/doc
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.client/conf
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.client/innoSetup/client/conf
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/conf
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/innoSetup/worker/conf
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/conf
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/innoSetup/worker/conf
     [copy] Copying 2 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/lib
     [copy] Copying 2 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/innoSetup/worker/lib
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/innoSetup/worker/lib
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/innoSetup/worker/lib
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/innoSetup/worker/misc
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/innoSetup/worker/doc
     [copy] Copying 8 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/bin
     [copy] Copying 5 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/innoSetup/worker/bin
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/doc
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.server/conf
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.server/innoSetup/server/conf
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.server/conf
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.server/innoSetup/server/conf
     [copy] Copying 2 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.server/lib
     [copy] Copying 2 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.server/innoSetup/server/lib
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.server/innoSetup/server/misc
     [copy] Copying 2 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.server/innoSetup/server/bin

setupScripts:
     [copy] Copying 266 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/db-maintenance

installScripts:

createDownload:
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.worker/installer/PckRoot/private/etc/xwhep.worker/keystore
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.client/installer/PckRoot/Applications/xwhep.client/lib
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.client/installer/PckRoot/Applications/xwhep.client/lib
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.client/installer/PckRoot/Applications/xwhep.client/keystore
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.server/installer/PckRoot/private/etc/xwhep.server/keystore
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/db-maintenance
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/db-maintenance
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin
     [copy] Copying 98 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/doc/xwhep.client/doc
[jarbundler] Creating application bundle: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/xwhep.client.app
     [copy] Copying 5 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/xwhep.client.app
     [copy] Copying 20 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.worker
     [copy] Copying 17 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.vworker
     [copy] Copying 12 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.client
     [copy] Copying 19 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.server
     [copy] Copying 3 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/innoSetup
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker
     [copy] Copying 3 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.server/innoSetup
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.server
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.server.conf
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.server/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.server/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.server/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.server/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.server/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.server/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.server.conf/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.server.conf/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.server.conf/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.server.conf/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.server.conf/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.server.conf/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.bridgedgsg
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.bridgedgsg/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.bridgedgsg/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.bridgedgsg/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.bridgedgsg/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.bridgedgsg/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.bridgedgsg/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.client
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.client/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.client/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.client/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.client/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.client/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.client/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.worker
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.worker/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.worker/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.worker/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.worker/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.worker/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.worker/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.client/innoSetup/client/lib
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.client/innoSetup/client/lib
     [copy] Copying 11 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0
     [copy] Copying 6 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/apptest

ganglia:

install:
     [echo] 
     [echo]       Installation done
     [echo]     

BUILD SUCCESSFUL
Total time: 8 seconds</msg>
<status status="PASS" endtime="20170913 19:06:07.713" starttime="20170913 19:06:07.712"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${compile_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170913 19:06:07.714" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170913 19:06:07.714" starttime="20170913 19:06:07.714"></status>
</kw>
<kw name="Get Lines Containing String" library="String">
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<arguments>
<arg>${compile_result.stdout}</arg>
<arg>BUILD SUCCESSFUL</arg>
</arguments>
<assign>
<var>${extract_build_successful}</var>
</assign>
<msg timestamp="20170913 19:06:07.715" level="INFO">3 out of 486 lines matched</msg>
<msg timestamp="20170913 19:06:07.715" level="INFO">${extract_build_successful} = BUILD SUCCESSFUL
BUILD SUCCESSFUL
BUILD SUCCESSFUL</msg>
<status status="PASS" endtime="20170913 19:06:07.715" starttime="20170913 19:06:07.714"></status>
</kw>
<kw name="Get Line Count" library="String">
<doc>Returns and logs the number of lines in the given string.</doc>
<arguments>
<arg>${extract_build_successful}</arg>
</arguments>
<assign>
<var>${line_count_build_successful}</var>
</assign>
<msg timestamp="20170913 19:06:07.715" level="INFO">3 lines</msg>
<msg timestamp="20170913 19:06:07.715" level="INFO">${line_count_build_successful} = 3</msg>
<status status="PASS" endtime="20170913 19:06:07.715" starttime="20170913 19:06:07.715"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${line_count_build_successful}</arg>
<arg>3</arg>
</arguments>
<msg timestamp="20170913 19:06:07.716" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170913 19:06:07.716" starttime="20170913 19:06:07.715"></status>
</kw>
<status status="PASS" endtime="20170913 19:06:07.716" starttime="20170913 19:05:40.641"></status>
</kw>
<kw name="Install XWtremWeb" library="XWCommon">
<kw name="List Directories In Directory" library="OperatingSystem">
<doc>Wrapper for `List Directory` that returns only directories.</doc>
<arguments>
<arg>${DIST_PATH}</arg>
<arg>xwhep-*</arg>
<arg>absolute</arg>
</arguments>
<assign>
<var>@{list_directories_dist_path}</var>
</assign>
<msg timestamp="20170913 19:06:07.716" html="yes" level="INFO">Listing contents of directory '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist&lt;/a&gt;'.</msg>
<msg timestamp="20170913 19:06:07.717" level="INFO">1 directory:
/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0</msg>
<msg timestamp="20170913 19:06:07.717" level="INFO">@{list_directories_dist_path} = [ /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0 ]</msg>
<status status="PASS" endtime="20170913 19:06:07.717" starttime="20170913 19:06:07.716"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>@{list_directories_dist_path}[0]</arg>
</arguments>
<msg timestamp="20170913 19:06:07.717" level="INFO">/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0</msg>
<status status="PASS" endtime="20170913 19:06:07.718" starttime="20170913 19:06:07.717"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}</arg>
<arg>@{list_directories_dist_path}[0]</arg>
</arguments>
<msg timestamp="20170913 19:06:07.718" level="INFO">${DIST_XWHEP_PATH} = /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0</msg>
<status status="PASS" endtime="20170913 19:06:07.718" starttime="20170913 19:06:07.718"></status>
</kw>
<kw name="Directory Should Exist" library="OperatingSystem">
<doc>Fails unless the given path points to an existing directory.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}</arg>
</arguments>
<msg timestamp="20170913 19:06:07.718" html="yes" level="INFO">Directory '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0&lt;/a&gt;' exists.</msg>
<status status="PASS" endtime="20170913 19:06:07.719" starttime="20170913 19:06:07.718"></status>
</kw>
<kw name="Create XWCONFIGURE.VALUES FILE" library="XWCommon">
<arguments>
<arg>${DIST_XWHEP_PATH}</arg>
</arguments>
<kw name="Directory Should Exist" library="OperatingSystem">
<doc>Fails unless the given path points to an existing directory.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf</arg>
</arguments>
<msg timestamp="20170913 19:06:07.719" html="yes" level="INFO">Directory '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf&lt;/a&gt;' exists.</msg>
<status status="PASS" endtime="20170913 19:06:07.719" starttime="20170913 19:06:07.719"></status>
</kw>
<kw name="Remove File" library="OperatingSystem">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
</arguments>
<msg timestamp="20170913 19:06:07.721" html="yes" level="INFO">Removed file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170913 19:06:07.721" starttime="20170913 19:06:07.719"></status>
</kw>
<kw name="Create File" library="OperatingSystem">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
</arguments>
<msg timestamp="20170913 19:06:07.723" html="yes" level="INFO">Created file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170913 19:06:07.723" starttime="20170913 19:06:07.722"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>XWUSER='${XWCONFIGURE.VALUES.XWUSER}'\n</arg>
</arguments>
<msg timestamp="20170913 19:06:07.731" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170913 19:06:07.731" starttime="20170913 19:06:07.723"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>DBVENDOR='${XWCONFIGURE.VALUES.DBVENDOR}'\n</arg>
</arguments>
<msg timestamp="20170913 19:06:07.733" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170913 19:06:07.733" starttime="20170913 19:06:07.731"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>DBENGINE='${XWCONFIGURE.VALUES.DBENGINE}'\n</arg>
</arguments>
<msg timestamp="20170913 19:06:07.735" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170913 19:06:07.735" starttime="20170913 19:06:07.733"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>DBHOST='${XWCONFIGURE.VALUES.DBHOST}'\n</arg>
</arguments>
<msg timestamp="20170913 19:06:07.736" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170913 19:06:07.736" starttime="20170913 19:06:07.735"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>DBADMINLOGIN='${XWCONFIGURE.VALUES.DBADMINLOGIN}'\n</arg>
</arguments>
<msg timestamp="20170913 19:06:07.738" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170913 19:06:07.738" starttime="20170913 19:06:07.737"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>DBADMINPASSWORD='${XWCONFIGURE.VALUES.DBADMINPASSWORD}'\n</arg>
</arguments>
<msg timestamp="20170913 19:06:07.740" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170913 19:06:07.740" starttime="20170913 19:06:07.738"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>DBNAME='${XWCONFIGURE.VALUES.DBNAME}'\n</arg>
</arguments>
<msg timestamp="20170913 19:06:07.741" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170913 19:06:07.741" starttime="20170913 19:06:07.740"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>DBUSERLOGIN='${XWCONFIGURE.VALUES.DBUSERLOGIN}'\n</arg>
</arguments>
<msg timestamp="20170913 19:06:07.743" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170913 19:06:07.743" starttime="20170913 19:06:07.742"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>DBUSERPASSWORD='${XWCONFIGURE.VALUES.DBUSERPASSWORD}'\n</arg>
</arguments>
<msg timestamp="20170913 19:06:07.744" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170913 19:06:07.744" starttime="20170913 19:06:07.743"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>XWADMINLOGIN='${XWCONFIGURE.VALUES.XWADMINLOGIN}'\n</arg>
</arguments>
<msg timestamp="20170913 19:06:07.746" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170913 19:06:07.746" starttime="20170913 19:06:07.744"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>XWADMINPASSWORD='${XWCONFIGURE.VALUES.XWADMINPASSWORD}'\n</arg>
</arguments>
<msg timestamp="20170913 19:06:07.747" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170913 19:06:07.747" starttime="20170913 19:06:07.746"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>XWWORKERLOGIN='${XWCONFIGURE.VALUES.XWWORKERLOGIN}'\n</arg>
</arguments>
<msg timestamp="20170913 19:06:07.748" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170913 19:06:07.748" starttime="20170913 19:06:07.747"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>XWWORKERPASSWORD='${XWCONFIGURE.VALUES.XWWORKERPASSWORD}'\n</arg>
</arguments>
<msg timestamp="20170913 19:06:07.750" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170913 19:06:07.750" starttime="20170913 19:06:07.749"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>XWSERVER='${XWCONFIGURE.VALUES.XWSERVER}'\n</arg>
</arguments>
<msg timestamp="20170913 19:06:07.751" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170913 19:06:07.751" starttime="20170913 19:06:07.750"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>CERTCN='${XWCONFIGURE.VALUES.CERTCN}'\n</arg>
</arguments>
<msg timestamp="20170913 19:06:07.753" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170913 19:06:07.753" starttime="20170913 19:06:07.752"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>CERTOU='${XWCONFIGURE.VALUES.CERTOU}'\n</arg>
</arguments>
<msg timestamp="20170913 19:06:07.754" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170913 19:06:07.754" starttime="20170913 19:06:07.753"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>CERTO='${XWCONFIGURE.VALUES.CERTO}'\n</arg>
</arguments>
<msg timestamp="20170913 19:06:07.756" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170913 19:06:07.756" starttime="20170913 19:06:07.755"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>CERTL='${XWCONFIGURE.VALUES.CERTL}'\n</arg>
</arguments>
<msg timestamp="20170913 19:06:07.757" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170913 19:06:07.757" starttime="20170913 19:06:07.756"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>CERTC='${XWCONFIGURE.VALUES.CERTC}'\n</arg>
</arguments>
<msg timestamp="20170913 19:06:07.758" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170913 19:06:07.758" starttime="20170913 19:06:07.757"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>CERTC='${XWCONFIGURE.VALUES.CERTC}'\n</arg>
</arguments>
<msg timestamp="20170913 19:06:07.760" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170913 19:06:07.760" starttime="20170913 19:06:07.759"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>SSLKEYPASSPHRASE='${XWCONFIGURE.VALUES.SSLKEYPASSPHRASE}'\n</arg>
</arguments>
<msg timestamp="20170913 19:06:07.762" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170913 19:06:07.762" starttime="20170913 19:06:07.760"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>SSLKEYSERVERPASSWORD='${XWCONFIGURE.VALUES.SSLKEYSERVERPASSWORD}'\n</arg>
</arguments>
<msg timestamp="20170913 19:06:07.763" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170913 19:06:07.763" starttime="20170913 19:06:07.762"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>SSLKEYWORKERPASSWORD='${XWCONFIGURE.VALUES.SSLKEYWORKERPASSWORD}'\n</arg>
</arguments>
<msg timestamp="20170913 19:06:07.765" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170913 19:06:07.765" starttime="20170913 19:06:07.764"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>SSLKEYCLIENTPASSWORD='${XWCONFIGURE.VALUES.SSLKEYCLIENTPASSWORD}'\n</arg>
</arguments>
<msg timestamp="20170913 19:06:07.767" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170913 19:06:07.767" starttime="20170913 19:06:07.766"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>X509CERTDIR='${XWCONFIGURE.VALUES.X509CERTDIR}'\n</arg>
</arguments>
<msg timestamp="20170913 19:06:07.769" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170913 19:06:07.769" starttime="20170913 19:06:07.767"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>USERCERTDIR='${XWCONFIGURE.VALUES.USERCERTDIR}'\n</arg>
</arguments>
<msg timestamp="20170913 19:06:07.770" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170913 19:06:07.770" starttime="20170913 19:06:07.769"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>XWUPGRADEURL='${XWCONFIGURE.VALUES.XWUPGRADEURL}'\n</arg>
</arguments>
<msg timestamp="20170913 19:06:07.772" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170913 19:06:07.772" starttime="20170913 19:06:07.770"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>HTTPSPORT='${XWCONFIGURE.VALUES.HTTPSPORT}'\n</arg>
</arguments>
<msg timestamp="20170913 19:06:07.775" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170913 19:06:07.775" starttime="20170913 19:06:07.772"></status>
</kw>
<kw name="Log File" library="OperatingSystem">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
</arguments>
<msg timestamp="20170913 19:06:07.776" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<msg timestamp="20170913 19:06:07.776" level="INFO">XWUSER='root'
DBVENDOR='mysql'
DBENGINE='InnoDB'
DBHOST='localhost'
DBADMINLOGIN='root'
DBADMINPASSWORD='root'
DBNAME='xtremweb'
DBUSERLOGIN='xwuser'
DBUSERPASSWORD='xwuser'
XWADMINLOGIN='admin'
XWADMINPASSWORD='admin'
XWWORKERLOGIN='worker'
XWWORKERPASSWORD='worker'
XWSERVER='localhost'
CERTCN='localhost'
CERTOU='MrRobotFramework'
CERTO='MrRobotFramework'
CERTL='MrRobotFramework'
CERTC='fr'
CERTC='fr'
SSLKEYPASSPHRASE='MrRobotFramework'
SSLKEYSERVERPASSWORD='MrRobotFramework'
SSLKEYWORKERPASSWORD='MrRobotFramework'
SSLKEYCLIENTPASSWORD='MrRobotFramework'
X509CERTDIR='/tmp/castore'
USERCERTDIR=''
XWUPGRADEURL='http://localhost:8080/somewhere/xtremweb.jar'
HTTPSPORT='9443'
</msg>
<status status="PASS" endtime="20170913 19:06:07.777" starttime="20170913 19:06:07.776"></status>
</kw>
<status status="PASS" endtime="20170913 19:06:07.777" starttime="20170913 19:06:07.719"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd ${DIST_XWHEP_PATH} &amp;&amp; ./bin/xwconfigure --yes --nopkg --rmdb</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${install_result}</var>
</assign>
<msg timestamp="20170913 19:06:07.777" level="INFO">Starting process:
cd /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0 &amp;&amp; ./bin/xwconfigure --yes --nopkg --rmdb</msg>
<msg timestamp="20170913 19:06:07.780" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170913 19:06:30.234" level="INFO">Process completed.</msg>
<msg timestamp="20170913 19:06:30.234" level="INFO">${install_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170913 19:06:30.234" starttime="20170913 19:06:07.777"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${install_result.stdout}</arg>
</arguments>
<msg timestamp="20170913 19:06:30.235" level="INFO">
--------------------------------------------------
         XtremWeb-HEP 10.6.0 
         XWConfigurator

This script helps to configure an XtremWeb-HEP deployment 
--------------------------------------------------

This script aims to :
 - install a new database: Since 9.1. MySQL (http://www.mysql.com/) only is supported
 - creates electronic keys : 
   * server private key
   * client key store including server public key
   * worker key store including server public key
 - prepare installers
   * Win32 InnoSetup project (http://www.jrsoftware.org/isinfo.php)
   * Mac OS X Package Maker projects (http:/www.apple.com)
   * Linux RPM (http://www.rpm.org)
   * Linux Debian package (http://www.debian.org)

In order to complete configuration, several informations are needed :
 -1- MySQL administrator account (login and password)
     =&gt; If you don't know it, please ask your system administrator
 -1.1- Database server, if using MySQL
     =&gt; The name or IP address of your MySQL server
 -1.2- Database name
     =&gt; If you don't have a valid MySQL administrator account, you won't be able to perform this
     =&gt; In such a case, please ask your system administrator to create one new empty database for us
 -1.3- Database user (login and password), if using MySQL
     =&gt; This account must have insert/update/delete privileges to the previous database
     =&gt; This account will be used by the XW server to access database
     =&gt; If you don't have a valid MySQL administrator account, you won't be able to perform this
     =&gt; In such a case, please ask your system administrator to create one for you
 -2- Electronic key passphrase
     =&gt; This is free and up to you
 -3- Electronic key password for the server
     =&gt; This is free and up to you
 -4- Electronic key password for the worker
     =&gt; This is free and up to you
 -5- Electronic key password for the client
     =&gt; This is free and up to you

All informations are stored in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values
So that, you can stop this script when you want, and don't have to re-enter all informations

To reset any variable, edit or erase /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values

You should be aware that /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values stores some critical informations!!!

-----------------------------

DB vendor set to 'mysql'
DB engine set to 'InnoDB'
***********************
 Electronic keys found 
***********************
Upgrade URL is localhost : I guess this is for testing only...
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Can't download xtremweb.jar from 'http://localhost:8080/somewhere/xtremweb.jar'
You will have to ensure that xtremweb.jar can be downloaded from 'http://localhost:8080/somewhere/xtremweb.jar'
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

You entered :
**** Account to run the middleware : 
     USER                 = 'root'
**** Database configuration : 
     DBVENDOR             = 'mysql'
     DBENGINE             = 'InnoDB'
     DBHOST               = 'localhost'
     DBNAME               = 'xtremweb'
     DBADMINLOGIN         = 'root'
     DBADMINPASSWORD      = 'root'
     DBUSERLOGIN          = 'xwuser'
     DBUSERPASSWORD       = 'xwuser'
**** XtremWeb-HEP administrator client configuration : 
     XWADMINLOGIN         = 'admin'
     XWADMINPASSWORD      = 'admin'
**** XtremWeb-HEP public worker configuration : 
     XWWORKERLOGIN        = 'worker'
     XWWORKERPASSWORD     = 'worker'
**** XtremWeb-HEP server configuration : 
     XWSERVER             = 'localhost'
     XWUPGRADEURL         = 'http://localhost:8080/somewhere/xtremweb.jar'
**** CA certificates path : 
     X509CERTDIR          = '/tmp/castore'
**** Certificate configuration : 
     Keys found           = ''
     SSLKEYPASSPHRASE     = 'MrRobotFramework'
     SSLKEYCLIENTPASSWORD = 'MrRobotFramework'
     SSLKEYSERVERPASSWORD = 'MrRobotFramework'
     SSLKEYWORKERPASSWORD = 'MrRobotFramework'
     Common Name          = 'localhost'
     Organisation Unit    = 'MrRobotFramework'
     Organization Name    = 'MrRobotFramework'
     Locality Name        = 'MrRobotFramework'
     Country              = 'fr'

Database schema 'xtremweb' exists : DB reset forced
Resetting database schema 'xtremweb'
Preparing database script............Done
Preparing database schema 'xtremweb'
DB engine for 'xtremweb' is InnoDB :  Creating foreign keys for live tables ...
Creating DB triggers using xwhep-core-tables-create-triggers-for-data-coming-from-8.sql ...

Table "users"

Table "hosts"

Table "datas"

Table "works"

Table "tasks"

Table "apps"
Creating DB triggers using xwhep-core-tables-create-triggers-for-history-coming-from-8.sql ...

Table "users_history"

Table "hosts_history"

Table "datas_history"

Table "works_history"

Table "tasks_history"

Table "apps_history"
Create the SQL script for the creation of DB views in the current schema ...
Create the SQL script for the creation of DB users views in the current schema ...
Creating DB views using xwhep-core-tables-create-views-for-tables.sql ...
Creating DB views using xwhep-core-tables-create-users-views.sql ...
Creating DB views using xwhep-core-tables-create-views-for-sessions-and-groups.sql ...
Creating DB views using xwhep-core-tables-create-views-for-relationships.sql ...
Creating DB views using xwhep-core-tables-create-views-for-offering-and-billing.sql ...
Creating DB views using xwhep-core-tables-create-views-hosts-matching-works.sql ...
Granting access to DB schema 'xtremweb' ...
Database schema 'xtremweb' : checking compliance to '05.7.3'
Database schema 'xtremweb' : is compliant to 05.7.3
Database schema 'xtremweb' : checking compliance to '05.8.0'
Database schema 'xtremweb' : is compliant to 05.8.0
Database schema 'xtremweb' : checking compliance to '06.0.1'
Database schema 'xtremweb' : is compliant to 06.0.1
Database schema 'xtremweb' : checking compliance to '07.0.0'
Database schema 'xtremweb' : is compliant to 07.0.0
Database schema 'xtremweb' : checking compliance to '07.2.0'
Database schema 'xtremweb' : is compliant to 07.2.0
Database schema 'xtremweb' : checking compliance to '07.4.1'
Database schema 'xtremweb' : is compliant to 07.4.1
Database schema 'xtremweb' : checking compliance to '07.5.0'
Database schema 'xtremweb' : is compliant to 07.5.0
Database schema 'xtremweb' : checking compliance to '08.0.0'
Database schema 'xtremweb' : is compliant to 08.0.0
Database schema 'xtremweb' : checking compliance to '08.2.0'
Database schema 'xtremweb' : is compliant to 08.2.0
Database schema 'xtremweb' : checking compliance to '08.3.1'
Database schema 'xtremweb' : is compliant to 08.3.1
Database schema 'xtremweb' : checking compliance to '09.1.0'
Database schema 'xtremweb' : is compliant to 09.1.0
Database schema 'xtremweb' : checking compliance to '10.0.0'
Database schema 'xtremweb' : is compliant to 10.0.0
Database schema 'xtremweb' : checking compliance to '10.2.0'
Database schema 'xtremweb' : is compliant to 10.2.0
Database schema 'xtremweb' : checking compliance to '10.6.0'
Database schema 'xtremweb' : is not compliant to '10.6.0'; updating
10.6.0 is compliant, dont worry
10.6.0 is compliant, dont worry
Database schema 'xtremweb' : updated to '10.6.0'
Set current version to '10.6.0'
Setting the account to run the middleware to 'root'..........................Done
Preparing server configuration file '/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf'................. Done
Preparing xtremweb.ganglia...Done
Generating script to manage keystores (/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/xwhepgenkeys)  Done
Generating script to manage OpenId server certificates (/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/xwhepupdateopenidcerts) Done
Preparing worker configuration file '/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf'.... Done
Copying worker configuration file /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.worker/installer/PckRoot/private/etc/xwhep.worker/conf/xtremweb.worker.conf
Copying worker configuration file /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/innoSetup/worker/conf/xtremweb.worker.conf
Done
Preparing client configuration file '/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.client.conf'...Done
Copying client configuration file /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.client.conf to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.client/innoSetup/client/conf/xtremweb.client.conf
****************************************************************************************
Done
*******************
Keystores unmodified
*******************

Preparing  client package to '/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/xwhep.client'.....Done
Copying client configuration file /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/xwhep.client/10.6.0/conf/xtremweb.client.conf.template to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.client/installer/PckRoot/Applications/xwhep.client/conf/xtremweb.client.conf
 Done

Preparing server RPM package to '/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.server'.... Done

Preparing server configuration RPM package to '/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.server.conf'.... Done

Preparing server Debian package
Server Debian package ready

Preparing server configuration Debian package
Server Configuration Debian package ready
Preparing DG to SG bridge RPM package to '/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.bridgedgsg'............ Done

Preparing bridgedgsg Debian package
Bridgedgsg Debian package ready
Preparing SG to DG bridge RPM package to '/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.bridgesgdg'........ Done

Preparing bridgesgdg Debian package
Bridgesgdg Debian package ready
Preparing client RPM package to '/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.client'.... Done

Preparing client Debian package
Client Debian package ready

Preparing worker RPM package to '/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.worker'.... Done

Preparing worker Debian package
Worker Debian package ready

&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;
! Everything is now prepared !
&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;

Available packages :
  * server
   - RedHat RPM  in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.server
   - Debian DPKG in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.server
   - Apple  PKG  in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.server

  * Desktop Grid to Service Grid bridge
   - RedHat RPM  in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.bridgedgsg
   - Debian DPKG in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.bridgedgsg

  * Service Grid to Desktop Grid bridge
   - RedHat RPM  in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.bridgesgdg
   - Debian DPKG in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.bridgesgdg

  * client
   - RedHat RPM  in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.client
   - Debian DPKG in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.client
   - Apple  PKG  in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.client
   - Windows installer  in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.client/innoSetup
                        (http://www.innosetup.com/isinfo.php)

  * worker
   - RedHat  RPM        in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.worker
   - Debian  DPKG       in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.worker
   - Apple   PKG        in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.worker
   - Windows installer  in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/innoSetup
                        (http://www.innosetup.com/isinfo.php)

  * client
   - Zip file (platform independant)  in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/xwhep-client-10.6.0.zip


You can manually :
  * start the server
   - /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/xwhep.server console
  * start a worker
   - /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/xwhep.worker console
  * as soon as your server is started you can use the client
   - /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/xwworkers : if you have started a worker, it is in the list
   - /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/xwusers
   - /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/xwapps
   - etc.

As soon as everything is ok you should :
  * install you server using its packages
  * deploy worker over your own volunteer PCs using its packages
  * install your worker packages on any of your web sites
    if you wish to enable anonymous volunteer power
  * install your client ZIP file on any of your web sites
    to allow registered users to use the platform

That's all folks
</msg>
<status status="PASS" endtime="20170913 19:06:30.236" starttime="20170913 19:06:30.235"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${install_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170913 19:06:30.236" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170913 19:06:30.237" starttime="20170913 19:06:30.236"></status>
</kw>
<kw name="Get Lines Containing String" library="String">
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<arguments>
<arg>${install_result.stdout}</arg>
<arg>That's all folks</arg>
</arguments>
<assign>
<var>${install_result_successful}</var>
</assign>
<msg timestamp="20170913 19:06:30.237" level="INFO">1 out of 273 lines matched</msg>
<msg timestamp="20170913 19:06:30.238" level="INFO">${install_result_successful} = That's all folks</msg>
<status status="PASS" endtime="20170913 19:06:30.238" starttime="20170913 19:06:30.237"></status>
</kw>
<kw name="Get Line Count" library="String">
<doc>Returns and logs the number of lines in the given string.</doc>
<arguments>
<arg>${install_result_successful}</arg>
</arguments>
<assign>
<var>${line_install_result_successful}</var>
</assign>
<msg timestamp="20170913 19:06:30.238" level="INFO">1 lines</msg>
<msg timestamp="20170913 19:06:30.238" level="INFO">${line_install_result_successful} = 1</msg>
<status status="PASS" endtime="20170913 19:06:30.238" starttime="20170913 19:06:30.238"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${line_install_result_successful}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20170913 19:06:30.239" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170913 19:06:30.239" starttime="20170913 19:06:30.238"></status>
</kw>
<status status="PASS" endtime="20170913 19:06:30.239" starttime="20170913 19:06:07.716"></status>
</kw>
<kw name="Start XWtremWeb Server And XWtremWeb Worker" library="XWCommon">
<kw name="Ping XWtremWeb Database" library="XWServer">
<kw name="Xtremweb Tables Must Exist" library="MySql">
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170913 19:06:30.241" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170913 19:06:30.242" starttime="20170913 19:06:30.240"></status>
</kw>
<status status="PASS" endtime="20170913 19:06:30.242" starttime="20170913 19:06:30.240"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>appTypes</arg>
</arguments>
<msg timestamp="20170913 19:06:30.243" level="INFO">Executing : Table Must Exist  |  appTypes </msg>
<msg timestamp="20170913 19:06:30.243" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='appTypes' </msg>
<status status="PASS" endtime="20170913 19:06:30.244" starttime="20170913 19:06:30.243"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps</arg>
</arguments>
<msg timestamp="20170913 19:06:30.245" level="INFO">Executing : Table Must Exist  |  apps </msg>
<msg timestamp="20170913 19:06:30.245" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='apps' </msg>
<status status="PASS" endtime="20170913 19:06:30.246" starttime="20170913 19:06:30.244"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps_history</arg>
</arguments>
<msg timestamp="20170913 19:06:30.246" level="INFO">Executing : Table Must Exist  |  apps_history </msg>
<msg timestamp="20170913 19:06:30.246" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='apps_history' </msg>
<status status="PASS" endtime="20170913 19:06:30.247" starttime="20170913 19:06:30.246"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>cpuTypes</arg>
</arguments>
<msg timestamp="20170913 19:06:30.248" level="INFO">Executing : Table Must Exist  |  cpuTypes </msg>
<msg timestamp="20170913 19:06:30.248" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='cpuTypes' </msg>
<status status="PASS" endtime="20170913 19:06:30.249" starttime="20170913 19:06:30.248"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>dataTypes</arg>
</arguments>
<msg timestamp="20170913 19:06:30.249" level="INFO">Executing : Table Must Exist  |  dataTypes </msg>
<msg timestamp="20170913 19:06:30.249" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='dataTypes' </msg>
<status status="PASS" endtime="20170913 19:06:30.250" starttime="20170913 19:06:30.249"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas</arg>
</arguments>
<msg timestamp="20170913 19:06:30.252" level="INFO">Executing : Table Must Exist  |  datas </msg>
<msg timestamp="20170913 19:06:30.252" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='datas' </msg>
<status status="PASS" endtime="20170913 19:06:30.253" starttime="20170913 19:06:30.251"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas_history</arg>
</arguments>
<msg timestamp="20170913 19:06:30.253" level="INFO">Executing : Table Must Exist  |  datas_history </msg>
<msg timestamp="20170913 19:06:30.253" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='datas_history' </msg>
<status status="PASS" endtime="20170913 19:06:30.254" starttime="20170913 19:06:30.253"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables</arg>
</arguments>
<msg timestamp="20170913 19:06:30.255" level="INFO">Executing : Table Must Exist  |  executables </msg>
<msg timestamp="20170913 19:06:30.255" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='executables' </msg>
<status status="PASS" endtime="20170913 19:06:30.256" starttime="20170913 19:06:30.255"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables_history</arg>
</arguments>
<msg timestamp="20170913 19:06:30.256" level="INFO">Executing : Table Must Exist  |  executables_history </msg>
<msg timestamp="20170913 19:06:30.256" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='executables_history' </msg>
<status status="PASS" endtime="20170913 19:06:30.257" starttime="20170913 19:06:30.256"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups</arg>
</arguments>
<msg timestamp="20170913 19:06:30.258" level="INFO">Executing : Table Must Exist  |  groups </msg>
<msg timestamp="20170913 19:06:30.258" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='groups' </msg>
<status status="PASS" endtime="20170913 19:06:30.258" starttime="20170913 19:06:30.257"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups_history</arg>
</arguments>
<msg timestamp="20170913 19:06:30.259" level="INFO">Executing : Table Must Exist  |  groups_history </msg>
<msg timestamp="20170913 19:06:30.259" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='groups_history' </msg>
<status status="PASS" endtime="20170913 19:06:30.260" starttime="20170913 19:06:30.259"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts</arg>
</arguments>
<msg timestamp="20170913 19:06:30.260" level="INFO">Executing : Table Must Exist  |  hosts </msg>
<msg timestamp="20170913 19:06:30.260" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='hosts' </msg>
<status status="PASS" endtime="20170913 19:06:30.261" starttime="20170913 19:06:30.260"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts_history</arg>
</arguments>
<msg timestamp="20170913 19:06:30.262" level="INFO">Executing : Table Must Exist  |  hosts_history </msg>
<msg timestamp="20170913 19:06:30.262" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='hosts_history' </msg>
<status status="PASS" endtime="20170913 19:06:30.263" starttime="20170913 19:06:30.261"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships</arg>
</arguments>
<msg timestamp="20170913 19:06:30.264" level="INFO">Executing : Table Must Exist  |  memberships </msg>
<msg timestamp="20170913 19:06:30.264" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='memberships' </msg>
<status status="PASS" endtime="20170913 19:06:30.265" starttime="20170913 19:06:30.263"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships_history</arg>
</arguments>
<msg timestamp="20170913 19:06:30.265" level="INFO">Executing : Table Must Exist  |  memberships_history </msg>
<msg timestamp="20170913 19:06:30.265" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='memberships_history' </msg>
<status status="PASS" endtime="20170913 19:06:30.266" starttime="20170913 19:06:30.265"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>oses</arg>
</arguments>
<msg timestamp="20170913 19:06:30.266" level="INFO">Executing : Table Must Exist  |  oses </msg>
<msg timestamp="20170913 19:06:30.266" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='oses' </msg>
<status status="PASS" endtime="20170913 19:06:30.267" starttime="20170913 19:06:30.266"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>packageTypes</arg>
</arguments>
<msg timestamp="20170913 19:06:30.268" level="INFO">Executing : Table Must Exist  |  packageTypes </msg>
<msg timestamp="20170913 19:06:30.268" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='packageTypes' </msg>
<status status="PASS" endtime="20170913 19:06:30.269" starttime="20170913 19:06:30.268"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions</arg>
</arguments>
<msg timestamp="20170913 19:06:30.269" level="INFO">Executing : Table Must Exist  |  sessions </msg>
<msg timestamp="20170913 19:06:30.269" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sessions' </msg>
<status status="PASS" endtime="20170913 19:06:30.270" starttime="20170913 19:06:30.269"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions_history</arg>
</arguments>
<msg timestamp="20170913 19:06:30.271" level="INFO">Executing : Table Must Exist  |  sessions_history </msg>
<msg timestamp="20170913 19:06:30.271" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sessions_history' </msg>
<status status="PASS" endtime="20170913 19:06:30.272" starttime="20170913 19:06:30.271"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes</arg>
</arguments>
<msg timestamp="20170913 19:06:30.272" level="INFO">Executing : Table Must Exist  |  sharedAppTypes </msg>
<msg timestamp="20170913 19:06:30.272" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedAppTypes' </msg>
<status status="PASS" endtime="20170913 19:06:30.273" starttime="20170913 19:06:30.272"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes_history</arg>
</arguments>
<msg timestamp="20170913 19:06:30.274" level="INFO">Executing : Table Must Exist  |  sharedAppTypes_history </msg>
<msg timestamp="20170913 19:06:30.274" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedAppTypes_history' </msg>
<status status="PASS" endtime="20170913 19:06:30.275" starttime="20170913 19:06:30.273"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes</arg>
</arguments>
<msg timestamp="20170913 19:06:30.276" level="INFO">Executing : Table Must Exist  |  sharedPackageTypes </msg>
<msg timestamp="20170913 19:06:30.276" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedPackageTypes' </msg>
<status status="PASS" endtime="20170913 19:06:30.277" starttime="20170913 19:06:30.275"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes_history</arg>
</arguments>
<msg timestamp="20170913 19:06:30.277" level="INFO">Executing : Table Must Exist  |  sharedPackageTypes_history </msg>
<msg timestamp="20170913 19:06:30.277" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedPackageTypes_history' </msg>
<status status="PASS" endtime="20170913 19:06:30.278" starttime="20170913 19:06:30.277"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>statuses</arg>
</arguments>
<msg timestamp="20170913 19:06:30.278" level="INFO">Executing : Table Must Exist  |  statuses </msg>
<msg timestamp="20170913 19:06:30.279" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='statuses' </msg>
<status status="PASS" endtime="20170913 19:06:30.279" starttime="20170913 19:06:30.278"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks</arg>
</arguments>
<msg timestamp="20170913 19:06:30.280" level="INFO">Executing : Table Must Exist  |  tasks </msg>
<msg timestamp="20170913 19:06:30.280" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='tasks' </msg>
<status status="PASS" endtime="20170913 19:06:30.281" starttime="20170913 19:06:30.280"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks_history</arg>
</arguments>
<msg timestamp="20170913 19:06:30.281" level="INFO">Executing : Table Must Exist  |  tasks_history </msg>
<msg timestamp="20170913 19:06:30.281" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='tasks_history' </msg>
<status status="PASS" endtime="20170913 19:06:30.282" starttime="20170913 19:06:30.281"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces</arg>
</arguments>
<msg timestamp="20170913 19:06:30.283" level="INFO">Executing : Table Must Exist  |  traces </msg>
<msg timestamp="20170913 19:06:30.283" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='traces' </msg>
<status status="PASS" endtime="20170913 19:06:30.284" starttime="20170913 19:06:30.283"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces_history</arg>
</arguments>
<msg timestamp="20170913 19:06:30.284" level="INFO">Executing : Table Must Exist  |  traces_history </msg>
<msg timestamp="20170913 19:06:30.284" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='traces_history' </msg>
<status status="PASS" endtime="20170913 19:06:30.285" starttime="20170913 19:06:30.284"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>userRights</arg>
</arguments>
<msg timestamp="20170913 19:06:30.285" level="INFO">Executing : Table Must Exist  |  userRights </msg>
<msg timestamp="20170913 19:06:30.285" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='userRights' </msg>
<status status="PASS" endtime="20170913 19:06:30.286" starttime="20170913 19:06:30.285"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups</arg>
</arguments>
<msg timestamp="20170913 19:06:30.287" level="INFO">Executing : Table Must Exist  |  usergroups </msg>
<msg timestamp="20170913 19:06:30.287" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='usergroups' </msg>
<status status="PASS" endtime="20170913 19:06:30.288" starttime="20170913 19:06:30.287"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups_history</arg>
</arguments>
<msg timestamp="20170913 19:06:30.288" level="INFO">Executing : Table Must Exist  |  usergroups_history </msg>
<msg timestamp="20170913 19:06:30.288" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='usergroups_history' </msg>
<status status="PASS" endtime="20170913 19:06:30.289" starttime="20170913 19:06:30.288"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users</arg>
</arguments>
<msg timestamp="20170913 19:06:30.289" level="INFO">Executing : Table Must Exist  |  users </msg>
<msg timestamp="20170913 19:06:30.289" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='users' </msg>
<status status="PASS" endtime="20170913 19:06:30.290" starttime="20170913 19:06:30.289"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users_history</arg>
</arguments>
<msg timestamp="20170913 19:06:30.291" level="INFO">Executing : Table Must Exist  |  users_history </msg>
<msg timestamp="20170913 19:06:30.291" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='users_history' </msg>
<status status="PASS" endtime="20170913 19:06:30.292" starttime="20170913 19:06:30.291"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>version</arg>
</arguments>
<msg timestamp="20170913 19:06:30.292" level="INFO">Executing : Table Must Exist  |  version </msg>
<msg timestamp="20170913 19:06:30.292" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='version' </msg>
<status status="PASS" endtime="20170913 19:06:30.293" starttime="20170913 19:06:30.292"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>versions</arg>
</arguments>
<msg timestamp="20170913 19:06:30.294" level="INFO">Executing : Table Must Exist  |  versions </msg>
<msg timestamp="20170913 19:06:30.294" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='versions' </msg>
<status status="PASS" endtime="20170913 19:06:30.294" starttime="20170913 19:06:30.293"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps</arg>
</arguments>
<msg timestamp="20170913 19:06:30.295" level="INFO">Executing : Table Must Exist  |  view_apps </msg>
<msg timestamp="20170913 19:06:30.295" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps' </msg>
<status status="PASS" endtime="20170913 19:06:30.296" starttime="20170913 19:06:30.295"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps_for_offering</arg>
</arguments>
<msg timestamp="20170913 19:06:30.296" level="INFO">Executing : Table Must Exist  |  view_apps_for_offering </msg>
<msg timestamp="20170913 19:06:30.296" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps_for_offering' </msg>
<status status="PASS" endtime="20170913 19:06:30.298" starttime="20170913 19:06:30.296"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps_for_offering_with_file_sizes</arg>
</arguments>
<msg timestamp="20170913 19:06:30.298" level="INFO">Executing : Table Must Exist  |  view_apps_for_offering_with_file_sizes </msg>
<msg timestamp="20170913 19:06:30.298" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps_for_offering_with_file_sizes' </msg>
<status status="PASS" endtime="20170913 19:06:30.299" starttime="20170913 19:06:30.298"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_datas</arg>
</arguments>
<msg timestamp="20170913 19:06:30.300" level="INFO">Executing : Table Must Exist  |  view_datas </msg>
<msg timestamp="20170913 19:06:30.300" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_datas' </msg>
<status status="PASS" endtime="20170913 19:06:30.301" starttime="20170913 19:06:30.299"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_executables</arg>
</arguments>
<msg timestamp="20170913 19:06:30.301" level="INFO">Executing : Table Must Exist  |  view_executables </msg>
<msg timestamp="20170913 19:06:30.301" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_executables' </msg>
<status status="PASS" endtime="20170913 19:06:30.302" starttime="20170913 19:06:30.301"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_groups</arg>
</arguments>
<msg timestamp="20170913 19:06:30.302" level="INFO">Executing : Table Must Exist  |  view_groups </msg>
<msg timestamp="20170913 19:06:30.302" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_groups' </msg>
<status status="PASS" endtime="20170913 19:06:30.303" starttime="20170913 19:06:30.302"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts</arg>
</arguments>
<msg timestamp="20170913 19:06:30.304" level="INFO">Executing : Table Must Exist  |  view_hosts </msg>
<msg timestamp="20170913 19:06:30.304" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts' </msg>
<status status="PASS" endtime="20170913 19:06:30.305" starttime="20170913 19:06:30.304"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_deployable</arg>
</arguments>
<msg timestamp="20170913 19:06:30.305" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_deployable </msg>
<msg timestamp="20170913 19:06:30.305" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_deployable' </msg>
<status status="PASS" endtime="20170913 19:06:30.307" starttime="20170913 19:06:30.305"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_deployable_and_shared</arg>
</arguments>
<msg timestamp="20170913 19:06:30.308" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_deployable_and_shared </msg>
<msg timestamp="20170913 19:06:30.308" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_deployable_and_shared' </msg>
<status status="PASS" endtime="20170913 19:06:30.309" starttime="20170913 19:06:30.307"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_shared</arg>
</arguments>
<msg timestamp="20170913 19:06:30.309" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_shared </msg>
<msg timestamp="20170913 19:06:30.309" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_shared' </msg>
<status status="PASS" endtime="20170913 19:06:30.310" starttime="20170913 19:06:30.309"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_sessions</arg>
</arguments>
<msg timestamp="20170913 19:06:30.311" level="INFO">Executing : Table Must Exist  |  view_sessions </msg>
<msg timestamp="20170913 19:06:30.311" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_sessions' </msg>
<status status="PASS" endtime="20170913 19:06:30.312" starttime="20170913 19:06:30.311"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_tasks</arg>
</arguments>
<msg timestamp="20170913 19:06:30.312" level="INFO">Executing : Table Must Exist  |  view_tasks </msg>
<msg timestamp="20170913 19:06:30.312" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_tasks' </msg>
<status status="PASS" endtime="20170913 19:06:30.313" starttime="20170913 19:06:30.312"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_traces</arg>
</arguments>
<msg timestamp="20170913 19:06:30.313" level="INFO">Executing : Table Must Exist  |  view_traces </msg>
<msg timestamp="20170913 19:06:30.314" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_traces' </msg>
<status status="PASS" endtime="20170913 19:06:30.314" starttime="20170913 19:06:30.313"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_usergroups</arg>
</arguments>
<msg timestamp="20170913 19:06:30.315" level="INFO">Executing : Table Must Exist  |  view_usergroups </msg>
<msg timestamp="20170913 19:06:30.315" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_usergroups' </msg>
<status status="PASS" endtime="20170913 19:06:30.316" starttime="20170913 19:06:30.315"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users</arg>
</arguments>
<msg timestamp="20170913 19:06:30.316" level="INFO">Executing : Table Must Exist  |  view_users </msg>
<msg timestamp="20170913 19:06:30.316" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users' </msg>
<status status="PASS" endtime="20170913 19:06:30.317" starttime="20170913 19:06:30.316"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_apps</arg>
</arguments>
<msg timestamp="20170913 19:06:30.317" level="INFO">Executing : Table Must Exist  |  view_users_apps </msg>
<msg timestamp="20170913 19:06:30.317" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_apps' </msg>
<status status="PASS" endtime="20170913 19:06:30.318" starttime="20170913 19:06:30.317"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_datas</arg>
</arguments>
<msg timestamp="20170913 19:06:30.319" level="INFO">Executing : Table Must Exist  |  view_users_datas </msg>
<msg timestamp="20170913 19:06:30.319" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_datas' </msg>
<status status="PASS" endtime="20170913 19:06:30.320" starttime="20170913 19:06:30.318"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_groups</arg>
</arguments>
<msg timestamp="20170913 19:06:30.320" level="INFO">Executing : Table Must Exist  |  view_users_groups </msg>
<msg timestamp="20170913 19:06:30.320" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_groups' </msg>
<status status="PASS" endtime="20170913 19:06:30.321" starttime="20170913 19:06:30.320"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_hosts</arg>
</arguments>
<msg timestamp="20170913 19:06:30.321" level="INFO">Executing : Table Must Exist  |  view_users_hosts </msg>
<msg timestamp="20170913 19:06:30.321" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_hosts' </msg>
<status status="PASS" endtime="20170913 19:06:30.322" starttime="20170913 19:06:30.321"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_sessions</arg>
</arguments>
<msg timestamp="20170913 19:06:30.323" level="INFO">Executing : Table Must Exist  |  view_users_sessions </msg>
<msg timestamp="20170913 19:06:30.323" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_sessions' </msg>
<status status="PASS" endtime="20170913 19:06:30.323" starttime="20170913 19:06:30.322"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_tasks</arg>
</arguments>
<msg timestamp="20170913 19:06:30.324" level="INFO">Executing : Table Must Exist  |  view_users_tasks </msg>
<msg timestamp="20170913 19:06:30.324" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_tasks' </msg>
<status status="PASS" endtime="20170913 19:06:30.325" starttime="20170913 19:06:30.324"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_traces</arg>
</arguments>
<msg timestamp="20170913 19:06:30.325" level="INFO">Executing : Table Must Exist  |  view_users_traces </msg>
<msg timestamp="20170913 19:06:30.325" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_traces' </msg>
<status status="PASS" endtime="20170913 19:06:30.326" starttime="20170913 19:06:30.325"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_usergroups</arg>
</arguments>
<msg timestamp="20170913 19:06:30.326" level="INFO">Executing : Table Must Exist  |  view_users_usergroups </msg>
<msg timestamp="20170913 19:06:30.326" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_usergroups' </msg>
<status status="PASS" endtime="20170913 19:06:30.327" starttime="20170913 19:06:30.326"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_users</arg>
</arguments>
<msg timestamp="20170913 19:06:30.327" level="INFO">Executing : Table Must Exist  |  view_users_users </msg>
<msg timestamp="20170913 19:06:30.327" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_users' </msg>
<status status="PASS" endtime="20170913 19:06:30.328" starttime="20170913 19:06:30.327"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_works</arg>
</arguments>
<msg timestamp="20170913 19:06:30.329" level="INFO">Executing : Table Must Exist  |  view_users_works </msg>
<msg timestamp="20170913 19:06:30.329" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_works' </msg>
<status status="PASS" endtime="20170913 19:06:30.329" starttime="20170913 19:06:30.328"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works</arg>
</arguments>
<msg timestamp="20170913 19:06:30.330" level="INFO">Executing : Table Must Exist  |  view_works </msg>
<msg timestamp="20170913 19:06:30.330" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works' </msg>
<status status="PASS" endtime="20170913 19:06:30.331" starttime="20170913 19:06:30.330"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works_for_billing</arg>
</arguments>
<msg timestamp="20170913 19:06:30.331" level="INFO">Executing : Table Must Exist  |  view_works_for_billing </msg>
<msg timestamp="20170913 19:06:30.331" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works_for_billing' </msg>
<status status="PASS" endtime="20170913 19:06:30.332" starttime="20170913 19:06:30.331"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works_for_billing_with_file_sizes</arg>
</arguments>
<msg timestamp="20170913 19:06:30.332" level="INFO">Executing : Table Must Exist  |  view_works_for_billing_with_file_sizes </msg>
<msg timestamp="20170913 19:06:30.332" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works_for_billing_with_file_sizes' </msg>
<status status="PASS" endtime="20170913 19:06:30.333" starttime="20170913 19:06:30.332"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works</arg>
</arguments>
<msg timestamp="20170913 19:06:30.333" level="INFO">Executing : Table Must Exist  |  works </msg>
<msg timestamp="20170913 19:06:30.333" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='works' </msg>
<status status="PASS" endtime="20170913 19:06:30.334" starttime="20170913 19:06:30.333"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works_history</arg>
</arguments>
<msg timestamp="20170913 19:06:30.334" level="INFO">Executing : Table Must Exist  |  works_history </msg>
<msg timestamp="20170913 19:06:30.334" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='works_history' </msg>
<status status="PASS" endtime="20170913 19:06:30.335" starttime="20170913 19:06:30.334"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170913 19:06:30.336" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170913 19:06:30.336" starttime="20170913 19:06:30.336"></status>
</kw>
<status status="PASS" endtime="20170913 19:06:30.336" starttime="20170913 19:06:30.335"></status>
</kw>
<status status="PASS" endtime="20170913 19:06:30.336" starttime="20170913 19:06:30.240"></status>
</kw>
<status status="PASS" endtime="20170913 19:06:30.336" starttime="20170913 19:06:30.240"></status>
</kw>
<kw name="Start XtremWeb Server" library="XWServer">
<arguments>
<arg>${DIST_XWHEP_PATH}</arg>
</arguments>
<kw name="File Should Exist" library="OperatingSystem">
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xtremweb.server.conf</arg>
</arguments>
<msg timestamp="20170913 19:06:30.337" html="yes" level="INFO">File '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf&lt;/a&gt;' exists.</msg>
<status status="PASS" endtime="20170913 19:06:30.337" starttime="20170913 19:06:30.337"></status>
</kw>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xtremweb.server.conf</arg>
</arguments>
<assign>
<var>${config_content}</var>
</assign>
<msg timestamp="20170913 19:06:30.338" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf&lt;/a&gt;'.</msg>
<msg timestamp="20170913 19:06:30.338" level="INFO">${config_content} = #
# Copyrights     : CNRS
# Author         : Oleg Lodygensky
# Acknowledgment : XtremWeb-HEP is based on XtremWeb 1.8.0 by inria : http://www.xtremweb.net/
# Web            : http://www.xtremweb-hep.o...</msg>
<status status="PASS" endtime="20170913 19:06:30.338" starttime="20170913 19:06:30.337"></status>
</kw>
<kw name="Remove String Using Regexp" library="String">
<doc>Removes ``patterns`` from the given ``string``.</doc>
<arguments>
<arg>${config_content}</arg>
<arg>LAUNCHERURL=${XWCONFIGURE.VALUES.XWUPGRADEURL}</arg>
</arguments>
<assign>
<var>${config_content_filtered}</var>
</assign>
<msg timestamp="20170913 19:06:30.339" level="INFO">${config_content_filtered} = #
# Copyrights     : CNRS
# Author         : Oleg Lodygensky
# Acknowledgment : XtremWeb-HEP is based on XtremWeb 1.8.0 by inria : http://www.xtremweb.net/
# Web            : http://www.xtremweb-hep.o...</msg>
<status status="PASS" endtime="20170913 19:06:30.339" starttime="20170913 19:06:30.338"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${config_content_filtered}</arg>
<arg>\## HTTPSPORT=443</arg>
<arg>HTTPSPORT=${XWCONFIGURE.VALUES.HTTPSPORT}</arg>
</arguments>
<assign>
<var>${config_content_filtered}</var>
</assign>
<msg timestamp="20170913 19:06:30.339" level="INFO">${config_content_filtered} = #
# Copyrights     : CNRS
# Author         : Oleg Lodygensky
# Acknowledgment : XtremWeb-HEP is based on XtremWeb 1.8.0 by inria : http://www.xtremweb.net/
# Web            : http://www.xtremweb-hep.o...</msg>
<status status="PASS" endtime="20170913 19:06:30.339" starttime="20170913 19:06:30.339"></status>
</kw>
<kw name="Create File" library="OperatingSystem">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xtremweb.server.conf</arg>
<arg>content=${config_content_filtered}</arg>
</arguments>
<msg timestamp="20170913 19:06:30.341" html="yes" level="INFO">Created file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170913 19:06:30.342" starttime="20170913 19:06:30.340"></status>
</kw>
<kw name="Remove File" library="OperatingSystem">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<msg timestamp="20170913 19:06:30.343" html="yes" level="INFO">Removed file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170913 19:06:30.343" starttime="20170913 19:06:30.342"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/bin/xtremweb.server console</arg>
<arg>shell=yes</arg>
<arg>stderr=STDOUT</arg>
<arg>stdout=${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<assign>
<var>${created_process}</var>
</assign>
<msg timestamp="20170913 19:06:30.344" level="INFO">Starting process:
/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/xtremweb.server console</msg>
<msg timestamp="20170913 19:06:30.347" level="INFO">${created_process} = 28</msg>
<status status="PASS" endtime="20170913 19:06:30.347" starttime="20170913 19:06:30.343"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SERVER_PROCESS}</arg>
<arg>${created_process}</arg>
</arguments>
<msg timestamp="20170913 19:06:30.348" level="INFO">${SERVER_PROCESS} = 28</msg>
<status status="PASS" endtime="20170913 19:06:30.348" starttime="20170913 19:06:30.348"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2 min</arg>
<arg>5 sec</arg>
<arg>Check XtremWeb Server Start From Log</arg>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<kw name="Check XtremWeb Server Start From Log" library="XWServer">
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<kw name="Log XtremWeb Process Log File" library="XWServer">
<kw name="Log File" library="OperatingSystem">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<msg timestamp="20170913 19:06:30.350" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170913 19:06:30.352" level="INFO"></msg>
<status status="PASS" endtime="20170913 19:06:30.352" starttime="20170913 19:06:30.350"></status>
</kw>
<status status="PASS" endtime="20170913 19:06:30.352" starttime="20170913 19:06:30.350"></status>
</kw>
<kw name="Grep File" library="OperatingSystem">
<doc>Returns the lines of the specified file that match the ``pattern``.</doc>
<arguments>
<arg>${log}</arg>
<arg>listening on port : ${XWCONFIGURE.VALUES.HTTPSPORT}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20170913 19:06:30.352" html="yes" level="INFO">Reading file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170913 19:06:30.353" level="INFO">0 out of 0 lines matched</msg>
<msg timestamp="20170913 19:06:30.353" level="INFO">${ret} = </msg>
<status status="PASS" endtime="20170913 19:06:30.353" starttime="20170913 19:06:30.352"></status>
</kw>
<kw name="Get Line Count" library="String">
<doc>Returns and logs the number of lines in the given string.</doc>
<arguments>
<arg>${ret}</arg>
</arguments>
<assign>
<var>${line_count}</var>
</assign>
<msg timestamp="20170913 19:06:30.354" level="INFO">0 lines</msg>
<msg timestamp="20170913 19:06:30.354" level="INFO">${line_count} = 0</msg>
<status status="PASS" endtime="20170913 19:06:30.354" starttime="20170913 19:06:30.353"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${line_count}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20170913 19:06:30.354" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20170913 19:06:30.354" level="FAIL">0 != 2</msg>
<status status="FAIL" endtime="20170913 19:06:30.354" starttime="20170913 19:06:30.354"></status>
</kw>
<status status="FAIL" endtime="20170913 19:06:30.355" starttime="20170913 19:06:30.349"></status>
</kw>
<kw name="Check XtremWeb Server Start From Log" library="XWServer">
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<kw name="Log XtremWeb Process Log File" library="XWServer">
<kw name="Log File" library="OperatingSystem">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<msg timestamp="20170913 19:06:35.359" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170913 19:06:35.367" level="INFO">Wed Sep 13 19:06:30 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : checking launch url
Wed Sep 13 19:06:30 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] WARNING : no launcher URL defined
Wed Sep 13 19:06:30 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : launching SmartSockets hub
[13/Sep/2017:19:06:32 +0000] [main_1] ERROR : setRole : role redefined ?! (was SERVER)
[13/Sep/2017:19:06:33 +0000] [xtremweb.database.DBConnPoolThread_main_1] INFO : Connection to database jdbc:mysql://localhost/xtremweb is ok, 70 created
[13/Sep/2017:19:06:33 +0000] [xtremweb.dispatcher.DBInterface_main_1] WARN : Can't retrieve any app
[13/Sep/2017:19:06:33 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't create ProxyValidator
[13/Sep/2017:19:06:33 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.io.FileNotFoundException: /tmp/castore (No such file or directory) (/tmp/castore (No such file or directory))
[13/Sep/2017:19:06:33 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't add CA certificates to keystore
[13/Sep/2017:19:06:33 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.lang.NullPointerException (null)
[13/Sep/2017:19:06:33 +0000] [xtremweb.dispatcher.HashTaskSet_TaskSet_14] INFO : TaskSet started (300000)
[13/Sep/2017:19:06:34 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : still waiting task set...
[13/Sep/2017:19:06:34 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : UDP server not started
[13/Sep/2017:19:06:34 +0000] [xtremweb.communications.TCPServer_TCPServerNIO_15] INFO : started, listening on port : 4321
log4j:WARN No appenders could be found for logger (org.eclipse.jetty.util.log).
log4j:WARN Please initialize the log4j system properly.
log4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.
[13/Sep/2017:19:06:34 +0000] [xtremweb.communications.HTTPServer_main_1] INFO : started, listening on port : 9443
[13/Sep/2017:19:06:34 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : FACEBOOK : java.net.MalformedURLException: no protocol: 
[13/Sep/2017:19:06:34 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : GOOGLE : java.net.MalformedURLException: no protocol: 
[13/Sep/2017:19:06:34 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : TWITTER : java.net.MalformedURLException: no protocol: 
[13/Sep/2017:19:06:34 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : YAHOO : java.net.MalformedURLException: no protocol: 
[13/Sep/2017:19:06:34 +0000] [main_1] ERROR : Can't add new entry to keystore
[13/Sep/2017:19:06:34 +0000] [main_1] WARN : javax.net.ssl.SSLHandshakeException: sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target (sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target)
[13/Sep/2017:19:06:34 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : XWHEP Dispatcher(10.6.0-head) started [Wed Sep 13 19:06:34 UTC 2017]
[13/Sep/2017:19:06:34 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : DB vendor  = mysql
[13/Sep/2017:19:06:34 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : mileStone  = 
[13/Sep/2017:19:06:34 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Time out   = 15000
[13/Sep/2017:19:06:34 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Disk opt'd = true
[13/Sep/2017:19:06:34 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Net  opt'd = true
[13/Sep/2017:19:06:34 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : NIO        = true
XWHEP Dispatcher started  Wed Sep 13 19:06:34 UTC 2017
Name             : vagrant-ubuntu-trusty-64
Version          : 10.6.0-head
Identity         : 
XWRole           : SERVER
Started on       : Wed Sep 13 19:06:32 UTC 2017
Scheduler        : xtremweb.dispatcher.MatchingScheduler
SmartSockets hub : 172.28.128.3/172.17.0.1/10.0.2.15-4329#56.1c.1e.e6.cc.7c.00.00.07.ce.02.42.7b.de.a1.dc~vagrant
Server HTTP      : true
Alive            : 300
Alive time out   : 900
Polling time out : 15000
Optimize zip     : true
Optimize network : true
NIO              : true
Comm layer       : xtremweb.communications.TCPClient
Socket time out  : 60000
Socket retries   : 50
Max connections  : 200
TCP port         : 4321
UDP port         : 4323
HTPP  port       : 80
HTPPS port       : 9443
Sun RPC interposition port : 4328
Sandbox path : /usr/bin/lxc
Sandbox launch args : 
Host &lt;host&gt;&lt;uid&gt;443ca786-cd61-4fb9-aa75-6e9228f449e5&lt;/uid&gt;&lt;accessrights&gt;0x755&lt;/accessrights&gt;&lt;name&gt;vagrant-ubuntu-trusty-64&lt;/name&gt;&lt;cpuload&gt;50&lt;/cpuload&gt;&lt;natedipaddr&gt;10.0.2.15&lt;/natedipaddr&gt;&lt;ipaddr&gt;10.0.2.15&lt;/ipaddr&gt;&lt;hwaddr&gt;&lt;/hwaddr&gt;&lt;timezone&gt;Etc/UTC&lt;/timezone&gt;&lt;os&gt;LINUX&lt;/os&gt;&lt;osversion&gt;3.13.0-129-generic&lt;/osversion&gt;&lt;javaversion&gt;1.8.0_141&lt;/javaversion&gt;&lt;javadatamodel&gt;64&lt;/javadatamodel&gt;&lt;cputype&gt;AMD64&lt;/cputype&gt;&lt;cpunb&gt;1&lt;/cpunb&gt;&lt;cpumodel&gt;unknown&lt;/cpumodel&gt;&lt;cpuspeed&gt;0&lt;/cpuspeed&gt;&lt;totalmem&gt;0&lt;/totalmem&gt;&lt;totalswap&gt;0&lt;/totalswap&gt;&lt;totaltmp&gt;40284&lt;/totaltmp&gt;&lt;freetmp&gt;37272&lt;/freetmp&gt;&lt;project&gt;&lt;/project&gt;&lt;active&gt;true&lt;/active&gt;&lt;incomingconnections&gt;false&lt;/incomingconnections&gt;&lt;available&gt;false&lt;/available&gt;&lt;pilotjob&gt;false&lt;/pilotjob&gt;&lt;sgid&gt;&lt;/sgid&gt;&lt;timeout&gt;15000&lt;/timeout&gt;&lt;traces&gt;false&lt;/traces&gt;&lt;acceptbin&gt;false&lt;/acceptbin&gt;&lt;version&gt;10.6.0-head&lt;/version&gt;&lt;/host&gt;
[13/Sep/2017:19:06:34 +0000] [xtremweb.communications.HTTPServer_HTTPServer_218] INFO : started, listening on port : 9443
</msg>
<status status="PASS" endtime="20170913 19:06:35.367" starttime="20170913 19:06:35.358"></status>
</kw>
<status status="PASS" endtime="20170913 19:06:35.367" starttime="20170913 19:06:35.358"></status>
</kw>
<kw name="Grep File" library="OperatingSystem">
<doc>Returns the lines of the specified file that match the ``pattern``.</doc>
<arguments>
<arg>${log}</arg>
<arg>listening on port : ${XWCONFIGURE.VALUES.HTTPSPORT}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20170913 19:06:35.368" html="yes" level="INFO">Reading file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170913 19:06:35.369" level="INFO">2 out of 59 lines matched</msg>
<msg timestamp="20170913 19:06:35.369" level="INFO">${ret} = [13/Sep/2017:19:06:34 +0000] [xtremweb.communications.HTTPServer_main_1] INFO : started, listening on port : 9443
[13/Sep/2017:19:06:34 +0000] [xtremweb.communications.HTTPServer_HTTPServer_218] INFO ...</msg>
<status status="PASS" endtime="20170913 19:06:35.369" starttime="20170913 19:06:35.367"></status>
</kw>
<kw name="Get Line Count" library="String">
<doc>Returns and logs the number of lines in the given string.</doc>
<arguments>
<arg>${ret}</arg>
</arguments>
<assign>
<var>${line_count}</var>
</assign>
<msg timestamp="20170913 19:06:35.370" level="INFO">2 lines</msg>
<msg timestamp="20170913 19:06:35.370" level="INFO">${line_count} = 2</msg>
<status status="PASS" endtime="20170913 19:06:35.370" starttime="20170913 19:06:35.369"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${line_count}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20170913 19:06:35.370" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170913 19:06:35.370" starttime="20170913 19:06:35.370"></status>
</kw>
<status status="PASS" endtime="20170913 19:06:35.371" starttime="20170913 19:06:35.357"></status>
</kw>
<status status="PASS" endtime="20170913 19:06:35.371" starttime="20170913 19:06:30.349"></status>
</kw>
<kw name="Log XtremWeb Process Log File" library="XWServer">
<kw name="Log File" library="OperatingSystem">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<msg timestamp="20170913 19:06:35.371" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170913 19:06:35.372" level="INFO">Wed Sep 13 19:06:30 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : checking launch url
Wed Sep 13 19:06:30 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] WARNING : no launcher URL defined
Wed Sep 13 19:06:30 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : launching SmartSockets hub
[13/Sep/2017:19:06:32 +0000] [main_1] ERROR : setRole : role redefined ?! (was SERVER)
[13/Sep/2017:19:06:33 +0000] [xtremweb.database.DBConnPoolThread_main_1] INFO : Connection to database jdbc:mysql://localhost/xtremweb is ok, 70 created
[13/Sep/2017:19:06:33 +0000] [xtremweb.dispatcher.DBInterface_main_1] WARN : Can't retrieve any app
[13/Sep/2017:19:06:33 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't create ProxyValidator
[13/Sep/2017:19:06:33 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.io.FileNotFoundException: /tmp/castore (No such file or directory) (/tmp/castore (No such file or directory))
[13/Sep/2017:19:06:33 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't add CA certificates to keystore
[13/Sep/2017:19:06:33 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.lang.NullPointerException (null)
[13/Sep/2017:19:06:33 +0000] [xtremweb.dispatcher.HashTaskSet_TaskSet_14] INFO : TaskSet started (300000)
[13/Sep/2017:19:06:34 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : still waiting task set...
[13/Sep/2017:19:06:34 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : UDP server not started
[13/Sep/2017:19:06:34 +0000] [xtremweb.communications.TCPServer_TCPServerNIO_15] INFO : started, listening on port : 4321
log4j:WARN No appenders could be found for logger (org.eclipse.jetty.util.log).
log4j:WARN Please initialize the log4j system properly.
log4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.
[13/Sep/2017:19:06:34 +0000] [xtremweb.communications.HTTPServer_main_1] INFO : started, listening on port : 9443
[13/Sep/2017:19:06:34 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : FACEBOOK : java.net.MalformedURLException: no protocol: 
[13/Sep/2017:19:06:34 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : GOOGLE : java.net.MalformedURLException: no protocol: 
[13/Sep/2017:19:06:34 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : TWITTER : java.net.MalformedURLException: no protocol: 
[13/Sep/2017:19:06:34 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : YAHOO : java.net.MalformedURLException: no protocol: 
[13/Sep/2017:19:06:34 +0000] [main_1] ERROR : Can't add new entry to keystore
[13/Sep/2017:19:06:34 +0000] [main_1] WARN : javax.net.ssl.SSLHandshakeException: sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target (sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target)
[13/Sep/2017:19:06:34 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : XWHEP Dispatcher(10.6.0-head) started [Wed Sep 13 19:06:34 UTC 2017]
[13/Sep/2017:19:06:34 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : DB vendor  = mysql
[13/Sep/2017:19:06:34 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : mileStone  = 
[13/Sep/2017:19:06:34 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Time out   = 15000
[13/Sep/2017:19:06:34 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Disk opt'd = true
[13/Sep/2017:19:06:34 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Net  opt'd = true
[13/Sep/2017:19:06:34 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : NIO        = true
XWHEP Dispatcher started  Wed Sep 13 19:06:34 UTC 2017
Name             : vagrant-ubuntu-trusty-64
Version          : 10.6.0-head
Identity         : 
XWRole           : SERVER
Started on       : Wed Sep 13 19:06:32 UTC 2017
Scheduler        : xtremweb.dispatcher.MatchingScheduler
SmartSockets hub : 172.28.128.3/172.17.0.1/10.0.2.15-4329#56.1c.1e.e6.cc.7c.00.00.07.ce.02.42.7b.de.a1.dc~vagrant
Server HTTP      : true
Alive            : 300
Alive time out   : 900
Polling time out : 15000
Optimize zip     : true
Optimize network : true
NIO              : true
Comm layer       : xtremweb.communications.TCPClient
Socket time out  : 60000
Socket retries   : 50
Max connections  : 200
TCP port         : 4321
UDP port         : 4323
HTPP  port       : 80
HTPPS port       : 9443
Sun RPC interposition port : 4328
Sandbox path : /usr/bin/lxc
Sandbox launch args : 
Host &lt;host&gt;&lt;uid&gt;443ca786-cd61-4fb9-aa75-6e9228f449e5&lt;/uid&gt;&lt;accessrights&gt;0x755&lt;/accessrights&gt;&lt;name&gt;vagrant-ubuntu-trusty-64&lt;/name&gt;&lt;cpuload&gt;50&lt;/cpuload&gt;&lt;natedipaddr&gt;10.0.2.15&lt;/natedipaddr&gt;&lt;ipaddr&gt;10.0.2.15&lt;/ipaddr&gt;&lt;hwaddr&gt;&lt;/hwaddr&gt;&lt;timezone&gt;Etc/UTC&lt;/timezone&gt;&lt;os&gt;LINUX&lt;/os&gt;&lt;osversion&gt;3.13.0-129-generic&lt;/osversion&gt;&lt;javaversion&gt;1.8.0_141&lt;/javaversion&gt;&lt;javadatamodel&gt;64&lt;/javadatamodel&gt;&lt;cputype&gt;AMD64&lt;/cputype&gt;&lt;cpunb&gt;1&lt;/cpunb&gt;&lt;cpumodel&gt;unknown&lt;/cpumodel&gt;&lt;cpuspeed&gt;0&lt;/cpuspeed&gt;&lt;totalmem&gt;0&lt;/totalmem&gt;&lt;totalswap&gt;0&lt;/totalswap&gt;&lt;totaltmp&gt;40284&lt;/totaltmp&gt;&lt;freetmp&gt;37272&lt;/freetmp&gt;&lt;project&gt;&lt;/project&gt;&lt;active&gt;true&lt;/active&gt;&lt;incomingconnections&gt;false&lt;/incomingconnections&gt;&lt;available&gt;false&lt;/available&gt;&lt;pilotjob&gt;false&lt;/pilotjob&gt;&lt;sgid&gt;&lt;/sgid&gt;&lt;timeout&gt;15000&lt;/timeout&gt;&lt;traces&gt;false&lt;/traces&gt;&lt;acceptbin&gt;false&lt;/acceptbin&gt;&lt;version&gt;10.6.0-head&lt;/version&gt;&lt;/host&gt;
[13/Sep/2017:19:06:34 +0000] [xtremweb.communications.HTTPServer_HTTPServer_218] INFO : started, listening on port : 9443
</msg>
<status status="PASS" endtime="20170913 19:06:35.372" starttime="20170913 19:06:35.371"></status>
</kw>
<status status="PASS" endtime="20170913 19:06:35.372" starttime="20170913 19:06:35.371"></status>
</kw>
<status status="PASS" endtime="20170913 19:06:35.372" starttime="20170913 19:06:30.336"></status>
</kw>
<kw name="Start XtremWeb Worker" library="XWWorker">
<arguments>
<arg>${DIST_XWHEP_PATH}</arg>
</arguments>
<kw name="File Should Exist" library="OperatingSystem">
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xtremweb.worker.conf</arg>
</arguments>
<msg timestamp="20170913 19:06:35.373" html="yes" level="INFO">File '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf&lt;/a&gt;' exists.</msg>
<status status="PASS" endtime="20170913 19:06:35.374" starttime="20170913 19:06:35.373"></status>
</kw>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xtremweb.worker.conf</arg>
</arguments>
<assign>
<var>${config_content}</var>
</assign>
<msg timestamp="20170913 19:06:35.374" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf&lt;/a&gt;'.</msg>
<msg timestamp="20170913 19:06:35.375" level="INFO">${config_content} = #
# Copyrights     : CNRS
# Author         : Oleg Lodygensky
# Acknowledgment : XtremWeb-HEP is based on XtremWeb 1.8.0 by inria : http://www.xtremweb.net/
# Web            : http://www.xtremweb-hep.o...</msg>
<status status="PASS" endtime="20170913 19:06:35.375" starttime="20170913 19:06:35.374"></status>
</kw>
<kw name="Remove String Using Regexp" library="String">
<doc>Removes ``patterns`` from the given ``string``.</doc>
<arguments>
<arg>${config_content}</arg>
<arg>LAUNCHERURL=${XWCONFIGURE.VALUES.XWUPGRADEURL}</arg>
</arguments>
<assign>
<var>${config_content_filtered}</var>
</assign>
<msg timestamp="20170913 19:06:35.375" level="INFO">${config_content_filtered} = #
# Copyrights     : CNRS
# Author         : Oleg Lodygensky
# Acknowledgment : XtremWeb-HEP is based on XtremWeb 1.8.0 by inria : http://www.xtremweb.net/
# Web            : http://www.xtremweb-hep.o...</msg>
<status status="PASS" endtime="20170913 19:06:35.375" starttime="20170913 19:06:35.375"></status>
</kw>
<kw name="Create File" library="OperatingSystem">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xtremweb.worker.conf</arg>
<arg>content=${config_content_filtered}</arg>
</arguments>
<msg timestamp="20170913 19:06:35.378" html="yes" level="INFO">Created file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170913 19:06:35.378" starttime="20170913 19:06:35.376"></status>
</kw>
<kw name="Remove File" library="OperatingSystem">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.worker.process.log</arg>
</arguments>
<msg timestamp="20170913 19:06:35.379" html="yes" level="INFO">Removed file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.worker.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.worker.process.log&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170913 19:06:35.379" starttime="20170913 19:06:35.378"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/bin/xtremweb.worker console</arg>
<arg>shell=yes</arg>
<arg>stderr=STDOUT</arg>
<arg>stdout=${DIST_XWHEP_PATH}/xwhep.worker.process.log</arg>
</arguments>
<assign>
<var>${created_process}</var>
</assign>
<msg timestamp="20170913 19:06:35.380" level="INFO">Starting process:
/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/xtremweb.worker console</msg>
<msg timestamp="20170913 19:06:35.384" level="INFO">${created_process} = 29</msg>
<status status="PASS" endtime="20170913 19:06:35.384" starttime="20170913 19:06:35.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${WORKER_PROCESS}</arg>
<arg>${created_process}</arg>
</arguments>
<msg timestamp="20170913 19:06:35.385" level="INFO">${WORKER_PROCESS} = 29</msg>
<status status="PASS" endtime="20170913 19:06:35.385" starttime="20170913 19:06:35.384"></status>
</kw>
<kw name="Log File" library="OperatingSystem">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.worker.process.log</arg>
</arguments>
<msg timestamp="20170913 19:06:35.385" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.worker.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.worker.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170913 19:06:35.387" level="INFO"></msg>
<status status="PASS" endtime="20170913 19:06:35.387" starttime="20170913 19:06:35.385"></status>
</kw>
<status status="PASS" endtime="20170913 19:06:35.387" starttime="20170913 19:06:35.372"></status>
</kw>
<status status="PASS" endtime="20170913 19:06:35.387" starttime="20170913 19:06:30.239"></status>
</kw>
<status status="PASS" endtime="20170913 19:06:35.387" starttime="20170913 19:05:40.640"></status>
</kw>
<kw name="Start Testrpc" library="ETHTestrpc">
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>testrpc</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${created_process}</var>
</assign>
<msg timestamp="20170913 19:06:35.389" level="INFO">Starting process:
testrpc</msg>
<msg timestamp="20170913 19:06:35.393" level="INFO">${created_process} = 30</msg>
<status status="PASS" endtime="20170913 19:06:35.393" starttime="20170913 19:06:35.388"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TESTRPC_PROCESS}</arg>
<arg>${created_process}</arg>
</arguments>
<msg timestamp="20170913 19:06:35.394" level="INFO">${TESTRPC_PROCESS} = 30</msg>
<status status="PASS" endtime="20170913 19:06:35.394" starttime="20170913 19:06:35.393"></status>
</kw>
<status status="PASS" endtime="20170913 19:06:35.394" starttime="20170913 19:06:35.388"></status>
</kw>
<kw name="Init Oracle" library="IexecOracle">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${IEXEC_ORACLE_FORCE_GIT_CLONE}' == 'true'</arg>
<arg>Git Clone Iexec Oracle</arg>
</arguments>
<status status="PASS" endtime="20170913 19:06:35.396" starttime="20170913 19:06:35.395"></status>
</kw>
<kw name="Npm Install Iexec Oracle" library="IexecOracle">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd iexec-oracle &amp;&amp; npm install</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${npm_result}</var>
</assign>
<msg timestamp="20170913 19:06:35.397" level="INFO">Starting process:
cd iexec-oracle &amp;&amp; npm install</msg>
<msg timestamp="20170913 19:06:35.408" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170913 19:06:36.698" level="INFO">Process completed.</msg>
<msg timestamp="20170913 19:06:36.698" level="INFO">${npm_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170913 19:06:36.698" starttime="20170913 19:06:35.396"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${npm_result.stderr}</arg>
</arguments>
<msg timestamp="20170913 19:06:36.699" level="INFO">npm WARN xtremwebinterface@1.0.0 No repository field.</msg>
<status status="PASS" endtime="20170913 19:06:36.699" starttime="20170913 19:06:36.699"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${npm_result.stdout}</arg>
</arguments>
<msg timestamp="20170913 19:06:36.700" level="INFO"></msg>
<status status="PASS" endtime="20170913 19:06:36.700" starttime="20170913 19:06:36.699"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${npm_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170913 19:06:36.700" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170913 19:06:36.700" starttime="20170913 19:06:36.700"></status>
</kw>
<status status="PASS" endtime="20170913 19:06:36.700" starttime="20170913 19:06:35.396"></status>
</kw>
<kw name="Iexec Oracle Truffle Migrate" library="IexecOracle">
<tags>
<tag>Smart contract Tests</tag>
</tags>
<doc>call truffle migrate</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>rm -rf iexec-oracle/build</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${rm_result}</var>
</assign>
<msg timestamp="20170913 19:06:36.701" level="INFO">Starting process:
rm -rf iexec-oracle/build</msg>
<msg timestamp="20170913 19:06:36.703" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170913 19:06:36.715" level="INFO">Process completed.</msg>
<msg timestamp="20170913 19:06:36.715" level="INFO">${rm_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170913 19:06:36.715" starttime="20170913 19:06:36.701"></status>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<doc>Verifies that the given item is empty.</doc>
<arguments>
<arg>${rm_result.stderr}</arg>
</arguments>
<msg timestamp="20170913 19:06:36.716" level="INFO">Length is 0</msg>
<status status="PASS" endtime="20170913 19:06:36.716" starttime="20170913 19:06:36.716"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rm_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170913 19:06:36.717" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170913 19:06:36.717" starttime="20170913 19:06:36.716"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd iexec-oracle &amp;&amp; ./node_modules/.bin/truffle migrate</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${truffletest_result}</var>
</assign>
<msg timestamp="20170913 19:06:36.717" level="INFO">Starting process:
cd iexec-oracle &amp;&amp; ./node_modules/.bin/truffle migrate</msg>
<msg timestamp="20170913 19:06:36.720" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170913 19:06:44.735" level="INFO">Process completed.</msg>
<msg timestamp="20170913 19:06:44.735" level="INFO">${truffletest_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170913 19:06:44.735" starttime="20170913 19:06:36.717"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stderr}</arg>
</arguments>
<msg timestamp="20170913 19:06:44.736" level="INFO"></msg>
<status status="PASS" endtime="20170913 19:06:44.736" starttime="20170913 19:06:44.735"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
</arguments>
<msg timestamp="20170913 19:06:44.736" level="INFO">Compiling ./contracts/HelloWorldTest.sol...
Compiling ./contracts/IexecLib.sol...
Compiling ./contracts/IexecOracle.sol...
Compiling ./contracts/IexecOracleAPI.sol...
Compiling ./contracts/Migrations.sol...
Compiling ./contracts/SafeMath.sol...

Compilation warnings encountered:

/home/vagrant/iexecdev/iexec-node/tests/rf/iexec-oracle/contracts/IexecOracle.sol:24:7: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
      string  name;
      ^----------^
,/home/vagrant/iexecdev/iexec-node/tests/rf/iexec-oracle/contracts/IexecOracle.sol:27:7: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
      string stdout;
      ^-----------^
,/home/vagrant/iexecdev/iexec-node/tests/rf/iexec-oracle/contracts/IexecOracle.sol:28:7: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
      string stderr;
      ^-----------^

Writing artifacts to ./build/contracts

Using network 'development'.

Running migration: 1_initial_migration.js
  Deploying Migrations...
  ... 0xb013b0af48e0444ca9a4a46b87ece6239c5e512443275ee9bf5f1993da4264fe
  Migrations: 0x2d9af0e859aa19494f01885dfef18a46f3f0469f
Saving successful migration to network...
  ... 0x64b45d20eb6a6ad374dc0ac25bfee3c14d7de80f620afa2bdf69678c8a2881e8
Saving artifacts...
Running migration: 2_deploy_contracts.js
  Deploying IexecOracle...
  ... 0x8c4d218917281467efdeafdbbd8ee7c314b2179db13de81bba89d0b31c7de0f5
  IexecOracle: 0x6de06970683f564e54356106341257634ec36fd5
IexecOracle deployed at address :0x6de06970683f564e54356106341257634ec36fd5
  Deploying HelloWorldTest...
  ... 0x9dd86391ea5037447b732b7eba4aee3c86963e31fcfb1884e58303d190288c56
  HelloWorldTest: 0x11cb407a3393198d0b6c8e6684a4709a86f408f3
HelloWorldTest deployed at address :0x11cb407a3393198d0b6c8e6684a4709a86f408f3
Saving successful migration to network...
  ... 0x00a4703328656b07d6260ae73c7b46aa39976b2759bf70a1c5c47edf04113656
Saving artifacts...</msg>
<status status="PASS" endtime="20170913 19:06:44.736" starttime="20170913 19:06:44.736"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${truffletest_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170913 19:06:44.737" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170913 19:06:44.737" starttime="20170913 19:06:44.736"></status>
</kw>
<status status="PASS" endtime="20170913 19:06:44.737" starttime="20170913 19:06:36.701"></status>
</kw>
<kw name="Iexec Oracle Set Contract Address In Test" library="IexecOracle">
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>iexec-oracle/build/contracts/IexecOracle.json</arg>
</arguments>
<assign>
<var>${iexecOracle_json_content}</var>
</assign>
<msg timestamp="20170913 19:06:44.737" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/iexec-oracle/build/contracts/IexecOracle.json"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/iexec-oracle/build/contracts/IexecOracle.json&lt;/a&gt;'.</msg>
<msg timestamp="20170913 19:06:44.738" level="INFO">${iexecOracle_json_content} = {
  "contract_name": "IexecOracle",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "user",
          "type": "address"
        },
        {
          "name": "p...</msg>
<status status="PASS" endtime="20170913 19:06:44.738" starttime="20170913 19:06:44.737"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${iexecOracle_json_content}</arg>
<arg>"address": "(?P&lt;smartContractAddress&gt;.*)",</arg>
<arg>smartContractAddress</arg>
</arguments>
<assign>
<var>@{smartContractAddress}</var>
</assign>
<msg timestamp="20170913 19:06:44.739" level="INFO">@{smartContractAddress} = [ 0x6de06970683f564e54356106341257634ec36fd5 ]</msg>
<status status="PASS" endtime="20170913 19:06:44.739" starttime="20170913 19:06:44.738"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>@{smartContractAddress}</arg>
</arguments>
<msg timestamp="20170913 19:06:44.739" level="INFO">0x6de06970683f564e54356106341257634ec36fd5</msg>
<status status="PASS" endtime="20170913 19:06:44.739" starttime="20170913 19:06:44.739"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>@{smartContractAddress}[0]</arg>
</arguments>
<msg timestamp="20170913 19:06:44.740" level="INFO">0x6de06970683f564e54356106341257634ec36fd5</msg>
<status status="PASS" endtime="20170913 19:06:44.740" starttime="20170913 19:06:44.739"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${IEXEC_ORACLE_SM_ADDRESS}</arg>
<arg>@{smartContractAddress}[0]</arg>
</arguments>
<msg timestamp="20170913 19:06:44.740" level="INFO">${IEXEC_ORACLE_SM_ADDRESS} = 0x6de06970683f564e54356106341257634ec36fd5</msg>
<status status="PASS" endtime="20170913 19:06:44.740" starttime="20170913 19:06:44.740"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>sed -i 's/.*return IexecOracle.at(.*/return IexecOracle.at(\"${IEXEC_ORACLE_SM_ADDRESS}\")/g' iexec-oracle/test/rf/*</arg>
</arguments>
<msg timestamp="20170913 19:06:44.741" level="INFO">Running command 'sed -i 's/.*return IexecOracle.at(.*/return IexecOracle.at("0x6de06970683f564e54356106341257634ec36fd5")/g' iexec-oracle/test/rf/* 2&gt;&amp;1'.</msg>
<status status="PASS" endtime="20170913 19:06:44.822" starttime="20170913 19:06:44.740"></status>
</kw>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>iexec-oracle/build/contracts/HelloWorldTest.json</arg>
</arguments>
<assign>
<var>${helloworld_json_content}</var>
</assign>
<msg timestamp="20170913 19:06:44.823" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/iexec-oracle/build/contracts/HelloWorldTest.json"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/iexec-oracle/build/contracts/HelloWorldTest.json&lt;/a&gt;'.</msg>
<msg timestamp="20170913 19:06:44.823" level="INFO">${helloworld_json_content} = {
  "contract_name": "HelloWorldTest",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "callbackType",
          "type": "string"
        },
        {
         ...</msg>
<status status="PASS" endtime="20170913 19:06:44.824" starttime="20170913 19:06:44.822"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${helloworld_json_content}</arg>
<arg>"address": "(?P&lt;smartContractAddress&gt;.*)",</arg>
<arg>smartContractAddress</arg>
</arguments>
<assign>
<var>@{smartContractAddress}</var>
</assign>
<msg timestamp="20170913 19:06:44.824" level="INFO">@{smartContractAddress} = [ 0x11cb407a3393198d0b6c8e6684a4709a86f408f3 ]</msg>
<status status="PASS" endtime="20170913 19:06:44.824" starttime="20170913 19:06:44.824"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>@{smartContractAddress}</arg>
</arguments>
<msg timestamp="20170913 19:06:44.825" level="INFO">0x11cb407a3393198d0b6c8e6684a4709a86f408f3</msg>
<status status="PASS" endtime="20170913 19:06:44.825" starttime="20170913 19:06:44.824"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>@{smartContractAddress}[0]</arg>
</arguments>
<msg timestamp="20170913 19:06:44.825" level="INFO">0x11cb407a3393198d0b6c8e6684a4709a86f408f3</msg>
<status status="PASS" endtime="20170913 19:06:44.825" starttime="20170913 19:06:44.825"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${HELLO_WORLD_SM_ADDRESS}</arg>
<arg>@{smartContractAddress}[0]</arg>
</arguments>
<msg timestamp="20170913 19:06:44.826" level="INFO">${HELLO_WORLD_SM_ADDRESS} = 0x11cb407a3393198d0b6c8e6684a4709a86f408f3</msg>
<status status="PASS" endtime="20170913 19:06:44.826" starttime="20170913 19:06:44.825"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>sed -i 's/.*return HelloWorldTest.at(.*/return HelloWorldTest.at(\"${HELLO_WORLD_SM_ADDRESS}\")/g' iexec-oracle/test/rf/*</arg>
</arguments>
<msg timestamp="20170913 19:06:44.827" level="INFO">Running command 'sed -i 's/.*return HelloWorldTest.at(.*/return HelloWorldTest.at("0x11cb407a3393198d0b6c8e6684a4709a86f408f3")/g' iexec-oracle/test/rf/* 2&gt;&amp;1'.</msg>
<status status="PASS" endtime="20170913 19:06:44.894" starttime="20170913 19:06:44.826"></status>
</kw>
<status status="PASS" endtime="20170913 19:06:44.894" starttime="20170913 19:06:44.737"></status>
</kw>
<status status="PASS" endtime="20170913 19:06:44.894" starttime="20170913 19:06:35.395"></status>
</kw>
<kw name="Init Bridge" library="IexecBridge">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${IEXEC_BRIDGE_FORCE_GIT_CLONE}' == 'true'</arg>
<arg>Git Clone Iexec Bridge</arg>
</arguments>
<status status="PASS" endtime="20170913 19:06:44.895" starttime="20170913 19:06:44.895"></status>
</kw>
<kw name="Npm Install Bridge" library="IexecBridge">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd iexec-bridge &amp;&amp; npm install</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${npm_result}</var>
</assign>
<msg timestamp="20170913 19:06:44.896" level="INFO">Starting process:
cd iexec-bridge &amp;&amp; npm install</msg>
<msg timestamp="20170913 19:06:44.899" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170913 19:06:48.939" level="INFO">Process completed.</msg>
<msg timestamp="20170913 19:06:48.940" level="INFO">${npm_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170913 19:06:48.940" starttime="20170913 19:06:44.896"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${npm_result.stderr}</arg>
</arguments>
<msg timestamp="20170913 19:06:48.941" level="INFO">npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@^1.0.0 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@1.1.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})
npm WARN babel-loader@7.1.2 requires a peer of webpack@2 || 3 but none was installed.</msg>
<status status="PASS" endtime="20170913 19:06:48.941" starttime="20170913 19:06:48.941"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${npm_result.stdout}</arg>
</arguments>
<msg timestamp="20170913 19:06:48.942" level="INFO"></msg>
<status status="PASS" endtime="20170913 19:06:48.942" starttime="20170913 19:06:48.942"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${npm_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170913 19:06:48.942" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170913 19:06:48.942" starttime="20170913 19:06:48.942"></status>
</kw>
<status status="PASS" endtime="20170913 19:06:48.942" starttime="20170913 19:06:44.895"></status>
</kw>
<kw name="Set Oracle Address In Bridge" library="IexecBridge">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>sed -i 's/.*"ContractAddress":.*/"ContractAddress":\"${IEXEC_ORACLE_SM_ADDRESS}\"/g' iexec-bridge/config.json</arg>
</arguments>
<msg timestamp="20170913 19:06:48.944" level="INFO">Running command 'sed -i 's/.*"ContractAddress":.*/"ContractAddress":"0x6de06970683f564e54356106341257634ec36fd5"/g' iexec-bridge/config.json 2&gt;&amp;1'.</msg>
<status status="PASS" endtime="20170913 19:06:48.956" starttime="20170913 19:06:48.943"></status>
</kw>
<status status="PASS" endtime="20170913 19:06:48.957" starttime="20170913 19:06:48.943"></status>
</kw>
<kw name="Set XtremWeb Config In Bridge" library="IexecBridge">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${XWCONFIGURE.VALUES.XWSERVER}</arg>
</arguments>
<msg timestamp="20170913 19:06:48.958" level="INFO">localhost</msg>
<status status="PASS" endtime="20170913 19:06:48.958" starttime="20170913 19:06:48.957"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>sed -i "s/.*const LOCALHOSTNAME = .*/const LOCALHOSTNAME = '${XWCONFIGURE.VALUES.XWSERVER}';/g" iexec-bridge/xwhep.js</arg>
</arguments>
<msg timestamp="20170913 19:06:48.959" level="INFO">Running command 'sed -i "s/.*const LOCALHOSTNAME = .*/const LOCALHOSTNAME = 'localhost';/g" iexec-bridge/xwhep.js 2&gt;&amp;1'.</msg>
<status status="PASS" endtime="20170913 19:06:48.969" starttime="20170913 19:06:48.958"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${XWCONFIGURE.VALUES.HTTPSPORT}</arg>
</arguments>
<msg timestamp="20170913 19:06:48.970" level="INFO">9443</msg>
<status status="PASS" endtime="20170913 19:06:48.970" starttime="20170913 19:06:48.970"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>sed -i "s/.*const LOCALHOSTPORT = .*/const LOCALHOSTPORT = ${XWCONFIGURE.VALUES.HTTPSPORT};/g" iexec-bridge/xwhep.js</arg>
</arguments>
<msg timestamp="20170913 19:06:48.971" level="INFO">Running command 'sed -i "s/.*const LOCALHOSTPORT = .*/const LOCALHOSTPORT = 9443;/g" iexec-bridge/xwhep.js 2&gt;&amp;1'.</msg>
<status status="PASS" endtime="20170913 19:06:48.985" starttime="20170913 19:06:48.970"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${XWCONFIGURE.VALUES.XWADMINLOGIN}</arg>
</arguments>
<msg timestamp="20170913 19:06:48.986" level="INFO">admin</msg>
<status status="PASS" endtime="20170913 19:06:48.986" starttime="20170913 19:06:48.985"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>sed -i "s/.*const LOGIN = .*/const LOGIN = '${XWCONFIGURE.VALUES.XWADMINLOGIN}';/g" iexec-bridge/xwhep.js</arg>
</arguments>
<msg timestamp="20170913 19:06:48.987" level="INFO">Running command 'sed -i "s/.*const LOGIN = .*/const LOGIN = 'admin';/g" iexec-bridge/xwhep.js 2&gt;&amp;1'.</msg>
<status status="PASS" endtime="20170913 19:06:48.996" starttime="20170913 19:06:48.986"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${XWCONFIGURE.VALUES.XWADMINPASSWORD}</arg>
</arguments>
<msg timestamp="20170913 19:06:48.997" level="INFO">admin</msg>
<status status="PASS" endtime="20170913 19:06:48.997" starttime="20170913 19:06:48.997"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>sed -i "s/.*const PASSWD = .*/const PASSWD = '${XWCONFIGURE.VALUES.XWADMINPASSWORD}';/g" iexec-bridge/xwhep.js</arg>
</arguments>
<msg timestamp="20170913 19:06:48.998" level="INFO">Running command 'sed -i "s/.*const PASSWD = .*/const PASSWD = 'admin';/g" iexec-bridge/xwhep.js 2&gt;&amp;1'.</msg>
<status status="PASS" endtime="20170913 19:06:49.012" starttime="20170913 19:06:48.997"></status>
</kw>
<status status="PASS" endtime="20170913 19:06:49.012" starttime="20170913 19:06:48.957"></status>
</kw>
<status status="PASS" endtime="20170913 19:06:49.012" starttime="20170913 19:06:44.894"></status>
</kw>
<kw name="Start Bridge" library="IexecBridge">
<kw name="Remove File" library="OperatingSystem">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>iexec-bridge/bridge.log</arg>
</arguments>
<msg timestamp="20170913 19:06:49.014" html="yes" level="INFO">Removed file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/iexec-bridge/bridge.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/iexec-bridge/bridge.log&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170913 19:06:49.014" starttime="20170913 19:06:49.013"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>cd iexec-bridge &amp;&amp; npm run devbridgelog</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${created_process}</var>
</assign>
<msg timestamp="20170913 19:06:49.014" level="INFO">Starting process:
cd iexec-bridge &amp;&amp; npm run devbridgelog</msg>
<msg timestamp="20170913 19:06:49.017" level="INFO">${created_process} = 35</msg>
<status status="PASS" endtime="20170913 19:06:49.018" starttime="20170913 19:06:49.014"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${BRIDGE_PROCESS}</arg>
<arg>${created_process}</arg>
</arguments>
<msg timestamp="20170913 19:06:49.018" level="INFO">${BRIDGE_PROCESS} = 35</msg>
<status status="PASS" endtime="20170913 19:06:49.018" starttime="20170913 19:06:49.018"></status>
</kw>
<status status="PASS" endtime="20170913 19:06:49.019" starttime="20170913 19:06:49.012"></status>
</kw>
<status status="PASS" endtime="20170913 19:06:49.019" starttime="20170913 19:05:40.639"></status>
</kw>
<test id="s1-s2-t1" name="Test HelloWorld Submit Iexec">
<kw name="Get User Address" library="IexceOracleSmartContract">
<assign>
<var>${user}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd iexec-oracle &amp;&amp; ./node_modules/.bin/truffle test test/rf/getUserAddress.js</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${truffletest_result}</var>
</assign>
<msg timestamp="20170913 19:06:49.020" level="INFO">Starting process:
cd iexec-oracle &amp;&amp; ./node_modules/.bin/truffle test test/rf/getUserAddress.js</msg>
<msg timestamp="20170913 19:06:49.023" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170913 19:06:51.902" level="INFO">Process completed.</msg>
<msg timestamp="20170913 19:06:51.902" level="INFO">${truffletest_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170913 19:06:51.902" starttime="20170913 19:06:49.020"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stderr}</arg>
</arguments>
<msg timestamp="20170913 19:06:51.903" level="INFO"></msg>
<status status="PASS" endtime="20170913 19:06:51.903" starttime="20170913 19:06:51.903"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
</arguments>
<msg timestamp="20170913 19:06:51.904" level="INFO">Using network 'development'.

IexecOracle deployed at address :0xccc31fd573adba655f966b0789546a03740f5339
HelloWorldTest deployed at address :0x47e318b9acf8d22917115da81d6ef9232d9f6f92

[0m[0m
[0m  Contract: IexecOracle[0m
BEGIN_LOG0x97637172c0b322c549d5890c67e379e903109df2END_LOG
  [32m  ✓[0m[90m get a creator[0m


[92m [0m[32m 1 passing[0m[90m (75ms)[0m
</msg>
<status status="PASS" endtime="20170913 19:06:51.904" starttime="20170913 19:06:51.903"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${truffletest_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170913 19:06:51.904" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170913 19:06:51.905" starttime="20170913 19:06:51.904"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
<arg>BEGIN_LOG(?P&lt;address&gt;.*)END_LOG</arg>
<arg>address</arg>
</arguments>
<assign>
<var>@{address}</var>
</assign>
<msg timestamp="20170913 19:06:51.905" level="INFO">@{address} = [ 0x97637172c0b322c549d5890c67e379e903109df2 ]</msg>
<status status="PASS" endtime="20170913 19:06:51.905" starttime="20170913 19:06:51.905"></status>
</kw>
<msg timestamp="20170913 19:06:51.905" level="INFO">${user} = 0x97637172c0b322c549d5890c67e379e903109df2</msg>
<status status="PASS" endtime="20170913 19:06:51.905" starttime="20170913 19:06:49.020"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${USER}</arg>
<arg>${user}</arg>
</arguments>
<msg timestamp="20170913 19:06:51.906" level="INFO">${USER} = 0x97637172c0b322c549d5890c67e379e903109df2</msg>
<status status="PASS" endtime="20170913 19:06:51.906" starttime="20170913 19:06:51.906"></status>
</kw>
<kw name="Get Creator Address" library="IexceOracleSmartContract">
<assign>
<var>${creator}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd iexec-oracle &amp;&amp; ./node_modules/.bin/truffle test test/rf/getCreatorAddress.js</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${truffletest_result}</var>
</assign>
<msg timestamp="20170913 19:06:51.907" level="INFO">Starting process:
cd iexec-oracle &amp;&amp; ./node_modules/.bin/truffle test test/rf/getCreatorAddress.js</msg>
<msg timestamp="20170913 19:06:51.910" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170913 19:06:54.354" level="INFO">Process completed.</msg>
<msg timestamp="20170913 19:06:54.355" level="INFO">${truffletest_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170913 19:06:54.355" starttime="20170913 19:06:51.907"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stderr}</arg>
</arguments>
<msg timestamp="20170913 19:06:54.357" level="INFO"></msg>
<status status="PASS" endtime="20170913 19:06:54.357" starttime="20170913 19:06:54.355"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
</arguments>
<msg timestamp="20170913 19:06:54.357" level="INFO">Using network 'development'.

IexecOracle deployed at address :0x11b0063dc0046890b9bfb6287aa8b90630e975a0
HelloWorldTest deployed at address :0x8b711ce3bc08207c75f432fde5303fd4f8a5d400

[0m[0m
[0m  Contract: IexecOracle[0m
BEGIN_LOG0xe8a4cbaf95a798ed400505980d6a1d2423d093d5END_LOG
  [32m  ✓[0m[90m get a creator[0m


[92m [0m[32m 1 passing[0m[90m (60ms)[0m
</msg>
<status status="PASS" endtime="20170913 19:06:54.357" starttime="20170913 19:06:54.357"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${truffletest_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170913 19:06:54.358" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170913 19:06:54.358" starttime="20170913 19:06:54.358"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
<arg>BEGIN_LOG(?P&lt;address&gt;.*)END_LOG</arg>
<arg>address</arg>
</arguments>
<assign>
<var>@{address}</var>
</assign>
<msg timestamp="20170913 19:06:54.359" level="INFO">@{address} = [ 0xe8a4cbaf95a798ed400505980d6a1d2423d093d5 ]</msg>
<status status="PASS" endtime="20170913 19:06:54.359" starttime="20170913 19:06:54.358"></status>
</kw>
<msg timestamp="20170913 19:06:54.359" level="INFO">${creator} = 0xe8a4cbaf95a798ed400505980d6a1d2423d093d5</msg>
<status status="PASS" endtime="20170913 19:06:54.359" starttime="20170913 19:06:51.906"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${CREATOR}</arg>
<arg>${creator}</arg>
</arguments>
<msg timestamp="20170913 19:06:54.360" level="INFO">${CREATOR} = 0xe8a4cbaf95a798ed400505980d6a1d2423d093d5</msg>
<status status="PASS" endtime="20170913 19:06:54.360" starttime="20170913 19:06:54.359"></status>
</kw>
<kw name="XWSENDAPPCommand" library="XWClient">
<doc>Usage : SENDAPP appName appType cpuType osName URI | UID : inserts/updates an application; URI or UID points to binary file ; application name must be the first parameter</doc>
<arguments>
<arg>echo</arg>
<arg>DEPLOYABLE</arg>
<arg>LINUX</arg>
<arg>AMD64</arg>
<arg>/bin/echo</arg>
</arguments>
<assign>
<var>${app_uid}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd ${DIST_XWHEP_PATH}/bin &amp;&amp; ./xwsendapp ${appName} ${appType} ${cpuType} ${osName} ${uri-udi}</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${cmd_result}</var>
</assign>
<msg timestamp="20170913 19:06:54.361" level="INFO">Starting process:
cd /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin &amp;&amp; ./xwsendapp echo DEPLOYABLE LINUX AMD64 /bin/echo</msg>
<msg timestamp="20170913 19:06:54.364" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170913 19:06:55.011" level="INFO">Process completed.</msg>
<msg timestamp="20170913 19:06:55.011" level="INFO">${cmd_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170913 19:06:55.011" starttime="20170913 19:06:54.361"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stderr}</arg>
</arguments>
<msg timestamp="20170913 19:06:55.012" level="INFO"></msg>
<status status="PASS" endtime="20170913 19:06:55.012" starttime="20170913 19:06:55.011"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
</arguments>
<msg timestamp="20170913 19:06:55.012" level="INFO">xw://vagrant-ubuntu-trusty-64/0d07e4f5-709c-4b1d-ae21-86c9b899db34</msg>
<status status="PASS" endtime="20170913 19:06:55.012" starttime="20170913 19:06:55.012"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${cmd_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170913 19:06:55.013" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170913 19:06:55.013" starttime="20170913 19:06:55.012"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
<arg>-36</arg>
</arguments>
<assign>
<var>${uid}</var>
</assign>
<msg timestamp="20170913 19:06:55.013" level="INFO">${uid} = 0d07e4f5-709c-4b1d-ae21-86c9b899db34</msg>
<status status="PASS" endtime="20170913 19:06:55.013" starttime="20170913 19:06:55.013"></status>
</kw>
<msg timestamp="20170913 19:06:55.013" level="INFO">${app_uid} = 0d07e4f5-709c-4b1d-ae21-86c9b899db34</msg>
<status status="PASS" endtime="20170913 19:06:55.013" starttime="20170913 19:06:54.360"></status>
</kw>
<kw name="Count From Apps Where Uid" library="XWServer">
<arguments>
<arg>${app_uid}</arg>
<arg>1</arg>
</arguments>
<kw name="Count From Table Where Uid" library="MySql">
<arguments>
<arg>apps</arg>
<arg>${uid}</arg>
<arg>${countExpected}</arg>
</arguments>
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170913 19:06:55.015" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170913 19:06:55.016" starttime="20170913 19:06:55.015"></status>
</kw>
<status status="PASS" endtime="20170913 19:06:55.017" starttime="20170913 19:06:55.015"></status>
</kw>
<kw name="Row Count Is Equal To X" library="DatabaseLibrary">
<doc>Check if the number of rows returned from `selectStatement` is equal to the value submitted. If not, then this</doc>
<arguments>
<arg>SELECT * FROM ${table} WHERE uid = '${uid}'</arg>
<arg>${countExpected}</arg>
</arguments>
<msg timestamp="20170913 19:06:55.017" level="INFO">Executing : Row Count Is Equal To X  |  SELECT * FROM apps WHERE uid = '0d07e4f5-709c-4b1d-ae21-86c9b899db34'  |  1 </msg>
<msg timestamp="20170913 19:06:55.017" level="INFO">Executing : Row Count  |  SELECT * FROM apps WHERE uid = '0d07e4f5-709c-4b1d-ae21-86c9b899db34' </msg>
<status status="PASS" endtime="20170913 19:06:55.018" starttime="20170913 19:06:55.017"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170913 19:06:55.018" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170913 19:06:55.019" starttime="20170913 19:06:55.018"></status>
</kw>
<status status="PASS" endtime="20170913 19:06:55.019" starttime="20170913 19:06:55.018"></status>
</kw>
<status status="PASS" endtime="20170913 19:06:55.019" starttime="20170913 19:06:55.014"></status>
</kw>
<status status="PASS" endtime="20170913 19:06:55.019" starttime="20170913 19:06:55.014"></status>
</kw>
<kw name="Count From Works" library="XWServer">
<arguments>
<arg>0</arg>
</arguments>
<kw name="Count From Table" library="MySql">
<arguments>
<arg>works</arg>
<arg>${countExpected}</arg>
</arguments>
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170913 19:06:55.021" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170913 19:06:55.022" starttime="20170913 19:06:55.021"></status>
</kw>
<status status="PASS" endtime="20170913 19:06:55.023" starttime="20170913 19:06:55.020"></status>
</kw>
<kw name="Row Count Is Equal To X" library="DatabaseLibrary">
<doc>Check if the number of rows returned from `selectStatement` is equal to the value submitted. If not, then this</doc>
<arguments>
<arg>SELECT * FROM ${table}</arg>
<arg>${countExpected}</arg>
</arguments>
<msg timestamp="20170913 19:06:55.023" level="INFO">Executing : Row Count Is Equal To X  |  SELECT * FROM works  |  0 </msg>
<msg timestamp="20170913 19:06:55.023" level="INFO">Executing : Row Count  |  SELECT * FROM works </msg>
<status status="PASS" endtime="20170913 19:06:55.024" starttime="20170913 19:06:55.023"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170913 19:06:55.025" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170913 19:06:55.025" starttime="20170913 19:06:55.025"></status>
</kw>
<status status="PASS" endtime="20170913 19:06:55.025" starttime="20170913 19:06:55.024"></status>
</kw>
<status status="PASS" endtime="20170913 19:06:55.025" starttime="20170913 19:06:55.020"></status>
</kw>
<status status="PASS" endtime="20170913 19:06:55.025" starttime="20170913 19:06:55.020"></status>
</kw>
<kw name="SubmitEcho" library="HelloWorldSmartContract">
<arguments>
<arg>HelloWorld!!!</arg>
</arguments>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>sed -i "s/.*return aHelloWorldInstance.iexecSubmit(.*/return aHelloWorldInstance.iexecSubmit(\\"echo\\",\\"${text}\\",{/g" iexec-oracle/test/rf/submitHelloWorldTest.js</arg>
</arguments>
<msg timestamp="20170913 19:06:55.027" level="INFO">Running command 'sed -i "s/.*return aHelloWorldInstance.iexecSubmit(.*/return aHelloWorldInstance.iexecSubmit(\"echo\",\"HelloWorld!!!\",{/g" iexec-oracle/test/rf/submitHelloWorldTest.js 2&gt;&amp;1'.</msg>
<status status="PASS" endtime="20170913 19:06:55.040" starttime="20170913 19:06:55.026"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd iexec-oracle &amp;&amp; ./node_modules/.bin/truffle test test/rf/submitHelloWorldTest.js</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${truffletest_result}</var>
</assign>
<msg timestamp="20170913 19:06:55.042" level="INFO">Starting process:
cd iexec-oracle &amp;&amp; ./node_modules/.bin/truffle test test/rf/submitHelloWorldTest.js</msg>
<msg timestamp="20170913 19:06:55.045" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170913 19:06:57.509" level="INFO">Process completed.</msg>
<msg timestamp="20170913 19:06:57.509" level="INFO">${truffletest_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170913 19:06:57.509" starttime="20170913 19:06:55.041"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stderr}</arg>
</arguments>
<msg timestamp="20170913 19:06:57.510" level="INFO"></msg>
<status status="PASS" endtime="20170913 19:06:57.510" starttime="20170913 19:06:57.510"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
</arguments>
<msg timestamp="20170913 19:06:57.511" level="INFO">Using network 'development'.

IexecOracle deployed at address :0x949c0726a325403f79153f028379eefeb6a6eaea
HelloWorldTest deployed at address :0xd970a633895f53e28a1ec6995e1ea7f5790748aa

[0m[0m
[0m  Contract: HelloWorldTest[0m
BEGIN_LOG
{ tx: '0x83bca6214ba95db97c2fcba96e66f9b95cde089e34450484edc721fb51bc7138',
  receipt: 
   { transactionHash: '0x83bca6214ba95db97c2fcba96e66f9b95cde089e34450484edc721fb51bc7138',
     transactionIndex: 0,
     blockHash: '0x989ef1fdd0f40565a1715ea28b10c3978bf7d438010213ca17d182720253f574',
     blockNumber: 21,
     gasUsed: 31365,
     cumulativeGasUsed: 31365,
     contractAddress: null,
     logs: [ [Object] ] },
  logs: [] }
END_LOG
  [32m  ✓[0m[90m should register a work[0m[33m (53ms)[0m


[92m [0m[32m 1 passing[0m[90m (119ms)[0m
</msg>
<status status="PASS" endtime="20170913 19:06:57.511" starttime="20170913 19:06:57.510"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${truffletest_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170913 19:06:57.511" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170913 19:06:57.511" starttime="20170913 19:06:57.511"></status>
</kw>
<status status="PASS" endtime="20170913 19:06:57.511" starttime="20170913 19:06:55.025"></status>
</kw>
<kw name="Check Submit Launch Event In IexceOracleSmartContract" library="IexceOracleSmartContract">
<arguments>
<arg>${HELLO_WORLD_SM_ADDRESS}</arg>
</arguments>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3 min</arg>
<arg>1 min</arg>
<arg>Watch LaunchEvent</arg>
</arguments>
<assign>
<var>${watch_launch_event}</var>
</assign>
<kw name="Watch LaunchEvent" library="IexceOracleSmartContract">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd iexec-oracle &amp;&amp; ./node_modules/.bin/truffle test test/rf/watchLaunchEventInIexecOracle.js</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${truffletest_result}</var>
</assign>
<msg timestamp="20170913 19:06:57.513" level="INFO">Starting process:
cd iexec-oracle &amp;&amp; ./node_modules/.bin/truffle test test/rf/watchLaunchEventInIexecOracle.js</msg>
<msg timestamp="20170913 19:06:57.516" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170913 19:07:00.080" level="INFO">Process completed.</msg>
<msg timestamp="20170913 19:07:00.080" level="INFO">${truffletest_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170913 19:07:00.080" starttime="20170913 19:06:57.513"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stderr}</arg>
</arguments>
<msg timestamp="20170913 19:07:00.081" level="INFO"></msg>
<status status="PASS" endtime="20170913 19:07:00.081" starttime="20170913 19:07:00.081"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
</arguments>
<msg timestamp="20170913 19:07:00.082" level="INFO">Using network 'development'.

IexecOracle deployed at address :0x3458f01d18f5029995308efc5fd9d84994b48192
HelloWorldTest deployed at address :0x6212016cc851e269a9127eb95cb4f89dc0af1e56

[0m[0m
[0m  Contract: IexecOracle[0m
BEGIN_LOG
[ { logIndex: 0,
    transactionIndex: 0,
    transactionHash: '0x83bca6214ba95db97c2fcba96e66f9b95cde089e34450484edc721fb51bc7138',
    blockHash: '0x989ef1fdd0f40565a1715ea28b10c3978bf7d438010213ca17d182720253f574',
    blockNumber: 21,
    address: '0x6de06970683f564e54356106341257634ec36fd5',
    type: 'mined',
    event: 'Launch',
    args: 
     { user: '0x97637172c0b322c549d5890c67e379e903109df2',
       provider: '0x11cb407a3393198d0b6c8e6684a4709a86f408f3',
       creator: '0xe8a4cbaf95a798ed400505980d6a1d2423d093d5',
       functionName: 'submit',
       param1: 'echo',
       param2: 'HelloWorld!!!',
       workUid: '' } } ]
END_LOG
  [32m  ✓[0m[90m watch CallbackEvent[0m[31m (182ms)[0m


[92m [0m[32m 1 passing[0m[90m (229ms)[0m
</msg>
<status status="PASS" endtime="20170913 19:07:00.082" starttime="20170913 19:07:00.081"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${truffletest_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170913 19:07:00.082" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170913 19:07:00.082" starttime="20170913 19:07:00.082"></status>
</kw>
<status status="PASS" endtime="20170913 19:07:00.083" starttime="20170913 19:06:57.513"></status>
</kw>
<msg timestamp="20170913 19:07:00.083" level="INFO">${watch_launch_event} = Using network 'development'.

IexecOracle deployed at address :0x3458f01d18f5029995308efc5fd9d84994b48192
HelloWorldTest deployed at address :0x6212016cc851e269a9127eb95cb4f89dc0af1e56

[0m[0m
[0m ...</msg>
<status status="PASS" endtime="20170913 19:07:00.083" starttime="20170913 19:06:57.512"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${watch_launch_event}</arg>
<arg>functionName: 'submit'</arg>
</arguments>
<status status="PASS" endtime="20170913 19:07:00.083" starttime="20170913 19:07:00.083"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${watch_launch_event}</arg>
<arg>param1: 'echo'</arg>
</arguments>
<status status="PASS" endtime="20170913 19:07:00.084" starttime="20170913 19:07:00.084"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${watch_launch_event}</arg>
<arg>user: '${USER}'</arg>
</arguments>
<status status="PASS" endtime="20170913 19:07:00.084" starttime="20170913 19:07:00.084"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${watch_launch_event}</arg>
<arg>creator: '${CREATOR}'</arg>
</arguments>
<status status="PASS" endtime="20170913 19:07:00.085" starttime="20170913 19:07:00.084"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${watch_launch_event}</arg>
<arg>provider: '${provider}'</arg>
</arguments>
<status status="PASS" endtime="20170913 19:07:00.085" starttime="20170913 19:07:00.085"></status>
</kw>
<status status="PASS" endtime="20170913 19:07:00.086" starttime="20170913 19:06:57.512"></status>
</kw>
<kw name="Check Submit CallbackEvent Event In IexceOracleSmartContract" library="IexceOracleSmartContract">
<arguments>
<arg>${HELLO_WORLD_SM_ADDRESS}</arg>
</arguments>
<assign>
<var>${work_uid}</var>
</assign>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3 min</arg>
<arg>1 min</arg>
<arg>Watch CallbackEvent</arg>
</arguments>
<assign>
<var>${watch_callback_event}</var>
</assign>
<kw name="Watch CallbackEvent" library="IexceOracleSmartContract">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd iexec-oracle &amp;&amp; ./node_modules/.bin/truffle test test/rf/watchCallbackEventInIexecOracle.js</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${truffletest_result}</var>
</assign>
<msg timestamp="20170913 19:07:00.089" level="INFO">Starting process:
cd iexec-oracle &amp;&amp; ./node_modules/.bin/truffle test test/rf/watchCallbackEventInIexecOracle.js</msg>
<msg timestamp="20170913 19:07:00.092" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170913 19:08:29.318" level="INFO">Process completed.</msg>
<msg timestamp="20170913 19:08:29.318" level="INFO">${truffletest_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170913 19:08:29.318" starttime="20170913 19:07:00.089"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stderr}</arg>
</arguments>
<msg timestamp="20170913 19:08:29.319" level="INFO"></msg>
<status status="PASS" endtime="20170913 19:08:29.319" starttime="20170913 19:08:29.319"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
</arguments>
<msg timestamp="20170913 19:08:29.320" level="INFO">Using network 'development'.

IexecOracle deployed at address :0xf2921a13f31e2278e8fb8f22523e4f3c592a8e83
HelloWorldTest deployed at address :0x44a8fb12ae9680b09755b3778bea1116ca0726a5

[0m[0m
[0m  Contract: IexecOracle[0m
BEGIN_LOG
[ { logIndex: 0,
    transactionIndex: 0,
    transactionHash: '0xca18cdcab8793f6251f6776483c6a27b44d83a5fcbfee2788db6951faf09e274',
    blockHash: '0x8dcbd134c7a5193f88424766323aea19e38ea376325305f03b7c9ffde346299c',
    blockNumber: 32,
    address: '0x6de06970683f564e54356106341257634ec36fd5',
    type: 'mined',
    event: 'CallbackEvent',
    args: 
     { callbackType: 'SubmitCallback',
       user: '0x97637172c0b322c549d5890c67e379e903109df2',
       provider: '0x11cb407a3393198d0b6c8e6684a4709a86f408f3',
       creator: '0xe8a4cbaf95a798ed400505980d6a1d2423d093d5',
       appName: 'echo',
       workUid: '1c786c03-aabe-44f2-8eec-632455bd748d',
       status: [Object],
       stdout: 'HelloWorld!!!\n',
       stderr: '' } } ]
END_LOG
  [32m  ✓[0m[90m watch CallbackEvent[0m[31m (86968ms)[0m


[92m [0m[32m 1 passing[0m[90m (1m)[0m
</msg>
<status status="PASS" endtime="20170913 19:08:29.320" starttime="20170913 19:08:29.320"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${truffletest_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170913 19:08:29.320" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170913 19:08:29.320" starttime="20170913 19:08:29.320"></status>
</kw>
<status status="PASS" endtime="20170913 19:08:29.321" starttime="20170913 19:07:00.088"></status>
</kw>
<msg timestamp="20170913 19:08:29.321" level="INFO">${watch_callback_event} = Using network 'development'.

IexecOracle deployed at address :0xf2921a13f31e2278e8fb8f22523e4f3c592a8e83
HelloWorldTest deployed at address :0x44a8fb12ae9680b09755b3778bea1116ca0726a5

[0m[0m
[0m ...</msg>
<status status="PASS" endtime="20170913 19:08:29.321" starttime="20170913 19:07:00.088"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${watch_callback_event}</arg>
<arg>event: 'CallbackEvent'</arg>
</arguments>
<status status="PASS" endtime="20170913 19:08:29.321" starttime="20170913 19:08:29.321"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${watch_callback_event}</arg>
<arg>callbackType: 'SubmitCallback'</arg>
</arguments>
<status status="PASS" endtime="20170913 19:08:29.321" starttime="20170913 19:08:29.321"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${watch_callback_event}</arg>
<arg>appName: 'echo'</arg>
</arguments>
<status status="PASS" endtime="20170913 19:08:29.322" starttime="20170913 19:08:29.322"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${watch_callback_event}</arg>
<arg>user: '${USER}'</arg>
</arguments>
<status status="PASS" endtime="20170913 19:08:29.322" starttime="20170913 19:08:29.322"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${watch_callback_event}</arg>
<arg>creator: '${CREATOR}'</arg>
</arguments>
<status status="PASS" endtime="20170913 19:08:29.322" starttime="20170913 19:08:29.322"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${watch_callback_event}</arg>
<arg>provider: '${provider}'</arg>
</arguments>
<status status="PASS" endtime="20170913 19:08:29.323" starttime="20170913 19:08:29.322"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${watch_callback_event}</arg>
<arg>workUid: '(?P&lt;work_uid&gt;.*)',</arg>
<arg>work_uid</arg>
</arguments>
<assign>
<var>@{work_uid}</var>
</assign>
<msg timestamp="20170913 19:08:29.323" level="INFO">@{work_uid} = [ 1c786c03-aabe-44f2-8eec-632455bd748d ]</msg>
<status status="PASS" endtime="20170913 19:08:29.323" starttime="20170913 19:08:29.323"></status>
</kw>
<msg timestamp="20170913 19:08:29.323" level="INFO">${work_uid} = 1c786c03-aabe-44f2-8eec-632455bd748d</msg>
<status status="PASS" endtime="20170913 19:08:29.323" starttime="20170913 19:07:00.087"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${work_uid}</arg>
</arguments>
<msg timestamp="20170913 19:08:29.324" level="INFO">1c786c03-aabe-44f2-8eec-632455bd748d</msg>
<status status="PASS" endtime="20170913 19:08:29.324" starttime="20170913 19:08:29.324"></status>
</kw>
<kw name="Check Submit CallbackEvent Event In HelloWorldSmartContract" library="HelloWorldSmartContract">
<arguments>
<arg>${work_uid}</arg>
<arg>${HELLO_WORLD_SM_ADDRESS}</arg>
</arguments>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3 min</arg>
<arg>1 min</arg>
<arg>Watch IExecCallbackEvent</arg>
</arguments>
<assign>
<var>${watch_callback_event}</var>
</assign>
<kw name="Watch IExecCallbackEvent" library="HelloWorldSmartContract">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd iexec-oracle &amp;&amp; ./node_modules/.bin/truffle test test/rf/watchIExecCallbackEventHelloWorldTest.js</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${truffletest_result}</var>
</assign>
<msg timestamp="20170913 19:08:29.326" level="INFO">Starting process:
cd iexec-oracle &amp;&amp; ./node_modules/.bin/truffle test test/rf/watchIExecCallbackEventHelloWorldTest.js</msg>
<msg timestamp="20170913 19:08:29.328" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170913 19:08:31.893" level="INFO">Process completed.</msg>
<msg timestamp="20170913 19:08:31.893" level="INFO">${truffletest_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170913 19:08:31.893" starttime="20170913 19:08:29.325"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stderr}</arg>
</arguments>
<msg timestamp="20170913 19:08:31.894" level="INFO"></msg>
<status status="PASS" endtime="20170913 19:08:31.894" starttime="20170913 19:08:31.894"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
</arguments>
<msg timestamp="20170913 19:08:31.895" level="INFO">Using network 'development'.

IexecOracle deployed at address :0x767b713b56fff07fa64680e77aa057e938088721
HelloWorldTest deployed at address :0xade4e5cb0d0ae8bfcab0fa3438e3a3bc6bfd45c4

[0m[0m
[0m  Contract: IexecOracle[0m
BEGIN_LOG
[ { logIndex: 1,
    transactionIndex: 0,
    transactionHash: '0xca18cdcab8793f6251f6776483c6a27b44d83a5fcbfee2788db6951faf09e274',
    blockHash: '0x8dcbd134c7a5193f88424766323aea19e38ea376325305f03b7c9ffde346299c',
    blockNumber: 32,
    address: '0x11cb407a3393198d0b6c8e6684a4709a86f408f3',
    type: 'mined',
    event: 'IexecCallbackEvent',
    args: 
     { callbackType: 'SubmitCallback',
       user: '0x97637172c0b322c549d5890c67e379e903109df2',
       provider: '0x11cb407a3393198d0b6c8e6684a4709a86f408f3',
       creator: '0xe8a4cbaf95a798ed400505980d6a1d2423d093d5',
       appName: 'echo',
       workUid: '1c786c03-aabe-44f2-8eec-632455bd748d',
       status: [Object],
       stdout: 'HelloWorld!!!\n',
       stderr: '' } } ]
END_LOG
  [32m  ✓[0m[90m watch CallbackEvent[0m[31m (182ms)[0m


[92m [0m[32m 1 passing[0m[90m (238ms)[0m
</msg>
<status status="PASS" endtime="20170913 19:08:31.895" starttime="20170913 19:08:31.894"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${truffletest_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170913 19:08:31.895" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170913 19:08:31.895" starttime="20170913 19:08:31.895"></status>
</kw>
<status status="PASS" endtime="20170913 19:08:31.895" starttime="20170913 19:08:29.325"></status>
</kw>
<msg timestamp="20170913 19:08:31.896" level="INFO">${watch_callback_event} = Using network 'development'.

IexecOracle deployed at address :0x767b713b56fff07fa64680e77aa057e938088721
HelloWorldTest deployed at address :0xade4e5cb0d0ae8bfcab0fa3438e3a3bc6bfd45c4

[0m[0m
[0m ...</msg>
<status status="PASS" endtime="20170913 19:08:31.896" starttime="20170913 19:08:29.324"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${watch_callback_event}</arg>
<arg>event: 'IexecCallbackEvent'</arg>
</arguments>
<status status="PASS" endtime="20170913 19:08:31.896" starttime="20170913 19:08:31.896"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${watch_callback_event}</arg>
<arg>callbackType: 'SubmitCallback'</arg>
</arguments>
<status status="PASS" endtime="20170913 19:08:31.896" starttime="20170913 19:08:31.896"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${watch_callback_event}</arg>
<arg>appName: 'echo'</arg>
</arguments>
<status status="PASS" endtime="20170913 19:08:31.897" starttime="20170913 19:08:31.896"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${watch_callback_event}</arg>
<arg>user: '${USER}'</arg>
</arguments>
<status status="PASS" endtime="20170913 19:08:31.897" starttime="20170913 19:08:31.897"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${watch_callback_event}</arg>
<arg>creator: '${CREATOR}'</arg>
</arguments>
<status status="PASS" endtime="20170913 19:08:31.897" starttime="20170913 19:08:31.897"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${watch_callback_event}</arg>
<arg>provider: '${provider}'</arg>
</arguments>
<status status="PASS" endtime="20170913 19:08:31.898" starttime="20170913 19:08:31.897"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${watch_callback_event}</arg>
<arg>workUid: '${work_uid}'</arg>
</arguments>
<status status="PASS" endtime="20170913 19:08:31.898" starttime="20170913 19:08:31.898"></status>
</kw>
<status status="PASS" endtime="20170913 19:08:31.898" starttime="20170913 19:08:29.324"></status>
</kw>
<kw name="Check Work Is Recorded in IexceOracleSmartContract After Submit" library="IexceOracleSmartContract">
<arguments>
<arg>${work_uid}</arg>
<arg>${HELLO_WORLD_SM_ADDRESS}</arg>
</arguments>
<kw name="Get Work" library="IexceOracleSmartContract">
<arguments>
<arg>${USER}</arg>
<arg>${provider}</arg>
<arg>${work_uid}</arg>
</arguments>
<assign>
<var>@{work_result}</var>
</assign>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>sed -i "s/.*getWork.call(.*/return aIexecOracleInstance.getWork.call('${user}','${provider}',\\"${uid}\\");/g" iexec-oracle/test/rf/getWorkInIexecOracle.js</arg>
</arguments>
<msg timestamp="20170913 19:08:31.900" level="INFO">Running command 'sed -i "s/.*getWork.call(.*/return aIexecOracleInstance.getWork.call('0x97637172c0b322c549d5890c67e379e903109df2','0x11cb407a3393198d0b6c8e6684a4709a86f408f3',\"1c786c03-aabe-44f2-8eec-632455bd748d\");/g" iexec-oracle/test/rf/getWorkInIexecOracle.js 2&gt;&amp;1'.</msg>
<status status="PASS" endtime="20170913 19:08:31.913" starttime="20170913 19:08:31.899"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd iexec-oracle &amp;&amp; ./node_modules/.bin/truffle test test/rf/getWorkInIexecOracle.js</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${truffletest_result}</var>
</assign>
<msg timestamp="20170913 19:08:31.914" level="INFO">Starting process:
cd iexec-oracle &amp;&amp; ./node_modules/.bin/truffle test test/rf/getWorkInIexecOracle.js</msg>
<msg timestamp="20170913 19:08:31.918" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170913 19:08:34.456" level="INFO">Process completed.</msg>
<msg timestamp="20170913 19:08:34.456" level="INFO">${truffletest_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170913 19:08:34.456" starttime="20170913 19:08:31.914"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stderr}</arg>
</arguments>
<msg timestamp="20170913 19:08:34.457" level="INFO"></msg>
<status status="PASS" endtime="20170913 19:08:34.457" starttime="20170913 19:08:34.457"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
</arguments>
<msg timestamp="20170913 19:08:34.458" level="INFO">Using network 'development'.

IexecOracle deployed at address :0xa20c5b8d598fdad26788522822c5833712677394
HelloWorldTest deployed at address :0x122b36956fb9568a725facbfd3f69c8abe75db39

[0m[0m
[0m  Contract: IexecOracle[0m
BEGIN_LOG
name:echo
timestamp:1505329708
status:4
stdout:HelloWorld!!!

stderr:
END_LOG
  [32m  ✓[0m[90m get a work[0m[31m (122ms)[0m


[92m [0m[32m 1 passing[0m[90m (169ms)[0m
</msg>
<status status="PASS" endtime="20170913 19:08:34.458" starttime="20170913 19:08:34.457"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${truffletest_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170913 19:08:34.458" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170913 19:08:34.458" starttime="20170913 19:08:34.458"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
<arg>name:(?P&lt;name&gt;.*)</arg>
<arg>name</arg>
</arguments>
<assign>
<var>@{name}</var>
</assign>
<msg timestamp="20170913 19:08:34.459" level="INFO">@{name} = [ echo ]</msg>
<status status="PASS" endtime="20170913 19:08:34.459" starttime="20170913 19:08:34.458"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
<arg>timestamp:(?P&lt;timestamp&gt;.*)</arg>
<arg>timestamp</arg>
</arguments>
<assign>
<var>@{timestamp}</var>
</assign>
<msg timestamp="20170913 19:08:34.459" level="INFO">@{timestamp} = [ 1505329708 ]</msg>
<status status="PASS" endtime="20170913 19:08:34.459" starttime="20170913 19:08:34.459"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
<arg>status:(?P&lt;status&gt;.*)</arg>
<arg>status</arg>
</arguments>
<assign>
<var>@{status}</var>
</assign>
<msg timestamp="20170913 19:08:34.460" level="INFO">@{status} = [ 4 ]</msg>
<status status="PASS" endtime="20170913 19:08:34.460" starttime="20170913 19:08:34.459"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
<arg>stdout:(?P&lt;stdout&gt;.*)</arg>
<arg>stdout</arg>
</arguments>
<assign>
<var>@{stdout}</var>
</assign>
<msg timestamp="20170913 19:08:34.460" level="INFO">@{stdout} = [ HelloWorld!!! ]</msg>
<status status="PASS" endtime="20170913 19:08:34.460" starttime="20170913 19:08:34.460"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
<arg>stderr:(?P&lt;stderr&gt;.*)</arg>
<arg>stderr</arg>
</arguments>
<assign>
<var>@{stderr}</var>
</assign>
<msg timestamp="20170913 19:08:34.460" level="INFO">@{stderr} = [  ]</msg>
<status status="PASS" endtime="20170913 19:08:34.460" starttime="20170913 19:08:34.460"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>@{name}[0]</arg>
<arg>@{timestamp}[0]</arg>
<arg>@{status}[0]</arg>
<arg>@{stdout}[0]</arg>
<arg>@{stderr}[0]</arg>
</arguments>
<assign>
<var>@{work_result}</var>
</assign>
<msg timestamp="20170913 19:08:34.461" level="INFO">@{work_result} = [ echo | 1505329708 | 4 | HelloWorld!!! |  ]</msg>
<status status="PASS" endtime="20170913 19:08:34.461" starttime="20170913 19:08:34.461"></status>
</kw>
<msg timestamp="20170913 19:08:34.461" level="INFO">@{work_result} = [ echo | 1505329708 | 4 | HelloWorld!!! |  ]</msg>
<status status="PASS" endtime="20170913 19:08:34.461" starttime="20170913 19:08:31.899"></status>
</kw>
<kw name="Get Work Name" library="IexceOracleSmartContract">
<arguments>
<arg>${USER}</arg>
<arg>${provider}</arg>
<arg>${work_uid}</arg>
</arguments>
<assign>
<var>${work_name}</var>
</assign>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>sed -i "s/.*getWorkName.call(.*/return aIexecOracleInstance.getWorkName.call('${user}','${provider}',\\"${uid}\\");/g" iexec-oracle/test/rf/getWorkNameInIexecOracle.js</arg>
</arguments>
<msg timestamp="20170913 19:08:34.462" level="INFO">Running command 'sed -i "s/.*getWorkName.call(.*/return aIexecOracleInstance.getWorkName.call('0x97637172c0b322c549d5890c67e379e903109df2','0x11cb407a3393198d0b6c8e6684a4709a86f408f3',\"1c786c03-aabe-44f2-8eec-632455bd748d\");/g" iexec-oracle/test/rf/getWorkNameInIexecOracle.js 2&gt;&amp;1'.</msg>
<status status="PASS" endtime="20170913 19:08:34.475" starttime="20170913 19:08:34.462"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd iexec-oracle &amp;&amp; ./node_modules/.bin/truffle test test/rf/getWorkNameInIexecOracle.js</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${truffletest_result}</var>
</assign>
<msg timestamp="20170913 19:08:34.477" level="INFO">Starting process:
cd iexec-oracle &amp;&amp; ./node_modules/.bin/truffle test test/rf/getWorkNameInIexecOracle.js</msg>
<msg timestamp="20170913 19:08:34.479" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170913 19:08:36.790" level="INFO">Process completed.</msg>
<msg timestamp="20170913 19:08:36.791" level="INFO">${truffletest_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170913 19:08:36.791" starttime="20170913 19:08:34.476"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stderr}</arg>
</arguments>
<msg timestamp="20170913 19:08:36.792" level="INFO"></msg>
<status status="PASS" endtime="20170913 19:08:36.792" starttime="20170913 19:08:36.791"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
</arguments>
<msg timestamp="20170913 19:08:36.792" level="INFO">Using network 'development'.

IexecOracle deployed at address :0x56e33edaa0257e79ecb9986220b1f7860e80afb0
HelloWorldTest deployed at address :0x67a15cfa7b82f368585395591bd8d399326d1d52

[0m[0m
[0m  Contract: IexecOracle[0m
BEGIN_LOG
name:echo
END_LOG
  [32m  ✓[0m[90m get a work[0m[33m (67ms)[0m


[92m [0m[32m 1 passing[0m[90m (118ms)[0m
</msg>
<status status="PASS" endtime="20170913 19:08:36.792" starttime="20170913 19:08:36.792"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${truffletest_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170913 19:08:36.793" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170913 19:08:36.794" starttime="20170913 19:08:36.792"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
<arg>name:(?P&lt;name&gt;.*)</arg>
<arg>name</arg>
</arguments>
<assign>
<var>@{name}</var>
</assign>
<msg timestamp="20170913 19:08:36.794" level="INFO">@{name} = [ echo ]</msg>
<status status="PASS" endtime="20170913 19:08:36.794" starttime="20170913 19:08:36.794"></status>
</kw>
<msg timestamp="20170913 19:08:36.794" level="INFO">${work_name} = echo</msg>
<status status="PASS" endtime="20170913 19:08:36.794" starttime="20170913 19:08:34.461"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${work_name}</arg>
<arg>@{work_result}[0]</arg>
</arguments>
<status status="PASS" endtime="20170913 19:08:36.795" starttime="20170913 19:08:36.795"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${work_name}</arg>
<arg>echo</arg>
</arguments>
<status status="PASS" endtime="20170913 19:08:36.795" starttime="20170913 19:08:36.795"></status>
</kw>
<kw name="Get Work Timestamp" library="IexceOracleSmartContract">
<arguments>
<arg>${USER}</arg>
<arg>${provider}</arg>
<arg>${work_uid}</arg>
</arguments>
<assign>
<var>${work_timestamp}</var>
</assign>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>sed -i "s/.*getWorkTimestamp.call(.*/return aIexecOracleInstance.getWorkTimestamp.call('${user}','${provider}',\\"${uid}\\");/g" iexec-oracle/test/rf/getWorkTimestampInIexecOracle.js</arg>
</arguments>
<msg timestamp="20170913 19:08:36.797" level="INFO">Running command 'sed -i "s/.*getWorkTimestamp.call(.*/return aIexecOracleInstance.getWorkTimestamp.call('0x97637172c0b322c549d5890c67e379e903109df2','0x11cb407a3393198d0b6c8e6684a4709a86f408f3',\"1c786c03-aabe-44f2-8eec-632455bd748d\");/g" iexec-oracle/test/rf/getWorkTimestampInIexecOracle.js 2&gt;&amp;1'.</msg>
<status status="PASS" endtime="20170913 19:08:36.809" starttime="20170913 19:08:36.796"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd iexec-oracle &amp;&amp; ./node_modules/.bin/truffle test test/rf/getWorkTimestampInIexecOracle.js</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${truffletest_result}</var>
</assign>
<msg timestamp="20170913 19:08:36.810" level="INFO">Starting process:
cd iexec-oracle &amp;&amp; ./node_modules/.bin/truffle test test/rf/getWorkTimestampInIexecOracle.js</msg>
<msg timestamp="20170913 19:08:36.813" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170913 19:08:39.129" level="INFO">Process completed.</msg>
<msg timestamp="20170913 19:08:39.129" level="INFO">${truffletest_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170913 19:08:39.129" starttime="20170913 19:08:36.809"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stderr}</arg>
</arguments>
<msg timestamp="20170913 19:08:39.130" level="INFO"></msg>
<status status="PASS" endtime="20170913 19:08:39.130" starttime="20170913 19:08:39.130"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
</arguments>
<msg timestamp="20170913 19:08:39.131" level="INFO">Using network 'development'.

IexecOracle deployed at address :0x123bd7b07ce9fa7a8525ce39c5204f9d02d79ac3
HelloWorldTest deployed at address :0x9004efb196e559df87e0d23977088147e0d41d7a

[0m[0m
[0m  Contract: IexecOracle[0m
BEGIN_LOG
timestamp:1505329708
END_LOG
  [32m  ✓[0m[90m get a work[0m[33m (70ms)[0m


[92m [0m[32m 1 passing[0m[90m (121ms)[0m
</msg>
<status status="PASS" endtime="20170913 19:08:39.131" starttime="20170913 19:08:39.130"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${truffletest_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170913 19:08:39.131" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170913 19:08:39.131" starttime="20170913 19:08:39.131"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
<arg>timestamp:(?P&lt;timestamp&gt;.*)</arg>
<arg>timestamp</arg>
</arguments>
<assign>
<var>@{timestamp}</var>
</assign>
<msg timestamp="20170913 19:08:39.132" level="INFO">@{timestamp} = [ 1505329708 ]</msg>
<status status="PASS" endtime="20170913 19:08:39.132" starttime="20170913 19:08:39.131"></status>
</kw>
<msg timestamp="20170913 19:08:39.132" level="INFO">${work_timestamp} = 1505329708</msg>
<status status="PASS" endtime="20170913 19:08:39.132" starttime="20170913 19:08:36.795"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${work_timestamp}</arg>
<arg>@{work_result}[1]</arg>
</arguments>
<status status="PASS" endtime="20170913 19:08:39.132" starttime="20170913 19:08:39.132"></status>
</kw>
<kw name="Get Work Status" library="IexceOracleSmartContract">
<arguments>
<arg>${USER}</arg>
<arg>${provider}</arg>
<arg>${work_uid}</arg>
</arguments>
<assign>
<var>${work_status}</var>
</assign>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>sed -i "s/.*getWorkStatus.call(.*/return aIexecOracleInstance.getWorkStatus.call('${user}','${provider}',\\"${uid}\\");/g" iexec-oracle/test/rf/getWorkStatusInIexecOracle.js</arg>
</arguments>
<msg timestamp="20170913 19:08:39.134" level="INFO">Running command 'sed -i "s/.*getWorkStatus.call(.*/return aIexecOracleInstance.getWorkStatus.call('0x97637172c0b322c549d5890c67e379e903109df2','0x11cb407a3393198d0b6c8e6684a4709a86f408f3',\"1c786c03-aabe-44f2-8eec-632455bd748d\");/g" iexec-oracle/test/rf/getWorkStatusInIexecOracle.js 2&gt;&amp;1'.</msg>
<status status="PASS" endtime="20170913 19:08:39.148" starttime="20170913 19:08:39.133"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd iexec-oracle &amp;&amp; ./node_modules/.bin/truffle test test/rf/getWorkStatusInIexecOracle.js</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${truffletest_result}</var>
</assign>
<msg timestamp="20170913 19:08:39.149" level="INFO">Starting process:
cd iexec-oracle &amp;&amp; ./node_modules/.bin/truffle test test/rf/getWorkStatusInIexecOracle.js</msg>
<msg timestamp="20170913 19:08:39.152" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170913 19:08:41.495" level="INFO">Process completed.</msg>
<msg timestamp="20170913 19:08:41.495" level="INFO">${truffletest_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170913 19:08:41.495" starttime="20170913 19:08:39.149"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stderr}</arg>
</arguments>
<msg timestamp="20170913 19:08:41.496" level="INFO"></msg>
<status status="PASS" endtime="20170913 19:08:41.496" starttime="20170913 19:08:41.495"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
</arguments>
<msg timestamp="20170913 19:08:41.496" level="INFO">Using network 'development'.

IexecOracle deployed at address :0x7f5e778827d2e558ad6c4c42b503d95fc9f1d640
HelloWorldTest deployed at address :0x3992fa38b505cb40d61a121d249d55bbf91960eb

[0m[0m
[0m  Contract: IexecOracle[0m
BEGIN_LOG
status:4
END_LOG
  [32m  ✓[0m[90m get a work[0m[33m (60ms)[0m


[92m [0m[32m 1 passing[0m[90m (110ms)[0m
</msg>
<status status="PASS" endtime="20170913 19:08:41.496" starttime="20170913 19:08:41.496"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${truffletest_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170913 19:08:41.497" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170913 19:08:41.497" starttime="20170913 19:08:41.496"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
<arg>status:(?P&lt;status&gt;.*)</arg>
<arg>status</arg>
</arguments>
<assign>
<var>@{status}</var>
</assign>
<msg timestamp="20170913 19:08:41.497" level="INFO">@{status} = [ 4 ]</msg>
<status status="PASS" endtime="20170913 19:08:41.497" starttime="20170913 19:08:41.497"></status>
</kw>
<msg timestamp="20170913 19:08:41.497" level="INFO">${work_status} = 4</msg>
<status status="PASS" endtime="20170913 19:08:41.497" starttime="20170913 19:08:39.132"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${work_status}</arg>
<arg>@{work_result}[2]</arg>
</arguments>
<status status="PASS" endtime="20170913 19:08:41.498" starttime="20170913 19:08:41.498"></status>
</kw>
<kw name="Get Work Stdout" library="IexceOracleSmartContract">
<arguments>
<arg>${USER}</arg>
<arg>${provider}</arg>
<arg>${work_uid}</arg>
</arguments>
<assign>
<var>${work_stdout}</var>
</assign>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>sed -i "s/.*getWorkStdout.call(.*/return aIexecOracleInstance.getWorkStdout.call('${user}','${provider}',\\"${uid}\\");/g" iexec-oracle/test/rf/getWorkStdoutInIexecOracle.js</arg>
</arguments>
<msg timestamp="20170913 19:08:41.499" level="INFO">Running command 'sed -i "s/.*getWorkStdout.call(.*/return aIexecOracleInstance.getWorkStdout.call('0x97637172c0b322c549d5890c67e379e903109df2','0x11cb407a3393198d0b6c8e6684a4709a86f408f3',\"1c786c03-aabe-44f2-8eec-632455bd748d\");/g" iexec-oracle/test/rf/getWorkStdoutInIexecOracle.js 2&gt;&amp;1'.</msg>
<status status="PASS" endtime="20170913 19:08:41.512" starttime="20170913 19:08:41.498"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd iexec-oracle &amp;&amp; ./node_modules/.bin/truffle test test/rf/getWorkStdoutInIexecOracle.js</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${truffletest_result}</var>
</assign>
<msg timestamp="20170913 19:08:41.512" level="INFO">Starting process:
cd iexec-oracle &amp;&amp; ./node_modules/.bin/truffle test test/rf/getWorkStdoutInIexecOracle.js</msg>
<msg timestamp="20170913 19:08:41.516" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170913 19:08:43.861" level="INFO">Process completed.</msg>
<msg timestamp="20170913 19:08:43.862" level="INFO">${truffletest_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170913 19:08:43.862" starttime="20170913 19:08:41.512"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stderr}</arg>
</arguments>
<msg timestamp="20170913 19:08:43.862" level="INFO"></msg>
<status status="PASS" endtime="20170913 19:08:43.862" starttime="20170913 19:08:43.862"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
</arguments>
<msg timestamp="20170913 19:08:43.863" level="INFO">Using network 'development'.

IexecOracle deployed at address :0x3801e92ad23fdd74ee264e5bd7b95291b26b336b
HelloWorldTest deployed at address :0x607b23da826fdb1e504a82c29a557d06119db0c5

[0m[0m
[0m  Contract: IexecOracle[0m
BEGIN_LOG
stdout:HelloWorld!!!

END_LOG
  [32m  ✓[0m[90m get a work[0m[31m (112ms)[0m


[92m [0m[32m 1 passing[0m[90m (154ms)[0m
</msg>
<status status="PASS" endtime="20170913 19:08:43.863" starttime="20170913 19:08:43.862"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${truffletest_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170913 19:08:43.863" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170913 19:08:43.863" starttime="20170913 19:08:43.863"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
<arg>stdout:(?P&lt;stdout&gt;.*)</arg>
<arg>stdout</arg>
</arguments>
<assign>
<var>@{stdout}</var>
</assign>
<msg timestamp="20170913 19:08:43.864" level="INFO">@{stdout} = [ HelloWorld!!! ]</msg>
<status status="PASS" endtime="20170913 19:08:43.864" starttime="20170913 19:08:43.863"></status>
</kw>
<msg timestamp="20170913 19:08:43.864" level="INFO">${work_stdout} = HelloWorld!!!</msg>
<status status="PASS" endtime="20170913 19:08:43.864" starttime="20170913 19:08:41.498"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${work_stdout}</arg>
<arg>@{work_result}[3]</arg>
</arguments>
<status status="PASS" endtime="20170913 19:08:43.865" starttime="20170913 19:08:43.864"></status>
</kw>
<kw name="Get Work Stderr" library="IexceOracleSmartContract">
<arguments>
<arg>${USER}</arg>
<arg>${provider}</arg>
<arg>${work_uid}</arg>
</arguments>
<assign>
<var>${work_stderr}</var>
</assign>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>sed -i "s/.*getWorkStderr.call(.*/return aIexecOracleInstance.getWorkStderr.call('${user}','${provider}',\\"${uid}\\");/g" iexec-oracle/test/rf/getWorkStderrInIexecOracle.js</arg>
</arguments>
<msg timestamp="20170913 19:08:43.867" level="INFO">Running command 'sed -i "s/.*getWorkStderr.call(.*/return aIexecOracleInstance.getWorkStderr.call('0x97637172c0b322c549d5890c67e379e903109df2','0x11cb407a3393198d0b6c8e6684a4709a86f408f3',\"1c786c03-aabe-44f2-8eec-632455bd748d\");/g" iexec-oracle/test/rf/getWorkStderrInIexecOracle.js 2&gt;&amp;1'.</msg>
<status status="PASS" endtime="20170913 19:08:43.880" starttime="20170913 19:08:43.866"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd iexec-oracle &amp;&amp; ./node_modules/.bin/truffle test test/rf/getWorkStderrInIexecOracle.js</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${truffletest_result}</var>
</assign>
<msg timestamp="20170913 19:08:43.881" level="INFO">Starting process:
cd iexec-oracle &amp;&amp; ./node_modules/.bin/truffle test test/rf/getWorkStderrInIexecOracle.js</msg>
<msg timestamp="20170913 19:08:43.884" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170913 19:08:46.281" level="INFO">Process completed.</msg>
<msg timestamp="20170913 19:08:46.281" level="INFO">${truffletest_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170913 19:08:46.282" starttime="20170913 19:08:43.881"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stderr}</arg>
</arguments>
<msg timestamp="20170913 19:08:46.282" level="INFO"></msg>
<status status="PASS" endtime="20170913 19:08:46.282" starttime="20170913 19:08:46.282"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
</arguments>
<msg timestamp="20170913 19:08:46.283" level="INFO">Using network 'development'.

IexecOracle deployed at address :0x496544dbf775a6cd0ec76b8081ddc73e4781d9c2
HelloWorldTest deployed at address :0x4dbcb51a52bfdcb4828725f56ad4f86e95a9fca4

[0m[0m
[0m  Contract: IexecOracle[0m
BEGIN_LOG
stderr:
END_LOG
  [32m  ✓[0m[90m get a work[0m[31m (140ms)[0m


[92m [0m[32m 1 passing[0m[90m (193ms)[0m
</msg>
<status status="PASS" endtime="20170913 19:08:46.283" starttime="20170913 19:08:46.283"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${truffletest_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170913 19:08:46.284" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170913 19:08:46.284" starttime="20170913 19:08:46.283"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
<arg>stderr:(?P&lt;stderr&gt;.*)</arg>
<arg>stderr</arg>
</arguments>
<assign>
<var>@{stderr}</var>
</assign>
<msg timestamp="20170913 19:08:46.284" level="INFO">@{stderr} = [  ]</msg>
<status status="PASS" endtime="20170913 19:08:46.284" starttime="20170913 19:08:46.284"></status>
</kw>
<msg timestamp="20170913 19:08:46.284" level="INFO">${work_stderr} = </msg>
<status status="PASS" endtime="20170913 19:08:46.284" starttime="20170913 19:08:43.865"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${work_stderr}</arg>
<arg>@{work_result}[4]</arg>
</arguments>
<status status="PASS" endtime="20170913 19:08:46.285" starttime="20170913 19:08:46.284"></status>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<doc>Verifies that the given item is empty.</doc>
<arguments>
<arg>${work_stderr}</arg>
</arguments>
<msg timestamp="20170913 19:08:46.285" level="INFO">Length is 0</msg>
<status status="PASS" endtime="20170913 19:08:46.285" starttime="20170913 19:08:46.285"></status>
</kw>
<status status="PASS" endtime="20170913 19:08:46.285" starttime="20170913 19:08:31.898"></status>
</kw>
<kw name="Get Work Status" library="IexceOracleSmartContract">
<arguments>
<arg>${USER}</arg>
<arg>${HELLO_WORLD_SM_ADDRESS}</arg>
<arg>${work_uid}</arg>
</arguments>
<assign>
<var>${work_status}</var>
</assign>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>sed -i "s/.*getWorkStatus.call(.*/return aIexecOracleInstance.getWorkStatus.call('${user}','${provider}',\\"${uid}\\");/g" iexec-oracle/test/rf/getWorkStatusInIexecOracle.js</arg>
</arguments>
<msg timestamp="20170913 19:08:46.288" level="INFO">Running command 'sed -i "s/.*getWorkStatus.call(.*/return aIexecOracleInstance.getWorkStatus.call('0x97637172c0b322c549d5890c67e379e903109df2','0x11cb407a3393198d0b6c8e6684a4709a86f408f3',\"1c786c03-aabe-44f2-8eec-632455bd748d\");/g" iexec-oracle/test/rf/getWorkStatusInIexecOracle.js 2&gt;&amp;1'.</msg>
<status status="PASS" endtime="20170913 19:08:46.306" starttime="20170913 19:08:46.286"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd iexec-oracle &amp;&amp; ./node_modules/.bin/truffle test test/rf/getWorkStatusInIexecOracle.js</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${truffletest_result}</var>
</assign>
<msg timestamp="20170913 19:08:46.307" level="INFO">Starting process:
cd iexec-oracle &amp;&amp; ./node_modules/.bin/truffle test test/rf/getWorkStatusInIexecOracle.js</msg>
<msg timestamp="20170913 19:08:46.310" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170913 19:08:48.710" level="INFO">Process completed.</msg>
<msg timestamp="20170913 19:08:48.711" level="INFO">${truffletest_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170913 19:08:48.711" starttime="20170913 19:08:46.306"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stderr}</arg>
</arguments>
<msg timestamp="20170913 19:08:48.712" level="INFO"></msg>
<status status="PASS" endtime="20170913 19:08:48.712" starttime="20170913 19:08:48.711"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
</arguments>
<msg timestamp="20170913 19:08:48.712" level="INFO">Using network 'development'.

IexecOracle deployed at address :0x7b6f45724c405ec0a9bca37c7020303dbca55256
HelloWorldTest deployed at address :0x22df51cdc3f54bb8e50679e8e44a1a6492efd96d

[0m[0m
[0m  Contract: IexecOracle[0m
BEGIN_LOG
status:4
END_LOG
  [32m  ✓[0m[90m get a work[0m[33m (47ms)[0m


[92m [0m[32m 1 passing[0m[90m (90ms)[0m
</msg>
<status status="PASS" endtime="20170913 19:08:48.712" starttime="20170913 19:08:48.712"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${truffletest_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170913 19:08:48.713" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170913 19:08:48.713" starttime="20170913 19:08:48.712"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
<arg>status:(?P&lt;status&gt;.*)</arg>
<arg>status</arg>
</arguments>
<assign>
<var>@{status}</var>
</assign>
<msg timestamp="20170913 19:08:48.713" level="INFO">@{status} = [ 4 ]</msg>
<status status="PASS" endtime="20170913 19:08:48.713" starttime="20170913 19:08:48.713"></status>
</kw>
<msg timestamp="20170913 19:08:48.713" level="INFO">${work_status} = 4</msg>
<status status="PASS" endtime="20170913 19:08:48.713" starttime="20170913 19:08:46.286"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${work_status}</arg>
<arg>4</arg>
</arguments>
<status status="PASS" endtime="20170913 19:08:48.714" starttime="20170913 19:08:48.714"></status>
</kw>
<kw name="Count From Works Where Uid" library="XWServer">
<arguments>
<arg>${work_uid}</arg>
<arg>1</arg>
</arguments>
<kw name="Count From Table Where Uid" library="MySql">
<arguments>
<arg>works</arg>
<arg>${uid}</arg>
<arg>${countExpected}</arg>
</arguments>
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170913 19:08:48.716" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170913 19:08:48.717" starttime="20170913 19:08:48.715"></status>
</kw>
<status status="PASS" endtime="20170913 19:08:48.717" starttime="20170913 19:08:48.715"></status>
</kw>
<kw name="Row Count Is Equal To X" library="DatabaseLibrary">
<doc>Check if the number of rows returned from `selectStatement` is equal to the value submitted. If not, then this</doc>
<arguments>
<arg>SELECT * FROM ${table} WHERE uid = '${uid}'</arg>
<arg>${countExpected}</arg>
</arguments>
<msg timestamp="20170913 19:08:48.717" level="INFO">Executing : Row Count Is Equal To X  |  SELECT * FROM works WHERE uid = '1c786c03-aabe-44f2-8eec-632455bd748d'  |  1 </msg>
<msg timestamp="20170913 19:08:48.717" level="INFO">Executing : Row Count  |  SELECT * FROM works WHERE uid = '1c786c03-aabe-44f2-8eec-632455bd748d' </msg>
<status status="PASS" endtime="20170913 19:08:48.718" starttime="20170913 19:08:48.717"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170913 19:08:48.719" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170913 19:08:48.719" starttime="20170913 19:08:48.719"></status>
</kw>
<status status="PASS" endtime="20170913 19:08:48.719" starttime="20170913 19:08:48.719"></status>
</kw>
<status status="PASS" endtime="20170913 19:08:48.719" starttime="20170913 19:08:48.715"></status>
</kw>
<status status="PASS" endtime="20170913 19:08:48.719" starttime="20170913 19:08:48.714"></status>
</kw>
<doc>Test HelloWorld Submit Iexec</doc>
<tags>
<tag>HelloWorld Tests</tag>
</tags>
<status status="PASS" endtime="20170913 19:08:48.720" critical="yes" starttime="20170913 19:06:49.019"></status>
</test>
<kw type="teardown" name="Stop Oracle Bridge And Xtremweb">
<kw name="Stop Bridge" library="IexecBridge">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${BRIDGE_PROCESS}</arg>
</arguments>
<msg timestamp="20170913 19:08:48.721" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20170913 19:08:48.727" level="INFO">Process completed.</msg>
<status status="PASS" endtime="20170913 19:08:48.727" starttime="20170913 19:08:48.721"></status>
</kw>
<status status="PASS" endtime="20170913 19:08:48.727" starttime="20170913 19:08:48.720"></status>
</kw>
<kw name="Stop Testrpc" library="ETHTestrpc">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${TESTRPC_PROCESS}</arg>
</arguments>
<msg timestamp="20170913 19:08:48.728" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20170913 19:08:48.737" level="INFO">Process completed.</msg>
<status status="PASS" endtime="20170913 19:08:48.737" starttime="20170913 19:08:48.728"></status>
</kw>
<status status="PASS" endtime="20170913 19:08:48.737" starttime="20170913 19:08:48.727"></status>
</kw>
<kw name="Stop XWtremWeb Server And XWtremWeb Worker" library="XWCommon">
<kw name="Stop XtremWeb Server" library="XWServer">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${SERVER_PROCESS}</arg>
</arguments>
<msg timestamp="20170913 19:08:48.738" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20170913 19:08:48.845" level="INFO">Process completed.</msg>
<status status="PASS" endtime="20170913 19:08:48.845" starttime="20170913 19:08:48.738"></status>
</kw>
<status status="PASS" endtime="20170913 19:08:48.845" starttime="20170913 19:08:48.738"></status>
</kw>
<kw name="Log XtremWeb Server" library="XWCommon">
<kw name="Log XtremWeb Process Log File" library="XWServer">
<kw name="Log File" library="OperatingSystem">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<msg timestamp="20170913 19:08:48.847" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170913 19:08:48.856" level="INFO">Wed Sep 13 19:06:30 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : checking launch url
Wed Sep 13 19:06:30 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] WARNING : no launcher URL defined
Wed Sep 13 19:06:30 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : launching SmartSockets hub
[13/Sep/2017:19:06:32 +0000] [main_1] ERROR : setRole : role redefined ?! (was SERVER)
[13/Sep/2017:19:06:33 +0000] [xtremweb.database.DBConnPoolThread_main_1] INFO : Connection to database jdbc:mysql://localhost/xtremweb is ok, 70 created
[13/Sep/2017:19:06:33 +0000] [xtremweb.dispatcher.DBInterface_main_1] WARN : Can't retrieve any app
[13/Sep/2017:19:06:33 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't create ProxyValidator
[13/Sep/2017:19:06:33 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.io.FileNotFoundException: /tmp/castore (No such file or directory) (/tmp/castore (No such file or directory))
[13/Sep/2017:19:06:33 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't add CA certificates to keystore
[13/Sep/2017:19:06:33 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.lang.NullPointerException (null)
[13/Sep/2017:19:06:33 +0000] [xtremweb.dispatcher.HashTaskSet_TaskSet_14] INFO : TaskSet started (300000)
[13/Sep/2017:19:06:34 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : still waiting task set...
[13/Sep/2017:19:06:34 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : UDP server not started
[13/Sep/2017:19:06:34 +0000] [xtremweb.communications.TCPServer_TCPServerNIO_15] INFO : started, listening on port : 4321
log4j:WARN No appenders could be found for logger (org.eclipse.jetty.util.log).
log4j:WARN Please initialize the log4j system properly.
log4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.
[13/Sep/2017:19:06:34 +0000] [xtremweb.communications.HTTPServer_main_1] INFO : started, listening on port : 9443
[13/Sep/2017:19:06:34 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : FACEBOOK : java.net.MalformedURLException: no protocol: 
[13/Sep/2017:19:06:34 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : GOOGLE : java.net.MalformedURLException: no protocol: 
[13/Sep/2017:19:06:34 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : TWITTER : java.net.MalformedURLException: no protocol: 
[13/Sep/2017:19:06:34 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : YAHOO : java.net.MalformedURLException: no protocol: 
[13/Sep/2017:19:06:34 +0000] [main_1] ERROR : Can't add new entry to keystore
[13/Sep/2017:19:06:34 +0000] [main_1] WARN : javax.net.ssl.SSLHandshakeException: sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target (sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target)
[13/Sep/2017:19:06:34 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : XWHEP Dispatcher(10.6.0-head) started [Wed Sep 13 19:06:34 UTC 2017]
[13/Sep/2017:19:06:34 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : DB vendor  = mysql
[13/Sep/2017:19:06:34 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : mileStone  = 
[13/Sep/2017:19:06:34 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Time out   = 15000
[13/Sep/2017:19:06:34 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Disk opt'd = true
[13/Sep/2017:19:06:34 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Net  opt'd = true
[13/Sep/2017:19:06:34 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : NIO        = true
XWHEP Dispatcher started  Wed Sep 13 19:06:34 UTC 2017
Name             : vagrant-ubuntu-trusty-64
Version          : 10.6.0-head
Identity         : 
XWRole           : SERVER
Started on       : Wed Sep 13 19:06:32 UTC 2017
Scheduler        : xtremweb.dispatcher.MatchingScheduler
SmartSockets hub : 172.28.128.3/172.17.0.1/10.0.2.15-4329#56.1c.1e.e6.cc.7c.00.00.07.ce.02.42.7b.de.a1.dc~vagrant
Server HTTP      : true
Alive            : 300
Alive time out   : 900
Polling time out : 15000
Optimize zip     : true
Optimize network : true
NIO              : true
Comm layer       : xtremweb.communications.TCPClient
Socket time out  : 60000
Socket retries   : 50
Max connections  : 200
TCP port         : 4321
UDP port         : 4323
HTPP  port       : 80
HTPPS port       : 9443
Sun RPC interposition port : 4328
Sandbox path : /usr/bin/lxc
Sandbox launch args : 
Host &lt;host&gt;&lt;uid&gt;443ca786-cd61-4fb9-aa75-6e9228f449e5&lt;/uid&gt;&lt;accessrights&gt;0x755&lt;/accessrights&gt;&lt;name&gt;vagrant-ubuntu-trusty-64&lt;/name&gt;&lt;cpuload&gt;50&lt;/cpuload&gt;&lt;natedipaddr&gt;10.0.2.15&lt;/natedipaddr&gt;&lt;ipaddr&gt;10.0.2.15&lt;/ipaddr&gt;&lt;hwaddr&gt;&lt;/hwaddr&gt;&lt;timezone&gt;Etc/UTC&lt;/timezone&gt;&lt;os&gt;LINUX&lt;/os&gt;&lt;osversion&gt;3.13.0-129-generic&lt;/osversion&gt;&lt;javaversion&gt;1.8.0_141&lt;/javaversion&gt;&lt;javadatamodel&gt;64&lt;/javadatamodel&gt;&lt;cputype&gt;AMD64&lt;/cputype&gt;&lt;cpunb&gt;1&lt;/cpunb&gt;&lt;cpumodel&gt;unknown&lt;/cpumodel&gt;&lt;cpuspeed&gt;0&lt;/cpuspeed&gt;&lt;totalmem&gt;0&lt;/totalmem&gt;&lt;totalswap&gt;0&lt;/totalswap&gt;&lt;totaltmp&gt;40284&lt;/totaltmp&gt;&lt;freetmp&gt;37272&lt;/freetmp&gt;&lt;project&gt;&lt;/project&gt;&lt;active&gt;true&lt;/active&gt;&lt;incomingconnections&gt;false&lt;/incomingconnections&gt;&lt;available&gt;false&lt;/available&gt;&lt;pilotjob&gt;false&lt;/pilotjob&gt;&lt;sgid&gt;&lt;/sgid&gt;&lt;timeout&gt;15000&lt;/timeout&gt;&lt;traces&gt;false&lt;/traces&gt;&lt;acceptbin&gt;false&lt;/acceptbin&gt;&lt;version&gt;10.6.0-head&lt;/version&gt;&lt;/host&gt;
[13/Sep/2017:19:06:34 +0000] [xtremweb.communications.HTTPServer_HTTPServer_218] INFO : started, listening on port : 9443
[13/Sep/2017:19:06:36 +0000] [xtremweb.common.StreamIO_TCPHandler_17] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[13/Sep/2017:19:06:39 +0000] [xtremweb.common.StreamIO_TCPHandler_18] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[13/Sep/2017:19:06:40 +0000] [xtremweb.common.StreamIO_TCPHandler_19] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[13/Sep/2017:19:06:40 +0000] [xtremweb.dispatcher.DBInterface_TCPHandler_20] INFO : vagrant-ubuntu-trusty-64 not in DB; inserting 767508c6-7e81-4acf-a1cc-e66b3d314179
[13/Sep/2017:19:06:40 +0000] [xtremweb.common.StreamIO_TCPHandler_20] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[13/Sep/2017:19:06:55 +0000] [xtremweb.common.StreamIO_TCPHandler_21] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[13/Sep/2017:19:06:55 +0000] [xtremweb.common.StreamIO_TCPHandler_22] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[13/Sep/2017:19:06:57 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-226_226] WARN : 226 : getIdRpc a ete synchronise ! null
[13/Sep/2017:19:06:57 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-226_226] WARN : 226 : getIdRpc a ete synchronise ! GETAPPS
[13/Sep/2017:19:06:57 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-226_226] WARN : 226 : getIdRpc a ete synchronise ! GETAPPS
[13/Sep/2017:19:06:58 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-229_229] WARN : 229 : getIdRpc a ete synchronise ! null
[13/Sep/2017:19:06:58 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-229_229] WARN : 229 : getIdRpc a ete synchronise ! GET
[13/Sep/2017:19:06:58 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-229_229] WARN : 229 : getIdRpc a ete synchronise ! GET
[13/Sep/2017:19:06:58 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-231_231] WARN : 231 : getIdRpc a ete synchronise ! null
[13/Sep/2017:19:06:58 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-231_231] WARN : 231 : getIdRpc a ete synchronise ! SENDWORK
[13/Sep/2017:19:06:58 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-231_231] WARN : 231 : getIdRpc a ete synchronise ! SENDWORK
[13/Sep/2017:19:06:58 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-227_227] WARN : 227 : getIdRpc a ete synchronise ! null
[13/Sep/2017:19:06:58 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-227_227] WARN : 227 : getIdRpc a ete synchronise ! SENDWORK
[13/Sep/2017:19:06:58 +0000] [xtremweb.dispatcher.DBInterface_qtp2008966511-227_227] WARN : javax.mail.internet.AddressException: Missing local name in string ``@DBADMINEMAIL@'' (Missing local name)
[13/Sep/2017:19:06:58 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-227_227] WARN : 227 : getIdRpc a ete synchronise ! SENDWORK
[13/Sep/2017:19:06:58 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-230_230] WARN : 230 : getIdRpc a ete synchronise ! null
[13/Sep/2017:19:06:58 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-230_230] WARN : 230 : getIdRpc a ete synchronise ! GET
[13/Sep/2017:19:06:58 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-230_230] WARN : 230 : getIdRpc a ete synchronise ! GET
[13/Sep/2017:19:06:58 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-226_226] WARN : 226 : getIdRpc a ete synchronise ! null
[13/Sep/2017:19:06:58 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-226_226] WARN : 226 : getIdRpc a ete synchronise ! SENDWORK
[13/Sep/2017:19:06:58 +0000] [xtremweb.dispatcher.DBInterface_qtp2008966511-226_226] WARN : javax.mail.internet.AddressException: Missing local name in string ``@DBADMINEMAIL@'' (Missing local name)
[13/Sep/2017:19:06:58 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-226_226] WARN : 226 : getIdRpc a ete synchronise ! SENDWORK
[13/Sep/2017:19:06:58 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-229_229] WARN : 229 : getIdRpc a ete synchronise ! null
[13/Sep/2017:19:06:58 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-229_229] WARN : 229 : getIdRpc a ete synchronise ! GET
[13/Sep/2017:19:06:58 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-229_229] WARN : 229 : getIdRpc a ete synchronise ! GET
[13/Sep/2017:19:06:58 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-227_227] WARN : 227 : getIdRpc a ete synchronise ! null
[13/Sep/2017:19:06:58 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-227_227] WARN : 227 : getIdRpc a ete synchronise ! SENDWORK
[13/Sep/2017:19:06:58 +0000] [xtremweb.dispatcher.DBInterface_qtp2008966511-227_227] WARN : javax.mail.internet.AddressException: Missing local name in string ``@DBADMINEMAIL@'' (Missing local name)
[13/Sep/2017:19:06:58 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-227_227] WARN : 227 : getIdRpc a ete synchronise ! SENDWORK
[13/Sep/2017:19:07:08 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-224_224] WARN : 224 : getIdRpc a ete synchronise ! null
[13/Sep/2017:19:07:08 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-224_224] WARN : 224 : getIdRpc a ete synchronise ! GET
[13/Sep/2017:19:07:08 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-224_224] WARN : 224 : getIdRpc a ete synchronise ! GET
[13/Sep/2017:19:07:18 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-226_226] WARN : 226 : getIdRpc a ete synchronise ! null
[13/Sep/2017:19:07:18 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-226_226] WARN : 226 : getIdRpc a ete synchronise ! GET
[13/Sep/2017:19:07:18 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-226_226] WARN : 226 : getIdRpc a ete synchronise ! GET
[13/Sep/2017:19:07:28 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-231_231] WARN : 231 : getIdRpc a ete synchronise ! null
[13/Sep/2017:19:07:28 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-231_231] WARN : 231 : getIdRpc a ete synchronise ! GET
[13/Sep/2017:19:07:28 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-231_231] WARN : 231 : getIdRpc a ete synchronise ! GET
[13/Sep/2017:19:07:38 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-228_228] WARN : 228 : getIdRpc a ete synchronise ! null
[13/Sep/2017:19:07:38 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-228_228] WARN : 228 : getIdRpc a ete synchronise ! GET
[13/Sep/2017:19:07:38 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-228_228] WARN : 228 : getIdRpc a ete synchronise ! GET
[13/Sep/2017:19:07:40 +0000] [xtremweb.common.StreamIO_TCPHandler_23] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[13/Sep/2017:19:07:40 +0000] [xtremweb.common.StreamIO_TCPHandler_24] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[13/Sep/2017:19:07:40 +0000] [xtremweb.common.StreamIO_TCPHandler_25] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[13/Sep/2017:19:07:40 +0000] [xtremweb.common.StreamIO_TCPHandler_26] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[13/Sep/2017:19:07:40 +0000] [xtremweb.dispatcher.TCPHandler_TCPHandler_27] ERROR : Can't write result
[13/Sep/2017:19:07:40 +0000] [xtremweb.dispatcher.TCPHandler_TCPHandler_27] WARN : java.io.IOException: java.net.SocketException: Broken pipe (Write failed) (java.net.SocketException: Broken pipe (Write failed))
[13/Sep/2017:19:07:40 +0000] [xtremweb.common.StreamIO_TCPHandler_27] WARN : javax.net.ssl.SSLException: Connection has been shutdown: javax.net.ssl.SSLException: java.net.SocketException: Broken pipe (Write failed) (javax.net.ssl.SSLException: java.net.SocketException: Broken pipe (Write failed))
[13/Sep/2017:19:07:48 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-226_226] WARN : 226 : getIdRpc a ete synchronise ! null
[13/Sep/2017:19:07:48 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-226_226] WARN : 226 : getIdRpc a ete synchronise ! GET
[13/Sep/2017:19:07:48 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-226_226] WARN : 226 : getIdRpc a ete synchronise ! GET
[13/Sep/2017:19:07:55 +0000] [xtremweb.dispatcher.DBInterface_TCPHandler_28] WARN : javax.mail.internet.AddressException: Missing local name in string ``@DBADMINEMAIL@'' (Missing local name)
[13/Sep/2017:19:07:55 +0000] [xtremweb.common.StreamIO_TCPHandler_28] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[13/Sep/2017:19:07:55 +0000] [xtremweb.common.StreamIO_TCPHandler_29] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[13/Sep/2017:19:07:58 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-231_231] WARN : 231 : getIdRpc a ete synchronise ! null
[13/Sep/2017:19:07:58 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-231_231] WARN : 231 : getIdRpc a ete synchronise ! GET
[13/Sep/2017:19:07:58 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-231_231] WARN : 231 : getIdRpc a ete synchronise ! GET
[13/Sep/2017:19:08:08 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-226_226] WARN : 226 : getIdRpc a ete synchronise ! null
[13/Sep/2017:19:08:08 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-226_226] WARN : 226 : getIdRpc a ete synchronise ! GET
[13/Sep/2017:19:08:08 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-226_226] WARN : 226 : getIdRpc a ete synchronise ! GET
[13/Sep/2017:19:08:18 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-228_228] WARN : 228 : getIdRpc a ete synchronise ! null
[13/Sep/2017:19:08:18 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-228_228] WARN : 228 : getIdRpc a ete synchronise ! GET
[13/Sep/2017:19:08:18 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-228_228] WARN : 228 : getIdRpc a ete synchronise ! GET
[13/Sep/2017:19:08:25 +0000] [xtremweb.common.StreamIO_TCPHandler_30] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[13/Sep/2017:19:08:25 +0000] [xtremweb.common.StreamIO_TCPHandler_31] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[13/Sep/2017:19:08:25 +0000] [xtremweb.common.StreamIO_TCPHandler_32] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[13/Sep/2017:19:08:25 +0000] [xtremweb.dispatcher.DBInterface_TCPHandler_33] WARN : javax.mail.internet.AddressException: Missing local name in string ``@DBADMINEMAIL@'' (Missing local name)
[13/Sep/2017:19:08:25 +0000] [xtremweb.common.StreamIO_TCPHandler_33] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[13/Sep/2017:19:08:25 +0000] [xtremweb.dispatcher.TCPHandler_TCPHandler_34] ERROR : Can't write result
[13/Sep/2017:19:08:25 +0000] [xtremweb.dispatcher.TCPHandler_TCPHandler_34] WARN : java.io.IOException: java.net.SocketException: Broken pipe (Write failed) (java.net.SocketException: Broken pipe (Write failed))
[13/Sep/2017:19:08:25 +0000] [xtremweb.common.StreamIO_TCPHandler_34] WARN : javax.net.ssl.SSLException: Connection has been shutdown: javax.net.ssl.SSLException: java.net.SocketException: Broken pipe (Write failed) (javax.net.ssl.SSLException: java.net.SocketException: Broken pipe (Write failed))
[13/Sep/2017:19:08:28 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-229_229] WARN : 229 : getIdRpc a ete synchronise ! null
[13/Sep/2017:19:08:28 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-229_229] WARN : 229 : getIdRpc a ete synchronise ! GET
[13/Sep/2017:19:08:28 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-229_229] WARN : 229 : getIdRpc a ete synchronise ! GET
[13/Sep/2017:19:08:28 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-230_230] WARN : 230 : getIdRpc a ete synchronise ! null
[13/Sep/2017:19:08:28 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-230_230] WARN : 230 : getIdRpc a ete synchronise ! GET
[13/Sep/2017:19:08:28 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-230_230] WARN : 230 : getIdRpc a ete synchronise ! GET
[13/Sep/2017:19:08:28 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-227_227] WARN : 227 : getIdRpc a ete synchronise ! null
[13/Sep/2017:19:08:28 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-227_227] WARN : 227 : getIdRpc a ete synchronise ! GET
[13/Sep/2017:19:08:28 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-227_227] WARN : 227 : getIdRpc a ete synchronise ! GET
[13/Sep/2017:19:08:28 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-231_231] WARN : 231 : getIdRpc a ete synchronise ! null
[13/Sep/2017:19:08:28 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-231_231] WARN : 231 : getIdRpc a ete synchronise ! DOWNLOADDATA
[13/Sep/2017:19:08:28 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-231_231] WARN : 231 : getIdRpc a ete synchronise ! DOWNLOADDATA
[13/Sep/2017:19:08:48 +0000] [xtremweb.communications.TCPServer_TCPServerNIO_15] WARN : java.net.SocketException: Socket closed (Socket closed)
</msg>
<status status="PASS" endtime="20170913 19:08:48.856" starttime="20170913 19:08:48.846"></status>
</kw>
<status status="PASS" endtime="20170913 19:08:48.856" starttime="20170913 19:08:48.846"></status>
</kw>
<status status="PASS" endtime="20170913 19:08:48.857" starttime="20170913 19:08:48.845"></status>
</kw>
<kw name="Stop XtremWeb Worker" library="XWWorker">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Stop XtremWeb Worker</arg>
</arguments>
<msg timestamp="20170913 19:08:48.857" level="INFO">Stop XtremWeb Worker</msg>
<status status="PASS" endtime="20170913 19:08:48.857" starttime="20170913 19:08:48.857"></status>
</kw>
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${WORKER_PROCESS}</arg>
</arguments>
<msg timestamp="20170913 19:08:48.858" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20170913 19:08:48.859" level="INFO">Process completed.</msg>
<status status="PASS" endtime="20170913 19:08:48.859" starttime="20170913 19:08:48.858"></status>
</kw>
<status status="PASS" endtime="20170913 19:08:48.859" starttime="20170913 19:08:48.857"></status>
</kw>
<status status="PASS" endtime="20170913 19:08:48.859" starttime="20170913 19:08:48.737"></status>
</kw>
<status status="PASS" endtime="20170913 19:08:48.859" starttime="20170913 19:08:48.720"></status>
</kw>
<doc>End-to-End test HelloWorld usecase Oracle+bridge+xtremweb</doc>
<status status="PASS" endtime="20170913 19:08:48.859" starttime="20170913 19:05:40.581"></status>
</suite>
<suite source="/home/vagrant/iexecdev/iexec-node/tests/rf/Tests/interfaceSuite.robot" id="s1-s3" name="interfaceSuite">
<test id="s1-s3-t1" name="Test Interface Web">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>TODO</arg>
</arguments>
<msg timestamp="20170913 19:08:48.869" level="INFO">TODO</msg>
<status status="PASS" endtime="20170913 19:08:48.869" starttime="20170913 19:08:48.869"></status>
</kw>
<doc>We can use via http://robotframework.org/#libraries External Selenium2Library : http://robotframework.org/Selenium2Library/Selenium2Library.html</doc>
<tags>
<tag>Web Tests</tag>
</tags>
<status status="PASS" endtime="20170913 19:08:48.870" critical="yes" starttime="20170913 19:08:48.868"></status>
</test>
<doc>All user interfaces tests</doc>
<status status="PASS" endtime="20170913 19:08:48.871" starttime="20170913 19:08:48.865"></status>
</suite>
<suite source="/home/vagrant/iexecdev/iexec-node/tests/rf/Tests/truffleTestsOnLocalGeth.robot" id="s1-s4" name="truffleTestsOnLocalGeth">
<kw type="setup" name="Start Geth42" library="ETHGeth">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd ~/gethUtils &amp;&amp; ./resetANewChain42AndMine.sh</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${geth_result}</var>
</assign>
<msg timestamp="20170913 19:08:48.881" level="INFO">Starting process:
cd ~/gethUtils &amp;&amp; ./resetANewChain42AndMine.sh</msg>
<msg timestamp="20170913 19:08:48.884" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170913 19:18:58.837" level="INFO">Process completed.</msg>
<msg timestamp="20170913 19:18:58.838" level="INFO">${geth_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170913 19:18:58.838" starttime="20170913 19:08:48.881"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${geth_result.stderr}</arg>
</arguments>
<msg timestamp="20170913 19:18:58.839" level="INFO">WARN [09-13|19:08:54] No etherbase set and no accounts found as default 
INFO [09-13|19:08:54] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
INFO [09-13|19:08:54] Writing custom genesis block 
INFO [09-13|19:08:54] Successfully wrote genesis state         database=chaindata                                             hash=afad92…166fe3
INFO [09-13|19:08:54] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/lightchaindata cache=16 handles=16
INFO [09-13|19:08:54] Writing custom genesis block 
INFO [09-13|19:08:54] Successfully wrote genesis state         database=lightchaindata                                             hash=afad92…166fe3
WARN [09-13|19:08:54] No etherbase set and no accounts found as default 
INFO [09-13|19:09:01] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
INFO [09-13|19:09:01] Successfully wrote genesis state         database=chaindata                                             hash=afad92…166fe3
INFO [09-13|19:09:01] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/lightchaindata cache=16 handles=16
INFO [09-13|19:09:01] Successfully wrote genesis state         database=lightchaindata                                             hash=afad92…166fe3
INFO [09-13|19:09:04] Generating DAG in progress               epoch=1 percentage=0 elapsed=2.062s
INFO [09-13|19:09:06] Generating DAG in progress               epoch=1 percentage=1 elapsed=4.140s
INFO [09-13|19:09:09] Generating DAG in progress               epoch=1 percentage=2 elapsed=6.850s
INFO [09-13|19:09:11] Generating DAG in progress               epoch=1 percentage=3 elapsed=9.366s
INFO [09-13|19:09:14] Generating DAG in progress               epoch=1 percentage=4 elapsed=11.861s
INFO [09-13|19:09:16] Generating DAG in progress               epoch=1 percentage=5 elapsed=14.365s
INFO [09-13|19:09:19] Generating DAG in progress               epoch=1 percentage=6 elapsed=16.942s
INFO [09-13|19:09:21] Generating DAG in progress               epoch=1 percentage=7 elapsed=19.464s
INFO [09-13|19:09:24] Generating DAG in progress               epoch=1 percentage=8 elapsed=21.963s
INFO [09-13|19:09:26] Generating DAG in progress               epoch=1 percentage=9 elapsed=24.485s
INFO [09-13|19:09:29] Generating DAG in progress               epoch=1 percentage=10 elapsed=26.968s
INFO [09-13|19:09:31] Generating DAG in progress               epoch=1 percentage=11 elapsed=29.511s
INFO [09-13|19:09:34] Generating DAG in progress               epoch=1 percentage=12 elapsed=32.729s
INFO [09-13|19:09:37] Generating DAG in progress               epoch=1 percentage=13 elapsed=35.221s
INFO [09-13|19:09:40] Generating DAG in progress               epoch=1 percentage=14 elapsed=37.878s
INFO [09-13|19:09:42] Generating DAG in progress               epoch=1 percentage=15 elapsed=40.415s
INFO [09-13|19:09:45] Generating DAG in progress               epoch=1 percentage=16 elapsed=42.870s
INFO [09-13|19:09:47] Generating DAG in progress               epoch=1 percentage=17 elapsed=45.361s
INFO [09-13|19:09:50] Generating DAG in progress               epoch=1 percentage=18 elapsed=47.907s
INFO [09-13|19:09:52] Generating DAG in progress               epoch=1 percentage=19 elapsed=50.426s
INFO [09-13|19:09:55] Generating DAG in progress               epoch=1 percentage=20 elapsed=52.933s
INFO [09-13|19:09:57] Generating DAG in progress               epoch=1 percentage=21 elapsed=55.448s
INFO [09-13|19:10:00] Generating DAG in progress               epoch=1 percentage=22 elapsed=57.943s
INFO [09-13|19:10:02] Generating DAG in progress               epoch=1 percentage=23 elapsed=1m0.447s
INFO [09-13|19:10:05] Generating DAG in progress               epoch=1 percentage=24 elapsed=1m2.954s
INFO [09-13|19:10:07] Generating DAG in progress               epoch=1 percentage=25 elapsed=1m5.451s
INFO [09-13|19:10:11] Generating DAG in progress               epoch=1 percentage=26 elapsed=1m8.991s
INFO [09-13|19:10:13] Generating DAG in progress               epoch=1 percentage=27 elapsed=1m11.531s
INFO [09-13|19:10:16] Generating DAG in progress               epoch=1 percentage=28 elapsed=1m14.136s
INFO [09-13|19:10:18] Generating DAG in progress               epoch=1 percentage=29 elapsed=1m16.717s
INFO [09-13|19:10:21] Generating DAG in progress               epoch=1 percentage=30 elapsed=1m19.376s
INFO [09-13|19:10:24] Generating DAG in progress               epoch=1 percentage=31 elapsed=1m21.859s
INFO [09-13|19:10:26] Generating DAG in progress               epoch=1 percentage=32 elapsed=1m24.469s
INFO [09-13|19:10:29] Generating DAG in progress               epoch=1 percentage=33 elapsed=1m26.970s
INFO [09-13|19:10:31] Generating DAG in progress               epoch=1 percentage=34 elapsed=1m29.600s
INFO [09-13|19:10:34] Generating DAG in progress               epoch=1 percentage=35 elapsed=1m32.107s
INFO [09-13|19:10:36] Generating DAG in progress               epoch=1 percentage=36 elapsed=1m34.598s
INFO [09-13|19:10:39] Generating DAG in progress               epoch=1 percentage=37 elapsed=1m37.062s
INFO [09-13|19:10:41] Generating DAG in progress               epoch=1 percentage=38 elapsed=1m39.565s
INFO [09-13|19:10:44] Generating DAG in progress               epoch=1 percentage=39 elapsed=1m42.086s
INFO [09-13|19:10:46] Generating DAG in progress               epoch=1 percentage=40 elapsed=1m44.579s
INFO [09-13|19:10:49] Generating DAG in progress               epoch=1 percentage=41 elapsed=1m47.138s
INFO [09-13|19:10:51] Generating DAG in progress               epoch=1 percentage=42 elapsed=1m49.640s
INFO [09-13|19:10:54] Generating DAG in progress               epoch=1 percentage=43 elapsed=1m52.134s
INFO [09-13|19:10:56] Generating DAG in progress               epoch=1 percentage=44 elapsed=1m54.638s
INFO [09-13|19:10:59] Generating DAG in progress               epoch=1 percentage=45 elapsed=1m57.158s
INFO [09-13|19:11:02] Generating DAG in progress               epoch=1 percentage=46 elapsed=2m0.213s
INFO [09-13|19:11:04] Generating DAG in progress               epoch=1 percentage=47 elapsed=2m2.742s
INFO [09-13|19:11:07] Generating DAG in progress               epoch=1 percentage=48 elapsed=2m5.383s
INFO [09-13|19:11:10] Generating DAG in progress               epoch=1 percentage=49 elapsed=2m7.923s
INFO [09-13|19:11:12] Generating DAG in progress               epoch=1 percentage=50 elapsed=2m10.600s
INFO [09-13|19:11:15] Generating DAG in progress               epoch=1 percentage=51 elapsed=2m13.096s
INFO [09-13|19:11:17] Generating DAG in progress               epoch=1 percentage=52 elapsed=2m15.667s
INFO [09-13|19:11:20] Generating DAG in progress               epoch=1 percentage=53 elapsed=2m18.206s
INFO [09-13|19:11:22] Generating DAG in progress               epoch=1 percentage=54 elapsed=2m20.744s
INFO [09-13|19:11:25] Generating DAG in progress               epoch=1 percentage=55 elapsed=2m23.224s
INFO [09-13|19:11:27] Generating DAG in progress               epoch=1 percentage=56 elapsed=2m25.745s
INFO [09-13|19:11:30] Generating DAG in progress               epoch=1 percentage=57 elapsed=2m28.205s
INFO [09-13|19:11:32] Generating DAG in progress               epoch=1 percentage=58 elapsed=2m30.705s
INFO [09-13|19:11:35] Generating DAG in progress               epoch=1 percentage=59 elapsed=2m33.234s
INFO [09-13|19:11:37] Generating DAG in progress               epoch=1 percentage=60 elapsed=2m35.715s
INFO [09-13|19:11:40] Generating DAG in progress               epoch=1 percentage=61 elapsed=2m38.191s
INFO [09-13|19:11:43] Generating DAG in progress               epoch=1 percentage=62 elapsed=2m41.242s
INFO [09-13|19:11:45] Generating DAG in progress               epoch=1 percentage=63 elapsed=2m43.743s
INFO [09-13|19:11:48] Generating DAG in progress               epoch=1 percentage=64 elapsed=2m46.387s
INFO [09-13|19:11:51] Generating DAG in progress               epoch=1 percentage=65 elapsed=2m48.880s
INFO [09-13|19:11:53] Generating DAG in progress               epoch=1 percentage=66 elapsed=2m51.344s
INFO [09-13|19:11:56] Generating DAG in progress               epoch=1 percentage=67 elapsed=2m53.836s
INFO [09-13|19:11:58] Generating DAG in progress               epoch=1 percentage=68 elapsed=2m56.363s
INFO [09-13|19:12:01] Generating DAG in progress               epoch=1 percentage=69 elapsed=2m58.892s
INFO [09-13|19:12:03] Generating DAG in progress               epoch=1 percentage=70 elapsed=3m1.461s
INFO [09-13|19:12:06] Generating DAG in progress               epoch=1 percentage=71 elapsed=3m3.949s
INFO [09-13|19:12:08] Generating DAG in progress               epoch=1 percentage=72 elapsed=3m6.429s
INFO [09-13|19:12:11] Generating DAG in progress               epoch=1 percentage=73 elapsed=3m8.934s
INFO [09-13|19:12:13] Generating DAG in progress               epoch=1 percentage=74 elapsed=3m11.468s
INFO [09-13|19:12:16] Generating DAG in progress               epoch=1 percentage=75 elapsed=3m13.933s
INFO [09-13|19:12:19] Generating DAG in progress               epoch=1 percentage=76 elapsed=3m17.249s
INFO [09-13|19:12:21] Generating DAG in progress               epoch=1 percentage=77 elapsed=3m19.785s
INFO [09-13|19:12:24] Generating DAG in progress               epoch=1 percentage=78 elapsed=3m22.444s
INFO [09-13|19:12:27] Generating DAG in progress               epoch=1 percentage=79 elapsed=3m24.908s
INFO [09-13|19:12:29] Generating DAG in progress               epoch=1 percentage=80 elapsed=3m27.387s
INFO [09-13|19:12:32] Generating DAG in progress               epoch=1 percentage=81 elapsed=3m29.861s
INFO [09-13|19:12:34] Generating DAG in progress               epoch=1 percentage=82 elapsed=3m32.403s
INFO [09-13|19:12:37] Generating DAG in progress               epoch=1 percentage=83 elapsed=3m34.890s
INFO [09-13|19:12:39] Generating DAG in progress               epoch=1 percentage=84 elapsed=3m37.366s
INFO [09-13|19:12:42] Generating DAG in progress               epoch=1 percentage=85 elapsed=3m39.899s
INFO [09-13|19:12:44] Generating DAG in progress               epoch=1 percentage=86 elapsed=3m42.404s
INFO [09-13|19:12:47] Generating DAG in progress               epoch=1 percentage=87 elapsed=3m44.902s
INFO [09-13|19:12:49] Generating DAG in progress               epoch=1 percentage=88 elapsed=3m47.453s
INFO [09-13|19:12:52] Generating DAG in progress               epoch=1 percentage=89 elapsed=3m49.947s
INFO [09-13|19:12:55] Generating DAG in progress               epoch=1 percentage=90 elapsed=3m53.290s
INFO [09-13|19:12:57] Generating DAG in progress               epoch=1 percentage=91 elapsed=3m55.802s
INFO [09-13|19:13:00] Generating DAG in progress               epoch=1 percentage=92 elapsed=3m58.453s
INFO [09-13|19:13:03] Generating DAG in progress               epoch=1 percentage=93 elapsed=4m1.005s
INFO [09-13|19:13:05] Generating DAG in progress               epoch=1 percentage=94 elapsed=4m3.562s
INFO [09-13|19:13:08] Generating DAG in progress               epoch=1 percentage=95 elapsed=4m6.106s
INFO [09-13|19:13:10] Generating DAG in progress               epoch=1 percentage=96 elapsed=4m8.623s
INFO [09-13|19:13:13] Generating DAG in progress               epoch=1 percentage=97 elapsed=4m11.115s
INFO [09-13|19:13:15] Generating DAG in progress               epoch=1 percentage=98 elapsed=4m13.652s
INFO [09-13|19:13:18] Generating DAG in progress               epoch=1 percentage=99 elapsed=4m16.296s
INFO [09-13|19:13:18] Generated ethash verification cache      epoch=1 elapsed=4m16.299s
INFO [09-13|19:13:18] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
INFO [09-13|19:13:18] Successfully wrote genesis state         database=chaindata                                             hash=afad92…166fe3
INFO [09-13|19:13:18] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/lightchaindata cache=16 handles=16
INFO [09-13|19:13:18] Successfully wrote genesis state         database=lightchaindata                                             hash=afad92…166fe3
INFO [09-13|19:13:24] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-13|19:13:34] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-13|19:13:44] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-13|19:13:55] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-13|19:14:05] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-13|19:14:16] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-13|19:14:26] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-13|19:14:37] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-13|19:14:47] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-13|19:14:57] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-13|19:15:08] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-13|19:15:18] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-13|19:15:28] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-13|19:15:39] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-13|19:15:49] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-13|19:16:00] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-13|19:16:10] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-13|19:16:21] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-13|19:16:31] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-13|19:16:41] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-13|19:16:52] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-13|19:17:02] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-13|19:17:12] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-13|19:17:23] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-13|19:17:33] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-13|19:17:44] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-13|19:17:54] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-13|19:18:04] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-13|19:18:15] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-13|19:18:25] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-13|19:18:36] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-13|19:18:36] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable</msg>
<status status="PASS" endtime="20170913 19:18:58.839" starttime="20170913 19:18:58.838"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${geth_result.stdout}</arg>
</arguments>
<msg timestamp="20170913 19:18:58.840" level="INFO">kill existing geth process
clear ~/iexecdev/.ethereum/net42/ content
clear ~/.ethash content
creating 10 accounts
create account 1
Address: {a8cd0a29bc85daf3fc7aa7a0f5794252d4cbfbae}
create account 2
Address: {cf0184cdd5c30496cd5b215747053810e0ede227}
create account 3
Address: {add023750018c93e8d5a337987497111e208e441}
create account 4
Address: {06c9f6d7bfb1c64eec99b2ebec938e7f2c2a05ad}
create account 5
Address: {e800ec2fed4125638572da6e2d6bbced5dda6fad}
create account 6
Address: {e8528afdb7d6a7a86deaf12756c5f58bb04677d4}
create account 7
Address: {fb269d2017bed1af1b7bee7c82f0401b8f17ce19}
create account 8
Address: {e2c24a061f534de62ace28ad308d517779fefb3f}
create account 9
Address: {38c981c34ac2311fcf3a736eb7267f23d8c9dc1f}
create account 10
Address: {dddc43cc8514c7c34b8936415a6d3cc1cbb34c69}
create DAG epoch 1
clear ~/.ethash content
making DAG, this could take awhile...
start a coinbase miner in background
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
5 blocks mined in geth 42 !
unlocked 9 accounts
Fatal: Failed to open database: resource temporarily unavailable
unlock account 1
true
unlock account 2
true
unlock account 3
true
unlock account 4
true
unlock account 5
true
unlock account 6
true
unlock account 7
true
unlock account 8
true
unlock account 9
true
local geth 42 ready to go for testing</msg>
<status status="PASS" endtime="20170913 19:18:58.841" starttime="20170913 19:18:58.840"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${geth_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170913 19:18:58.841" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170913 19:18:58.841" starttime="20170913 19:18:58.841"></status>
</kw>
<status status="PASS" endtime="20170913 19:18:58.841" starttime="20170913 19:08:48.880"></status>
</kw>
<test id="s1-s4-t1" name="Test Iexec Oracle Truffle Tests On Local Geth">
<kw name="Iexec Oracle Truffle Tests" library="IexecOracle">
<tags>
<tag>Smart contract Tests</tag>
</tags>
<doc>call truffle test and show the result here.</doc>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${IEXEC_ORACLE_FORCE_GIT_CLONE}' == 'true'</arg>
<arg>Git Clone Iexec Oracle</arg>
</arguments>
<status status="PASS" endtime="20170913 19:18:58.843" starttime="20170913 19:18:58.843"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd iexec-oracle &amp;&amp; ./node_modules/.bin/truffle test test/iexecoracleapi.js</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${truffletest_result}</var>
</assign>
<msg timestamp="20170913 19:18:58.844" level="INFO">Starting process:
cd iexec-oracle &amp;&amp; ./node_modules/.bin/truffle test test/iexecoracleapi.js</msg>
<msg timestamp="20170913 19:18:58.853" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170913 19:21:07.267" level="INFO">Process completed.</msg>
<msg timestamp="20170913 19:21:07.267" level="INFO">${truffletest_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170913 19:21:07.267" starttime="20170913 19:18:58.844"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stderr}</arg>
</arguments>
<msg timestamp="20170913 19:21:07.268" level="INFO"></msg>
<status status="PASS" endtime="20170913 19:21:07.268" starttime="20170913 19:21:07.268"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
</arguments>
<msg timestamp="20170913 19:21:07.269" level="INFO">Using network 'development'.

IexecOracle deployed at address :0x30eac6a4cfa98ba61ad1c3067175927a4898d1fc
HelloWorldTest deployed at address :0xe489b3eb10cb0591eda0635f4d8080e10dd39add

[0m[0m
[0m  Contract: IexecOracleAPI[0m
refill 30 ether to 0xadd023750018c93e8d5a337987497111e208e441
refill 30 ether to 0xcf0184cdd5c30496cd5b215747053810e0ede227
Geth mode : run out of gas. throw expected ?
  [32m  ✓[0m[90m Test call registerSmartContractAndCreator with tx.origin = msg.sender[0m[31m (5278ms)[0m
[0m    Test IexecOracle on IexecOracle well initialized[0m
    [32m  ✓[0m[90m Test Launch Event when call iexecSubmit[0m[31m (4480ms)[0m
[0m    Test Submit function call then simulate bridge response[0m
Geth mode : run out of gas. throw expected ?
    [32m  ✓[0m[90m Only bridge can call SubmitCallback fonction[0m[31m (3162ms)[0m
    [32m  ✓[0m[90m Simulate bridge response OK and test event Submit[0m[31m (4206ms)[0m
    [32m  ✓[0m[90m Simulate bridge response KO and test event Submit[0m[31m (2210ms)[0m
    [32m  ✓[0m[90m Simulate bridge SubmitCallback and test event Submit, then next SubmitCallback call do not generate event Submit[0m[31m (3173ms)[0m
[0m    Test IexecOracleAPI on IexecOracle well initialized[0m
    [32m  ✓[0m[90m Test creator and creator of IexecOracleAPI are set correctly in IexecOracle[0m
Geth mode : run out of gas. throw expected ?
    [32m  ✓[0m[90m Cannot change creator in aIexecOracleInstance after first call by IexecOracleAPI constructor[0m[31m (4236ms)[0m


[92m [0m[32m 8 passing[0m[90m (2m)[0m
</msg>
<status status="PASS" endtime="20170913 19:21:07.269" starttime="20170913 19:21:07.268"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${truffletest_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170913 19:21:07.269" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170913 19:21:07.269" starttime="20170913 19:21:07.269"></status>
</kw>
<status status="PASS" endtime="20170913 19:21:07.270" starttime="20170913 19:18:58.843"></status>
</kw>
<doc>call truffle test on a started local geth and show the result here.</doc>
<tags>
<tag>Smart contract Tests</tag>
</tags>
<status status="PASS" endtime="20170913 19:21:07.270" critical="yes" starttime="20170913 19:18:58.842"></status>
</test>
<kw type="teardown" name="Stop Geth42" library="ETHGeth">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd ~/gethUtils &amp;&amp; ./killGeth.sh</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${geth_result}</var>
</assign>
<msg timestamp="20170913 19:21:07.272" level="INFO">Starting process:
cd ~/gethUtils &amp;&amp; ./killGeth.sh</msg>
<msg timestamp="20170913 19:21:07.282" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170913 19:21:07.285" level="INFO">Process completed.</msg>
<msg timestamp="20170913 19:21:07.286" level="INFO">${geth_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170913 19:21:07.286" starttime="20170913 19:21:07.272"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${geth_result.stderr}</arg>
</arguments>
<msg timestamp="20170913 19:21:07.286" level="INFO"></msg>
<status status="PASS" endtime="20170913 19:21:07.286" starttime="20170913 19:21:07.286"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${geth_result.stdout}</arg>
</arguments>
<msg timestamp="20170913 19:21:07.287" level="INFO"></msg>
<status status="PASS" endtime="20170913 19:21:07.287" starttime="20170913 19:21:07.287"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${geth_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170913 19:21:07.288" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170913 19:21:07.288" starttime="20170913 19:21:07.287"></status>
</kw>
<status status="PASS" endtime="20170913 19:21:07.288" starttime="20170913 19:21:07.271"></status>
</kw>
<doc>All smart contract tests on Local Geth</doc>
<status status="PASS" endtime="20170913 19:21:07.288" starttime="20170913 19:08:48.873"></status>
</suite>
<suite source="/home/vagrant/iexecdev/iexec-node/tests/rf/Tests/truffleTestsOnTestrpc.robot" id="s1-s5" name="truffleTestsOnTestrpc">
<kw type="setup" name="Start Testrpc" library="ETHTestrpc">
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>testrpc</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${created_process}</var>
</assign>
<msg timestamp="20170913 19:21:07.298" level="INFO">Starting process:
testrpc</msg>
<msg timestamp="20170913 19:21:07.301" level="INFO">${created_process} = 53</msg>
<status status="PASS" endtime="20170913 19:21:07.301" starttime="20170913 19:21:07.298"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TESTRPC_PROCESS}</arg>
<arg>${created_process}</arg>
</arguments>
<msg timestamp="20170913 19:21:07.302" level="INFO">${TESTRPC_PROCESS} = 53</msg>
<status status="PASS" endtime="20170913 19:21:07.302" starttime="20170913 19:21:07.302"></status>
</kw>
<status status="PASS" endtime="20170913 19:21:07.302" starttime="20170913 19:21:07.297"></status>
</kw>
<test id="s1-s5-t1" name="Test Iexec Oracle Truffle Tests On Testrpc">
<kw name="Iexec Oracle Truffle Tests" library="IexecOracle">
<tags>
<tag>Smart contract Tests</tag>
</tags>
<doc>call truffle test and show the result here.</doc>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${IEXEC_ORACLE_FORCE_GIT_CLONE}' == 'true'</arg>
<arg>Git Clone Iexec Oracle</arg>
</arguments>
<status status="PASS" endtime="20170913 19:21:07.310" starttime="20170913 19:21:07.309"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd iexec-oracle &amp;&amp; ./node_modules/.bin/truffle test test/iexecoracleapi.js</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${truffletest_result}</var>
</assign>
<msg timestamp="20170913 19:21:07.310" level="INFO">Starting process:
cd iexec-oracle &amp;&amp; ./node_modules/.bin/truffle test test/iexecoracleapi.js</msg>
<msg timestamp="20170913 19:21:07.314" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170913 19:21:12.248" level="INFO">Process completed.</msg>
<msg timestamp="20170913 19:21:12.249" level="INFO">${truffletest_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170913 19:21:12.249" starttime="20170913 19:21:07.310"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stderr}</arg>
</arguments>
<msg timestamp="20170913 19:21:12.249" level="INFO"></msg>
<status status="PASS" endtime="20170913 19:21:12.249" starttime="20170913 19:21:12.249"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
</arguments>
<msg timestamp="20170913 19:21:12.249" level="INFO">Using network 'development'.

IexecOracle deployed at address :0xd69723ee628fe1ed33a7245098aacf943c1d8dcc
HelloWorldTest deployed at address :0xa1a52d9339e921991cc7ca739f972fa13f98abb3

[0m[0m
[0m  Contract: IexecOracleAPI[0m
TestRPC mode : Error: VM Exception. throw expected ?
  [32m  ✓[0m[90m Test call registerSmartContractAndCreator with tx.origin = msg.sender[0m[33m (74ms)[0m
[0m    Test IexecOracle on IexecOracle well initialized[0m
    [32m  ✓[0m[90m Test Launch Event when call iexecSubmit[0m[31m (201ms)[0m
[0m    Test Submit function call then simulate bridge response[0m
TestRPC mode : Error: VM Exception. throw expected ?
    [32m  ✓[0m[90m Only bridge can call SubmitCallback fonction[0m
    [32m  ✓[0m[90m Simulate bridge response OK and test event Submit[0m[31m (239ms)[0m
    [32m  ✓[0m[90m Simulate bridge response KO and test event Submit[0m[31m (326ms)[0m
    [32m  ✓[0m[90m Simulate bridge SubmitCallback and test event Submit, then next SubmitCallback call do not generate event Submit[0m[31m (136ms)[0m
[0m    Test IexecOracleAPI on IexecOracle well initialized[0m
    [32m  ✓[0m[90m Test creator and creator of IexecOracleAPI are set correctly in IexecOracle[0m[33m (38ms)[0m
TestRPC mode : Error: VM Exception. throw expected ?
    [32m  ✓[0m[90m Cannot change creator in aIexecOracleInstance after first call by IexecOracleAPI constructor[0m


[92m [0m[32m 8 passing[0m[90m (2s)[0m
</msg>
<status status="PASS" endtime="20170913 19:21:12.249" starttime="20170913 19:21:12.249"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${truffletest_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170913 19:21:12.250" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170913 19:21:12.250" starttime="20170913 19:21:12.249"></status>
</kw>
<status status="PASS" endtime="20170913 19:21:12.250" starttime="20170913 19:21:07.309"></status>
</kw>
<doc>call truffle test on a started testrpc and show the result here.</doc>
<tags>
<tag>Smart contract Tests</tag>
</tags>
<status status="PASS" endtime="20170913 19:21:12.251" critical="yes" starttime="20170913 19:21:07.302"></status>
</test>
<kw type="teardown" name="Stop Testrpc" library="ETHTestrpc">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${TESTRPC_PROCESS}</arg>
</arguments>
<msg timestamp="20170913 19:21:12.252" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20170913 19:21:12.258" level="INFO">Process completed.</msg>
<status status="PASS" endtime="20170913 19:21:12.258" starttime="20170913 19:21:12.252"></status>
</kw>
<status status="PASS" endtime="20170913 19:21:12.259" starttime="20170913 19:21:12.252"></status>
</kw>
<doc>All smart contract tests on testrpc</doc>
<status status="PASS" endtime="20170913 19:21:12.259" starttime="20170913 19:21:07.291"></status>
</suite>
<suite source="/home/vagrant/iexecdev/iexec-node/tests/rf/Tests/xwcommandsSuite.robot" id="s1-s6" name="xwcommandsSuite">
<kw type="setup" name="Prepare And Start XWtremWeb Server And XWtremWeb Worker" library="XWCommon">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${XW_FORCE_GIT_CLONE}' == 'true'</arg>
<arg>Git Clone XWtremWeb</arg>
</arguments>
<status status="PASS" endtime="20170913 19:21:12.268" starttime="20170913 19:21:12.268"></status>
</kw>
<kw name="Compile XWtremWeb" library="XWCommon">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd ${BUILD_PATH} &amp;&amp; make clean &amp;&amp; make</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${compile_result}</var>
</assign>
<msg timestamp="20170913 19:21:12.269" level="INFO">Starting process:
cd ./xtremweb-hep/build &amp;&amp; make clean &amp;&amp; make</msg>
<msg timestamp="20170913 19:21:12.272" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170913 19:21:40.088" level="INFO">Process completed.</msg>
<msg timestamp="20170913 19:21:40.089" level="INFO">${compile_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170913 19:21:40.089" starttime="20170913 19:21:12.268"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${compile_result.stderr}</arg>
</arguments>
<msg timestamp="20170913 19:21:40.090" level="INFO"></msg>
<status status="PASS" endtime="20170913 19:21:40.090" starttime="20170913 19:21:40.089"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${compile_result.stdout}</arg>
</arguments>
<msg timestamp="20170913 19:21:40.090" level="INFO">./build.sh -f build.xml clean 
Buildfile: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/build.xml

tstamp:
[echoproperties] #Ant properties
[echoproperties] #Wed Sep 13 19:21:12 UTC 2017
[echoproperties] v.branch=head
[echoproperties] v.build=201709131921
[echoproperties] v.major=10
[echoproperties] v.micro=0
[echoproperties] v.minor=6

version:

clean:
   [delete] Deleting: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/.build
   [delete] Deleting directory /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes
     [exec] make[1]: Entering directory `/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/natif'
     [exec] rm -f XWInterruptsImpl.h PortMapper.h XWUtilImpl.h XWTracerImpl.h
     [exec] mkdir: cannot create directory ‘../../build/classes/obj/’: No such file or directory
     [exec] make[1]: Leaving directory `/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/natif'

BUILD SUCCESSFUL
Total time: 1 second
./build.sh distrib 
Buildfile: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/build.xml

tstamp:
[echoproperties] #Ant properties
[echoproperties] #Wed Sep 13 19:21:14 UTC 2017
[echoproperties] v.branch=head
[echoproperties] v.build=201709131921
[echoproperties] v.major=10
[echoproperties] v.micro=0
[echoproperties] v.minor=6

version:

configure:
     [echo] 
     [echo]       ant version = Apache Ant(TM) version 1.8.4 compiled on May 22 2012
     [echo] 
     [echo]       os         = Linux
     [echo]       os.arch    = amd64
     [echo]       target     = Linux
     [echo]       xwarch     = amd64
     [echo]       xwsuffix   = linux-amd64
     [echo]       debug      = true
     [echo]       debuglevel = source,lines
     [echo] 
     [echo]         cross=${cross.prefix}
     [echo]         target java home =${cross.java.home}
     [echo]     	target           =Linux
     [echo]     	xwversion=10.6.0

templates:
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common

prepare:
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes/obj
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes/obj/linux-amd64
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes/jni
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes/xwclasses
     [echo] 
     [echo]       classpath=/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/test:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/JOpenId-1.08.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/JSON-java.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/MinML.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/activation.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/antlr.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/attic-all-0.3.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/bcpkix-jdk15on-151.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/bcprov-jdk15on-151.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/bcprov-jdk16-140.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/commons-codec-1.3.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/commons-fileupload-1.2.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/commons-httpclient-3.0.1.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/commons-io-1.3.2.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/commons-logging-1.1.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/ibis-util-2.1.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/jcert.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/jetty-http-9.3.8.v20160314.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/jetty-io-9.3.8.v20160314.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/jetty-server-9.3.8.v20160314.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/jetty-util-9.3.8.v20160314.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/jose4j-0.5.5.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/junit-4.10.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/log4j-1.2.17.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/mail.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/mysql-connector-java-5.1.6-bin.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/scribejava-apis-3.3.1-SNAPSHOT.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/scribejava-core-3.3.1-SNAPSHOT.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/servlet-api-3.1.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/slf4j-api-1.7.2.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/slf4j-log4j12-1.7.2.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/smartsockets-1.4.jar
     [echo]     

common:
    [javac] Compiling 277 source files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/XWTools.java:61: warning: [deprecation] HTTPOpenIdHandler in xtremweb.dispatcher has been deprecated
    [javac] import xtremweb.dispatcher.HTTPOpenIdHandler;
    [javac]                           ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/security/ACLConnect.java:36: warning: AclEntryImpl is internal proprietary API and may be removed in a future release
    [javac] import sun.security.acl.AclEntryImpl;
    [javac]                        ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/security/ACLConnect.java:37: warning: AclImpl is internal proprietary API and may be removed in a future release
    [javac] import sun.security.acl.AclImpl;
    [javac]                        ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/security/ACLConnect.java:38: warning: PermissionImpl is internal proprietary API and may be removed in a future release
    [javac] import sun.security.acl.PermissionImpl;
    [javac]                        ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/security/ACLConnect.java:39: warning: PrincipalImpl is internal proprietary API and may be removed in a future release
    [javac] import sun.security.acl.PrincipalImpl;
    [javac]                        ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/communications/CommClient.java:870: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] 		return version(new XMLRPCCommandVersion(newURI()));
    [javac] 		                   ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/communications/CommClient.java:881: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] 	public Version version(final XMLRPCCommandVersion command)
    [javac] 	                             ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/DataInterface.java:625: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/communications/IdRpc.java:89: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] 		public XMLRPCCommandVersion newCommand(final URI uri, final UserInterface client, final Table obj)
    [javac] 		       ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/communications/IdRpc.java:91: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] 			return new XMLRPCCommandVersion(uri, client);
    [javac] 			           ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/communications/XMLRPCCommand.java:614: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] 			return new XMLRPCCommandVersion(input);
    [javac] 			           ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/AppInterface.java:1446: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/UserInterface.java:577: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/GroupInterface.java:319: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/HostInterface.java:1212: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/SessionInterface.java:264: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/TaskInterface.java:441: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/TraceInterface.java:348: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/UserGroupInterface.java:365: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/WorkInterface.java:933: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/AppType.java:263: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/CPUType.java:223: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/DataType.java:265: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/Executable.java:294: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/JobInterface.java:409: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/OSType.java:243: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/Status.java:245: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/UserRightsType.java:243: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/XWTools.java:805: warning: [deprecation] HTTPOpenIdHandler in xtremweb.dispatcher has been deprecated
    [javac] 		final Logger logger = new Logger(HTTPOpenIdHandler.class);
    [javac] 		                                 ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/XWTools.java:817: warning: BASE64Encoder is internal proprietary API and may be removed in a future release
    [javac] 			out.println(new sun.misc.BASE64Encoder().encode(cert.getEncoded()));
    [javac] 			                        ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/communications/HTTPClient.java:238: warning: [deprecation] Protocol(String,SecureProtocolSocketFactory,int) in Protocol has been deprecated
    [javac] 				xwssl = new Protocol(uri.getScheme(), new AuthSSLProtocolSocketFactory(uri.getScheme(), keyStore,
    [javac] 				        ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/dispatcher/Dispatcher.java:216: warning: [deprecation] HTTPOpenIdHandler in xtremweb.dispatcher has been deprecated
    [javac] 				HTTPOpenIdHandler.setCACertificateEntries(getConfig().getKeyStore());
    [javac] 				^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/security/ACLConnect.java:65: warning: PermissionImpl is internal proprietary API and may be removed in a future release
    [javac] 	private final Permission _connect = new PermissionImpl("CONNECT");
    [javac] 	                                        ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/security/ACLConnect.java:66: warning: PrincipalImpl is internal proprietary API and may be removed in a future release
    [javac] 	private final Principal _owner = new PrincipalImpl("localhost");
    [javac] 	                                     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/security/ACLConnect.java:67: warning: AclImpl is internal proprietary API and may be removed in a future release
    [javac] 	private Acl _acl = new AclImpl(_owner, "ConnectACL");
    [javac] 	                       ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/security/ACLConnect.java:80: warning: AclImpl is internal proprietary API and may be removed in a future release
    [javac] 		_acl = new AclImpl(_owner, "ConnectACL");
    [javac] 		           ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/security/ACLConnect.java:81: warning: AclEntryImpl is internal proprietary API and may be removed in a future release
    [javac] 		final AclEntry allowConnections = new AclEntryImpl(_owner);
    [javac] 		                                      ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/security/ACLConnect.java:104: warning: PrincipalImpl is internal proprietary API and may be removed in a future release
    [javac] 			final Principal prince = new PrincipalImpl(regexp);
    [javac] 			                             ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/security/ACLConnect.java:105: warning: AclEntryImpl is internal proprietary API and may be removed in a future release
    [javac] 			final AclEntry entry = new AclEntryImpl(prince);
    [javac] 			                           ^
    [javac] Note: Some input files use unchecked or unsafe operations.
    [javac] Note: Recompile with -Xlint:unchecked for details.
    [javac] 39 warnings
    [javac] Creating empty /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes/database/package-info.class

obj:

iface:

communications:
    [javac] Compiling 60 source files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/communications/IdRpc.java:89: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] 		public XMLRPCCommandVersion newCommand(final URI uri, final UserInterface client, final Table obj)
    [javac] 		       ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/communications/IdRpc.java:91: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] 			return new XMLRPCCommandVersion(uri, client);
    [javac] 			           ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/communications/XMLRPCCommand.java:614: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] 			return new XMLRPCCommandVersion(input);
    [javac] 			           ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/communications/CommClient.java:870: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] 		return version(new XMLRPCCommandVersion(newURI()));
    [javac] 		                   ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/communications/CommClient.java:881: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] 	public Version version(final XMLRPCCommandVersion command)
    [javac] 	                             ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/communications/HTTPClient.java:238: warning: [deprecation] Protocol(String,SecureProtocolSocketFactory,int) in Protocol has been deprecated
    [javac] 				xwssl = new Protocol(uri.getScheme(), new AuthSSLProtocolSocketFactory(uri.getScheme(), keyStore,
    [javac] 				        ^
    [javac] Note: Some input files use unchecked or unsafe operations.
    [javac] Note: Recompile with -Xlint:unchecked for details.
    [javac] 6 warnings

services:
    [javac] Compiling 7 source files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes

archdep:
    [javac] Compiling 20 source files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes

upgrade:

worker:
    [javac] Compiling 42 source files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes
    [javac] Note: Some input files use unchecked or unsafe operations.
    [javac] Note: Recompile with -Xlint:unchecked for details.

dispatcher:
    [javac] Compiling 14 source files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/dispatcher/Dispatcher.java:216: warning: [deprecation] HTTPOpenIdHandler in xtremweb.dispatcher has been deprecated
    [javac] 				HTTPOpenIdHandler.setCACertificateEntries(getConfig().getKeyStore());
    [javac] 				^
    [javac] Note: Some input files use unchecked or unsafe operations.
    [javac] Note: Recompile with -Xlint:unchecked for details.
    [javac] 1 warning

worker.manifest:

jni:
     [copy] Copying 10 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/natif
     [exec] mkdir: cannot create directory ‘../../build/classes/obj/linux-amd64’: File exists
     [exec] make[1]: Entering directory `/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/natif'
     [exec] gcc -c  -fPIC -g -Wall -I'/usr/lib/jvm/java-8-openjdk-amd64/include/linux' -fPIC -I'/usr/lib/jvm/java-8-openjdk-amd64/include' -o ../../build/classes/obj/linux-amd64/XWUtilUnix.o XWUtilUnix.c
     [exec] gcc -shared  -fPIC  -L'/usr/lib/jvm/java-8-openjdk-amd64/lib' -o ../../build/classes/obj/linux-amd64/XWUtil.jni ../../build/classes/obj/linux-amd64/XWUtilUnix.o 
     [exec] cp ../../build/classes/obj/linux-amd64/XWUtil.jni ../../build/classes/jni/XWUtil.jni.10.6.0.linux-amd64
     [exec] gcc -c  -fPIC -g -Wall -I'/usr/lib/jvm/java-8-openjdk-amd64/include/linux' -fPIC -I'/usr/lib/jvm/java-8-openjdk-amd64/include' -o ../../build/classes/obj/linux-amd64/XWTracerUnixlib.o XWTracerUnixlib.c
     [exec] gcc -c  -fPIC -g -Wall -I'/usr/lib/jvm/java-8-openjdk-amd64/include/linux' -fPIC -I'/usr/lib/jvm/java-8-openjdk-amd64/include' -o ../../build/classes/obj/linux-amd64/XWTracerUnixImpl.o XWTracerUnixImpl.c
     [exec] XWTracerUnixlib.c: In function ‘processCpustate’:
     [exec] XWTracerUnixlib.c:194:19: warning: variable ‘relative_jiffies’ set but not used [-Wunused-but-set-variable]
     [exec]      idle_jiffies, relative_jiffies, absolute_jiffies;
     [exec]                    ^
     [exec] XWTracerUnixlib.c:191:49: warning: variable ‘cpu_idle’ set but not used [-Wunused-but-set-variable]
     [exec]    static double cpu_user, cpu_nice, cpu_system, cpu_idle;
     [exec]                                                  ^
     [exec] XWTracerUnixlib.c:191:37: warning: variable ‘cpu_system’ set but not used [-Wunused-but-set-variable]
     [exec]    static double cpu_user, cpu_nice, cpu_system, cpu_idle;
     [exec]                                      ^
     [exec] XWTracerUnixlib.c:191:27: warning: variable ‘cpu_nice’ set but not used [-Wunused-but-set-variable]
     [exec]    static double cpu_user, cpu_nice, cpu_system, cpu_idle;
     [exec]                            ^
     [exec] XWTracerUnixlib.c:191:17: warning: variable ‘cpu_user’ set but not used [-Wunused-but-set-variable]
     [exec]    static double cpu_user, cpu_nice, cpu_system, cpu_idle;
     [exec]                  ^
     [exec] XWTracerUnixlib.c: In function ‘writeState’:
     [exec] XWTracerUnixlib.c:589:7: warning: variable ‘test’ set but not used [-Wunused-but-set-variable]
     [exec]    int test;
     [exec]        ^
     [exec] XWTracerUnixlib.c:587:8: warning: variable ‘k’ set but not used [-Wunused-but-set-variable]
     [exec]    char k[1];
     [exec]         ^
     [exec] XWTracerUnixlib.c:584:9: warning: variable ‘c’ set but not used [-Wunused-but-set-variable]
     [exec]    char* c;
     [exec]          ^
     [exec] gcc -shared  -fPIC  -L'/usr/lib/jvm/java-8-openjdk-amd64/lib' -o ../../build/classes/obj/linux-amd64/XwTracer.jni ../../build/classes/obj/linux-amd64/XWTracerUnixlib.o ../../build/classes/obj/linux-amd64/XWTracerUnixImpl.o 
     [exec] cp ../../build/classes/obj/linux-amd64/XwTracer.jni ../../build/classes/jni/XwTracer.jni.10.6.0.linux-amd64
     [exec] gcc -c  -fPIC -g -Wall -I'/usr/lib/jvm/java-8-openjdk-amd64/include/linux' -fPIC -I'/usr/lib/jvm/java-8-openjdk-amd64/include' -o ../../build/classes/obj/linux-amd64/PortMapper.o PortMapper.c
     [exec] gcc -shared  -fPIC  -L'/usr/lib/jvm/java-8-openjdk-amd64/lib' -o ../../build/classes/obj/linux-amd64/PortMapper.jni ../../build/classes/obj/linux-amd64/PortMapper.o 
     [exec] cp ../../build/classes/obj/linux-amd64/PortMapper.jni ../../build/classes/jni/PortMapper.jni.10.6.0.linux-amd64
     [exec] make[1]: Leaving directory `/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/natif'
     [exec] PortMapper.c: In function ‘getport’:
     [exec] PortMapper.c:29:2: warning: implicit declaration of function ‘pmap_getport’ [-Wimplicit-function-declaration]
     [exec]   return pmap_getport (&amp;addr, prog, version, protocol);
     [exec]   ^

Worker:
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes/data
     [copy] Copying 23 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes/data

tests:
    [javac] Compiling 50 source files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/test/xtremweb/communications/XMLRPCCommandVersionTest.java:29: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] import xtremweb.communications.XMLRPCCommandVersion;
    [javac]                               ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/test/xtremweb/communications/XMLRPCCommandVersionTest.java:47: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] 			setCmd(new XMLRPCCommandVersion());
    [javac] 			           ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/test/xtremweb/communications/XMLRPCCommandVersionTest.java:48: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] 			setCmd2(new XMLRPCCommandVersion());
    [javac] 			            ^
    [javac] Note: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/test/xtremweb/common/XMLHashtableTest.java uses unchecked or unsafe operations.
    [javac] Note: Recompile with -Xlint:unchecked for details.
    [javac] 3 warnings

client:

allservices:

Dispatcher:
     [echo]  
     [echo] 	JAR JAR JAR
     [echo] 	basedir="/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes"
     [echo] 	jarfile="/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/lib/xtremweb.jar"
     [echo] 	manifest="/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/misc/worker.manifest"
     [echo]       
      [jar] Building jar: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/lib/xtremweb.jar

rpcv:

all:

copylibs:

distrib:

BUILD SUCCESSFUL
Total time: 17 seconds
./build.sh -f install.xml install 
Buildfile: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/install.xml

tstamp:

version:

prepare:

configure:
     [echo] 
     [echo] user  login : ${xtremweb.admin.login} ${xtremweb.admin.password}
     [echo] admin login : ${xtremweb.admin.login} ${xtremweb.admin.password}
     [echo] DB su login :  
     [echo] ENGINE : ""
     [echo] launcher.url = http://nohost/
     [echo] system.user  = xwhep
     [echo] xwsuffix=LINUX-AMD64
     [echo] xwarch=AMD64
     [echo] target.os=Linux
     [echo] cross.prefix=${cross.prefix}
     [echo] cross.java.home=${cross.java.home}
     [echo] version=10.6.0

installConfig:
     [echo] 
     [echo]        ==&gt; version    = 10.6.0
     [echo]        ==&gt; dist.dir   = /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0
     [echo]        ==&gt; installDir = /opt/xwhep-10.6.0
     [echo]     

installFiles:
     [copy] Copying 98 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/doc
     [copy] Copying 17 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/docker
     [copy] Copying 31 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/lib
     [copy] Copying 31 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.server/installer/PckRoot/private/etc/xwhep.server/lib
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf
     [echo] 
     [echo]       xtremweb.admin.login=${xtremweb.admin.login}
     [echo]       xtremweb.admin.password=${xtremweb.admin.password}
     [echo]     
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf
     [echo] 
     [echo]       xtremweb.worker.login=${xtremweb.worker.login}
     [echo]       xtremweb.worker.password=${xtremweb.worker.password}
     [echo]     
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.worker/installer/PckRoot/private/etc/xwhep.worker/conf
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.worker/installer/PckRoot/Applications/xwhep.worker
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.worker/installer/PckRoot/private/etc/xwhep.worker/conf
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.vworker/installer/PckRoot/Applications/xwhep.vworker
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.vworker/installer/PckRoot/private/etc/xwhep.vworker/bin
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.client/installer/PckRoot/Applications/xwhep.client/conf
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.server/installer/PckRoot/private/etc/xwhep.server/conf
     [copy] Copying 98 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.server/installer/PckRoot/Applications/xwhep.server/doc
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.client/conf
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.client/innoSetup/client/conf
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/conf
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/innoSetup/worker/conf
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/conf
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/innoSetup/worker/conf
     [copy] Copying 2 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/lib
     [copy] Copying 2 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/innoSetup/worker/lib
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/innoSetup/worker/lib
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/innoSetup/worker/lib
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/innoSetup/worker/misc
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/innoSetup/worker/doc
     [copy] Copying 8 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/bin
     [copy] Copying 5 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/innoSetup/worker/bin
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/doc
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.server/conf
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.server/innoSetup/server/conf
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.server/conf
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.server/innoSetup/server/conf
     [copy] Copying 2 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.server/lib
     [copy] Copying 2 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.server/innoSetup/server/lib
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.server/innoSetup/server/misc
     [copy] Copying 2 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.server/innoSetup/server/bin

setupScripts:
     [copy] Copying 266 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/db-maintenance

installScripts:

createDownload:
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.worker/installer/PckRoot/private/etc/xwhep.worker/keystore
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.client/installer/PckRoot/Applications/xwhep.client/lib
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.client/installer/PckRoot/Applications/xwhep.client/lib
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.client/installer/PckRoot/Applications/xwhep.client/keystore
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.server/installer/PckRoot/private/etc/xwhep.server/keystore
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/db-maintenance
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/db-maintenance
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin
     [copy] Copying 98 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/doc/xwhep.client/doc
[jarbundler] Creating application bundle: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/xwhep.client.app
     [copy] Copying 5 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/xwhep.client.app
     [copy] Copying 20 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.worker
     [copy] Copying 17 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.vworker
     [copy] Copying 12 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.client
     [copy] Copying 19 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.server
     [copy] Copying 3 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/innoSetup
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker
     [copy] Copying 3 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.server/innoSetup
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.server
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.server.conf
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.server/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.server/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.server/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.server/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.server/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.server/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.server.conf/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.server.conf/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.server.conf/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.server.conf/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.server.conf/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.server.conf/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.bridgedgsg
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.bridgedgsg/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.bridgedgsg/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.bridgedgsg/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.bridgedgsg/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.bridgedgsg/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.bridgedgsg/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.client
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.client/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.client/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.client/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.client/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.client/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.client/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.worker
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.worker/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.worker/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.worker/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.worker/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.worker/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.worker/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.client/innoSetup/client/lib
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.client/innoSetup/client/lib
     [copy] Copying 11 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0
     [copy] Copying 6 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/apptest

ganglia:

install:
     [echo] 
     [echo]       Installation done
     [echo]     

BUILD SUCCESSFUL
Total time: 8 seconds</msg>
<status status="PASS" endtime="20170913 19:21:40.091" starttime="20170913 19:21:40.090"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${compile_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170913 19:21:40.091" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170913 19:21:40.091" starttime="20170913 19:21:40.091"></status>
</kw>
<kw name="Get Lines Containing String" library="String">
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<arguments>
<arg>${compile_result.stdout}</arg>
<arg>BUILD SUCCESSFUL</arg>
</arguments>
<assign>
<var>${extract_build_successful}</var>
</assign>
<msg timestamp="20170913 19:21:40.092" level="INFO">3 out of 486 lines matched</msg>
<msg timestamp="20170913 19:21:40.092" level="INFO">${extract_build_successful} = BUILD SUCCESSFUL
BUILD SUCCESSFUL
BUILD SUCCESSFUL</msg>
<status status="PASS" endtime="20170913 19:21:40.092" starttime="20170913 19:21:40.091"></status>
</kw>
<kw name="Get Line Count" library="String">
<doc>Returns and logs the number of lines in the given string.</doc>
<arguments>
<arg>${extract_build_successful}</arg>
</arguments>
<assign>
<var>${line_count_build_successful}</var>
</assign>
<msg timestamp="20170913 19:21:40.092" level="INFO">3 lines</msg>
<msg timestamp="20170913 19:21:40.093" level="INFO">${line_count_build_successful} = 3</msg>
<status status="PASS" endtime="20170913 19:21:40.093" starttime="20170913 19:21:40.092"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${line_count_build_successful}</arg>
<arg>3</arg>
</arguments>
<msg timestamp="20170913 19:21:40.093" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170913 19:21:40.093" starttime="20170913 19:21:40.093"></status>
</kw>
<status status="PASS" endtime="20170913 19:21:40.093" starttime="20170913 19:21:12.268"></status>
</kw>
<kw name="Install XWtremWeb" library="XWCommon">
<kw name="List Directories In Directory" library="OperatingSystem">
<doc>Wrapper for `List Directory` that returns only directories.</doc>
<arguments>
<arg>${DIST_PATH}</arg>
<arg>xwhep-*</arg>
<arg>absolute</arg>
</arguments>
<assign>
<var>@{list_directories_dist_path}</var>
</assign>
<msg timestamp="20170913 19:21:40.094" html="yes" level="INFO">Listing contents of directory '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist&lt;/a&gt;'.</msg>
<msg timestamp="20170913 19:21:40.094" level="INFO">1 directory:
/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0</msg>
<msg timestamp="20170913 19:21:40.094" level="INFO">@{list_directories_dist_path} = [ /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0 ]</msg>
<status status="PASS" endtime="20170913 19:21:40.094" starttime="20170913 19:21:40.093"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>@{list_directories_dist_path}[0]</arg>
</arguments>
<msg timestamp="20170913 19:21:40.095" level="INFO">/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0</msg>
<status status="PASS" endtime="20170913 19:21:40.095" starttime="20170913 19:21:40.095"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}</arg>
<arg>@{list_directories_dist_path}[0]</arg>
</arguments>
<msg timestamp="20170913 19:21:40.095" level="INFO">${DIST_XWHEP_PATH} = /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0</msg>
<status status="PASS" endtime="20170913 19:21:40.095" starttime="20170913 19:21:40.095"></status>
</kw>
<kw name="Directory Should Exist" library="OperatingSystem">
<doc>Fails unless the given path points to an existing directory.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}</arg>
</arguments>
<msg timestamp="20170913 19:21:40.096" html="yes" level="INFO">Directory '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0&lt;/a&gt;' exists.</msg>
<status status="PASS" endtime="20170913 19:21:40.096" starttime="20170913 19:21:40.095"></status>
</kw>
<kw name="Create XWCONFIGURE.VALUES FILE" library="XWCommon">
<arguments>
<arg>${DIST_XWHEP_PATH}</arg>
</arguments>
<kw name="Directory Should Exist" library="OperatingSystem">
<doc>Fails unless the given path points to an existing directory.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf</arg>
</arguments>
<msg timestamp="20170913 19:21:40.096" html="yes" level="INFO">Directory '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf&lt;/a&gt;' exists.</msg>
<status status="PASS" endtime="20170913 19:21:40.097" starttime="20170913 19:21:40.096"></status>
</kw>
<kw name="Remove File" library="OperatingSystem">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
</arguments>
<msg timestamp="20170913 19:21:40.098" html="yes" level="INFO">Removed file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170913 19:21:40.098" starttime="20170913 19:21:40.097"></status>
</kw>
<kw name="Create File" library="OperatingSystem">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
</arguments>
<msg timestamp="20170913 19:21:40.099" html="yes" level="INFO">Created file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170913 19:21:40.099" starttime="20170913 19:21:40.098"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>XWUSER='${XWCONFIGURE.VALUES.XWUSER}'\n</arg>
</arguments>
<msg timestamp="20170913 19:21:40.107" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170913 19:21:40.107" starttime="20170913 19:21:40.099"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>DBVENDOR='${XWCONFIGURE.VALUES.DBVENDOR}'\n</arg>
</arguments>
<msg timestamp="20170913 19:21:40.109" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170913 19:21:40.109" starttime="20170913 19:21:40.107"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>DBENGINE='${XWCONFIGURE.VALUES.DBENGINE}'\n</arg>
</arguments>
<msg timestamp="20170913 19:21:40.110" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170913 19:21:40.110" starttime="20170913 19:21:40.109"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>DBHOST='${XWCONFIGURE.VALUES.DBHOST}'\n</arg>
</arguments>
<msg timestamp="20170913 19:21:40.112" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170913 19:21:40.112" starttime="20170913 19:21:40.110"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>DBADMINLOGIN='${XWCONFIGURE.VALUES.DBADMINLOGIN}'\n</arg>
</arguments>
<msg timestamp="20170913 19:21:40.113" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170913 19:21:40.113" starttime="20170913 19:21:40.112"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>DBADMINPASSWORD='${XWCONFIGURE.VALUES.DBADMINPASSWORD}'\n</arg>
</arguments>
<msg timestamp="20170913 19:21:40.115" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170913 19:21:40.115" starttime="20170913 19:21:40.114"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>DBNAME='${XWCONFIGURE.VALUES.DBNAME}'\n</arg>
</arguments>
<msg timestamp="20170913 19:21:40.116" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170913 19:21:40.116" starttime="20170913 19:21:40.115"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>DBUSERLOGIN='${XWCONFIGURE.VALUES.DBUSERLOGIN}'\n</arg>
</arguments>
<msg timestamp="20170913 19:21:40.117" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170913 19:21:40.118" starttime="20170913 19:21:40.116"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>DBUSERPASSWORD='${XWCONFIGURE.VALUES.DBUSERPASSWORD}'\n</arg>
</arguments>
<msg timestamp="20170913 19:21:40.119" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170913 19:21:40.119" starttime="20170913 19:21:40.118"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>XWADMINLOGIN='${XWCONFIGURE.VALUES.XWADMINLOGIN}'\n</arg>
</arguments>
<msg timestamp="20170913 19:21:40.120" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170913 19:21:40.120" starttime="20170913 19:21:40.119"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>XWADMINPASSWORD='${XWCONFIGURE.VALUES.XWADMINPASSWORD}'\n</arg>
</arguments>
<msg timestamp="20170913 19:21:40.122" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170913 19:21:40.122" starttime="20170913 19:21:40.120"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>XWWORKERLOGIN='${XWCONFIGURE.VALUES.XWWORKERLOGIN}'\n</arg>
</arguments>
<msg timestamp="20170913 19:21:40.123" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170913 19:21:40.123" starttime="20170913 19:21:40.122"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>XWWORKERPASSWORD='${XWCONFIGURE.VALUES.XWWORKERPASSWORD}'\n</arg>
</arguments>
<msg timestamp="20170913 19:21:40.124" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170913 19:21:40.124" starttime="20170913 19:21:40.123"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>XWSERVER='${XWCONFIGURE.VALUES.XWSERVER}'\n</arg>
</arguments>
<msg timestamp="20170913 19:21:40.128" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170913 19:21:40.129" starttime="20170913 19:21:40.124"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>CERTCN='${XWCONFIGURE.VALUES.CERTCN}'\n</arg>
</arguments>
<msg timestamp="20170913 19:21:40.130" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170913 19:21:40.130" starttime="20170913 19:21:40.129"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>CERTOU='${XWCONFIGURE.VALUES.CERTOU}'\n</arg>
</arguments>
<msg timestamp="20170913 19:21:40.132" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170913 19:21:40.132" starttime="20170913 19:21:40.130"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>CERTO='${XWCONFIGURE.VALUES.CERTO}'\n</arg>
</arguments>
<msg timestamp="20170913 19:21:40.133" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170913 19:21:40.133" starttime="20170913 19:21:40.132"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>CERTL='${XWCONFIGURE.VALUES.CERTL}'\n</arg>
</arguments>
<msg timestamp="20170913 19:21:40.134" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170913 19:21:40.134" starttime="20170913 19:21:40.133"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>CERTC='${XWCONFIGURE.VALUES.CERTC}'\n</arg>
</arguments>
<msg timestamp="20170913 19:21:40.135" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170913 19:21:40.136" starttime="20170913 19:21:40.134"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>CERTC='${XWCONFIGURE.VALUES.CERTC}'\n</arg>
</arguments>
<msg timestamp="20170913 19:21:40.137" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170913 19:21:40.137" starttime="20170913 19:21:40.136"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>SSLKEYPASSPHRASE='${XWCONFIGURE.VALUES.SSLKEYPASSPHRASE}'\n</arg>
</arguments>
<msg timestamp="20170913 19:21:40.223" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170913 19:21:40.223" starttime="20170913 19:21:40.137"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>SSLKEYSERVERPASSWORD='${XWCONFIGURE.VALUES.SSLKEYSERVERPASSWORD}'\n</arg>
</arguments>
<msg timestamp="20170913 19:21:40.225" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170913 19:21:40.225" starttime="20170913 19:21:40.224"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>SSLKEYWORKERPASSWORD='${XWCONFIGURE.VALUES.SSLKEYWORKERPASSWORD}'\n</arg>
</arguments>
<msg timestamp="20170913 19:21:40.227" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170913 19:21:40.227" starttime="20170913 19:21:40.226"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>SSLKEYCLIENTPASSWORD='${XWCONFIGURE.VALUES.SSLKEYCLIENTPASSWORD}'\n</arg>
</arguments>
<msg timestamp="20170913 19:21:40.229" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170913 19:21:40.229" starttime="20170913 19:21:40.227"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>X509CERTDIR='${XWCONFIGURE.VALUES.X509CERTDIR}'\n</arg>
</arguments>
<msg timestamp="20170913 19:21:40.230" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170913 19:21:40.230" starttime="20170913 19:21:40.229"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>USERCERTDIR='${XWCONFIGURE.VALUES.USERCERTDIR}'\n</arg>
</arguments>
<msg timestamp="20170913 19:21:40.232" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170913 19:21:40.232" starttime="20170913 19:21:40.230"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>XWUPGRADEURL='${XWCONFIGURE.VALUES.XWUPGRADEURL}'\n</arg>
</arguments>
<msg timestamp="20170913 19:21:40.233" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170913 19:21:40.233" starttime="20170913 19:21:40.232"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>HTTPSPORT='${XWCONFIGURE.VALUES.HTTPSPORT}'\n</arg>
</arguments>
<msg timestamp="20170913 19:21:40.235" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170913 19:21:40.235" starttime="20170913 19:21:40.233"></status>
</kw>
<kw name="Log File" library="OperatingSystem">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
</arguments>
<msg timestamp="20170913 19:21:40.235" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<msg timestamp="20170913 19:21:40.236" level="INFO">XWUSER='root'
DBVENDOR='mysql'
DBENGINE='InnoDB'
DBHOST='localhost'
DBADMINLOGIN='root'
DBADMINPASSWORD='root'
DBNAME='xtremweb'
DBUSERLOGIN='xwuser'
DBUSERPASSWORD='xwuser'
XWADMINLOGIN='admin'
XWADMINPASSWORD='admin'
XWWORKERLOGIN='worker'
XWWORKERPASSWORD='worker'
XWSERVER='localhost'
CERTCN='localhost'
CERTOU='MrRobotFramework'
CERTO='MrRobotFramework'
CERTL='MrRobotFramework'
CERTC='fr'
CERTC='fr'
SSLKEYPASSPHRASE='MrRobotFramework'
SSLKEYSERVERPASSWORD='MrRobotFramework'
SSLKEYWORKERPASSWORD='MrRobotFramework'
SSLKEYCLIENTPASSWORD='MrRobotFramework'
X509CERTDIR='/tmp/castore'
USERCERTDIR=''
XWUPGRADEURL='http://localhost:8080/somewhere/xtremweb.jar'
HTTPSPORT='9443'
</msg>
<status status="PASS" endtime="20170913 19:21:40.236" starttime="20170913 19:21:40.235"></status>
</kw>
<status status="PASS" endtime="20170913 19:21:40.236" starttime="20170913 19:21:40.096"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd ${DIST_XWHEP_PATH} &amp;&amp; ./bin/xwconfigure --yes --nopkg --rmdb</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${install_result}</var>
</assign>
<msg timestamp="20170913 19:21:40.236" level="INFO">Starting process:
cd /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0 &amp;&amp; ./bin/xwconfigure --yes --nopkg --rmdb</msg>
<msg timestamp="20170913 19:21:40.239" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170913 19:22:11.908" level="INFO">Process completed.</msg>
<msg timestamp="20170913 19:22:11.909" level="INFO">${install_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170913 19:22:11.909" starttime="20170913 19:21:40.236"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${install_result.stdout}</arg>
</arguments>
<msg timestamp="20170913 19:22:11.909" level="INFO">
--------------------------------------------------
         XtremWeb-HEP 10.6.0 
         XWConfigurator

This script helps to configure an XtremWeb-HEP deployment 
--------------------------------------------------

This script aims to :
 - install a new database: Since 9.1. MySQL (http://www.mysql.com/) only is supported
 - creates electronic keys : 
   * server private key
   * client key store including server public key
   * worker key store including server public key
 - prepare installers
   * Win32 InnoSetup project (http://www.jrsoftware.org/isinfo.php)
   * Mac OS X Package Maker projects (http:/www.apple.com)
   * Linux RPM (http://www.rpm.org)
   * Linux Debian package (http://www.debian.org)

In order to complete configuration, several informations are needed :
 -1- MySQL administrator account (login and password)
     =&gt; If you don't know it, please ask your system administrator
 -1.1- Database server, if using MySQL
     =&gt; The name or IP address of your MySQL server
 -1.2- Database name
     =&gt; If you don't have a valid MySQL administrator account, you won't be able to perform this
     =&gt; In such a case, please ask your system administrator to create one new empty database for us
 -1.3- Database user (login and password), if using MySQL
     =&gt; This account must have insert/update/delete privileges to the previous database
     =&gt; This account will be used by the XW server to access database
     =&gt; If you don't have a valid MySQL administrator account, you won't be able to perform this
     =&gt; In such a case, please ask your system administrator to create one for you
 -2- Electronic key passphrase
     =&gt; This is free and up to you
 -3- Electronic key password for the server
     =&gt; This is free and up to you
 -4- Electronic key password for the worker
     =&gt; This is free and up to you
 -5- Electronic key password for the client
     =&gt; This is free and up to you

All informations are stored in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values
So that, you can stop this script when you want, and don't have to re-enter all informations

To reset any variable, edit or erase /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values

You should be aware that /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values stores some critical informations!!!

-----------------------------

DB vendor set to 'mysql'
DB engine set to 'InnoDB'
***********************
 Electronic keys found 
***********************
Upgrade URL is localhost : I guess this is for testing only...
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Can't download xtremweb.jar from 'http://localhost:8080/somewhere/xtremweb.jar'
You will have to ensure that xtremweb.jar can be downloaded from 'http://localhost:8080/somewhere/xtremweb.jar'
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

You entered :
**** Account to run the middleware : 
     USER                 = 'root'
**** Database configuration : 
     DBVENDOR             = 'mysql'
     DBENGINE             = 'InnoDB'
     DBHOST               = 'localhost'
     DBNAME               = 'xtremweb'
     DBADMINLOGIN         = 'root'
     DBADMINPASSWORD      = 'root'
     DBUSERLOGIN          = 'xwuser'
     DBUSERPASSWORD       = 'xwuser'
**** XtremWeb-HEP administrator client configuration : 
     XWADMINLOGIN         = 'admin'
     XWADMINPASSWORD      = 'admin'
**** XtremWeb-HEP public worker configuration : 
     XWWORKERLOGIN        = 'worker'
     XWWORKERPASSWORD     = 'worker'
**** XtremWeb-HEP server configuration : 
     XWSERVER             = 'localhost'
     XWUPGRADEURL         = 'http://localhost:8080/somewhere/xtremweb.jar'
**** CA certificates path : 
     X509CERTDIR          = '/tmp/castore'
**** Certificate configuration : 
     Keys found           = ''
     SSLKEYPASSPHRASE     = 'MrRobotFramework'
     SSLKEYCLIENTPASSWORD = 'MrRobotFramework'
     SSLKEYSERVERPASSWORD = 'MrRobotFramework'
     SSLKEYWORKERPASSWORD = 'MrRobotFramework'
     Common Name          = 'localhost'
     Organisation Unit    = 'MrRobotFramework'
     Organization Name    = 'MrRobotFramework'
     Locality Name        = 'MrRobotFramework'
     Country              = 'fr'

Database schema 'xtremweb' exists : DB reset forced
Resetting database schema 'xtremweb'
Preparing database script............Done
Preparing database schema 'xtremweb'
DB engine for 'xtremweb' is InnoDB :  Creating foreign keys for live tables ...
Creating DB triggers using xwhep-core-tables-create-triggers-for-data-coming-from-8.sql ...

Table "users"

Table "hosts"

Table "datas"

Table "works"

Table "tasks"

Table "apps"
Creating DB triggers using xwhep-core-tables-create-triggers-for-history-coming-from-8.sql ...

Table "users_history"

Table "hosts_history"

Table "datas_history"

Table "works_history"

Table "tasks_history"

Table "apps_history"
Create the SQL script for the creation of DB views in the current schema ...
Create the SQL script for the creation of DB users views in the current schema ...
Creating DB views using xwhep-core-tables-create-views-for-tables.sql ...
Creating DB views using xwhep-core-tables-create-users-views.sql ...
Creating DB views using xwhep-core-tables-create-views-for-sessions-and-groups.sql ...
Creating DB views using xwhep-core-tables-create-views-for-relationships.sql ...
Creating DB views using xwhep-core-tables-create-views-for-offering-and-billing.sql ...
Creating DB views using xwhep-core-tables-create-views-hosts-matching-works.sql ...
Granting access to DB schema 'xtremweb' ...
Database schema 'xtremweb' : checking compliance to '05.7.3'
Database schema 'xtremweb' : is compliant to 05.7.3
Database schema 'xtremweb' : checking compliance to '05.8.0'
Database schema 'xtremweb' : is compliant to 05.8.0
Database schema 'xtremweb' : checking compliance to '06.0.1'
Database schema 'xtremweb' : is compliant to 06.0.1
Database schema 'xtremweb' : checking compliance to '07.0.0'
Database schema 'xtremweb' : is compliant to 07.0.0
Database schema 'xtremweb' : checking compliance to '07.2.0'
Database schema 'xtremweb' : is compliant to 07.2.0
Database schema 'xtremweb' : checking compliance to '07.4.1'
Database schema 'xtremweb' : is compliant to 07.4.1
Database schema 'xtremweb' : checking compliance to '07.5.0'
Database schema 'xtremweb' : is compliant to 07.5.0
Database schema 'xtremweb' : checking compliance to '08.0.0'
Database schema 'xtremweb' : is compliant to 08.0.0
Database schema 'xtremweb' : checking compliance to '08.2.0'
Database schema 'xtremweb' : is compliant to 08.2.0
Database schema 'xtremweb' : checking compliance to '08.3.1'
Database schema 'xtremweb' : is compliant to 08.3.1
Database schema 'xtremweb' : checking compliance to '09.1.0'
Database schema 'xtremweb' : is compliant to 09.1.0
Database schema 'xtremweb' : checking compliance to '10.0.0'
Database schema 'xtremweb' : is compliant to 10.0.0
Database schema 'xtremweb' : checking compliance to '10.2.0'
Database schema 'xtremweb' : is compliant to 10.2.0
Database schema 'xtremweb' : checking compliance to '10.6.0'
Database schema 'xtremweb' : is not compliant to '10.6.0'; updating
10.6.0 is compliant, dont worry
10.6.0 is compliant, dont worry
Database schema 'xtremweb' : updated to '10.6.0'
Set current version to '10.6.0'
Setting the account to run the middleware to 'root'..........................Done
Preparing server configuration file '/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf'................. Done
Preparing xtremweb.ganglia...Done
Generating script to manage keystores (/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/xwhepgenkeys)  Done
Generating script to manage OpenId server certificates (/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/xwhepupdateopenidcerts) Done
Preparing worker configuration file '/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf'.... Done
Copying worker configuration file /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.worker/installer/PckRoot/private/etc/xwhep.worker/conf/xtremweb.worker.conf
Copying worker configuration file /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/innoSetup/worker/conf/xtremweb.worker.conf
Done
Preparing client configuration file '/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.client.conf'...Done
Copying client configuration file /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.client.conf to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.client/innoSetup/client/conf/xtremweb.client.conf
****************************************************************************************
Done
*******************
Keystores unmodified
*******************

Preparing  client package to '/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/xwhep.client'.....Done
Copying client configuration file /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/xwhep.client/10.6.0/conf/xtremweb.client.conf.template to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.client/installer/PckRoot/Applications/xwhep.client/conf/xtremweb.client.conf
 Done

Preparing server RPM package to '/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.server'.... Done

Preparing server configuration RPM package to '/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.server.conf'.... Done

Preparing server Debian package
Server Debian package ready

Preparing server configuration Debian package
Server Configuration Debian package ready
Preparing DG to SG bridge RPM package to '/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.bridgedgsg'............ Done

Preparing bridgedgsg Debian package
Bridgedgsg Debian package ready
Preparing SG to DG bridge RPM package to '/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.bridgesgdg'........ Done

Preparing bridgesgdg Debian package
Bridgesgdg Debian package ready
Preparing client RPM package to '/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.client'.... Done

Preparing client Debian package
Client Debian package ready

Preparing worker RPM package to '/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.worker'.... Done

Preparing worker Debian package
Worker Debian package ready

&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;
! Everything is now prepared !
&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;

Available packages :
  * server
   - RedHat RPM  in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.server
   - Debian DPKG in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.server
   - Apple  PKG  in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.server

  * Desktop Grid to Service Grid bridge
   - RedHat RPM  in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.bridgedgsg
   - Debian DPKG in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.bridgedgsg

  * Service Grid to Desktop Grid bridge
   - RedHat RPM  in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.bridgesgdg
   - Debian DPKG in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.bridgesgdg

  * client
   - RedHat RPM  in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.client
   - Debian DPKG in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.client
   - Apple  PKG  in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.client
   - Windows installer  in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.client/innoSetup
                        (http://www.innosetup.com/isinfo.php)

  * worker
   - RedHat  RPM        in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.worker
   - Debian  DPKG       in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.worker
   - Apple   PKG        in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.worker
   - Windows installer  in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/innoSetup
                        (http://www.innosetup.com/isinfo.php)

  * client
   - Zip file (platform independant)  in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/xwhep-client-10.6.0.zip


You can manually :
  * start the server
   - /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/xwhep.server console
  * start a worker
   - /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/xwhep.worker console
  * as soon as your server is started you can use the client
   - /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/xwworkers : if you have started a worker, it is in the list
   - /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/xwusers
   - /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/xwapps
   - etc.

As soon as everything is ok you should :
  * install you server using its packages
  * deploy worker over your own volunteer PCs using its packages
  * install your worker packages on any of your web sites
    if you wish to enable anonymous volunteer power
  * install your client ZIP file on any of your web sites
    to allow registered users to use the platform

That's all folks
</msg>
<status status="PASS" endtime="20170913 19:22:11.910" starttime="20170913 19:22:11.909"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${install_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170913 19:22:11.910" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170913 19:22:11.910" starttime="20170913 19:22:11.910"></status>
</kw>
<kw name="Get Lines Containing String" library="String">
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<arguments>
<arg>${install_result.stdout}</arg>
<arg>That's all folks</arg>
</arguments>
<assign>
<var>${install_result_successful}</var>
</assign>
<msg timestamp="20170913 19:22:11.911" level="INFO">1 out of 273 lines matched</msg>
<msg timestamp="20170913 19:22:11.912" level="INFO">${install_result_successful} = That's all folks</msg>
<status status="PASS" endtime="20170913 19:22:11.912" starttime="20170913 19:22:11.910"></status>
</kw>
<kw name="Get Line Count" library="String">
<doc>Returns and logs the number of lines in the given string.</doc>
<arguments>
<arg>${install_result_successful}</arg>
</arguments>
<assign>
<var>${line_install_result_successful}</var>
</assign>
<msg timestamp="20170913 19:22:11.912" level="INFO">1 lines</msg>
<msg timestamp="20170913 19:22:11.912" level="INFO">${line_install_result_successful} = 1</msg>
<status status="PASS" endtime="20170913 19:22:11.912" starttime="20170913 19:22:11.912"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${line_install_result_successful}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20170913 19:22:11.912" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170913 19:22:11.913" starttime="20170913 19:22:11.912"></status>
</kw>
<status status="PASS" endtime="20170913 19:22:11.913" starttime="20170913 19:21:40.093"></status>
</kw>
<kw name="Start XWtremWeb Server And XWtremWeb Worker" library="XWCommon">
<kw name="Ping XWtremWeb Database" library="XWServer">
<kw name="Xtremweb Tables Must Exist" library="MySql">
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170913 19:22:11.914" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170913 19:22:11.915" starttime="20170913 19:22:11.914"></status>
</kw>
<status status="PASS" endtime="20170913 19:22:11.915" starttime="20170913 19:22:11.914"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>appTypes</arg>
</arguments>
<msg timestamp="20170913 19:22:11.915" level="INFO">Executing : Table Must Exist  |  appTypes </msg>
<msg timestamp="20170913 19:22:11.915" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='appTypes' </msg>
<status status="PASS" endtime="20170913 19:22:11.916" starttime="20170913 19:22:11.915"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps</arg>
</arguments>
<msg timestamp="20170913 19:22:11.916" level="INFO">Executing : Table Must Exist  |  apps </msg>
<msg timestamp="20170913 19:22:11.916" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='apps' </msg>
<status status="PASS" endtime="20170913 19:22:11.917" starttime="20170913 19:22:11.916"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps_history</arg>
</arguments>
<msg timestamp="20170913 19:22:11.917" level="INFO">Executing : Table Must Exist  |  apps_history </msg>
<msg timestamp="20170913 19:22:11.917" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='apps_history' </msg>
<status status="PASS" endtime="20170913 19:22:11.918" starttime="20170913 19:22:11.917"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>cpuTypes</arg>
</arguments>
<msg timestamp="20170913 19:22:11.918" level="INFO">Executing : Table Must Exist  |  cpuTypes </msg>
<msg timestamp="20170913 19:22:11.918" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='cpuTypes' </msg>
<status status="PASS" endtime="20170913 19:22:11.919" starttime="20170913 19:22:11.918"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>dataTypes</arg>
</arguments>
<msg timestamp="20170913 19:22:11.919" level="INFO">Executing : Table Must Exist  |  dataTypes </msg>
<msg timestamp="20170913 19:22:11.919" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='dataTypes' </msg>
<status status="PASS" endtime="20170913 19:22:11.920" starttime="20170913 19:22:11.919"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas</arg>
</arguments>
<msg timestamp="20170913 19:22:11.920" level="INFO">Executing : Table Must Exist  |  datas </msg>
<msg timestamp="20170913 19:22:11.920" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='datas' </msg>
<status status="PASS" endtime="20170913 19:22:11.921" starttime="20170913 19:22:11.920"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas_history</arg>
</arguments>
<msg timestamp="20170913 19:22:11.921" level="INFO">Executing : Table Must Exist  |  datas_history </msg>
<msg timestamp="20170913 19:22:11.921" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='datas_history' </msg>
<status status="PASS" endtime="20170913 19:22:11.922" starttime="20170913 19:22:11.921"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables</arg>
</arguments>
<msg timestamp="20170913 19:22:11.923" level="INFO">Executing : Table Must Exist  |  executables </msg>
<msg timestamp="20170913 19:22:11.923" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='executables' </msg>
<status status="PASS" endtime="20170913 19:22:11.924" starttime="20170913 19:22:11.923"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables_history</arg>
</arguments>
<msg timestamp="20170913 19:22:11.924" level="INFO">Executing : Table Must Exist  |  executables_history </msg>
<msg timestamp="20170913 19:22:11.924" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='executables_history' </msg>
<status status="PASS" endtime="20170913 19:22:11.925" starttime="20170913 19:22:11.924"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups</arg>
</arguments>
<msg timestamp="20170913 19:22:11.925" level="INFO">Executing : Table Must Exist  |  groups </msg>
<msg timestamp="20170913 19:22:11.925" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='groups' </msg>
<status status="PASS" endtime="20170913 19:22:11.926" starttime="20170913 19:22:11.925"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups_history</arg>
</arguments>
<msg timestamp="20170913 19:22:11.926" level="INFO">Executing : Table Must Exist  |  groups_history </msg>
<msg timestamp="20170913 19:22:11.926" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='groups_history' </msg>
<status status="PASS" endtime="20170913 19:22:11.927" starttime="20170913 19:22:11.926"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts</arg>
</arguments>
<msg timestamp="20170913 19:22:11.927" level="INFO">Executing : Table Must Exist  |  hosts </msg>
<msg timestamp="20170913 19:22:11.928" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='hosts' </msg>
<status status="PASS" endtime="20170913 19:22:11.928" starttime="20170913 19:22:11.927"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts_history</arg>
</arguments>
<msg timestamp="20170913 19:22:11.928" level="INFO">Executing : Table Must Exist  |  hosts_history </msg>
<msg timestamp="20170913 19:22:11.929" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='hosts_history' </msg>
<status status="PASS" endtime="20170913 19:22:11.930" starttime="20170913 19:22:11.928"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships</arg>
</arguments>
<msg timestamp="20170913 19:22:11.930" level="INFO">Executing : Table Must Exist  |  memberships </msg>
<msg timestamp="20170913 19:22:11.930" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='memberships' </msg>
<status status="PASS" endtime="20170913 19:22:11.931" starttime="20170913 19:22:11.930"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships_history</arg>
</arguments>
<msg timestamp="20170913 19:22:11.931" level="INFO">Executing : Table Must Exist  |  memberships_history </msg>
<msg timestamp="20170913 19:22:11.931" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='memberships_history' </msg>
<status status="PASS" endtime="20170913 19:22:11.932" starttime="20170913 19:22:11.931"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>oses</arg>
</arguments>
<msg timestamp="20170913 19:22:11.932" level="INFO">Executing : Table Must Exist  |  oses </msg>
<msg timestamp="20170913 19:22:11.932" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='oses' </msg>
<status status="PASS" endtime="20170913 19:22:11.933" starttime="20170913 19:22:11.932"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>packageTypes</arg>
</arguments>
<msg timestamp="20170913 19:22:11.933" level="INFO">Executing : Table Must Exist  |  packageTypes </msg>
<msg timestamp="20170913 19:22:11.933" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='packageTypes' </msg>
<status status="PASS" endtime="20170913 19:22:11.934" starttime="20170913 19:22:11.933"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions</arg>
</arguments>
<msg timestamp="20170913 19:22:11.934" level="INFO">Executing : Table Must Exist  |  sessions </msg>
<msg timestamp="20170913 19:22:11.934" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sessions' </msg>
<status status="PASS" endtime="20170913 19:22:11.935" starttime="20170913 19:22:11.934"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions_history</arg>
</arguments>
<msg timestamp="20170913 19:22:11.935" level="INFO">Executing : Table Must Exist  |  sessions_history </msg>
<msg timestamp="20170913 19:22:11.935" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sessions_history' </msg>
<status status="PASS" endtime="20170913 19:22:11.936" starttime="20170913 19:22:11.935"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes</arg>
</arguments>
<msg timestamp="20170913 19:22:11.936" level="INFO">Executing : Table Must Exist  |  sharedAppTypes </msg>
<msg timestamp="20170913 19:22:11.936" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedAppTypes' </msg>
<status status="PASS" endtime="20170913 19:22:11.937" starttime="20170913 19:22:11.936"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes_history</arg>
</arguments>
<msg timestamp="20170913 19:22:11.937" level="INFO">Executing : Table Must Exist  |  sharedAppTypes_history </msg>
<msg timestamp="20170913 19:22:11.937" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedAppTypes_history' </msg>
<status status="PASS" endtime="20170913 19:22:11.938" starttime="20170913 19:22:11.937"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes</arg>
</arguments>
<msg timestamp="20170913 19:22:11.938" level="INFO">Executing : Table Must Exist  |  sharedPackageTypes </msg>
<msg timestamp="20170913 19:22:11.938" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedPackageTypes' </msg>
<status status="PASS" endtime="20170913 19:22:11.939" starttime="20170913 19:22:11.938"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes_history</arg>
</arguments>
<msg timestamp="20170913 19:22:11.939" level="INFO">Executing : Table Must Exist  |  sharedPackageTypes_history </msg>
<msg timestamp="20170913 19:22:11.940" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedPackageTypes_history' </msg>
<status status="PASS" endtime="20170913 19:22:11.940" starttime="20170913 19:22:11.939"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>statuses</arg>
</arguments>
<msg timestamp="20170913 19:22:11.941" level="INFO">Executing : Table Must Exist  |  statuses </msg>
<msg timestamp="20170913 19:22:11.941" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='statuses' </msg>
<status status="PASS" endtime="20170913 19:22:11.942" starttime="20170913 19:22:11.940"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks</arg>
</arguments>
<msg timestamp="20170913 19:22:11.942" level="INFO">Executing : Table Must Exist  |  tasks </msg>
<msg timestamp="20170913 19:22:11.942" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='tasks' </msg>
<status status="PASS" endtime="20170913 19:22:11.943" starttime="20170913 19:22:11.942"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks_history</arg>
</arguments>
<msg timestamp="20170913 19:22:11.943" level="INFO">Executing : Table Must Exist  |  tasks_history </msg>
<msg timestamp="20170913 19:22:11.943" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='tasks_history' </msg>
<status status="PASS" endtime="20170913 19:22:11.944" starttime="20170913 19:22:11.943"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces</arg>
</arguments>
<msg timestamp="20170913 19:22:11.945" level="INFO">Executing : Table Must Exist  |  traces </msg>
<msg timestamp="20170913 19:22:11.945" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='traces' </msg>
<status status="PASS" endtime="20170913 19:22:11.945" starttime="20170913 19:22:11.944"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces_history</arg>
</arguments>
<msg timestamp="20170913 19:22:11.946" level="INFO">Executing : Table Must Exist  |  traces_history </msg>
<msg timestamp="20170913 19:22:11.946" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='traces_history' </msg>
<status status="PASS" endtime="20170913 19:22:11.947" starttime="20170913 19:22:11.946"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>userRights</arg>
</arguments>
<msg timestamp="20170913 19:22:11.947" level="INFO">Executing : Table Must Exist  |  userRights </msg>
<msg timestamp="20170913 19:22:11.948" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='userRights' </msg>
<status status="PASS" endtime="20170913 19:22:11.948" starttime="20170913 19:22:11.947"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups</arg>
</arguments>
<msg timestamp="20170913 19:22:11.949" level="INFO">Executing : Table Must Exist  |  usergroups </msg>
<msg timestamp="20170913 19:22:11.949" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='usergroups' </msg>
<status status="PASS" endtime="20170913 19:22:11.949" starttime="20170913 19:22:11.948"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups_history</arg>
</arguments>
<msg timestamp="20170913 19:22:11.950" level="INFO">Executing : Table Must Exist  |  usergroups_history </msg>
<msg timestamp="20170913 19:22:11.950" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='usergroups_history' </msg>
<status status="PASS" endtime="20170913 19:22:11.950" starttime="20170913 19:22:11.950"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users</arg>
</arguments>
<msg timestamp="20170913 19:22:11.951" level="INFO">Executing : Table Must Exist  |  users </msg>
<msg timestamp="20170913 19:22:11.951" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='users' </msg>
<status status="PASS" endtime="20170913 19:22:11.951" starttime="20170913 19:22:11.951"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users_history</arg>
</arguments>
<msg timestamp="20170913 19:22:11.951" level="INFO">Executing : Table Must Exist  |  users_history </msg>
<msg timestamp="20170913 19:22:11.951" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='users_history' </msg>
<status status="PASS" endtime="20170913 19:22:11.953" starttime="20170913 19:22:11.951"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>version</arg>
</arguments>
<msg timestamp="20170913 19:22:11.953" level="INFO">Executing : Table Must Exist  |  version </msg>
<msg timestamp="20170913 19:22:11.953" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='version' </msg>
<status status="PASS" endtime="20170913 19:22:11.954" starttime="20170913 19:22:11.953"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>versions</arg>
</arguments>
<msg timestamp="20170913 19:22:11.954" level="INFO">Executing : Table Must Exist  |  versions </msg>
<msg timestamp="20170913 19:22:11.954" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='versions' </msg>
<status status="PASS" endtime="20170913 19:22:11.955" starttime="20170913 19:22:11.954"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps</arg>
</arguments>
<msg timestamp="20170913 19:22:11.955" level="INFO">Executing : Table Must Exist  |  view_apps </msg>
<msg timestamp="20170913 19:22:11.955" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps' </msg>
<status status="PASS" endtime="20170913 19:22:11.956" starttime="20170913 19:22:11.955"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps_for_offering</arg>
</arguments>
<msg timestamp="20170913 19:22:11.956" level="INFO">Executing : Table Must Exist  |  view_apps_for_offering </msg>
<msg timestamp="20170913 19:22:11.957" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps_for_offering' </msg>
<status status="PASS" endtime="20170913 19:22:11.957" starttime="20170913 19:22:11.956"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps_for_offering_with_file_sizes</arg>
</arguments>
<msg timestamp="20170913 19:22:11.958" level="INFO">Executing : Table Must Exist  |  view_apps_for_offering_with_file_sizes </msg>
<msg timestamp="20170913 19:22:11.958" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps_for_offering_with_file_sizes' </msg>
<status status="PASS" endtime="20170913 19:22:11.958" starttime="20170913 19:22:11.957"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_datas</arg>
</arguments>
<msg timestamp="20170913 19:22:11.959" level="INFO">Executing : Table Must Exist  |  view_datas </msg>
<msg timestamp="20170913 19:22:11.959" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_datas' </msg>
<status status="PASS" endtime="20170913 19:22:11.959" starttime="20170913 19:22:11.958"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_executables</arg>
</arguments>
<msg timestamp="20170913 19:22:11.960" level="INFO">Executing : Table Must Exist  |  view_executables </msg>
<msg timestamp="20170913 19:22:11.960" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_executables' </msg>
<status status="PASS" endtime="20170913 19:22:11.960" starttime="20170913 19:22:11.960"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_groups</arg>
</arguments>
<msg timestamp="20170913 19:22:11.961" level="INFO">Executing : Table Must Exist  |  view_groups </msg>
<msg timestamp="20170913 19:22:11.961" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_groups' </msg>
<status status="PASS" endtime="20170913 19:22:11.962" starttime="20170913 19:22:11.961"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts</arg>
</arguments>
<msg timestamp="20170913 19:22:11.962" level="INFO">Executing : Table Must Exist  |  view_hosts </msg>
<msg timestamp="20170913 19:22:11.962" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts' </msg>
<status status="PASS" endtime="20170913 19:22:11.963" starttime="20170913 19:22:11.962"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_deployable</arg>
</arguments>
<msg timestamp="20170913 19:22:11.963" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_deployable </msg>
<msg timestamp="20170913 19:22:11.963" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_deployable' </msg>
<status status="PASS" endtime="20170913 19:22:11.964" starttime="20170913 19:22:11.963"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_deployable_and_shared</arg>
</arguments>
<msg timestamp="20170913 19:22:11.964" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_deployable_and_shared </msg>
<msg timestamp="20170913 19:22:11.964" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_deployable_and_shared' </msg>
<status status="PASS" endtime="20170913 19:22:11.965" starttime="20170913 19:22:11.964"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_shared</arg>
</arguments>
<msg timestamp="20170913 19:22:11.966" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_shared </msg>
<msg timestamp="20170913 19:22:11.966" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_shared' </msg>
<status status="PASS" endtime="20170913 19:22:11.966" starttime="20170913 19:22:11.965"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_sessions</arg>
</arguments>
<msg timestamp="20170913 19:22:11.967" level="INFO">Executing : Table Must Exist  |  view_sessions </msg>
<msg timestamp="20170913 19:22:11.967" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_sessions' </msg>
<status status="PASS" endtime="20170913 19:22:11.967" starttime="20170913 19:22:11.966"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_tasks</arg>
</arguments>
<msg timestamp="20170913 19:22:11.968" level="INFO">Executing : Table Must Exist  |  view_tasks </msg>
<msg timestamp="20170913 19:22:11.968" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_tasks' </msg>
<status status="PASS" endtime="20170913 19:22:11.968" starttime="20170913 19:22:11.968"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_traces</arg>
</arguments>
<msg timestamp="20170913 19:22:11.969" level="INFO">Executing : Table Must Exist  |  view_traces </msg>
<msg timestamp="20170913 19:22:11.969" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_traces' </msg>
<status status="PASS" endtime="20170913 19:22:11.970" starttime="20170913 19:22:11.969"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_usergroups</arg>
</arguments>
<msg timestamp="20170913 19:22:11.970" level="INFO">Executing : Table Must Exist  |  view_usergroups </msg>
<msg timestamp="20170913 19:22:11.970" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_usergroups' </msg>
<status status="PASS" endtime="20170913 19:22:11.971" starttime="20170913 19:22:11.970"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users</arg>
</arguments>
<msg timestamp="20170913 19:22:11.971" level="INFO">Executing : Table Must Exist  |  view_users </msg>
<msg timestamp="20170913 19:22:11.971" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users' </msg>
<status status="PASS" endtime="20170913 19:22:11.972" starttime="20170913 19:22:11.971"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_apps</arg>
</arguments>
<msg timestamp="20170913 19:22:11.972" level="INFO">Executing : Table Must Exist  |  view_users_apps </msg>
<msg timestamp="20170913 19:22:11.972" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_apps' </msg>
<status status="PASS" endtime="20170913 19:22:11.973" starttime="20170913 19:22:11.972"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_datas</arg>
</arguments>
<msg timestamp="20170913 19:22:11.973" level="INFO">Executing : Table Must Exist  |  view_users_datas </msg>
<msg timestamp="20170913 19:22:11.973" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_datas' </msg>
<status status="PASS" endtime="20170913 19:22:11.974" starttime="20170913 19:22:11.973"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_groups</arg>
</arguments>
<msg timestamp="20170913 19:22:11.975" level="INFO">Executing : Table Must Exist  |  view_users_groups </msg>
<msg timestamp="20170913 19:22:11.975" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_groups' </msg>
<status status="PASS" endtime="20170913 19:22:11.976" starttime="20170913 19:22:11.974"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_hosts</arg>
</arguments>
<msg timestamp="20170913 19:22:11.976" level="INFO">Executing : Table Must Exist  |  view_users_hosts </msg>
<msg timestamp="20170913 19:22:11.976" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_hosts' </msg>
<status status="PASS" endtime="20170913 19:22:11.977" starttime="20170913 19:22:11.976"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_sessions</arg>
</arguments>
<msg timestamp="20170913 19:22:11.978" level="INFO">Executing : Table Must Exist  |  view_users_sessions </msg>
<msg timestamp="20170913 19:22:11.978" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_sessions' </msg>
<status status="PASS" endtime="20170913 19:22:11.979" starttime="20170913 19:22:11.978"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_tasks</arg>
</arguments>
<msg timestamp="20170913 19:22:11.979" level="INFO">Executing : Table Must Exist  |  view_users_tasks </msg>
<msg timestamp="20170913 19:22:11.980" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_tasks' </msg>
<status status="PASS" endtime="20170913 19:22:11.981" starttime="20170913 19:22:11.979"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_traces</arg>
</arguments>
<msg timestamp="20170913 19:22:11.981" level="INFO">Executing : Table Must Exist  |  view_users_traces </msg>
<msg timestamp="20170913 19:22:11.981" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_traces' </msg>
<status status="PASS" endtime="20170913 19:22:11.982" starttime="20170913 19:22:11.981"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_usergroups</arg>
</arguments>
<msg timestamp="20170913 19:22:11.982" level="INFO">Executing : Table Must Exist  |  view_users_usergroups </msg>
<msg timestamp="20170913 19:22:11.982" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_usergroups' </msg>
<status status="PASS" endtime="20170913 19:22:11.983" starttime="20170913 19:22:11.982"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_users</arg>
</arguments>
<msg timestamp="20170913 19:22:11.984" level="INFO">Executing : Table Must Exist  |  view_users_users </msg>
<msg timestamp="20170913 19:22:11.984" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_users' </msg>
<status status="PASS" endtime="20170913 19:22:11.985" starttime="20170913 19:22:11.983"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_works</arg>
</arguments>
<msg timestamp="20170913 19:22:11.985" level="INFO">Executing : Table Must Exist  |  view_users_works </msg>
<msg timestamp="20170913 19:22:11.985" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_works' </msg>
<status status="PASS" endtime="20170913 19:22:11.986" starttime="20170913 19:22:11.985"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works</arg>
</arguments>
<msg timestamp="20170913 19:22:11.987" level="INFO">Executing : Table Must Exist  |  view_works </msg>
<msg timestamp="20170913 19:22:11.987" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works' </msg>
<status status="PASS" endtime="20170913 19:22:11.988" starttime="20170913 19:22:11.987"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works_for_billing</arg>
</arguments>
<msg timestamp="20170913 19:22:11.988" level="INFO">Executing : Table Must Exist  |  view_works_for_billing </msg>
<msg timestamp="20170913 19:22:11.988" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works_for_billing' </msg>
<status status="PASS" endtime="20170913 19:22:11.989" starttime="20170913 19:22:11.988"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works_for_billing_with_file_sizes</arg>
</arguments>
<msg timestamp="20170913 19:22:11.989" level="INFO">Executing : Table Must Exist  |  view_works_for_billing_with_file_sizes </msg>
<msg timestamp="20170913 19:22:11.989" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works_for_billing_with_file_sizes' </msg>
<status status="PASS" endtime="20170913 19:22:11.990" starttime="20170913 19:22:11.989"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works</arg>
</arguments>
<msg timestamp="20170913 19:22:11.991" level="INFO">Executing : Table Must Exist  |  works </msg>
<msg timestamp="20170913 19:22:11.991" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='works' </msg>
<status status="PASS" endtime="20170913 19:22:11.992" starttime="20170913 19:22:11.990"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works_history</arg>
</arguments>
<msg timestamp="20170913 19:22:11.992" level="INFO">Executing : Table Must Exist  |  works_history </msg>
<msg timestamp="20170913 19:22:11.992" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='works_history' </msg>
<status status="PASS" endtime="20170913 19:22:11.993" starttime="20170913 19:22:11.992"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170913 19:22:11.994" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170913 19:22:11.994" starttime="20170913 19:22:11.994"></status>
</kw>
<status status="PASS" endtime="20170913 19:22:11.994" starttime="20170913 19:22:11.993"></status>
</kw>
<status status="PASS" endtime="20170913 19:22:11.994" starttime="20170913 19:22:11.913"></status>
</kw>
<status status="PASS" endtime="20170913 19:22:11.994" starttime="20170913 19:22:11.913"></status>
</kw>
<kw name="Start XtremWeb Server" library="XWServer">
<arguments>
<arg>${DIST_XWHEP_PATH}</arg>
</arguments>
<kw name="File Should Exist" library="OperatingSystem">
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xtremweb.server.conf</arg>
</arguments>
<msg timestamp="20170913 19:22:11.995" html="yes" level="INFO">File '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf&lt;/a&gt;' exists.</msg>
<status status="PASS" endtime="20170913 19:22:11.995" starttime="20170913 19:22:11.995"></status>
</kw>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xtremweb.server.conf</arg>
</arguments>
<assign>
<var>${config_content}</var>
</assign>
<msg timestamp="20170913 19:22:11.996" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf&lt;/a&gt;'.</msg>
<msg timestamp="20170913 19:22:11.996" level="INFO">${config_content} = #
# Copyrights     : CNRS
# Author         : Oleg Lodygensky
# Acknowledgment : XtremWeb-HEP is based on XtremWeb 1.8.0 by inria : http://www.xtremweb.net/
# Web            : http://www.xtremweb-hep.o...</msg>
<status status="PASS" endtime="20170913 19:22:11.996" starttime="20170913 19:22:11.995"></status>
</kw>
<kw name="Remove String Using Regexp" library="String">
<doc>Removes ``patterns`` from the given ``string``.</doc>
<arguments>
<arg>${config_content}</arg>
<arg>LAUNCHERURL=${XWCONFIGURE.VALUES.XWUPGRADEURL}</arg>
</arguments>
<assign>
<var>${config_content_filtered}</var>
</assign>
<msg timestamp="20170913 19:22:11.997" level="INFO">${config_content_filtered} = #
# Copyrights     : CNRS
# Author         : Oleg Lodygensky
# Acknowledgment : XtremWeb-HEP is based on XtremWeb 1.8.0 by inria : http://www.xtremweb.net/
# Web            : http://www.xtremweb-hep.o...</msg>
<status status="PASS" endtime="20170913 19:22:11.997" starttime="20170913 19:22:11.996"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${config_content_filtered}</arg>
<arg>\## HTTPSPORT=443</arg>
<arg>HTTPSPORT=${XWCONFIGURE.VALUES.HTTPSPORT}</arg>
</arguments>
<assign>
<var>${config_content_filtered}</var>
</assign>
<msg timestamp="20170913 19:22:11.997" level="INFO">${config_content_filtered} = #
# Copyrights     : CNRS
# Author         : Oleg Lodygensky
# Acknowledgment : XtremWeb-HEP is based on XtremWeb 1.8.0 by inria : http://www.xtremweb.net/
# Web            : http://www.xtremweb-hep.o...</msg>
<status status="PASS" endtime="20170913 19:22:11.997" starttime="20170913 19:22:11.997"></status>
</kw>
<kw name="Create File" library="OperatingSystem">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xtremweb.server.conf</arg>
<arg>content=${config_content_filtered}</arg>
</arguments>
<msg timestamp="20170913 19:22:12.000" html="yes" level="INFO">Created file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170913 19:22:12.000" starttime="20170913 19:22:11.997"></status>
</kw>
<kw name="Remove File" library="OperatingSystem">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<msg timestamp="20170913 19:22:12.001" html="yes" level="INFO">Removed file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170913 19:22:12.001" starttime="20170913 19:22:12.000"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/bin/xtremweb.server console</arg>
<arg>shell=yes</arg>
<arg>stderr=STDOUT</arg>
<arg>stdout=${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<assign>
<var>${created_process}</var>
</assign>
<msg timestamp="20170913 19:22:12.002" level="INFO">Starting process:
/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/xtremweb.server console</msg>
<msg timestamp="20170913 19:22:12.005" level="INFO">${created_process} = 57</msg>
<status status="PASS" endtime="20170913 19:22:12.005" starttime="20170913 19:22:12.001"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SERVER_PROCESS}</arg>
<arg>${created_process}</arg>
</arguments>
<msg timestamp="20170913 19:22:12.006" level="INFO">${SERVER_PROCESS} = 57</msg>
<status status="PASS" endtime="20170913 19:22:12.006" starttime="20170913 19:22:12.005"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2 min</arg>
<arg>5 sec</arg>
<arg>Check XtremWeb Server Start From Log</arg>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<kw name="Check XtremWeb Server Start From Log" library="XWServer">
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<kw name="Log XtremWeb Process Log File" library="XWServer">
<kw name="Log File" library="OperatingSystem">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<msg timestamp="20170913 19:22:12.008" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170913 19:22:12.009" level="INFO"></msg>
<status status="PASS" endtime="20170913 19:22:12.009" starttime="20170913 19:22:12.008"></status>
</kw>
<status status="PASS" endtime="20170913 19:22:12.009" starttime="20170913 19:22:12.007"></status>
</kw>
<kw name="Grep File" library="OperatingSystem">
<doc>Returns the lines of the specified file that match the ``pattern``.</doc>
<arguments>
<arg>${log}</arg>
<arg>listening on port : ${XWCONFIGURE.VALUES.HTTPSPORT}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20170913 19:22:12.010" html="yes" level="INFO">Reading file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170913 19:22:12.010" level="INFO">0 out of 0 lines matched</msg>
<msg timestamp="20170913 19:22:12.010" level="INFO">${ret} = </msg>
<status status="PASS" endtime="20170913 19:22:12.010" starttime="20170913 19:22:12.009"></status>
</kw>
<kw name="Get Line Count" library="String">
<doc>Returns and logs the number of lines in the given string.</doc>
<arguments>
<arg>${ret}</arg>
</arguments>
<assign>
<var>${line_count}</var>
</assign>
<msg timestamp="20170913 19:22:12.010" level="INFO">0 lines</msg>
<msg timestamp="20170913 19:22:12.011" level="INFO">${line_count} = 0</msg>
<status status="PASS" endtime="20170913 19:22:12.011" starttime="20170913 19:22:12.010"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${line_count}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20170913 19:22:12.011" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20170913 19:22:12.011" level="FAIL">0 != 2</msg>
<status status="FAIL" endtime="20170913 19:22:12.011" starttime="20170913 19:22:12.011"></status>
</kw>
<status status="FAIL" endtime="20170913 19:22:12.011" starttime="20170913 19:22:12.007"></status>
</kw>
<kw name="Check XtremWeb Server Start From Log" library="XWServer">
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<kw name="Log XtremWeb Process Log File" library="XWServer">
<kw name="Log File" library="OperatingSystem">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<msg timestamp="20170913 19:22:17.013" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170913 19:22:17.020" level="INFO">Wed Sep 13 19:22:12 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : checking launch url
Wed Sep 13 19:22:12 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] WARNING : no launcher URL defined
Wed Sep 13 19:22:12 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : launching SmartSockets hub
[13/Sep/2017:19:22:14 +0000] [main_1] ERROR : setRole : role redefined ?! (was SERVER)
[13/Sep/2017:19:22:14 +0000] [xtremweb.database.DBConnPoolThread_main_1] INFO : Connection to database jdbc:mysql://localhost/xtremweb is ok, 70 created
[13/Sep/2017:19:22:14 +0000] [xtremweb.dispatcher.DBInterface_main_1] WARN : Can't retrieve any app
[13/Sep/2017:19:22:14 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't create ProxyValidator
[13/Sep/2017:19:22:14 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.io.FileNotFoundException: /tmp/castore (No such file or directory) (/tmp/castore (No such file or directory))
[13/Sep/2017:19:22:14 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't add CA certificates to keystore
[13/Sep/2017:19:22:14 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.lang.NullPointerException (null)
[13/Sep/2017:19:22:14 +0000] [xtremweb.dispatcher.HashTaskSet_TaskSet_14] INFO : TaskSet started (300000)
[13/Sep/2017:19:22:15 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : still waiting task set...
[13/Sep/2017:19:22:16 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : UDP server not started
[13/Sep/2017:19:22:16 +0000] [xtremweb.communications.TCPServer_TCPServerNIO_15] INFO : started, listening on port : 4321
log4j:WARN No appenders could be found for logger (org.eclipse.jetty.util.log).
log4j:WARN Please initialize the log4j system properly.
log4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.
[13/Sep/2017:19:22:16 +0000] [xtremweb.communications.HTTPServer_main_1] INFO : started, listening on port : 9443
[13/Sep/2017:19:22:16 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : FACEBOOK : java.net.MalformedURLException: no protocol: 
[13/Sep/2017:19:22:16 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : GOOGLE : java.net.MalformedURLException: no protocol: 
[13/Sep/2017:19:22:16 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : TWITTER : java.net.MalformedURLException: no protocol: 
[13/Sep/2017:19:22:16 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : YAHOO : java.net.MalformedURLException: no protocol: 
[13/Sep/2017:19:22:16 +0000] [main_1] ERROR : Can't add new entry to keystore
[13/Sep/2017:19:22:16 +0000] [main_1] WARN : javax.net.ssl.SSLHandshakeException: sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target (sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target)
[13/Sep/2017:19:22:16 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : XWHEP Dispatcher(10.6.0-head) started [Wed Sep 13 19:22:16 UTC 2017]
[13/Sep/2017:19:22:16 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : DB vendor  = mysql
[13/Sep/2017:19:22:16 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : mileStone  = 
[13/Sep/2017:19:22:16 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Time out   = 15000
[13/Sep/2017:19:22:16 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Disk opt'd = true
[13/Sep/2017:19:22:16 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Net  opt'd = true
[13/Sep/2017:19:22:16 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : NIO        = true
XWHEP Dispatcher started  Wed Sep 13 19:22:16 UTC 2017
Name             : vagrant-ubuntu-trusty-64
Version          : 10.6.0-head
Identity         : 
XWRole           : SERVER
Started on       : Wed Sep 13 19:22:14 UTC 2017
Scheduler        : xtremweb.dispatcher.MatchingScheduler
SmartSockets hub : 172.28.128.3/172.17.0.1/10.0.2.15-4329#0a.cc.ad.e6.cc.7c.00.00.25.09.02.42.7b.de.a1.dc~vagrant
Server HTTP      : true
Alive            : 300
Alive time out   : 900
Polling time out : 15000
Optimize zip     : true
Optimize network : true
NIO              : true
Comm layer       : xtremweb.communications.TCPClient
Socket time out  : 60000
Socket retries   : 50
Max connections  : 200
TCP port         : 4321
UDP port         : 4323
HTPP  port       : 80
HTPPS port       : 9443
Sun RPC interposition port : 4328
Sandbox path : /usr/bin/lxc
Sandbox launch args : 
Host &lt;host&gt;&lt;uid&gt;0f92394f-730d-41a1-bbb8-f3d04eb69080&lt;/uid&gt;&lt;accessrights&gt;0x755&lt;/accessrights&gt;&lt;name&gt;vagrant-ubuntu-trusty-64&lt;/name&gt;&lt;cpuload&gt;50&lt;/cpuload&gt;&lt;natedipaddr&gt;10.0.2.15&lt;/natedipaddr&gt;&lt;ipaddr&gt;10.0.2.15&lt;/ipaddr&gt;&lt;hwaddr&gt;&lt;/hwaddr&gt;&lt;timezone&gt;Etc/UTC&lt;/timezone&gt;&lt;os&gt;LINUX&lt;/os&gt;&lt;osversion&gt;3.13.0-129-generic&lt;/osversion&gt;&lt;javaversion&gt;1.8.0_141&lt;/javaversion&gt;&lt;javadatamodel&gt;64&lt;/javadatamodel&gt;&lt;cputype&gt;AMD64&lt;/cputype&gt;&lt;cpunb&gt;1&lt;/cpunb&gt;&lt;cpumodel&gt;unknown&lt;/cpumodel&gt;&lt;cpuspeed&gt;0&lt;/cpuspeed&gt;&lt;totalmem&gt;0&lt;/totalmem&gt;&lt;totalswap&gt;0&lt;/totalswap&gt;&lt;totaltmp&gt;40284&lt;/totaltmp&gt;&lt;freetmp&gt;37264&lt;/freetmp&gt;&lt;project&gt;&lt;/project&gt;&lt;active&gt;true&lt;/active&gt;&lt;incomingconnections&gt;false&lt;/incomingconnections&gt;&lt;available&gt;false&lt;/available&gt;&lt;pilotjob&gt;false&lt;/pilotjob&gt;&lt;sgid&gt;&lt;/sgid&gt;&lt;timeout&gt;15000&lt;/timeout&gt;&lt;traces&gt;false&lt;/traces&gt;&lt;acceptbin&gt;false&lt;/acceptbin&gt;&lt;version&gt;10.6.0-head&lt;/version&gt;&lt;/host&gt;
[13/Sep/2017:19:22:16 +0000] [xtremweb.communications.HTTPServer_HTTPServer_218] INFO : started, listening on port : 9443
</msg>
<status status="PASS" endtime="20170913 19:22:17.021" starttime="20170913 19:22:17.013"></status>
</kw>
<status status="PASS" endtime="20170913 19:22:17.021" starttime="20170913 19:22:17.012"></status>
</kw>
<kw name="Grep File" library="OperatingSystem">
<doc>Returns the lines of the specified file that match the ``pattern``.</doc>
<arguments>
<arg>${log}</arg>
<arg>listening on port : ${XWCONFIGURE.VALUES.HTTPSPORT}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20170913 19:22:17.022" html="yes" level="INFO">Reading file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170913 19:22:17.023" level="INFO">2 out of 59 lines matched</msg>
<msg timestamp="20170913 19:22:17.023" level="INFO">${ret} = [13/Sep/2017:19:22:16 +0000] [xtremweb.communications.HTTPServer_main_1] INFO : started, listening on port : 9443
[13/Sep/2017:19:22:16 +0000] [xtremweb.communications.HTTPServer_HTTPServer_218] INFO ...</msg>
<status status="PASS" endtime="20170913 19:22:17.023" starttime="20170913 19:22:17.021"></status>
</kw>
<kw name="Get Line Count" library="String">
<doc>Returns and logs the number of lines in the given string.</doc>
<arguments>
<arg>${ret}</arg>
</arguments>
<assign>
<var>${line_count}</var>
</assign>
<msg timestamp="20170913 19:22:17.024" level="INFO">2 lines</msg>
<msg timestamp="20170913 19:22:17.024" level="INFO">${line_count} = 2</msg>
<status status="PASS" endtime="20170913 19:22:17.024" starttime="20170913 19:22:17.024"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${line_count}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20170913 19:22:17.024" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170913 19:22:17.025" starttime="20170913 19:22:17.024"></status>
</kw>
<status status="PASS" endtime="20170913 19:22:17.025" starttime="20170913 19:22:17.012"></status>
</kw>
<status status="PASS" endtime="20170913 19:22:17.025" starttime="20170913 19:22:12.006"></status>
</kw>
<kw name="Log XtremWeb Process Log File" library="XWServer">
<kw name="Log File" library="OperatingSystem">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<msg timestamp="20170913 19:22:17.025" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170913 19:22:17.026" level="INFO">Wed Sep 13 19:22:12 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : checking launch url
Wed Sep 13 19:22:12 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] WARNING : no launcher URL defined
Wed Sep 13 19:22:12 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : launching SmartSockets hub
[13/Sep/2017:19:22:14 +0000] [main_1] ERROR : setRole : role redefined ?! (was SERVER)
[13/Sep/2017:19:22:14 +0000] [xtremweb.database.DBConnPoolThread_main_1] INFO : Connection to database jdbc:mysql://localhost/xtremweb is ok, 70 created
[13/Sep/2017:19:22:14 +0000] [xtremweb.dispatcher.DBInterface_main_1] WARN : Can't retrieve any app
[13/Sep/2017:19:22:14 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't create ProxyValidator
[13/Sep/2017:19:22:14 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.io.FileNotFoundException: /tmp/castore (No such file or directory) (/tmp/castore (No such file or directory))
[13/Sep/2017:19:22:14 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't add CA certificates to keystore
[13/Sep/2017:19:22:14 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.lang.NullPointerException (null)
[13/Sep/2017:19:22:14 +0000] [xtremweb.dispatcher.HashTaskSet_TaskSet_14] INFO : TaskSet started (300000)
[13/Sep/2017:19:22:15 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : still waiting task set...
[13/Sep/2017:19:22:16 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : UDP server not started
[13/Sep/2017:19:22:16 +0000] [xtremweb.communications.TCPServer_TCPServerNIO_15] INFO : started, listening on port : 4321
log4j:WARN No appenders could be found for logger (org.eclipse.jetty.util.log).
log4j:WARN Please initialize the log4j system properly.
log4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.
[13/Sep/2017:19:22:16 +0000] [xtremweb.communications.HTTPServer_main_1] INFO : started, listening on port : 9443
[13/Sep/2017:19:22:16 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : FACEBOOK : java.net.MalformedURLException: no protocol: 
[13/Sep/2017:19:22:16 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : GOOGLE : java.net.MalformedURLException: no protocol: 
[13/Sep/2017:19:22:16 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : TWITTER : java.net.MalformedURLException: no protocol: 
[13/Sep/2017:19:22:16 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : YAHOO : java.net.MalformedURLException: no protocol: 
[13/Sep/2017:19:22:16 +0000] [main_1] ERROR : Can't add new entry to keystore
[13/Sep/2017:19:22:16 +0000] [main_1] WARN : javax.net.ssl.SSLHandshakeException: sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target (sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target)
[13/Sep/2017:19:22:16 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : XWHEP Dispatcher(10.6.0-head) started [Wed Sep 13 19:22:16 UTC 2017]
[13/Sep/2017:19:22:16 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : DB vendor  = mysql
[13/Sep/2017:19:22:16 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : mileStone  = 
[13/Sep/2017:19:22:16 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Time out   = 15000
[13/Sep/2017:19:22:16 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Disk opt'd = true
[13/Sep/2017:19:22:16 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Net  opt'd = true
[13/Sep/2017:19:22:16 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : NIO        = true
XWHEP Dispatcher started  Wed Sep 13 19:22:16 UTC 2017
Name             : vagrant-ubuntu-trusty-64
Version          : 10.6.0-head
Identity         : 
XWRole           : SERVER
Started on       : Wed Sep 13 19:22:14 UTC 2017
Scheduler        : xtremweb.dispatcher.MatchingScheduler
SmartSockets hub : 172.28.128.3/172.17.0.1/10.0.2.15-4329#0a.cc.ad.e6.cc.7c.00.00.25.09.02.42.7b.de.a1.dc~vagrant
Server HTTP      : true
Alive            : 300
Alive time out   : 900
Polling time out : 15000
Optimize zip     : true
Optimize network : true
NIO              : true
Comm layer       : xtremweb.communications.TCPClient
Socket time out  : 60000
Socket retries   : 50
Max connections  : 200
TCP port         : 4321
UDP port         : 4323
HTPP  port       : 80
HTPPS port       : 9443
Sun RPC interposition port : 4328
Sandbox path : /usr/bin/lxc
Sandbox launch args : 
Host &lt;host&gt;&lt;uid&gt;0f92394f-730d-41a1-bbb8-f3d04eb69080&lt;/uid&gt;&lt;accessrights&gt;0x755&lt;/accessrights&gt;&lt;name&gt;vagrant-ubuntu-trusty-64&lt;/name&gt;&lt;cpuload&gt;50&lt;/cpuload&gt;&lt;natedipaddr&gt;10.0.2.15&lt;/natedipaddr&gt;&lt;ipaddr&gt;10.0.2.15&lt;/ipaddr&gt;&lt;hwaddr&gt;&lt;/hwaddr&gt;&lt;timezone&gt;Etc/UTC&lt;/timezone&gt;&lt;os&gt;LINUX&lt;/os&gt;&lt;osversion&gt;3.13.0-129-generic&lt;/osversion&gt;&lt;javaversion&gt;1.8.0_141&lt;/javaversion&gt;&lt;javadatamodel&gt;64&lt;/javadatamodel&gt;&lt;cputype&gt;AMD64&lt;/cputype&gt;&lt;cpunb&gt;1&lt;/cpunb&gt;&lt;cpumodel&gt;unknown&lt;/cpumodel&gt;&lt;cpuspeed&gt;0&lt;/cpuspeed&gt;&lt;totalmem&gt;0&lt;/totalmem&gt;&lt;totalswap&gt;0&lt;/totalswap&gt;&lt;totaltmp&gt;40284&lt;/totaltmp&gt;&lt;freetmp&gt;37264&lt;/freetmp&gt;&lt;project&gt;&lt;/project&gt;&lt;active&gt;true&lt;/active&gt;&lt;incomingconnections&gt;false&lt;/incomingconnections&gt;&lt;available&gt;false&lt;/available&gt;&lt;pilotjob&gt;false&lt;/pilotjob&gt;&lt;sgid&gt;&lt;/sgid&gt;&lt;timeout&gt;15000&lt;/timeout&gt;&lt;traces&gt;false&lt;/traces&gt;&lt;acceptbin&gt;false&lt;/acceptbin&gt;&lt;version&gt;10.6.0-head&lt;/version&gt;&lt;/host&gt;
[13/Sep/2017:19:22:16 +0000] [xtremweb.communications.HTTPServer_HTTPServer_218] INFO : started, listening on port : 9443
</msg>
<status status="PASS" endtime="20170913 19:22:17.026" starttime="20170913 19:22:17.025"></status>
</kw>
<status status="PASS" endtime="20170913 19:22:17.026" starttime="20170913 19:22:17.025"></status>
</kw>
<status status="PASS" endtime="20170913 19:22:17.026" starttime="20170913 19:22:11.994"></status>
</kw>
<kw name="Start XtremWeb Worker" library="XWWorker">
<arguments>
<arg>${DIST_XWHEP_PATH}</arg>
</arguments>
<kw name="File Should Exist" library="OperatingSystem">
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xtremweb.worker.conf</arg>
</arguments>
<msg timestamp="20170913 19:22:17.028" html="yes" level="INFO">File '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf&lt;/a&gt;' exists.</msg>
<status status="PASS" endtime="20170913 19:22:17.028" starttime="20170913 19:22:17.027"></status>
</kw>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xtremweb.worker.conf</arg>
</arguments>
<assign>
<var>${config_content}</var>
</assign>
<msg timestamp="20170913 19:22:17.028" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf&lt;/a&gt;'.</msg>
<msg timestamp="20170913 19:22:17.029" level="INFO">${config_content} = #
# Copyrights     : CNRS
# Author         : Oleg Lodygensky
# Acknowledgment : XtremWeb-HEP is based on XtremWeb 1.8.0 by inria : http://www.xtremweb.net/
# Web            : http://www.xtremweb-hep.o...</msg>
<status status="PASS" endtime="20170913 19:22:17.029" starttime="20170913 19:22:17.028"></status>
</kw>
<kw name="Remove String Using Regexp" library="String">
<doc>Removes ``patterns`` from the given ``string``.</doc>
<arguments>
<arg>${config_content}</arg>
<arg>LAUNCHERURL=${XWCONFIGURE.VALUES.XWUPGRADEURL}</arg>
</arguments>
<assign>
<var>${config_content_filtered}</var>
</assign>
<msg timestamp="20170913 19:22:17.030" level="INFO">${config_content_filtered} = #
# Copyrights     : CNRS
# Author         : Oleg Lodygensky
# Acknowledgment : XtremWeb-HEP is based on XtremWeb 1.8.0 by inria : http://www.xtremweb.net/
# Web            : http://www.xtremweb-hep.o...</msg>
<status status="PASS" endtime="20170913 19:22:17.030" starttime="20170913 19:22:17.029"></status>
</kw>
<kw name="Create File" library="OperatingSystem">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xtremweb.worker.conf</arg>
<arg>content=${config_content_filtered}</arg>
</arguments>
<msg timestamp="20170913 19:22:17.037" html="yes" level="INFO">Created file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170913 19:22:17.038" starttime="20170913 19:22:17.030"></status>
</kw>
<kw name="Remove File" library="OperatingSystem">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.worker.process.log</arg>
</arguments>
<msg timestamp="20170913 19:22:17.039" html="yes" level="INFO">Removed file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.worker.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.worker.process.log&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170913 19:22:17.039" starttime="20170913 19:22:17.038"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/bin/xtremweb.worker console</arg>
<arg>shell=yes</arg>
<arg>stderr=STDOUT</arg>
<arg>stdout=${DIST_XWHEP_PATH}/xwhep.worker.process.log</arg>
</arguments>
<assign>
<var>${created_process}</var>
</assign>
<msg timestamp="20170913 19:22:17.041" level="INFO">Starting process:
/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/xtremweb.worker console</msg>
<msg timestamp="20170913 19:22:17.044" level="INFO">${created_process} = 58</msg>
<status status="PASS" endtime="20170913 19:22:17.045" starttime="20170913 19:22:17.039"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${WORKER_PROCESS}</arg>
<arg>${created_process}</arg>
</arguments>
<msg timestamp="20170913 19:22:17.047" level="INFO">${WORKER_PROCESS} = 58</msg>
<status status="PASS" endtime="20170913 19:22:17.047" starttime="20170913 19:22:17.045"></status>
</kw>
<kw name="Log File" library="OperatingSystem">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.worker.process.log</arg>
</arguments>
<msg timestamp="20170913 19:22:17.048" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.worker.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.worker.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170913 19:22:17.050" level="INFO"></msg>
<status status="PASS" endtime="20170913 19:22:17.050" starttime="20170913 19:22:17.047"></status>
</kw>
<status status="PASS" endtime="20170913 19:22:17.050" starttime="20170913 19:22:17.027"></status>
</kw>
<status status="PASS" endtime="20170913 19:22:17.050" starttime="20170913 19:22:11.913"></status>
</kw>
<status status="PASS" endtime="20170913 19:22:17.050" starttime="20170913 19:21:12.267"></status>
</kw>
<test id="s1-s6-t1" name="Test XWSenddata Command With LS Binary">
<kw type="setup" name="Begin XWtremWeb Command Test" library="XWCommon">
<kw name="Ping XWtremWeb Database" library="XWServer">
<kw name="Xtremweb Tables Must Exist" library="MySql">
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170913 19:22:17.054" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170913 19:22:17.056" starttime="20170913 19:22:17.054"></status>
</kw>
<status status="PASS" endtime="20170913 19:22:17.056" starttime="20170913 19:22:17.054"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>appTypes</arg>
</arguments>
<msg timestamp="20170913 19:22:17.056" level="INFO">Executing : Table Must Exist  |  appTypes </msg>
<msg timestamp="20170913 19:22:17.057" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='appTypes' </msg>
<status status="PASS" endtime="20170913 19:22:17.058" starttime="20170913 19:22:17.056"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps</arg>
</arguments>
<msg timestamp="20170913 19:22:17.058" level="INFO">Executing : Table Must Exist  |  apps </msg>
<msg timestamp="20170913 19:22:17.058" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='apps' </msg>
<status status="PASS" endtime="20170913 19:22:17.059" starttime="20170913 19:22:17.058"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps_history</arg>
</arguments>
<msg timestamp="20170913 19:22:17.059" level="INFO">Executing : Table Must Exist  |  apps_history </msg>
<msg timestamp="20170913 19:22:17.059" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='apps_history' </msg>
<status status="PASS" endtime="20170913 19:22:17.060" starttime="20170913 19:22:17.059"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>cpuTypes</arg>
</arguments>
<msg timestamp="20170913 19:22:17.060" level="INFO">Executing : Table Must Exist  |  cpuTypes </msg>
<msg timestamp="20170913 19:22:17.061" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='cpuTypes' </msg>
<status status="PASS" endtime="20170913 19:22:17.062" starttime="20170913 19:22:17.060"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>dataTypes</arg>
</arguments>
<msg timestamp="20170913 19:22:17.062" level="INFO">Executing : Table Must Exist  |  dataTypes </msg>
<msg timestamp="20170913 19:22:17.062" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='dataTypes' </msg>
<status status="PASS" endtime="20170913 19:22:17.064" starttime="20170913 19:22:17.062"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas</arg>
</arguments>
<msg timestamp="20170913 19:22:17.064" level="INFO">Executing : Table Must Exist  |  datas </msg>
<msg timestamp="20170913 19:22:17.064" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='datas' </msg>
<status status="PASS" endtime="20170913 19:22:17.065" starttime="20170913 19:22:17.064"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas_history</arg>
</arguments>
<msg timestamp="20170913 19:22:17.065" level="INFO">Executing : Table Must Exist  |  datas_history </msg>
<msg timestamp="20170913 19:22:17.066" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='datas_history' </msg>
<status status="PASS" endtime="20170913 19:22:17.066" starttime="20170913 19:22:17.065"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables</arg>
</arguments>
<msg timestamp="20170913 19:22:17.067" level="INFO">Executing : Table Must Exist  |  executables </msg>
<msg timestamp="20170913 19:22:17.067" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='executables' </msg>
<status status="PASS" endtime="20170913 19:22:17.067" starttime="20170913 19:22:17.066"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables_history</arg>
</arguments>
<msg timestamp="20170913 19:22:17.068" level="INFO">Executing : Table Must Exist  |  executables_history </msg>
<msg timestamp="20170913 19:22:17.068" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='executables_history' </msg>
<status status="PASS" endtime="20170913 19:22:17.070" starttime="20170913 19:22:17.068"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups</arg>
</arguments>
<msg timestamp="20170913 19:22:17.070" level="INFO">Executing : Table Must Exist  |  groups </msg>
<msg timestamp="20170913 19:22:17.070" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='groups' </msg>
<status status="PASS" endtime="20170913 19:22:17.071" starttime="20170913 19:22:17.070"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups_history</arg>
</arguments>
<msg timestamp="20170913 19:22:17.072" level="INFO">Executing : Table Must Exist  |  groups_history </msg>
<msg timestamp="20170913 19:22:17.072" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='groups_history' </msg>
<status status="PASS" endtime="20170913 19:22:17.072" starttime="20170913 19:22:17.071"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts</arg>
</arguments>
<msg timestamp="20170913 19:22:17.073" level="INFO">Executing : Table Must Exist  |  hosts </msg>
<msg timestamp="20170913 19:22:17.073" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='hosts' </msg>
<status status="PASS" endtime="20170913 19:22:17.074" starttime="20170913 19:22:17.073"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts_history</arg>
</arguments>
<msg timestamp="20170913 19:22:17.074" level="INFO">Executing : Table Must Exist  |  hosts_history </msg>
<msg timestamp="20170913 19:22:17.074" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='hosts_history' </msg>
<status status="PASS" endtime="20170913 19:22:17.075" starttime="20170913 19:22:17.074"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships</arg>
</arguments>
<msg timestamp="20170913 19:22:17.075" level="INFO">Executing : Table Must Exist  |  memberships </msg>
<msg timestamp="20170913 19:22:17.076" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='memberships' </msg>
<status status="PASS" endtime="20170913 19:22:17.077" starttime="20170913 19:22:17.075"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships_history</arg>
</arguments>
<msg timestamp="20170913 19:22:17.077" level="INFO">Executing : Table Must Exist  |  memberships_history </msg>
<msg timestamp="20170913 19:22:17.077" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='memberships_history' </msg>
<status status="PASS" endtime="20170913 19:22:17.078" starttime="20170913 19:22:17.077"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>oses</arg>
</arguments>
<msg timestamp="20170913 19:22:17.078" level="INFO">Executing : Table Must Exist  |  oses </msg>
<msg timestamp="20170913 19:22:17.078" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='oses' </msg>
<status status="PASS" endtime="20170913 19:22:17.079" starttime="20170913 19:22:17.078"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>packageTypes</arg>
</arguments>
<msg timestamp="20170913 19:22:17.080" level="INFO">Executing : Table Must Exist  |  packageTypes </msg>
<msg timestamp="20170913 19:22:17.080" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='packageTypes' </msg>
<status status="PASS" endtime="20170913 19:22:17.081" starttime="20170913 19:22:17.079"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions</arg>
</arguments>
<msg timestamp="20170913 19:22:17.081" level="INFO">Executing : Table Must Exist  |  sessions </msg>
<msg timestamp="20170913 19:22:17.081" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sessions' </msg>
<status status="PASS" endtime="20170913 19:22:17.083" starttime="20170913 19:22:17.081"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions_history</arg>
</arguments>
<msg timestamp="20170913 19:22:17.083" level="INFO">Executing : Table Must Exist  |  sessions_history </msg>
<msg timestamp="20170913 19:22:17.083" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sessions_history' </msg>
<status status="PASS" endtime="20170913 19:22:17.084" starttime="20170913 19:22:17.083"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes</arg>
</arguments>
<msg timestamp="20170913 19:22:17.085" level="INFO">Executing : Table Must Exist  |  sharedAppTypes </msg>
<msg timestamp="20170913 19:22:17.085" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedAppTypes' </msg>
<status status="PASS" endtime="20170913 19:22:17.086" starttime="20170913 19:22:17.084"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes_history</arg>
</arguments>
<msg timestamp="20170913 19:22:17.086" level="INFO">Executing : Table Must Exist  |  sharedAppTypes_history </msg>
<msg timestamp="20170913 19:22:17.086" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedAppTypes_history' </msg>
<status status="PASS" endtime="20170913 19:22:17.087" starttime="20170913 19:22:17.086"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes</arg>
</arguments>
<msg timestamp="20170913 19:22:17.087" level="INFO">Executing : Table Must Exist  |  sharedPackageTypes </msg>
<msg timestamp="20170913 19:22:17.087" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedPackageTypes' </msg>
<status status="PASS" endtime="20170913 19:22:17.088" starttime="20170913 19:22:17.087"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes_history</arg>
</arguments>
<msg timestamp="20170913 19:22:17.088" level="INFO">Executing : Table Must Exist  |  sharedPackageTypes_history </msg>
<msg timestamp="20170913 19:22:17.088" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedPackageTypes_history' </msg>
<status status="PASS" endtime="20170913 19:22:17.089" starttime="20170913 19:22:17.088"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>statuses</arg>
</arguments>
<msg timestamp="20170913 19:22:17.089" level="INFO">Executing : Table Must Exist  |  statuses </msg>
<msg timestamp="20170913 19:22:17.089" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='statuses' </msg>
<status status="PASS" endtime="20170913 19:22:17.091" starttime="20170913 19:22:17.089"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks</arg>
</arguments>
<msg timestamp="20170913 19:22:17.091" level="INFO">Executing : Table Must Exist  |  tasks </msg>
<msg timestamp="20170913 19:22:17.091" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='tasks' </msg>
<status status="PASS" endtime="20170913 19:22:17.093" starttime="20170913 19:22:17.091"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks_history</arg>
</arguments>
<msg timestamp="20170913 19:22:17.093" level="INFO">Executing : Table Must Exist  |  tasks_history </msg>
<msg timestamp="20170913 19:22:17.094" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='tasks_history' </msg>
<status status="PASS" endtime="20170913 19:22:17.095" starttime="20170913 19:22:17.093"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces</arg>
</arguments>
<msg timestamp="20170913 19:22:17.096" level="INFO">Executing : Table Must Exist  |  traces </msg>
<msg timestamp="20170913 19:22:17.096" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='traces' </msg>
<status status="PASS" endtime="20170913 19:22:17.098" starttime="20170913 19:22:17.095"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces_history</arg>
</arguments>
<msg timestamp="20170913 19:22:17.099" level="INFO">Executing : Table Must Exist  |  traces_history </msg>
<msg timestamp="20170913 19:22:17.100" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='traces_history' </msg>
<status status="PASS" endtime="20170913 19:22:17.101" starttime="20170913 19:22:17.099"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>userRights</arg>
</arguments>
<msg timestamp="20170913 19:22:17.102" level="INFO">Executing : Table Must Exist  |  userRights </msg>
<msg timestamp="20170913 19:22:17.102" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='userRights' </msg>
<status status="PASS" endtime="20170913 19:22:17.103" starttime="20170913 19:22:17.101"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups</arg>
</arguments>
<msg timestamp="20170913 19:22:17.104" level="INFO">Executing : Table Must Exist  |  usergroups </msg>
<msg timestamp="20170913 19:22:17.104" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='usergroups' </msg>
<status status="PASS" endtime="20170913 19:22:17.105" starttime="20170913 19:22:17.104"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups_history</arg>
</arguments>
<msg timestamp="20170913 19:22:17.106" level="INFO">Executing : Table Must Exist  |  usergroups_history </msg>
<msg timestamp="20170913 19:22:17.106" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='usergroups_history' </msg>
<status status="PASS" endtime="20170913 19:22:17.107" starttime="20170913 19:22:17.105"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users</arg>
</arguments>
<msg timestamp="20170913 19:22:17.107" level="INFO">Executing : Table Must Exist  |  users </msg>
<msg timestamp="20170913 19:22:17.107" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='users' </msg>
<status status="PASS" endtime="20170913 19:22:17.108" starttime="20170913 19:22:17.107"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users_history</arg>
</arguments>
<msg timestamp="20170913 19:22:17.109" level="INFO">Executing : Table Must Exist  |  users_history </msg>
<msg timestamp="20170913 19:22:17.109" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='users_history' </msg>
<status status="PASS" endtime="20170913 19:22:17.110" starttime="20170913 19:22:17.109"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>version</arg>
</arguments>
<msg timestamp="20170913 19:22:17.110" level="INFO">Executing : Table Must Exist  |  version </msg>
<msg timestamp="20170913 19:22:17.110" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='version' </msg>
<status status="PASS" endtime="20170913 19:22:17.111" starttime="20170913 19:22:17.110"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>versions</arg>
</arguments>
<msg timestamp="20170913 19:22:17.112" level="INFO">Executing : Table Must Exist  |  versions </msg>
<msg timestamp="20170913 19:22:17.112" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='versions' </msg>
<status status="PASS" endtime="20170913 19:22:17.113" starttime="20170913 19:22:17.111"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps</arg>
</arguments>
<msg timestamp="20170913 19:22:17.114" level="INFO">Executing : Table Must Exist  |  view_apps </msg>
<msg timestamp="20170913 19:22:17.114" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps' </msg>
<status status="PASS" endtime="20170913 19:22:17.115" starttime="20170913 19:22:17.113"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps_for_offering</arg>
</arguments>
<msg timestamp="20170913 19:22:17.116" level="INFO">Executing : Table Must Exist  |  view_apps_for_offering </msg>
<msg timestamp="20170913 19:22:17.116" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps_for_offering' </msg>
<status status="PASS" endtime="20170913 19:22:17.117" starttime="20170913 19:22:17.115"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps_for_offering_with_file_sizes</arg>
</arguments>
<msg timestamp="20170913 19:22:17.117" level="INFO">Executing : Table Must Exist  |  view_apps_for_offering_with_file_sizes </msg>
<msg timestamp="20170913 19:22:17.117" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps_for_offering_with_file_sizes' </msg>
<status status="PASS" endtime="20170913 19:22:17.118" starttime="20170913 19:22:17.117"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_datas</arg>
</arguments>
<msg timestamp="20170913 19:22:17.119" level="INFO">Executing : Table Must Exist  |  view_datas </msg>
<msg timestamp="20170913 19:22:17.119" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_datas' </msg>
<status status="PASS" endtime="20170913 19:22:17.120" starttime="20170913 19:22:17.118"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_executables</arg>
</arguments>
<msg timestamp="20170913 19:22:17.120" level="INFO">Executing : Table Must Exist  |  view_executables </msg>
<msg timestamp="20170913 19:22:17.120" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_executables' </msg>
<status status="PASS" endtime="20170913 19:22:17.121" starttime="20170913 19:22:17.120"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_groups</arg>
</arguments>
<msg timestamp="20170913 19:22:17.122" level="INFO">Executing : Table Must Exist  |  view_groups </msg>
<msg timestamp="20170913 19:22:17.122" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_groups' </msg>
<status status="PASS" endtime="20170913 19:22:17.123" starttime="20170913 19:22:17.122"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts</arg>
</arguments>
<msg timestamp="20170913 19:22:17.123" level="INFO">Executing : Table Must Exist  |  view_hosts </msg>
<msg timestamp="20170913 19:22:17.123" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts' </msg>
<status status="PASS" endtime="20170913 19:22:17.124" starttime="20170913 19:22:17.123"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_deployable</arg>
</arguments>
<msg timestamp="20170913 19:22:17.125" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_deployable </msg>
<msg timestamp="20170913 19:22:17.125" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_deployable' </msg>
<status status="PASS" endtime="20170913 19:22:17.126" starttime="20170913 19:22:17.125"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_deployable_and_shared</arg>
</arguments>
<msg timestamp="20170913 19:22:17.126" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_deployable_and_shared </msg>
<msg timestamp="20170913 19:22:17.126" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_deployable_and_shared' </msg>
<status status="PASS" endtime="20170913 19:22:17.127" starttime="20170913 19:22:17.126"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_shared</arg>
</arguments>
<msg timestamp="20170913 19:22:17.128" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_shared </msg>
<msg timestamp="20170913 19:22:17.128" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_shared' </msg>
<status status="PASS" endtime="20170913 19:22:17.129" starttime="20170913 19:22:17.128"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_sessions</arg>
</arguments>
<msg timestamp="20170913 19:22:17.129" level="INFO">Executing : Table Must Exist  |  view_sessions </msg>
<msg timestamp="20170913 19:22:17.129" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_sessions' </msg>
<status status="PASS" endtime="20170913 19:22:17.130" starttime="20170913 19:22:17.129"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_tasks</arg>
</arguments>
<msg timestamp="20170913 19:22:17.130" level="INFO">Executing : Table Must Exist  |  view_tasks </msg>
<msg timestamp="20170913 19:22:17.130" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_tasks' </msg>
<status status="PASS" endtime="20170913 19:22:17.131" starttime="20170913 19:22:17.130"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_traces</arg>
</arguments>
<msg timestamp="20170913 19:22:17.131" level="INFO">Executing : Table Must Exist  |  view_traces </msg>
<msg timestamp="20170913 19:22:17.131" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_traces' </msg>
<status status="PASS" endtime="20170913 19:22:17.132" starttime="20170913 19:22:17.131"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_usergroups</arg>
</arguments>
<msg timestamp="20170913 19:22:17.132" level="INFO">Executing : Table Must Exist  |  view_usergroups </msg>
<msg timestamp="20170913 19:22:17.132" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_usergroups' </msg>
<status status="PASS" endtime="20170913 19:22:17.133" starttime="20170913 19:22:17.132"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users</arg>
</arguments>
<msg timestamp="20170913 19:22:17.133" level="INFO">Executing : Table Must Exist  |  view_users </msg>
<msg timestamp="20170913 19:22:17.133" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users' </msg>
<status status="PASS" endtime="20170913 19:22:17.135" starttime="20170913 19:22:17.133"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_apps</arg>
</arguments>
<msg timestamp="20170913 19:22:17.135" level="INFO">Executing : Table Must Exist  |  view_users_apps </msg>
<msg timestamp="20170913 19:22:17.135" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_apps' </msg>
<status status="PASS" endtime="20170913 19:22:17.136" starttime="20170913 19:22:17.135"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_datas</arg>
</arguments>
<msg timestamp="20170913 19:22:17.136" level="INFO">Executing : Table Must Exist  |  view_users_datas </msg>
<msg timestamp="20170913 19:22:17.136" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_datas' </msg>
<status status="PASS" endtime="20170913 19:22:17.137" starttime="20170913 19:22:17.136"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_groups</arg>
</arguments>
<msg timestamp="20170913 19:22:17.137" level="INFO">Executing : Table Must Exist  |  view_users_groups </msg>
<msg timestamp="20170913 19:22:17.137" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_groups' </msg>
<status status="PASS" endtime="20170913 19:22:17.138" starttime="20170913 19:22:17.137"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_hosts</arg>
</arguments>
<msg timestamp="20170913 19:22:17.139" level="INFO">Executing : Table Must Exist  |  view_users_hosts </msg>
<msg timestamp="20170913 19:22:17.139" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_hosts' </msg>
<status status="PASS" endtime="20170913 19:22:17.139" starttime="20170913 19:22:17.138"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_sessions</arg>
</arguments>
<msg timestamp="20170913 19:22:17.140" level="INFO">Executing : Table Must Exist  |  view_users_sessions </msg>
<msg timestamp="20170913 19:22:17.140" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_sessions' </msg>
<status status="PASS" endtime="20170913 19:22:17.140" starttime="20170913 19:22:17.140"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_tasks</arg>
</arguments>
<msg timestamp="20170913 19:22:17.141" level="INFO">Executing : Table Must Exist  |  view_users_tasks </msg>
<msg timestamp="20170913 19:22:17.141" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_tasks' </msg>
<status status="PASS" endtime="20170913 19:22:17.142" starttime="20170913 19:22:17.141"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_traces</arg>
</arguments>
<msg timestamp="20170913 19:22:17.142" level="INFO">Executing : Table Must Exist  |  view_users_traces </msg>
<msg timestamp="20170913 19:22:17.142" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_traces' </msg>
<status status="PASS" endtime="20170913 19:22:17.144" starttime="20170913 19:22:17.142"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_usergroups</arg>
</arguments>
<msg timestamp="20170913 19:22:17.145" level="INFO">Executing : Table Must Exist  |  view_users_usergroups </msg>
<msg timestamp="20170913 19:22:17.145" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_usergroups' </msg>
<status status="PASS" endtime="20170913 19:22:17.145" starttime="20170913 19:22:17.144"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_users</arg>
</arguments>
<msg timestamp="20170913 19:22:17.146" level="INFO">Executing : Table Must Exist  |  view_users_users </msg>
<msg timestamp="20170913 19:22:17.146" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_users' </msg>
<status status="PASS" endtime="20170913 19:22:17.147" starttime="20170913 19:22:17.146"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_works</arg>
</arguments>
<msg timestamp="20170913 19:22:17.147" level="INFO">Executing : Table Must Exist  |  view_users_works </msg>
<msg timestamp="20170913 19:22:17.147" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_works' </msg>
<status status="PASS" endtime="20170913 19:22:17.148" starttime="20170913 19:22:17.147"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works</arg>
</arguments>
<msg timestamp="20170913 19:22:17.148" level="INFO">Executing : Table Must Exist  |  view_works </msg>
<msg timestamp="20170913 19:22:17.148" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works' </msg>
<status status="PASS" endtime="20170913 19:22:17.149" starttime="20170913 19:22:17.148"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works_for_billing</arg>
</arguments>
<msg timestamp="20170913 19:22:17.150" level="INFO">Executing : Table Must Exist  |  view_works_for_billing </msg>
<msg timestamp="20170913 19:22:17.150" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works_for_billing' </msg>
<status status="PASS" endtime="20170913 19:22:17.150" starttime="20170913 19:22:17.150"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works_for_billing_with_file_sizes</arg>
</arguments>
<msg timestamp="20170913 19:22:17.151" level="INFO">Executing : Table Must Exist  |  view_works_for_billing_with_file_sizes </msg>
<msg timestamp="20170913 19:22:17.151" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works_for_billing_with_file_sizes' </msg>
<status status="PASS" endtime="20170913 19:22:17.152" starttime="20170913 19:22:17.151"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works</arg>
</arguments>
<msg timestamp="20170913 19:22:17.152" level="INFO">Executing : Table Must Exist  |  works </msg>
<msg timestamp="20170913 19:22:17.152" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='works' </msg>
<status status="PASS" endtime="20170913 19:22:17.153" starttime="20170913 19:22:17.152"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works_history</arg>
</arguments>
<msg timestamp="20170913 19:22:17.153" level="INFO">Executing : Table Must Exist  |  works_history </msg>
<msg timestamp="20170913 19:22:17.153" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='works_history' </msg>
<status status="PASS" endtime="20170913 19:22:17.154" starttime="20170913 19:22:17.153"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170913 19:22:17.154" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170913 19:22:17.154" starttime="20170913 19:22:17.154"></status>
</kw>
<status status="PASS" endtime="20170913 19:22:17.154" starttime="20170913 19:22:17.154"></status>
</kw>
<status status="PASS" endtime="20170913 19:22:17.155" starttime="20170913 19:22:17.053"></status>
</kw>
<status status="PASS" endtime="20170913 19:22:17.155" starttime="20170913 19:22:17.053"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>TODO ping XWtremWeb server up</arg>
</arguments>
<msg timestamp="20170913 19:22:17.155" level="INFO">TODO ping XWtremWeb server up</msg>
<status status="PASS" endtime="20170913 19:22:17.155" starttime="20170913 19:22:17.155"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>TODO ping XWtremWeb worker up before one test</arg>
</arguments>
<msg timestamp="20170913 19:22:17.155" level="INFO">TODO ping XWtremWeb worker up before one test</msg>
<status status="PASS" endtime="20170913 19:22:17.155" starttime="20170913 19:22:17.155"></status>
</kw>
<kw name="Delete Fonctionnal Xtremweb Tables" library="MySql">
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170913 19:22:17.156" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170913 19:22:17.157" starttime="20170913 19:22:17.156"></status>
</kw>
<status status="PASS" endtime="20170913 19:22:17.157" starttime="20170913 19:22:17.156"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps</arg>
</arguments>
<msg timestamp="20170913 19:22:17.157" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM apps; </msg>
<status status="PASS" endtime="20170913 19:22:17.160" starttime="20170913 19:22:17.157"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps_history</arg>
</arguments>
<msg timestamp="20170913 19:22:17.160" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM apps_history; </msg>
<status status="PASS" endtime="20170913 19:22:17.161" starttime="20170913 19:22:17.160"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas</arg>
</arguments>
<msg timestamp="20170913 19:22:17.161" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM datas; </msg>
<status status="PASS" endtime="20170913 19:22:17.161" starttime="20170913 19:22:17.161"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas_history</arg>
</arguments>
<msg timestamp="20170913 19:22:17.162" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM datas_history; </msg>
<status status="PASS" endtime="20170913 19:22:17.162" starttime="20170913 19:22:17.162"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables</arg>
</arguments>
<msg timestamp="20170913 19:22:17.162" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM executables; </msg>
<status status="PASS" endtime="20170913 19:22:17.162" starttime="20170913 19:22:17.162"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables_history</arg>
</arguments>
<msg timestamp="20170913 19:22:17.163" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM executables_history; </msg>
<status status="PASS" endtime="20170913 19:22:17.164" starttime="20170913 19:22:17.162"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups</arg>
</arguments>
<msg timestamp="20170913 19:22:17.164" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM groups; </msg>
<status status="PASS" endtime="20170913 19:22:17.165" starttime="20170913 19:22:17.164"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups_history</arg>
</arguments>
<msg timestamp="20170913 19:22:17.165" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM groups_history; </msg>
<status status="PASS" endtime="20170913 19:22:17.166" starttime="20170913 19:22:17.165"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts</arg>
</arguments>
<msg timestamp="20170913 19:22:17.166" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM hosts; </msg>
<status status="PASS" endtime="20170913 19:22:17.166" starttime="20170913 19:22:17.166"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts_history</arg>
</arguments>
<msg timestamp="20170913 19:22:17.167" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM hosts_history; </msg>
<status status="PASS" endtime="20170913 19:22:17.167" starttime="20170913 19:22:17.166"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships</arg>
</arguments>
<msg timestamp="20170913 19:22:17.167" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM memberships; </msg>
<status status="PASS" endtime="20170913 19:22:17.168" starttime="20170913 19:22:17.167"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships_history</arg>
</arguments>
<msg timestamp="20170913 19:22:17.168" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM memberships_history; </msg>
<status status="PASS" endtime="20170913 19:22:17.168" starttime="20170913 19:22:17.168"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions</arg>
</arguments>
<msg timestamp="20170913 19:22:17.168" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sessions; </msg>
<status status="PASS" endtime="20170913 19:22:17.169" starttime="20170913 19:22:17.168"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions_history</arg>
</arguments>
<msg timestamp="20170913 19:22:17.169" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sessions_history; </msg>
<status status="PASS" endtime="20170913 19:22:17.169" starttime="20170913 19:22:17.169"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes</arg>
</arguments>
<msg timestamp="20170913 19:22:17.170" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedAppTypes; </msg>
<status status="PASS" endtime="20170913 19:22:17.170" starttime="20170913 19:22:17.170"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes_history</arg>
</arguments>
<msg timestamp="20170913 19:22:17.170" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedAppTypes_history; </msg>
<status status="PASS" endtime="20170913 19:22:17.171" starttime="20170913 19:22:17.170"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes</arg>
</arguments>
<msg timestamp="20170913 19:22:17.171" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedPackageTypes; </msg>
<status status="PASS" endtime="20170913 19:22:17.171" starttime="20170913 19:22:17.171"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes_history</arg>
</arguments>
<msg timestamp="20170913 19:22:17.172" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedPackageTypes_history; </msg>
<status status="PASS" endtime="20170913 19:22:17.172" starttime="20170913 19:22:17.171"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks</arg>
</arguments>
<msg timestamp="20170913 19:22:17.172" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM tasks; </msg>
<status status="PASS" endtime="20170913 19:22:17.173" starttime="20170913 19:22:17.172"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks_history</arg>
</arguments>
<msg timestamp="20170913 19:22:17.173" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM tasks_history; </msg>
<status status="PASS" endtime="20170913 19:22:17.173" starttime="20170913 19:22:17.173"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces</arg>
</arguments>
<msg timestamp="20170913 19:22:17.173" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM traces; </msg>
<status status="PASS" endtime="20170913 19:22:17.174" starttime="20170913 19:22:17.173"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces_history</arg>
</arguments>
<msg timestamp="20170913 19:22:17.174" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM traces_history; </msg>
<status status="PASS" endtime="20170913 19:22:17.174" starttime="20170913 19:22:17.174"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups</arg>
</arguments>
<msg timestamp="20170913 19:22:17.175" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM usergroups; </msg>
<status status="PASS" endtime="20170913 19:22:17.175" starttime="20170913 19:22:17.175"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups_history</arg>
</arguments>
<msg timestamp="20170913 19:22:17.175" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM usergroups_history; </msg>
<status status="PASS" endtime="20170913 19:22:17.176" starttime="20170913 19:22:17.175"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users_history</arg>
</arguments>
<msg timestamp="20170913 19:22:17.176" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM users_history; </msg>
<status status="PASS" endtime="20170913 19:22:17.176" starttime="20170913 19:22:17.176"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works</arg>
</arguments>
<msg timestamp="20170913 19:22:17.176" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM works; </msg>
<status status="PASS" endtime="20170913 19:22:17.177" starttime="20170913 19:22:17.176"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works_history</arg>
</arguments>
<msg timestamp="20170913 19:22:17.177" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM works_history; </msg>
<status status="PASS" endtime="20170913 19:22:17.177" starttime="20170913 19:22:17.177"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170913 19:22:17.178" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170913 19:22:17.178" starttime="20170913 19:22:17.178"></status>
</kw>
<status status="PASS" endtime="20170913 19:22:17.178" starttime="20170913 19:22:17.177"></status>
</kw>
<status status="PASS" endtime="20170913 19:22:17.178" starttime="20170913 19:22:17.155"></status>
</kw>
<kw name="Stop XWtremWeb Server And XWtremWeb Worker" library="XWCommon">
<kw name="Stop XtremWeb Server" library="XWServer">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${SERVER_PROCESS}</arg>
</arguments>
<msg timestamp="20170913 19:22:17.179" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20170913 19:22:17.286" level="INFO">Process completed.</msg>
<status status="PASS" endtime="20170913 19:22:17.286" starttime="20170913 19:22:17.179"></status>
</kw>
<status status="PASS" endtime="20170913 19:22:17.286" starttime="20170913 19:22:17.178"></status>
</kw>
<kw name="Log XtremWeb Server" library="XWCommon">
<kw name="Log XtremWeb Process Log File" library="XWServer">
<kw name="Log File" library="OperatingSystem">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<msg timestamp="20170913 19:22:17.287" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170913 19:22:17.287" level="INFO">Wed Sep 13 19:22:12 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : checking launch url
Wed Sep 13 19:22:12 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] WARNING : no launcher URL defined
Wed Sep 13 19:22:12 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : launching SmartSockets hub
[13/Sep/2017:19:22:14 +0000] [main_1] ERROR : setRole : role redefined ?! (was SERVER)
[13/Sep/2017:19:22:14 +0000] [xtremweb.database.DBConnPoolThread_main_1] INFO : Connection to database jdbc:mysql://localhost/xtremweb is ok, 70 created
[13/Sep/2017:19:22:14 +0000] [xtremweb.dispatcher.DBInterface_main_1] WARN : Can't retrieve any app
[13/Sep/2017:19:22:14 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't create ProxyValidator
[13/Sep/2017:19:22:14 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.io.FileNotFoundException: /tmp/castore (No such file or directory) (/tmp/castore (No such file or directory))
[13/Sep/2017:19:22:14 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't add CA certificates to keystore
[13/Sep/2017:19:22:14 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.lang.NullPointerException (null)
[13/Sep/2017:19:22:14 +0000] [xtremweb.dispatcher.HashTaskSet_TaskSet_14] INFO : TaskSet started (300000)
[13/Sep/2017:19:22:15 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : still waiting task set...
[13/Sep/2017:19:22:16 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : UDP server not started
[13/Sep/2017:19:22:16 +0000] [xtremweb.communications.TCPServer_TCPServerNIO_15] INFO : started, listening on port : 4321
log4j:WARN No appenders could be found for logger (org.eclipse.jetty.util.log).
log4j:WARN Please initialize the log4j system properly.
log4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.
[13/Sep/2017:19:22:16 +0000] [xtremweb.communications.HTTPServer_main_1] INFO : started, listening on port : 9443
[13/Sep/2017:19:22:16 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : FACEBOOK : java.net.MalformedURLException: no protocol: 
[13/Sep/2017:19:22:16 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : GOOGLE : java.net.MalformedURLException: no protocol: 
[13/Sep/2017:19:22:16 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : TWITTER : java.net.MalformedURLException: no protocol: 
[13/Sep/2017:19:22:16 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : YAHOO : java.net.MalformedURLException: no protocol: 
[13/Sep/2017:19:22:16 +0000] [main_1] ERROR : Can't add new entry to keystore
[13/Sep/2017:19:22:16 +0000] [main_1] WARN : javax.net.ssl.SSLHandshakeException: sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target (sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target)
[13/Sep/2017:19:22:16 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : XWHEP Dispatcher(10.6.0-head) started [Wed Sep 13 19:22:16 UTC 2017]
[13/Sep/2017:19:22:16 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : DB vendor  = mysql
[13/Sep/2017:19:22:16 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : mileStone  = 
[13/Sep/2017:19:22:16 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Time out   = 15000
[13/Sep/2017:19:22:16 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Disk opt'd = true
[13/Sep/2017:19:22:16 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Net  opt'd = true
[13/Sep/2017:19:22:16 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : NIO        = true
XWHEP Dispatcher started  Wed Sep 13 19:22:16 UTC 2017
Name             : vagrant-ubuntu-trusty-64
Version          : 10.6.0-head
Identity         : 
XWRole           : SERVER
Started on       : Wed Sep 13 19:22:14 UTC 2017
Scheduler        : xtremweb.dispatcher.MatchingScheduler
SmartSockets hub : 172.28.128.3/172.17.0.1/10.0.2.15-4329#0a.cc.ad.e6.cc.7c.00.00.25.09.02.42.7b.de.a1.dc~vagrant
Server HTTP      : true
Alive            : 300
Alive time out   : 900
Polling time out : 15000
Optimize zip     : true
Optimize network : true
NIO              : true
Comm layer       : xtremweb.communications.TCPClient
Socket time out  : 60000
Socket retries   : 50
Max connections  : 200
TCP port         : 4321
UDP port         : 4323
HTPP  port       : 80
HTPPS port       : 9443
Sun RPC interposition port : 4328
Sandbox path : /usr/bin/lxc
Sandbox launch args : 
Host &lt;host&gt;&lt;uid&gt;0f92394f-730d-41a1-bbb8-f3d04eb69080&lt;/uid&gt;&lt;accessrights&gt;0x755&lt;/accessrights&gt;&lt;name&gt;vagrant-ubuntu-trusty-64&lt;/name&gt;&lt;cpuload&gt;50&lt;/cpuload&gt;&lt;natedipaddr&gt;10.0.2.15&lt;/natedipaddr&gt;&lt;ipaddr&gt;10.0.2.15&lt;/ipaddr&gt;&lt;hwaddr&gt;&lt;/hwaddr&gt;&lt;timezone&gt;Etc/UTC&lt;/timezone&gt;&lt;os&gt;LINUX&lt;/os&gt;&lt;osversion&gt;3.13.0-129-generic&lt;/osversion&gt;&lt;javaversion&gt;1.8.0_141&lt;/javaversion&gt;&lt;javadatamodel&gt;64&lt;/javadatamodel&gt;&lt;cputype&gt;AMD64&lt;/cputype&gt;&lt;cpunb&gt;1&lt;/cpunb&gt;&lt;cpumodel&gt;unknown&lt;/cpumodel&gt;&lt;cpuspeed&gt;0&lt;/cpuspeed&gt;&lt;totalmem&gt;0&lt;/totalmem&gt;&lt;totalswap&gt;0&lt;/totalswap&gt;&lt;totaltmp&gt;40284&lt;/totaltmp&gt;&lt;freetmp&gt;37264&lt;/freetmp&gt;&lt;project&gt;&lt;/project&gt;&lt;active&gt;true&lt;/active&gt;&lt;incomingconnections&gt;false&lt;/incomingconnections&gt;&lt;available&gt;false&lt;/available&gt;&lt;pilotjob&gt;false&lt;/pilotjob&gt;&lt;sgid&gt;&lt;/sgid&gt;&lt;timeout&gt;15000&lt;/timeout&gt;&lt;traces&gt;false&lt;/traces&gt;&lt;acceptbin&gt;false&lt;/acceptbin&gt;&lt;version&gt;10.6.0-head&lt;/version&gt;&lt;/host&gt;
[13/Sep/2017:19:22:16 +0000] [xtremweb.communications.HTTPServer_HTTPServer_218] INFO : started, listening on port : 9443
[13/Sep/2017:19:22:17 +0000] [xtremweb.communications.TCPServer_TCPServerNIO_15] WARN : java.net.SocketException: Socket closed (Socket closed)
</msg>
<status status="PASS" endtime="20170913 19:22:17.288" starttime="20170913 19:22:17.287"></status>
</kw>
<status status="PASS" endtime="20170913 19:22:17.288" starttime="20170913 19:22:17.286"></status>
</kw>
<status status="PASS" endtime="20170913 19:22:17.288" starttime="20170913 19:22:17.286"></status>
</kw>
<kw name="Stop XtremWeb Worker" library="XWWorker">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Stop XtremWeb Worker</arg>
</arguments>
<msg timestamp="20170913 19:22:17.288" level="INFO">Stop XtremWeb Worker</msg>
<status status="PASS" endtime="20170913 19:22:17.288" starttime="20170913 19:22:17.288"></status>
</kw>
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${WORKER_PROCESS}</arg>
</arguments>
<msg timestamp="20170913 19:22:17.289" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20170913 19:22:17.390" level="INFO">Process completed.</msg>
<status status="PASS" endtime="20170913 19:22:17.390" starttime="20170913 19:22:17.288"></status>
</kw>
<status status="PASS" endtime="20170913 19:22:17.391" starttime="20170913 19:22:17.288"></status>
</kw>
<status status="PASS" endtime="20170913 19:22:17.391" starttime="20170913 19:22:17.178"></status>
</kw>
<kw name="Start XWtremWeb Server And XWtremWeb Worker" library="XWCommon">
<kw name="Ping XWtremWeb Database" library="XWServer">
<kw name="Xtremweb Tables Must Exist" library="MySql">
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170913 19:22:17.393" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170913 19:22:17.394" starttime="20170913 19:22:17.392"></status>
</kw>
<status status="PASS" endtime="20170913 19:22:17.394" starttime="20170913 19:22:17.392"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>appTypes</arg>
</arguments>
<msg timestamp="20170913 19:22:17.394" level="INFO">Executing : Table Must Exist  |  appTypes </msg>
<msg timestamp="20170913 19:22:17.394" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='appTypes' </msg>
<status status="PASS" endtime="20170913 19:22:17.395" starttime="20170913 19:22:17.394"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps</arg>
</arguments>
<msg timestamp="20170913 19:22:17.396" level="INFO">Executing : Table Must Exist  |  apps </msg>
<msg timestamp="20170913 19:22:17.396" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='apps' </msg>
<status status="PASS" endtime="20170913 19:22:17.397" starttime="20170913 19:22:17.396"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps_history</arg>
</arguments>
<msg timestamp="20170913 19:22:17.397" level="INFO">Executing : Table Must Exist  |  apps_history </msg>
<msg timestamp="20170913 19:22:17.397" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='apps_history' </msg>
<status status="PASS" endtime="20170913 19:22:17.398" starttime="20170913 19:22:17.397"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>cpuTypes</arg>
</arguments>
<msg timestamp="20170913 19:22:17.398" level="INFO">Executing : Table Must Exist  |  cpuTypes </msg>
<msg timestamp="20170913 19:22:17.399" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='cpuTypes' </msg>
<status status="PASS" endtime="20170913 19:22:17.399" starttime="20170913 19:22:17.398"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>dataTypes</arg>
</arguments>
<msg timestamp="20170913 19:22:17.400" level="INFO">Executing : Table Must Exist  |  dataTypes </msg>
<msg timestamp="20170913 19:22:17.400" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='dataTypes' </msg>
<status status="PASS" endtime="20170913 19:22:17.401" starttime="20170913 19:22:17.400"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas</arg>
</arguments>
<msg timestamp="20170913 19:22:17.401" level="INFO">Executing : Table Must Exist  |  datas </msg>
<msg timestamp="20170913 19:22:17.401" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='datas' </msg>
<status status="PASS" endtime="20170913 19:22:17.401" starttime="20170913 19:22:17.401"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas_history</arg>
</arguments>
<msg timestamp="20170913 19:22:17.401" level="INFO">Executing : Table Must Exist  |  datas_history </msg>
<msg timestamp="20170913 19:22:17.402" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='datas_history' </msg>
<status status="PASS" endtime="20170913 19:22:17.403" starttime="20170913 19:22:17.401"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables</arg>
</arguments>
<msg timestamp="20170913 19:22:17.404" level="INFO">Executing : Table Must Exist  |  executables </msg>
<msg timestamp="20170913 19:22:17.404" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='executables' </msg>
<status status="PASS" endtime="20170913 19:22:17.404" starttime="20170913 19:22:17.403"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables_history</arg>
</arguments>
<msg timestamp="20170913 19:22:17.405" level="INFO">Executing : Table Must Exist  |  executables_history </msg>
<msg timestamp="20170913 19:22:17.406" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='executables_history' </msg>
<status status="PASS" endtime="20170913 19:22:17.406" starttime="20170913 19:22:17.404"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups</arg>
</arguments>
<msg timestamp="20170913 19:22:17.407" level="INFO">Executing : Table Must Exist  |  groups </msg>
<msg timestamp="20170913 19:22:17.407" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='groups' </msg>
<status status="PASS" endtime="20170913 19:22:17.408" starttime="20170913 19:22:17.407"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups_history</arg>
</arguments>
<msg timestamp="20170913 19:22:17.408" level="INFO">Executing : Table Must Exist  |  groups_history </msg>
<msg timestamp="20170913 19:22:17.408" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='groups_history' </msg>
<status status="PASS" endtime="20170913 19:22:17.409" starttime="20170913 19:22:17.408"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts</arg>
</arguments>
<msg timestamp="20170913 19:22:17.409" level="INFO">Executing : Table Must Exist  |  hosts </msg>
<msg timestamp="20170913 19:22:17.409" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='hosts' </msg>
<status status="PASS" endtime="20170913 19:22:17.410" starttime="20170913 19:22:17.409"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts_history</arg>
</arguments>
<msg timestamp="20170913 19:22:17.410" level="INFO">Executing : Table Must Exist  |  hosts_history </msg>
<msg timestamp="20170913 19:22:17.410" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='hosts_history' </msg>
<status status="PASS" endtime="20170913 19:22:17.411" starttime="20170913 19:22:17.410"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships</arg>
</arguments>
<msg timestamp="20170913 19:22:17.412" level="INFO">Executing : Table Must Exist  |  memberships </msg>
<msg timestamp="20170913 19:22:17.412" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='memberships' </msg>
<status status="PASS" endtime="20170913 19:22:17.412" starttime="20170913 19:22:17.411"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships_history</arg>
</arguments>
<msg timestamp="20170913 19:22:17.413" level="INFO">Executing : Table Must Exist  |  memberships_history </msg>
<msg timestamp="20170913 19:22:17.413" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='memberships_history' </msg>
<status status="PASS" endtime="20170913 19:22:17.414" starttime="20170913 19:22:17.412"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>oses</arg>
</arguments>
<msg timestamp="20170913 19:22:17.414" level="INFO">Executing : Table Must Exist  |  oses </msg>
<msg timestamp="20170913 19:22:17.414" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='oses' </msg>
<status status="PASS" endtime="20170913 19:22:17.414" starttime="20170913 19:22:17.414"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>packageTypes</arg>
</arguments>
<msg timestamp="20170913 19:22:17.415" level="INFO">Executing : Table Must Exist  |  packageTypes </msg>
<msg timestamp="20170913 19:22:17.415" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='packageTypes' </msg>
<status status="PASS" endtime="20170913 19:22:17.415" starttime="20170913 19:22:17.414"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions</arg>
</arguments>
<msg timestamp="20170913 19:22:17.416" level="INFO">Executing : Table Must Exist  |  sessions </msg>
<msg timestamp="20170913 19:22:17.416" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sessions' </msg>
<status status="PASS" endtime="20170913 19:22:17.417" starttime="20170913 19:22:17.416"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions_history</arg>
</arguments>
<msg timestamp="20170913 19:22:17.417" level="INFO">Executing : Table Must Exist  |  sessions_history </msg>
<msg timestamp="20170913 19:22:17.417" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sessions_history' </msg>
<status status="PASS" endtime="20170913 19:22:17.418" starttime="20170913 19:22:17.417"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes</arg>
</arguments>
<msg timestamp="20170913 19:22:17.418" level="INFO">Executing : Table Must Exist  |  sharedAppTypes </msg>
<msg timestamp="20170913 19:22:17.418" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedAppTypes' </msg>
<status status="PASS" endtime="20170913 19:22:17.419" starttime="20170913 19:22:17.418"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes_history</arg>
</arguments>
<msg timestamp="20170913 19:22:17.419" level="INFO">Executing : Table Must Exist  |  sharedAppTypes_history </msg>
<msg timestamp="20170913 19:22:17.419" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedAppTypes_history' </msg>
<status status="PASS" endtime="20170913 19:22:17.420" starttime="20170913 19:22:17.419"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes</arg>
</arguments>
<msg timestamp="20170913 19:22:17.420" level="INFO">Executing : Table Must Exist  |  sharedPackageTypes </msg>
<msg timestamp="20170913 19:22:17.420" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedPackageTypes' </msg>
<status status="PASS" endtime="20170913 19:22:17.421" starttime="20170913 19:22:17.420"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes_history</arg>
</arguments>
<msg timestamp="20170913 19:22:17.421" level="INFO">Executing : Table Must Exist  |  sharedPackageTypes_history </msg>
<msg timestamp="20170913 19:22:17.421" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedPackageTypes_history' </msg>
<status status="PASS" endtime="20170913 19:22:17.422" starttime="20170913 19:22:17.421"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>statuses</arg>
</arguments>
<msg timestamp="20170913 19:22:17.422" level="INFO">Executing : Table Must Exist  |  statuses </msg>
<msg timestamp="20170913 19:22:17.422" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='statuses' </msg>
<status status="PASS" endtime="20170913 19:22:17.423" starttime="20170913 19:22:17.422"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks</arg>
</arguments>
<msg timestamp="20170913 19:22:17.423" level="INFO">Executing : Table Must Exist  |  tasks </msg>
<msg timestamp="20170913 19:22:17.423" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='tasks' </msg>
<status status="PASS" endtime="20170913 19:22:17.424" starttime="20170913 19:22:17.423"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks_history</arg>
</arguments>
<msg timestamp="20170913 19:22:17.424" level="INFO">Executing : Table Must Exist  |  tasks_history </msg>
<msg timestamp="20170913 19:22:17.424" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='tasks_history' </msg>
<status status="PASS" endtime="20170913 19:22:17.425" starttime="20170913 19:22:17.424"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces</arg>
</arguments>
<msg timestamp="20170913 19:22:17.425" level="INFO">Executing : Table Must Exist  |  traces </msg>
<msg timestamp="20170913 19:22:17.425" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='traces' </msg>
<status status="PASS" endtime="20170913 19:22:17.426" starttime="20170913 19:22:17.425"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces_history</arg>
</arguments>
<msg timestamp="20170913 19:22:17.426" level="INFO">Executing : Table Must Exist  |  traces_history </msg>
<msg timestamp="20170913 19:22:17.426" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='traces_history' </msg>
<status status="PASS" endtime="20170913 19:22:17.427" starttime="20170913 19:22:17.426"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>userRights</arg>
</arguments>
<msg timestamp="20170913 19:22:17.427" level="INFO">Executing : Table Must Exist  |  userRights </msg>
<msg timestamp="20170913 19:22:17.427" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='userRights' </msg>
<status status="PASS" endtime="20170913 19:22:17.428" starttime="20170913 19:22:17.427"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups</arg>
</arguments>
<msg timestamp="20170913 19:22:17.428" level="INFO">Executing : Table Must Exist  |  usergroups </msg>
<msg timestamp="20170913 19:22:17.428" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='usergroups' </msg>
<status status="PASS" endtime="20170913 19:22:17.429" starttime="20170913 19:22:17.428"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups_history</arg>
</arguments>
<msg timestamp="20170913 19:22:17.429" level="INFO">Executing : Table Must Exist  |  usergroups_history </msg>
<msg timestamp="20170913 19:22:17.429" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='usergroups_history' </msg>
<status status="PASS" endtime="20170913 19:22:17.430" starttime="20170913 19:22:17.429"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users</arg>
</arguments>
<msg timestamp="20170913 19:22:17.430" level="INFO">Executing : Table Must Exist  |  users </msg>
<msg timestamp="20170913 19:22:17.430" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='users' </msg>
<status status="PASS" endtime="20170913 19:22:17.431" starttime="20170913 19:22:17.430"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users_history</arg>
</arguments>
<msg timestamp="20170913 19:22:17.431" level="INFO">Executing : Table Must Exist  |  users_history </msg>
<msg timestamp="20170913 19:22:17.431" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='users_history' </msg>
<status status="PASS" endtime="20170913 19:22:17.432" starttime="20170913 19:22:17.431"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>version</arg>
</arguments>
<msg timestamp="20170913 19:22:17.432" level="INFO">Executing : Table Must Exist  |  version </msg>
<msg timestamp="20170913 19:22:17.432" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='version' </msg>
<status status="PASS" endtime="20170913 19:22:17.433" starttime="20170913 19:22:17.432"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>versions</arg>
</arguments>
<msg timestamp="20170913 19:22:17.433" level="INFO">Executing : Table Must Exist  |  versions </msg>
<msg timestamp="20170913 19:22:17.433" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='versions' </msg>
<status status="PASS" endtime="20170913 19:22:17.434" starttime="20170913 19:22:17.433"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps</arg>
</arguments>
<msg timestamp="20170913 19:22:17.434" level="INFO">Executing : Table Must Exist  |  view_apps </msg>
<msg timestamp="20170913 19:22:17.434" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps' </msg>
<status status="PASS" endtime="20170913 19:22:17.435" starttime="20170913 19:22:17.434"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps_for_offering</arg>
</arguments>
<msg timestamp="20170913 19:22:17.435" level="INFO">Executing : Table Must Exist  |  view_apps_for_offering </msg>
<msg timestamp="20170913 19:22:17.435" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps_for_offering' </msg>
<status status="PASS" endtime="20170913 19:22:17.437" starttime="20170913 19:22:17.435"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps_for_offering_with_file_sizes</arg>
</arguments>
<msg timestamp="20170913 19:22:17.437" level="INFO">Executing : Table Must Exist  |  view_apps_for_offering_with_file_sizes </msg>
<msg timestamp="20170913 19:22:17.437" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps_for_offering_with_file_sizes' </msg>
<status status="PASS" endtime="20170913 19:22:17.438" starttime="20170913 19:22:17.437"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_datas</arg>
</arguments>
<msg timestamp="20170913 19:22:17.438" level="INFO">Executing : Table Must Exist  |  view_datas </msg>
<msg timestamp="20170913 19:22:17.438" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_datas' </msg>
<status status="PASS" endtime="20170913 19:22:17.439" starttime="20170913 19:22:17.438"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_executables</arg>
</arguments>
<msg timestamp="20170913 19:22:17.439" level="INFO">Executing : Table Must Exist  |  view_executables </msg>
<msg timestamp="20170913 19:22:17.439" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_executables' </msg>
<status status="PASS" endtime="20170913 19:22:17.440" starttime="20170913 19:22:17.439"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_groups</arg>
</arguments>
<msg timestamp="20170913 19:22:17.440" level="INFO">Executing : Table Must Exist  |  view_groups </msg>
<msg timestamp="20170913 19:22:17.440" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_groups' </msg>
<status status="PASS" endtime="20170913 19:22:17.441" starttime="20170913 19:22:17.440"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts</arg>
</arguments>
<msg timestamp="20170913 19:22:17.441" level="INFO">Executing : Table Must Exist  |  view_hosts </msg>
<msg timestamp="20170913 19:22:17.441" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts' </msg>
<status status="PASS" endtime="20170913 19:22:17.442" starttime="20170913 19:22:17.441"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_deployable</arg>
</arguments>
<msg timestamp="20170913 19:22:17.443" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_deployable </msg>
<msg timestamp="20170913 19:22:17.443" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_deployable' </msg>
<status status="PASS" endtime="20170913 19:22:17.444" starttime="20170913 19:22:17.443"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_deployable_and_shared</arg>
</arguments>
<msg timestamp="20170913 19:22:17.444" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_deployable_and_shared </msg>
<msg timestamp="20170913 19:22:17.444" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_deployable_and_shared' </msg>
<status status="PASS" endtime="20170913 19:22:17.445" starttime="20170913 19:22:17.444"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_shared</arg>
</arguments>
<msg timestamp="20170913 19:22:17.445" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_shared </msg>
<msg timestamp="20170913 19:22:17.445" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_shared' </msg>
<status status="PASS" endtime="20170913 19:22:17.446" starttime="20170913 19:22:17.445"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_sessions</arg>
</arguments>
<msg timestamp="20170913 19:22:17.446" level="INFO">Executing : Table Must Exist  |  view_sessions </msg>
<msg timestamp="20170913 19:22:17.446" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_sessions' </msg>
<status status="PASS" endtime="20170913 19:22:17.447" starttime="20170913 19:22:17.446"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_tasks</arg>
</arguments>
<msg timestamp="20170913 19:22:17.447" level="INFO">Executing : Table Must Exist  |  view_tasks </msg>
<msg timestamp="20170913 19:22:17.447" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_tasks' </msg>
<status status="PASS" endtime="20170913 19:22:17.448" starttime="20170913 19:22:17.447"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_traces</arg>
</arguments>
<msg timestamp="20170913 19:22:17.448" level="INFO">Executing : Table Must Exist  |  view_traces </msg>
<msg timestamp="20170913 19:22:17.448" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_traces' </msg>
<status status="PASS" endtime="20170913 19:22:17.449" starttime="20170913 19:22:17.448"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_usergroups</arg>
</arguments>
<msg timestamp="20170913 19:22:17.449" level="INFO">Executing : Table Must Exist  |  view_usergroups </msg>
<msg timestamp="20170913 19:22:17.449" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_usergroups' </msg>
<status status="PASS" endtime="20170913 19:22:17.450" starttime="20170913 19:22:17.449"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users</arg>
</arguments>
<msg timestamp="20170913 19:22:17.450" level="INFO">Executing : Table Must Exist  |  view_users </msg>
<msg timestamp="20170913 19:22:17.450" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users' </msg>
<status status="PASS" endtime="20170913 19:22:17.451" starttime="20170913 19:22:17.450"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_apps</arg>
</arguments>
<msg timestamp="20170913 19:22:17.451" level="INFO">Executing : Table Must Exist  |  view_users_apps </msg>
<msg timestamp="20170913 19:22:17.451" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_apps' </msg>
<status status="PASS" endtime="20170913 19:22:17.452" starttime="20170913 19:22:17.451"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_datas</arg>
</arguments>
<msg timestamp="20170913 19:22:17.453" level="INFO">Executing : Table Must Exist  |  view_users_datas </msg>
<msg timestamp="20170913 19:22:17.453" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_datas' </msg>
<status status="PASS" endtime="20170913 19:22:17.454" starttime="20170913 19:22:17.453"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_groups</arg>
</arguments>
<msg timestamp="20170913 19:22:17.454" level="INFO">Executing : Table Must Exist  |  view_users_groups </msg>
<msg timestamp="20170913 19:22:17.454" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_groups' </msg>
<status status="PASS" endtime="20170913 19:22:17.454" starttime="20170913 19:22:17.454"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_hosts</arg>
</arguments>
<msg timestamp="20170913 19:22:17.455" level="INFO">Executing : Table Must Exist  |  view_users_hosts </msg>
<msg timestamp="20170913 19:22:17.455" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_hosts' </msg>
<status status="PASS" endtime="20170913 19:22:17.455" starttime="20170913 19:22:17.454"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_sessions</arg>
</arguments>
<msg timestamp="20170913 19:22:17.456" level="INFO">Executing : Table Must Exist  |  view_users_sessions </msg>
<msg timestamp="20170913 19:22:17.456" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_sessions' </msg>
<status status="PASS" endtime="20170913 19:22:17.456" starttime="20170913 19:22:17.456"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_tasks</arg>
</arguments>
<msg timestamp="20170913 19:22:17.457" level="INFO">Executing : Table Must Exist  |  view_users_tasks </msg>
<msg timestamp="20170913 19:22:17.457" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_tasks' </msg>
<status status="PASS" endtime="20170913 19:22:17.458" starttime="20170913 19:22:17.457"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_traces</arg>
</arguments>
<msg timestamp="20170913 19:22:17.458" level="INFO">Executing : Table Must Exist  |  view_users_traces </msg>
<msg timestamp="20170913 19:22:17.458" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_traces' </msg>
<status status="PASS" endtime="20170913 19:22:17.459" starttime="20170913 19:22:17.458"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_usergroups</arg>
</arguments>
<msg timestamp="20170913 19:22:17.459" level="INFO">Executing : Table Must Exist  |  view_users_usergroups </msg>
<msg timestamp="20170913 19:22:17.459" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_usergroups' </msg>
<status status="PASS" endtime="20170913 19:22:17.460" starttime="20170913 19:22:17.459"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_users</arg>
</arguments>
<msg timestamp="20170913 19:22:17.460" level="INFO">Executing : Table Must Exist  |  view_users_users </msg>
<msg timestamp="20170913 19:22:17.460" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_users' </msg>
<status status="PASS" endtime="20170913 19:22:17.461" starttime="20170913 19:22:17.460"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_works</arg>
</arguments>
<msg timestamp="20170913 19:22:17.461" level="INFO">Executing : Table Must Exist  |  view_users_works </msg>
<msg timestamp="20170913 19:22:17.461" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_works' </msg>
<status status="PASS" endtime="20170913 19:22:17.462" starttime="20170913 19:22:17.461"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works</arg>
</arguments>
<msg timestamp="20170913 19:22:17.462" level="INFO">Executing : Table Must Exist  |  view_works </msg>
<msg timestamp="20170913 19:22:17.463" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works' </msg>
<status status="PASS" endtime="20170913 19:22:17.464" starttime="20170913 19:22:17.462"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works_for_billing</arg>
</arguments>
<msg timestamp="20170913 19:22:17.465" level="INFO">Executing : Table Must Exist  |  view_works_for_billing </msg>
<msg timestamp="20170913 19:22:17.465" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works_for_billing' </msg>
<status status="PASS" endtime="20170913 19:22:17.466" starttime="20170913 19:22:17.465"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works_for_billing_with_file_sizes</arg>
</arguments>
<msg timestamp="20170913 19:22:17.466" level="INFO">Executing : Table Must Exist  |  view_works_for_billing_with_file_sizes </msg>
<msg timestamp="20170913 19:22:17.467" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works_for_billing_with_file_sizes' </msg>
<status status="PASS" endtime="20170913 19:22:17.468" starttime="20170913 19:22:17.466"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works</arg>
</arguments>
<msg timestamp="20170913 19:22:17.468" level="INFO">Executing : Table Must Exist  |  works </msg>
<msg timestamp="20170913 19:22:17.468" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='works' </msg>
<status status="PASS" endtime="20170913 19:22:17.469" starttime="20170913 19:22:17.468"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works_history</arg>
</arguments>
<msg timestamp="20170913 19:22:17.469" level="INFO">Executing : Table Must Exist  |  works_history </msg>
<msg timestamp="20170913 19:22:17.469" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='works_history' </msg>
<status status="PASS" endtime="20170913 19:22:17.470" starttime="20170913 19:22:17.469"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170913 19:22:17.471" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170913 19:22:17.471" starttime="20170913 19:22:17.471"></status>
</kw>
<status status="PASS" endtime="20170913 19:22:17.471" starttime="20170913 19:22:17.471"></status>
</kw>
<status status="PASS" endtime="20170913 19:22:17.471" starttime="20170913 19:22:17.392"></status>
</kw>
<status status="PASS" endtime="20170913 19:22:17.471" starttime="20170913 19:22:17.391"></status>
</kw>
<kw name="Start XtremWeb Server" library="XWServer">
<arguments>
<arg>${DIST_XWHEP_PATH}</arg>
</arguments>
<kw name="File Should Exist" library="OperatingSystem">
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xtremweb.server.conf</arg>
</arguments>
<msg timestamp="20170913 19:22:17.473" html="yes" level="INFO">File '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf&lt;/a&gt;' exists.</msg>
<status status="PASS" endtime="20170913 19:22:17.473" starttime="20170913 19:22:17.472"></status>
</kw>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xtremweb.server.conf</arg>
</arguments>
<assign>
<var>${config_content}</var>
</assign>
<msg timestamp="20170913 19:22:17.473" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf&lt;/a&gt;'.</msg>
<msg timestamp="20170913 19:22:17.474" level="INFO">${config_content} = #
# Copyrights     : CNRS
# Author         : Oleg Lodygensky
# Acknowledgment : XtremWeb-HEP is based on XtremWeb 1.8.0 by inria : http://www.xtremweb.net/
# Web            : http://www.xtremweb-hep.o...</msg>
<status status="PASS" endtime="20170913 19:22:17.474" starttime="20170913 19:22:17.473"></status>
</kw>
<kw name="Remove String Using Regexp" library="String">
<doc>Removes ``patterns`` from the given ``string``.</doc>
<arguments>
<arg>${config_content}</arg>
<arg>LAUNCHERURL=${XWCONFIGURE.VALUES.XWUPGRADEURL}</arg>
</arguments>
<assign>
<var>${config_content_filtered}</var>
</assign>
<msg timestamp="20170913 19:22:17.474" level="INFO">${config_content_filtered} = #
# Copyrights     : CNRS
# Author         : Oleg Lodygensky
# Acknowledgment : XtremWeb-HEP is based on XtremWeb 1.8.0 by inria : http://www.xtremweb.net/
# Web            : http://www.xtremweb-hep.o...</msg>
<status status="PASS" endtime="20170913 19:22:17.474" starttime="20170913 19:22:17.474"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${config_content_filtered}</arg>
<arg>\## HTTPSPORT=443</arg>
<arg>HTTPSPORT=${XWCONFIGURE.VALUES.HTTPSPORT}</arg>
</arguments>
<assign>
<var>${config_content_filtered}</var>
</assign>
<msg timestamp="20170913 19:22:17.475" level="INFO">${config_content_filtered} = #
# Copyrights     : CNRS
# Author         : Oleg Lodygensky
# Acknowledgment : XtremWeb-HEP is based on XtremWeb 1.8.0 by inria : http://www.xtremweb.net/
# Web            : http://www.xtremweb-hep.o...</msg>
<status status="PASS" endtime="20170913 19:22:17.475" starttime="20170913 19:22:17.475"></status>
</kw>
<kw name="Create File" library="OperatingSystem">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xtremweb.server.conf</arg>
<arg>content=${config_content_filtered}</arg>
</arguments>
<msg timestamp="20170913 19:22:17.482" html="yes" level="INFO">Created file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170913 19:22:17.483" starttime="20170913 19:22:17.475"></status>
</kw>
<kw name="Remove File" library="OperatingSystem">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<msg timestamp="20170913 19:22:17.484" html="yes" level="INFO">Removed file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170913 19:22:17.484" starttime="20170913 19:22:17.483"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/bin/xtremweb.server console</arg>
<arg>shell=yes</arg>
<arg>stderr=STDOUT</arg>
<arg>stdout=${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<assign>
<var>${created_process}</var>
</assign>
<msg timestamp="20170913 19:22:17.485" level="INFO">Starting process:
/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/xtremweb.server console</msg>
<msg timestamp="20170913 19:22:17.488" level="INFO">${created_process} = 59</msg>
<status status="PASS" endtime="20170913 19:22:17.488" starttime="20170913 19:22:17.484"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SERVER_PROCESS}</arg>
<arg>${created_process}</arg>
</arguments>
<msg timestamp="20170913 19:22:17.490" level="INFO">${SERVER_PROCESS} = 59</msg>
<status status="PASS" endtime="20170913 19:22:17.490" starttime="20170913 19:22:17.489"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2 min</arg>
<arg>5 sec</arg>
<arg>Check XtremWeb Server Start From Log</arg>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<kw name="Check XtremWeb Server Start From Log" library="XWServer">
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<kw name="Log XtremWeb Process Log File" library="XWServer">
<kw name="Log File" library="OperatingSystem">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<msg timestamp="20170913 19:22:17.492" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170913 19:22:17.492" level="INFO"></msg>
<status status="PASS" endtime="20170913 19:22:17.493" starttime="20170913 19:22:17.491"></status>
</kw>
<status status="PASS" endtime="20170913 19:22:17.493" starttime="20170913 19:22:17.491"></status>
</kw>
<kw name="Grep File" library="OperatingSystem">
<doc>Returns the lines of the specified file that match the ``pattern``.</doc>
<arguments>
<arg>${log}</arg>
<arg>listening on port : ${XWCONFIGURE.VALUES.HTTPSPORT}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20170913 19:22:17.493" html="yes" level="INFO">Reading file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170913 19:22:17.494" level="INFO">0 out of 0 lines matched</msg>
<msg timestamp="20170913 19:22:17.494" level="INFO">${ret} = </msg>
<status status="PASS" endtime="20170913 19:22:17.494" starttime="20170913 19:22:17.493"></status>
</kw>
<kw name="Get Line Count" library="String">
<doc>Returns and logs the number of lines in the given string.</doc>
<arguments>
<arg>${ret}</arg>
</arguments>
<assign>
<var>${line_count}</var>
</assign>
<msg timestamp="20170913 19:22:17.494" level="INFO">0 lines</msg>
<msg timestamp="20170913 19:22:17.494" level="INFO">${line_count} = 0</msg>
<status status="PASS" endtime="20170913 19:22:17.494" starttime="20170913 19:22:17.494"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${line_count}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20170913 19:22:17.495" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20170913 19:22:17.495" level="FAIL">0 != 2</msg>
<status status="FAIL" endtime="20170913 19:22:17.495" starttime="20170913 19:22:17.494"></status>
</kw>
<status status="FAIL" endtime="20170913 19:22:17.495" starttime="20170913 19:22:17.490"></status>
</kw>
<kw name="Check XtremWeb Server Start From Log" library="XWServer">
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<kw name="Log XtremWeb Process Log File" library="XWServer">
<kw name="Log File" library="OperatingSystem">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<msg timestamp="20170913 19:22:22.499" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170913 19:22:22.506" level="INFO">Wed Sep 13 19:22:17 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : checking launch url
Wed Sep 13 19:22:17 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] WARNING : no launcher URL defined
Wed Sep 13 19:22:17 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : launching SmartSockets hub
[13/Sep/2017:19:22:19 +0000] [main_1] ERROR : setRole : role redefined ?! (was SERVER)
[13/Sep/2017:19:22:20 +0000] [xtremweb.database.DBConnPoolThread_main_1] INFO : Connection to database jdbc:mysql://localhost/xtremweb is ok, 70 created
[13/Sep/2017:19:22:20 +0000] [xtremweb.dispatcher.DBInterface_main_1] WARN : Can't retrieve any app
[13/Sep/2017:19:22:20 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't create ProxyValidator
[13/Sep/2017:19:22:20 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.io.FileNotFoundException: /tmp/castore (No such file or directory) (/tmp/castore (No such file or directory))
[13/Sep/2017:19:22:20 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't add CA certificates to keystore
[13/Sep/2017:19:22:20 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.lang.NullPointerException (null)
[13/Sep/2017:19:22:20 +0000] [xtremweb.dispatcher.HashTaskSet_TaskSet_14] INFO : TaskSet started (300000)
[13/Sep/2017:19:22:21 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : still waiting task set...
[13/Sep/2017:19:22:21 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : UDP server not started
[13/Sep/2017:19:22:21 +0000] [xtremweb.communications.TCPServer_TCPServerNIO_15] INFO : started, listening on port : 4321
log4j:WARN No appenders could be found for logger (org.eclipse.jetty.util.log).
log4j:WARN Please initialize the log4j system properly.
log4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.
[13/Sep/2017:19:22:21 +0000] [xtremweb.communications.HTTPServer_main_1] INFO : started, listening on port : 9443
[13/Sep/2017:19:22:21 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : FACEBOOK : java.net.MalformedURLException: no protocol: 
[13/Sep/2017:19:22:21 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : GOOGLE : java.net.MalformedURLException: no protocol: 
[13/Sep/2017:19:22:21 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : TWITTER : java.net.MalformedURLException: no protocol: 
[13/Sep/2017:19:22:21 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : YAHOO : java.net.MalformedURLException: no protocol: 
[13/Sep/2017:19:22:21 +0000] [main_1] ERROR : Can't add new entry to keystore
[13/Sep/2017:19:22:21 +0000] [main_1] WARN : javax.net.ssl.SSLHandshakeException: sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target (sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target)
[13/Sep/2017:19:22:21 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : XWHEP Dispatcher(10.6.0-head) started [Wed Sep 13 19:22:21 UTC 2017]
[13/Sep/2017:19:22:21 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : DB vendor  = mysql
[13/Sep/2017:19:22:21 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : mileStone  = 
[13/Sep/2017:19:22:21 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Time out   = 15000
[13/Sep/2017:19:22:21 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Disk opt'd = true
[13/Sep/2017:19:22:21 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Net  opt'd = true
[13/Sep/2017:19:22:21 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : NIO        = true
XWHEP Dispatcher started  Wed Sep 13 19:22:21 UTC 2017
Name             : vagrant-ubuntu-trusty-64
Version          : 10.6.0-head
Identity         : 
XWRole           : SERVER
Started on       : Wed Sep 13 19:22:19 UTC 2017
Scheduler        : xtremweb.dispatcher.MatchingScheduler
SmartSockets hub : 172.28.128.3/172.17.0.1/10.0.2.15-4329#8a.a2.ae.e6.cc.7c.00.00.bf.f5.02.42.7b.de.a1.dc~vagrant
Server HTTP      : true
Alive            : 300
Alive time out   : 900
Polling time out : 15000
Optimize zip     : true
Optimize network : true
NIO              : true
Comm layer       : xtremweb.communications.TCPClient
Socket time out  : 60000
Socket retries   : 50
Max connections  : 200
TCP port         : 4321
UDP port         : 4323
HTPP  port       : 80
HTPPS port       : 9443
Sun RPC interposition port : 4328
Sandbox path : /usr/bin/lxc
Sandbox launch args : 
Host &lt;host&gt;&lt;uid&gt;9dd2d3d3-9521-42a6-be26-ebdf2f524a0c&lt;/uid&gt;&lt;accessrights&gt;0x755&lt;/accessrights&gt;&lt;name&gt;vagrant-ubuntu-trusty-64&lt;/name&gt;&lt;cpuload&gt;50&lt;/cpuload&gt;&lt;natedipaddr&gt;10.0.2.15&lt;/natedipaddr&gt;&lt;ipaddr&gt;10.0.2.15&lt;/ipaddr&gt;&lt;hwaddr&gt;&lt;/hwaddr&gt;&lt;timezone&gt;Etc/UTC&lt;/timezone&gt;&lt;os&gt;LINUX&lt;/os&gt;&lt;osversion&gt;3.13.0-129-generic&lt;/osversion&gt;&lt;javaversion&gt;1.8.0_141&lt;/javaversion&gt;&lt;javadatamodel&gt;64&lt;/javadatamodel&gt;&lt;cputype&gt;AMD64&lt;/cputype&gt;&lt;cpunb&gt;1&lt;/cpunb&gt;&lt;cpumodel&gt;unknown&lt;/cpumodel&gt;&lt;cpuspeed&gt;0&lt;/cpuspeed&gt;&lt;totalmem&gt;0&lt;/totalmem&gt;&lt;totalswap&gt;0&lt;/totalswap&gt;&lt;totaltmp&gt;40284&lt;/totaltmp&gt;&lt;freetmp&gt;37264&lt;/freetmp&gt;&lt;project&gt;&lt;/project&gt;&lt;active&gt;true&lt;/active&gt;&lt;incomingconnections&gt;false&lt;/incomingconnections&gt;&lt;available&gt;false&lt;/available&gt;&lt;pilotjob&gt;false&lt;/pilotjob&gt;&lt;sgid&gt;&lt;/sgid&gt;&lt;timeout&gt;15000&lt;/timeout&gt;&lt;traces&gt;false&lt;/traces&gt;&lt;acceptbin&gt;false&lt;/acceptbin&gt;&lt;version&gt;10.6.0-head&lt;/version&gt;&lt;/host&gt;
[13/Sep/2017:19:22:21 +0000] [xtremweb.communications.HTTPServer_HTTPServer_218] INFO : started, listening on port : 9443
</msg>
<status status="PASS" endtime="20170913 19:22:22.507" starttime="20170913 19:22:22.499"></status>
</kw>
<status status="PASS" endtime="20170913 19:22:22.507" starttime="20170913 19:22:22.499"></status>
</kw>
<kw name="Grep File" library="OperatingSystem">
<doc>Returns the lines of the specified file that match the ``pattern``.</doc>
<arguments>
<arg>${log}</arg>
<arg>listening on port : ${XWCONFIGURE.VALUES.HTTPSPORT}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20170913 19:22:22.508" html="yes" level="INFO">Reading file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170913 19:22:22.508" level="INFO">2 out of 59 lines matched</msg>
<msg timestamp="20170913 19:22:22.509" level="INFO">${ret} = [13/Sep/2017:19:22:21 +0000] [xtremweb.communications.HTTPServer_main_1] INFO : started, listening on port : 9443
[13/Sep/2017:19:22:21 +0000] [xtremweb.communications.HTTPServer_HTTPServer_218] INFO ...</msg>
<status status="PASS" endtime="20170913 19:22:22.509" starttime="20170913 19:22:22.507"></status>
</kw>
<kw name="Get Line Count" library="String">
<doc>Returns and logs the number of lines in the given string.</doc>
<arguments>
<arg>${ret}</arg>
</arguments>
<assign>
<var>${line_count}</var>
</assign>
<msg timestamp="20170913 19:22:22.509" level="INFO">2 lines</msg>
<msg timestamp="20170913 19:22:22.509" level="INFO">${line_count} = 2</msg>
<status status="PASS" endtime="20170913 19:22:22.509" starttime="20170913 19:22:22.509"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${line_count}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20170913 19:22:22.510" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170913 19:22:22.510" starttime="20170913 19:22:22.509"></status>
</kw>
<status status="PASS" endtime="20170913 19:22:22.510" starttime="20170913 19:22:22.497"></status>
</kw>
<status status="PASS" endtime="20170913 19:22:22.510" starttime="20170913 19:22:17.490"></status>
</kw>
<kw name="Log XtremWeb Process Log File" library="XWServer">
<kw name="Log File" library="OperatingSystem">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<msg timestamp="20170913 19:22:22.511" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170913 19:22:22.511" level="INFO">Wed Sep 13 19:22:17 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : checking launch url
Wed Sep 13 19:22:17 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] WARNING : no launcher URL defined
Wed Sep 13 19:22:17 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : launching SmartSockets hub
[13/Sep/2017:19:22:19 +0000] [main_1] ERROR : setRole : role redefined ?! (was SERVER)
[13/Sep/2017:19:22:20 +0000] [xtremweb.database.DBConnPoolThread_main_1] INFO : Connection to database jdbc:mysql://localhost/xtremweb is ok, 70 created
[13/Sep/2017:19:22:20 +0000] [xtremweb.dispatcher.DBInterface_main_1] WARN : Can't retrieve any app
[13/Sep/2017:19:22:20 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't create ProxyValidator
[13/Sep/2017:19:22:20 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.io.FileNotFoundException: /tmp/castore (No such file or directory) (/tmp/castore (No such file or directory))
[13/Sep/2017:19:22:20 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't add CA certificates to keystore
[13/Sep/2017:19:22:20 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.lang.NullPointerException (null)
[13/Sep/2017:19:22:20 +0000] [xtremweb.dispatcher.HashTaskSet_TaskSet_14] INFO : TaskSet started (300000)
[13/Sep/2017:19:22:21 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : still waiting task set...
[13/Sep/2017:19:22:21 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : UDP server not started
[13/Sep/2017:19:22:21 +0000] [xtremweb.communications.TCPServer_TCPServerNIO_15] INFO : started, listening on port : 4321
log4j:WARN No appenders could be found for logger (org.eclipse.jetty.util.log).
log4j:WARN Please initialize the log4j system properly.
log4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.
[13/Sep/2017:19:22:21 +0000] [xtremweb.communications.HTTPServer_main_1] INFO : started, listening on port : 9443
[13/Sep/2017:19:22:21 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : FACEBOOK : java.net.MalformedURLException: no protocol: 
[13/Sep/2017:19:22:21 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : GOOGLE : java.net.MalformedURLException: no protocol: 
[13/Sep/2017:19:22:21 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : TWITTER : java.net.MalformedURLException: no protocol: 
[13/Sep/2017:19:22:21 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : YAHOO : java.net.MalformedURLException: no protocol: 
[13/Sep/2017:19:22:21 +0000] [main_1] ERROR : Can't add new entry to keystore
[13/Sep/2017:19:22:21 +0000] [main_1] WARN : javax.net.ssl.SSLHandshakeException: sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target (sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target)
[13/Sep/2017:19:22:21 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : XWHEP Dispatcher(10.6.0-head) started [Wed Sep 13 19:22:21 UTC 2017]
[13/Sep/2017:19:22:21 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : DB vendor  = mysql
[13/Sep/2017:19:22:21 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : mileStone  = 
[13/Sep/2017:19:22:21 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Time out   = 15000
[13/Sep/2017:19:22:21 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Disk opt'd = true
[13/Sep/2017:19:22:21 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Net  opt'd = true
[13/Sep/2017:19:22:21 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : NIO        = true
XWHEP Dispatcher started  Wed Sep 13 19:22:21 UTC 2017
Name             : vagrant-ubuntu-trusty-64
Version          : 10.6.0-head
Identity         : 
XWRole           : SERVER
Started on       : Wed Sep 13 19:22:19 UTC 2017
Scheduler        : xtremweb.dispatcher.MatchingScheduler
SmartSockets hub : 172.28.128.3/172.17.0.1/10.0.2.15-4329#8a.a2.ae.e6.cc.7c.00.00.bf.f5.02.42.7b.de.a1.dc~vagrant
Server HTTP      : true
Alive            : 300
Alive time out   : 900
Polling time out : 15000
Optimize zip     : true
Optimize network : true
NIO              : true
Comm layer       : xtremweb.communications.TCPClient
Socket time out  : 60000
Socket retries   : 50
Max connections  : 200
TCP port         : 4321
UDP port         : 4323
HTPP  port       : 80
HTPPS port       : 9443
Sun RPC interposition port : 4328
Sandbox path : /usr/bin/lxc
Sandbox launch args : 
Host &lt;host&gt;&lt;uid&gt;9dd2d3d3-9521-42a6-be26-ebdf2f524a0c&lt;/uid&gt;&lt;accessrights&gt;0x755&lt;/accessrights&gt;&lt;name&gt;vagrant-ubuntu-trusty-64&lt;/name&gt;&lt;cpuload&gt;50&lt;/cpuload&gt;&lt;natedipaddr&gt;10.0.2.15&lt;/natedipaddr&gt;&lt;ipaddr&gt;10.0.2.15&lt;/ipaddr&gt;&lt;hwaddr&gt;&lt;/hwaddr&gt;&lt;timezone&gt;Etc/UTC&lt;/timezone&gt;&lt;os&gt;LINUX&lt;/os&gt;&lt;osversion&gt;3.13.0-129-generic&lt;/osversion&gt;&lt;javaversion&gt;1.8.0_141&lt;/javaversion&gt;&lt;javadatamodel&gt;64&lt;/javadatamodel&gt;&lt;cputype&gt;AMD64&lt;/cputype&gt;&lt;cpunb&gt;1&lt;/cpunb&gt;&lt;cpumodel&gt;unknown&lt;/cpumodel&gt;&lt;cpuspeed&gt;0&lt;/cpuspeed&gt;&lt;totalmem&gt;0&lt;/totalmem&gt;&lt;totalswap&gt;0&lt;/totalswap&gt;&lt;totaltmp&gt;40284&lt;/totaltmp&gt;&lt;freetmp&gt;37264&lt;/freetmp&gt;&lt;project&gt;&lt;/project&gt;&lt;active&gt;true&lt;/active&gt;&lt;incomingconnections&gt;false&lt;/incomingconnections&gt;&lt;available&gt;false&lt;/available&gt;&lt;pilotjob&gt;false&lt;/pilotjob&gt;&lt;sgid&gt;&lt;/sgid&gt;&lt;timeout&gt;15000&lt;/timeout&gt;&lt;traces&gt;false&lt;/traces&gt;&lt;acceptbin&gt;false&lt;/acceptbin&gt;&lt;version&gt;10.6.0-head&lt;/version&gt;&lt;/host&gt;
[13/Sep/2017:19:22:21 +0000] [xtremweb.communications.HTTPServer_HTTPServer_218] INFO : started, listening on port : 9443
</msg>
<status status="PASS" endtime="20170913 19:22:22.511" starttime="20170913 19:22:22.510"></status>
</kw>
<status status="PASS" endtime="20170913 19:22:22.511" starttime="20170913 19:22:22.510"></status>
</kw>
<status status="PASS" endtime="20170913 19:22:22.511" starttime="20170913 19:22:17.472"></status>
</kw>
<kw name="Start XtremWeb Worker" library="XWWorker">
<arguments>
<arg>${DIST_XWHEP_PATH}</arg>
</arguments>
<kw name="File Should Exist" library="OperatingSystem">
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xtremweb.worker.conf</arg>
</arguments>
<msg timestamp="20170913 19:22:22.513" html="yes" level="INFO">File '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf&lt;/a&gt;' exists.</msg>
<status status="PASS" endtime="20170913 19:22:22.513" starttime="20170913 19:22:22.512"></status>
</kw>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xtremweb.worker.conf</arg>
</arguments>
<assign>
<var>${config_content}</var>
</assign>
<msg timestamp="20170913 19:22:22.513" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf&lt;/a&gt;'.</msg>
<msg timestamp="20170913 19:22:22.514" level="INFO">${config_content} = #
# Copyrights     : CNRS
# Author         : Oleg Lodygensky
# Acknowledgment : XtremWeb-HEP is based on XtremWeb 1.8.0 by inria : http://www.xtremweb.net/
# Web            : http://www.xtremweb-hep.o...</msg>
<status status="PASS" endtime="20170913 19:22:22.514" starttime="20170913 19:22:22.513"></status>
</kw>
<kw name="Remove String Using Regexp" library="String">
<doc>Removes ``patterns`` from the given ``string``.</doc>
<arguments>
<arg>${config_content}</arg>
<arg>LAUNCHERURL=${XWCONFIGURE.VALUES.XWUPGRADEURL}</arg>
</arguments>
<assign>
<var>${config_content_filtered}</var>
</assign>
<msg timestamp="20170913 19:22:22.515" level="INFO">${config_content_filtered} = #
# Copyrights     : CNRS
# Author         : Oleg Lodygensky
# Acknowledgment : XtremWeb-HEP is based on XtremWeb 1.8.0 by inria : http://www.xtremweb.net/
# Web            : http://www.xtremweb-hep.o...</msg>
<status status="PASS" endtime="20170913 19:22:22.515" starttime="20170913 19:22:22.514"></status>
</kw>
<kw name="Create File" library="OperatingSystem">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xtremweb.worker.conf</arg>
<arg>content=${config_content_filtered}</arg>
</arguments>
<msg timestamp="20170913 19:22:22.570" html="yes" level="INFO">Created file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170913 19:22:22.570" starttime="20170913 19:22:22.515"></status>
</kw>
<kw name="Remove File" library="OperatingSystem">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.worker.process.log</arg>
</arguments>
<msg timestamp="20170913 19:22:22.572" html="yes" level="INFO">Removed file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.worker.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.worker.process.log&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170913 19:22:22.572" starttime="20170913 19:22:22.570"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/bin/xtremweb.worker console</arg>
<arg>shell=yes</arg>
<arg>stderr=STDOUT</arg>
<arg>stdout=${DIST_XWHEP_PATH}/xwhep.worker.process.log</arg>
</arguments>
<assign>
<var>${created_process}</var>
</assign>
<msg timestamp="20170913 19:22:22.573" level="INFO">Starting process:
/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/xtremweb.worker console</msg>
<msg timestamp="20170913 19:22:22.576" level="INFO">${created_process} = 60</msg>
<status status="PASS" endtime="20170913 19:22:22.576" starttime="20170913 19:22:22.572"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${WORKER_PROCESS}</arg>
<arg>${created_process}</arg>
</arguments>
<msg timestamp="20170913 19:22:22.577" level="INFO">${WORKER_PROCESS} = 60</msg>
<status status="PASS" endtime="20170913 19:22:22.577" starttime="20170913 19:22:22.577"></status>
</kw>
<kw name="Log File" library="OperatingSystem">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.worker.process.log</arg>
</arguments>
<msg timestamp="20170913 19:22:22.578" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.worker.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.worker.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170913 19:22:22.580" level="INFO"></msg>
<status status="PASS" endtime="20170913 19:22:22.580" starttime="20170913 19:22:22.578"></status>
</kw>
<status status="PASS" endtime="20170913 19:22:22.580" starttime="20170913 19:22:22.512"></status>
</kw>
<status status="PASS" endtime="20170913 19:22:22.580" starttime="20170913 19:22:17.391"></status>
</kw>
<status status="PASS" endtime="20170913 19:22:22.581" starttime="20170913 19:22:17.052"></status>
</kw>
<kw name="XWSENDDATACommand" library="XWClient">
<doc>Usage : SENDDATA dataName [cpuType] [osName] [dataType] [accessRigths] [dataFile | dataURI | dataUID] : sends data and uploads data if dataFile provided</doc>
<arguments>
<arg>ls</arg>
<arg>DEPLOYABLE</arg>
<arg>LINUX</arg>
<arg>AMD64</arg>
<arg>/bin/ls</arg>
</arguments>
<assign>
<var>${uid}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd ${DIST_XWHEP_PATH}/bin &amp;&amp; ./xwsenddata ${dataName} ${osName} ${cpuType} ${dataType} ${dataFile-dataURI-dataUID}</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${cmd_result}</var>
</assign>
<msg timestamp="20170913 19:22:22.585" level="INFO">Starting process:
cd /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin &amp;&amp; ./xwsenddata ls DEPLOYABLE LINUX AMD64 /bin/ls</msg>
<msg timestamp="20170913 19:22:22.589" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170913 19:22:23.550" level="INFO">Process completed.</msg>
<msg timestamp="20170913 19:22:23.550" level="INFO">${cmd_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170913 19:22:23.550" starttime="20170913 19:22:22.583"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stderr}</arg>
</arguments>
<msg timestamp="20170913 19:22:23.551" level="INFO"></msg>
<status status="PASS" endtime="20170913 19:22:23.551" starttime="20170913 19:22:23.551"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
</arguments>
<msg timestamp="20170913 19:22:23.552" level="INFO">xw://vagrant-ubuntu-trusty-64/2624e5bd-d887-4354-aa47-9e83b9fb74e7</msg>
<status status="PASS" endtime="20170913 19:22:23.552" starttime="20170913 19:22:23.552"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${cmd_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170913 19:22:23.552" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170913 19:22:23.553" starttime="20170913 19:22:23.552"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
<arg>-36</arg>
</arguments>
<assign>
<var>${uid}</var>
</assign>
<msg timestamp="20170913 19:22:23.553" level="INFO">${uid} = 2624e5bd-d887-4354-aa47-9e83b9fb74e7</msg>
<status status="PASS" endtime="20170913 19:22:23.553" starttime="20170913 19:22:23.553"></status>
</kw>
<msg timestamp="20170913 19:22:23.554" level="INFO">${uid} = 2624e5bd-d887-4354-aa47-9e83b9fb74e7</msg>
<status status="PASS" endtime="20170913 19:22:23.554" starttime="20170913 19:22:22.582"></status>
</kw>
<kw name="Count From Datas Where Uid" library="XWServer">
<arguments>
<arg>${uid}</arg>
<arg>1</arg>
</arguments>
<kw name="Count From Table Where Uid" library="MySql">
<arguments>
<arg>datas</arg>
<arg>${uid}</arg>
<arg>${countExpected}</arg>
</arguments>
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170913 19:22:23.556" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170913 19:22:23.557" starttime="20170913 19:22:23.555"></status>
</kw>
<status status="PASS" endtime="20170913 19:22:23.557" starttime="20170913 19:22:23.555"></status>
</kw>
<kw name="Row Count Is Equal To X" library="DatabaseLibrary">
<doc>Check if the number of rows returned from `selectStatement` is equal to the value submitted. If not, then this</doc>
<arguments>
<arg>SELECT * FROM ${table} WHERE uid = '${uid}'</arg>
<arg>${countExpected}</arg>
</arguments>
<msg timestamp="20170913 19:22:23.557" level="INFO">Executing : Row Count Is Equal To X  |  SELECT * FROM datas WHERE uid = '2624e5bd-d887-4354-aa47-9e83b9fb74e7'  |  1 </msg>
<msg timestamp="20170913 19:22:23.557" level="INFO">Executing : Row Count  |  SELECT * FROM datas WHERE uid = '2624e5bd-d887-4354-aa47-9e83b9fb74e7' </msg>
<status status="PASS" endtime="20170913 19:22:23.558" starttime="20170913 19:22:23.557"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170913 19:22:23.559" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170913 19:22:23.559" starttime="20170913 19:22:23.559"></status>
</kw>
<status status="PASS" endtime="20170913 19:22:23.559" starttime="20170913 19:22:23.558"></status>
</kw>
<status status="PASS" endtime="20170913 19:22:23.559" starttime="20170913 19:22:23.554"></status>
</kw>
<status status="PASS" endtime="20170913 19:22:23.559" starttime="20170913 19:22:23.554"></status>
</kw>
<kw type="teardown" name="End XWtremWeb Command Test" library="XWCommon">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Nothing to do</arg>
</arguments>
<msg timestamp="20170913 19:22:23.560" level="INFO">Nothing to do</msg>
<status status="PASS" endtime="20170913 19:22:23.560" starttime="20170913 19:22:23.560"></status>
</kw>
<status status="PASS" endtime="20170913 19:22:23.560" starttime="20170913 19:22:23.560"></status>
</kw>
<doc>Testing XWSenddata cmd</doc>
<tags>
<tag>CommandLine Tests</tag>
</tags>
<status status="PASS" endtime="20170913 19:22:23.560" critical="yes" starttime="20170913 19:22:17.050"></status>
</test>
<test id="s1-s6-t2" name="Test XWSendapp Command With LS Binary">
<kw type="setup" name="Begin XWtremWeb Command Test" library="XWCommon">
<kw name="Ping XWtremWeb Database" library="XWServer">
<kw name="Xtremweb Tables Must Exist" library="MySql">
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170913 19:22:23.563" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170913 19:22:23.564" starttime="20170913 19:22:23.562"></status>
</kw>
<status status="PASS" endtime="20170913 19:22:23.564" starttime="20170913 19:22:23.562"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>appTypes</arg>
</arguments>
<msg timestamp="20170913 19:22:23.564" level="INFO">Executing : Table Must Exist  |  appTypes </msg>
<msg timestamp="20170913 19:22:23.564" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='appTypes' </msg>
<status status="PASS" endtime="20170913 19:22:23.565" starttime="20170913 19:22:23.564"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps</arg>
</arguments>
<msg timestamp="20170913 19:22:23.565" level="INFO">Executing : Table Must Exist  |  apps </msg>
<msg timestamp="20170913 19:22:23.565" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='apps' </msg>
<status status="PASS" endtime="20170913 19:22:23.566" starttime="20170913 19:22:23.565"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps_history</arg>
</arguments>
<msg timestamp="20170913 19:22:23.566" level="INFO">Executing : Table Must Exist  |  apps_history </msg>
<msg timestamp="20170913 19:22:23.566" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='apps_history' </msg>
<status status="PASS" endtime="20170913 19:22:23.567" starttime="20170913 19:22:23.566"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>cpuTypes</arg>
</arguments>
<msg timestamp="20170913 19:22:23.567" level="INFO">Executing : Table Must Exist  |  cpuTypes </msg>
<msg timestamp="20170913 19:22:23.567" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='cpuTypes' </msg>
<status status="PASS" endtime="20170913 19:22:23.568" starttime="20170913 19:22:23.567"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>dataTypes</arg>
</arguments>
<msg timestamp="20170913 19:22:23.568" level="INFO">Executing : Table Must Exist  |  dataTypes </msg>
<msg timestamp="20170913 19:22:23.568" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='dataTypes' </msg>
<status status="PASS" endtime="20170913 19:22:23.569" starttime="20170913 19:22:23.568"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas</arg>
</arguments>
<msg timestamp="20170913 19:22:23.569" level="INFO">Executing : Table Must Exist  |  datas </msg>
<msg timestamp="20170913 19:22:23.569" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='datas' </msg>
<status status="PASS" endtime="20170913 19:22:23.570" starttime="20170913 19:22:23.569"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas_history</arg>
</arguments>
<msg timestamp="20170913 19:22:23.570" level="INFO">Executing : Table Must Exist  |  datas_history </msg>
<msg timestamp="20170913 19:22:23.570" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='datas_history' </msg>
<status status="PASS" endtime="20170913 19:22:23.571" starttime="20170913 19:22:23.570"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables</arg>
</arguments>
<msg timestamp="20170913 19:22:23.571" level="INFO">Executing : Table Must Exist  |  executables </msg>
<msg timestamp="20170913 19:22:23.571" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='executables' </msg>
<status status="PASS" endtime="20170913 19:22:23.572" starttime="20170913 19:22:23.571"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables_history</arg>
</arguments>
<msg timestamp="20170913 19:22:23.572" level="INFO">Executing : Table Must Exist  |  executables_history </msg>
<msg timestamp="20170913 19:22:23.572" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='executables_history' </msg>
<status status="PASS" endtime="20170913 19:22:23.573" starttime="20170913 19:22:23.572"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups</arg>
</arguments>
<msg timestamp="20170913 19:22:23.573" level="INFO">Executing : Table Must Exist  |  groups </msg>
<msg timestamp="20170913 19:22:23.574" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='groups' </msg>
<status status="PASS" endtime="20170913 19:22:23.574" starttime="20170913 19:22:23.573"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups_history</arg>
</arguments>
<msg timestamp="20170913 19:22:23.575" level="INFO">Executing : Table Must Exist  |  groups_history </msg>
<msg timestamp="20170913 19:22:23.575" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='groups_history' </msg>
<status status="PASS" endtime="20170913 19:22:23.575" starttime="20170913 19:22:23.574"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts</arg>
</arguments>
<msg timestamp="20170913 19:22:23.575" level="INFO">Executing : Table Must Exist  |  hosts </msg>
<msg timestamp="20170913 19:22:23.576" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='hosts' </msg>
<status status="PASS" endtime="20170913 19:22:23.576" starttime="20170913 19:22:23.575"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts_history</arg>
</arguments>
<msg timestamp="20170913 19:22:23.576" level="INFO">Executing : Table Must Exist  |  hosts_history </msg>
<msg timestamp="20170913 19:22:23.577" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='hosts_history' </msg>
<status status="PASS" endtime="20170913 19:22:23.577" starttime="20170913 19:22:23.576"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships</arg>
</arguments>
<msg timestamp="20170913 19:22:23.577" level="INFO">Executing : Table Must Exist  |  memberships </msg>
<msg timestamp="20170913 19:22:23.578" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='memberships' </msg>
<status status="PASS" endtime="20170913 19:22:23.578" starttime="20170913 19:22:23.577"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships_history</arg>
</arguments>
<msg timestamp="20170913 19:22:23.578" level="INFO">Executing : Table Must Exist  |  memberships_history </msg>
<msg timestamp="20170913 19:22:23.579" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='memberships_history' </msg>
<status status="PASS" endtime="20170913 19:22:23.579" starttime="20170913 19:22:23.578"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>oses</arg>
</arguments>
<msg timestamp="20170913 19:22:23.580" level="INFO">Executing : Table Must Exist  |  oses </msg>
<msg timestamp="20170913 19:22:23.580" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='oses' </msg>
<status status="PASS" endtime="20170913 19:22:23.580" starttime="20170913 19:22:23.579"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>packageTypes</arg>
</arguments>
<msg timestamp="20170913 19:22:23.581" level="INFO">Executing : Table Must Exist  |  packageTypes </msg>
<msg timestamp="20170913 19:22:23.581" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='packageTypes' </msg>
<status status="PASS" endtime="20170913 19:22:23.581" starttime="20170913 19:22:23.581"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions</arg>
</arguments>
<msg timestamp="20170913 19:22:23.582" level="INFO">Executing : Table Must Exist  |  sessions </msg>
<msg timestamp="20170913 19:22:23.582" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sessions' </msg>
<status status="PASS" endtime="20170913 19:22:23.582" starttime="20170913 19:22:23.582"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions_history</arg>
</arguments>
<msg timestamp="20170913 19:22:23.583" level="INFO">Executing : Table Must Exist  |  sessions_history </msg>
<msg timestamp="20170913 19:22:23.583" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sessions_history' </msg>
<status status="PASS" endtime="20170913 19:22:23.584" starttime="20170913 19:22:23.582"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes</arg>
</arguments>
<msg timestamp="20170913 19:22:23.584" level="INFO">Executing : Table Must Exist  |  sharedAppTypes </msg>
<msg timestamp="20170913 19:22:23.584" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedAppTypes' </msg>
<status status="PASS" endtime="20170913 19:22:23.585" starttime="20170913 19:22:23.584"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes_history</arg>
</arguments>
<msg timestamp="20170913 19:22:23.585" level="INFO">Executing : Table Must Exist  |  sharedAppTypes_history </msg>
<msg timestamp="20170913 19:22:23.585" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedAppTypes_history' </msg>
<status status="PASS" endtime="20170913 19:22:23.586" starttime="20170913 19:22:23.585"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes</arg>
</arguments>
<msg timestamp="20170913 19:22:23.586" level="INFO">Executing : Table Must Exist  |  sharedPackageTypes </msg>
<msg timestamp="20170913 19:22:23.586" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedPackageTypes' </msg>
<status status="PASS" endtime="20170913 19:22:23.587" starttime="20170913 19:22:23.586"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes_history</arg>
</arguments>
<msg timestamp="20170913 19:22:23.587" level="INFO">Executing : Table Must Exist  |  sharedPackageTypes_history </msg>
<msg timestamp="20170913 19:22:23.587" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedPackageTypes_history' </msg>
<status status="PASS" endtime="20170913 19:22:23.588" starttime="20170913 19:22:23.587"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>statuses</arg>
</arguments>
<msg timestamp="20170913 19:22:23.588" level="INFO">Executing : Table Must Exist  |  statuses </msg>
<msg timestamp="20170913 19:22:23.588" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='statuses' </msg>
<status status="PASS" endtime="20170913 19:22:23.589" starttime="20170913 19:22:23.588"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks</arg>
</arguments>
<msg timestamp="20170913 19:22:23.590" level="INFO">Executing : Table Must Exist  |  tasks </msg>
<msg timestamp="20170913 19:22:23.590" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='tasks' </msg>
<status status="PASS" endtime="20170913 19:22:23.590" starttime="20170913 19:22:23.589"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks_history</arg>
</arguments>
<msg timestamp="20170913 19:22:23.591" level="INFO">Executing : Table Must Exist  |  tasks_history </msg>
<msg timestamp="20170913 19:22:23.591" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='tasks_history' </msg>
<status status="PASS" endtime="20170913 19:22:23.591" starttime="20170913 19:22:23.590"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces</arg>
</arguments>
<msg timestamp="20170913 19:22:23.592" level="INFO">Executing : Table Must Exist  |  traces </msg>
<msg timestamp="20170913 19:22:23.592" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='traces' </msg>
<status status="PASS" endtime="20170913 19:22:23.592" starttime="20170913 19:22:23.592"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces_history</arg>
</arguments>
<msg timestamp="20170913 19:22:23.593" level="INFO">Executing : Table Must Exist  |  traces_history </msg>
<msg timestamp="20170913 19:22:23.593" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='traces_history' </msg>
<status status="PASS" endtime="20170913 19:22:23.593" starttime="20170913 19:22:23.593"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>userRights</arg>
</arguments>
<msg timestamp="20170913 19:22:23.594" level="INFO">Executing : Table Must Exist  |  userRights </msg>
<msg timestamp="20170913 19:22:23.594" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='userRights' </msg>
<status status="PASS" endtime="20170913 19:22:23.594" starttime="20170913 19:22:23.594"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups</arg>
</arguments>
<msg timestamp="20170913 19:22:23.595" level="INFO">Executing : Table Must Exist  |  usergroups </msg>
<msg timestamp="20170913 19:22:23.595" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='usergroups' </msg>
<status status="PASS" endtime="20170913 19:22:23.595" starttime="20170913 19:22:23.594"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups_history</arg>
</arguments>
<msg timestamp="20170913 19:22:23.596" level="INFO">Executing : Table Must Exist  |  usergroups_history </msg>
<msg timestamp="20170913 19:22:23.596" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='usergroups_history' </msg>
<status status="PASS" endtime="20170913 19:22:23.596" starttime="20170913 19:22:23.595"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users</arg>
</arguments>
<msg timestamp="20170913 19:22:23.596" level="INFO">Executing : Table Must Exist  |  users </msg>
<msg timestamp="20170913 19:22:23.596" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='users' </msg>
<status status="PASS" endtime="20170913 19:22:23.597" starttime="20170913 19:22:23.596"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users_history</arg>
</arguments>
<msg timestamp="20170913 19:22:23.597" level="INFO">Executing : Table Must Exist  |  users_history </msg>
<msg timestamp="20170913 19:22:23.597" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='users_history' </msg>
<status status="PASS" endtime="20170913 19:22:23.598" starttime="20170913 19:22:23.597"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>version</arg>
</arguments>
<msg timestamp="20170913 19:22:23.598" level="INFO">Executing : Table Must Exist  |  version </msg>
<msg timestamp="20170913 19:22:23.598" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='version' </msg>
<status status="PASS" endtime="20170913 19:22:23.599" starttime="20170913 19:22:23.598"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>versions</arg>
</arguments>
<msg timestamp="20170913 19:22:23.599" level="INFO">Executing : Table Must Exist  |  versions </msg>
<msg timestamp="20170913 19:22:23.599" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='versions' </msg>
<status status="PASS" endtime="20170913 19:22:23.600" starttime="20170913 19:22:23.599"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps</arg>
</arguments>
<msg timestamp="20170913 19:22:23.605" level="INFO">Executing : Table Must Exist  |  view_apps </msg>
<msg timestamp="20170913 19:22:23.605" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps' </msg>
<status status="PASS" endtime="20170913 19:22:23.606" starttime="20170913 19:22:23.604"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps_for_offering</arg>
</arguments>
<msg timestamp="20170913 19:22:23.606" level="INFO">Executing : Table Must Exist  |  view_apps_for_offering </msg>
<msg timestamp="20170913 19:22:23.606" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps_for_offering' </msg>
<status status="PASS" endtime="20170913 19:22:23.607" starttime="20170913 19:22:23.606"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps_for_offering_with_file_sizes</arg>
</arguments>
<msg timestamp="20170913 19:22:23.607" level="INFO">Executing : Table Must Exist  |  view_apps_for_offering_with_file_sizes </msg>
<msg timestamp="20170913 19:22:23.607" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps_for_offering_with_file_sizes' </msg>
<status status="PASS" endtime="20170913 19:22:23.608" starttime="20170913 19:22:23.607"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_datas</arg>
</arguments>
<msg timestamp="20170913 19:22:23.608" level="INFO">Executing : Table Must Exist  |  view_datas </msg>
<msg timestamp="20170913 19:22:23.608" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_datas' </msg>
<status status="PASS" endtime="20170913 19:22:23.609" starttime="20170913 19:22:23.608"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_executables</arg>
</arguments>
<msg timestamp="20170913 19:22:23.610" level="INFO">Executing : Table Must Exist  |  view_executables </msg>
<msg timestamp="20170913 19:22:23.610" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_executables' </msg>
<status status="PASS" endtime="20170913 19:22:23.612" starttime="20170913 19:22:23.610"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_groups</arg>
</arguments>
<msg timestamp="20170913 19:22:23.612" level="INFO">Executing : Table Must Exist  |  view_groups </msg>
<msg timestamp="20170913 19:22:23.612" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_groups' </msg>
<status status="PASS" endtime="20170913 19:22:23.614" starttime="20170913 19:22:23.612"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts</arg>
</arguments>
<msg timestamp="20170913 19:22:23.614" level="INFO">Executing : Table Must Exist  |  view_hosts </msg>
<msg timestamp="20170913 19:22:23.614" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts' </msg>
<status status="PASS" endtime="20170913 19:22:23.615" starttime="20170913 19:22:23.614"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_deployable</arg>
</arguments>
<msg timestamp="20170913 19:22:23.616" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_deployable </msg>
<msg timestamp="20170913 19:22:23.616" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_deployable' </msg>
<status status="PASS" endtime="20170913 19:22:23.617" starttime="20170913 19:22:23.615"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_deployable_and_shared</arg>
</arguments>
<msg timestamp="20170913 19:22:23.617" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_deployable_and_shared </msg>
<msg timestamp="20170913 19:22:23.617" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_deployable_and_shared' </msg>
<status status="PASS" endtime="20170913 19:22:23.618" starttime="20170913 19:22:23.617"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_shared</arg>
</arguments>
<msg timestamp="20170913 19:22:23.619" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_shared </msg>
<msg timestamp="20170913 19:22:23.619" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_shared' </msg>
<status status="PASS" endtime="20170913 19:22:23.620" starttime="20170913 19:22:23.619"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_sessions</arg>
</arguments>
<msg timestamp="20170913 19:22:23.620" level="INFO">Executing : Table Must Exist  |  view_sessions </msg>
<msg timestamp="20170913 19:22:23.620" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_sessions' </msg>
<status status="PASS" endtime="20170913 19:22:23.622" starttime="20170913 19:22:23.620"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_tasks</arg>
</arguments>
<msg timestamp="20170913 19:22:23.622" level="INFO">Executing : Table Must Exist  |  view_tasks </msg>
<msg timestamp="20170913 19:22:23.622" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_tasks' </msg>
<status status="PASS" endtime="20170913 19:22:23.624" starttime="20170913 19:22:23.622"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_traces</arg>
</arguments>
<msg timestamp="20170913 19:22:23.624" level="INFO">Executing : Table Must Exist  |  view_traces </msg>
<msg timestamp="20170913 19:22:23.625" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_traces' </msg>
<status status="PASS" endtime="20170913 19:22:23.626" starttime="20170913 19:22:23.624"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_usergroups</arg>
</arguments>
<msg timestamp="20170913 19:22:23.626" level="INFO">Executing : Table Must Exist  |  view_usergroups </msg>
<msg timestamp="20170913 19:22:23.627" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_usergroups' </msg>
<status status="PASS" endtime="20170913 19:22:23.628" starttime="20170913 19:22:23.626"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users</arg>
</arguments>
<msg timestamp="20170913 19:22:23.628" level="INFO">Executing : Table Must Exist  |  view_users </msg>
<msg timestamp="20170913 19:22:23.628" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users' </msg>
<status status="PASS" endtime="20170913 19:22:23.630" starttime="20170913 19:22:23.628"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_apps</arg>
</arguments>
<msg timestamp="20170913 19:22:23.630" level="INFO">Executing : Table Must Exist  |  view_users_apps </msg>
<msg timestamp="20170913 19:22:23.630" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_apps' </msg>
<status status="PASS" endtime="20170913 19:22:23.632" starttime="20170913 19:22:23.630"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_datas</arg>
</arguments>
<msg timestamp="20170913 19:22:23.632" level="INFO">Executing : Table Must Exist  |  view_users_datas </msg>
<msg timestamp="20170913 19:22:23.632" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_datas' </msg>
<status status="PASS" endtime="20170913 19:22:23.634" starttime="20170913 19:22:23.632"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_groups</arg>
</arguments>
<msg timestamp="20170913 19:22:23.634" level="INFO">Executing : Table Must Exist  |  view_users_groups </msg>
<msg timestamp="20170913 19:22:23.634" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_groups' </msg>
<status status="PASS" endtime="20170913 19:22:23.635" starttime="20170913 19:22:23.634"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_hosts</arg>
</arguments>
<msg timestamp="20170913 19:22:23.635" level="INFO">Executing : Table Must Exist  |  view_users_hosts </msg>
<msg timestamp="20170913 19:22:23.635" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_hosts' </msg>
<status status="PASS" endtime="20170913 19:22:23.637" starttime="20170913 19:22:23.635"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_sessions</arg>
</arguments>
<msg timestamp="20170913 19:22:23.637" level="INFO">Executing : Table Must Exist  |  view_users_sessions </msg>
<msg timestamp="20170913 19:22:23.637" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_sessions' </msg>
<status status="PASS" endtime="20170913 19:22:23.638" starttime="20170913 19:22:23.637"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_tasks</arg>
</arguments>
<msg timestamp="20170913 19:22:23.638" level="INFO">Executing : Table Must Exist  |  view_users_tasks </msg>
<msg timestamp="20170913 19:22:23.638" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_tasks' </msg>
<status status="PASS" endtime="20170913 19:22:23.639" starttime="20170913 19:22:23.638"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_traces</arg>
</arguments>
<msg timestamp="20170913 19:22:23.639" level="INFO">Executing : Table Must Exist  |  view_users_traces </msg>
<msg timestamp="20170913 19:22:23.639" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_traces' </msg>
<status status="PASS" endtime="20170913 19:22:23.640" starttime="20170913 19:22:23.639"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_usergroups</arg>
</arguments>
<msg timestamp="20170913 19:22:23.641" level="INFO">Executing : Table Must Exist  |  view_users_usergroups </msg>
<msg timestamp="20170913 19:22:23.641" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_usergroups' </msg>
<status status="PASS" endtime="20170913 19:22:23.641" starttime="20170913 19:22:23.640"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_users</arg>
</arguments>
<msg timestamp="20170913 19:22:23.642" level="INFO">Executing : Table Must Exist  |  view_users_users </msg>
<msg timestamp="20170913 19:22:23.642" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_users' </msg>
<status status="PASS" endtime="20170913 19:22:23.642" starttime="20170913 19:22:23.642"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_works</arg>
</arguments>
<msg timestamp="20170913 19:22:23.644" level="INFO">Executing : Table Must Exist  |  view_users_works </msg>
<msg timestamp="20170913 19:22:23.644" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_works' </msg>
<status status="PASS" endtime="20170913 19:22:23.645" starttime="20170913 19:22:23.642"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works</arg>
</arguments>
<msg timestamp="20170913 19:22:23.645" level="INFO">Executing : Table Must Exist  |  view_works </msg>
<msg timestamp="20170913 19:22:23.645" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works' </msg>
<status status="PASS" endtime="20170913 19:22:23.646" starttime="20170913 19:22:23.645"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works_for_billing</arg>
</arguments>
<msg timestamp="20170913 19:22:23.646" level="INFO">Executing : Table Must Exist  |  view_works_for_billing </msg>
<msg timestamp="20170913 19:22:23.646" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works_for_billing' </msg>
<status status="PASS" endtime="20170913 19:22:23.647" starttime="20170913 19:22:23.646"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works_for_billing_with_file_sizes</arg>
</arguments>
<msg timestamp="20170913 19:22:23.647" level="INFO">Executing : Table Must Exist  |  view_works_for_billing_with_file_sizes </msg>
<msg timestamp="20170913 19:22:23.647" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works_for_billing_with_file_sizes' </msg>
<status status="PASS" endtime="20170913 19:22:23.648" starttime="20170913 19:22:23.647"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works</arg>
</arguments>
<msg timestamp="20170913 19:22:23.648" level="INFO">Executing : Table Must Exist  |  works </msg>
<msg timestamp="20170913 19:22:23.648" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='works' </msg>
<status status="PASS" endtime="20170913 19:22:23.649" starttime="20170913 19:22:23.648"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works_history</arg>
</arguments>
<msg timestamp="20170913 19:22:23.649" level="INFO">Executing : Table Must Exist  |  works_history </msg>
<msg timestamp="20170913 19:22:23.649" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='works_history' </msg>
<status status="PASS" endtime="20170913 19:22:23.650" starttime="20170913 19:22:23.649"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170913 19:22:23.651" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170913 19:22:23.651" starttime="20170913 19:22:23.650"></status>
</kw>
<status status="PASS" endtime="20170913 19:22:23.651" starttime="20170913 19:22:23.650"></status>
</kw>
<status status="PASS" endtime="20170913 19:22:23.651" starttime="20170913 19:22:23.562"></status>
</kw>
<status status="PASS" endtime="20170913 19:22:23.651" starttime="20170913 19:22:23.562"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>TODO ping XWtremWeb server up</arg>
</arguments>
<msg timestamp="20170913 19:22:23.651" level="INFO">TODO ping XWtremWeb server up</msg>
<status status="PASS" endtime="20170913 19:22:23.651" starttime="20170913 19:22:23.651"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>TODO ping XWtremWeb worker up before one test</arg>
</arguments>
<msg timestamp="20170913 19:22:23.652" level="INFO">TODO ping XWtremWeb worker up before one test</msg>
<status status="PASS" endtime="20170913 19:22:23.652" starttime="20170913 19:22:23.651"></status>
</kw>
<kw name="Delete Fonctionnal Xtremweb Tables" library="MySql">
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170913 19:22:23.653" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170913 19:22:23.653" starttime="20170913 19:22:23.652"></status>
</kw>
<status status="PASS" endtime="20170913 19:22:23.654" starttime="20170913 19:22:23.652"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps</arg>
</arguments>
<msg timestamp="20170913 19:22:23.654" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM apps; </msg>
<status status="PASS" endtime="20170913 19:22:23.654" starttime="20170913 19:22:23.654"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps_history</arg>
</arguments>
<msg timestamp="20170913 19:22:23.654" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM apps_history; </msg>
<status status="PASS" endtime="20170913 19:22:23.655" starttime="20170913 19:22:23.654"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas</arg>
</arguments>
<msg timestamp="20170913 19:22:23.655" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM datas; </msg>
<status status="PASS" endtime="20170913 19:22:23.656" starttime="20170913 19:22:23.655"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas_history</arg>
</arguments>
<msg timestamp="20170913 19:22:23.657" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM datas_history; </msg>
<status status="PASS" endtime="20170913 19:22:23.657" starttime="20170913 19:22:23.656"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables</arg>
</arguments>
<msg timestamp="20170913 19:22:23.657" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM executables; </msg>
<status status="PASS" endtime="20170913 19:22:23.657" starttime="20170913 19:22:23.657"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables_history</arg>
</arguments>
<msg timestamp="20170913 19:22:23.658" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM executables_history; </msg>
<status status="PASS" endtime="20170913 19:22:23.658" starttime="20170913 19:22:23.657"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups</arg>
</arguments>
<msg timestamp="20170913 19:22:23.658" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM groups; </msg>
<status status="PASS" endtime="20170913 19:22:23.659" starttime="20170913 19:22:23.658"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups_history</arg>
</arguments>
<msg timestamp="20170913 19:22:23.659" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM groups_history; </msg>
<status status="PASS" endtime="20170913 19:22:23.659" starttime="20170913 19:22:23.659"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts</arg>
</arguments>
<msg timestamp="20170913 19:22:23.659" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM hosts; </msg>
<status status="PASS" endtime="20170913 19:22:23.660" starttime="20170913 19:22:23.659"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts_history</arg>
</arguments>
<msg timestamp="20170913 19:22:23.660" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM hosts_history; </msg>
<status status="PASS" endtime="20170913 19:22:23.660" starttime="20170913 19:22:23.660"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships</arg>
</arguments>
<msg timestamp="20170913 19:22:23.661" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM memberships; </msg>
<status status="PASS" endtime="20170913 19:22:23.661" starttime="20170913 19:22:23.660"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships_history</arg>
</arguments>
<msg timestamp="20170913 19:22:23.661" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM memberships_history; </msg>
<status status="PASS" endtime="20170913 19:22:23.661" starttime="20170913 19:22:23.661"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions</arg>
</arguments>
<msg timestamp="20170913 19:22:23.662" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sessions; </msg>
<status status="PASS" endtime="20170913 19:22:23.662" starttime="20170913 19:22:23.662"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions_history</arg>
</arguments>
<msg timestamp="20170913 19:22:23.662" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sessions_history; </msg>
<status status="PASS" endtime="20170913 19:22:23.663" starttime="20170913 19:22:23.662"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes</arg>
</arguments>
<msg timestamp="20170913 19:22:23.663" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedAppTypes; </msg>
<status status="PASS" endtime="20170913 19:22:23.663" starttime="20170913 19:22:23.663"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes_history</arg>
</arguments>
<msg timestamp="20170913 19:22:23.663" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedAppTypes_history; </msg>
<status status="PASS" endtime="20170913 19:22:23.664" starttime="20170913 19:22:23.663"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes</arg>
</arguments>
<msg timestamp="20170913 19:22:23.664" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedPackageTypes; </msg>
<status status="PASS" endtime="20170913 19:22:23.664" starttime="20170913 19:22:23.664"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes_history</arg>
</arguments>
<msg timestamp="20170913 19:22:23.664" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedPackageTypes_history; </msg>
<status status="PASS" endtime="20170913 19:22:23.665" starttime="20170913 19:22:23.664"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks</arg>
</arguments>
<msg timestamp="20170913 19:22:23.665" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM tasks; </msg>
<status status="PASS" endtime="20170913 19:22:23.665" starttime="20170913 19:22:23.665"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks_history</arg>
</arguments>
<msg timestamp="20170913 19:22:23.666" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM tasks_history; </msg>
<status status="PASS" endtime="20170913 19:22:23.666" starttime="20170913 19:22:23.665"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces</arg>
</arguments>
<msg timestamp="20170913 19:22:23.666" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM traces; </msg>
<status status="PASS" endtime="20170913 19:22:23.666" starttime="20170913 19:22:23.666"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces_history</arg>
</arguments>
<msg timestamp="20170913 19:22:23.667" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM traces_history; </msg>
<status status="PASS" endtime="20170913 19:22:23.667" starttime="20170913 19:22:23.667"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups</arg>
</arguments>
<msg timestamp="20170913 19:22:23.667" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM usergroups; </msg>
<status status="PASS" endtime="20170913 19:22:23.668" starttime="20170913 19:22:23.667"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups_history</arg>
</arguments>
<msg timestamp="20170913 19:22:23.668" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM usergroups_history; </msg>
<status status="PASS" endtime="20170913 19:22:23.668" starttime="20170913 19:22:23.668"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users_history</arg>
</arguments>
<msg timestamp="20170913 19:22:23.668" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM users_history; </msg>
<status status="PASS" endtime="20170913 19:22:23.669" starttime="20170913 19:22:23.668"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works</arg>
</arguments>
<msg timestamp="20170913 19:22:23.669" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM works; </msg>
<status status="PASS" endtime="20170913 19:22:23.669" starttime="20170913 19:22:23.669"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works_history</arg>
</arguments>
<msg timestamp="20170913 19:22:23.670" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM works_history; </msg>
<status status="PASS" endtime="20170913 19:22:23.670" starttime="20170913 19:22:23.669"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170913 19:22:23.670" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170913 19:22:23.671" starttime="20170913 19:22:23.670"></status>
</kw>
<status status="PASS" endtime="20170913 19:22:23.671" starttime="20170913 19:22:23.670"></status>
</kw>
<status status="PASS" endtime="20170913 19:22:23.671" starttime="20170913 19:22:23.652"></status>
</kw>
<kw name="Stop XWtremWeb Server And XWtremWeb Worker" library="XWCommon">
<kw name="Stop XtremWeb Server" library="XWServer">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${SERVER_PROCESS}</arg>
</arguments>
<msg timestamp="20170913 19:22:23.671" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20170913 19:22:23.776" level="INFO">Process completed.</msg>
<status status="PASS" endtime="20170913 19:22:23.776" starttime="20170913 19:22:23.671"></status>
</kw>
<status status="PASS" endtime="20170913 19:22:23.776" starttime="20170913 19:22:23.671"></status>
</kw>
<kw name="Log XtremWeb Server" library="XWCommon">
<kw name="Log XtremWeb Process Log File" library="XWServer">
<kw name="Log File" library="OperatingSystem">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<msg timestamp="20170913 19:22:23.778" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170913 19:22:23.778" level="INFO">Wed Sep 13 19:22:17 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : checking launch url
Wed Sep 13 19:22:17 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] WARNING : no launcher URL defined
Wed Sep 13 19:22:17 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : launching SmartSockets hub
[13/Sep/2017:19:22:19 +0000] [main_1] ERROR : setRole : role redefined ?! (was SERVER)
[13/Sep/2017:19:22:20 +0000] [xtremweb.database.DBConnPoolThread_main_1] INFO : Connection to database jdbc:mysql://localhost/xtremweb is ok, 70 created
[13/Sep/2017:19:22:20 +0000] [xtremweb.dispatcher.DBInterface_main_1] WARN : Can't retrieve any app
[13/Sep/2017:19:22:20 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't create ProxyValidator
[13/Sep/2017:19:22:20 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.io.FileNotFoundException: /tmp/castore (No such file or directory) (/tmp/castore (No such file or directory))
[13/Sep/2017:19:22:20 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't add CA certificates to keystore
[13/Sep/2017:19:22:20 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.lang.NullPointerException (null)
[13/Sep/2017:19:22:20 +0000] [xtremweb.dispatcher.HashTaskSet_TaskSet_14] INFO : TaskSet started (300000)
[13/Sep/2017:19:22:21 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : still waiting task set...
[13/Sep/2017:19:22:21 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : UDP server not started
[13/Sep/2017:19:22:21 +0000] [xtremweb.communications.TCPServer_TCPServerNIO_15] INFO : started, listening on port : 4321
log4j:WARN No appenders could be found for logger (org.eclipse.jetty.util.log).
log4j:WARN Please initialize the log4j system properly.
log4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.
[13/Sep/2017:19:22:21 +0000] [xtremweb.communications.HTTPServer_main_1] INFO : started, listening on port : 9443
[13/Sep/2017:19:22:21 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : FACEBOOK : java.net.MalformedURLException: no protocol: 
[13/Sep/2017:19:22:21 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : GOOGLE : java.net.MalformedURLException: no protocol: 
[13/Sep/2017:19:22:21 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : TWITTER : java.net.MalformedURLException: no protocol: 
[13/Sep/2017:19:22:21 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : YAHOO : java.net.MalformedURLException: no protocol: 
[13/Sep/2017:19:22:21 +0000] [main_1] ERROR : Can't add new entry to keystore
[13/Sep/2017:19:22:21 +0000] [main_1] WARN : javax.net.ssl.SSLHandshakeException: sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target (sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target)
[13/Sep/2017:19:22:21 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : XWHEP Dispatcher(10.6.0-head) started [Wed Sep 13 19:22:21 UTC 2017]
[13/Sep/2017:19:22:21 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : DB vendor  = mysql
[13/Sep/2017:19:22:21 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : mileStone  = 
[13/Sep/2017:19:22:21 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Time out   = 15000
[13/Sep/2017:19:22:21 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Disk opt'd = true
[13/Sep/2017:19:22:21 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Net  opt'd = true
[13/Sep/2017:19:22:21 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : NIO        = true
XWHEP Dispatcher started  Wed Sep 13 19:22:21 UTC 2017
Name             : vagrant-ubuntu-trusty-64
Version          : 10.6.0-head
Identity         : 
XWRole           : SERVER
Started on       : Wed Sep 13 19:22:19 UTC 2017
Scheduler        : xtremweb.dispatcher.MatchingScheduler
SmartSockets hub : 172.28.128.3/172.17.0.1/10.0.2.15-4329#8a.a2.ae.e6.cc.7c.00.00.bf.f5.02.42.7b.de.a1.dc~vagrant
Server HTTP      : true
Alive            : 300
Alive time out   : 900
Polling time out : 15000
Optimize zip     : true
Optimize network : true
NIO              : true
Comm layer       : xtremweb.communications.TCPClient
Socket time out  : 60000
Socket retries   : 50
Max connections  : 200
TCP port         : 4321
UDP port         : 4323
HTPP  port       : 80
HTPPS port       : 9443
Sun RPC interposition port : 4328
Sandbox path : /usr/bin/lxc
Sandbox launch args : 
Host &lt;host&gt;&lt;uid&gt;9dd2d3d3-9521-42a6-be26-ebdf2f524a0c&lt;/uid&gt;&lt;accessrights&gt;0x755&lt;/accessrights&gt;&lt;name&gt;vagrant-ubuntu-trusty-64&lt;/name&gt;&lt;cpuload&gt;50&lt;/cpuload&gt;&lt;natedipaddr&gt;10.0.2.15&lt;/natedipaddr&gt;&lt;ipaddr&gt;10.0.2.15&lt;/ipaddr&gt;&lt;hwaddr&gt;&lt;/hwaddr&gt;&lt;timezone&gt;Etc/UTC&lt;/timezone&gt;&lt;os&gt;LINUX&lt;/os&gt;&lt;osversion&gt;3.13.0-129-generic&lt;/osversion&gt;&lt;javaversion&gt;1.8.0_141&lt;/javaversion&gt;&lt;javadatamodel&gt;64&lt;/javadatamodel&gt;&lt;cputype&gt;AMD64&lt;/cputype&gt;&lt;cpunb&gt;1&lt;/cpunb&gt;&lt;cpumodel&gt;unknown&lt;/cpumodel&gt;&lt;cpuspeed&gt;0&lt;/cpuspeed&gt;&lt;totalmem&gt;0&lt;/totalmem&gt;&lt;totalswap&gt;0&lt;/totalswap&gt;&lt;totaltmp&gt;40284&lt;/totaltmp&gt;&lt;freetmp&gt;37264&lt;/freetmp&gt;&lt;project&gt;&lt;/project&gt;&lt;active&gt;true&lt;/active&gt;&lt;incomingconnections&gt;false&lt;/incomingconnections&gt;&lt;available&gt;false&lt;/available&gt;&lt;pilotjob&gt;false&lt;/pilotjob&gt;&lt;sgid&gt;&lt;/sgid&gt;&lt;timeout&gt;15000&lt;/timeout&gt;&lt;traces&gt;false&lt;/traces&gt;&lt;acceptbin&gt;false&lt;/acceptbin&gt;&lt;version&gt;10.6.0-head&lt;/version&gt;&lt;/host&gt;
[13/Sep/2017:19:22:21 +0000] [xtremweb.communications.HTTPServer_HTTPServer_218] INFO : started, listening on port : 9443
[13/Sep/2017:19:22:23 +0000] [xtremweb.common.StreamIO_TCPHandler_18] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[13/Sep/2017:19:22:23 +0000] [xtremweb.common.StreamIO_TCPHandler_17] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[13/Sep/2017:19:22:23 +0000] [xtremweb.communications.TCPServer_TCPServerNIO_15] WARN : java.net.SocketException: Socket closed (Socket closed)
</msg>
<status status="PASS" endtime="20170913 19:22:23.779" starttime="20170913 19:22:23.777"></status>
</kw>
<status status="PASS" endtime="20170913 19:22:23.779" starttime="20170913 19:22:23.777"></status>
</kw>
<status status="PASS" endtime="20170913 19:22:23.779" starttime="20170913 19:22:23.776"></status>
</kw>
<kw name="Stop XtremWeb Worker" library="XWWorker">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Stop XtremWeb Worker</arg>
</arguments>
<msg timestamp="20170913 19:22:23.779" level="INFO">Stop XtremWeb Worker</msg>
<status status="PASS" endtime="20170913 19:22:23.779" starttime="20170913 19:22:23.779"></status>
</kw>
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${WORKER_PROCESS}</arg>
</arguments>
<msg timestamp="20170913 19:22:23.780" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20170913 19:22:23.780" level="INFO">Process completed.</msg>
<status status="PASS" endtime="20170913 19:22:23.780" starttime="20170913 19:22:23.780"></status>
</kw>
<status status="PASS" endtime="20170913 19:22:23.780" starttime="20170913 19:22:23.779"></status>
</kw>
<status status="PASS" endtime="20170913 19:22:23.781" starttime="20170913 19:22:23.671"></status>
</kw>
<kw name="Start XWtremWeb Server And XWtremWeb Worker" library="XWCommon">
<kw name="Ping XWtremWeb Database" library="XWServer">
<kw name="Xtremweb Tables Must Exist" library="MySql">
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170913 19:22:23.782" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170913 19:22:23.783" starttime="20170913 19:22:23.782"></status>
</kw>
<status status="PASS" endtime="20170913 19:22:23.783" starttime="20170913 19:22:23.781"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>appTypes</arg>
</arguments>
<msg timestamp="20170913 19:22:23.784" level="INFO">Executing : Table Must Exist  |  appTypes </msg>
<msg timestamp="20170913 19:22:23.784" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='appTypes' </msg>
<status status="PASS" endtime="20170913 19:22:23.785" starttime="20170913 19:22:23.784"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps</arg>
</arguments>
<msg timestamp="20170913 19:22:23.785" level="INFO">Executing : Table Must Exist  |  apps </msg>
<msg timestamp="20170913 19:22:23.785" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='apps' </msg>
<status status="PASS" endtime="20170913 19:22:23.786" starttime="20170913 19:22:23.785"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps_history</arg>
</arguments>
<msg timestamp="20170913 19:22:23.787" level="INFO">Executing : Table Must Exist  |  apps_history </msg>
<msg timestamp="20170913 19:22:23.787" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='apps_history' </msg>
<status status="PASS" endtime="20170913 19:22:23.788" starttime="20170913 19:22:23.787"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>cpuTypes</arg>
</arguments>
<msg timestamp="20170913 19:22:23.788" level="INFO">Executing : Table Must Exist  |  cpuTypes </msg>
<msg timestamp="20170913 19:22:23.788" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='cpuTypes' </msg>
<status status="PASS" endtime="20170913 19:22:23.789" starttime="20170913 19:22:23.788"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>dataTypes</arg>
</arguments>
<msg timestamp="20170913 19:22:23.789" level="INFO">Executing : Table Must Exist  |  dataTypes </msg>
<msg timestamp="20170913 19:22:23.789" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='dataTypes' </msg>
<status status="PASS" endtime="20170913 19:22:23.790" starttime="20170913 19:22:23.789"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas</arg>
</arguments>
<msg timestamp="20170913 19:22:23.791" level="INFO">Executing : Table Must Exist  |  datas </msg>
<msg timestamp="20170913 19:22:23.791" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='datas' </msg>
<status status="PASS" endtime="20170913 19:22:23.792" starttime="20170913 19:22:23.791"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas_history</arg>
</arguments>
<msg timestamp="20170913 19:22:23.792" level="INFO">Executing : Table Must Exist  |  datas_history </msg>
<msg timestamp="20170913 19:22:23.792" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='datas_history' </msg>
<status status="PASS" endtime="20170913 19:22:23.793" starttime="20170913 19:22:23.792"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables</arg>
</arguments>
<msg timestamp="20170913 19:22:23.793" level="INFO">Executing : Table Must Exist  |  executables </msg>
<msg timestamp="20170913 19:22:23.793" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='executables' </msg>
<status status="PASS" endtime="20170913 19:22:23.794" starttime="20170913 19:22:23.793"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables_history</arg>
</arguments>
<msg timestamp="20170913 19:22:23.794" level="INFO">Executing : Table Must Exist  |  executables_history </msg>
<msg timestamp="20170913 19:22:23.794" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='executables_history' </msg>
<status status="PASS" endtime="20170913 19:22:23.795" starttime="20170913 19:22:23.794"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups</arg>
</arguments>
<msg timestamp="20170913 19:22:23.796" level="INFO">Executing : Table Must Exist  |  groups </msg>
<msg timestamp="20170913 19:22:23.796" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='groups' </msg>
<status status="PASS" endtime="20170913 19:22:23.797" starttime="20170913 19:22:23.796"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups_history</arg>
</arguments>
<msg timestamp="20170913 19:22:23.797" level="INFO">Executing : Table Must Exist  |  groups_history </msg>
<msg timestamp="20170913 19:22:23.797" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='groups_history' </msg>
<status status="PASS" endtime="20170913 19:22:23.798" starttime="20170913 19:22:23.797"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts</arg>
</arguments>
<msg timestamp="20170913 19:22:23.799" level="INFO">Executing : Table Must Exist  |  hosts </msg>
<msg timestamp="20170913 19:22:23.799" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='hosts' </msg>
<status status="PASS" endtime="20170913 19:22:23.800" starttime="20170913 19:22:23.798"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts_history</arg>
</arguments>
<msg timestamp="20170913 19:22:23.800" level="INFO">Executing : Table Must Exist  |  hosts_history </msg>
<msg timestamp="20170913 19:22:23.800" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='hosts_history' </msg>
<status status="PASS" endtime="20170913 19:22:23.801" starttime="20170913 19:22:23.800"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships</arg>
</arguments>
<msg timestamp="20170913 19:22:23.801" level="INFO">Executing : Table Must Exist  |  memberships </msg>
<msg timestamp="20170913 19:22:23.801" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='memberships' </msg>
<status status="PASS" endtime="20170913 19:22:23.802" starttime="20170913 19:22:23.801"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships_history</arg>
</arguments>
<msg timestamp="20170913 19:22:23.802" level="INFO">Executing : Table Must Exist  |  memberships_history </msg>
<msg timestamp="20170913 19:22:23.802" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='memberships_history' </msg>
<status status="PASS" endtime="20170913 19:22:23.803" starttime="20170913 19:22:23.802"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>oses</arg>
</arguments>
<msg timestamp="20170913 19:22:23.803" level="INFO">Executing : Table Must Exist  |  oses </msg>
<msg timestamp="20170913 19:22:23.803" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='oses' </msg>
<status status="PASS" endtime="20170913 19:22:23.804" starttime="20170913 19:22:23.803"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>packageTypes</arg>
</arguments>
<msg timestamp="20170913 19:22:23.804" level="INFO">Executing : Table Must Exist  |  packageTypes </msg>
<msg timestamp="20170913 19:22:23.804" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='packageTypes' </msg>
<status status="PASS" endtime="20170913 19:22:23.805" starttime="20170913 19:22:23.804"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions</arg>
</arguments>
<msg timestamp="20170913 19:22:23.805" level="INFO">Executing : Table Must Exist  |  sessions </msg>
<msg timestamp="20170913 19:22:23.805" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sessions' </msg>
<status status="PASS" endtime="20170913 19:22:23.806" starttime="20170913 19:22:23.805"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions_history</arg>
</arguments>
<msg timestamp="20170913 19:22:23.806" level="INFO">Executing : Table Must Exist  |  sessions_history </msg>
<msg timestamp="20170913 19:22:23.807" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sessions_history' </msg>
<status status="PASS" endtime="20170913 19:22:23.807" starttime="20170913 19:22:23.806"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes</arg>
</arguments>
<msg timestamp="20170913 19:22:23.808" level="INFO">Executing : Table Must Exist  |  sharedAppTypes </msg>
<msg timestamp="20170913 19:22:23.808" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedAppTypes' </msg>
<status status="PASS" endtime="20170913 19:22:23.808" starttime="20170913 19:22:23.807"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes_history</arg>
</arguments>
<msg timestamp="20170913 19:22:23.809" level="INFO">Executing : Table Must Exist  |  sharedAppTypes_history </msg>
<msg timestamp="20170913 19:22:23.809" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedAppTypes_history' </msg>
<status status="PASS" endtime="20170913 19:22:23.809" starttime="20170913 19:22:23.808"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes</arg>
</arguments>
<msg timestamp="20170913 19:22:23.810" level="INFO">Executing : Table Must Exist  |  sharedPackageTypes </msg>
<msg timestamp="20170913 19:22:23.810" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedPackageTypes' </msg>
<status status="PASS" endtime="20170913 19:22:23.810" starttime="20170913 19:22:23.809"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes_history</arg>
</arguments>
<msg timestamp="20170913 19:22:23.811" level="INFO">Executing : Table Must Exist  |  sharedPackageTypes_history </msg>
<msg timestamp="20170913 19:22:23.811" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedPackageTypes_history' </msg>
<status status="PASS" endtime="20170913 19:22:23.812" starttime="20170913 19:22:23.810"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>statuses</arg>
</arguments>
<msg timestamp="20170913 19:22:23.812" level="INFO">Executing : Table Must Exist  |  statuses </msg>
<msg timestamp="20170913 19:22:23.812" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='statuses' </msg>
<status status="PASS" endtime="20170913 19:22:23.813" starttime="20170913 19:22:23.812"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks</arg>
</arguments>
<msg timestamp="20170913 19:22:23.813" level="INFO">Executing : Table Must Exist  |  tasks </msg>
<msg timestamp="20170913 19:22:23.813" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='tasks' </msg>
<status status="PASS" endtime="20170913 19:22:23.814" starttime="20170913 19:22:23.813"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks_history</arg>
</arguments>
<msg timestamp="20170913 19:22:23.814" level="INFO">Executing : Table Must Exist  |  tasks_history </msg>
<msg timestamp="20170913 19:22:23.814" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='tasks_history' </msg>
<status status="PASS" endtime="20170913 19:22:23.815" starttime="20170913 19:22:23.814"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces</arg>
</arguments>
<msg timestamp="20170913 19:22:23.815" level="INFO">Executing : Table Must Exist  |  traces </msg>
<msg timestamp="20170913 19:22:23.815" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='traces' </msg>
<status status="PASS" endtime="20170913 19:22:23.816" starttime="20170913 19:22:23.815"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces_history</arg>
</arguments>
<msg timestamp="20170913 19:22:23.816" level="INFO">Executing : Table Must Exist  |  traces_history </msg>
<msg timestamp="20170913 19:22:23.816" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='traces_history' </msg>
<status status="PASS" endtime="20170913 19:22:23.817" starttime="20170913 19:22:23.816"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>userRights</arg>
</arguments>
<msg timestamp="20170913 19:22:23.817" level="INFO">Executing : Table Must Exist  |  userRights </msg>
<msg timestamp="20170913 19:22:23.817" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='userRights' </msg>
<status status="PASS" endtime="20170913 19:22:23.818" starttime="20170913 19:22:23.817"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups</arg>
</arguments>
<msg timestamp="20170913 19:22:23.818" level="INFO">Executing : Table Must Exist  |  usergroups </msg>
<msg timestamp="20170913 19:22:23.818" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='usergroups' </msg>
<status status="PASS" endtime="20170913 19:22:23.819" starttime="20170913 19:22:23.818"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups_history</arg>
</arguments>
<msg timestamp="20170913 19:22:23.819" level="INFO">Executing : Table Must Exist  |  usergroups_history </msg>
<msg timestamp="20170913 19:22:23.819" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='usergroups_history' </msg>
<status status="PASS" endtime="20170913 19:22:23.820" starttime="20170913 19:22:23.819"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users</arg>
</arguments>
<msg timestamp="20170913 19:22:23.820" level="INFO">Executing : Table Must Exist  |  users </msg>
<msg timestamp="20170913 19:22:23.820" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='users' </msg>
<status status="PASS" endtime="20170913 19:22:23.821" starttime="20170913 19:22:23.820"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users_history</arg>
</arguments>
<msg timestamp="20170913 19:22:23.821" level="INFO">Executing : Table Must Exist  |  users_history </msg>
<msg timestamp="20170913 19:22:23.821" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='users_history' </msg>
<status status="PASS" endtime="20170913 19:22:23.822" starttime="20170913 19:22:23.821"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>version</arg>
</arguments>
<msg timestamp="20170913 19:22:23.822" level="INFO">Executing : Table Must Exist  |  version </msg>
<msg timestamp="20170913 19:22:23.822" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='version' </msg>
<status status="PASS" endtime="20170913 19:22:23.823" starttime="20170913 19:22:23.822"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>versions</arg>
</arguments>
<msg timestamp="20170913 19:22:23.823" level="INFO">Executing : Table Must Exist  |  versions </msg>
<msg timestamp="20170913 19:22:23.823" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='versions' </msg>
<status status="PASS" endtime="20170913 19:22:23.824" starttime="20170913 19:22:23.823"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps</arg>
</arguments>
<msg timestamp="20170913 19:22:23.824" level="INFO">Executing : Table Must Exist  |  view_apps </msg>
<msg timestamp="20170913 19:22:23.824" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps' </msg>
<status status="PASS" endtime="20170913 19:22:23.825" starttime="20170913 19:22:23.824"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps_for_offering</arg>
</arguments>
<msg timestamp="20170913 19:22:23.826" level="INFO">Executing : Table Must Exist  |  view_apps_for_offering </msg>
<msg timestamp="20170913 19:22:23.826" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps_for_offering' </msg>
<status status="PASS" endtime="20170913 19:22:23.826" starttime="20170913 19:22:23.825"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps_for_offering_with_file_sizes</arg>
</arguments>
<msg timestamp="20170913 19:22:23.827" level="INFO">Executing : Table Must Exist  |  view_apps_for_offering_with_file_sizes </msg>
<msg timestamp="20170913 19:22:23.827" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps_for_offering_with_file_sizes' </msg>
<status status="PASS" endtime="20170913 19:22:23.827" starttime="20170913 19:22:23.826"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_datas</arg>
</arguments>
<msg timestamp="20170913 19:22:23.828" level="INFO">Executing : Table Must Exist  |  view_datas </msg>
<msg timestamp="20170913 19:22:23.828" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_datas' </msg>
<status status="PASS" endtime="20170913 19:22:23.829" starttime="20170913 19:22:23.828"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_executables</arg>
</arguments>
<msg timestamp="20170913 19:22:23.829" level="INFO">Executing : Table Must Exist  |  view_executables </msg>
<msg timestamp="20170913 19:22:23.829" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_executables' </msg>
<status status="PASS" endtime="20170913 19:22:23.829" starttime="20170913 19:22:23.829"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_groups</arg>
</arguments>
<msg timestamp="20170913 19:22:23.830" level="INFO">Executing : Table Must Exist  |  view_groups </msg>
<msg timestamp="20170913 19:22:23.830" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_groups' </msg>
<status status="PASS" endtime="20170913 19:22:23.831" starttime="20170913 19:22:23.830"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts</arg>
</arguments>
<msg timestamp="20170913 19:22:23.831" level="INFO">Executing : Table Must Exist  |  view_hosts </msg>
<msg timestamp="20170913 19:22:23.832" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts' </msg>
<status status="PASS" endtime="20170913 19:22:23.832" starttime="20170913 19:22:23.831"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_deployable</arg>
</arguments>
<msg timestamp="20170913 19:22:23.833" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_deployable </msg>
<msg timestamp="20170913 19:22:23.833" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_deployable' </msg>
<status status="PASS" endtime="20170913 19:22:23.833" starttime="20170913 19:22:23.833"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_deployable_and_shared</arg>
</arguments>
<msg timestamp="20170913 19:22:23.834" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_deployable_and_shared </msg>
<msg timestamp="20170913 19:22:23.834" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_deployable_and_shared' </msg>
<status status="PASS" endtime="20170913 19:22:23.834" starttime="20170913 19:22:23.834"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_shared</arg>
</arguments>
<msg timestamp="20170913 19:22:23.835" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_shared </msg>
<msg timestamp="20170913 19:22:23.835" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_shared' </msg>
<status status="PASS" endtime="20170913 19:22:23.836" starttime="20170913 19:22:23.834"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_sessions</arg>
</arguments>
<msg timestamp="20170913 19:22:23.836" level="INFO">Executing : Table Must Exist  |  view_sessions </msg>
<msg timestamp="20170913 19:22:23.836" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_sessions' </msg>
<status status="PASS" endtime="20170913 19:22:23.837" starttime="20170913 19:22:23.836"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_tasks</arg>
</arguments>
<msg timestamp="20170913 19:22:23.837" level="INFO">Executing : Table Must Exist  |  view_tasks </msg>
<msg timestamp="20170913 19:22:23.837" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_tasks' </msg>
<status status="PASS" endtime="20170913 19:22:23.838" starttime="20170913 19:22:23.837"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_traces</arg>
</arguments>
<msg timestamp="20170913 19:22:23.838" level="INFO">Executing : Table Must Exist  |  view_traces </msg>
<msg timestamp="20170913 19:22:23.838" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_traces' </msg>
<status status="PASS" endtime="20170913 19:22:23.839" starttime="20170913 19:22:23.838"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_usergroups</arg>
</arguments>
<msg timestamp="20170913 19:22:23.839" level="INFO">Executing : Table Must Exist  |  view_usergroups </msg>
<msg timestamp="20170913 19:22:23.839" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_usergroups' </msg>
<status status="PASS" endtime="20170913 19:22:23.840" starttime="20170913 19:22:23.839"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users</arg>
</arguments>
<msg timestamp="20170913 19:22:23.841" level="INFO">Executing : Table Must Exist  |  view_users </msg>
<msg timestamp="20170913 19:22:23.841" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users' </msg>
<status status="PASS" endtime="20170913 19:22:23.842" starttime="20170913 19:22:23.840"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_apps</arg>
</arguments>
<msg timestamp="20170913 19:22:23.842" level="INFO">Executing : Table Must Exist  |  view_users_apps </msg>
<msg timestamp="20170913 19:22:23.842" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_apps' </msg>
<status status="PASS" endtime="20170913 19:22:23.843" starttime="20170913 19:22:23.842"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_datas</arg>
</arguments>
<msg timestamp="20170913 19:22:23.843" level="INFO">Executing : Table Must Exist  |  view_users_datas </msg>
<msg timestamp="20170913 19:22:23.843" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_datas' </msg>
<status status="PASS" endtime="20170913 19:22:23.844" starttime="20170913 19:22:23.843"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_groups</arg>
</arguments>
<msg timestamp="20170913 19:22:23.844" level="INFO">Executing : Table Must Exist  |  view_users_groups </msg>
<msg timestamp="20170913 19:22:23.844" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_groups' </msg>
<status status="PASS" endtime="20170913 19:22:23.845" starttime="20170913 19:22:23.844"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_hosts</arg>
</arguments>
<msg timestamp="20170913 19:22:23.845" level="INFO">Executing : Table Must Exist  |  view_users_hosts </msg>
<msg timestamp="20170913 19:22:23.845" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_hosts' </msg>
<status status="PASS" endtime="20170913 19:22:23.846" starttime="20170913 19:22:23.845"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_sessions</arg>
</arguments>
<msg timestamp="20170913 19:22:23.846" level="INFO">Executing : Table Must Exist  |  view_users_sessions </msg>
<msg timestamp="20170913 19:22:23.846" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_sessions' </msg>
<status status="PASS" endtime="20170913 19:22:23.847" starttime="20170913 19:22:23.846"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_tasks</arg>
</arguments>
<msg timestamp="20170913 19:22:23.847" level="INFO">Executing : Table Must Exist  |  view_users_tasks </msg>
<msg timestamp="20170913 19:22:23.847" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_tasks' </msg>
<status status="PASS" endtime="20170913 19:22:23.848" starttime="20170913 19:22:23.847"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_traces</arg>
</arguments>
<msg timestamp="20170913 19:22:23.848" level="INFO">Executing : Table Must Exist  |  view_users_traces </msg>
<msg timestamp="20170913 19:22:23.848" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_traces' </msg>
<status status="PASS" endtime="20170913 19:22:23.849" starttime="20170913 19:22:23.848"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_usergroups</arg>
</arguments>
<msg timestamp="20170913 19:22:23.849" level="INFO">Executing : Table Must Exist  |  view_users_usergroups </msg>
<msg timestamp="20170913 19:22:23.849" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_usergroups' </msg>
<status status="PASS" endtime="20170913 19:22:23.850" starttime="20170913 19:22:23.849"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_users</arg>
</arguments>
<msg timestamp="20170913 19:22:23.850" level="INFO">Executing : Table Must Exist  |  view_users_users </msg>
<msg timestamp="20170913 19:22:23.850" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_users' </msg>
<status status="PASS" endtime="20170913 19:22:23.851" starttime="20170913 19:22:23.850"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_works</arg>
</arguments>
<msg timestamp="20170913 19:22:23.851" level="INFO">Executing : Table Must Exist  |  view_users_works </msg>
<msg timestamp="20170913 19:22:23.851" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_works' </msg>
<status status="PASS" endtime="20170913 19:22:23.852" starttime="20170913 19:22:23.851"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works</arg>
</arguments>
<msg timestamp="20170913 19:22:23.852" level="INFO">Executing : Table Must Exist  |  view_works </msg>
<msg timestamp="20170913 19:22:23.852" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works' </msg>
<status status="PASS" endtime="20170913 19:22:23.853" starttime="20170913 19:22:23.852"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works_for_billing</arg>
</arguments>
<msg timestamp="20170913 19:22:23.853" level="INFO">Executing : Table Must Exist  |  view_works_for_billing </msg>
<msg timestamp="20170913 19:22:23.853" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works_for_billing' </msg>
<status status="PASS" endtime="20170913 19:22:23.854" starttime="20170913 19:22:23.853"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works_for_billing_with_file_sizes</arg>
</arguments>
<msg timestamp="20170913 19:22:23.855" level="INFO">Executing : Table Must Exist  |  view_works_for_billing_with_file_sizes </msg>
<msg timestamp="20170913 19:22:23.855" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works_for_billing_with_file_sizes' </msg>
<status status="PASS" endtime="20170913 19:22:23.856" starttime="20170913 19:22:23.855"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works</arg>
</arguments>
<msg timestamp="20170913 19:22:23.856" level="INFO">Executing : Table Must Exist  |  works </msg>
<msg timestamp="20170913 19:22:23.856" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='works' </msg>
<status status="PASS" endtime="20170913 19:22:23.857" starttime="20170913 19:22:23.856"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works_history</arg>
</arguments>
<msg timestamp="20170913 19:22:23.857" level="INFO">Executing : Table Must Exist  |  works_history </msg>
<msg timestamp="20170913 19:22:23.857" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='works_history' </msg>
<status status="PASS" endtime="20170913 19:22:23.858" starttime="20170913 19:22:23.857"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170913 19:22:23.858" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170913 19:22:23.858" starttime="20170913 19:22:23.858"></status>
</kw>
<status status="PASS" endtime="20170913 19:22:23.858" starttime="20170913 19:22:23.858"></status>
</kw>
<status status="PASS" endtime="20170913 19:22:23.859" starttime="20170913 19:22:23.781"></status>
</kw>
<status status="PASS" endtime="20170913 19:22:23.859" starttime="20170913 19:22:23.781"></status>
</kw>
<kw name="Start XtremWeb Server" library="XWServer">
<arguments>
<arg>${DIST_XWHEP_PATH}</arg>
</arguments>
<kw name="File Should Exist" library="OperatingSystem">
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xtremweb.server.conf</arg>
</arguments>
<msg timestamp="20170913 19:22:23.860" html="yes" level="INFO">File '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf&lt;/a&gt;' exists.</msg>
<status status="PASS" endtime="20170913 19:22:23.860" starttime="20170913 19:22:23.859"></status>
</kw>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xtremweb.server.conf</arg>
</arguments>
<assign>
<var>${config_content}</var>
</assign>
<msg timestamp="20170913 19:22:23.860" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf&lt;/a&gt;'.</msg>
<msg timestamp="20170913 19:22:23.861" level="INFO">${config_content} = #
# Copyrights     : CNRS
# Author         : Oleg Lodygensky
# Acknowledgment : XtremWeb-HEP is based on XtremWeb 1.8.0 by inria : http://www.xtremweb.net/
# Web            : http://www.xtremweb-hep.o...</msg>
<status status="PASS" endtime="20170913 19:22:23.861" starttime="20170913 19:22:23.860"></status>
</kw>
<kw name="Remove String Using Regexp" library="String">
<doc>Removes ``patterns`` from the given ``string``.</doc>
<arguments>
<arg>${config_content}</arg>
<arg>LAUNCHERURL=${XWCONFIGURE.VALUES.XWUPGRADEURL}</arg>
</arguments>
<assign>
<var>${config_content_filtered}</var>
</assign>
<msg timestamp="20170913 19:22:23.861" level="INFO">${config_content_filtered} = #
# Copyrights     : CNRS
# Author         : Oleg Lodygensky
# Acknowledgment : XtremWeb-HEP is based on XtremWeb 1.8.0 by inria : http://www.xtremweb.net/
# Web            : http://www.xtremweb-hep.o...</msg>
<status status="PASS" endtime="20170913 19:22:23.861" starttime="20170913 19:22:23.861"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${config_content_filtered}</arg>
<arg>\## HTTPSPORT=443</arg>
<arg>HTTPSPORT=${XWCONFIGURE.VALUES.HTTPSPORT}</arg>
</arguments>
<assign>
<var>${config_content_filtered}</var>
</assign>
<msg timestamp="20170913 19:22:23.862" level="INFO">${config_content_filtered} = #
# Copyrights     : CNRS
# Author         : Oleg Lodygensky
# Acknowledgment : XtremWeb-HEP is based on XtremWeb 1.8.0 by inria : http://www.xtremweb.net/
# Web            : http://www.xtremweb-hep.o...</msg>
<status status="PASS" endtime="20170913 19:22:23.862" starttime="20170913 19:22:23.861"></status>
</kw>
<kw name="Create File" library="OperatingSystem">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xtremweb.server.conf</arg>
<arg>content=${config_content_filtered}</arg>
</arguments>
<msg timestamp="20170913 19:22:23.868" html="yes" level="INFO">Created file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170913 19:22:23.868" starttime="20170913 19:22:23.862"></status>
</kw>
<kw name="Remove File" library="OperatingSystem">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<msg timestamp="20170913 19:22:23.869" html="yes" level="INFO">Removed file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170913 19:22:23.869" starttime="20170913 19:22:23.868"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/bin/xtremweb.server console</arg>
<arg>shell=yes</arg>
<arg>stderr=STDOUT</arg>
<arg>stdout=${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<assign>
<var>${created_process}</var>
</assign>
<msg timestamp="20170913 19:22:23.871" level="INFO">Starting process:
/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/xtremweb.server console</msg>
<msg timestamp="20170913 19:22:23.874" level="INFO">${created_process} = 62</msg>
<status status="PASS" endtime="20170913 19:22:23.874" starttime="20170913 19:22:23.870"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SERVER_PROCESS}</arg>
<arg>${created_process}</arg>
</arguments>
<msg timestamp="20170913 19:22:23.875" level="INFO">${SERVER_PROCESS} = 62</msg>
<status status="PASS" endtime="20170913 19:22:23.876" starttime="20170913 19:22:23.875"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2 min</arg>
<arg>5 sec</arg>
<arg>Check XtremWeb Server Start From Log</arg>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<kw name="Check XtremWeb Server Start From Log" library="XWServer">
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<kw name="Log XtremWeb Process Log File" library="XWServer">
<kw name="Log File" library="OperatingSystem">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<msg timestamp="20170913 19:22:23.878" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170913 19:22:23.878" level="INFO"></msg>
<status status="PASS" endtime="20170913 19:22:23.878" starttime="20170913 19:22:23.877"></status>
</kw>
<status status="PASS" endtime="20170913 19:22:23.879" starttime="20170913 19:22:23.877"></status>
</kw>
<kw name="Grep File" library="OperatingSystem">
<doc>Returns the lines of the specified file that match the ``pattern``.</doc>
<arguments>
<arg>${log}</arg>
<arg>listening on port : ${XWCONFIGURE.VALUES.HTTPSPORT}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20170913 19:22:23.879" html="yes" level="INFO">Reading file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170913 19:22:23.879" level="INFO">0 out of 0 lines matched</msg>
<msg timestamp="20170913 19:22:23.880" level="INFO">${ret} = </msg>
<status status="PASS" endtime="20170913 19:22:23.880" starttime="20170913 19:22:23.879"></status>
</kw>
<kw name="Get Line Count" library="String">
<doc>Returns and logs the number of lines in the given string.</doc>
<arguments>
<arg>${ret}</arg>
</arguments>
<assign>
<var>${line_count}</var>
</assign>
<msg timestamp="20170913 19:22:23.880" level="INFO">0 lines</msg>
<msg timestamp="20170913 19:22:23.881" level="INFO">${line_count} = 0</msg>
<status status="PASS" endtime="20170913 19:22:23.881" starttime="20170913 19:22:23.880"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${line_count}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20170913 19:22:23.881" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20170913 19:22:23.881" level="FAIL">0 != 2</msg>
<status status="FAIL" endtime="20170913 19:22:23.881" starttime="20170913 19:22:23.881"></status>
</kw>
<status status="FAIL" endtime="20170913 19:22:23.881" starttime="20170913 19:22:23.876"></status>
</kw>
<kw name="Check XtremWeb Server Start From Log" library="XWServer">
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<kw name="Log XtremWeb Process Log File" library="XWServer">
<kw name="Log File" library="OperatingSystem">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<msg timestamp="20170913 19:22:28.885" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170913 19:22:28.892" level="INFO">Wed Sep 13 19:22:23 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : checking launch url
Wed Sep 13 19:22:23 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] WARNING : no launcher URL defined
Wed Sep 13 19:22:23 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : launching SmartSockets hub
[13/Sep/2017:19:22:26 +0000] [main_1] ERROR : setRole : role redefined ?! (was SERVER)
[13/Sep/2017:19:22:26 +0000] [xtremweb.database.DBConnPoolThread_main_1] INFO : Connection to database jdbc:mysql://localhost/xtremweb is ok, 70 created
[13/Sep/2017:19:22:26 +0000] [xtremweb.dispatcher.DBInterface_main_1] WARN : Can't retrieve any app
[13/Sep/2017:19:22:26 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't create ProxyValidator
[13/Sep/2017:19:22:26 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.io.FileNotFoundException: /tmp/castore (No such file or directory) (/tmp/castore (No such file or directory))
[13/Sep/2017:19:22:26 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't add CA certificates to keystore
[13/Sep/2017:19:22:26 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.lang.NullPointerException (null)
[13/Sep/2017:19:22:26 +0000] [xtremweb.dispatcher.HashTaskSet_TaskSet_14] INFO : TaskSet started (300000)
[13/Sep/2017:19:22:27 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : still waiting task set...
[13/Sep/2017:19:22:27 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : UDP server not started
[13/Sep/2017:19:22:27 +0000] [xtremweb.communications.TCPServer_TCPServerNIO_15] INFO : started, listening on port : 4321
log4j:WARN No appenders could be found for logger (org.eclipse.jetty.util.log).
log4j:WARN Please initialize the log4j system properly.
log4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.
[13/Sep/2017:19:22:27 +0000] [xtremweb.communications.HTTPServer_main_1] INFO : started, listening on port : 9443
[13/Sep/2017:19:22:27 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : FACEBOOK : java.net.MalformedURLException: no protocol: 
[13/Sep/2017:19:22:27 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : GOOGLE : java.net.MalformedURLException: no protocol: 
[13/Sep/2017:19:22:27 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : TWITTER : java.net.MalformedURLException: no protocol: 
[13/Sep/2017:19:22:27 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : YAHOO : java.net.MalformedURLException: no protocol: 
[13/Sep/2017:19:22:28 +0000] [main_1] ERROR : Can't add new entry to keystore
[13/Sep/2017:19:22:28 +0000] [main_1] WARN : javax.net.ssl.SSLHandshakeException: sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target (sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target)
[13/Sep/2017:19:22:28 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : XWHEP Dispatcher(10.6.0-head) started [Wed Sep 13 19:22:28 UTC 2017]
[13/Sep/2017:19:22:28 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : DB vendor  = mysql
[13/Sep/2017:19:22:28 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : mileStone  = 
[13/Sep/2017:19:22:28 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Time out   = 15000
[13/Sep/2017:19:22:28 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Disk opt'd = true
[13/Sep/2017:19:22:28 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Net  opt'd = true
[13/Sep/2017:19:22:28 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : NIO        = true
XWHEP Dispatcher started  Wed Sep 13 19:22:28 UTC 2017
Name             : vagrant-ubuntu-trusty-64
Version          : 10.6.0-head
Identity         : 
XWRole           : SERVER
Started on       : Wed Sep 13 19:22:26 UTC 2017
Scheduler        : xtremweb.dispatcher.MatchingScheduler
SmartSockets hub : 172.28.128.3/172.17.0.1/10.0.2.15-4329#52.9b.af.e6.cc.7c.00.00.8d.d3.02.42.7b.de.a1.dc~vagrant
Server HTTP      : true
Alive            : 300
Alive time out   : 900
Polling time out : 15000
Optimize zip     : true
Optimize network : true
NIO              : true
Comm layer       : xtremweb.communications.TCPClient
Socket time out  : 60000
Socket retries   : 50
Max connections  : 200
TCP port         : 4321
UDP port         : 4323
HTPP  port       : 80
HTPPS port       : 9443
Sun RPC interposition port : 4328
Sandbox path : /usr/bin/lxc
Sandbox launch args : 
Host &lt;host&gt;&lt;uid&gt;3bcefe4d-e02b-4294-b502-7a0289186086&lt;/uid&gt;&lt;accessrights&gt;0x755&lt;/accessrights&gt;&lt;name&gt;vagrant-ubuntu-trusty-64&lt;/name&gt;&lt;cpuload&gt;50&lt;/cpuload&gt;&lt;natedipaddr&gt;10.0.2.15&lt;/natedipaddr&gt;&lt;ipaddr&gt;10.0.2.15&lt;/ipaddr&gt;&lt;hwaddr&gt;&lt;/hwaddr&gt;&lt;timezone&gt;Etc/UTC&lt;/timezone&gt;&lt;os&gt;LINUX&lt;/os&gt;&lt;osversion&gt;3.13.0-129-generic&lt;/osversion&gt;&lt;javaversion&gt;1.8.0_141&lt;/javaversion&gt;&lt;javadatamodel&gt;64&lt;/javadatamodel&gt;&lt;cputype&gt;AMD64&lt;/cputype&gt;&lt;cpunb&gt;1&lt;/cpunb&gt;&lt;cpumodel&gt;unknown&lt;/cpumodel&gt;&lt;cpuspeed&gt;0&lt;/cpuspeed&gt;&lt;totalmem&gt;0&lt;/totalmem&gt;&lt;totalswap&gt;0&lt;/totalswap&gt;&lt;totaltmp&gt;40284&lt;/totaltmp&gt;&lt;freetmp&gt;37263&lt;/freetmp&gt;&lt;project&gt;&lt;/project&gt;&lt;active&gt;true&lt;/active&gt;&lt;incomingconnections&gt;false&lt;/incomingconnections&gt;&lt;available&gt;false&lt;/available&gt;&lt;pilotjob&gt;false&lt;/pilotjob&gt;&lt;sgid&gt;&lt;/sgid&gt;&lt;timeout&gt;15000&lt;/timeout&gt;&lt;traces&gt;false&lt;/traces&gt;&lt;acceptbin&gt;false&lt;/acceptbin&gt;&lt;version&gt;10.6.0-head&lt;/version&gt;&lt;/host&gt;
[13/Sep/2017:19:22:28 +0000] [xtremweb.communications.HTTPServer_HTTPServer_218] INFO : started, listening on port : 9443
</msg>
<status status="PASS" endtime="20170913 19:22:28.892" starttime="20170913 19:22:28.884"></status>
</kw>
<status status="PASS" endtime="20170913 19:22:28.893" starttime="20170913 19:22:28.883"></status>
</kw>
<kw name="Grep File" library="OperatingSystem">
<doc>Returns the lines of the specified file that match the ``pattern``.</doc>
<arguments>
<arg>${log}</arg>
<arg>listening on port : ${XWCONFIGURE.VALUES.HTTPSPORT}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20170913 19:22:28.894" html="yes" level="INFO">Reading file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170913 19:22:28.895" level="INFO">2 out of 59 lines matched</msg>
<msg timestamp="20170913 19:22:28.895" level="INFO">${ret} = [13/Sep/2017:19:22:27 +0000] [xtremweb.communications.HTTPServer_main_1] INFO : started, listening on port : 9443
[13/Sep/2017:19:22:28 +0000] [xtremweb.communications.HTTPServer_HTTPServer_218] INFO ...</msg>
<status status="PASS" endtime="20170913 19:22:28.895" starttime="20170913 19:22:28.893"></status>
</kw>
<kw name="Get Line Count" library="String">
<doc>Returns and logs the number of lines in the given string.</doc>
<arguments>
<arg>${ret}</arg>
</arguments>
<assign>
<var>${line_count}</var>
</assign>
<msg timestamp="20170913 19:22:28.895" level="INFO">2 lines</msg>
<msg timestamp="20170913 19:22:28.895" level="INFO">${line_count} = 2</msg>
<status status="PASS" endtime="20170913 19:22:28.896" starttime="20170913 19:22:28.895"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${line_count}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20170913 19:22:28.896" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170913 19:22:28.896" starttime="20170913 19:22:28.896"></status>
</kw>
<status status="PASS" endtime="20170913 19:22:28.896" starttime="20170913 19:22:28.883"></status>
</kw>
<status status="PASS" endtime="20170913 19:22:28.896" starttime="20170913 19:22:23.876"></status>
</kw>
<kw name="Log XtremWeb Process Log File" library="XWServer">
<kw name="Log File" library="OperatingSystem">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<msg timestamp="20170913 19:22:28.897" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170913 19:22:28.897" level="INFO">Wed Sep 13 19:22:23 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : checking launch url
Wed Sep 13 19:22:23 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] WARNING : no launcher URL defined
Wed Sep 13 19:22:23 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : launching SmartSockets hub
[13/Sep/2017:19:22:26 +0000] [main_1] ERROR : setRole : role redefined ?! (was SERVER)
[13/Sep/2017:19:22:26 +0000] [xtremweb.database.DBConnPoolThread_main_1] INFO : Connection to database jdbc:mysql://localhost/xtremweb is ok, 70 created
[13/Sep/2017:19:22:26 +0000] [xtremweb.dispatcher.DBInterface_main_1] WARN : Can't retrieve any app
[13/Sep/2017:19:22:26 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't create ProxyValidator
[13/Sep/2017:19:22:26 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.io.FileNotFoundException: /tmp/castore (No such file or directory) (/tmp/castore (No such file or directory))
[13/Sep/2017:19:22:26 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't add CA certificates to keystore
[13/Sep/2017:19:22:26 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.lang.NullPointerException (null)
[13/Sep/2017:19:22:26 +0000] [xtremweb.dispatcher.HashTaskSet_TaskSet_14] INFO : TaskSet started (300000)
[13/Sep/2017:19:22:27 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : still waiting task set...
[13/Sep/2017:19:22:27 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : UDP server not started
[13/Sep/2017:19:22:27 +0000] [xtremweb.communications.TCPServer_TCPServerNIO_15] INFO : started, listening on port : 4321
log4j:WARN No appenders could be found for logger (org.eclipse.jetty.util.log).
log4j:WARN Please initialize the log4j system properly.
log4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.
[13/Sep/2017:19:22:27 +0000] [xtremweb.communications.HTTPServer_main_1] INFO : started, listening on port : 9443
[13/Sep/2017:19:22:27 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : FACEBOOK : java.net.MalformedURLException: no protocol: 
[13/Sep/2017:19:22:27 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : GOOGLE : java.net.MalformedURLException: no protocol: 
[13/Sep/2017:19:22:27 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : TWITTER : java.net.MalformedURLException: no protocol: 
[13/Sep/2017:19:22:27 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : YAHOO : java.net.MalformedURLException: no protocol: 
[13/Sep/2017:19:22:28 +0000] [main_1] ERROR : Can't add new entry to keystore
[13/Sep/2017:19:22:28 +0000] [main_1] WARN : javax.net.ssl.SSLHandshakeException: sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target (sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target)
[13/Sep/2017:19:22:28 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : XWHEP Dispatcher(10.6.0-head) started [Wed Sep 13 19:22:28 UTC 2017]
[13/Sep/2017:19:22:28 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : DB vendor  = mysql
[13/Sep/2017:19:22:28 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : mileStone  = 
[13/Sep/2017:19:22:28 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Time out   = 15000
[13/Sep/2017:19:22:28 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Disk opt'd = true
[13/Sep/2017:19:22:28 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Net  opt'd = true
[13/Sep/2017:19:22:28 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : NIO        = true
XWHEP Dispatcher started  Wed Sep 13 19:22:28 UTC 2017
Name             : vagrant-ubuntu-trusty-64
Version          : 10.6.0-head
Identity         : 
XWRole           : SERVER
Started on       : Wed Sep 13 19:22:26 UTC 2017
Scheduler        : xtremweb.dispatcher.MatchingScheduler
SmartSockets hub : 172.28.128.3/172.17.0.1/10.0.2.15-4329#52.9b.af.e6.cc.7c.00.00.8d.d3.02.42.7b.de.a1.dc~vagrant
Server HTTP      : true
Alive            : 300
Alive time out   : 900
Polling time out : 15000
Optimize zip     : true
Optimize network : true
NIO              : true
Comm layer       : xtremweb.communications.TCPClient
Socket time out  : 60000
Socket retries   : 50
Max connections  : 200
TCP port         : 4321
UDP port         : 4323
HTPP  port       : 80
HTPPS port       : 9443
Sun RPC interposition port : 4328
Sandbox path : /usr/bin/lxc
Sandbox launch args : 
Host &lt;host&gt;&lt;uid&gt;3bcefe4d-e02b-4294-b502-7a0289186086&lt;/uid&gt;&lt;accessrights&gt;0x755&lt;/accessrights&gt;&lt;name&gt;vagrant-ubuntu-trusty-64&lt;/name&gt;&lt;cpuload&gt;50&lt;/cpuload&gt;&lt;natedipaddr&gt;10.0.2.15&lt;/natedipaddr&gt;&lt;ipaddr&gt;10.0.2.15&lt;/ipaddr&gt;&lt;hwaddr&gt;&lt;/hwaddr&gt;&lt;timezone&gt;Etc/UTC&lt;/timezone&gt;&lt;os&gt;LINUX&lt;/os&gt;&lt;osversion&gt;3.13.0-129-generic&lt;/osversion&gt;&lt;javaversion&gt;1.8.0_141&lt;/javaversion&gt;&lt;javadatamodel&gt;64&lt;/javadatamodel&gt;&lt;cputype&gt;AMD64&lt;/cputype&gt;&lt;cpunb&gt;1&lt;/cpunb&gt;&lt;cpumodel&gt;unknown&lt;/cpumodel&gt;&lt;cpuspeed&gt;0&lt;/cpuspeed&gt;&lt;totalmem&gt;0&lt;/totalmem&gt;&lt;totalswap&gt;0&lt;/totalswap&gt;&lt;totaltmp&gt;40284&lt;/totaltmp&gt;&lt;freetmp&gt;37263&lt;/freetmp&gt;&lt;project&gt;&lt;/project&gt;&lt;active&gt;true&lt;/active&gt;&lt;incomingconnections&gt;false&lt;/incomingconnections&gt;&lt;available&gt;false&lt;/available&gt;&lt;pilotjob&gt;false&lt;/pilotjob&gt;&lt;sgid&gt;&lt;/sgid&gt;&lt;timeout&gt;15000&lt;/timeout&gt;&lt;traces&gt;false&lt;/traces&gt;&lt;acceptbin&gt;false&lt;/acceptbin&gt;&lt;version&gt;10.6.0-head&lt;/version&gt;&lt;/host&gt;
[13/Sep/2017:19:22:28 +0000] [xtremweb.communications.HTTPServer_HTTPServer_218] INFO : started, listening on port : 9443
</msg>
<status status="PASS" endtime="20170913 19:22:28.898" starttime="20170913 19:22:28.897"></status>
</kw>
<status status="PASS" endtime="20170913 19:22:28.898" starttime="20170913 19:22:28.896"></status>
</kw>
<status status="PASS" endtime="20170913 19:22:28.898" starttime="20170913 19:22:23.859"></status>
</kw>
<kw name="Start XtremWeb Worker" library="XWWorker">
<arguments>
<arg>${DIST_XWHEP_PATH}</arg>
</arguments>
<kw name="File Should Exist" library="OperatingSystem">
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xtremweb.worker.conf</arg>
</arguments>
<msg timestamp="20170913 19:22:28.899" html="yes" level="INFO">File '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf&lt;/a&gt;' exists.</msg>
<status status="PASS" endtime="20170913 19:22:28.899" starttime="20170913 19:22:28.898"></status>
</kw>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xtremweb.worker.conf</arg>
</arguments>
<assign>
<var>${config_content}</var>
</assign>
<msg timestamp="20170913 19:22:28.900" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf&lt;/a&gt;'.</msg>
<msg timestamp="20170913 19:22:28.905" level="INFO">${config_content} = #
# Copyrights     : CNRS
# Author         : Oleg Lodygensky
# Acknowledgment : XtremWeb-HEP is based on XtremWeb 1.8.0 by inria : http://www.xtremweb.net/
# Web            : http://www.xtremweb-hep.o...</msg>
<status status="PASS" endtime="20170913 19:22:28.905" starttime="20170913 19:22:28.899"></status>
</kw>
<kw name="Remove String Using Regexp" library="String">
<doc>Removes ``patterns`` from the given ``string``.</doc>
<arguments>
<arg>${config_content}</arg>
<arg>LAUNCHERURL=${XWCONFIGURE.VALUES.XWUPGRADEURL}</arg>
</arguments>
<assign>
<var>${config_content_filtered}</var>
</assign>
<msg timestamp="20170913 19:22:28.906" level="INFO">${config_content_filtered} = #
# Copyrights     : CNRS
# Author         : Oleg Lodygensky
# Acknowledgment : XtremWeb-HEP is based on XtremWeb 1.8.0 by inria : http://www.xtremweb.net/
# Web            : http://www.xtremweb-hep.o...</msg>
<status status="PASS" endtime="20170913 19:22:28.906" starttime="20170913 19:22:28.905"></status>
</kw>
<kw name="Create File" library="OperatingSystem">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xtremweb.worker.conf</arg>
<arg>content=${config_content_filtered}</arg>
</arguments>
<msg timestamp="20170913 19:22:28.912" html="yes" level="INFO">Created file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170913 19:22:28.913" starttime="20170913 19:22:28.906"></status>
</kw>
<kw name="Remove File" library="OperatingSystem">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.worker.process.log</arg>
</arguments>
<msg timestamp="20170913 19:22:28.915" html="yes" level="INFO">Removed file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.worker.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.worker.process.log&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170913 19:22:28.915" starttime="20170913 19:22:28.913"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/bin/xtremweb.worker console</arg>
<arg>shell=yes</arg>
<arg>stderr=STDOUT</arg>
<arg>stdout=${DIST_XWHEP_PATH}/xwhep.worker.process.log</arg>
</arguments>
<assign>
<var>${created_process}</var>
</assign>
<msg timestamp="20170913 19:22:28.917" level="INFO">Starting process:
/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/xtremweb.worker console</msg>
<msg timestamp="20170913 19:22:28.920" level="INFO">${created_process} = 63</msg>
<status status="PASS" endtime="20170913 19:22:28.920" starttime="20170913 19:22:28.916"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${WORKER_PROCESS}</arg>
<arg>${created_process}</arg>
</arguments>
<msg timestamp="20170913 19:22:28.922" level="INFO">${WORKER_PROCESS} = 63</msg>
<status status="PASS" endtime="20170913 19:22:28.922" starttime="20170913 19:22:28.921"></status>
</kw>
<kw name="Log File" library="OperatingSystem">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.worker.process.log</arg>
</arguments>
<msg timestamp="20170913 19:22:28.923" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.worker.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.worker.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170913 19:22:28.925" level="INFO"></msg>
<status status="PASS" endtime="20170913 19:22:28.925" starttime="20170913 19:22:28.923"></status>
</kw>
<status status="PASS" endtime="20170913 19:22:28.925" starttime="20170913 19:22:28.898"></status>
</kw>
<status status="PASS" endtime="20170913 19:22:28.925" starttime="20170913 19:22:23.781"></status>
</kw>
<status status="PASS" endtime="20170913 19:22:28.925" starttime="20170913 19:22:23.562"></status>
</kw>
<kw name="XWSENDAPPCommand" library="XWClient">
<doc>Usage : SENDAPP appName appType cpuType osName URI | UID : inserts/updates an application; URI or UID points to binary file ; application name must be the first parameter</doc>
<arguments>
<arg>ls</arg>
<arg>DEPLOYABLE</arg>
<arg>LINUX</arg>
<arg>AMD64</arg>
<arg>/bin/ls</arg>
</arguments>
<assign>
<var>${uid}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd ${DIST_XWHEP_PATH}/bin &amp;&amp; ./xwsendapp ${appName} ${appType} ${cpuType} ${osName} ${uri-udi}</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${cmd_result}</var>
</assign>
<msg timestamp="20170913 19:22:28.927" level="INFO">Starting process:
cd /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin &amp;&amp; ./xwsendapp ls DEPLOYABLE LINUX AMD64 /bin/ls</msg>
<msg timestamp="20170913 19:22:28.931" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170913 19:22:29.964" level="INFO">Process completed.</msg>
<msg timestamp="20170913 19:22:29.965" level="INFO">${cmd_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170913 19:22:29.965" starttime="20170913 19:22:28.926"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stderr}</arg>
</arguments>
<msg timestamp="20170913 19:22:29.965" level="INFO"></msg>
<status status="PASS" endtime="20170913 19:22:29.966" starttime="20170913 19:22:29.965"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
</arguments>
<msg timestamp="20170913 19:22:29.966" level="INFO">xw://vagrant-ubuntu-trusty-64/82d8855c-4d8f-473d-a3ff-e0874143c40d</msg>
<status status="PASS" endtime="20170913 19:22:29.966" starttime="20170913 19:22:29.966"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${cmd_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170913 19:22:29.966" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170913 19:22:29.966" starttime="20170913 19:22:29.966"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
<arg>-36</arg>
</arguments>
<assign>
<var>${uid}</var>
</assign>
<msg timestamp="20170913 19:22:29.967" level="INFO">${uid} = 82d8855c-4d8f-473d-a3ff-e0874143c40d</msg>
<status status="PASS" endtime="20170913 19:22:29.967" starttime="20170913 19:22:29.966"></status>
</kw>
<msg timestamp="20170913 19:22:29.967" level="INFO">${uid} = 82d8855c-4d8f-473d-a3ff-e0874143c40d</msg>
<status status="PASS" endtime="20170913 19:22:29.967" starttime="20170913 19:22:28.926"></status>
</kw>
<kw name="Count From Apps Where Uid" library="XWServer">
<arguments>
<arg>${uid}</arg>
<arg>1</arg>
</arguments>
<kw name="Count From Table Where Uid" library="MySql">
<arguments>
<arg>apps</arg>
<arg>${uid}</arg>
<arg>${countExpected}</arg>
</arguments>
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170913 19:22:29.969" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170913 19:22:29.970" starttime="20170913 19:22:29.968"></status>
</kw>
<status status="PASS" endtime="20170913 19:22:29.970" starttime="20170913 19:22:29.968"></status>
</kw>
<kw name="Row Count Is Equal To X" library="DatabaseLibrary">
<doc>Check if the number of rows returned from `selectStatement` is equal to the value submitted. If not, then this</doc>
<arguments>
<arg>SELECT * FROM ${table} WHERE uid = '${uid}'</arg>
<arg>${countExpected}</arg>
</arguments>
<msg timestamp="20170913 19:22:29.970" level="INFO">Executing : Row Count Is Equal To X  |  SELECT * FROM apps WHERE uid = '82d8855c-4d8f-473d-a3ff-e0874143c40d'  |  1 </msg>
<msg timestamp="20170913 19:22:29.970" level="INFO">Executing : Row Count  |  SELECT * FROM apps WHERE uid = '82d8855c-4d8f-473d-a3ff-e0874143c40d' </msg>
<status status="PASS" endtime="20170913 19:22:29.972" starttime="20170913 19:22:29.970"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170913 19:22:29.972" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170913 19:22:29.972" starttime="20170913 19:22:29.972"></status>
</kw>
<status status="PASS" endtime="20170913 19:22:29.973" starttime="20170913 19:22:29.972"></status>
</kw>
<status status="PASS" endtime="20170913 19:22:29.973" starttime="20170913 19:22:29.968"></status>
</kw>
<status status="PASS" endtime="20170913 19:22:29.973" starttime="20170913 19:22:29.967"></status>
</kw>
<kw type="teardown" name="End XWtremWeb Command Test" library="XWCommon">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Nothing to do</arg>
</arguments>
<msg timestamp="20170913 19:22:29.973" level="INFO">Nothing to do</msg>
<status status="PASS" endtime="20170913 19:22:29.974" starttime="20170913 19:22:29.973"></status>
</kw>
<status status="PASS" endtime="20170913 19:22:29.974" starttime="20170913 19:22:29.973"></status>
</kw>
<doc>Testing XWSendapp cmd</doc>
<tags>
<tag>CommandLine Tests</tag>
</tags>
<status status="PASS" endtime="20170913 19:22:29.974" critical="yes" starttime="20170913 19:22:23.561"></status>
</test>
<test id="s1-s6-t3" name="Test XWSubmit and XWResults Command On LS Binary">
<kw type="setup" name="Begin XWtremWeb Command Test" library="XWCommon">
<kw name="Ping XWtremWeb Database" library="XWServer">
<kw name="Xtremweb Tables Must Exist" library="MySql">
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170913 19:22:29.987" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170913 19:22:29.988" starttime="20170913 19:22:29.987"></status>
</kw>
<status status="PASS" endtime="20170913 19:22:29.989" starttime="20170913 19:22:29.987"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>appTypes</arg>
</arguments>
<msg timestamp="20170913 19:22:29.989" level="INFO">Executing : Table Must Exist  |  appTypes </msg>
<msg timestamp="20170913 19:22:29.989" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='appTypes' </msg>
<status status="PASS" endtime="20170913 19:22:29.990" starttime="20170913 19:22:29.989"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps</arg>
</arguments>
<msg timestamp="20170913 19:22:29.990" level="INFO">Executing : Table Must Exist  |  apps </msg>
<msg timestamp="20170913 19:22:29.990" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='apps' </msg>
<status status="PASS" endtime="20170913 19:22:29.991" starttime="20170913 19:22:29.990"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps_history</arg>
</arguments>
<msg timestamp="20170913 19:22:29.991" level="INFO">Executing : Table Must Exist  |  apps_history </msg>
<msg timestamp="20170913 19:22:29.991" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='apps_history' </msg>
<status status="PASS" endtime="20170913 19:22:29.993" starttime="20170913 19:22:29.991"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>cpuTypes</arg>
</arguments>
<msg timestamp="20170913 19:22:29.993" level="INFO">Executing : Table Must Exist  |  cpuTypes </msg>
<msg timestamp="20170913 19:22:29.993" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='cpuTypes' </msg>
<status status="PASS" endtime="20170913 19:22:29.994" starttime="20170913 19:22:29.993"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>dataTypes</arg>
</arguments>
<msg timestamp="20170913 19:22:29.994" level="INFO">Executing : Table Must Exist  |  dataTypes </msg>
<msg timestamp="20170913 19:22:29.994" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='dataTypes' </msg>
<status status="PASS" endtime="20170913 19:22:29.994" starttime="20170913 19:22:29.994"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas</arg>
</arguments>
<msg timestamp="20170913 19:22:29.995" level="INFO">Executing : Table Must Exist  |  datas </msg>
<msg timestamp="20170913 19:22:29.995" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='datas' </msg>
<status status="PASS" endtime="20170913 19:22:29.995" starttime="20170913 19:22:29.994"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas_history</arg>
</arguments>
<msg timestamp="20170913 19:22:29.996" level="INFO">Executing : Table Must Exist  |  datas_history </msg>
<msg timestamp="20170913 19:22:29.996" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='datas_history' </msg>
<status status="PASS" endtime="20170913 19:22:29.996" starttime="20170913 19:22:29.996"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables</arg>
</arguments>
<msg timestamp="20170913 19:22:29.997" level="INFO">Executing : Table Must Exist  |  executables </msg>
<msg timestamp="20170913 19:22:29.997" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='executables' </msg>
<status status="PASS" endtime="20170913 19:22:29.997" starttime="20170913 19:22:29.997"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables_history</arg>
</arguments>
<msg timestamp="20170913 19:22:29.998" level="INFO">Executing : Table Must Exist  |  executables_history </msg>
<msg timestamp="20170913 19:22:29.998" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='executables_history' </msg>
<status status="PASS" endtime="20170913 19:22:29.998" starttime="20170913 19:22:29.998"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups</arg>
</arguments>
<msg timestamp="20170913 19:22:29.999" level="INFO">Executing : Table Must Exist  |  groups </msg>
<msg timestamp="20170913 19:22:29.999" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='groups' </msg>
<status status="PASS" endtime="20170913 19:22:29.999" starttime="20170913 19:22:29.998"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups_history</arg>
</arguments>
<msg timestamp="20170913 19:22:30.000" level="INFO">Executing : Table Must Exist  |  groups_history </msg>
<msg timestamp="20170913 19:22:30.000" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='groups_history' </msg>
<status status="PASS" endtime="20170913 19:22:30.000" starttime="20170913 19:22:29.999"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts</arg>
</arguments>
<msg timestamp="20170913 19:22:30.001" level="INFO">Executing : Table Must Exist  |  hosts </msg>
<msg timestamp="20170913 19:22:30.001" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='hosts' </msg>
<status status="PASS" endtime="20170913 19:22:30.006" starttime="20170913 19:22:30.000"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts_history</arg>
</arguments>
<msg timestamp="20170913 19:22:30.006" level="INFO">Executing : Table Must Exist  |  hosts_history </msg>
<msg timestamp="20170913 19:22:30.006" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='hosts_history' </msg>
<status status="PASS" endtime="20170913 19:22:30.007" starttime="20170913 19:22:30.006"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships</arg>
</arguments>
<msg timestamp="20170913 19:22:30.007" level="INFO">Executing : Table Must Exist  |  memberships </msg>
<msg timestamp="20170913 19:22:30.007" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='memberships' </msg>
<status status="PASS" endtime="20170913 19:22:30.008" starttime="20170913 19:22:30.007"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships_history</arg>
</arguments>
<msg timestamp="20170913 19:22:30.008" level="INFO">Executing : Table Must Exist  |  memberships_history </msg>
<msg timestamp="20170913 19:22:30.008" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='memberships_history' </msg>
<status status="PASS" endtime="20170913 19:22:30.009" starttime="20170913 19:22:30.008"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>oses</arg>
</arguments>
<msg timestamp="20170913 19:22:30.009" level="INFO">Executing : Table Must Exist  |  oses </msg>
<msg timestamp="20170913 19:22:30.009" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='oses' </msg>
<status status="PASS" endtime="20170913 19:22:30.010" starttime="20170913 19:22:30.009"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>packageTypes</arg>
</arguments>
<msg timestamp="20170913 19:22:30.010" level="INFO">Executing : Table Must Exist  |  packageTypes </msg>
<msg timestamp="20170913 19:22:30.010" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='packageTypes' </msg>
<status status="PASS" endtime="20170913 19:22:30.011" starttime="20170913 19:22:30.010"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions</arg>
</arguments>
<msg timestamp="20170913 19:22:30.011" level="INFO">Executing : Table Must Exist  |  sessions </msg>
<msg timestamp="20170913 19:22:30.012" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sessions' </msg>
<status status="PASS" endtime="20170913 19:22:30.012" starttime="20170913 19:22:30.011"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions_history</arg>
</arguments>
<msg timestamp="20170913 19:22:30.013" level="INFO">Executing : Table Must Exist  |  sessions_history </msg>
<msg timestamp="20170913 19:22:30.013" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sessions_history' </msg>
<status status="PASS" endtime="20170913 19:22:30.013" starttime="20170913 19:22:30.012"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes</arg>
</arguments>
<msg timestamp="20170913 19:22:30.014" level="INFO">Executing : Table Must Exist  |  sharedAppTypes </msg>
<msg timestamp="20170913 19:22:30.014" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedAppTypes' </msg>
<status status="PASS" endtime="20170913 19:22:30.014" starttime="20170913 19:22:30.014"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes_history</arg>
</arguments>
<msg timestamp="20170913 19:22:30.015" level="INFO">Executing : Table Must Exist  |  sharedAppTypes_history </msg>
<msg timestamp="20170913 19:22:30.015" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedAppTypes_history' </msg>
<status status="PASS" endtime="20170913 19:22:30.015" starttime="20170913 19:22:30.014"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes</arg>
</arguments>
<msg timestamp="20170913 19:22:30.016" level="INFO">Executing : Table Must Exist  |  sharedPackageTypes </msg>
<msg timestamp="20170913 19:22:30.016" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedPackageTypes' </msg>
<status status="PASS" endtime="20170913 19:22:30.017" starttime="20170913 19:22:30.016"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes_history</arg>
</arguments>
<msg timestamp="20170913 19:22:30.017" level="INFO">Executing : Table Must Exist  |  sharedPackageTypes_history </msg>
<msg timestamp="20170913 19:22:30.018" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedPackageTypes_history' </msg>
<status status="PASS" endtime="20170913 19:22:30.020" starttime="20170913 19:22:30.017"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>statuses</arg>
</arguments>
<msg timestamp="20170913 19:22:30.020" level="INFO">Executing : Table Must Exist  |  statuses </msg>
<msg timestamp="20170913 19:22:30.020" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='statuses' </msg>
<status status="PASS" endtime="20170913 19:22:30.021" starttime="20170913 19:22:30.020"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks</arg>
</arguments>
<msg timestamp="20170913 19:22:30.021" level="INFO">Executing : Table Must Exist  |  tasks </msg>
<msg timestamp="20170913 19:22:30.021" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='tasks' </msg>
<status status="PASS" endtime="20170913 19:22:30.022" starttime="20170913 19:22:30.021"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks_history</arg>
</arguments>
<msg timestamp="20170913 19:22:30.023" level="INFO">Executing : Table Must Exist  |  tasks_history </msg>
<msg timestamp="20170913 19:22:30.023" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='tasks_history' </msg>
<status status="PASS" endtime="20170913 19:22:30.024" starttime="20170913 19:22:30.022"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces</arg>
</arguments>
<msg timestamp="20170913 19:22:30.024" level="INFO">Executing : Table Must Exist  |  traces </msg>
<msg timestamp="20170913 19:22:30.024" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='traces' </msg>
<status status="PASS" endtime="20170913 19:22:30.025" starttime="20170913 19:22:30.024"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces_history</arg>
</arguments>
<msg timestamp="20170913 19:22:30.026" level="INFO">Executing : Table Must Exist  |  traces_history </msg>
<msg timestamp="20170913 19:22:30.026" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='traces_history' </msg>
<status status="PASS" endtime="20170913 19:22:30.027" starttime="20170913 19:22:30.026"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>userRights</arg>
</arguments>
<msg timestamp="20170913 19:22:30.028" level="INFO">Executing : Table Must Exist  |  userRights </msg>
<msg timestamp="20170913 19:22:30.028" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='userRights' </msg>
<status status="PASS" endtime="20170913 19:22:30.029" starttime="20170913 19:22:30.027"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups</arg>
</arguments>
<msg timestamp="20170913 19:22:30.029" level="INFO">Executing : Table Must Exist  |  usergroups </msg>
<msg timestamp="20170913 19:22:30.029" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='usergroups' </msg>
<status status="PASS" endtime="20170913 19:22:30.031" starttime="20170913 19:22:30.029"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups_history</arg>
</arguments>
<msg timestamp="20170913 19:22:30.031" level="INFO">Executing : Table Must Exist  |  usergroups_history </msg>
<msg timestamp="20170913 19:22:30.031" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='usergroups_history' </msg>
<status status="PASS" endtime="20170913 19:22:30.032" starttime="20170913 19:22:30.031"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users</arg>
</arguments>
<msg timestamp="20170913 19:22:30.033" level="INFO">Executing : Table Must Exist  |  users </msg>
<msg timestamp="20170913 19:22:30.033" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='users' </msg>
<status status="PASS" endtime="20170913 19:22:30.034" starttime="20170913 19:22:30.032"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users_history</arg>
</arguments>
<msg timestamp="20170913 19:22:30.034" level="INFO">Executing : Table Must Exist  |  users_history </msg>
<msg timestamp="20170913 19:22:30.034" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='users_history' </msg>
<status status="PASS" endtime="20170913 19:22:30.035" starttime="20170913 19:22:30.034"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>version</arg>
</arguments>
<msg timestamp="20170913 19:22:30.035" level="INFO">Executing : Table Must Exist  |  version </msg>
<msg timestamp="20170913 19:22:30.035" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='version' </msg>
<status status="PASS" endtime="20170913 19:22:30.036" starttime="20170913 19:22:30.035"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>versions</arg>
</arguments>
<msg timestamp="20170913 19:22:30.037" level="INFO">Executing : Table Must Exist  |  versions </msg>
<msg timestamp="20170913 19:22:30.037" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='versions' </msg>
<status status="PASS" endtime="20170913 19:22:30.037" starttime="20170913 19:22:30.036"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps</arg>
</arguments>
<msg timestamp="20170913 19:22:30.038" level="INFO">Executing : Table Must Exist  |  view_apps </msg>
<msg timestamp="20170913 19:22:30.038" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps' </msg>
<status status="PASS" endtime="20170913 19:22:30.039" starttime="20170913 19:22:30.038"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps_for_offering</arg>
</arguments>
<msg timestamp="20170913 19:22:30.039" level="INFO">Executing : Table Must Exist  |  view_apps_for_offering </msg>
<msg timestamp="20170913 19:22:30.039" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps_for_offering' </msg>
<status status="PASS" endtime="20170913 19:22:30.040" starttime="20170913 19:22:30.039"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps_for_offering_with_file_sizes</arg>
</arguments>
<msg timestamp="20170913 19:22:30.041" level="INFO">Executing : Table Must Exist  |  view_apps_for_offering_with_file_sizes </msg>
<msg timestamp="20170913 19:22:30.041" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps_for_offering_with_file_sizes' </msg>
<status status="PASS" endtime="20170913 19:22:30.042" starttime="20170913 19:22:30.041"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_datas</arg>
</arguments>
<msg timestamp="20170913 19:22:30.043" level="INFO">Executing : Table Must Exist  |  view_datas </msg>
<msg timestamp="20170913 19:22:30.043" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_datas' </msg>
<status status="PASS" endtime="20170913 19:22:30.044" starttime="20170913 19:22:30.042"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_executables</arg>
</arguments>
<msg timestamp="20170913 19:22:30.044" level="INFO">Executing : Table Must Exist  |  view_executables </msg>
<msg timestamp="20170913 19:22:30.044" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_executables' </msg>
<status status="PASS" endtime="20170913 19:22:30.045" starttime="20170913 19:22:30.044"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_groups</arg>
</arguments>
<msg timestamp="20170913 19:22:30.045" level="INFO">Executing : Table Must Exist  |  view_groups </msg>
<msg timestamp="20170913 19:22:30.045" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_groups' </msg>
<status status="PASS" endtime="20170913 19:22:30.046" starttime="20170913 19:22:30.045"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts</arg>
</arguments>
<msg timestamp="20170913 19:22:30.047" level="INFO">Executing : Table Must Exist  |  view_hosts </msg>
<msg timestamp="20170913 19:22:30.047" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts' </msg>
<status status="PASS" endtime="20170913 19:22:30.048" starttime="20170913 19:22:30.047"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_deployable</arg>
</arguments>
<msg timestamp="20170913 19:22:30.048" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_deployable </msg>
<msg timestamp="20170913 19:22:30.048" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_deployable' </msg>
<status status="PASS" endtime="20170913 19:22:30.049" starttime="20170913 19:22:30.048"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_deployable_and_shared</arg>
</arguments>
<msg timestamp="20170913 19:22:30.049" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_deployable_and_shared </msg>
<msg timestamp="20170913 19:22:30.049" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_deployable_and_shared' </msg>
<status status="PASS" endtime="20170913 19:22:30.051" starttime="20170913 19:22:30.049"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_shared</arg>
</arguments>
<msg timestamp="20170913 19:22:30.051" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_shared </msg>
<msg timestamp="20170913 19:22:30.051" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_shared' </msg>
<status status="PASS" endtime="20170913 19:22:30.052" starttime="20170913 19:22:30.051"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_sessions</arg>
</arguments>
<msg timestamp="20170913 19:22:30.052" level="INFO">Executing : Table Must Exist  |  view_sessions </msg>
<msg timestamp="20170913 19:22:30.052" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_sessions' </msg>
<status status="PASS" endtime="20170913 19:22:30.053" starttime="20170913 19:22:30.052"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_tasks</arg>
</arguments>
<msg timestamp="20170913 19:22:30.053" level="INFO">Executing : Table Must Exist  |  view_tasks </msg>
<msg timestamp="20170913 19:22:30.054" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_tasks' </msg>
<status status="PASS" endtime="20170913 19:22:30.054" starttime="20170913 19:22:30.053"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_traces</arg>
</arguments>
<msg timestamp="20170913 19:22:30.055" level="INFO">Executing : Table Must Exist  |  view_traces </msg>
<msg timestamp="20170913 19:22:30.055" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_traces' </msg>
<status status="PASS" endtime="20170913 19:22:30.055" starttime="20170913 19:22:30.054"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_usergroups</arg>
</arguments>
<msg timestamp="20170913 19:22:30.056" level="INFO">Executing : Table Must Exist  |  view_usergroups </msg>
<msg timestamp="20170913 19:22:30.056" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_usergroups' </msg>
<status status="PASS" endtime="20170913 19:22:30.057" starttime="20170913 19:22:30.056"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users</arg>
</arguments>
<msg timestamp="20170913 19:22:30.057" level="INFO">Executing : Table Must Exist  |  view_users </msg>
<msg timestamp="20170913 19:22:30.057" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users' </msg>
<status status="PASS" endtime="20170913 19:22:30.058" starttime="20170913 19:22:30.057"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_apps</arg>
</arguments>
<msg timestamp="20170913 19:22:30.058" level="INFO">Executing : Table Must Exist  |  view_users_apps </msg>
<msg timestamp="20170913 19:22:30.058" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_apps' </msg>
<status status="PASS" endtime="20170913 19:22:30.059" starttime="20170913 19:22:30.058"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_datas</arg>
</arguments>
<msg timestamp="20170913 19:22:30.059" level="INFO">Executing : Table Must Exist  |  view_users_datas </msg>
<msg timestamp="20170913 19:22:30.059" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_datas' </msg>
<status status="PASS" endtime="20170913 19:22:30.060" starttime="20170913 19:22:30.059"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_groups</arg>
</arguments>
<msg timestamp="20170913 19:22:30.060" level="INFO">Executing : Table Must Exist  |  view_users_groups </msg>
<msg timestamp="20170913 19:22:30.060" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_groups' </msg>
<status status="PASS" endtime="20170913 19:22:30.061" starttime="20170913 19:22:30.060"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_hosts</arg>
</arguments>
<msg timestamp="20170913 19:22:30.061" level="INFO">Executing : Table Must Exist  |  view_users_hosts </msg>
<msg timestamp="20170913 19:22:30.061" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_hosts' </msg>
<status status="PASS" endtime="20170913 19:22:30.062" starttime="20170913 19:22:30.061"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_sessions</arg>
</arguments>
<msg timestamp="20170913 19:22:30.063" level="INFO">Executing : Table Must Exist  |  view_users_sessions </msg>
<msg timestamp="20170913 19:22:30.063" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_sessions' </msg>
<status status="PASS" endtime="20170913 19:22:30.063" starttime="20170913 19:22:30.062"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_tasks</arg>
</arguments>
<msg timestamp="20170913 19:22:30.064" level="INFO">Executing : Table Must Exist  |  view_users_tasks </msg>
<msg timestamp="20170913 19:22:30.064" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_tasks' </msg>
<status status="PASS" endtime="20170913 19:22:30.065" starttime="20170913 19:22:30.064"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_traces</arg>
</arguments>
<msg timestamp="20170913 19:22:30.065" level="INFO">Executing : Table Must Exist  |  view_users_traces </msg>
<msg timestamp="20170913 19:22:30.065" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_traces' </msg>
<status status="PASS" endtime="20170913 19:22:30.066" starttime="20170913 19:22:30.065"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_usergroups</arg>
</arguments>
<msg timestamp="20170913 19:22:30.066" level="INFO">Executing : Table Must Exist  |  view_users_usergroups </msg>
<msg timestamp="20170913 19:22:30.066" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_usergroups' </msg>
<status status="PASS" endtime="20170913 19:22:30.066" starttime="20170913 19:22:30.066"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_users</arg>
</arguments>
<msg timestamp="20170913 19:22:30.067" level="INFO">Executing : Table Must Exist  |  view_users_users </msg>
<msg timestamp="20170913 19:22:30.067" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_users' </msg>
<status status="PASS" endtime="20170913 19:22:30.068" starttime="20170913 19:22:30.066"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_works</arg>
</arguments>
<msg timestamp="20170913 19:22:30.068" level="INFO">Executing : Table Must Exist  |  view_users_works </msg>
<msg timestamp="20170913 19:22:30.068" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_works' </msg>
<status status="PASS" endtime="20170913 19:22:30.069" starttime="20170913 19:22:30.068"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works</arg>
</arguments>
<msg timestamp="20170913 19:22:30.069" level="INFO">Executing : Table Must Exist  |  view_works </msg>
<msg timestamp="20170913 19:22:30.069" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works' </msg>
<status status="PASS" endtime="20170913 19:22:30.070" starttime="20170913 19:22:30.069"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works_for_billing</arg>
</arguments>
<msg timestamp="20170913 19:22:30.070" level="INFO">Executing : Table Must Exist  |  view_works_for_billing </msg>
<msg timestamp="20170913 19:22:30.070" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works_for_billing' </msg>
<status status="PASS" endtime="20170913 19:22:30.071" starttime="20170913 19:22:30.070"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works_for_billing_with_file_sizes</arg>
</arguments>
<msg timestamp="20170913 19:22:30.071" level="INFO">Executing : Table Must Exist  |  view_works_for_billing_with_file_sizes </msg>
<msg timestamp="20170913 19:22:30.071" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works_for_billing_with_file_sizes' </msg>
<status status="PASS" endtime="20170913 19:22:30.072" starttime="20170913 19:22:30.071"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works</arg>
</arguments>
<msg timestamp="20170913 19:22:30.072" level="INFO">Executing : Table Must Exist  |  works </msg>
<msg timestamp="20170913 19:22:30.072" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='works' </msg>
<status status="PASS" endtime="20170913 19:22:30.073" starttime="20170913 19:22:30.072"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works_history</arg>
</arguments>
<msg timestamp="20170913 19:22:30.073" level="INFO">Executing : Table Must Exist  |  works_history </msg>
<msg timestamp="20170913 19:22:30.073" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='works_history' </msg>
<status status="PASS" endtime="20170913 19:22:30.074" starttime="20170913 19:22:30.073"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170913 19:22:30.075" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170913 19:22:30.075" starttime="20170913 19:22:30.075"></status>
</kw>
<status status="PASS" endtime="20170913 19:22:30.075" starttime="20170913 19:22:30.074"></status>
</kw>
<status status="PASS" endtime="20170913 19:22:30.075" starttime="20170913 19:22:29.987"></status>
</kw>
<status status="PASS" endtime="20170913 19:22:30.075" starttime="20170913 19:22:29.986"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>TODO ping XWtremWeb server up</arg>
</arguments>
<msg timestamp="20170913 19:22:30.075" level="INFO">TODO ping XWtremWeb server up</msg>
<status status="PASS" endtime="20170913 19:22:30.075" starttime="20170913 19:22:30.075"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>TODO ping XWtremWeb worker up before one test</arg>
</arguments>
<msg timestamp="20170913 19:22:30.076" level="INFO">TODO ping XWtremWeb worker up before one test</msg>
<status status="PASS" endtime="20170913 19:22:30.076" starttime="20170913 19:22:30.076"></status>
</kw>
<kw name="Delete Fonctionnal Xtremweb Tables" library="MySql">
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170913 19:22:30.077" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170913 19:22:30.077" starttime="20170913 19:22:30.076"></status>
</kw>
<status status="PASS" endtime="20170913 19:22:30.078" starttime="20170913 19:22:30.076"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps</arg>
</arguments>
<msg timestamp="20170913 19:22:30.078" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM apps; </msg>
<status status="PASS" endtime="20170913 19:22:30.080" starttime="20170913 19:22:30.078"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps_history</arg>
</arguments>
<msg timestamp="20170913 19:22:30.080" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM apps_history; </msg>
<status status="PASS" endtime="20170913 19:22:30.081" starttime="20170913 19:22:30.080"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas</arg>
</arguments>
<msg timestamp="20170913 19:22:30.081" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM datas; </msg>
<status status="PASS" endtime="20170913 19:22:30.082" starttime="20170913 19:22:30.081"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas_history</arg>
</arguments>
<msg timestamp="20170913 19:22:30.082" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM datas_history; </msg>
<status status="PASS" endtime="20170913 19:22:30.082" starttime="20170913 19:22:30.082"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables</arg>
</arguments>
<msg timestamp="20170913 19:22:30.083" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM executables; </msg>
<status status="PASS" endtime="20170913 19:22:30.083" starttime="20170913 19:22:30.083"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables_history</arg>
</arguments>
<msg timestamp="20170913 19:22:30.083" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM executables_history; </msg>
<status status="PASS" endtime="20170913 19:22:30.084" starttime="20170913 19:22:30.083"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups</arg>
</arguments>
<msg timestamp="20170913 19:22:30.084" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM groups; </msg>
<status status="PASS" endtime="20170913 19:22:30.084" starttime="20170913 19:22:30.084"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups_history</arg>
</arguments>
<msg timestamp="20170913 19:22:30.084" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM groups_history; </msg>
<status status="PASS" endtime="20170913 19:22:30.085" starttime="20170913 19:22:30.084"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts</arg>
</arguments>
<msg timestamp="20170913 19:22:30.085" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM hosts; </msg>
<status status="PASS" endtime="20170913 19:22:30.085" starttime="20170913 19:22:30.085"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts_history</arg>
</arguments>
<msg timestamp="20170913 19:22:30.085" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM hosts_history; </msg>
<status status="PASS" endtime="20170913 19:22:30.086" starttime="20170913 19:22:30.085"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships</arg>
</arguments>
<msg timestamp="20170913 19:22:30.086" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM memberships; </msg>
<status status="PASS" endtime="20170913 19:22:30.086" starttime="20170913 19:22:30.086"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships_history</arg>
</arguments>
<msg timestamp="20170913 19:22:30.086" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM memberships_history; </msg>
<status status="PASS" endtime="20170913 19:22:30.087" starttime="20170913 19:22:30.086"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions</arg>
</arguments>
<msg timestamp="20170913 19:22:30.087" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sessions; </msg>
<status status="PASS" endtime="20170913 19:22:30.087" starttime="20170913 19:22:30.087"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions_history</arg>
</arguments>
<msg timestamp="20170913 19:22:30.088" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sessions_history; </msg>
<status status="PASS" endtime="20170913 19:22:30.088" starttime="20170913 19:22:30.088"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes</arg>
</arguments>
<msg timestamp="20170913 19:22:30.088" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedAppTypes; </msg>
<status status="PASS" endtime="20170913 19:22:30.089" starttime="20170913 19:22:30.088"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes_history</arg>
</arguments>
<msg timestamp="20170913 19:22:30.089" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedAppTypes_history; </msg>
<status status="PASS" endtime="20170913 19:22:30.089" starttime="20170913 19:22:30.089"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes</arg>
</arguments>
<msg timestamp="20170913 19:22:30.089" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedPackageTypes; </msg>
<status status="PASS" endtime="20170913 19:22:30.090" starttime="20170913 19:22:30.089"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes_history</arg>
</arguments>
<msg timestamp="20170913 19:22:30.090" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedPackageTypes_history; </msg>
<status status="PASS" endtime="20170913 19:22:30.090" starttime="20170913 19:22:30.090"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks</arg>
</arguments>
<msg timestamp="20170913 19:22:30.090" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM tasks; </msg>
<status status="PASS" endtime="20170913 19:22:30.091" starttime="20170913 19:22:30.090"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks_history</arg>
</arguments>
<msg timestamp="20170913 19:22:30.091" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM tasks_history; </msg>
<status status="PASS" endtime="20170913 19:22:30.091" starttime="20170913 19:22:30.091"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces</arg>
</arguments>
<msg timestamp="20170913 19:22:30.091" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM traces; </msg>
<status status="PASS" endtime="20170913 19:22:30.092" starttime="20170913 19:22:30.091"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces_history</arg>
</arguments>
<msg timestamp="20170913 19:22:30.092" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM traces_history; </msg>
<status status="PASS" endtime="20170913 19:22:30.092" starttime="20170913 19:22:30.092"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups</arg>
</arguments>
<msg timestamp="20170913 19:22:30.092" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM usergroups; </msg>
<status status="PASS" endtime="20170913 19:22:30.093" starttime="20170913 19:22:30.092"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups_history</arg>
</arguments>
<msg timestamp="20170913 19:22:30.093" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM usergroups_history; </msg>
<status status="PASS" endtime="20170913 19:22:30.094" starttime="20170913 19:22:30.093"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users_history</arg>
</arguments>
<msg timestamp="20170913 19:22:30.094" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM users_history; </msg>
<status status="PASS" endtime="20170913 19:22:30.094" starttime="20170913 19:22:30.094"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works</arg>
</arguments>
<msg timestamp="20170913 19:22:30.094" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM works; </msg>
<status status="PASS" endtime="20170913 19:22:30.095" starttime="20170913 19:22:30.094"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works_history</arg>
</arguments>
<msg timestamp="20170913 19:22:30.095" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM works_history; </msg>
<status status="PASS" endtime="20170913 19:22:30.095" starttime="20170913 19:22:30.095"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170913 19:22:30.096" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170913 19:22:30.096" starttime="20170913 19:22:30.096"></status>
</kw>
<status status="PASS" endtime="20170913 19:22:30.096" starttime="20170913 19:22:30.095"></status>
</kw>
<status status="PASS" endtime="20170913 19:22:30.096" starttime="20170913 19:22:30.076"></status>
</kw>
<kw name="Stop XWtremWeb Server And XWtremWeb Worker" library="XWCommon">
<kw name="Stop XtremWeb Server" library="XWServer">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${SERVER_PROCESS}</arg>
</arguments>
<msg timestamp="20170913 19:22:30.097" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20170913 19:22:30.203" level="INFO">Process completed.</msg>
<status status="PASS" endtime="20170913 19:22:30.204" starttime="20170913 19:22:30.097"></status>
</kw>
<status status="PASS" endtime="20170913 19:22:30.204" starttime="20170913 19:22:30.096"></status>
</kw>
<kw name="Log XtremWeb Server" library="XWCommon">
<kw name="Log XtremWeb Process Log File" library="XWServer">
<kw name="Log File" library="OperatingSystem">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<msg timestamp="20170913 19:22:30.205" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170913 19:22:30.207" level="INFO">Wed Sep 13 19:22:23 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : checking launch url
Wed Sep 13 19:22:23 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] WARNING : no launcher URL defined
Wed Sep 13 19:22:23 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : launching SmartSockets hub
[13/Sep/2017:19:22:26 +0000] [main_1] ERROR : setRole : role redefined ?! (was SERVER)
[13/Sep/2017:19:22:26 +0000] [xtremweb.database.DBConnPoolThread_main_1] INFO : Connection to database jdbc:mysql://localhost/xtremweb is ok, 70 created
[13/Sep/2017:19:22:26 +0000] [xtremweb.dispatcher.DBInterface_main_1] WARN : Can't retrieve any app
[13/Sep/2017:19:22:26 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't create ProxyValidator
[13/Sep/2017:19:22:26 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.io.FileNotFoundException: /tmp/castore (No such file or directory) (/tmp/castore (No such file or directory))
[13/Sep/2017:19:22:26 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't add CA certificates to keystore
[13/Sep/2017:19:22:26 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.lang.NullPointerException (null)
[13/Sep/2017:19:22:26 +0000] [xtremweb.dispatcher.HashTaskSet_TaskSet_14] INFO : TaskSet started (300000)
[13/Sep/2017:19:22:27 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : still waiting task set...
[13/Sep/2017:19:22:27 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : UDP server not started
[13/Sep/2017:19:22:27 +0000] [xtremweb.communications.TCPServer_TCPServerNIO_15] INFO : started, listening on port : 4321
log4j:WARN No appenders could be found for logger (org.eclipse.jetty.util.log).
log4j:WARN Please initialize the log4j system properly.
log4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.
[13/Sep/2017:19:22:27 +0000] [xtremweb.communications.HTTPServer_main_1] INFO : started, listening on port : 9443
[13/Sep/2017:19:22:27 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : FACEBOOK : java.net.MalformedURLException: no protocol: 
[13/Sep/2017:19:22:27 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : GOOGLE : java.net.MalformedURLException: no protocol: 
[13/Sep/2017:19:22:27 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : TWITTER : java.net.MalformedURLException: no protocol: 
[13/Sep/2017:19:22:27 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : YAHOO : java.net.MalformedURLException: no protocol: 
[13/Sep/2017:19:22:28 +0000] [main_1] ERROR : Can't add new entry to keystore
[13/Sep/2017:19:22:28 +0000] [main_1] WARN : javax.net.ssl.SSLHandshakeException: sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target (sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target)
[13/Sep/2017:19:22:28 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : XWHEP Dispatcher(10.6.0-head) started [Wed Sep 13 19:22:28 UTC 2017]
[13/Sep/2017:19:22:28 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : DB vendor  = mysql
[13/Sep/2017:19:22:28 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : mileStone  = 
[13/Sep/2017:19:22:28 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Time out   = 15000
[13/Sep/2017:19:22:28 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Disk opt'd = true
[13/Sep/2017:19:22:28 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Net  opt'd = true
[13/Sep/2017:19:22:28 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : NIO        = true
XWHEP Dispatcher started  Wed Sep 13 19:22:28 UTC 2017
Name             : vagrant-ubuntu-trusty-64
Version          : 10.6.0-head
Identity         : 
XWRole           : SERVER
Started on       : Wed Sep 13 19:22:26 UTC 2017
Scheduler        : xtremweb.dispatcher.MatchingScheduler
SmartSockets hub : 172.28.128.3/172.17.0.1/10.0.2.15-4329#52.9b.af.e6.cc.7c.00.00.8d.d3.02.42.7b.de.a1.dc~vagrant
Server HTTP      : true
Alive            : 300
Alive time out   : 900
Polling time out : 15000
Optimize zip     : true
Optimize network : true
NIO              : true
Comm layer       : xtremweb.communications.TCPClient
Socket time out  : 60000
Socket retries   : 50
Max connections  : 200
TCP port         : 4321
UDP port         : 4323
HTPP  port       : 80
HTPPS port       : 9443
Sun RPC interposition port : 4328
Sandbox path : /usr/bin/lxc
Sandbox launch args : 
Host &lt;host&gt;&lt;uid&gt;3bcefe4d-e02b-4294-b502-7a0289186086&lt;/uid&gt;&lt;accessrights&gt;0x755&lt;/accessrights&gt;&lt;name&gt;vagrant-ubuntu-trusty-64&lt;/name&gt;&lt;cpuload&gt;50&lt;/cpuload&gt;&lt;natedipaddr&gt;10.0.2.15&lt;/natedipaddr&gt;&lt;ipaddr&gt;10.0.2.15&lt;/ipaddr&gt;&lt;hwaddr&gt;&lt;/hwaddr&gt;&lt;timezone&gt;Etc/UTC&lt;/timezone&gt;&lt;os&gt;LINUX&lt;/os&gt;&lt;osversion&gt;3.13.0-129-generic&lt;/osversion&gt;&lt;javaversion&gt;1.8.0_141&lt;/javaversion&gt;&lt;javadatamodel&gt;64&lt;/javadatamodel&gt;&lt;cputype&gt;AMD64&lt;/cputype&gt;&lt;cpunb&gt;1&lt;/cpunb&gt;&lt;cpumodel&gt;unknown&lt;/cpumodel&gt;&lt;cpuspeed&gt;0&lt;/cpuspeed&gt;&lt;totalmem&gt;0&lt;/totalmem&gt;&lt;totalswap&gt;0&lt;/totalswap&gt;&lt;totaltmp&gt;40284&lt;/totaltmp&gt;&lt;freetmp&gt;37263&lt;/freetmp&gt;&lt;project&gt;&lt;/project&gt;&lt;active&gt;true&lt;/active&gt;&lt;incomingconnections&gt;false&lt;/incomingconnections&gt;&lt;available&gt;false&lt;/available&gt;&lt;pilotjob&gt;false&lt;/pilotjob&gt;&lt;sgid&gt;&lt;/sgid&gt;&lt;timeout&gt;15000&lt;/timeout&gt;&lt;traces&gt;false&lt;/traces&gt;&lt;acceptbin&gt;false&lt;/acceptbin&gt;&lt;version&gt;10.6.0-head&lt;/version&gt;&lt;/host&gt;
[13/Sep/2017:19:22:28 +0000] [xtremweb.communications.HTTPServer_HTTPServer_218] INFO : started, listening on port : 9443
[13/Sep/2017:19:22:29 +0000] [xtremweb.common.StreamIO_TCPHandler_18] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[13/Sep/2017:19:22:29 +0000] [xtremweb.common.StreamIO_TCPHandler_17] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[13/Sep/2017:19:22:30 +0000] [xtremweb.communications.TCPServer_TCPServerNIO_15] WARN : java.net.SocketException: Socket closed (Socket closed)
</msg>
<status status="PASS" endtime="20170913 19:22:30.208" starttime="20170913 19:22:30.205"></status>
</kw>
<status status="PASS" endtime="20170913 19:22:30.208" starttime="20170913 19:22:30.204"></status>
</kw>
<status status="PASS" endtime="20170913 19:22:30.208" starttime="20170913 19:22:30.204"></status>
</kw>
<kw name="Stop XtremWeb Worker" library="XWWorker">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Stop XtremWeb Worker</arg>
</arguments>
<msg timestamp="20170913 19:22:30.209" level="INFO">Stop XtremWeb Worker</msg>
<status status="PASS" endtime="20170913 19:22:30.209" starttime="20170913 19:22:30.209"></status>
</kw>
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${WORKER_PROCESS}</arg>
</arguments>
<msg timestamp="20170913 19:22:30.209" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20170913 19:22:30.210" level="INFO">Process completed.</msg>
<status status="PASS" endtime="20170913 19:22:30.210" starttime="20170913 19:22:30.209"></status>
</kw>
<status status="PASS" endtime="20170913 19:22:30.210" starttime="20170913 19:22:30.208"></status>
</kw>
<status status="PASS" endtime="20170913 19:22:30.210" starttime="20170913 19:22:30.096"></status>
</kw>
<kw name="Start XWtremWeb Server And XWtremWeb Worker" library="XWCommon">
<kw name="Ping XWtremWeb Database" library="XWServer">
<kw name="Xtremweb Tables Must Exist" library="MySql">
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170913 19:22:30.212" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170913 19:22:30.213" starttime="20170913 19:22:30.211"></status>
</kw>
<status status="PASS" endtime="20170913 19:22:30.213" starttime="20170913 19:22:30.211"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>appTypes</arg>
</arguments>
<msg timestamp="20170913 19:22:30.213" level="INFO">Executing : Table Must Exist  |  appTypes </msg>
<msg timestamp="20170913 19:22:30.214" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='appTypes' </msg>
<status status="PASS" endtime="20170913 19:22:30.214" starttime="20170913 19:22:30.213"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps</arg>
</arguments>
<msg timestamp="20170913 19:22:30.215" level="INFO">Executing : Table Must Exist  |  apps </msg>
<msg timestamp="20170913 19:22:30.215" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='apps' </msg>
<status status="PASS" endtime="20170913 19:22:30.215" starttime="20170913 19:22:30.215"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps_history</arg>
</arguments>
<msg timestamp="20170913 19:22:30.216" level="INFO">Executing : Table Must Exist  |  apps_history </msg>
<msg timestamp="20170913 19:22:30.216" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='apps_history' </msg>
<status status="PASS" endtime="20170913 19:22:30.217" starttime="20170913 19:22:30.216"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>cpuTypes</arg>
</arguments>
<msg timestamp="20170913 19:22:30.217" level="INFO">Executing : Table Must Exist  |  cpuTypes </msg>
<msg timestamp="20170913 19:22:30.217" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='cpuTypes' </msg>
<status status="PASS" endtime="20170913 19:22:30.218" starttime="20170913 19:22:30.217"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>dataTypes</arg>
</arguments>
<msg timestamp="20170913 19:22:30.218" level="INFO">Executing : Table Must Exist  |  dataTypes </msg>
<msg timestamp="20170913 19:22:30.218" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='dataTypes' </msg>
<status status="PASS" endtime="20170913 19:22:30.219" starttime="20170913 19:22:30.218"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas</arg>
</arguments>
<msg timestamp="20170913 19:22:30.219" level="INFO">Executing : Table Must Exist  |  datas </msg>
<msg timestamp="20170913 19:22:30.219" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='datas' </msg>
<status status="PASS" endtime="20170913 19:22:30.220" starttime="20170913 19:22:30.219"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas_history</arg>
</arguments>
<msg timestamp="20170913 19:22:30.221" level="INFO">Executing : Table Must Exist  |  datas_history </msg>
<msg timestamp="20170913 19:22:30.221" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='datas_history' </msg>
<status status="PASS" endtime="20170913 19:22:30.222" starttime="20170913 19:22:30.221"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables</arg>
</arguments>
<msg timestamp="20170913 19:22:30.222" level="INFO">Executing : Table Must Exist  |  executables </msg>
<msg timestamp="20170913 19:22:30.222" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='executables' </msg>
<status status="PASS" endtime="20170913 19:22:30.223" starttime="20170913 19:22:30.222"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables_history</arg>
</arguments>
<msg timestamp="20170913 19:22:30.223" level="INFO">Executing : Table Must Exist  |  executables_history </msg>
<msg timestamp="20170913 19:22:30.223" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='executables_history' </msg>
<status status="PASS" endtime="20170913 19:22:30.224" starttime="20170913 19:22:30.223"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups</arg>
</arguments>
<msg timestamp="20170913 19:22:30.224" level="INFO">Executing : Table Must Exist  |  groups </msg>
<msg timestamp="20170913 19:22:30.224" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='groups' </msg>
<status status="PASS" endtime="20170913 19:22:30.225" starttime="20170913 19:22:30.224"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups_history</arg>
</arguments>
<msg timestamp="20170913 19:22:30.226" level="INFO">Executing : Table Must Exist  |  groups_history </msg>
<msg timestamp="20170913 19:22:30.226" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='groups_history' </msg>
<status status="PASS" endtime="20170913 19:22:30.226" starttime="20170913 19:22:30.225"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts</arg>
</arguments>
<msg timestamp="20170913 19:22:30.227" level="INFO">Executing : Table Must Exist  |  hosts </msg>
<msg timestamp="20170913 19:22:30.227" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='hosts' </msg>
<status status="PASS" endtime="20170913 19:22:30.228" starttime="20170913 19:22:30.227"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts_history</arg>
</arguments>
<msg timestamp="20170913 19:22:30.228" level="INFO">Executing : Table Must Exist  |  hosts_history </msg>
<msg timestamp="20170913 19:22:30.228" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='hosts_history' </msg>
<status status="PASS" endtime="20170913 19:22:30.229" starttime="20170913 19:22:30.228"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships</arg>
</arguments>
<msg timestamp="20170913 19:22:30.229" level="INFO">Executing : Table Must Exist  |  memberships </msg>
<msg timestamp="20170913 19:22:30.229" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='memberships' </msg>
<status status="PASS" endtime="20170913 19:22:30.230" starttime="20170913 19:22:30.229"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships_history</arg>
</arguments>
<msg timestamp="20170913 19:22:30.230" level="INFO">Executing : Table Must Exist  |  memberships_history </msg>
<msg timestamp="20170913 19:22:30.230" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='memberships_history' </msg>
<status status="PASS" endtime="20170913 19:22:30.231" starttime="20170913 19:22:30.230"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>oses</arg>
</arguments>
<msg timestamp="20170913 19:22:30.231" level="INFO">Executing : Table Must Exist  |  oses </msg>
<msg timestamp="20170913 19:22:30.231" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='oses' </msg>
<status status="PASS" endtime="20170913 19:22:30.232" starttime="20170913 19:22:30.231"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>packageTypes</arg>
</arguments>
<msg timestamp="20170913 19:22:30.232" level="INFO">Executing : Table Must Exist  |  packageTypes </msg>
<msg timestamp="20170913 19:22:30.232" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='packageTypes' </msg>
<status status="PASS" endtime="20170913 19:22:30.233" starttime="20170913 19:22:30.232"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions</arg>
</arguments>
<msg timestamp="20170913 19:22:30.233" level="INFO">Executing : Table Must Exist  |  sessions </msg>
<msg timestamp="20170913 19:22:30.233" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sessions' </msg>
<status status="PASS" endtime="20170913 19:22:30.234" starttime="20170913 19:22:30.233"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions_history</arg>
</arguments>
<msg timestamp="20170913 19:22:30.234" level="INFO">Executing : Table Must Exist  |  sessions_history </msg>
<msg timestamp="20170913 19:22:30.234" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sessions_history' </msg>
<status status="PASS" endtime="20170913 19:22:30.235" starttime="20170913 19:22:30.234"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes</arg>
</arguments>
<msg timestamp="20170913 19:22:30.235" level="INFO">Executing : Table Must Exist  |  sharedAppTypes </msg>
<msg timestamp="20170913 19:22:30.235" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedAppTypes' </msg>
<status status="PASS" endtime="20170913 19:22:30.236" starttime="20170913 19:22:30.235"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes_history</arg>
</arguments>
<msg timestamp="20170913 19:22:30.237" level="INFO">Executing : Table Must Exist  |  sharedAppTypes_history </msg>
<msg timestamp="20170913 19:22:30.237" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedAppTypes_history' </msg>
<status status="PASS" endtime="20170913 19:22:30.237" starttime="20170913 19:22:30.236"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes</arg>
</arguments>
<msg timestamp="20170913 19:22:30.238" level="INFO">Executing : Table Must Exist  |  sharedPackageTypes </msg>
<msg timestamp="20170913 19:22:30.238" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedPackageTypes' </msg>
<status status="PASS" endtime="20170913 19:22:30.238" starttime="20170913 19:22:30.238"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes_history</arg>
</arguments>
<msg timestamp="20170913 19:22:30.239" level="INFO">Executing : Table Must Exist  |  sharedPackageTypes_history </msg>
<msg timestamp="20170913 19:22:30.239" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedPackageTypes_history' </msg>
<status status="PASS" endtime="20170913 19:22:30.239" starttime="20170913 19:22:30.238"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>statuses</arg>
</arguments>
<msg timestamp="20170913 19:22:30.240" level="INFO">Executing : Table Must Exist  |  statuses </msg>
<msg timestamp="20170913 19:22:30.240" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='statuses' </msg>
<status status="PASS" endtime="20170913 19:22:30.241" starttime="20170913 19:22:30.240"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks</arg>
</arguments>
<msg timestamp="20170913 19:22:30.241" level="INFO">Executing : Table Must Exist  |  tasks </msg>
<msg timestamp="20170913 19:22:30.241" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='tasks' </msg>
<status status="PASS" endtime="20170913 19:22:30.242" starttime="20170913 19:22:30.241"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks_history</arg>
</arguments>
<msg timestamp="20170913 19:22:30.242" level="INFO">Executing : Table Must Exist  |  tasks_history </msg>
<msg timestamp="20170913 19:22:30.242" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='tasks_history' </msg>
<status status="PASS" endtime="20170913 19:22:30.243" starttime="20170913 19:22:30.242"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces</arg>
</arguments>
<msg timestamp="20170913 19:22:30.243" level="INFO">Executing : Table Must Exist  |  traces </msg>
<msg timestamp="20170913 19:22:30.243" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='traces' </msg>
<status status="PASS" endtime="20170913 19:22:30.244" starttime="20170913 19:22:30.243"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces_history</arg>
</arguments>
<msg timestamp="20170913 19:22:30.244" level="INFO">Executing : Table Must Exist  |  traces_history </msg>
<msg timestamp="20170913 19:22:30.244" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='traces_history' </msg>
<status status="PASS" endtime="20170913 19:22:30.246" starttime="20170913 19:22:30.244"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>userRights</arg>
</arguments>
<msg timestamp="20170913 19:22:30.246" level="INFO">Executing : Table Must Exist  |  userRights </msg>
<msg timestamp="20170913 19:22:30.246" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='userRights' </msg>
<status status="PASS" endtime="20170913 19:22:30.247" starttime="20170913 19:22:30.246"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups</arg>
</arguments>
<msg timestamp="20170913 19:22:30.247" level="INFO">Executing : Table Must Exist  |  usergroups </msg>
<msg timestamp="20170913 19:22:30.248" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='usergroups' </msg>
<status status="PASS" endtime="20170913 19:22:30.248" starttime="20170913 19:22:30.247"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups_history</arg>
</arguments>
<msg timestamp="20170913 19:22:30.249" level="INFO">Executing : Table Must Exist  |  usergroups_history </msg>
<msg timestamp="20170913 19:22:30.249" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='usergroups_history' </msg>
<status status="PASS" endtime="20170913 19:22:30.249" starttime="20170913 19:22:30.248"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users</arg>
</arguments>
<msg timestamp="20170913 19:22:30.250" level="INFO">Executing : Table Must Exist  |  users </msg>
<msg timestamp="20170913 19:22:30.250" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='users' </msg>
<status status="PASS" endtime="20170913 19:22:30.250" starttime="20170913 19:22:30.250"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users_history</arg>
</arguments>
<msg timestamp="20170913 19:22:30.251" level="INFO">Executing : Table Must Exist  |  users_history </msg>
<msg timestamp="20170913 19:22:30.251" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='users_history' </msg>
<status status="PASS" endtime="20170913 19:22:30.252" starttime="20170913 19:22:30.251"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>version</arg>
</arguments>
<msg timestamp="20170913 19:22:30.252" level="INFO">Executing : Table Must Exist  |  version </msg>
<msg timestamp="20170913 19:22:30.252" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='version' </msg>
<status status="PASS" endtime="20170913 19:22:30.253" starttime="20170913 19:22:30.252"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>versions</arg>
</arguments>
<msg timestamp="20170913 19:22:30.253" level="INFO">Executing : Table Must Exist  |  versions </msg>
<msg timestamp="20170913 19:22:30.253" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='versions' </msg>
<status status="PASS" endtime="20170913 19:22:30.254" starttime="20170913 19:22:30.253"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps</arg>
</arguments>
<msg timestamp="20170913 19:22:30.254" level="INFO">Executing : Table Must Exist  |  view_apps </msg>
<msg timestamp="20170913 19:22:30.254" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps' </msg>
<status status="PASS" endtime="20170913 19:22:30.255" starttime="20170913 19:22:30.254"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps_for_offering</arg>
</arguments>
<msg timestamp="20170913 19:22:30.256" level="INFO">Executing : Table Must Exist  |  view_apps_for_offering </msg>
<msg timestamp="20170913 19:22:30.256" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps_for_offering' </msg>
<status status="PASS" endtime="20170913 19:22:30.257" starttime="20170913 19:22:30.256"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps_for_offering_with_file_sizes</arg>
</arguments>
<msg timestamp="20170913 19:22:30.257" level="INFO">Executing : Table Must Exist  |  view_apps_for_offering_with_file_sizes </msg>
<msg timestamp="20170913 19:22:30.257" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps_for_offering_with_file_sizes' </msg>
<status status="PASS" endtime="20170913 19:22:30.258" starttime="20170913 19:22:30.257"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_datas</arg>
</arguments>
<msg timestamp="20170913 19:22:30.259" level="INFO">Executing : Table Must Exist  |  view_datas </msg>
<msg timestamp="20170913 19:22:30.259" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_datas' </msg>
<status status="PASS" endtime="20170913 19:22:30.260" starttime="20170913 19:22:30.258"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_executables</arg>
</arguments>
<msg timestamp="20170913 19:22:30.260" level="INFO">Executing : Table Must Exist  |  view_executables </msg>
<msg timestamp="20170913 19:22:30.260" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_executables' </msg>
<status status="PASS" endtime="20170913 19:22:30.261" starttime="20170913 19:22:30.260"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_groups</arg>
</arguments>
<msg timestamp="20170913 19:22:30.261" level="INFO">Executing : Table Must Exist  |  view_groups </msg>
<msg timestamp="20170913 19:22:30.261" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_groups' </msg>
<status status="PASS" endtime="20170913 19:22:30.262" starttime="20170913 19:22:30.261"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts</arg>
</arguments>
<msg timestamp="20170913 19:22:30.263" level="INFO">Executing : Table Must Exist  |  view_hosts </msg>
<msg timestamp="20170913 19:22:30.263" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts' </msg>
<status status="PASS" endtime="20170913 19:22:30.264" starttime="20170913 19:22:30.263"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_deployable</arg>
</arguments>
<msg timestamp="20170913 19:22:30.264" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_deployable </msg>
<msg timestamp="20170913 19:22:30.264" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_deployable' </msg>
<status status="PASS" endtime="20170913 19:22:30.265" starttime="20170913 19:22:30.264"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_deployable_and_shared</arg>
</arguments>
<msg timestamp="20170913 19:22:30.266" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_deployable_and_shared </msg>
<msg timestamp="20170913 19:22:30.266" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_deployable_and_shared' </msg>
<status status="PASS" endtime="20170913 19:22:30.267" starttime="20170913 19:22:30.266"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_shared</arg>
</arguments>
<msg timestamp="20170913 19:22:30.268" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_shared </msg>
<msg timestamp="20170913 19:22:30.268" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_shared' </msg>
<status status="PASS" endtime="20170913 19:22:30.269" starttime="20170913 19:22:30.268"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_sessions</arg>
</arguments>
<msg timestamp="20170913 19:22:30.270" level="INFO">Executing : Table Must Exist  |  view_sessions </msg>
<msg timestamp="20170913 19:22:30.270" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_sessions' </msg>
<status status="PASS" endtime="20170913 19:22:30.271" starttime="20170913 19:22:30.269"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_tasks</arg>
</arguments>
<msg timestamp="20170913 19:22:30.272" level="INFO">Executing : Table Must Exist  |  view_tasks </msg>
<msg timestamp="20170913 19:22:30.272" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_tasks' </msg>
<status status="PASS" endtime="20170913 19:22:30.273" starttime="20170913 19:22:30.271"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_traces</arg>
</arguments>
<msg timestamp="20170913 19:22:30.273" level="INFO">Executing : Table Must Exist  |  view_traces </msg>
<msg timestamp="20170913 19:22:30.273" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_traces' </msg>
<status status="PASS" endtime="20170913 19:22:30.274" starttime="20170913 19:22:30.273"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_usergroups</arg>
</arguments>
<msg timestamp="20170913 19:22:30.275" level="INFO">Executing : Table Must Exist  |  view_usergroups </msg>
<msg timestamp="20170913 19:22:30.275" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_usergroups' </msg>
<status status="PASS" endtime="20170913 19:22:30.276" starttime="20170913 19:22:30.275"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users</arg>
</arguments>
<msg timestamp="20170913 19:22:30.276" level="INFO">Executing : Table Must Exist  |  view_users </msg>
<msg timestamp="20170913 19:22:30.276" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users' </msg>
<status status="PASS" endtime="20170913 19:22:30.278" starttime="20170913 19:22:30.276"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_apps</arg>
</arguments>
<msg timestamp="20170913 19:22:30.278" level="INFO">Executing : Table Must Exist  |  view_users_apps </msg>
<msg timestamp="20170913 19:22:30.278" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_apps' </msg>
<status status="PASS" endtime="20170913 19:22:30.280" starttime="20170913 19:22:30.278"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_datas</arg>
</arguments>
<msg timestamp="20170913 19:22:30.281" level="INFO">Executing : Table Must Exist  |  view_users_datas </msg>
<msg timestamp="20170913 19:22:30.281" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_datas' </msg>
<status status="PASS" endtime="20170913 19:22:30.282" starttime="20170913 19:22:30.280"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_groups</arg>
</arguments>
<msg timestamp="20170913 19:22:30.282" level="INFO">Executing : Table Must Exist  |  view_users_groups </msg>
<msg timestamp="20170913 19:22:30.282" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_groups' </msg>
<status status="PASS" endtime="20170913 19:22:30.283" starttime="20170913 19:22:30.282"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_hosts</arg>
</arguments>
<msg timestamp="20170913 19:22:30.284" level="INFO">Executing : Table Must Exist  |  view_users_hosts </msg>
<msg timestamp="20170913 19:22:30.284" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_hosts' </msg>
<status status="PASS" endtime="20170913 19:22:30.285" starttime="20170913 19:22:30.284"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_sessions</arg>
</arguments>
<msg timestamp="20170913 19:22:30.285" level="INFO">Executing : Table Must Exist  |  view_users_sessions </msg>
<msg timestamp="20170913 19:22:30.285" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_sessions' </msg>
<status status="PASS" endtime="20170913 19:22:30.286" starttime="20170913 19:22:30.285"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_tasks</arg>
</arguments>
<msg timestamp="20170913 19:22:30.287" level="INFO">Executing : Table Must Exist  |  view_users_tasks </msg>
<msg timestamp="20170913 19:22:30.287" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_tasks' </msg>
<status status="PASS" endtime="20170913 19:22:30.288" starttime="20170913 19:22:30.287"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_traces</arg>
</arguments>
<msg timestamp="20170913 19:22:30.288" level="INFO">Executing : Table Must Exist  |  view_users_traces </msg>
<msg timestamp="20170913 19:22:30.288" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_traces' </msg>
<status status="PASS" endtime="20170913 19:22:30.289" starttime="20170913 19:22:30.288"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_usergroups</arg>
</arguments>
<msg timestamp="20170913 19:22:30.290" level="INFO">Executing : Table Must Exist  |  view_users_usergroups </msg>
<msg timestamp="20170913 19:22:30.290" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_usergroups' </msg>
<status status="PASS" endtime="20170913 19:22:30.291" starttime="20170913 19:22:30.290"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_users</arg>
</arguments>
<msg timestamp="20170913 19:22:30.291" level="INFO">Executing : Table Must Exist  |  view_users_users </msg>
<msg timestamp="20170913 19:22:30.291" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_users' </msg>
<status status="PASS" endtime="20170913 19:22:30.293" starttime="20170913 19:22:30.291"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_works</arg>
</arguments>
<msg timestamp="20170913 19:22:30.293" level="INFO">Executing : Table Must Exist  |  view_users_works </msg>
<msg timestamp="20170913 19:22:30.293" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_works' </msg>
<status status="PASS" endtime="20170913 19:22:30.294" starttime="20170913 19:22:30.293"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works</arg>
</arguments>
<msg timestamp="20170913 19:22:30.295" level="INFO">Executing : Table Must Exist  |  view_works </msg>
<msg timestamp="20170913 19:22:30.295" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works' </msg>
<status status="PASS" endtime="20170913 19:22:30.296" starttime="20170913 19:22:30.295"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works_for_billing</arg>
</arguments>
<msg timestamp="20170913 19:22:30.297" level="INFO">Executing : Table Must Exist  |  view_works_for_billing </msg>
<msg timestamp="20170913 19:22:30.297" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works_for_billing' </msg>
<status status="PASS" endtime="20170913 19:22:30.298" starttime="20170913 19:22:30.296"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works_for_billing_with_file_sizes</arg>
</arguments>
<msg timestamp="20170913 19:22:30.298" level="INFO">Executing : Table Must Exist  |  view_works_for_billing_with_file_sizes </msg>
<msg timestamp="20170913 19:22:30.298" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works_for_billing_with_file_sizes' </msg>
<status status="PASS" endtime="20170913 19:22:30.299" starttime="20170913 19:22:30.298"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works</arg>
</arguments>
<msg timestamp="20170913 19:22:30.300" level="INFO">Executing : Table Must Exist  |  works </msg>
<msg timestamp="20170913 19:22:30.300" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='works' </msg>
<status status="PASS" endtime="20170913 19:22:30.301" starttime="20170913 19:22:30.300"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works_history</arg>
</arguments>
<msg timestamp="20170913 19:22:30.301" level="INFO">Executing : Table Must Exist  |  works_history </msg>
<msg timestamp="20170913 19:22:30.301" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='works_history' </msg>
<status status="PASS" endtime="20170913 19:22:30.302" starttime="20170913 19:22:30.301"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170913 19:22:30.303" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170913 19:22:30.303" starttime="20170913 19:22:30.303"></status>
</kw>
<status status="PASS" endtime="20170913 19:22:30.304" starttime="20170913 19:22:30.303"></status>
</kw>
<status status="PASS" endtime="20170913 19:22:30.304" starttime="20170913 19:22:30.211"></status>
</kw>
<status status="PASS" endtime="20170913 19:22:30.304" starttime="20170913 19:22:30.211"></status>
</kw>
<kw name="Start XtremWeb Server" library="XWServer">
<arguments>
<arg>${DIST_XWHEP_PATH}</arg>
</arguments>
<kw name="File Should Exist" library="OperatingSystem">
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xtremweb.server.conf</arg>
</arguments>
<msg timestamp="20170913 19:22:30.305" html="yes" level="INFO">File '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf&lt;/a&gt;' exists.</msg>
<status status="PASS" endtime="20170913 19:22:30.305" starttime="20170913 19:22:30.304"></status>
</kw>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xtremweb.server.conf</arg>
</arguments>
<assign>
<var>${config_content}</var>
</assign>
<msg timestamp="20170913 19:22:30.307" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf&lt;/a&gt;'.</msg>
<msg timestamp="20170913 19:22:30.308" level="INFO">${config_content} = #
# Copyrights     : CNRS
# Author         : Oleg Lodygensky
# Acknowledgment : XtremWeb-HEP is based on XtremWeb 1.8.0 by inria : http://www.xtremweb.net/
# Web            : http://www.xtremweb-hep.o...</msg>
<status status="PASS" endtime="20170913 19:22:30.308" starttime="20170913 19:22:30.306"></status>
</kw>
<kw name="Remove String Using Regexp" library="String">
<doc>Removes ``patterns`` from the given ``string``.</doc>
<arguments>
<arg>${config_content}</arg>
<arg>LAUNCHERURL=${XWCONFIGURE.VALUES.XWUPGRADEURL}</arg>
</arguments>
<assign>
<var>${config_content_filtered}</var>
</assign>
<msg timestamp="20170913 19:22:30.308" level="INFO">${config_content_filtered} = #
# Copyrights     : CNRS
# Author         : Oleg Lodygensky
# Acknowledgment : XtremWeb-HEP is based on XtremWeb 1.8.0 by inria : http://www.xtremweb.net/
# Web            : http://www.xtremweb-hep.o...</msg>
<status status="PASS" endtime="20170913 19:22:30.308" starttime="20170913 19:22:30.308"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${config_content_filtered}</arg>
<arg>\## HTTPSPORT=443</arg>
<arg>HTTPSPORT=${XWCONFIGURE.VALUES.HTTPSPORT}</arg>
</arguments>
<assign>
<var>${config_content_filtered}</var>
</assign>
<msg timestamp="20170913 19:22:30.309" level="INFO">${config_content_filtered} = #
# Copyrights     : CNRS
# Author         : Oleg Lodygensky
# Acknowledgment : XtremWeb-HEP is based on XtremWeb 1.8.0 by inria : http://www.xtremweb.net/
# Web            : http://www.xtremweb-hep.o...</msg>
<status status="PASS" endtime="20170913 19:22:30.309" starttime="20170913 19:22:30.309"></status>
</kw>
<kw name="Create File" library="OperatingSystem">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xtremweb.server.conf</arg>
<arg>content=${config_content_filtered}</arg>
</arguments>
<msg timestamp="20170913 19:22:30.317" html="yes" level="INFO">Created file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170913 19:22:30.317" starttime="20170913 19:22:30.309"></status>
</kw>
<kw name="Remove File" library="OperatingSystem">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<msg timestamp="20170913 19:22:30.318" html="yes" level="INFO">Removed file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170913 19:22:30.319" starttime="20170913 19:22:30.317"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/bin/xtremweb.server console</arg>
<arg>shell=yes</arg>
<arg>stderr=STDOUT</arg>
<arg>stdout=${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<assign>
<var>${created_process}</var>
</assign>
<msg timestamp="20170913 19:22:30.320" level="INFO">Starting process:
/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/xtremweb.server console</msg>
<msg timestamp="20170913 19:22:30.326" level="INFO">${created_process} = 65</msg>
<status status="PASS" endtime="20170913 19:22:30.326" starttime="20170913 19:22:30.319"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SERVER_PROCESS}</arg>
<arg>${created_process}</arg>
</arguments>
<msg timestamp="20170913 19:22:30.327" level="INFO">${SERVER_PROCESS} = 65</msg>
<status status="PASS" endtime="20170913 19:22:30.328" starttime="20170913 19:22:30.327"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2 min</arg>
<arg>5 sec</arg>
<arg>Check XtremWeb Server Start From Log</arg>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<kw name="Check XtremWeb Server Start From Log" library="XWServer">
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<kw name="Log XtremWeb Process Log File" library="XWServer">
<kw name="Log File" library="OperatingSystem">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<msg timestamp="20170913 19:22:30.331" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170913 19:22:30.332" level="INFO"></msg>
<status status="PASS" endtime="20170913 19:22:30.333" starttime="20170913 19:22:30.331"></status>
</kw>
<status status="PASS" endtime="20170913 19:22:30.333" starttime="20170913 19:22:30.330"></status>
</kw>
<kw name="Grep File" library="OperatingSystem">
<doc>Returns the lines of the specified file that match the ``pattern``.</doc>
<arguments>
<arg>${log}</arg>
<arg>listening on port : ${XWCONFIGURE.VALUES.HTTPSPORT}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20170913 19:22:30.333" html="yes" level="INFO">Reading file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170913 19:22:30.334" level="INFO">0 out of 0 lines matched</msg>
<msg timestamp="20170913 19:22:30.334" level="INFO">${ret} = </msg>
<status status="PASS" endtime="20170913 19:22:30.334" starttime="20170913 19:22:30.333"></status>
</kw>
<kw name="Get Line Count" library="String">
<doc>Returns and logs the number of lines in the given string.</doc>
<arguments>
<arg>${ret}</arg>
</arguments>
<assign>
<var>${line_count}</var>
</assign>
<msg timestamp="20170913 19:22:30.335" level="INFO">0 lines</msg>
<msg timestamp="20170913 19:22:30.335" level="INFO">${line_count} = 0</msg>
<status status="PASS" endtime="20170913 19:22:30.335" starttime="20170913 19:22:30.334"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${line_count}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20170913 19:22:30.335" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20170913 19:22:30.336" level="FAIL">0 != 2</msg>
<status status="FAIL" endtime="20170913 19:22:30.336" starttime="20170913 19:22:30.335"></status>
</kw>
<status status="FAIL" endtime="20170913 19:22:30.336" starttime="20170913 19:22:30.329"></status>
</kw>
<kw name="Check XtremWeb Server Start From Log" library="XWServer">
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<kw name="Log XtremWeb Process Log File" library="XWServer">
<kw name="Log File" library="OperatingSystem">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<msg timestamp="20170913 19:22:35.341" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170913 19:22:35.349" level="INFO">Wed Sep 13 19:22:30 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : checking launch url
Wed Sep 13 19:22:30 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] WARNING : no launcher URL defined
Wed Sep 13 19:22:30 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : launching SmartSockets hub
[13/Sep/2017:19:22:32 +0000] [main_1] ERROR : setRole : role redefined ?! (was SERVER)
[13/Sep/2017:19:22:33 +0000] [xtremweb.database.DBConnPoolThread_main_1] INFO : Connection to database jdbc:mysql://localhost/xtremweb is ok, 70 created
[13/Sep/2017:19:22:33 +0000] [xtremweb.dispatcher.DBInterface_main_1] WARN : Can't retrieve any app
[13/Sep/2017:19:22:33 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't create ProxyValidator
[13/Sep/2017:19:22:33 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.io.FileNotFoundException: /tmp/castore (No such file or directory) (/tmp/castore (No such file or directory))
[13/Sep/2017:19:22:33 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't add CA certificates to keystore
[13/Sep/2017:19:22:33 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.lang.NullPointerException (null)
[13/Sep/2017:19:22:33 +0000] [xtremweb.dispatcher.HashTaskSet_TaskSet_14] INFO : TaskSet started (300000)
[13/Sep/2017:19:22:34 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : still waiting task set...
[13/Sep/2017:19:22:34 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : UDP server not started
[13/Sep/2017:19:22:34 +0000] [xtremweb.communications.TCPServer_TCPServerNIO_15] INFO : started, listening on port : 4321
log4j:WARN No appenders could be found for logger (org.eclipse.jetty.util.log).
log4j:WARN Please initialize the log4j system properly.
log4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.
[13/Sep/2017:19:22:34 +0000] [xtremweb.communications.HTTPServer_main_1] INFO : started, listening on port : 9443
[13/Sep/2017:19:22:34 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : FACEBOOK : java.net.MalformedURLException: no protocol: 
[13/Sep/2017:19:22:34 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : GOOGLE : java.net.MalformedURLException: no protocol: 
[13/Sep/2017:19:22:34 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : TWITTER : java.net.MalformedURLException: no protocol: 
[13/Sep/2017:19:22:34 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : YAHOO : java.net.MalformedURLException: no protocol: 
[13/Sep/2017:19:22:34 +0000] [main_1] ERROR : Can't add new entry to keystore
[13/Sep/2017:19:22:34 +0000] [main_1] WARN : javax.net.ssl.SSLHandshakeException: sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target (sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target)
[13/Sep/2017:19:22:34 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : XWHEP Dispatcher(10.6.0-head) started [Wed Sep 13 19:22:34 UTC 2017]
[13/Sep/2017:19:22:34 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : DB vendor  = mysql
[13/Sep/2017:19:22:34 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : mileStone  = 
[13/Sep/2017:19:22:34 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Time out   = 15000
[13/Sep/2017:19:22:34 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Disk opt'd = true
[13/Sep/2017:19:22:34 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Net  opt'd = true
[13/Sep/2017:19:22:34 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : NIO        = true
XWHEP Dispatcher started  Wed Sep 13 19:22:34 UTC 2017
Name             : vagrant-ubuntu-trusty-64
Version          : 10.6.0-head
Identity         : 
XWRole           : SERVER
Started on       : Wed Sep 13 19:22:32 UTC 2017
Scheduler        : xtremweb.dispatcher.MatchingScheduler
SmartSockets hub : 172.28.128.3/172.17.0.1/10.0.2.15-4329#a2.97.b0.e6.cc.7c.00.00.ce.4b.02.42.7b.de.a1.dc~vagrant
Server HTTP      : true
Alive            : 300
Alive time out   : 900
Polling time out : 15000
Optimize zip     : true
Optimize network : true
NIO              : true
Comm layer       : xtremweb.communications.TCPClient
Socket time out  : 60000
Socket retries   : 50
Max connections  : 200
TCP port         : 4321
UDP port         : 4323
HTPP  port       : 80
HTPPS port       : 9443
Sun RPC interposition port : 4328
Sandbox path : /usr/bin/lxc
Sandbox launch args : 
Host &lt;host&gt;&lt;uid&gt;21677eee-a27b-4050-985d-ce997f7e1f7a&lt;/uid&gt;&lt;accessrights&gt;0x755&lt;/accessrights&gt;&lt;name&gt;vagrant-ubuntu-trusty-64&lt;/name&gt;&lt;cpuload&gt;50&lt;/cpuload&gt;&lt;natedipaddr&gt;10.0.2.15&lt;/natedipaddr&gt;&lt;ipaddr&gt;10.0.2.15&lt;/ipaddr&gt;&lt;hwaddr&gt;&lt;/hwaddr&gt;&lt;timezone&gt;Etc/UTC&lt;/timezone&gt;&lt;os&gt;LINUX&lt;/os&gt;&lt;osversion&gt;3.13.0-129-generic&lt;/osversion&gt;&lt;javaversion&gt;1.8.0_141&lt;/javaversion&gt;&lt;javadatamodel&gt;64&lt;/javadatamodel&gt;&lt;cputype&gt;AMD64&lt;/cputype&gt;&lt;cpunb&gt;1&lt;/cpunb&gt;&lt;cpumodel&gt;unknown&lt;/cpumodel&gt;&lt;cpuspeed&gt;0&lt;/cpuspeed&gt;&lt;totalmem&gt;0&lt;/totalmem&gt;&lt;totalswap&gt;0&lt;/totalswap&gt;&lt;totaltmp&gt;40284&lt;/totaltmp&gt;&lt;freetmp&gt;37263&lt;/freetmp&gt;&lt;project&gt;&lt;/project&gt;&lt;active&gt;true&lt;/active&gt;&lt;incomingconnections&gt;false&lt;/incomingconnections&gt;&lt;available&gt;false&lt;/available&gt;&lt;pilotjob&gt;false&lt;/pilotjob&gt;&lt;sgid&gt;&lt;/sgid&gt;&lt;timeout&gt;15000&lt;/timeout&gt;&lt;traces&gt;false&lt;/traces&gt;&lt;acceptbin&gt;false&lt;/acceptbin&gt;&lt;version&gt;10.6.0-head&lt;/version&gt;&lt;/host&gt;
[13/Sep/2017:19:22:34 +0000] [xtremweb.communications.HTTPServer_HTTPServer_218] INFO : started, listening on port : 9443
</msg>
<status status="PASS" endtime="20170913 19:22:35.349" starttime="20170913 19:22:35.341"></status>
</kw>
<status status="PASS" endtime="20170913 19:22:35.349" starttime="20170913 19:22:35.340"></status>
</kw>
<kw name="Grep File" library="OperatingSystem">
<doc>Returns the lines of the specified file that match the ``pattern``.</doc>
<arguments>
<arg>${log}</arg>
<arg>listening on port : ${XWCONFIGURE.VALUES.HTTPSPORT}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20170913 19:22:35.350" html="yes" level="INFO">Reading file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170913 19:22:35.352" level="INFO">2 out of 59 lines matched</msg>
<msg timestamp="20170913 19:22:35.352" level="INFO">${ret} = [13/Sep/2017:19:22:34 +0000] [xtremweb.communications.HTTPServer_main_1] INFO : started, listening on port : 9443
[13/Sep/2017:19:22:34 +0000] [xtremweb.communications.HTTPServer_HTTPServer_218] INFO ...</msg>
<status status="PASS" endtime="20170913 19:22:35.352" starttime="20170913 19:22:35.350"></status>
</kw>
<kw name="Get Line Count" library="String">
<doc>Returns and logs the number of lines in the given string.</doc>
<arguments>
<arg>${ret}</arg>
</arguments>
<assign>
<var>${line_count}</var>
</assign>
<msg timestamp="20170913 19:22:35.352" level="INFO">2 lines</msg>
<msg timestamp="20170913 19:22:35.352" level="INFO">${line_count} = 2</msg>
<status status="PASS" endtime="20170913 19:22:35.352" starttime="20170913 19:22:35.352"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${line_count}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20170913 19:22:35.353" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170913 19:22:35.353" starttime="20170913 19:22:35.352"></status>
</kw>
<status status="PASS" endtime="20170913 19:22:35.353" starttime="20170913 19:22:35.339"></status>
</kw>
<status status="PASS" endtime="20170913 19:22:35.353" starttime="20170913 19:22:30.328"></status>
</kw>
<kw name="Log XtremWeb Process Log File" library="XWServer">
<kw name="Log File" library="OperatingSystem">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<msg timestamp="20170913 19:22:35.354" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170913 19:22:35.354" level="INFO">Wed Sep 13 19:22:30 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : checking launch url
Wed Sep 13 19:22:30 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] WARNING : no launcher URL defined
Wed Sep 13 19:22:30 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : launching SmartSockets hub
[13/Sep/2017:19:22:32 +0000] [main_1] ERROR : setRole : role redefined ?! (was SERVER)
[13/Sep/2017:19:22:33 +0000] [xtremweb.database.DBConnPoolThread_main_1] INFO : Connection to database jdbc:mysql://localhost/xtremweb is ok, 70 created
[13/Sep/2017:19:22:33 +0000] [xtremweb.dispatcher.DBInterface_main_1] WARN : Can't retrieve any app
[13/Sep/2017:19:22:33 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't create ProxyValidator
[13/Sep/2017:19:22:33 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.io.FileNotFoundException: /tmp/castore (No such file or directory) (/tmp/castore (No such file or directory))
[13/Sep/2017:19:22:33 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't add CA certificates to keystore
[13/Sep/2017:19:22:33 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.lang.NullPointerException (null)
[13/Sep/2017:19:22:33 +0000] [xtremweb.dispatcher.HashTaskSet_TaskSet_14] INFO : TaskSet started (300000)
[13/Sep/2017:19:22:34 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : still waiting task set...
[13/Sep/2017:19:22:34 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : UDP server not started
[13/Sep/2017:19:22:34 +0000] [xtremweb.communications.TCPServer_TCPServerNIO_15] INFO : started, listening on port : 4321
log4j:WARN No appenders could be found for logger (org.eclipse.jetty.util.log).
log4j:WARN Please initialize the log4j system properly.
log4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.
[13/Sep/2017:19:22:34 +0000] [xtremweb.communications.HTTPServer_main_1] INFO : started, listening on port : 9443
[13/Sep/2017:19:22:34 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : FACEBOOK : java.net.MalformedURLException: no protocol: 
[13/Sep/2017:19:22:34 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : GOOGLE : java.net.MalformedURLException: no protocol: 
[13/Sep/2017:19:22:34 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : TWITTER : java.net.MalformedURLException: no protocol: 
[13/Sep/2017:19:22:34 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : YAHOO : java.net.MalformedURLException: no protocol: 
[13/Sep/2017:19:22:34 +0000] [main_1] ERROR : Can't add new entry to keystore
[13/Sep/2017:19:22:34 +0000] [main_1] WARN : javax.net.ssl.SSLHandshakeException: sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target (sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target)
[13/Sep/2017:19:22:34 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : XWHEP Dispatcher(10.6.0-head) started [Wed Sep 13 19:22:34 UTC 2017]
[13/Sep/2017:19:22:34 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : DB vendor  = mysql
[13/Sep/2017:19:22:34 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : mileStone  = 
[13/Sep/2017:19:22:34 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Time out   = 15000
[13/Sep/2017:19:22:34 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Disk opt'd = true
[13/Sep/2017:19:22:34 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Net  opt'd = true
[13/Sep/2017:19:22:34 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : NIO        = true
XWHEP Dispatcher started  Wed Sep 13 19:22:34 UTC 2017
Name             : vagrant-ubuntu-trusty-64
Version          : 10.6.0-head
Identity         : 
XWRole           : SERVER
Started on       : Wed Sep 13 19:22:32 UTC 2017
Scheduler        : xtremweb.dispatcher.MatchingScheduler
SmartSockets hub : 172.28.128.3/172.17.0.1/10.0.2.15-4329#a2.97.b0.e6.cc.7c.00.00.ce.4b.02.42.7b.de.a1.dc~vagrant
Server HTTP      : true
Alive            : 300
Alive time out   : 900
Polling time out : 15000
Optimize zip     : true
Optimize network : true
NIO              : true
Comm layer       : xtremweb.communications.TCPClient
Socket time out  : 60000
Socket retries   : 50
Max connections  : 200
TCP port         : 4321
UDP port         : 4323
HTPP  port       : 80
HTPPS port       : 9443
Sun RPC interposition port : 4328
Sandbox path : /usr/bin/lxc
Sandbox launch args : 
Host &lt;host&gt;&lt;uid&gt;21677eee-a27b-4050-985d-ce997f7e1f7a&lt;/uid&gt;&lt;accessrights&gt;0x755&lt;/accessrights&gt;&lt;name&gt;vagrant-ubuntu-trusty-64&lt;/name&gt;&lt;cpuload&gt;50&lt;/cpuload&gt;&lt;natedipaddr&gt;10.0.2.15&lt;/natedipaddr&gt;&lt;ipaddr&gt;10.0.2.15&lt;/ipaddr&gt;&lt;hwaddr&gt;&lt;/hwaddr&gt;&lt;timezone&gt;Etc/UTC&lt;/timezone&gt;&lt;os&gt;LINUX&lt;/os&gt;&lt;osversion&gt;3.13.0-129-generic&lt;/osversion&gt;&lt;javaversion&gt;1.8.0_141&lt;/javaversion&gt;&lt;javadatamodel&gt;64&lt;/javadatamodel&gt;&lt;cputype&gt;AMD64&lt;/cputype&gt;&lt;cpunb&gt;1&lt;/cpunb&gt;&lt;cpumodel&gt;unknown&lt;/cpumodel&gt;&lt;cpuspeed&gt;0&lt;/cpuspeed&gt;&lt;totalmem&gt;0&lt;/totalmem&gt;&lt;totalswap&gt;0&lt;/totalswap&gt;&lt;totaltmp&gt;40284&lt;/totaltmp&gt;&lt;freetmp&gt;37263&lt;/freetmp&gt;&lt;project&gt;&lt;/project&gt;&lt;active&gt;true&lt;/active&gt;&lt;incomingconnections&gt;false&lt;/incomingconnections&gt;&lt;available&gt;false&lt;/available&gt;&lt;pilotjob&gt;false&lt;/pilotjob&gt;&lt;sgid&gt;&lt;/sgid&gt;&lt;timeout&gt;15000&lt;/timeout&gt;&lt;traces&gt;false&lt;/traces&gt;&lt;acceptbin&gt;false&lt;/acceptbin&gt;&lt;version&gt;10.6.0-head&lt;/version&gt;&lt;/host&gt;
[13/Sep/2017:19:22:34 +0000] [xtremweb.communications.HTTPServer_HTTPServer_218] INFO : started, listening on port : 9443
</msg>
<status status="PASS" endtime="20170913 19:22:35.354" starttime="20170913 19:22:35.353"></status>
</kw>
<status status="PASS" endtime="20170913 19:22:35.355" starttime="20170913 19:22:35.353"></status>
</kw>
<status status="PASS" endtime="20170913 19:22:35.355" starttime="20170913 19:22:30.304"></status>
</kw>
<kw name="Start XtremWeb Worker" library="XWWorker">
<arguments>
<arg>${DIST_XWHEP_PATH}</arg>
</arguments>
<kw name="File Should Exist" library="OperatingSystem">
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xtremweb.worker.conf</arg>
</arguments>
<msg timestamp="20170913 19:22:35.356" html="yes" level="INFO">File '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf&lt;/a&gt;' exists.</msg>
<status status="PASS" endtime="20170913 19:22:35.356" starttime="20170913 19:22:35.355"></status>
</kw>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xtremweb.worker.conf</arg>
</arguments>
<assign>
<var>${config_content}</var>
</assign>
<msg timestamp="20170913 19:22:35.357" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf&lt;/a&gt;'.</msg>
<msg timestamp="20170913 19:22:35.358" level="INFO">${config_content} = #
# Copyrights     : CNRS
# Author         : Oleg Lodygensky
# Acknowledgment : XtremWeb-HEP is based on XtremWeb 1.8.0 by inria : http://www.xtremweb.net/
# Web            : http://www.xtremweb-hep.o...</msg>
<status status="PASS" endtime="20170913 19:22:35.358" starttime="20170913 19:22:35.356"></status>
</kw>
<kw name="Remove String Using Regexp" library="String">
<doc>Removes ``patterns`` from the given ``string``.</doc>
<arguments>
<arg>${config_content}</arg>
<arg>LAUNCHERURL=${XWCONFIGURE.VALUES.XWUPGRADEURL}</arg>
</arguments>
<assign>
<var>${config_content_filtered}</var>
</assign>
<msg timestamp="20170913 19:22:35.358" level="INFO">${config_content_filtered} = #
# Copyrights     : CNRS
# Author         : Oleg Lodygensky
# Acknowledgment : XtremWeb-HEP is based on XtremWeb 1.8.0 by inria : http://www.xtremweb.net/
# Web            : http://www.xtremweb-hep.o...</msg>
<status status="PASS" endtime="20170913 19:22:35.358" starttime="20170913 19:22:35.358"></status>
</kw>
<kw name="Create File" library="OperatingSystem">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xtremweb.worker.conf</arg>
<arg>content=${config_content_filtered}</arg>
</arguments>
<msg timestamp="20170913 19:22:35.364" html="yes" level="INFO">Created file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170913 19:22:35.364" starttime="20170913 19:22:35.359"></status>
</kw>
<kw name="Remove File" library="OperatingSystem">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.worker.process.log</arg>
</arguments>
<msg timestamp="20170913 19:22:35.367" html="yes" level="INFO">Removed file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.worker.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.worker.process.log&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170913 19:22:35.367" starttime="20170913 19:22:35.365"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/bin/xtremweb.worker console</arg>
<arg>shell=yes</arg>
<arg>stderr=STDOUT</arg>
<arg>stdout=${DIST_XWHEP_PATH}/xwhep.worker.process.log</arg>
</arguments>
<assign>
<var>${created_process}</var>
</assign>
<msg timestamp="20170913 19:22:35.369" level="INFO">Starting process:
/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/xtremweb.worker console</msg>
<msg timestamp="20170913 19:22:35.374" level="INFO">${created_process} = 66</msg>
<status status="PASS" endtime="20170913 19:22:35.374" starttime="20170913 19:22:35.367"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${WORKER_PROCESS}</arg>
<arg>${created_process}</arg>
</arguments>
<msg timestamp="20170913 19:22:35.375" level="INFO">${WORKER_PROCESS} = 66</msg>
<status status="PASS" endtime="20170913 19:22:35.375" starttime="20170913 19:22:35.375"></status>
</kw>
<kw name="Log File" library="OperatingSystem">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.worker.process.log</arg>
</arguments>
<msg timestamp="20170913 19:22:35.376" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.worker.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.worker.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170913 19:22:35.377" level="INFO"></msg>
<status status="PASS" endtime="20170913 19:22:35.377" starttime="20170913 19:22:35.375"></status>
</kw>
<status status="PASS" endtime="20170913 19:22:35.378" starttime="20170913 19:22:35.355"></status>
</kw>
<status status="PASS" endtime="20170913 19:22:35.378" starttime="20170913 19:22:30.210"></status>
</kw>
<status status="PASS" endtime="20170913 19:22:35.378" starttime="20170913 19:22:29.975"></status>
</kw>
<kw name="XWSENDAPPCommand" library="XWClient">
<doc>Usage : SENDAPP appName appType cpuType osName URI | UID : inserts/updates an application; URI or UID points to binary file ; application name must be the first parameter</doc>
<arguments>
<arg>ls</arg>
<arg>DEPLOYABLE</arg>
<arg>LINUX</arg>
<arg>AMD64</arg>
<arg>/bin/ls</arg>
</arguments>
<assign>
<var>${uid}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd ${DIST_XWHEP_PATH}/bin &amp;&amp; ./xwsendapp ${appName} ${appType} ${cpuType} ${osName} ${uri-udi}</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${cmd_result}</var>
</assign>
<msg timestamp="20170913 19:22:35.380" level="INFO">Starting process:
cd /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin &amp;&amp; ./xwsendapp ls DEPLOYABLE LINUX AMD64 /bin/ls</msg>
<msg timestamp="20170913 19:22:35.384" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170913 19:22:36.471" level="INFO">Process completed.</msg>
<msg timestamp="20170913 19:22:36.472" level="INFO">${cmd_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170913 19:22:36.472" starttime="20170913 19:22:35.379"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stderr}</arg>
</arguments>
<msg timestamp="20170913 19:22:36.473" level="INFO"></msg>
<status status="PASS" endtime="20170913 19:22:36.473" starttime="20170913 19:22:36.472"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
</arguments>
<msg timestamp="20170913 19:22:36.473" level="INFO">xw://vagrant-ubuntu-trusty-64/6d7f726e-69de-44e1-8e89-3e76c5725654</msg>
<status status="PASS" endtime="20170913 19:22:36.473" starttime="20170913 19:22:36.473"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${cmd_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170913 19:22:36.474" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170913 19:22:36.474" starttime="20170913 19:22:36.473"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
<arg>-36</arg>
</arguments>
<assign>
<var>${uid}</var>
</assign>
<msg timestamp="20170913 19:22:36.474" level="INFO">${uid} = 6d7f726e-69de-44e1-8e89-3e76c5725654</msg>
<status status="PASS" endtime="20170913 19:22:36.474" starttime="20170913 19:22:36.474"></status>
</kw>
<msg timestamp="20170913 19:22:36.474" level="INFO">${uid} = 6d7f726e-69de-44e1-8e89-3e76c5725654</msg>
<status status="PASS" endtime="20170913 19:22:36.474" starttime="20170913 19:22:35.378"></status>
</kw>
<kw name="Count From Apps Where Uid" library="XWServer">
<arguments>
<arg>${uid}</arg>
<arg>1</arg>
</arguments>
<kw name="Count From Table Where Uid" library="MySql">
<arguments>
<arg>apps</arg>
<arg>${uid}</arg>
<arg>${countExpected}</arg>
</arguments>
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170913 19:22:36.476" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170913 19:22:36.477" starttime="20170913 19:22:36.476"></status>
</kw>
<status status="PASS" endtime="20170913 19:22:36.477" starttime="20170913 19:22:36.475"></status>
</kw>
<kw name="Row Count Is Equal To X" library="DatabaseLibrary">
<doc>Check if the number of rows returned from `selectStatement` is equal to the value submitted. If not, then this</doc>
<arguments>
<arg>SELECT * FROM ${table} WHERE uid = '${uid}'</arg>
<arg>${countExpected}</arg>
</arguments>
<msg timestamp="20170913 19:22:36.478" level="INFO">Executing : Row Count Is Equal To X  |  SELECT * FROM apps WHERE uid = '6d7f726e-69de-44e1-8e89-3e76c5725654'  |  1 </msg>
<msg timestamp="20170913 19:22:36.478" level="INFO">Executing : Row Count  |  SELECT * FROM apps WHERE uid = '6d7f726e-69de-44e1-8e89-3e76c5725654' </msg>
<status status="PASS" endtime="20170913 19:22:36.479" starttime="20170913 19:22:36.477"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170913 19:22:36.480" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170913 19:22:36.480" starttime="20170913 19:22:36.479"></status>
</kw>
<status status="PASS" endtime="20170913 19:22:36.480" starttime="20170913 19:22:36.479"></status>
</kw>
<status status="PASS" endtime="20170913 19:22:36.480" starttime="20170913 19:22:36.475"></status>
</kw>
<status status="PASS" endtime="20170913 19:22:36.480" starttime="20170913 19:22:36.475"></status>
</kw>
<kw name="XWSUBMITCommand" library="XWClient">
<doc>Usage : XWSUBMIT appName</doc>
<arguments>
<arg>ls</arg>
</arguments>
<assign>
<var>${workuid}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd ${DIST_XWHEP_PATH}/bin &amp;&amp; ./xwsubmit ${appName}</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${cmd_result}</var>
</assign>
<msg timestamp="20170913 19:22:36.481" level="INFO">Starting process:
cd /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin &amp;&amp; ./xwsubmit ls</msg>
<msg timestamp="20170913 19:22:36.484" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170913 19:22:37.085" level="INFO">Process completed.</msg>
<msg timestamp="20170913 19:22:37.085" level="INFO">${cmd_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170913 19:22:37.085" starttime="20170913 19:22:36.481"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stderr}</arg>
</arguments>
<msg timestamp="20170913 19:22:37.086" level="INFO"></msg>
<status status="PASS" endtime="20170913 19:22:37.086" starttime="20170913 19:22:37.086"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
</arguments>
<msg timestamp="20170913 19:22:37.086" level="INFO">xw://vagrant-ubuntu-trusty-64/9caa6b53-916f-48e3-a843-58c2b0b0ed7c</msg>
<status status="PASS" endtime="20170913 19:22:37.087" starttime="20170913 19:22:37.086"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${cmd_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170913 19:22:37.087" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170913 19:22:37.087" starttime="20170913 19:22:37.087"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
<arg>-36</arg>
</arguments>
<assign>
<var>${uid}</var>
</assign>
<msg timestamp="20170913 19:22:37.088" level="INFO">${uid} = 9caa6b53-916f-48e3-a843-58c2b0b0ed7c</msg>
<status status="PASS" endtime="20170913 19:22:37.088" starttime="20170913 19:22:37.087"></status>
</kw>
<msg timestamp="20170913 19:22:37.088" level="INFO">${workuid} = 9caa6b53-916f-48e3-a843-58c2b0b0ed7c</msg>
<status status="PASS" endtime="20170913 19:22:37.088" starttime="20170913 19:22:36.480"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${workuid}</arg>
</arguments>
<msg timestamp="20170913 19:22:37.088" level="INFO">9caa6b53-916f-48e3-a843-58c2b0b0ed7c</msg>
<status status="PASS" endtime="20170913 19:22:37.088" starttime="20170913 19:22:37.088"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3 min</arg>
<arg>5 sec</arg>
<arg>Check XWSTATUS Completed</arg>
<arg>${workuid}</arg>
</arguments>
<kw name="Check XWSTATUS Completed" library="XWClient">
<arguments>
<arg>${workuid}</arg>
</arguments>
<kw name="XWSTATUSCommand" library="XWClient">
<doc>Usage : XWSTATUS uid</doc>
<arguments>
<arg>${uid}</arg>
</arguments>
<assign>
<var>${status_result}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd ${DIST_XWHEP_PATH}/bin &amp;&amp; ./xwstatus ${uid}</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${cmd_result}</var>
</assign>
<msg timestamp="20170913 19:22:37.090" level="INFO">Starting process:
cd /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin &amp;&amp; ./xwstatus 9caa6b53-916f-48e3-a843-58c2b0b0ed7c</msg>
<msg timestamp="20170913 19:22:37.093" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170913 19:22:37.629" level="INFO">Process completed.</msg>
<msg timestamp="20170913 19:22:37.629" level="INFO">${cmd_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170913 19:22:37.629" starttime="20170913 19:22:37.090"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stderr}</arg>
</arguments>
<msg timestamp="20170913 19:22:37.630" level="INFO"></msg>
<status status="PASS" endtime="20170913 19:22:37.630" starttime="20170913 19:22:37.630"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
</arguments>
<msg timestamp="20170913 19:22:37.631" level="INFO"> UID='9caa6b53-916f-48e3-a843-58c2b0b0ed7c', STATUS='PENDING', COMPLETEDDATE=NULL, LABEL=NULL</msg>
<status status="PASS" endtime="20170913 19:22:37.631" starttime="20170913 19:22:37.630"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${cmd_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170913 19:22:37.631" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170913 19:22:37.632" starttime="20170913 19:22:37.631"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
<arg>STATUS='(?P&lt;status&gt;.*)', COMPLETEDDATE</arg>
<arg>status</arg>
</arguments>
<assign>
<var>@{status_result}</var>
</assign>
<msg timestamp="20170913 19:22:37.632" level="INFO">@{status_result} = [ PENDING ]</msg>
<status status="PASS" endtime="20170913 19:22:37.632" starttime="20170913 19:22:37.632"></status>
</kw>
<msg timestamp="20170913 19:22:37.633" level="INFO">${status_result} = PENDING</msg>
<status status="PASS" endtime="20170913 19:22:37.633" starttime="20170913 19:22:37.090"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${status_result}</arg>
<arg>COMPLETED</arg>
</arguments>
<msg timestamp="20170913 19:22:37.633" level="FAIL">PENDING != COMPLETED</msg>
<status status="FAIL" endtime="20170913 19:22:37.633" starttime="20170913 19:22:37.633"></status>
</kw>
<status status="FAIL" endtime="20170913 19:22:37.633" starttime="20170913 19:22:37.089"></status>
</kw>
<kw name="Check XWSTATUS Completed" library="XWClient">
<arguments>
<arg>${workuid}</arg>
</arguments>
<kw name="XWSTATUSCommand" library="XWClient">
<doc>Usage : XWSTATUS uid</doc>
<arguments>
<arg>${uid}</arg>
</arguments>
<assign>
<var>${status_result}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd ${DIST_XWHEP_PATH}/bin &amp;&amp; ./xwstatus ${uid}</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${cmd_result}</var>
</assign>
<msg timestamp="20170913 19:22:42.636" level="INFO">Starting process:
cd /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin &amp;&amp; ./xwstatus 9caa6b53-916f-48e3-a843-58c2b0b0ed7c</msg>
<msg timestamp="20170913 19:22:42.640" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170913 19:22:43.227" level="INFO">Process completed.</msg>
<msg timestamp="20170913 19:22:43.227" level="INFO">${cmd_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170913 19:22:43.227" starttime="20170913 19:22:42.636"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stderr}</arg>
</arguments>
<msg timestamp="20170913 19:22:43.228" level="INFO"></msg>
<status status="PASS" endtime="20170913 19:22:43.228" starttime="20170913 19:22:43.228"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
</arguments>
<msg timestamp="20170913 19:22:43.229" level="INFO"> UID='9caa6b53-916f-48e3-a843-58c2b0b0ed7c', STATUS='PENDING', COMPLETEDDATE=NULL, LABEL=NULL</msg>
<status status="PASS" endtime="20170913 19:22:43.229" starttime="20170913 19:22:43.228"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${cmd_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170913 19:22:43.229" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170913 19:22:43.229" starttime="20170913 19:22:43.229"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
<arg>STATUS='(?P&lt;status&gt;.*)', COMPLETEDDATE</arg>
<arg>status</arg>
</arguments>
<assign>
<var>@{status_result}</var>
</assign>
<msg timestamp="20170913 19:22:43.230" level="INFO">@{status_result} = [ PENDING ]</msg>
<status status="PASS" endtime="20170913 19:22:43.230" starttime="20170913 19:22:43.229"></status>
</kw>
<msg timestamp="20170913 19:22:43.230" level="INFO">${status_result} = PENDING</msg>
<status status="PASS" endtime="20170913 19:22:43.230" starttime="20170913 19:22:42.635"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${status_result}</arg>
<arg>COMPLETED</arg>
</arguments>
<msg timestamp="20170913 19:22:43.230" level="FAIL">PENDING != COMPLETED</msg>
<status status="FAIL" endtime="20170913 19:22:43.231" starttime="20170913 19:22:43.230"></status>
</kw>
<status status="FAIL" endtime="20170913 19:22:43.231" starttime="20170913 19:22:42.634"></status>
</kw>
<kw name="Check XWSTATUS Completed" library="XWClient">
<arguments>
<arg>${workuid}</arg>
</arguments>
<kw name="XWSTATUSCommand" library="XWClient">
<doc>Usage : XWSTATUS uid</doc>
<arguments>
<arg>${uid}</arg>
</arguments>
<assign>
<var>${status_result}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd ${DIST_XWHEP_PATH}/bin &amp;&amp; ./xwstatus ${uid}</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${cmd_result}</var>
</assign>
<msg timestamp="20170913 19:22:48.233" level="INFO">Starting process:
cd /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin &amp;&amp; ./xwstatus 9caa6b53-916f-48e3-a843-58c2b0b0ed7c</msg>
<msg timestamp="20170913 19:22:48.236" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170913 19:22:48.736" level="INFO">Process completed.</msg>
<msg timestamp="20170913 19:22:48.736" level="INFO">${cmd_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170913 19:22:48.736" starttime="20170913 19:22:48.233"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stderr}</arg>
</arguments>
<msg timestamp="20170913 19:22:48.737" level="INFO"></msg>
<status status="PASS" endtime="20170913 19:22:48.737" starttime="20170913 19:22:48.737"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
</arguments>
<msg timestamp="20170913 19:22:48.737" level="INFO"> UID='9caa6b53-916f-48e3-a843-58c2b0b0ed7c', STATUS='PENDING', COMPLETEDDATE=NULL, LABEL=NULL</msg>
<status status="PASS" endtime="20170913 19:22:48.737" starttime="20170913 19:22:48.737"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${cmd_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170913 19:22:48.738" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170913 19:22:48.738" starttime="20170913 19:22:48.738"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
<arg>STATUS='(?P&lt;status&gt;.*)', COMPLETEDDATE</arg>
<arg>status</arg>
</arguments>
<assign>
<var>@{status_result}</var>
</assign>
<msg timestamp="20170913 19:22:48.738" level="INFO">@{status_result} = [ PENDING ]</msg>
<status status="PASS" endtime="20170913 19:22:48.738" starttime="20170913 19:22:48.738"></status>
</kw>
<msg timestamp="20170913 19:22:48.739" level="INFO">${status_result} = PENDING</msg>
<status status="PASS" endtime="20170913 19:22:48.739" starttime="20170913 19:22:48.232"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${status_result}</arg>
<arg>COMPLETED</arg>
</arguments>
<msg timestamp="20170913 19:22:48.739" level="FAIL">PENDING != COMPLETED</msg>
<status status="FAIL" endtime="20170913 19:22:48.739" starttime="20170913 19:22:48.739"></status>
</kw>
<status status="FAIL" endtime="20170913 19:22:48.739" starttime="20170913 19:22:48.232"></status>
</kw>
<kw name="Check XWSTATUS Completed" library="XWClient">
<arguments>
<arg>${workuid}</arg>
</arguments>
<kw name="XWSTATUSCommand" library="XWClient">
<doc>Usage : XWSTATUS uid</doc>
<arguments>
<arg>${uid}</arg>
</arguments>
<assign>
<var>${status_result}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd ${DIST_XWHEP_PATH}/bin &amp;&amp; ./xwstatus ${uid}</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${cmd_result}</var>
</assign>
<msg timestamp="20170913 19:22:53.742" level="INFO">Starting process:
cd /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin &amp;&amp; ./xwstatus 9caa6b53-916f-48e3-a843-58c2b0b0ed7c</msg>
<msg timestamp="20170913 19:22:53.745" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170913 19:22:54.304" level="INFO">Process completed.</msg>
<msg timestamp="20170913 19:22:54.305" level="INFO">${cmd_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170913 19:22:54.305" starttime="20170913 19:22:53.741"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stderr}</arg>
</arguments>
<msg timestamp="20170913 19:22:54.306" level="INFO"></msg>
<status status="PASS" endtime="20170913 19:22:54.306" starttime="20170913 19:22:54.305"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
</arguments>
<msg timestamp="20170913 19:22:54.306" level="INFO"> UID='9caa6b53-916f-48e3-a843-58c2b0b0ed7c', STATUS='PENDING', COMPLETEDDATE=NULL, LABEL=NULL</msg>
<status status="PASS" endtime="20170913 19:22:54.306" starttime="20170913 19:22:54.306"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${cmd_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170913 19:22:54.307" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170913 19:22:54.307" starttime="20170913 19:22:54.307"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
<arg>STATUS='(?P&lt;status&gt;.*)', COMPLETEDDATE</arg>
<arg>status</arg>
</arguments>
<assign>
<var>@{status_result}</var>
</assign>
<msg timestamp="20170913 19:22:54.307" level="INFO">@{status_result} = [ PENDING ]</msg>
<status status="PASS" endtime="20170913 19:22:54.307" starttime="20170913 19:22:54.307"></status>
</kw>
<msg timestamp="20170913 19:22:54.308" level="INFO">${status_result} = PENDING</msg>
<status status="PASS" endtime="20170913 19:22:54.308" starttime="20170913 19:22:53.741"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${status_result}</arg>
<arg>COMPLETED</arg>
</arguments>
<msg timestamp="20170913 19:22:54.308" level="FAIL">PENDING != COMPLETED</msg>
<status status="FAIL" endtime="20170913 19:22:54.308" starttime="20170913 19:22:54.308"></status>
</kw>
<status status="FAIL" endtime="20170913 19:22:54.308" starttime="20170913 19:22:53.740"></status>
</kw>
<kw name="Check XWSTATUS Completed" library="XWClient">
<arguments>
<arg>${workuid}</arg>
</arguments>
<kw name="XWSTATUSCommand" library="XWClient">
<doc>Usage : XWSTATUS uid</doc>
<arguments>
<arg>${uid}</arg>
</arguments>
<assign>
<var>${status_result}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd ${DIST_XWHEP_PATH}/bin &amp;&amp; ./xwstatus ${uid}</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${cmd_result}</var>
</assign>
<msg timestamp="20170913 19:22:59.313" level="INFO">Starting process:
cd /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin &amp;&amp; ./xwstatus 9caa6b53-916f-48e3-a843-58c2b0b0ed7c</msg>
<msg timestamp="20170913 19:22:59.316" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170913 19:22:59.836" level="INFO">Process completed.</msg>
<msg timestamp="20170913 19:22:59.836" level="INFO">${cmd_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170913 19:22:59.836" starttime="20170913 19:22:59.312"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stderr}</arg>
</arguments>
<msg timestamp="20170913 19:22:59.837" level="INFO"></msg>
<status status="PASS" endtime="20170913 19:22:59.837" starttime="20170913 19:22:59.837"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
</arguments>
<msg timestamp="20170913 19:22:59.838" level="INFO"> UID='9caa6b53-916f-48e3-a843-58c2b0b0ed7c', STATUS='RUNNING', COMPLETEDDATE=NULL, LABEL=NULL</msg>
<status status="PASS" endtime="20170913 19:22:59.838" starttime="20170913 19:22:59.837"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${cmd_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170913 19:22:59.838" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170913 19:22:59.838" starttime="20170913 19:22:59.838"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
<arg>STATUS='(?P&lt;status&gt;.*)', COMPLETEDDATE</arg>
<arg>status</arg>
</arguments>
<assign>
<var>@{status_result}</var>
</assign>
<msg timestamp="20170913 19:22:59.839" level="INFO">@{status_result} = [ RUNNING ]</msg>
<status status="PASS" endtime="20170913 19:22:59.839" starttime="20170913 19:22:59.838"></status>
</kw>
<msg timestamp="20170913 19:22:59.839" level="INFO">${status_result} = RUNNING</msg>
<status status="PASS" endtime="20170913 19:22:59.839" starttime="20170913 19:22:59.312"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${status_result}</arg>
<arg>COMPLETED</arg>
</arguments>
<msg timestamp="20170913 19:22:59.840" level="FAIL">RUNNING != COMPLETED</msg>
<status status="FAIL" endtime="20170913 19:22:59.840" starttime="20170913 19:22:59.839"></status>
</kw>
<status status="FAIL" endtime="20170913 19:22:59.840" starttime="20170913 19:22:59.311"></status>
</kw>
<kw name="Check XWSTATUS Completed" library="XWClient">
<arguments>
<arg>${workuid}</arg>
</arguments>
<kw name="XWSTATUSCommand" library="XWClient">
<doc>Usage : XWSTATUS uid</doc>
<arguments>
<arg>${uid}</arg>
</arguments>
<assign>
<var>${status_result}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd ${DIST_XWHEP_PATH}/bin &amp;&amp; ./xwstatus ${uid}</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${cmd_result}</var>
</assign>
<msg timestamp="20170913 19:23:04.843" level="INFO">Starting process:
cd /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin &amp;&amp; ./xwstatus 9caa6b53-916f-48e3-a843-58c2b0b0ed7c</msg>
<msg timestamp="20170913 19:23:04.847" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170913 19:23:05.400" level="INFO">Process completed.</msg>
<msg timestamp="20170913 19:23:05.401" level="INFO">${cmd_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170913 19:23:05.401" starttime="20170913 19:23:04.843"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stderr}</arg>
</arguments>
<msg timestamp="20170913 19:23:05.402" level="INFO"></msg>
<status status="PASS" endtime="20170913 19:23:05.402" starttime="20170913 19:23:05.401"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
</arguments>
<msg timestamp="20170913 19:23:05.403" level="INFO"> UID='9caa6b53-916f-48e3-a843-58c2b0b0ed7c', STATUS='RUNNING', COMPLETEDDATE=NULL, LABEL=NULL</msg>
<status status="PASS" endtime="20170913 19:23:05.403" starttime="20170913 19:23:05.402"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${cmd_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170913 19:23:05.403" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170913 19:23:05.403" starttime="20170913 19:23:05.403"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
<arg>STATUS='(?P&lt;status&gt;.*)', COMPLETEDDATE</arg>
<arg>status</arg>
</arguments>
<assign>
<var>@{status_result}</var>
</assign>
<msg timestamp="20170913 19:23:05.404" level="INFO">@{status_result} = [ RUNNING ]</msg>
<status status="PASS" endtime="20170913 19:23:05.404" starttime="20170913 19:23:05.404"></status>
</kw>
<msg timestamp="20170913 19:23:05.404" level="INFO">${status_result} = RUNNING</msg>
<status status="PASS" endtime="20170913 19:23:05.405" starttime="20170913 19:23:04.843"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${status_result}</arg>
<arg>COMPLETED</arg>
</arguments>
<msg timestamp="20170913 19:23:05.405" level="FAIL">RUNNING != COMPLETED</msg>
<status status="FAIL" endtime="20170913 19:23:05.405" starttime="20170913 19:23:05.405"></status>
</kw>
<status status="FAIL" endtime="20170913 19:23:05.405" starttime="20170913 19:23:04.842"></status>
</kw>
<kw name="Check XWSTATUS Completed" library="XWClient">
<arguments>
<arg>${workuid}</arg>
</arguments>
<kw name="XWSTATUSCommand" library="XWClient">
<doc>Usage : XWSTATUS uid</doc>
<arguments>
<arg>${uid}</arg>
</arguments>
<assign>
<var>${status_result}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd ${DIST_XWHEP_PATH}/bin &amp;&amp; ./xwstatus ${uid}</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${cmd_result}</var>
</assign>
<msg timestamp="20170913 19:23:10.408" level="INFO">Starting process:
cd /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin &amp;&amp; ./xwstatus 9caa6b53-916f-48e3-a843-58c2b0b0ed7c</msg>
<msg timestamp="20170913 19:23:10.412" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170913 19:23:10.917" level="INFO">Process completed.</msg>
<msg timestamp="20170913 19:23:10.917" level="INFO">${cmd_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170913 19:23:10.917" starttime="20170913 19:23:10.408"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stderr}</arg>
</arguments>
<msg timestamp="20170913 19:23:10.918" level="INFO"></msg>
<status status="PASS" endtime="20170913 19:23:10.918" starttime="20170913 19:23:10.917"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
</arguments>
<msg timestamp="20170913 19:23:10.918" level="INFO"> UID='9caa6b53-916f-48e3-a843-58c2b0b0ed7c', STATUS='RUNNING', COMPLETEDDATE=NULL, LABEL=NULL</msg>
<status status="PASS" endtime="20170913 19:23:10.918" starttime="20170913 19:23:10.918"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${cmd_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170913 19:23:10.919" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170913 19:23:10.919" starttime="20170913 19:23:10.918"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
<arg>STATUS='(?P&lt;status&gt;.*)', COMPLETEDDATE</arg>
<arg>status</arg>
</arguments>
<assign>
<var>@{status_result}</var>
</assign>
<msg timestamp="20170913 19:23:10.919" level="INFO">@{status_result} = [ RUNNING ]</msg>
<status status="PASS" endtime="20170913 19:23:10.920" starttime="20170913 19:23:10.919"></status>
</kw>
<msg timestamp="20170913 19:23:10.920" level="INFO">${status_result} = RUNNING</msg>
<status status="PASS" endtime="20170913 19:23:10.920" starttime="20170913 19:23:10.407"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${status_result}</arg>
<arg>COMPLETED</arg>
</arguments>
<msg timestamp="20170913 19:23:10.921" level="FAIL">RUNNING != COMPLETED</msg>
<status status="FAIL" endtime="20170913 19:23:10.921" starttime="20170913 19:23:10.920"></status>
</kw>
<status status="FAIL" endtime="20170913 19:23:10.921" starttime="20170913 19:23:10.407"></status>
</kw>
<kw name="Check XWSTATUS Completed" library="XWClient">
<arguments>
<arg>${workuid}</arg>
</arguments>
<kw name="XWSTATUSCommand" library="XWClient">
<doc>Usage : XWSTATUS uid</doc>
<arguments>
<arg>${uid}</arg>
</arguments>
<assign>
<var>${status_result}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd ${DIST_XWHEP_PATH}/bin &amp;&amp; ./xwstatus ${uid}</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${cmd_result}</var>
</assign>
<msg timestamp="20170913 19:23:15.925" level="INFO">Starting process:
cd /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin &amp;&amp; ./xwstatus 9caa6b53-916f-48e3-a843-58c2b0b0ed7c</msg>
<msg timestamp="20170913 19:23:15.928" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170913 19:23:16.407" level="INFO">Process completed.</msg>
<msg timestamp="20170913 19:23:16.407" level="INFO">${cmd_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170913 19:23:16.407" starttime="20170913 19:23:15.924"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stderr}</arg>
</arguments>
<msg timestamp="20170913 19:23:16.408" level="INFO"></msg>
<status status="PASS" endtime="20170913 19:23:16.408" starttime="20170913 19:23:16.408"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
</arguments>
<msg timestamp="20170913 19:23:16.408" level="INFO"> UID='9caa6b53-916f-48e3-a843-58c2b0b0ed7c', STATUS='RUNNING', COMPLETEDDATE=NULL, LABEL=NULL</msg>
<status status="PASS" endtime="20170913 19:23:16.409" starttime="20170913 19:23:16.408"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${cmd_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170913 19:23:16.409" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170913 19:23:16.409" starttime="20170913 19:23:16.409"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
<arg>STATUS='(?P&lt;status&gt;.*)', COMPLETEDDATE</arg>
<arg>status</arg>
</arguments>
<assign>
<var>@{status_result}</var>
</assign>
<msg timestamp="20170913 19:23:16.409" level="INFO">@{status_result} = [ RUNNING ]</msg>
<status status="PASS" endtime="20170913 19:23:16.409" starttime="20170913 19:23:16.409"></status>
</kw>
<msg timestamp="20170913 19:23:16.410" level="INFO">${status_result} = RUNNING</msg>
<status status="PASS" endtime="20170913 19:23:16.410" starttime="20170913 19:23:15.924"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${status_result}</arg>
<arg>COMPLETED</arg>
</arguments>
<msg timestamp="20170913 19:23:16.410" level="FAIL">RUNNING != COMPLETED</msg>
<status status="FAIL" endtime="20170913 19:23:16.410" starttime="20170913 19:23:16.410"></status>
</kw>
<status status="FAIL" endtime="20170913 19:23:16.410" starttime="20170913 19:23:15.923"></status>
</kw>
<kw name="Check XWSTATUS Completed" library="XWClient">
<arguments>
<arg>${workuid}</arg>
</arguments>
<kw name="XWSTATUSCommand" library="XWClient">
<doc>Usage : XWSTATUS uid</doc>
<arguments>
<arg>${uid}</arg>
</arguments>
<assign>
<var>${status_result}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd ${DIST_XWHEP_PATH}/bin &amp;&amp; ./xwstatus ${uid}</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${cmd_result}</var>
</assign>
<msg timestamp="20170913 19:23:21.415" level="INFO">Starting process:
cd /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin &amp;&amp; ./xwstatus 9caa6b53-916f-48e3-a843-58c2b0b0ed7c</msg>
<msg timestamp="20170913 19:23:21.417" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170913 19:23:21.987" level="INFO">Process completed.</msg>
<msg timestamp="20170913 19:23:21.988" level="INFO">${cmd_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170913 19:23:21.988" starttime="20170913 19:23:21.415"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stderr}</arg>
</arguments>
<msg timestamp="20170913 19:23:21.988" level="INFO"></msg>
<status status="PASS" endtime="20170913 19:23:21.989" starttime="20170913 19:23:21.988"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
</arguments>
<msg timestamp="20170913 19:23:21.989" level="INFO"> UID='9caa6b53-916f-48e3-a843-58c2b0b0ed7c', STATUS='RUNNING', COMPLETEDDATE=NULL, LABEL=NULL</msg>
<status status="PASS" endtime="20170913 19:23:21.989" starttime="20170913 19:23:21.989"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${cmd_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170913 19:23:21.989" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170913 19:23:21.990" starttime="20170913 19:23:21.989"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
<arg>STATUS='(?P&lt;status&gt;.*)', COMPLETEDDATE</arg>
<arg>status</arg>
</arguments>
<assign>
<var>@{status_result}</var>
</assign>
<msg timestamp="20170913 19:23:21.990" level="INFO">@{status_result} = [ RUNNING ]</msg>
<status status="PASS" endtime="20170913 19:23:21.990" starttime="20170913 19:23:21.990"></status>
</kw>
<msg timestamp="20170913 19:23:21.991" level="INFO">${status_result} = RUNNING</msg>
<status status="PASS" endtime="20170913 19:23:21.991" starttime="20170913 19:23:21.414"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${status_result}</arg>
<arg>COMPLETED</arg>
</arguments>
<msg timestamp="20170913 19:23:21.991" level="FAIL">RUNNING != COMPLETED</msg>
<status status="FAIL" endtime="20170913 19:23:21.991" starttime="20170913 19:23:21.991"></status>
</kw>
<status status="FAIL" endtime="20170913 19:23:21.991" starttime="20170913 19:23:21.414"></status>
</kw>
<kw name="Check XWSTATUS Completed" library="XWClient">
<arguments>
<arg>${workuid}</arg>
</arguments>
<kw name="XWSTATUSCommand" library="XWClient">
<doc>Usage : XWSTATUS uid</doc>
<arguments>
<arg>${uid}</arg>
</arguments>
<assign>
<var>${status_result}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd ${DIST_XWHEP_PATH}/bin &amp;&amp; ./xwstatus ${uid}</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${cmd_result}</var>
</assign>
<msg timestamp="20170913 19:23:26.994" level="INFO">Starting process:
cd /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin &amp;&amp; ./xwstatus 9caa6b53-916f-48e3-a843-58c2b0b0ed7c</msg>
<msg timestamp="20170913 19:23:26.997" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170913 19:23:27.543" level="INFO">Process completed.</msg>
<msg timestamp="20170913 19:23:27.543" level="INFO">${cmd_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170913 19:23:27.543" starttime="20170913 19:23:26.994"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stderr}</arg>
</arguments>
<msg timestamp="20170913 19:23:27.543" level="INFO"></msg>
<status status="PASS" endtime="20170913 19:23:27.543" starttime="20170913 19:23:27.543"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
</arguments>
<msg timestamp="20170913 19:23:27.545" level="INFO"> UID='9caa6b53-916f-48e3-a843-58c2b0b0ed7c', STATUS='RUNNING', COMPLETEDDATE=NULL, LABEL=NULL</msg>
<status status="PASS" endtime="20170913 19:23:27.545" starttime="20170913 19:23:27.544"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${cmd_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170913 19:23:27.545" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170913 19:23:27.545" starttime="20170913 19:23:27.545"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
<arg>STATUS='(?P&lt;status&gt;.*)', COMPLETEDDATE</arg>
<arg>status</arg>
</arguments>
<assign>
<var>@{status_result}</var>
</assign>
<msg timestamp="20170913 19:23:27.546" level="INFO">@{status_result} = [ RUNNING ]</msg>
<status status="PASS" endtime="20170913 19:23:27.546" starttime="20170913 19:23:27.545"></status>
</kw>
<msg timestamp="20170913 19:23:27.546" level="INFO">${status_result} = RUNNING</msg>
<status status="PASS" endtime="20170913 19:23:27.546" starttime="20170913 19:23:26.993"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${status_result}</arg>
<arg>COMPLETED</arg>
</arguments>
<msg timestamp="20170913 19:23:27.546" level="FAIL">RUNNING != COMPLETED</msg>
<status status="FAIL" endtime="20170913 19:23:27.546" starttime="20170913 19:23:27.546"></status>
</kw>
<status status="FAIL" endtime="20170913 19:23:27.546" starttime="20170913 19:23:26.992"></status>
</kw>
<kw name="Check XWSTATUS Completed" library="XWClient">
<arguments>
<arg>${workuid}</arg>
</arguments>
<kw name="XWSTATUSCommand" library="XWClient">
<doc>Usage : XWSTATUS uid</doc>
<arguments>
<arg>${uid}</arg>
</arguments>
<assign>
<var>${status_result}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd ${DIST_XWHEP_PATH}/bin &amp;&amp; ./xwstatus ${uid}</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${cmd_result}</var>
</assign>
<msg timestamp="20170913 19:23:32.552" level="INFO">Starting process:
cd /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin &amp;&amp; ./xwstatus 9caa6b53-916f-48e3-a843-58c2b0b0ed7c</msg>
<msg timestamp="20170913 19:23:32.556" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170913 19:23:33.096" level="INFO">Process completed.</msg>
<msg timestamp="20170913 19:23:33.096" level="INFO">${cmd_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170913 19:23:33.096" starttime="20170913 19:23:32.552"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stderr}</arg>
</arguments>
<msg timestamp="20170913 19:23:33.097" level="INFO"></msg>
<status status="PASS" endtime="20170913 19:23:33.097" starttime="20170913 19:23:33.096"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
</arguments>
<msg timestamp="20170913 19:23:33.097" level="INFO"> UID='9caa6b53-916f-48e3-a843-58c2b0b0ed7c', STATUS='RUNNING', COMPLETEDDATE=NULL, LABEL=NULL</msg>
<status status="PASS" endtime="20170913 19:23:33.097" starttime="20170913 19:23:33.097"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${cmd_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170913 19:23:33.098" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170913 19:23:33.098" starttime="20170913 19:23:33.097"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
<arg>STATUS='(?P&lt;status&gt;.*)', COMPLETEDDATE</arg>
<arg>status</arg>
</arguments>
<assign>
<var>@{status_result}</var>
</assign>
<msg timestamp="20170913 19:23:33.098" level="INFO">@{status_result} = [ RUNNING ]</msg>
<status status="PASS" endtime="20170913 19:23:33.098" starttime="20170913 19:23:33.098"></status>
</kw>
<msg timestamp="20170913 19:23:33.099" level="INFO">${status_result} = RUNNING</msg>
<status status="PASS" endtime="20170913 19:23:33.099" starttime="20170913 19:23:32.551"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${status_result}</arg>
<arg>COMPLETED</arg>
</arguments>
<msg timestamp="20170913 19:23:33.099" level="FAIL">RUNNING != COMPLETED</msg>
<status status="FAIL" endtime="20170913 19:23:33.099" starttime="20170913 19:23:33.099"></status>
</kw>
<status status="FAIL" endtime="20170913 19:23:33.099" starttime="20170913 19:23:32.550"></status>
</kw>
<kw name="Check XWSTATUS Completed" library="XWClient">
<arguments>
<arg>${workuid}</arg>
</arguments>
<kw name="XWSTATUSCommand" library="XWClient">
<doc>Usage : XWSTATUS uid</doc>
<arguments>
<arg>${uid}</arg>
</arguments>
<assign>
<var>${status_result}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd ${DIST_XWHEP_PATH}/bin &amp;&amp; ./xwstatus ${uid}</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${cmd_result}</var>
</assign>
<msg timestamp="20170913 19:23:38.102" level="INFO">Starting process:
cd /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin &amp;&amp; ./xwstatus 9caa6b53-916f-48e3-a843-58c2b0b0ed7c</msg>
<msg timestamp="20170913 19:23:38.105" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170913 19:23:38.614" level="INFO">Process completed.</msg>
<msg timestamp="20170913 19:23:38.614" level="INFO">${cmd_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170913 19:23:38.614" starttime="20170913 19:23:38.101"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stderr}</arg>
</arguments>
<msg timestamp="20170913 19:23:38.615" level="INFO"></msg>
<status status="PASS" endtime="20170913 19:23:38.615" starttime="20170913 19:23:38.615"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
</arguments>
<msg timestamp="20170913 19:23:38.616" level="INFO"> UID='9caa6b53-916f-48e3-a843-58c2b0b0ed7c', STATUS='RUNNING', COMPLETEDDATE=NULL, LABEL=NULL</msg>
<status status="PASS" endtime="20170913 19:23:38.616" starttime="20170913 19:23:38.615"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${cmd_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170913 19:23:38.616" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170913 19:23:38.616" starttime="20170913 19:23:38.616"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
<arg>STATUS='(?P&lt;status&gt;.*)', COMPLETEDDATE</arg>
<arg>status</arg>
</arguments>
<assign>
<var>@{status_result}</var>
</assign>
<msg timestamp="20170913 19:23:38.617" level="INFO">@{status_result} = [ RUNNING ]</msg>
<status status="PASS" endtime="20170913 19:23:38.617" starttime="20170913 19:23:38.616"></status>
</kw>
<msg timestamp="20170913 19:23:38.617" level="INFO">${status_result} = RUNNING</msg>
<status status="PASS" endtime="20170913 19:23:38.617" starttime="20170913 19:23:38.101"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${status_result}</arg>
<arg>COMPLETED</arg>
</arguments>
<msg timestamp="20170913 19:23:38.617" level="FAIL">RUNNING != COMPLETED</msg>
<status status="FAIL" endtime="20170913 19:23:38.617" starttime="20170913 19:23:38.617"></status>
</kw>
<status status="FAIL" endtime="20170913 19:23:38.618" starttime="20170913 19:23:38.100"></status>
</kw>
<kw name="Check XWSTATUS Completed" library="XWClient">
<arguments>
<arg>${workuid}</arg>
</arguments>
<kw name="XWSTATUSCommand" library="XWClient">
<doc>Usage : XWSTATUS uid</doc>
<arguments>
<arg>${uid}</arg>
</arguments>
<assign>
<var>${status_result}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd ${DIST_XWHEP_PATH}/bin &amp;&amp; ./xwstatus ${uid}</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${cmd_result}</var>
</assign>
<msg timestamp="20170913 19:23:43.622" level="INFO">Starting process:
cd /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin &amp;&amp; ./xwstatus 9caa6b53-916f-48e3-a843-58c2b0b0ed7c</msg>
<msg timestamp="20170913 19:23:43.625" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170913 19:23:44.192" level="INFO">Process completed.</msg>
<msg timestamp="20170913 19:23:44.193" level="INFO">${cmd_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170913 19:23:44.193" starttime="20170913 19:23:43.622"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stderr}</arg>
</arguments>
<msg timestamp="20170913 19:23:44.194" level="INFO"></msg>
<status status="PASS" endtime="20170913 19:23:44.194" starttime="20170913 19:23:44.193"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
</arguments>
<msg timestamp="20170913 19:23:44.194" level="INFO"> UID='9caa6b53-916f-48e3-a843-58c2b0b0ed7c', STATUS='COMPLETED', COMPLETEDDATE='2017-09-13 19:23:40', LABEL=NULL</msg>
<status status="PASS" endtime="20170913 19:23:44.194" starttime="20170913 19:23:44.194"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${cmd_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170913 19:23:44.195" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170913 19:23:44.195" starttime="20170913 19:23:44.194"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
<arg>STATUS='(?P&lt;status&gt;.*)', COMPLETEDDATE</arg>
<arg>status</arg>
</arguments>
<assign>
<var>@{status_result}</var>
</assign>
<msg timestamp="20170913 19:23:44.196" level="INFO">@{status_result} = [ COMPLETED ]</msg>
<status status="PASS" endtime="20170913 19:23:44.196" starttime="20170913 19:23:44.195"></status>
</kw>
<msg timestamp="20170913 19:23:44.196" level="INFO">${status_result} = COMPLETED</msg>
<status status="PASS" endtime="20170913 19:23:44.196" starttime="20170913 19:23:43.621"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${status_result}</arg>
<arg>COMPLETED</arg>
</arguments>
<status status="PASS" endtime="20170913 19:23:44.197" starttime="20170913 19:23:44.196"></status>
</kw>
<status status="PASS" endtime="20170913 19:23:44.197" starttime="20170913 19:23:43.620"></status>
</kw>
<status status="PASS" endtime="20170913 19:23:44.197" starttime="20170913 19:22:37.089"></status>
</kw>
<kw name="XWRESULTSCommand" library="XWClient">
<doc>Usage : XWRESULT uid</doc>
<arguments>
<arg>${workuid}</arg>
</arguments>
<assign>
<var>${results_file}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd ${DIST_XWHEP_PATH}/bin &amp;&amp; ./xwresults ${uid}</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${cmd_result}</var>
</assign>
<msg timestamp="20170913 19:23:44.198" level="INFO">Starting process:
cd /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin &amp;&amp; ./xwresults 9caa6b53-916f-48e3-a843-58c2b0b0ed7c</msg>
<msg timestamp="20170913 19:23:44.200" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170913 19:23:44.827" level="INFO">Process completed.</msg>
<msg timestamp="20170913 19:23:44.828" level="INFO">${cmd_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170913 19:23:44.828" starttime="20170913 19:23:44.197"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stderr}</arg>
</arguments>
<msg timestamp="20170913 19:23:44.828" level="INFO"></msg>
<status status="PASS" endtime="20170913 19:23:44.828" starttime="20170913 19:23:44.828"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
</arguments>
<msg timestamp="20170913 19:23:44.829" level="INFO"> UID='9caa6b53-916f-48e3-a843-58c2b0b0ed7c', STATUS='COMPLETED', COMPLETEDDATE='2017-09-13 19:23:40', LABEL=NULL
[13/Sep/2017:19:23:44 +0000] [xtremweb.client.Client_main_1] INFO : Downloaded to : /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/69e89ff3-caa5-4de0-9fe9-b96c2c4f440d_stdout.txt.txt</msg>
<status status="PASS" endtime="20170913 19:23:44.829" starttime="20170913 19:23:44.829"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${cmd_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170913 19:23:44.829" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170913 19:23:44.829" starttime="20170913 19:23:44.829"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
<arg>INFO : Downloaded to : (?P&lt;file&gt;.*)</arg>
<arg>file</arg>
</arguments>
<assign>
<var>@{results_file}</var>
</assign>
<msg timestamp="20170913 19:23:44.831" level="INFO">@{results_file} = [ /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/69e89ff3-caa5-4de0-9fe9-b96c2c4f440d_stdout.txt.txt ]</msg>
<status status="PASS" endtime="20170913 19:23:44.831" starttime="20170913 19:23:44.829"></status>
</kw>
<msg timestamp="20170913 19:23:44.831" level="INFO">${results_file} = /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/69e89ff3-caa5-4de0-9fe9-b96c2c4f440d_stdout.txt.txt</msg>
<status status="PASS" endtime="20170913 19:23:44.831" starttime="20170913 19:23:44.197"></status>
</kw>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${results_file}</arg>
</arguments>
<assign>
<var>${results_file_content}</var>
</assign>
<msg timestamp="20170913 19:23:44.831" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/69e89ff3-caa5-4de0-9fe9-b96c2c4f440d_stdout.txt.txt"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/69e89ff3-caa5-4de0-9fe9-b96c2c4f440d_stdout.txt.txt&lt;/a&gt;'.</msg>
<msg timestamp="20170913 19:23:44.832" level="INFO">${results_file_content} = stderr.txt
stdout.txt
</msg>
<status status="PASS" endtime="20170913 19:23:44.832" starttime="20170913 19:23:44.831"></status>
</kw>
<kw name="Get Line Count" library="String">
<doc>Returns and logs the number of lines in the given string.</doc>
<arguments>
<arg>${results_file_content}</arg>
</arguments>
<assign>
<var>${results_file_content_lines_count}</var>
</assign>
<msg timestamp="20170913 19:23:44.832" level="INFO">2 lines</msg>
<msg timestamp="20170913 19:23:44.832" level="INFO">${results_file_content_lines_count} = 2</msg>
<status status="PASS" endtime="20170913 19:23:44.832" starttime="20170913 19:23:44.832"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${results_file_content_lines_count}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20170913 19:23:44.833" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170913 19:23:44.833" starttime="20170913 19:23:44.832"></status>
</kw>
<kw name="Split To Lines" library="String">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${results_file_content}</arg>
</arguments>
<assign>
<var>@{results_file_lines}</var>
</assign>
<msg timestamp="20170913 19:23:44.833" level="INFO">2 lines returned</msg>
<msg timestamp="20170913 19:23:44.833" level="INFO">@{results_file_lines} = [ stderr.txt | stdout.txt ]</msg>
<status status="PASS" endtime="20170913 19:23:44.833" starttime="20170913 19:23:44.833"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>@{results_file_lines}[0]</arg>
<arg>stderr.txt</arg>
</arguments>
<status status="PASS" endtime="20170913 19:23:44.833" starttime="20170913 19:23:44.833"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>@{results_file_lines}[1]</arg>
<arg>stdout.txt</arg>
</arguments>
<status status="PASS" endtime="20170913 19:23:44.833" starttime="20170913 19:23:44.833"></status>
</kw>
<kw type="teardown" name="End XWtremWeb Command Test" library="XWCommon">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Nothing to do</arg>
</arguments>
<msg timestamp="20170913 19:23:44.836" level="INFO">Nothing to do</msg>
<status status="PASS" endtime="20170913 19:23:44.836" starttime="20170913 19:23:44.836"></status>
</kw>
<status status="PASS" endtime="20170913 19:23:44.836" starttime="20170913 19:23:44.835"></status>
</kw>
<doc>Testing XWSubmit and XWResults cmd</doc>
<tags>
<tag>CommandLine Tests</tag>
</tags>
<status status="PASS" endtime="20170913 19:23:44.836" critical="yes" starttime="20170913 19:22:29.975"></status>
</test>
<test id="s1-s6-t4" name="Test XWSubmit and XWResults Command On LS Binary With Param">
<kw type="setup" name="Begin XWtremWeb Command Test" library="XWCommon">
<kw name="Ping XWtremWeb Database" library="XWServer">
<kw name="Xtremweb Tables Must Exist" library="MySql">
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170913 19:23:44.839" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170913 19:23:44.840" starttime="20170913 19:23:44.838"></status>
</kw>
<status status="PASS" endtime="20170913 19:23:44.840" starttime="20170913 19:23:44.838"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>appTypes</arg>
</arguments>
<msg timestamp="20170913 19:23:44.840" level="INFO">Executing : Table Must Exist  |  appTypes </msg>
<msg timestamp="20170913 19:23:44.840" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='appTypes' </msg>
<status status="PASS" endtime="20170913 19:23:44.841" starttime="20170913 19:23:44.840"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps</arg>
</arguments>
<msg timestamp="20170913 19:23:44.841" level="INFO">Executing : Table Must Exist  |  apps </msg>
<msg timestamp="20170913 19:23:44.841" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='apps' </msg>
<status status="PASS" endtime="20170913 19:23:44.842" starttime="20170913 19:23:44.841"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps_history</arg>
</arguments>
<msg timestamp="20170913 19:23:44.842" level="INFO">Executing : Table Must Exist  |  apps_history </msg>
<msg timestamp="20170913 19:23:44.842" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='apps_history' </msg>
<status status="PASS" endtime="20170913 19:23:44.843" starttime="20170913 19:23:44.842"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>cpuTypes</arg>
</arguments>
<msg timestamp="20170913 19:23:44.843" level="INFO">Executing : Table Must Exist  |  cpuTypes </msg>
<msg timestamp="20170913 19:23:44.843" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='cpuTypes' </msg>
<status status="PASS" endtime="20170913 19:23:44.844" starttime="20170913 19:23:44.843"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>dataTypes</arg>
</arguments>
<msg timestamp="20170913 19:23:44.844" level="INFO">Executing : Table Must Exist  |  dataTypes </msg>
<msg timestamp="20170913 19:23:44.844" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='dataTypes' </msg>
<status status="PASS" endtime="20170913 19:23:44.845" starttime="20170913 19:23:44.844"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas</arg>
</arguments>
<msg timestamp="20170913 19:23:44.845" level="INFO">Executing : Table Must Exist  |  datas </msg>
<msg timestamp="20170913 19:23:44.845" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='datas' </msg>
<status status="PASS" endtime="20170913 19:23:44.846" starttime="20170913 19:23:44.845"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas_history</arg>
</arguments>
<msg timestamp="20170913 19:23:44.846" level="INFO">Executing : Table Must Exist  |  datas_history </msg>
<msg timestamp="20170913 19:23:44.846" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='datas_history' </msg>
<status status="PASS" endtime="20170913 19:23:44.847" starttime="20170913 19:23:44.846"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables</arg>
</arguments>
<msg timestamp="20170913 19:23:44.847" level="INFO">Executing : Table Must Exist  |  executables </msg>
<msg timestamp="20170913 19:23:44.847" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='executables' </msg>
<status status="PASS" endtime="20170913 19:23:44.848" starttime="20170913 19:23:44.847"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables_history</arg>
</arguments>
<msg timestamp="20170913 19:23:44.848" level="INFO">Executing : Table Must Exist  |  executables_history </msg>
<msg timestamp="20170913 19:23:44.848" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='executables_history' </msg>
<status status="PASS" endtime="20170913 19:23:44.849" starttime="20170913 19:23:44.848"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups</arg>
</arguments>
<msg timestamp="20170913 19:23:44.849" level="INFO">Executing : Table Must Exist  |  groups </msg>
<msg timestamp="20170913 19:23:44.849" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='groups' </msg>
<status status="PASS" endtime="20170913 19:23:44.850" starttime="20170913 19:23:44.849"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups_history</arg>
</arguments>
<msg timestamp="20170913 19:23:44.850" level="INFO">Executing : Table Must Exist  |  groups_history </msg>
<msg timestamp="20170913 19:23:44.850" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='groups_history' </msg>
<status status="PASS" endtime="20170913 19:23:44.851" starttime="20170913 19:23:44.850"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts</arg>
</arguments>
<msg timestamp="20170913 19:23:44.851" level="INFO">Executing : Table Must Exist  |  hosts </msg>
<msg timestamp="20170913 19:23:44.851" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='hosts' </msg>
<status status="PASS" endtime="20170913 19:23:44.852" starttime="20170913 19:23:44.851"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts_history</arg>
</arguments>
<msg timestamp="20170913 19:23:44.852" level="INFO">Executing : Table Must Exist  |  hosts_history </msg>
<msg timestamp="20170913 19:23:44.852" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='hosts_history' </msg>
<status status="PASS" endtime="20170913 19:23:44.853" starttime="20170913 19:23:44.852"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships</arg>
</arguments>
<msg timestamp="20170913 19:23:44.853" level="INFO">Executing : Table Must Exist  |  memberships </msg>
<msg timestamp="20170913 19:23:44.853" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='memberships' </msg>
<status status="PASS" endtime="20170913 19:23:44.854" starttime="20170913 19:23:44.853"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships_history</arg>
</arguments>
<msg timestamp="20170913 19:23:44.854" level="INFO">Executing : Table Must Exist  |  memberships_history </msg>
<msg timestamp="20170913 19:23:44.854" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='memberships_history' </msg>
<status status="PASS" endtime="20170913 19:23:44.855" starttime="20170913 19:23:44.854"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>oses</arg>
</arguments>
<msg timestamp="20170913 19:23:44.855" level="INFO">Executing : Table Must Exist  |  oses </msg>
<msg timestamp="20170913 19:23:44.855" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='oses' </msg>
<status status="PASS" endtime="20170913 19:23:44.856" starttime="20170913 19:23:44.855"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>packageTypes</arg>
</arguments>
<msg timestamp="20170913 19:23:44.856" level="INFO">Executing : Table Must Exist  |  packageTypes </msg>
<msg timestamp="20170913 19:23:44.856" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='packageTypes' </msg>
<status status="PASS" endtime="20170913 19:23:44.857" starttime="20170913 19:23:44.856"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions</arg>
</arguments>
<msg timestamp="20170913 19:23:44.857" level="INFO">Executing : Table Must Exist  |  sessions </msg>
<msg timestamp="20170913 19:23:44.857" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sessions' </msg>
<status status="PASS" endtime="20170913 19:23:44.858" starttime="20170913 19:23:44.857"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions_history</arg>
</arguments>
<msg timestamp="20170913 19:23:44.858" level="INFO">Executing : Table Must Exist  |  sessions_history </msg>
<msg timestamp="20170913 19:23:44.858" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sessions_history' </msg>
<status status="PASS" endtime="20170913 19:23:44.859" starttime="20170913 19:23:44.858"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes</arg>
</arguments>
<msg timestamp="20170913 19:23:44.859" level="INFO">Executing : Table Must Exist  |  sharedAppTypes </msg>
<msg timestamp="20170913 19:23:44.859" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedAppTypes' </msg>
<status status="PASS" endtime="20170913 19:23:44.860" starttime="20170913 19:23:44.859"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes_history</arg>
</arguments>
<msg timestamp="20170913 19:23:44.860" level="INFO">Executing : Table Must Exist  |  sharedAppTypes_history </msg>
<msg timestamp="20170913 19:23:44.860" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedAppTypes_history' </msg>
<status status="PASS" endtime="20170913 19:23:44.861" starttime="20170913 19:23:44.860"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes</arg>
</arguments>
<msg timestamp="20170913 19:23:44.861" level="INFO">Executing : Table Must Exist  |  sharedPackageTypes </msg>
<msg timestamp="20170913 19:23:44.861" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedPackageTypes' </msg>
<status status="PASS" endtime="20170913 19:23:44.862" starttime="20170913 19:23:44.861"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes_history</arg>
</arguments>
<msg timestamp="20170913 19:23:44.862" level="INFO">Executing : Table Must Exist  |  sharedPackageTypes_history </msg>
<msg timestamp="20170913 19:23:44.862" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedPackageTypes_history' </msg>
<status status="PASS" endtime="20170913 19:23:44.863" starttime="20170913 19:23:44.862"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>statuses</arg>
</arguments>
<msg timestamp="20170913 19:23:44.863" level="INFO">Executing : Table Must Exist  |  statuses </msg>
<msg timestamp="20170913 19:23:44.863" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='statuses' </msg>
<status status="PASS" endtime="20170913 19:23:44.864" starttime="20170913 19:23:44.863"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks</arg>
</arguments>
<msg timestamp="20170913 19:23:44.865" level="INFO">Executing : Table Must Exist  |  tasks </msg>
<msg timestamp="20170913 19:23:44.865" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='tasks' </msg>
<status status="PASS" endtime="20170913 19:23:44.866" starttime="20170913 19:23:44.865"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks_history</arg>
</arguments>
<msg timestamp="20170913 19:23:44.866" level="INFO">Executing : Table Must Exist  |  tasks_history </msg>
<msg timestamp="20170913 19:23:44.866" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='tasks_history' </msg>
<status status="PASS" endtime="20170913 19:23:44.867" starttime="20170913 19:23:44.866"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces</arg>
</arguments>
<msg timestamp="20170913 19:23:44.867" level="INFO">Executing : Table Must Exist  |  traces </msg>
<msg timestamp="20170913 19:23:44.867" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='traces' </msg>
<status status="PASS" endtime="20170913 19:23:44.868" starttime="20170913 19:23:44.867"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces_history</arg>
</arguments>
<msg timestamp="20170913 19:23:44.868" level="INFO">Executing : Table Must Exist  |  traces_history </msg>
<msg timestamp="20170913 19:23:44.868" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='traces_history' </msg>
<status status="PASS" endtime="20170913 19:23:44.869" starttime="20170913 19:23:44.868"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>userRights</arg>
</arguments>
<msg timestamp="20170913 19:23:44.869" level="INFO">Executing : Table Must Exist  |  userRights </msg>
<msg timestamp="20170913 19:23:44.869" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='userRights' </msg>
<status status="PASS" endtime="20170913 19:23:44.870" starttime="20170913 19:23:44.869"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups</arg>
</arguments>
<msg timestamp="20170913 19:23:44.870" level="INFO">Executing : Table Must Exist  |  usergroups </msg>
<msg timestamp="20170913 19:23:44.870" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='usergroups' </msg>
<status status="PASS" endtime="20170913 19:23:44.871" starttime="20170913 19:23:44.870"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups_history</arg>
</arguments>
<msg timestamp="20170913 19:23:44.872" level="INFO">Executing : Table Must Exist  |  usergroups_history </msg>
<msg timestamp="20170913 19:23:44.872" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='usergroups_history' </msg>
<status status="PASS" endtime="20170913 19:23:44.872" starttime="20170913 19:23:44.872"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users</arg>
</arguments>
<msg timestamp="20170913 19:23:44.873" level="INFO">Executing : Table Must Exist  |  users </msg>
<msg timestamp="20170913 19:23:44.873" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='users' </msg>
<status status="PASS" endtime="20170913 19:23:44.873" starttime="20170913 19:23:44.872"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users_history</arg>
</arguments>
<msg timestamp="20170913 19:23:44.874" level="INFO">Executing : Table Must Exist  |  users_history </msg>
<msg timestamp="20170913 19:23:44.874" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='users_history' </msg>
<status status="PASS" endtime="20170913 19:23:44.874" starttime="20170913 19:23:44.873"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>version</arg>
</arguments>
<msg timestamp="20170913 19:23:44.875" level="INFO">Executing : Table Must Exist  |  version </msg>
<msg timestamp="20170913 19:23:44.875" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='version' </msg>
<status status="PASS" endtime="20170913 19:23:44.875" starttime="20170913 19:23:44.875"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>versions</arg>
</arguments>
<msg timestamp="20170913 19:23:44.876" level="INFO">Executing : Table Must Exist  |  versions </msg>
<msg timestamp="20170913 19:23:44.876" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='versions' </msg>
<status status="PASS" endtime="20170913 19:23:44.876" starttime="20170913 19:23:44.876"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps</arg>
</arguments>
<msg timestamp="20170913 19:23:44.877" level="INFO">Executing : Table Must Exist  |  view_apps </msg>
<msg timestamp="20170913 19:23:44.877" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps' </msg>
<status status="PASS" endtime="20170913 19:23:44.877" starttime="20170913 19:23:44.877"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps_for_offering</arg>
</arguments>
<msg timestamp="20170913 19:23:44.878" level="INFO">Executing : Table Must Exist  |  view_apps_for_offering </msg>
<msg timestamp="20170913 19:23:44.878" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps_for_offering' </msg>
<status status="PASS" endtime="20170913 19:23:44.878" starttime="20170913 19:23:44.878"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps_for_offering_with_file_sizes</arg>
</arguments>
<msg timestamp="20170913 19:23:44.879" level="INFO">Executing : Table Must Exist  |  view_apps_for_offering_with_file_sizes </msg>
<msg timestamp="20170913 19:23:44.879" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps_for_offering_with_file_sizes' </msg>
<status status="PASS" endtime="20170913 19:23:44.879" starttime="20170913 19:23:44.878"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_datas</arg>
</arguments>
<msg timestamp="20170913 19:23:44.880" level="INFO">Executing : Table Must Exist  |  view_datas </msg>
<msg timestamp="20170913 19:23:44.880" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_datas' </msg>
<status status="PASS" endtime="20170913 19:23:44.880" starttime="20170913 19:23:44.879"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_executables</arg>
</arguments>
<msg timestamp="20170913 19:23:44.881" level="INFO">Executing : Table Must Exist  |  view_executables </msg>
<msg timestamp="20170913 19:23:44.881" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_executables' </msg>
<status status="PASS" endtime="20170913 19:23:44.881" starttime="20170913 19:23:44.880"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_groups</arg>
</arguments>
<msg timestamp="20170913 19:23:44.882" level="INFO">Executing : Table Must Exist  |  view_groups </msg>
<msg timestamp="20170913 19:23:44.882" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_groups' </msg>
<status status="PASS" endtime="20170913 19:23:44.882" starttime="20170913 19:23:44.882"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts</arg>
</arguments>
<msg timestamp="20170913 19:23:44.883" level="INFO">Executing : Table Must Exist  |  view_hosts </msg>
<msg timestamp="20170913 19:23:44.883" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts' </msg>
<status status="PASS" endtime="20170913 19:23:44.884" starttime="20170913 19:23:44.883"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_deployable</arg>
</arguments>
<msg timestamp="20170913 19:23:44.884" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_deployable </msg>
<msg timestamp="20170913 19:23:44.884" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_deployable' </msg>
<status status="PASS" endtime="20170913 19:23:44.885" starttime="20170913 19:23:44.884"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_deployable_and_shared</arg>
</arguments>
<msg timestamp="20170913 19:23:44.885" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_deployable_and_shared </msg>
<msg timestamp="20170913 19:23:44.885" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_deployable_and_shared' </msg>
<status status="PASS" endtime="20170913 19:23:44.886" starttime="20170913 19:23:44.885"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_shared</arg>
</arguments>
<msg timestamp="20170913 19:23:44.886" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_shared </msg>
<msg timestamp="20170913 19:23:44.886" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_shared' </msg>
<status status="PASS" endtime="20170913 19:23:44.887" starttime="20170913 19:23:44.886"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_sessions</arg>
</arguments>
<msg timestamp="20170913 19:23:44.887" level="INFO">Executing : Table Must Exist  |  view_sessions </msg>
<msg timestamp="20170913 19:23:44.887" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_sessions' </msg>
<status status="PASS" endtime="20170913 19:23:44.888" starttime="20170913 19:23:44.887"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_tasks</arg>
</arguments>
<msg timestamp="20170913 19:23:44.888" level="INFO">Executing : Table Must Exist  |  view_tasks </msg>
<msg timestamp="20170913 19:23:44.888" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_tasks' </msg>
<status status="PASS" endtime="20170913 19:23:44.889" starttime="20170913 19:23:44.888"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_traces</arg>
</arguments>
<msg timestamp="20170913 19:23:44.890" level="INFO">Executing : Table Must Exist  |  view_traces </msg>
<msg timestamp="20170913 19:23:44.890" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_traces' </msg>
<status status="PASS" endtime="20170913 19:23:44.891" starttime="20170913 19:23:44.890"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_usergroups</arg>
</arguments>
<msg timestamp="20170913 19:23:44.892" level="INFO">Executing : Table Must Exist  |  view_usergroups </msg>
<msg timestamp="20170913 19:23:44.892" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_usergroups' </msg>
<status status="PASS" endtime="20170913 19:23:44.892" starttime="20170913 19:23:44.891"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users</arg>
</arguments>
<msg timestamp="20170913 19:23:44.892" level="INFO">Executing : Table Must Exist  |  view_users </msg>
<msg timestamp="20170913 19:23:44.893" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users' </msg>
<status status="PASS" endtime="20170913 19:23:44.893" starttime="20170913 19:23:44.892"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_apps</arg>
</arguments>
<msg timestamp="20170913 19:23:44.894" level="INFO">Executing : Table Must Exist  |  view_users_apps </msg>
<msg timestamp="20170913 19:23:44.894" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_apps' </msg>
<status status="PASS" endtime="20170913 19:23:44.894" starttime="20170913 19:23:44.894"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_datas</arg>
</arguments>
<msg timestamp="20170913 19:23:44.895" level="INFO">Executing : Table Must Exist  |  view_users_datas </msg>
<msg timestamp="20170913 19:23:44.895" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_datas' </msg>
<status status="PASS" endtime="20170913 19:23:44.896" starttime="20170913 19:23:44.895"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_groups</arg>
</arguments>
<msg timestamp="20170913 19:23:44.896" level="INFO">Executing : Table Must Exist  |  view_users_groups </msg>
<msg timestamp="20170913 19:23:44.896" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_groups' </msg>
<status status="PASS" endtime="20170913 19:23:44.897" starttime="20170913 19:23:44.896"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_hosts</arg>
</arguments>
<msg timestamp="20170913 19:23:44.897" level="INFO">Executing : Table Must Exist  |  view_users_hosts </msg>
<msg timestamp="20170913 19:23:44.897" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_hosts' </msg>
<status status="PASS" endtime="20170913 19:23:44.898" starttime="20170913 19:23:44.897"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_sessions</arg>
</arguments>
<msg timestamp="20170913 19:23:44.898" level="INFO">Executing : Table Must Exist  |  view_users_sessions </msg>
<msg timestamp="20170913 19:23:44.898" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_sessions' </msg>
<status status="PASS" endtime="20170913 19:23:44.899" starttime="20170913 19:23:44.898"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_tasks</arg>
</arguments>
<msg timestamp="20170913 19:23:44.899" level="INFO">Executing : Table Must Exist  |  view_users_tasks </msg>
<msg timestamp="20170913 19:23:44.899" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_tasks' </msg>
<status status="PASS" endtime="20170913 19:23:44.900" starttime="20170913 19:23:44.899"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_traces</arg>
</arguments>
<msg timestamp="20170913 19:23:44.900" level="INFO">Executing : Table Must Exist  |  view_users_traces </msg>
<msg timestamp="20170913 19:23:44.900" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_traces' </msg>
<status status="PASS" endtime="20170913 19:23:44.901" starttime="20170913 19:23:44.900"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_usergroups</arg>
</arguments>
<msg timestamp="20170913 19:23:44.901" level="INFO">Executing : Table Must Exist  |  view_users_usergroups </msg>
<msg timestamp="20170913 19:23:44.901" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_usergroups' </msg>
<status status="PASS" endtime="20170913 19:23:44.906" starttime="20170913 19:23:44.901"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_users</arg>
</arguments>
<msg timestamp="20170913 19:23:44.907" level="INFO">Executing : Table Must Exist  |  view_users_users </msg>
<msg timestamp="20170913 19:23:44.907" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_users' </msg>
<status status="PASS" endtime="20170913 19:23:44.908" starttime="20170913 19:23:44.906"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_works</arg>
</arguments>
<msg timestamp="20170913 19:23:44.908" level="INFO">Executing : Table Must Exist  |  view_users_works </msg>
<msg timestamp="20170913 19:23:44.908" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_works' </msg>
<status status="PASS" endtime="20170913 19:23:44.909" starttime="20170913 19:23:44.908"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works</arg>
</arguments>
<msg timestamp="20170913 19:23:44.909" level="INFO">Executing : Table Must Exist  |  view_works </msg>
<msg timestamp="20170913 19:23:44.909" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works' </msg>
<status status="PASS" endtime="20170913 19:23:44.910" starttime="20170913 19:23:44.909"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works_for_billing</arg>
</arguments>
<msg timestamp="20170913 19:23:44.911" level="INFO">Executing : Table Must Exist  |  view_works_for_billing </msg>
<msg timestamp="20170913 19:23:44.911" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works_for_billing' </msg>
<status status="PASS" endtime="20170913 19:23:44.911" starttime="20170913 19:23:44.910"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works_for_billing_with_file_sizes</arg>
</arguments>
<msg timestamp="20170913 19:23:44.912" level="INFO">Executing : Table Must Exist  |  view_works_for_billing_with_file_sizes </msg>
<msg timestamp="20170913 19:23:44.912" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works_for_billing_with_file_sizes' </msg>
<status status="PASS" endtime="20170913 19:23:44.913" starttime="20170913 19:23:44.912"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works</arg>
</arguments>
<msg timestamp="20170913 19:23:44.913" level="INFO">Executing : Table Must Exist  |  works </msg>
<msg timestamp="20170913 19:23:44.913" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='works' </msg>
<status status="PASS" endtime="20170913 19:23:44.914" starttime="20170913 19:23:44.913"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works_history</arg>
</arguments>
<msg timestamp="20170913 19:23:44.914" level="INFO">Executing : Table Must Exist  |  works_history </msg>
<msg timestamp="20170913 19:23:44.914" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='works_history' </msg>
<status status="PASS" endtime="20170913 19:23:44.915" starttime="20170913 19:23:44.914"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170913 19:23:44.916" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170913 19:23:44.916" starttime="20170913 19:23:44.915"></status>
</kw>
<status status="PASS" endtime="20170913 19:23:44.916" starttime="20170913 19:23:44.915"></status>
</kw>
<status status="PASS" endtime="20170913 19:23:44.916" starttime="20170913 19:23:44.838"></status>
</kw>
<status status="PASS" endtime="20170913 19:23:44.916" starttime="20170913 19:23:44.838"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>TODO ping XWtremWeb server up</arg>
</arguments>
<msg timestamp="20170913 19:23:44.916" level="INFO">TODO ping XWtremWeb server up</msg>
<status status="PASS" endtime="20170913 19:23:44.916" starttime="20170913 19:23:44.916"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>TODO ping XWtremWeb worker up before one test</arg>
</arguments>
<msg timestamp="20170913 19:23:44.917" level="INFO">TODO ping XWtremWeb worker up before one test</msg>
<status status="PASS" endtime="20170913 19:23:44.917" starttime="20170913 19:23:44.916"></status>
</kw>
<kw name="Delete Fonctionnal Xtremweb Tables" library="MySql">
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170913 19:23:44.918" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170913 19:23:44.918" starttime="20170913 19:23:44.917"></status>
</kw>
<status status="PASS" endtime="20170913 19:23:44.919" starttime="20170913 19:23:44.917"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps</arg>
</arguments>
<msg timestamp="20170913 19:23:44.919" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM apps; </msg>
<status status="PASS" endtime="20170913 19:23:44.920" starttime="20170913 19:23:44.919"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps_history</arg>
</arguments>
<msg timestamp="20170913 19:23:44.920" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM apps_history; </msg>
<status status="PASS" endtime="20170913 19:23:44.921" starttime="20170913 19:23:44.920"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas</arg>
</arguments>
<msg timestamp="20170913 19:23:44.921" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM datas; </msg>
<status status="PASS" endtime="20170913 19:23:44.922" starttime="20170913 19:23:44.921"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas_history</arg>
</arguments>
<msg timestamp="20170913 19:23:44.922" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM datas_history; </msg>
<status status="PASS" endtime="20170913 19:23:44.923" starttime="20170913 19:23:44.922"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables</arg>
</arguments>
<msg timestamp="20170913 19:23:44.923" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM executables; </msg>
<status status="PASS" endtime="20170913 19:23:44.924" starttime="20170913 19:23:44.923"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables_history</arg>
</arguments>
<msg timestamp="20170913 19:23:44.924" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM executables_history; </msg>
<status status="PASS" endtime="20170913 19:23:44.924" starttime="20170913 19:23:44.924"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups</arg>
</arguments>
<msg timestamp="20170913 19:23:44.925" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM groups; </msg>
<status status="PASS" endtime="20170913 19:23:44.925" starttime="20170913 19:23:44.924"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups_history</arg>
</arguments>
<msg timestamp="20170913 19:23:44.925" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM groups_history; </msg>
<status status="PASS" endtime="20170913 19:23:44.925" starttime="20170913 19:23:44.925"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts</arg>
</arguments>
<msg timestamp="20170913 19:23:44.926" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM hosts; </msg>
<status status="PASS" endtime="20170913 19:23:44.928" starttime="20170913 19:23:44.926"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts_history</arg>
</arguments>
<msg timestamp="20170913 19:23:44.928" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM hosts_history; </msg>
<status status="PASS" endtime="20170913 19:23:44.929" starttime="20170913 19:23:44.928"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships</arg>
</arguments>
<msg timestamp="20170913 19:23:44.930" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM memberships; </msg>
<status status="PASS" endtime="20170913 19:23:44.930" starttime="20170913 19:23:44.929"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships_history</arg>
</arguments>
<msg timestamp="20170913 19:23:44.930" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM memberships_history; </msg>
<status status="PASS" endtime="20170913 19:23:44.931" starttime="20170913 19:23:44.930"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions</arg>
</arguments>
<msg timestamp="20170913 19:23:44.931" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sessions; </msg>
<status status="PASS" endtime="20170913 19:23:44.931" starttime="20170913 19:23:44.931"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions_history</arg>
</arguments>
<msg timestamp="20170913 19:23:44.932" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sessions_history; </msg>
<status status="PASS" endtime="20170913 19:23:44.932" starttime="20170913 19:23:44.932"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes</arg>
</arguments>
<msg timestamp="20170913 19:23:44.932" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedAppTypes; </msg>
<status status="PASS" endtime="20170913 19:23:44.933" starttime="20170913 19:23:44.932"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes_history</arg>
</arguments>
<msg timestamp="20170913 19:23:44.933" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedAppTypes_history; </msg>
<status status="PASS" endtime="20170913 19:23:44.933" starttime="20170913 19:23:44.933"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes</arg>
</arguments>
<msg timestamp="20170913 19:23:44.934" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedPackageTypes; </msg>
<status status="PASS" endtime="20170913 19:23:44.934" starttime="20170913 19:23:44.934"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes_history</arg>
</arguments>
<msg timestamp="20170913 19:23:44.934" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedPackageTypes_history; </msg>
<status status="PASS" endtime="20170913 19:23:44.935" starttime="20170913 19:23:44.934"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks</arg>
</arguments>
<msg timestamp="20170913 19:23:44.935" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM tasks; </msg>
<status status="PASS" endtime="20170913 19:23:44.935" starttime="20170913 19:23:44.935"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks_history</arg>
</arguments>
<msg timestamp="20170913 19:23:44.936" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM tasks_history; </msg>
<status status="PASS" endtime="20170913 19:23:44.937" starttime="20170913 19:23:44.935"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces</arg>
</arguments>
<msg timestamp="20170913 19:23:44.937" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM traces; </msg>
<status status="PASS" endtime="20170913 19:23:44.938" starttime="20170913 19:23:44.937"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces_history</arg>
</arguments>
<msg timestamp="20170913 19:23:44.938" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM traces_history; </msg>
<status status="PASS" endtime="20170913 19:23:44.938" starttime="20170913 19:23:44.938"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups</arg>
</arguments>
<msg timestamp="20170913 19:23:44.939" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM usergroups; </msg>
<status status="PASS" endtime="20170913 19:23:44.939" starttime="20170913 19:23:44.939"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups_history</arg>
</arguments>
<msg timestamp="20170913 19:23:44.940" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM usergroups_history; </msg>
<status status="PASS" endtime="20170913 19:23:44.940" starttime="20170913 19:23:44.939"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users_history</arg>
</arguments>
<msg timestamp="20170913 19:23:44.940" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM users_history; </msg>
<status status="PASS" endtime="20170913 19:23:44.941" starttime="20170913 19:23:44.940"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works</arg>
</arguments>
<msg timestamp="20170913 19:23:44.941" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM works; </msg>
<status status="PASS" endtime="20170913 19:23:44.942" starttime="20170913 19:23:44.941"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works_history</arg>
</arguments>
<msg timestamp="20170913 19:23:44.942" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM works_history; </msg>
<status status="PASS" endtime="20170913 19:23:44.943" starttime="20170913 19:23:44.942"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170913 19:23:44.944" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170913 19:23:44.944" starttime="20170913 19:23:44.943"></status>
</kw>
<status status="PASS" endtime="20170913 19:23:44.944" starttime="20170913 19:23:44.943"></status>
</kw>
<status status="PASS" endtime="20170913 19:23:44.944" starttime="20170913 19:23:44.917"></status>
</kw>
<kw name="Stop XWtremWeb Server And XWtremWeb Worker" library="XWCommon">
<kw name="Stop XtremWeb Server" library="XWServer">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${SERVER_PROCESS}</arg>
</arguments>
<msg timestamp="20170913 19:23:44.945" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20170913 19:23:45.050" level="INFO">Process completed.</msg>
<status status="PASS" endtime="20170913 19:23:45.051" starttime="20170913 19:23:44.945"></status>
</kw>
<status status="PASS" endtime="20170913 19:23:45.051" starttime="20170913 19:23:44.945"></status>
</kw>
<kw name="Log XtremWeb Server" library="XWCommon">
<kw name="Log XtremWeb Process Log File" library="XWServer">
<kw name="Log File" library="OperatingSystem">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<msg timestamp="20170913 19:23:45.052" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170913 19:23:45.053" level="INFO">Wed Sep 13 19:22:30 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : checking launch url
Wed Sep 13 19:22:30 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] WARNING : no launcher URL defined
Wed Sep 13 19:22:30 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : launching SmartSockets hub
[13/Sep/2017:19:22:32 +0000] [main_1] ERROR : setRole : role redefined ?! (was SERVER)
[13/Sep/2017:19:22:33 +0000] [xtremweb.database.DBConnPoolThread_main_1] INFO : Connection to database jdbc:mysql://localhost/xtremweb is ok, 70 created
[13/Sep/2017:19:22:33 +0000] [xtremweb.dispatcher.DBInterface_main_1] WARN : Can't retrieve any app
[13/Sep/2017:19:22:33 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't create ProxyValidator
[13/Sep/2017:19:22:33 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.io.FileNotFoundException: /tmp/castore (No such file or directory) (/tmp/castore (No such file or directory))
[13/Sep/2017:19:22:33 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't add CA certificates to keystore
[13/Sep/2017:19:22:33 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.lang.NullPointerException (null)
[13/Sep/2017:19:22:33 +0000] [xtremweb.dispatcher.HashTaskSet_TaskSet_14] INFO : TaskSet started (300000)
[13/Sep/2017:19:22:34 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : still waiting task set...
[13/Sep/2017:19:22:34 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : UDP server not started
[13/Sep/2017:19:22:34 +0000] [xtremweb.communications.TCPServer_TCPServerNIO_15] INFO : started, listening on port : 4321
log4j:WARN No appenders could be found for logger (org.eclipse.jetty.util.log).
log4j:WARN Please initialize the log4j system properly.
log4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.
[13/Sep/2017:19:22:34 +0000] [xtremweb.communications.HTTPServer_main_1] INFO : started, listening on port : 9443
[13/Sep/2017:19:22:34 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : FACEBOOK : java.net.MalformedURLException: no protocol: 
[13/Sep/2017:19:22:34 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : GOOGLE : java.net.MalformedURLException: no protocol: 
[13/Sep/2017:19:22:34 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : TWITTER : java.net.MalformedURLException: no protocol: 
[13/Sep/2017:19:22:34 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : YAHOO : java.net.MalformedURLException: no protocol: 
[13/Sep/2017:19:22:34 +0000] [main_1] ERROR : Can't add new entry to keystore
[13/Sep/2017:19:22:34 +0000] [main_1] WARN : javax.net.ssl.SSLHandshakeException: sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target (sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target)
[13/Sep/2017:19:22:34 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : XWHEP Dispatcher(10.6.0-head) started [Wed Sep 13 19:22:34 UTC 2017]
[13/Sep/2017:19:22:34 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : DB vendor  = mysql
[13/Sep/2017:19:22:34 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : mileStone  = 
[13/Sep/2017:19:22:34 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Time out   = 15000
[13/Sep/2017:19:22:34 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Disk opt'd = true
[13/Sep/2017:19:22:34 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Net  opt'd = true
[13/Sep/2017:19:22:34 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : NIO        = true
XWHEP Dispatcher started  Wed Sep 13 19:22:34 UTC 2017
Name             : vagrant-ubuntu-trusty-64
Version          : 10.6.0-head
Identity         : 
XWRole           : SERVER
Started on       : Wed Sep 13 19:22:32 UTC 2017
Scheduler        : xtremweb.dispatcher.MatchingScheduler
SmartSockets hub : 172.28.128.3/172.17.0.1/10.0.2.15-4329#a2.97.b0.e6.cc.7c.00.00.ce.4b.02.42.7b.de.a1.dc~vagrant
Server HTTP      : true
Alive            : 300
Alive time out   : 900
Polling time out : 15000
Optimize zip     : true
Optimize network : true
NIO              : true
Comm layer       : xtremweb.communications.TCPClient
Socket time out  : 60000
Socket retries   : 50
Max connections  : 200
TCP port         : 4321
UDP port         : 4323
HTPP  port       : 80
HTPPS port       : 9443
Sun RPC interposition port : 4328
Sandbox path : /usr/bin/lxc
Sandbox launch args : 
Host &lt;host&gt;&lt;uid&gt;21677eee-a27b-4050-985d-ce997f7e1f7a&lt;/uid&gt;&lt;accessrights&gt;0x755&lt;/accessrights&gt;&lt;name&gt;vagrant-ubuntu-trusty-64&lt;/name&gt;&lt;cpuload&gt;50&lt;/cpuload&gt;&lt;natedipaddr&gt;10.0.2.15&lt;/natedipaddr&gt;&lt;ipaddr&gt;10.0.2.15&lt;/ipaddr&gt;&lt;hwaddr&gt;&lt;/hwaddr&gt;&lt;timezone&gt;Etc/UTC&lt;/timezone&gt;&lt;os&gt;LINUX&lt;/os&gt;&lt;osversion&gt;3.13.0-129-generic&lt;/osversion&gt;&lt;javaversion&gt;1.8.0_141&lt;/javaversion&gt;&lt;javadatamodel&gt;64&lt;/javadatamodel&gt;&lt;cputype&gt;AMD64&lt;/cputype&gt;&lt;cpunb&gt;1&lt;/cpunb&gt;&lt;cpumodel&gt;unknown&lt;/cpumodel&gt;&lt;cpuspeed&gt;0&lt;/cpuspeed&gt;&lt;totalmem&gt;0&lt;/totalmem&gt;&lt;totalswap&gt;0&lt;/totalswap&gt;&lt;totaltmp&gt;40284&lt;/totaltmp&gt;&lt;freetmp&gt;37263&lt;/freetmp&gt;&lt;project&gt;&lt;/project&gt;&lt;active&gt;true&lt;/active&gt;&lt;incomingconnections&gt;false&lt;/incomingconnections&gt;&lt;available&gt;false&lt;/available&gt;&lt;pilotjob&gt;false&lt;/pilotjob&gt;&lt;sgid&gt;&lt;/sgid&gt;&lt;timeout&gt;15000&lt;/timeout&gt;&lt;traces&gt;false&lt;/traces&gt;&lt;acceptbin&gt;false&lt;/acceptbin&gt;&lt;version&gt;10.6.0-head&lt;/version&gt;&lt;/host&gt;
[13/Sep/2017:19:22:34 +0000] [xtremweb.communications.HTTPServer_HTTPServer_218] INFO : started, listening on port : 9443
[13/Sep/2017:19:22:36 +0000] [xtremweb.common.StreamIO_TCPHandler_18] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[13/Sep/2017:19:22:36 +0000] [xtremweb.common.StreamIO_TCPHandler_17] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[13/Sep/2017:19:22:37 +0000] [xtremweb.common.StreamIO_TCPHandler_19] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[13/Sep/2017:19:22:37 +0000] [xtremweb.common.StreamIO_TCPHandler_20] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[13/Sep/2017:19:22:39 +0000] [xtremweb.common.StreamIO_TCPHandler_21] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[13/Sep/2017:19:22:39 +0000] [xtremweb.common.StreamIO_TCPHandler_22] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[13/Sep/2017:19:22:39 +0000] [xtremweb.dispatcher.DBInterface_TCPHandler_23] INFO : vagrant-ubuntu-trusty-64 not in DB; inserting 6b5d70f8-ded4-4d26-9a19-8fadbefb611a
[13/Sep/2017:19:22:39 +0000] [xtremweb.common.StreamIO_TCPHandler_23] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[13/Sep/2017:19:22:43 +0000] [xtremweb.common.StreamIO_TCPHandler_24] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[13/Sep/2017:19:22:48 +0000] [xtremweb.common.StreamIO_TCPHandler_25] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[13/Sep/2017:19:22:54 +0000] [xtremweb.common.StreamIO_TCPHandler_26] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[13/Sep/2017:19:22:54 +0000] [xtremweb.common.StreamIO_TCPHandler_27] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[13/Sep/2017:19:22:54 +0000] [xtremweb.common.StreamIO_TCPHandler_28] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[13/Sep/2017:19:22:54 +0000] [xtremweb.common.StreamIO_TCPHandler_29] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[13/Sep/2017:19:22:54 +0000] [xtremweb.common.StreamIO_TCPHandler_30] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[13/Sep/2017:19:22:54 +0000] [xtremweb.common.StreamIO_TCPHandler_31] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[13/Sep/2017:19:22:59 +0000] [xtremweb.common.StreamIO_TCPHandler_32] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[13/Sep/2017:19:23:05 +0000] [xtremweb.common.StreamIO_TCPHandler_33] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[13/Sep/2017:19:23:09 +0000] [xtremweb.dispatcher.DBInterface_TCPHandler_34] WARN : javax.mail.internet.AddressException: Missing local name in string ``@DBADMINEMAIL@'' (Missing local name)
[13/Sep/2017:19:23:09 +0000] [xtremweb.common.StreamIO_TCPHandler_34] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[13/Sep/2017:19:23:09 +0000] [xtremweb.common.StreamIO_TCPHandler_35] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[13/Sep/2017:19:23:10 +0000] [xtremweb.common.StreamIO_TCPHandler_36] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[13/Sep/2017:19:23:16 +0000] [xtremweb.common.StreamIO_TCPHandler_37] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[13/Sep/2017:19:23:21 +0000] [xtremweb.common.StreamIO_TCPHandler_38] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[13/Sep/2017:19:23:27 +0000] [xtremweb.common.StreamIO_TCPHandler_39] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[13/Sep/2017:19:23:33 +0000] [xtremweb.common.StreamIO_TCPHandler_40] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[13/Sep/2017:19:23:38 +0000] [xtremweb.common.StreamIO_TCPHandler_41] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[13/Sep/2017:19:23:40 +0000] [xtremweb.common.StreamIO_TCPHandler_42] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[13/Sep/2017:19:23:40 +0000] [xtremweb.common.StreamIO_TCPHandler_43] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[13/Sep/2017:19:23:40 +0000] [xtremweb.common.StreamIO_TCPHandler_44] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[13/Sep/2017:19:23:40 +0000] [xtremweb.dispatcher.DBInterface_TCPHandler_45] WARN : javax.mail.internet.AddressException: Missing local name in string ``@DBADMINEMAIL@'' (Missing local name)
[13/Sep/2017:19:23:40 +0000] [xtremweb.common.StreamIO_TCPHandler_45] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[13/Sep/2017:19:23:40 +0000] [xtremweb.dispatcher.TCPHandler_TCPHandler_46] ERROR : Can't write result
[13/Sep/2017:19:23:40 +0000] [xtremweb.dispatcher.TCPHandler_TCPHandler_46] WARN : java.io.IOException: java.net.SocketException: Broken pipe (Write failed) (java.net.SocketException: Broken pipe (Write failed))
[13/Sep/2017:19:23:40 +0000] [xtremweb.common.StreamIO_TCPHandler_46] WARN : javax.net.ssl.SSLException: Connection has been shutdown: javax.net.ssl.SSLException: java.net.SocketException: Broken pipe (Write failed) (javax.net.ssl.SSLException: java.net.SocketException: Broken pipe (Write failed))
[13/Sep/2017:19:23:44 +0000] [xtremweb.common.StreamIO_TCPHandler_47] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[13/Sep/2017:19:23:44 +0000] [xtremweb.common.StreamIO_TCPHandler_48] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[13/Sep/2017:19:23:44 +0000] [xtremweb.communications.TCPServer_TCPServerNIO_15] WARN : java.net.SocketException: Socket closed (Socket closed)
</msg>
<status status="PASS" endtime="20170913 19:23:45.053" starttime="20170913 19:23:45.052"></status>
</kw>
<status status="PASS" endtime="20170913 19:23:45.054" starttime="20170913 19:23:45.052"></status>
</kw>
<status status="PASS" endtime="20170913 19:23:45.054" starttime="20170913 19:23:45.051"></status>
</kw>
<kw name="Stop XtremWeb Worker" library="XWWorker">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Stop XtremWeb Worker</arg>
</arguments>
<msg timestamp="20170913 19:23:45.054" level="INFO">Stop XtremWeb Worker</msg>
<status status="PASS" endtime="20170913 19:23:45.055" starttime="20170913 19:23:45.054"></status>
</kw>
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${WORKER_PROCESS}</arg>
</arguments>
<msg timestamp="20170913 19:23:45.055" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20170913 19:23:45.155" level="INFO">Process completed.</msg>
<status status="PASS" endtime="20170913 19:23:45.156" starttime="20170913 19:23:45.055"></status>
</kw>
<status status="PASS" endtime="20170913 19:23:45.156" starttime="20170913 19:23:45.054"></status>
</kw>
<status status="PASS" endtime="20170913 19:23:45.156" starttime="20170913 19:23:44.944"></status>
</kw>
<kw name="Start XWtremWeb Server And XWtremWeb Worker" library="XWCommon">
<kw name="Ping XWtremWeb Database" library="XWServer">
<kw name="Xtremweb Tables Must Exist" library="MySql">
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170913 19:23:45.158" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170913 19:23:45.160" starttime="20170913 19:23:45.158"></status>
</kw>
<status status="PASS" endtime="20170913 19:23:45.160" starttime="20170913 19:23:45.157"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>appTypes</arg>
</arguments>
<msg timestamp="20170913 19:23:45.160" level="INFO">Executing : Table Must Exist  |  appTypes </msg>
<msg timestamp="20170913 19:23:45.160" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='appTypes' </msg>
<status status="PASS" endtime="20170913 19:23:45.161" starttime="20170913 19:23:45.160"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps</arg>
</arguments>
<msg timestamp="20170913 19:23:45.162" level="INFO">Executing : Table Must Exist  |  apps </msg>
<msg timestamp="20170913 19:23:45.162" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='apps' </msg>
<status status="PASS" endtime="20170913 19:23:45.162" starttime="20170913 19:23:45.161"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps_history</arg>
</arguments>
<msg timestamp="20170913 19:23:45.163" level="INFO">Executing : Table Must Exist  |  apps_history </msg>
<msg timestamp="20170913 19:23:45.163" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='apps_history' </msg>
<status status="PASS" endtime="20170913 19:23:45.163" starttime="20170913 19:23:45.163"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>cpuTypes</arg>
</arguments>
<msg timestamp="20170913 19:23:45.164" level="INFO">Executing : Table Must Exist  |  cpuTypes </msg>
<msg timestamp="20170913 19:23:45.164" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='cpuTypes' </msg>
<status status="PASS" endtime="20170913 19:23:45.165" starttime="20170913 19:23:45.164"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>dataTypes</arg>
</arguments>
<msg timestamp="20170913 19:23:45.165" level="INFO">Executing : Table Must Exist  |  dataTypes </msg>
<msg timestamp="20170913 19:23:45.165" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='dataTypes' </msg>
<status status="PASS" endtime="20170913 19:23:45.166" starttime="20170913 19:23:45.165"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas</arg>
</arguments>
<msg timestamp="20170913 19:23:45.166" level="INFO">Executing : Table Must Exist  |  datas </msg>
<msg timestamp="20170913 19:23:45.166" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='datas' </msg>
<status status="PASS" endtime="20170913 19:23:45.167" starttime="20170913 19:23:45.166"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas_history</arg>
</arguments>
<msg timestamp="20170913 19:23:45.168" level="INFO">Executing : Table Must Exist  |  datas_history </msg>
<msg timestamp="20170913 19:23:45.168" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='datas_history' </msg>
<status status="PASS" endtime="20170913 19:23:45.169" starttime="20170913 19:23:45.167"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables</arg>
</arguments>
<msg timestamp="20170913 19:23:45.169" level="INFO">Executing : Table Must Exist  |  executables </msg>
<msg timestamp="20170913 19:23:45.169" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='executables' </msg>
<status status="PASS" endtime="20170913 19:23:45.170" starttime="20170913 19:23:45.169"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables_history</arg>
</arguments>
<msg timestamp="20170913 19:23:45.170" level="INFO">Executing : Table Must Exist  |  executables_history </msg>
<msg timestamp="20170913 19:23:45.170" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='executables_history' </msg>
<status status="PASS" endtime="20170913 19:23:45.172" starttime="20170913 19:23:45.170"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups</arg>
</arguments>
<msg timestamp="20170913 19:23:45.172" level="INFO">Executing : Table Must Exist  |  groups </msg>
<msg timestamp="20170913 19:23:45.172" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='groups' </msg>
<status status="PASS" endtime="20170913 19:23:45.173" starttime="20170913 19:23:45.172"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups_history</arg>
</arguments>
<msg timestamp="20170913 19:23:45.173" level="INFO">Executing : Table Must Exist  |  groups_history </msg>
<msg timestamp="20170913 19:23:45.173" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='groups_history' </msg>
<status status="PASS" endtime="20170913 19:23:45.174" starttime="20170913 19:23:45.173"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts</arg>
</arguments>
<msg timestamp="20170913 19:23:45.174" level="INFO">Executing : Table Must Exist  |  hosts </msg>
<msg timestamp="20170913 19:23:45.174" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='hosts' </msg>
<status status="PASS" endtime="20170913 19:23:45.175" starttime="20170913 19:23:45.174"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts_history</arg>
</arguments>
<msg timestamp="20170913 19:23:45.176" level="INFO">Executing : Table Must Exist  |  hosts_history </msg>
<msg timestamp="20170913 19:23:45.176" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='hosts_history' </msg>
<status status="PASS" endtime="20170913 19:23:45.176" starttime="20170913 19:23:45.175"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships</arg>
</arguments>
<msg timestamp="20170913 19:23:45.177" level="INFO">Executing : Table Must Exist  |  memberships </msg>
<msg timestamp="20170913 19:23:45.177" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='memberships' </msg>
<status status="PASS" endtime="20170913 19:23:45.178" starttime="20170913 19:23:45.177"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships_history</arg>
</arguments>
<msg timestamp="20170913 19:23:45.178" level="INFO">Executing : Table Must Exist  |  memberships_history </msg>
<msg timestamp="20170913 19:23:45.178" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='memberships_history' </msg>
<status status="PASS" endtime="20170913 19:23:45.178" starttime="20170913 19:23:45.178"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>oses</arg>
</arguments>
<msg timestamp="20170913 19:23:45.179" level="INFO">Executing : Table Must Exist  |  oses </msg>
<msg timestamp="20170913 19:23:45.179" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='oses' </msg>
<status status="PASS" endtime="20170913 19:23:45.179" starttime="20170913 19:23:45.178"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>packageTypes</arg>
</arguments>
<msg timestamp="20170913 19:23:45.180" level="INFO">Executing : Table Must Exist  |  packageTypes </msg>
<msg timestamp="20170913 19:23:45.180" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='packageTypes' </msg>
<status status="PASS" endtime="20170913 19:23:45.181" starttime="20170913 19:23:45.180"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions</arg>
</arguments>
<msg timestamp="20170913 19:23:45.181" level="INFO">Executing : Table Must Exist  |  sessions </msg>
<msg timestamp="20170913 19:23:45.181" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sessions' </msg>
<status status="PASS" endtime="20170913 19:23:45.182" starttime="20170913 19:23:45.181"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions_history</arg>
</arguments>
<msg timestamp="20170913 19:23:45.182" level="INFO">Executing : Table Must Exist  |  sessions_history </msg>
<msg timestamp="20170913 19:23:45.182" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sessions_history' </msg>
<status status="PASS" endtime="20170913 19:23:45.183" starttime="20170913 19:23:45.182"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes</arg>
</arguments>
<msg timestamp="20170913 19:23:45.183" level="INFO">Executing : Table Must Exist  |  sharedAppTypes </msg>
<msg timestamp="20170913 19:23:45.183" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedAppTypes' </msg>
<status status="PASS" endtime="20170913 19:23:45.184" starttime="20170913 19:23:45.183"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes_history</arg>
</arguments>
<msg timestamp="20170913 19:23:45.184" level="INFO">Executing : Table Must Exist  |  sharedAppTypes_history </msg>
<msg timestamp="20170913 19:23:45.184" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedAppTypes_history' </msg>
<status status="PASS" endtime="20170913 19:23:45.185" starttime="20170913 19:23:45.184"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes</arg>
</arguments>
<msg timestamp="20170913 19:23:45.186" level="INFO">Executing : Table Must Exist  |  sharedPackageTypes </msg>
<msg timestamp="20170913 19:23:45.186" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedPackageTypes' </msg>
<status status="PASS" endtime="20170913 19:23:45.186" starttime="20170913 19:23:45.186"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes_history</arg>
</arguments>
<msg timestamp="20170913 19:23:45.187" level="INFO">Executing : Table Must Exist  |  sharedPackageTypes_history </msg>
<msg timestamp="20170913 19:23:45.187" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedPackageTypes_history' </msg>
<status status="PASS" endtime="20170913 19:23:45.187" starttime="20170913 19:23:45.186"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>statuses</arg>
</arguments>
<msg timestamp="20170913 19:23:45.188" level="INFO">Executing : Table Must Exist  |  statuses </msg>
<msg timestamp="20170913 19:23:45.188" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='statuses' </msg>
<status status="PASS" endtime="20170913 19:23:45.188" starttime="20170913 19:23:45.187"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks</arg>
</arguments>
<msg timestamp="20170913 19:23:45.189" level="INFO">Executing : Table Must Exist  |  tasks </msg>
<msg timestamp="20170913 19:23:45.189" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='tasks' </msg>
<status status="PASS" endtime="20170913 19:23:45.189" starttime="20170913 19:23:45.188"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks_history</arg>
</arguments>
<msg timestamp="20170913 19:23:45.190" level="INFO">Executing : Table Must Exist  |  tasks_history </msg>
<msg timestamp="20170913 19:23:45.190" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='tasks_history' </msg>
<status status="PASS" endtime="20170913 19:23:45.190" starttime="20170913 19:23:45.189"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces</arg>
</arguments>
<msg timestamp="20170913 19:23:45.191" level="INFO">Executing : Table Must Exist  |  traces </msg>
<msg timestamp="20170913 19:23:45.191" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='traces' </msg>
<status status="PASS" endtime="20170913 19:23:45.191" starttime="20170913 19:23:45.190"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces_history</arg>
</arguments>
<msg timestamp="20170913 19:23:45.192" level="INFO">Executing : Table Must Exist  |  traces_history </msg>
<msg timestamp="20170913 19:23:45.192" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='traces_history' </msg>
<status status="PASS" endtime="20170913 19:23:45.192" starttime="20170913 19:23:45.191"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>userRights</arg>
</arguments>
<msg timestamp="20170913 19:23:45.192" level="INFO">Executing : Table Must Exist  |  userRights </msg>
<msg timestamp="20170913 19:23:45.193" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='userRights' </msg>
<status status="PASS" endtime="20170913 19:23:45.193" starttime="20170913 19:23:45.192"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups</arg>
</arguments>
<msg timestamp="20170913 19:23:45.193" level="INFO">Executing : Table Must Exist  |  usergroups </msg>
<msg timestamp="20170913 19:23:45.193" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='usergroups' </msg>
<status status="PASS" endtime="20170913 19:23:45.194" starttime="20170913 19:23:45.193"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups_history</arg>
</arguments>
<msg timestamp="20170913 19:23:45.194" level="INFO">Executing : Table Must Exist  |  usergroups_history </msg>
<msg timestamp="20170913 19:23:45.194" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='usergroups_history' </msg>
<status status="PASS" endtime="20170913 19:23:45.195" starttime="20170913 19:23:45.194"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users</arg>
</arguments>
<msg timestamp="20170913 19:23:45.195" level="INFO">Executing : Table Must Exist  |  users </msg>
<msg timestamp="20170913 19:23:45.195" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='users' </msg>
<status status="PASS" endtime="20170913 19:23:45.196" starttime="20170913 19:23:45.195"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users_history</arg>
</arguments>
<msg timestamp="20170913 19:23:45.196" level="INFO">Executing : Table Must Exist  |  users_history </msg>
<msg timestamp="20170913 19:23:45.196" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='users_history' </msg>
<status status="PASS" endtime="20170913 19:23:45.197" starttime="20170913 19:23:45.196"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>version</arg>
</arguments>
<msg timestamp="20170913 19:23:45.197" level="INFO">Executing : Table Must Exist  |  version </msg>
<msg timestamp="20170913 19:23:45.197" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='version' </msg>
<status status="PASS" endtime="20170913 19:23:45.198" starttime="20170913 19:23:45.197"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>versions</arg>
</arguments>
<msg timestamp="20170913 19:23:45.198" level="INFO">Executing : Table Must Exist  |  versions </msg>
<msg timestamp="20170913 19:23:45.198" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='versions' </msg>
<status status="PASS" endtime="20170913 19:23:45.199" starttime="20170913 19:23:45.198"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps</arg>
</arguments>
<msg timestamp="20170913 19:23:45.199" level="INFO">Executing : Table Must Exist  |  view_apps </msg>
<msg timestamp="20170913 19:23:45.199" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps' </msg>
<status status="PASS" endtime="20170913 19:23:45.200" starttime="20170913 19:23:45.199"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps_for_offering</arg>
</arguments>
<msg timestamp="20170913 19:23:45.200" level="INFO">Executing : Table Must Exist  |  view_apps_for_offering </msg>
<msg timestamp="20170913 19:23:45.200" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps_for_offering' </msg>
<status status="PASS" endtime="20170913 19:23:45.201" starttime="20170913 19:23:45.200"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps_for_offering_with_file_sizes</arg>
</arguments>
<msg timestamp="20170913 19:23:45.201" level="INFO">Executing : Table Must Exist  |  view_apps_for_offering_with_file_sizes </msg>
<msg timestamp="20170913 19:23:45.201" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps_for_offering_with_file_sizes' </msg>
<status status="PASS" endtime="20170913 19:23:45.202" starttime="20170913 19:23:45.201"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_datas</arg>
</arguments>
<msg timestamp="20170913 19:23:45.202" level="INFO">Executing : Table Must Exist  |  view_datas </msg>
<msg timestamp="20170913 19:23:45.202" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_datas' </msg>
<status status="PASS" endtime="20170913 19:23:45.204" starttime="20170913 19:23:45.202"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_executables</arg>
</arguments>
<msg timestamp="20170913 19:23:45.204" level="INFO">Executing : Table Must Exist  |  view_executables </msg>
<msg timestamp="20170913 19:23:45.204" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_executables' </msg>
<status status="PASS" endtime="20170913 19:23:45.205" starttime="20170913 19:23:45.204"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_groups</arg>
</arguments>
<msg timestamp="20170913 19:23:45.205" level="INFO">Executing : Table Must Exist  |  view_groups </msg>
<msg timestamp="20170913 19:23:45.205" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_groups' </msg>
<status status="PASS" endtime="20170913 19:23:45.206" starttime="20170913 19:23:45.205"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts</arg>
</arguments>
<msg timestamp="20170913 19:23:45.206" level="INFO">Executing : Table Must Exist  |  view_hosts </msg>
<msg timestamp="20170913 19:23:45.206" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts' </msg>
<status status="PASS" endtime="20170913 19:23:45.207" starttime="20170913 19:23:45.206"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_deployable</arg>
</arguments>
<msg timestamp="20170913 19:23:45.207" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_deployable </msg>
<msg timestamp="20170913 19:23:45.207" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_deployable' </msg>
<status status="PASS" endtime="20170913 19:23:45.208" starttime="20170913 19:23:45.207"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_deployable_and_shared</arg>
</arguments>
<msg timestamp="20170913 19:23:45.208" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_deployable_and_shared </msg>
<msg timestamp="20170913 19:23:45.208" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_deployable_and_shared' </msg>
<status status="PASS" endtime="20170913 19:23:45.209" starttime="20170913 19:23:45.208"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_shared</arg>
</arguments>
<msg timestamp="20170913 19:23:45.209" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_shared </msg>
<msg timestamp="20170913 19:23:45.209" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_shared' </msg>
<status status="PASS" endtime="20170913 19:23:45.210" starttime="20170913 19:23:45.209"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_sessions</arg>
</arguments>
<msg timestamp="20170913 19:23:45.211" level="INFO">Executing : Table Must Exist  |  view_sessions </msg>
<msg timestamp="20170913 19:23:45.211" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_sessions' </msg>
<status status="PASS" endtime="20170913 19:23:45.211" starttime="20170913 19:23:45.210"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_tasks</arg>
</arguments>
<msg timestamp="20170913 19:23:45.212" level="INFO">Executing : Table Must Exist  |  view_tasks </msg>
<msg timestamp="20170913 19:23:45.212" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_tasks' </msg>
<status status="PASS" endtime="20170913 19:23:45.212" starttime="20170913 19:23:45.211"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_traces</arg>
</arguments>
<msg timestamp="20170913 19:23:45.213" level="INFO">Executing : Table Must Exist  |  view_traces </msg>
<msg timestamp="20170913 19:23:45.213" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_traces' </msg>
<status status="PASS" endtime="20170913 19:23:45.213" starttime="20170913 19:23:45.213"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_usergroups</arg>
</arguments>
<msg timestamp="20170913 19:23:45.214" level="INFO">Executing : Table Must Exist  |  view_usergroups </msg>
<msg timestamp="20170913 19:23:45.214" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_usergroups' </msg>
<status status="PASS" endtime="20170913 19:23:45.215" starttime="20170913 19:23:45.214"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users</arg>
</arguments>
<msg timestamp="20170913 19:23:45.215" level="INFO">Executing : Table Must Exist  |  view_users </msg>
<msg timestamp="20170913 19:23:45.215" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users' </msg>
<status status="PASS" endtime="20170913 19:23:45.216" starttime="20170913 19:23:45.215"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_apps</arg>
</arguments>
<msg timestamp="20170913 19:23:45.216" level="INFO">Executing : Table Must Exist  |  view_users_apps </msg>
<msg timestamp="20170913 19:23:45.216" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_apps' </msg>
<status status="PASS" endtime="20170913 19:23:45.217" starttime="20170913 19:23:45.216"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_datas</arg>
</arguments>
<msg timestamp="20170913 19:23:45.217" level="INFO">Executing : Table Must Exist  |  view_users_datas </msg>
<msg timestamp="20170913 19:23:45.217" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_datas' </msg>
<status status="PASS" endtime="20170913 19:23:45.218" starttime="20170913 19:23:45.217"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_groups</arg>
</arguments>
<msg timestamp="20170913 19:23:45.218" level="INFO">Executing : Table Must Exist  |  view_users_groups </msg>
<msg timestamp="20170913 19:23:45.218" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_groups' </msg>
<status status="PASS" endtime="20170913 19:23:45.219" starttime="20170913 19:23:45.218"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_hosts</arg>
</arguments>
<msg timestamp="20170913 19:23:45.219" level="INFO">Executing : Table Must Exist  |  view_users_hosts </msg>
<msg timestamp="20170913 19:23:45.219" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_hosts' </msg>
<status status="PASS" endtime="20170913 19:23:45.220" starttime="20170913 19:23:45.219"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_sessions</arg>
</arguments>
<msg timestamp="20170913 19:23:45.220" level="INFO">Executing : Table Must Exist  |  view_users_sessions </msg>
<msg timestamp="20170913 19:23:45.220" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_sessions' </msg>
<status status="PASS" endtime="20170913 19:23:45.221" starttime="20170913 19:23:45.220"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_tasks</arg>
</arguments>
<msg timestamp="20170913 19:23:45.221" level="INFO">Executing : Table Must Exist  |  view_users_tasks </msg>
<msg timestamp="20170913 19:23:45.221" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_tasks' </msg>
<status status="PASS" endtime="20170913 19:23:45.222" starttime="20170913 19:23:45.221"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_traces</arg>
</arguments>
<msg timestamp="20170913 19:23:45.222" level="INFO">Executing : Table Must Exist  |  view_users_traces </msg>
<msg timestamp="20170913 19:23:45.222" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_traces' </msg>
<status status="PASS" endtime="20170913 19:23:45.223" starttime="20170913 19:23:45.222"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_usergroups</arg>
</arguments>
<msg timestamp="20170913 19:23:45.223" level="INFO">Executing : Table Must Exist  |  view_users_usergroups </msg>
<msg timestamp="20170913 19:23:45.223" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_usergroups' </msg>
<status status="PASS" endtime="20170913 19:23:45.224" starttime="20170913 19:23:45.223"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_users</arg>
</arguments>
<msg timestamp="20170913 19:23:45.224" level="INFO">Executing : Table Must Exist  |  view_users_users </msg>
<msg timestamp="20170913 19:23:45.224" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_users' </msg>
<status status="PASS" endtime="20170913 19:23:45.225" starttime="20170913 19:23:45.224"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_works</arg>
</arguments>
<msg timestamp="20170913 19:23:45.225" level="INFO">Executing : Table Must Exist  |  view_users_works </msg>
<msg timestamp="20170913 19:23:45.225" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_works' </msg>
<status status="PASS" endtime="20170913 19:23:45.226" starttime="20170913 19:23:45.225"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works</arg>
</arguments>
<msg timestamp="20170913 19:23:45.226" level="INFO">Executing : Table Must Exist  |  view_works </msg>
<msg timestamp="20170913 19:23:45.226" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works' </msg>
<status status="PASS" endtime="20170913 19:23:45.227" starttime="20170913 19:23:45.226"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works_for_billing</arg>
</arguments>
<msg timestamp="20170913 19:23:45.227" level="INFO">Executing : Table Must Exist  |  view_works_for_billing </msg>
<msg timestamp="20170913 19:23:45.227" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works_for_billing' </msg>
<status status="PASS" endtime="20170913 19:23:45.228" starttime="20170913 19:23:45.227"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works_for_billing_with_file_sizes</arg>
</arguments>
<msg timestamp="20170913 19:23:45.228" level="INFO">Executing : Table Must Exist  |  view_works_for_billing_with_file_sizes </msg>
<msg timestamp="20170913 19:23:45.228" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works_for_billing_with_file_sizes' </msg>
<status status="PASS" endtime="20170913 19:23:45.229" starttime="20170913 19:23:45.228"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works</arg>
</arguments>
<msg timestamp="20170913 19:23:45.229" level="INFO">Executing : Table Must Exist  |  works </msg>
<msg timestamp="20170913 19:23:45.229" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='works' </msg>
<status status="PASS" endtime="20170913 19:23:45.230" starttime="20170913 19:23:45.229"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works_history</arg>
</arguments>
<msg timestamp="20170913 19:23:45.230" level="INFO">Executing : Table Must Exist  |  works_history </msg>
<msg timestamp="20170913 19:23:45.230" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='works_history' </msg>
<status status="PASS" endtime="20170913 19:23:45.231" starttime="20170913 19:23:45.230"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170913 19:23:45.231" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170913 19:23:45.231" starttime="20170913 19:23:45.231"></status>
</kw>
<status status="PASS" endtime="20170913 19:23:45.231" starttime="20170913 19:23:45.231"></status>
</kw>
<status status="PASS" endtime="20170913 19:23:45.232" starttime="20170913 19:23:45.157"></status>
</kw>
<status status="PASS" endtime="20170913 19:23:45.232" starttime="20170913 19:23:45.157"></status>
</kw>
<kw name="Start XtremWeb Server" library="XWServer">
<arguments>
<arg>${DIST_XWHEP_PATH}</arg>
</arguments>
<kw name="File Should Exist" library="OperatingSystem">
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xtremweb.server.conf</arg>
</arguments>
<msg timestamp="20170913 19:23:45.233" html="yes" level="INFO">File '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf&lt;/a&gt;' exists.</msg>
<status status="PASS" endtime="20170913 19:23:45.233" starttime="20170913 19:23:45.232"></status>
</kw>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xtremweb.server.conf</arg>
</arguments>
<assign>
<var>${config_content}</var>
</assign>
<msg timestamp="20170913 19:23:45.233" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf&lt;/a&gt;'.</msg>
<msg timestamp="20170913 19:23:45.236" level="INFO">${config_content} = #
# Copyrights     : CNRS
# Author         : Oleg Lodygensky
# Acknowledgment : XtremWeb-HEP is based on XtremWeb 1.8.0 by inria : http://www.xtremweb.net/
# Web            : http://www.xtremweb-hep.o...</msg>
<status status="PASS" endtime="20170913 19:23:45.236" starttime="20170913 19:23:45.233"></status>
</kw>
<kw name="Remove String Using Regexp" library="String">
<doc>Removes ``patterns`` from the given ``string``.</doc>
<arguments>
<arg>${config_content}</arg>
<arg>LAUNCHERURL=${XWCONFIGURE.VALUES.XWUPGRADEURL}</arg>
</arguments>
<assign>
<var>${config_content_filtered}</var>
</assign>
<msg timestamp="20170913 19:23:45.236" level="INFO">${config_content_filtered} = #
# Copyrights     : CNRS
# Author         : Oleg Lodygensky
# Acknowledgment : XtremWeb-HEP is based on XtremWeb 1.8.0 by inria : http://www.xtremweb.net/
# Web            : http://www.xtremweb-hep.o...</msg>
<status status="PASS" endtime="20170913 19:23:45.236" starttime="20170913 19:23:45.236"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${config_content_filtered}</arg>
<arg>\## HTTPSPORT=443</arg>
<arg>HTTPSPORT=${XWCONFIGURE.VALUES.HTTPSPORT}</arg>
</arguments>
<assign>
<var>${config_content_filtered}</var>
</assign>
<msg timestamp="20170913 19:23:45.237" level="INFO">${config_content_filtered} = #
# Copyrights     : CNRS
# Author         : Oleg Lodygensky
# Acknowledgment : XtremWeb-HEP is based on XtremWeb 1.8.0 by inria : http://www.xtremweb.net/
# Web            : http://www.xtremweb-hep.o...</msg>
<status status="PASS" endtime="20170913 19:23:45.237" starttime="20170913 19:23:45.237"></status>
</kw>
<kw name="Create File" library="OperatingSystem">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xtremweb.server.conf</arg>
<arg>content=${config_content_filtered}</arg>
</arguments>
<msg timestamp="20170913 19:23:45.245" html="yes" level="INFO">Created file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170913 19:23:45.245" starttime="20170913 19:23:45.237"></status>
</kw>
<kw name="Remove File" library="OperatingSystem">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<msg timestamp="20170913 19:23:45.246" html="yes" level="INFO">Removed file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170913 19:23:45.247" starttime="20170913 19:23:45.245"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/bin/xtremweb.server console</arg>
<arg>shell=yes</arg>
<arg>stderr=STDOUT</arg>
<arg>stdout=${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<assign>
<var>${created_process}</var>
</assign>
<msg timestamp="20170913 19:23:45.248" level="INFO">Starting process:
/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/xtremweb.server console</msg>
<msg timestamp="20170913 19:23:45.251" level="INFO">${created_process} = 83</msg>
<status status="PASS" endtime="20170913 19:23:45.251" starttime="20170913 19:23:45.247"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SERVER_PROCESS}</arg>
<arg>${created_process}</arg>
</arguments>
<msg timestamp="20170913 19:23:45.251" level="INFO">${SERVER_PROCESS} = 83</msg>
<status status="PASS" endtime="20170913 19:23:45.252" starttime="20170913 19:23:45.251"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2 min</arg>
<arg>5 sec</arg>
<arg>Check XtremWeb Server Start From Log</arg>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<kw name="Check XtremWeb Server Start From Log" library="XWServer">
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<kw name="Log XtremWeb Process Log File" library="XWServer">
<kw name="Log File" library="OperatingSystem">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<msg timestamp="20170913 19:23:45.253" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170913 19:23:45.254" level="INFO"></msg>
<status status="PASS" endtime="20170913 19:23:45.254" starttime="20170913 19:23:45.253"></status>
</kw>
<status status="PASS" endtime="20170913 19:23:45.254" starttime="20170913 19:23:45.252"></status>
</kw>
<kw name="Grep File" library="OperatingSystem">
<doc>Returns the lines of the specified file that match the ``pattern``.</doc>
<arguments>
<arg>${log}</arg>
<arg>listening on port : ${XWCONFIGURE.VALUES.HTTPSPORT}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20170913 19:23:45.254" html="yes" level="INFO">Reading file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170913 19:23:45.256" level="INFO">0 out of 0 lines matched</msg>
<msg timestamp="20170913 19:23:45.256" level="INFO">${ret} = </msg>
<status status="PASS" endtime="20170913 19:23:45.256" starttime="20170913 19:23:45.254"></status>
</kw>
<kw name="Get Line Count" library="String">
<doc>Returns and logs the number of lines in the given string.</doc>
<arguments>
<arg>${ret}</arg>
</arguments>
<assign>
<var>${line_count}</var>
</assign>
<msg timestamp="20170913 19:23:45.257" level="INFO">0 lines</msg>
<msg timestamp="20170913 19:23:45.257" level="INFO">${line_count} = 0</msg>
<status status="PASS" endtime="20170913 19:23:45.257" starttime="20170913 19:23:45.256"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${line_count}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20170913 19:23:45.257" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20170913 19:23:45.257" level="FAIL">0 != 2</msg>
<status status="FAIL" endtime="20170913 19:23:45.257" starttime="20170913 19:23:45.257"></status>
</kw>
<status status="FAIL" endtime="20170913 19:23:45.257" starttime="20170913 19:23:45.252"></status>
</kw>
<kw name="Check XtremWeb Server Start From Log" library="XWServer">
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<kw name="Log XtremWeb Process Log File" library="XWServer">
<kw name="Log File" library="OperatingSystem">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<msg timestamp="20170913 19:23:50.262" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170913 19:23:50.269" level="INFO">Wed Sep 13 19:23:45 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : checking launch url
Wed Sep 13 19:23:45 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] WARNING : no launcher URL defined
Wed Sep 13 19:23:45 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : launching SmartSockets hub
[13/Sep/2017:19:23:47 +0000] [main_1] ERROR : setRole : role redefined ?! (was SERVER)
[13/Sep/2017:19:23:48 +0000] [xtremweb.database.DBConnPoolThread_main_1] INFO : Connection to database jdbc:mysql://localhost/xtremweb is ok, 70 created
[13/Sep/2017:19:23:48 +0000] [xtremweb.dispatcher.DBInterface_main_1] WARN : Can't retrieve any app
[13/Sep/2017:19:23:48 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't create ProxyValidator
[13/Sep/2017:19:23:48 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.io.FileNotFoundException: /tmp/castore (No such file or directory) (/tmp/castore (No such file or directory))
[13/Sep/2017:19:23:48 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't add CA certificates to keystore
[13/Sep/2017:19:23:48 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.lang.NullPointerException (null)
[13/Sep/2017:19:23:48 +0000] [xtremweb.dispatcher.HashTaskSet_TaskSet_14] INFO : TaskSet started (300000)
[13/Sep/2017:19:23:49 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : still waiting task set...
[13/Sep/2017:19:23:49 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : UDP server not started
[13/Sep/2017:19:23:49 +0000] [xtremweb.communications.TCPServer_TCPServerNIO_15] INFO : started, listening on port : 4321
log4j:WARN No appenders could be found for logger (org.eclipse.jetty.util.log).
log4j:WARN Please initialize the log4j system properly.
log4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.
[13/Sep/2017:19:23:49 +0000] [xtremweb.communications.HTTPServer_main_1] INFO : started, listening on port : 9443
[13/Sep/2017:19:23:49 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : FACEBOOK : java.net.MalformedURLException: no protocol: 
[13/Sep/2017:19:23:49 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : GOOGLE : java.net.MalformedURLException: no protocol: 
[13/Sep/2017:19:23:49 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : TWITTER : java.net.MalformedURLException: no protocol: 
[13/Sep/2017:19:23:49 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : YAHOO : java.net.MalformedURLException: no protocol: 
[13/Sep/2017:19:23:49 +0000] [main_1] ERROR : Can't add new entry to keystore
[13/Sep/2017:19:23:49 +0000] [main_1] WARN : javax.net.ssl.SSLHandshakeException: sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target (sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target)
[13/Sep/2017:19:23:49 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : XWHEP Dispatcher(10.6.0-head) started [Wed Sep 13 19:23:49 UTC 2017]
[13/Sep/2017:19:23:49 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : DB vendor  = mysql
[13/Sep/2017:19:23:49 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : mileStone  = 
[13/Sep/2017:19:23:49 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Time out   = 15000
[13/Sep/2017:19:23:49 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Disk opt'd = true
[13/Sep/2017:19:23:49 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Net  opt'd = true
[13/Sep/2017:19:23:49 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : NIO        = true
XWHEP Dispatcher started  Wed Sep 13 19:23:49 UTC 2017
Name             : vagrant-ubuntu-trusty-64
Version          : 10.6.0-head
Identity         : 
XWRole           : SERVER
Started on       : Wed Sep 13 19:23:47 UTC 2017
Scheduler        : xtremweb.dispatcher.MatchingScheduler
SmartSockets hub : 172.28.128.3/172.17.0.1/10.0.2.15-4329#72.05.bc.e6.cc.7c.00.00.96.15.02.42.7b.de.a1.dc~vagrant
Server HTTP      : true
Alive            : 300
Alive time out   : 900
Polling time out : 15000
Optimize zip     : true
Optimize network : true
NIO              : true
Comm layer       : xtremweb.communications.TCPClient
Socket time out  : 60000
Socket retries   : 50
Max connections  : 200
TCP port         : 4321
UDP port         : 4323
HTPP  port       : 80
HTPPS port       : 9443
Sun RPC interposition port : 4328
Sandbox path : /usr/bin/lxc
Sandbox launch args : 
Host &lt;host&gt;&lt;uid&gt;45928659-74f7-4ba6-82c4-2132b2cdda26&lt;/uid&gt;&lt;accessrights&gt;0x755&lt;/accessrights&gt;&lt;name&gt;vagrant-ubuntu-trusty-64&lt;/name&gt;&lt;cpuload&gt;50&lt;/cpuload&gt;&lt;natedipaddr&gt;10.0.2.15&lt;/natedipaddr&gt;&lt;ipaddr&gt;10.0.2.15&lt;/ipaddr&gt;&lt;hwaddr&gt;&lt;/hwaddr&gt;&lt;timezone&gt;Etc/UTC&lt;/timezone&gt;&lt;os&gt;LINUX&lt;/os&gt;&lt;osversion&gt;3.13.0-129-generic&lt;/osversion&gt;&lt;javaversion&gt;1.8.0_141&lt;/javaversion&gt;&lt;javadatamodel&gt;64&lt;/javadatamodel&gt;&lt;cputype&gt;AMD64&lt;/cputype&gt;&lt;cpunb&gt;1&lt;/cpunb&gt;&lt;cpumodel&gt;unknown&lt;/cpumodel&gt;&lt;cpuspeed&gt;0&lt;/cpuspeed&gt;&lt;totalmem&gt;0&lt;/totalmem&gt;&lt;totalswap&gt;0&lt;/totalswap&gt;&lt;totaltmp&gt;40284&lt;/totaltmp&gt;&lt;freetmp&gt;37263&lt;/freetmp&gt;&lt;project&gt;&lt;/project&gt;&lt;active&gt;true&lt;/active&gt;&lt;incomingconnections&gt;false&lt;/incomingconnections&gt;&lt;available&gt;false&lt;/available&gt;&lt;pilotjob&gt;false&lt;/pilotjob&gt;&lt;sgid&gt;&lt;/sgid&gt;&lt;timeout&gt;15000&lt;/timeout&gt;&lt;traces&gt;false&lt;/traces&gt;&lt;acceptbin&gt;false&lt;/acceptbin&gt;&lt;version&gt;10.6.0-head&lt;/version&gt;&lt;/host&gt;
[13/Sep/2017:19:23:49 +0000] [xtremweb.communications.HTTPServer_HTTPServer_218] INFO : started, listening on port : 9443
</msg>
<status status="PASS" endtime="20170913 19:23:50.269" starttime="20170913 19:23:50.261"></status>
</kw>
<status status="PASS" endtime="20170913 19:23:50.270" starttime="20170913 19:23:50.261"></status>
</kw>
<kw name="Grep File" library="OperatingSystem">
<doc>Returns the lines of the specified file that match the ``pattern``.</doc>
<arguments>
<arg>${log}</arg>
<arg>listening on port : ${XWCONFIGURE.VALUES.HTTPSPORT}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20170913 19:23:50.270" html="yes" level="INFO">Reading file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170913 19:23:50.271" level="INFO">2 out of 59 lines matched</msg>
<msg timestamp="20170913 19:23:50.272" level="INFO">${ret} = [13/Sep/2017:19:23:49 +0000] [xtremweb.communications.HTTPServer_main_1] INFO : started, listening on port : 9443
[13/Sep/2017:19:23:49 +0000] [xtremweb.communications.HTTPServer_HTTPServer_218] INFO ...</msg>
<status status="PASS" endtime="20170913 19:23:50.272" starttime="20170913 19:23:50.270"></status>
</kw>
<kw name="Get Line Count" library="String">
<doc>Returns and logs the number of lines in the given string.</doc>
<arguments>
<arg>${ret}</arg>
</arguments>
<assign>
<var>${line_count}</var>
</assign>
<msg timestamp="20170913 19:23:50.272" level="INFO">2 lines</msg>
<msg timestamp="20170913 19:23:50.272" level="INFO">${line_count} = 2</msg>
<status status="PASS" endtime="20170913 19:23:50.272" starttime="20170913 19:23:50.272"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${line_count}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20170913 19:23:50.273" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170913 19:23:50.273" starttime="20170913 19:23:50.272"></status>
</kw>
<status status="PASS" endtime="20170913 19:23:50.273" starttime="20170913 19:23:50.260"></status>
</kw>
<status status="PASS" endtime="20170913 19:23:50.273" starttime="20170913 19:23:45.252"></status>
</kw>
<kw name="Log XtremWeb Process Log File" library="XWServer">
<kw name="Log File" library="OperatingSystem">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<msg timestamp="20170913 19:23:50.274" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170913 19:23:50.274" level="INFO">Wed Sep 13 19:23:45 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : checking launch url
Wed Sep 13 19:23:45 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] WARNING : no launcher URL defined
Wed Sep 13 19:23:45 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : launching SmartSockets hub
[13/Sep/2017:19:23:47 +0000] [main_1] ERROR : setRole : role redefined ?! (was SERVER)
[13/Sep/2017:19:23:48 +0000] [xtremweb.database.DBConnPoolThread_main_1] INFO : Connection to database jdbc:mysql://localhost/xtremweb is ok, 70 created
[13/Sep/2017:19:23:48 +0000] [xtremweb.dispatcher.DBInterface_main_1] WARN : Can't retrieve any app
[13/Sep/2017:19:23:48 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't create ProxyValidator
[13/Sep/2017:19:23:48 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.io.FileNotFoundException: /tmp/castore (No such file or directory) (/tmp/castore (No such file or directory))
[13/Sep/2017:19:23:48 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't add CA certificates to keystore
[13/Sep/2017:19:23:48 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.lang.NullPointerException (null)
[13/Sep/2017:19:23:48 +0000] [xtremweb.dispatcher.HashTaskSet_TaskSet_14] INFO : TaskSet started (300000)
[13/Sep/2017:19:23:49 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : still waiting task set...
[13/Sep/2017:19:23:49 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : UDP server not started
[13/Sep/2017:19:23:49 +0000] [xtremweb.communications.TCPServer_TCPServerNIO_15] INFO : started, listening on port : 4321
log4j:WARN No appenders could be found for logger (org.eclipse.jetty.util.log).
log4j:WARN Please initialize the log4j system properly.
log4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.
[13/Sep/2017:19:23:49 +0000] [xtremweb.communications.HTTPServer_main_1] INFO : started, listening on port : 9443
[13/Sep/2017:19:23:49 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : FACEBOOK : java.net.MalformedURLException: no protocol: 
[13/Sep/2017:19:23:49 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : GOOGLE : java.net.MalformedURLException: no protocol: 
[13/Sep/2017:19:23:49 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : TWITTER : java.net.MalformedURLException: no protocol: 
[13/Sep/2017:19:23:49 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : YAHOO : java.net.MalformedURLException: no protocol: 
[13/Sep/2017:19:23:49 +0000] [main_1] ERROR : Can't add new entry to keystore
[13/Sep/2017:19:23:49 +0000] [main_1] WARN : javax.net.ssl.SSLHandshakeException: sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target (sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target)
[13/Sep/2017:19:23:49 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : XWHEP Dispatcher(10.6.0-head) started [Wed Sep 13 19:23:49 UTC 2017]
[13/Sep/2017:19:23:49 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : DB vendor  = mysql
[13/Sep/2017:19:23:49 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : mileStone  = 
[13/Sep/2017:19:23:49 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Time out   = 15000
[13/Sep/2017:19:23:49 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Disk opt'd = true
[13/Sep/2017:19:23:49 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Net  opt'd = true
[13/Sep/2017:19:23:49 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : NIO        = true
XWHEP Dispatcher started  Wed Sep 13 19:23:49 UTC 2017
Name             : vagrant-ubuntu-trusty-64
Version          : 10.6.0-head
Identity         : 
XWRole           : SERVER
Started on       : Wed Sep 13 19:23:47 UTC 2017
Scheduler        : xtremweb.dispatcher.MatchingScheduler
SmartSockets hub : 172.28.128.3/172.17.0.1/10.0.2.15-4329#72.05.bc.e6.cc.7c.00.00.96.15.02.42.7b.de.a1.dc~vagrant
Server HTTP      : true
Alive            : 300
Alive time out   : 900
Polling time out : 15000
Optimize zip     : true
Optimize network : true
NIO              : true
Comm layer       : xtremweb.communications.TCPClient
Socket time out  : 60000
Socket retries   : 50
Max connections  : 200
TCP port         : 4321
UDP port         : 4323
HTPP  port       : 80
HTPPS port       : 9443
Sun RPC interposition port : 4328
Sandbox path : /usr/bin/lxc
Sandbox launch args : 
Host &lt;host&gt;&lt;uid&gt;45928659-74f7-4ba6-82c4-2132b2cdda26&lt;/uid&gt;&lt;accessrights&gt;0x755&lt;/accessrights&gt;&lt;name&gt;vagrant-ubuntu-trusty-64&lt;/name&gt;&lt;cpuload&gt;50&lt;/cpuload&gt;&lt;natedipaddr&gt;10.0.2.15&lt;/natedipaddr&gt;&lt;ipaddr&gt;10.0.2.15&lt;/ipaddr&gt;&lt;hwaddr&gt;&lt;/hwaddr&gt;&lt;timezone&gt;Etc/UTC&lt;/timezone&gt;&lt;os&gt;LINUX&lt;/os&gt;&lt;osversion&gt;3.13.0-129-generic&lt;/osversion&gt;&lt;javaversion&gt;1.8.0_141&lt;/javaversion&gt;&lt;javadatamodel&gt;64&lt;/javadatamodel&gt;&lt;cputype&gt;AMD64&lt;/cputype&gt;&lt;cpunb&gt;1&lt;/cpunb&gt;&lt;cpumodel&gt;unknown&lt;/cpumodel&gt;&lt;cpuspeed&gt;0&lt;/cpuspeed&gt;&lt;totalmem&gt;0&lt;/totalmem&gt;&lt;totalswap&gt;0&lt;/totalswap&gt;&lt;totaltmp&gt;40284&lt;/totaltmp&gt;&lt;freetmp&gt;37263&lt;/freetmp&gt;&lt;project&gt;&lt;/project&gt;&lt;active&gt;true&lt;/active&gt;&lt;incomingconnections&gt;false&lt;/incomingconnections&gt;&lt;available&gt;false&lt;/available&gt;&lt;pilotjob&gt;false&lt;/pilotjob&gt;&lt;sgid&gt;&lt;/sgid&gt;&lt;timeout&gt;15000&lt;/timeout&gt;&lt;traces&gt;false&lt;/traces&gt;&lt;acceptbin&gt;false&lt;/acceptbin&gt;&lt;version&gt;10.6.0-head&lt;/version&gt;&lt;/host&gt;
[13/Sep/2017:19:23:49 +0000] [xtremweb.communications.HTTPServer_HTTPServer_218] INFO : started, listening on port : 9443
</msg>
<status status="PASS" endtime="20170913 19:23:50.274" starttime="20170913 19:23:50.273"></status>
</kw>
<status status="PASS" endtime="20170913 19:23:50.275" starttime="20170913 19:23:50.273"></status>
</kw>
<status status="PASS" endtime="20170913 19:23:50.275" starttime="20170913 19:23:45.232"></status>
</kw>
<kw name="Start XtremWeb Worker" library="XWWorker">
<arguments>
<arg>${DIST_XWHEP_PATH}</arg>
</arguments>
<kw name="File Should Exist" library="OperatingSystem">
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xtremweb.worker.conf</arg>
</arguments>
<msg timestamp="20170913 19:23:50.276" html="yes" level="INFO">File '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf&lt;/a&gt;' exists.</msg>
<status status="PASS" endtime="20170913 19:23:50.276" starttime="20170913 19:23:50.275"></status>
</kw>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xtremweb.worker.conf</arg>
</arguments>
<assign>
<var>${config_content}</var>
</assign>
<msg timestamp="20170913 19:23:50.276" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf&lt;/a&gt;'.</msg>
<msg timestamp="20170913 19:23:50.277" level="INFO">${config_content} = ## XWHEP configuration file
# XWHEP version : 10.6.0-head
# Saved on Wed Sep 13 19:22:39 UTC 2017
#Wed Sep 13 19:22:39 UTC 2017
X509USERPROXY=
SHAREDDATAS=
COMMHANDLERS=attic\:xtremweb.communications....</msg>
<status status="PASS" endtime="20170913 19:23:50.277" starttime="20170913 19:23:50.276"></status>
</kw>
<kw name="Remove String Using Regexp" library="String">
<doc>Removes ``patterns`` from the given ``string``.</doc>
<arguments>
<arg>${config_content}</arg>
<arg>LAUNCHERURL=${XWCONFIGURE.VALUES.XWUPGRADEURL}</arg>
</arguments>
<assign>
<var>${config_content_filtered}</var>
</assign>
<msg timestamp="20170913 19:23:50.278" level="INFO">${config_content_filtered} = ## XWHEP configuration file
# XWHEP version : 10.6.0-head
# Saved on Wed Sep 13 19:22:39 UTC 2017
#Wed Sep 13 19:22:39 UTC 2017
X509USERPROXY=
SHAREDDATAS=
COMMHANDLERS=attic\:xtremweb.communications....</msg>
<status status="PASS" endtime="20170913 19:23:50.278" starttime="20170913 19:23:50.277"></status>
</kw>
<kw name="Create File" library="OperatingSystem">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xtremweb.worker.conf</arg>
<arg>content=${config_content_filtered}</arg>
</arguments>
<msg timestamp="20170913 19:23:50.280" html="yes" level="INFO">Created file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170913 19:23:50.280" starttime="20170913 19:23:50.278"></status>
</kw>
<kw name="Remove File" library="OperatingSystem">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.worker.process.log</arg>
</arguments>
<msg timestamp="20170913 19:23:50.281" html="yes" level="INFO">Removed file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.worker.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.worker.process.log&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170913 19:23:50.281" starttime="20170913 19:23:50.280"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/bin/xtremweb.worker console</arg>
<arg>shell=yes</arg>
<arg>stderr=STDOUT</arg>
<arg>stdout=${DIST_XWHEP_PATH}/xwhep.worker.process.log</arg>
</arguments>
<assign>
<var>${created_process}</var>
</assign>
<msg timestamp="20170913 19:23:50.282" level="INFO">Starting process:
/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/xtremweb.worker console</msg>
<msg timestamp="20170913 19:23:50.286" level="INFO">${created_process} = 84</msg>
<status status="PASS" endtime="20170913 19:23:50.286" starttime="20170913 19:23:50.281"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${WORKER_PROCESS}</arg>
<arg>${created_process}</arg>
</arguments>
<msg timestamp="20170913 19:23:50.288" level="INFO">${WORKER_PROCESS} = 84</msg>
<status status="PASS" endtime="20170913 19:23:50.288" starttime="20170913 19:23:50.286"></status>
</kw>
<kw name="Log File" library="OperatingSystem">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.worker.process.log</arg>
</arguments>
<msg timestamp="20170913 19:23:50.289" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.worker.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.worker.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170913 19:23:50.290" level="INFO"></msg>
<status status="PASS" endtime="20170913 19:23:50.290" starttime="20170913 19:23:50.288"></status>
</kw>
<status status="PASS" endtime="20170913 19:23:50.290" starttime="20170913 19:23:50.275"></status>
</kw>
<status status="PASS" endtime="20170913 19:23:50.291" starttime="20170913 19:23:45.156"></status>
</kw>
<status status="PASS" endtime="20170913 19:23:50.291" starttime="20170913 19:23:44.837"></status>
</kw>
<kw name="XWSENDAPPCommand" library="XWClient">
<doc>Usage : SENDAPP appName appType cpuType osName URI | UID : inserts/updates an application; URI or UID points to binary file ; application name must be the first parameter</doc>
<arguments>
<arg>ls</arg>
<arg>DEPLOYABLE</arg>
<arg>LINUX</arg>
<arg>AMD64</arg>
<arg>/bin/ls</arg>
</arguments>
<assign>
<var>${uid}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd ${DIST_XWHEP_PATH}/bin &amp;&amp; ./xwsendapp ${appName} ${appType} ${cpuType} ${osName} ${uri-udi}</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${cmd_result}</var>
</assign>
<msg timestamp="20170913 19:23:50.294" level="INFO">Starting process:
cd /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin &amp;&amp; ./xwsendapp ls DEPLOYABLE LINUX AMD64 /bin/ls</msg>
<msg timestamp="20170913 19:23:50.298" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170913 19:23:51.330" level="INFO">Process completed.</msg>
<msg timestamp="20170913 19:23:51.330" level="INFO">${cmd_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170913 19:23:51.330" starttime="20170913 19:23:50.293"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stderr}</arg>
</arguments>
<msg timestamp="20170913 19:23:51.331" level="INFO"></msg>
<status status="PASS" endtime="20170913 19:23:51.331" starttime="20170913 19:23:51.331"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
</arguments>
<msg timestamp="20170913 19:23:51.331" level="INFO">xw://vagrant-ubuntu-trusty-64/93677644-5df6-4bf6-80a5-0d09ada04c08</msg>
<status status="PASS" endtime="20170913 19:23:51.332" starttime="20170913 19:23:51.331"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${cmd_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170913 19:23:51.332" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170913 19:23:51.332" starttime="20170913 19:23:51.332"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
<arg>-36</arg>
</arguments>
<assign>
<var>${uid}</var>
</assign>
<msg timestamp="20170913 19:23:51.332" level="INFO">${uid} = 93677644-5df6-4bf6-80a5-0d09ada04c08</msg>
<status status="PASS" endtime="20170913 19:23:51.333" starttime="20170913 19:23:51.332"></status>
</kw>
<msg timestamp="20170913 19:23:51.333" level="INFO">${uid} = 93677644-5df6-4bf6-80a5-0d09ada04c08</msg>
<status status="PASS" endtime="20170913 19:23:51.333" starttime="20170913 19:23:50.292"></status>
</kw>
<kw name="Count From Apps Where Uid" library="XWServer">
<arguments>
<arg>${uid}</arg>
<arg>1</arg>
</arguments>
<kw name="Count From Table Where Uid" library="MySql">
<arguments>
<arg>apps</arg>
<arg>${uid}</arg>
<arg>${countExpected}</arg>
</arguments>
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170913 19:23:51.335" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170913 19:23:51.336" starttime="20170913 19:23:51.334"></status>
</kw>
<status status="PASS" endtime="20170913 19:23:51.336" starttime="20170913 19:23:51.334"></status>
</kw>
<kw name="Row Count Is Equal To X" library="DatabaseLibrary">
<doc>Check if the number of rows returned from `selectStatement` is equal to the value submitted. If not, then this</doc>
<arguments>
<arg>SELECT * FROM ${table} WHERE uid = '${uid}'</arg>
<arg>${countExpected}</arg>
</arguments>
<msg timestamp="20170913 19:23:51.336" level="INFO">Executing : Row Count Is Equal To X  |  SELECT * FROM apps WHERE uid = '93677644-5df6-4bf6-80a5-0d09ada04c08'  |  1 </msg>
<msg timestamp="20170913 19:23:51.336" level="INFO">Executing : Row Count  |  SELECT * FROM apps WHERE uid = '93677644-5df6-4bf6-80a5-0d09ada04c08' </msg>
<status status="PASS" endtime="20170913 19:23:51.338" starttime="20170913 19:23:51.336"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170913 19:23:51.338" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170913 19:23:51.338" starttime="20170913 19:23:51.338"></status>
</kw>
<status status="PASS" endtime="20170913 19:23:51.338" starttime="20170913 19:23:51.338"></status>
</kw>
<status status="PASS" endtime="20170913 19:23:51.338" starttime="20170913 19:23:51.334"></status>
</kw>
<status status="PASS" endtime="20170913 19:23:51.338" starttime="20170913 19:23:51.333"></status>
</kw>
<kw name="XWSUBMITCommand" library="XWClient">
<doc>Usage : XWSUBMIT appName</doc>
<arguments>
<arg>ls -atr</arg>
</arguments>
<assign>
<var>${workuid}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd ${DIST_XWHEP_PATH}/bin &amp;&amp; ./xwsubmit ${appName}</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${cmd_result}</var>
</assign>
<msg timestamp="20170913 19:23:51.340" level="INFO">Starting process:
cd /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin &amp;&amp; ./xwsubmit ls -atr</msg>
<msg timestamp="20170913 19:23:51.342" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170913 19:23:51.956" level="INFO">Process completed.</msg>
<msg timestamp="20170913 19:23:51.956" level="INFO">${cmd_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170913 19:23:51.956" starttime="20170913 19:23:51.339"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stderr}</arg>
</arguments>
<msg timestamp="20170913 19:23:51.957" level="INFO"></msg>
<status status="PASS" endtime="20170913 19:23:51.957" starttime="20170913 19:23:51.956"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
</arguments>
<msg timestamp="20170913 19:23:51.957" level="INFO">xw://vagrant-ubuntu-trusty-64/c09175dc-205f-4f30-91a5-dbaa7c6468b1</msg>
<status status="PASS" endtime="20170913 19:23:51.957" starttime="20170913 19:23:51.957"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${cmd_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170913 19:23:51.957" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170913 19:23:51.958" starttime="20170913 19:23:51.957"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
<arg>-36</arg>
</arguments>
<assign>
<var>${uid}</var>
</assign>
<msg timestamp="20170913 19:23:51.958" level="INFO">${uid} = c09175dc-205f-4f30-91a5-dbaa7c6468b1</msg>
<status status="PASS" endtime="20170913 19:23:51.958" starttime="20170913 19:23:51.958"></status>
</kw>
<msg timestamp="20170913 19:23:51.958" level="INFO">${workuid} = c09175dc-205f-4f30-91a5-dbaa7c6468b1</msg>
<status status="PASS" endtime="20170913 19:23:51.958" starttime="20170913 19:23:51.339"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${workuid}</arg>
</arguments>
<msg timestamp="20170913 19:23:51.959" level="INFO">c09175dc-205f-4f30-91a5-dbaa7c6468b1</msg>
<status status="PASS" endtime="20170913 19:23:51.959" starttime="20170913 19:23:51.958"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3 min</arg>
<arg>5 sec</arg>
<arg>XWClient.Check XWSTATUS Completed</arg>
<arg>${workuid}</arg>
</arguments>
<kw name="Check XWSTATUS Completed" library="XWClient">
<arguments>
<arg>${workuid}</arg>
</arguments>
<kw name="XWSTATUSCommand" library="XWClient">
<doc>Usage : XWSTATUS uid</doc>
<arguments>
<arg>${uid}</arg>
</arguments>
<assign>
<var>${status_result}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd ${DIST_XWHEP_PATH}/bin &amp;&amp; ./xwstatus ${uid}</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${cmd_result}</var>
</assign>
<msg timestamp="20170913 19:23:51.961" level="INFO">Starting process:
cd /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin &amp;&amp; ./xwstatus c09175dc-205f-4f30-91a5-dbaa7c6468b1</msg>
<msg timestamp="20170913 19:23:51.964" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170913 19:23:52.569" level="INFO">Process completed.</msg>
<msg timestamp="20170913 19:23:52.569" level="INFO">${cmd_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170913 19:23:52.569" starttime="20170913 19:23:51.960"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stderr}</arg>
</arguments>
<msg timestamp="20170913 19:23:52.570" level="INFO"></msg>
<status status="PASS" endtime="20170913 19:23:52.570" starttime="20170913 19:23:52.569"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
</arguments>
<msg timestamp="20170913 19:23:52.570" level="INFO"> UID='c09175dc-205f-4f30-91a5-dbaa7c6468b1', STATUS='PENDING', COMPLETEDDATE=NULL, LABEL=NULL</msg>
<status status="PASS" endtime="20170913 19:23:52.570" starttime="20170913 19:23:52.570"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${cmd_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170913 19:23:52.571" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170913 19:23:52.571" starttime="20170913 19:23:52.570"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
<arg>STATUS='(?P&lt;status&gt;.*)', COMPLETEDDATE</arg>
<arg>status</arg>
</arguments>
<assign>
<var>@{status_result}</var>
</assign>
<msg timestamp="20170913 19:23:52.571" level="INFO">@{status_result} = [ PENDING ]</msg>
<status status="PASS" endtime="20170913 19:23:52.571" starttime="20170913 19:23:52.571"></status>
</kw>
<msg timestamp="20170913 19:23:52.571" level="INFO">${status_result} = PENDING</msg>
<status status="PASS" endtime="20170913 19:23:52.571" starttime="20170913 19:23:51.960"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${status_result}</arg>
<arg>COMPLETED</arg>
</arguments>
<msg timestamp="20170913 19:23:52.572" level="FAIL">PENDING != COMPLETED</msg>
<status status="FAIL" endtime="20170913 19:23:52.572" starttime="20170913 19:23:52.572"></status>
</kw>
<status status="FAIL" endtime="20170913 19:23:52.572" starttime="20170913 19:23:51.960"></status>
</kw>
<kw name="Check XWSTATUS Completed" library="XWClient">
<arguments>
<arg>${workuid}</arg>
</arguments>
<kw name="XWSTATUSCommand" library="XWClient">
<doc>Usage : XWSTATUS uid</doc>
<arguments>
<arg>${uid}</arg>
</arguments>
<assign>
<var>${status_result}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd ${DIST_XWHEP_PATH}/bin &amp;&amp; ./xwstatus ${uid}</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${cmd_result}</var>
</assign>
<msg timestamp="20170913 19:23:57.576" level="INFO">Starting process:
cd /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin &amp;&amp; ./xwstatus c09175dc-205f-4f30-91a5-dbaa7c6468b1</msg>
<msg timestamp="20170913 19:23:57.579" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170913 19:23:58.155" level="INFO">Process completed.</msg>
<msg timestamp="20170913 19:23:58.155" level="INFO">${cmd_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170913 19:23:58.156" starttime="20170913 19:23:57.576"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stderr}</arg>
</arguments>
<msg timestamp="20170913 19:23:58.156" level="INFO"></msg>
<status status="PASS" endtime="20170913 19:23:58.156" starttime="20170913 19:23:58.156"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
</arguments>
<msg timestamp="20170913 19:23:58.157" level="INFO"> UID='c09175dc-205f-4f30-91a5-dbaa7c6468b1', STATUS='PENDING', COMPLETEDDATE=NULL, LABEL=NULL</msg>
<status status="PASS" endtime="20170913 19:23:58.157" starttime="20170913 19:23:58.156"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${cmd_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170913 19:23:58.157" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170913 19:23:58.157" starttime="20170913 19:23:58.157"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
<arg>STATUS='(?P&lt;status&gt;.*)', COMPLETEDDATE</arg>
<arg>status</arg>
</arguments>
<assign>
<var>@{status_result}</var>
</assign>
<msg timestamp="20170913 19:23:58.158" level="INFO">@{status_result} = [ PENDING ]</msg>
<status status="PASS" endtime="20170913 19:23:58.158" starttime="20170913 19:23:58.157"></status>
</kw>
<msg timestamp="20170913 19:23:58.158" level="INFO">${status_result} = PENDING</msg>
<status status="PASS" endtime="20170913 19:23:58.158" starttime="20170913 19:23:57.575"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${status_result}</arg>
<arg>COMPLETED</arg>
</arguments>
<msg timestamp="20170913 19:23:58.158" level="FAIL">PENDING != COMPLETED</msg>
<status status="FAIL" endtime="20170913 19:23:58.158" starttime="20170913 19:23:58.158"></status>
</kw>
<status status="FAIL" endtime="20170913 19:23:58.158" starttime="20170913 19:23:57.575"></status>
</kw>
<kw name="Check XWSTATUS Completed" library="XWClient">
<arguments>
<arg>${workuid}</arg>
</arguments>
<kw name="XWSTATUSCommand" library="XWClient">
<doc>Usage : XWSTATUS uid</doc>
<arguments>
<arg>${uid}</arg>
</arguments>
<assign>
<var>${status_result}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd ${DIST_XWHEP_PATH}/bin &amp;&amp; ./xwstatus ${uid}</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${cmd_result}</var>
</assign>
<msg timestamp="20170913 19:24:03.164" level="INFO">Starting process:
cd /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin &amp;&amp; ./xwstatus c09175dc-205f-4f30-91a5-dbaa7c6468b1</msg>
<msg timestamp="20170913 19:24:03.167" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170913 19:24:03.667" level="INFO">Process completed.</msg>
<msg timestamp="20170913 19:24:03.668" level="INFO">${cmd_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170913 19:24:03.668" starttime="20170913 19:24:03.163"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stderr}</arg>
</arguments>
<msg timestamp="20170913 19:24:03.668" level="INFO"></msg>
<status status="PASS" endtime="20170913 19:24:03.668" starttime="20170913 19:24:03.668"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
</arguments>
<msg timestamp="20170913 19:24:03.669" level="INFO"> UID='c09175dc-205f-4f30-91a5-dbaa7c6468b1', STATUS='PENDING', COMPLETEDDATE=NULL, LABEL=NULL</msg>
<status status="PASS" endtime="20170913 19:24:03.669" starttime="20170913 19:24:03.668"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${cmd_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170913 19:24:03.669" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170913 19:24:03.669" starttime="20170913 19:24:03.669"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
<arg>STATUS='(?P&lt;status&gt;.*)', COMPLETEDDATE</arg>
<arg>status</arg>
</arguments>
<assign>
<var>@{status_result}</var>
</assign>
<msg timestamp="20170913 19:24:03.670" level="INFO">@{status_result} = [ PENDING ]</msg>
<status status="PASS" endtime="20170913 19:24:03.670" starttime="20170913 19:24:03.669"></status>
</kw>
<msg timestamp="20170913 19:24:03.670" level="INFO">${status_result} = PENDING</msg>
<status status="PASS" endtime="20170913 19:24:03.670" starttime="20170913 19:24:03.163"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${status_result}</arg>
<arg>COMPLETED</arg>
</arguments>
<msg timestamp="20170913 19:24:03.670" level="FAIL">PENDING != COMPLETED</msg>
<status status="FAIL" endtime="20170913 19:24:03.670" starttime="20170913 19:24:03.670"></status>
</kw>
<status status="FAIL" endtime="20170913 19:24:03.671" starttime="20170913 19:24:03.162"></status>
</kw>
<kw name="Check XWSTATUS Completed" library="XWClient">
<arguments>
<arg>${workuid}</arg>
</arguments>
<kw name="XWSTATUSCommand" library="XWClient">
<doc>Usage : XWSTATUS uid</doc>
<arguments>
<arg>${uid}</arg>
</arguments>
<assign>
<var>${status_result}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd ${DIST_XWHEP_PATH}/bin &amp;&amp; ./xwstatus ${uid}</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${cmd_result}</var>
</assign>
<msg timestamp="20170913 19:24:08.674" level="INFO">Starting process:
cd /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin &amp;&amp; ./xwstatus c09175dc-205f-4f30-91a5-dbaa7c6468b1</msg>
<msg timestamp="20170913 19:24:08.678" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170913 19:24:09.246" level="INFO">Process completed.</msg>
<msg timestamp="20170913 19:24:09.246" level="INFO">${cmd_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170913 19:24:09.246" starttime="20170913 19:24:08.673"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stderr}</arg>
</arguments>
<msg timestamp="20170913 19:24:09.247" level="INFO"></msg>
<status status="PASS" endtime="20170913 19:24:09.247" starttime="20170913 19:24:09.246"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
</arguments>
<msg timestamp="20170913 19:24:09.247" level="INFO"> UID='c09175dc-205f-4f30-91a5-dbaa7c6468b1', STATUS='PENDING', COMPLETEDDATE=NULL, LABEL=NULL</msg>
<status status="PASS" endtime="20170913 19:24:09.247" starttime="20170913 19:24:09.247"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${cmd_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170913 19:24:09.248" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170913 19:24:09.248" starttime="20170913 19:24:09.247"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
<arg>STATUS='(?P&lt;status&gt;.*)', COMPLETEDDATE</arg>
<arg>status</arg>
</arguments>
<assign>
<var>@{status_result}</var>
</assign>
<msg timestamp="20170913 19:24:09.249" level="INFO">@{status_result} = [ PENDING ]</msg>
<status status="PASS" endtime="20170913 19:24:09.249" starttime="20170913 19:24:09.248"></status>
</kw>
<msg timestamp="20170913 19:24:09.249" level="INFO">${status_result} = PENDING</msg>
<status status="PASS" endtime="20170913 19:24:09.249" starttime="20170913 19:24:08.672"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${status_result}</arg>
<arg>COMPLETED</arg>
</arguments>
<msg timestamp="20170913 19:24:09.249" level="FAIL">PENDING != COMPLETED</msg>
<status status="FAIL" endtime="20170913 19:24:09.249" starttime="20170913 19:24:09.249"></status>
</kw>
<status status="FAIL" endtime="20170913 19:24:09.249" starttime="20170913 19:24:08.672"></status>
</kw>
<kw name="Check XWSTATUS Completed" library="XWClient">
<arguments>
<arg>${workuid}</arg>
</arguments>
<kw name="XWSTATUSCommand" library="XWClient">
<doc>Usage : XWSTATUS uid</doc>
<arguments>
<arg>${uid}</arg>
</arguments>
<assign>
<var>${status_result}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd ${DIST_XWHEP_PATH}/bin &amp;&amp; ./xwstatus ${uid}</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${cmd_result}</var>
</assign>
<msg timestamp="20170913 19:24:14.254" level="INFO">Starting process:
cd /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin &amp;&amp; ./xwstatus c09175dc-205f-4f30-91a5-dbaa7c6468b1</msg>
<msg timestamp="20170913 19:24:14.263" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170913 19:24:14.775" level="INFO">Process completed.</msg>
<msg timestamp="20170913 19:24:14.775" level="INFO">${cmd_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170913 19:24:14.775" starttime="20170913 19:24:14.253"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stderr}</arg>
</arguments>
<msg timestamp="20170913 19:24:14.776" level="INFO"></msg>
<status status="PASS" endtime="20170913 19:24:14.776" starttime="20170913 19:24:14.776"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
</arguments>
<msg timestamp="20170913 19:24:14.777" level="INFO"> UID='c09175dc-205f-4f30-91a5-dbaa7c6468b1', STATUS='RUNNING', COMPLETEDDATE=NULL, LABEL=NULL</msg>
<status status="PASS" endtime="20170913 19:24:14.777" starttime="20170913 19:24:14.776"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${cmd_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170913 19:24:14.777" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170913 19:24:14.777" starttime="20170913 19:24:14.777"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
<arg>STATUS='(?P&lt;status&gt;.*)', COMPLETEDDATE</arg>
<arg>status</arg>
</arguments>
<assign>
<var>@{status_result}</var>
</assign>
<msg timestamp="20170913 19:24:14.778" level="INFO">@{status_result} = [ RUNNING ]</msg>
<status status="PASS" endtime="20170913 19:24:14.778" starttime="20170913 19:24:14.777"></status>
</kw>
<msg timestamp="20170913 19:24:14.778" level="INFO">${status_result} = RUNNING</msg>
<status status="PASS" endtime="20170913 19:24:14.778" starttime="20170913 19:24:14.253"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${status_result}</arg>
<arg>COMPLETED</arg>
</arguments>
<msg timestamp="20170913 19:24:14.779" level="FAIL">RUNNING != COMPLETED</msg>
<status status="FAIL" endtime="20170913 19:24:14.779" starttime="20170913 19:24:14.778"></status>
</kw>
<status status="FAIL" endtime="20170913 19:24:14.779" starttime="20170913 19:24:14.252"></status>
</kw>
<kw name="Check XWSTATUS Completed" library="XWClient">
<arguments>
<arg>${workuid}</arg>
</arguments>
<kw name="XWSTATUSCommand" library="XWClient">
<doc>Usage : XWSTATUS uid</doc>
<arguments>
<arg>${uid}</arg>
</arguments>
<assign>
<var>${status_result}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd ${DIST_XWHEP_PATH}/bin &amp;&amp; ./xwstatus ${uid}</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${cmd_result}</var>
</assign>
<msg timestamp="20170913 19:24:19.785" level="INFO">Starting process:
cd /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin &amp;&amp; ./xwstatus c09175dc-205f-4f30-91a5-dbaa7c6468b1</msg>
<msg timestamp="20170913 19:24:19.788" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170913 19:24:20.315" level="INFO">Process completed.</msg>
<msg timestamp="20170913 19:24:20.316" level="INFO">${cmd_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170913 19:24:20.316" starttime="20170913 19:24:19.784"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stderr}</arg>
</arguments>
<msg timestamp="20170913 19:24:20.317" level="INFO"></msg>
<status status="PASS" endtime="20170913 19:24:20.317" starttime="20170913 19:24:20.316"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
</arguments>
<msg timestamp="20170913 19:24:20.317" level="INFO"> UID='c09175dc-205f-4f30-91a5-dbaa7c6468b1', STATUS='RUNNING', COMPLETEDDATE=NULL, LABEL=NULL</msg>
<status status="PASS" endtime="20170913 19:24:20.317" starttime="20170913 19:24:20.317"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${cmd_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170913 19:24:20.318" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170913 19:24:20.318" starttime="20170913 19:24:20.318"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
<arg>STATUS='(?P&lt;status&gt;.*)', COMPLETEDDATE</arg>
<arg>status</arg>
</arguments>
<assign>
<var>@{status_result}</var>
</assign>
<msg timestamp="20170913 19:24:20.318" level="INFO">@{status_result} = [ RUNNING ]</msg>
<status status="PASS" endtime="20170913 19:24:20.318" starttime="20170913 19:24:20.318"></status>
</kw>
<msg timestamp="20170913 19:24:20.319" level="INFO">${status_result} = RUNNING</msg>
<status status="PASS" endtime="20170913 19:24:20.319" starttime="20170913 19:24:19.783"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${status_result}</arg>
<arg>COMPLETED</arg>
</arguments>
<msg timestamp="20170913 19:24:20.319" level="FAIL">RUNNING != COMPLETED</msg>
<status status="FAIL" endtime="20170913 19:24:20.319" starttime="20170913 19:24:20.319"></status>
</kw>
<status status="FAIL" endtime="20170913 19:24:20.320" starttime="20170913 19:24:19.782"></status>
</kw>
<kw name="Check XWSTATUS Completed" library="XWClient">
<arguments>
<arg>${workuid}</arg>
</arguments>
<kw name="XWSTATUSCommand" library="XWClient">
<doc>Usage : XWSTATUS uid</doc>
<arguments>
<arg>${uid}</arg>
</arguments>
<assign>
<var>${status_result}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd ${DIST_XWHEP_PATH}/bin &amp;&amp; ./xwstatus ${uid}</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${cmd_result}</var>
</assign>
<msg timestamp="20170913 19:24:25.324" level="INFO">Starting process:
cd /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin &amp;&amp; ./xwstatus c09175dc-205f-4f30-91a5-dbaa7c6468b1</msg>
<msg timestamp="20170913 19:24:25.328" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170913 19:24:25.912" level="INFO">Process completed.</msg>
<msg timestamp="20170913 19:24:25.913" level="INFO">${cmd_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170913 19:24:25.913" starttime="20170913 19:24:25.324"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stderr}</arg>
</arguments>
<msg timestamp="20170913 19:24:25.914" level="INFO"></msg>
<status status="PASS" endtime="20170913 19:24:25.914" starttime="20170913 19:24:25.913"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
</arguments>
<msg timestamp="20170913 19:24:25.914" level="INFO"> UID='c09175dc-205f-4f30-91a5-dbaa7c6468b1', STATUS='RUNNING', COMPLETEDDATE=NULL, LABEL=NULL</msg>
<status status="PASS" endtime="20170913 19:24:25.914" starttime="20170913 19:24:25.914"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${cmd_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170913 19:24:25.914" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170913 19:24:25.915" starttime="20170913 19:24:25.914"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
<arg>STATUS='(?P&lt;status&gt;.*)', COMPLETEDDATE</arg>
<arg>status</arg>
</arguments>
<assign>
<var>@{status_result}</var>
</assign>
<msg timestamp="20170913 19:24:25.916" level="INFO">@{status_result} = [ RUNNING ]</msg>
<status status="PASS" endtime="20170913 19:24:25.916" starttime="20170913 19:24:25.915"></status>
</kw>
<msg timestamp="20170913 19:24:25.916" level="INFO">${status_result} = RUNNING</msg>
<status status="PASS" endtime="20170913 19:24:25.916" starttime="20170913 19:24:25.323"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${status_result}</arg>
<arg>COMPLETED</arg>
</arguments>
<msg timestamp="20170913 19:24:25.917" level="FAIL">RUNNING != COMPLETED</msg>
<status status="FAIL" endtime="20170913 19:24:25.917" starttime="20170913 19:24:25.916"></status>
</kw>
<status status="FAIL" endtime="20170913 19:24:25.917" starttime="20170913 19:24:25.322"></status>
</kw>
<kw name="Check XWSTATUS Completed" library="XWClient">
<arguments>
<arg>${workuid}</arg>
</arguments>
<kw name="XWSTATUSCommand" library="XWClient">
<doc>Usage : XWSTATUS uid</doc>
<arguments>
<arg>${uid}</arg>
</arguments>
<assign>
<var>${status_result}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd ${DIST_XWHEP_PATH}/bin &amp;&amp; ./xwstatus ${uid}</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${cmd_result}</var>
</assign>
<msg timestamp="20170913 19:24:30.921" level="INFO">Starting process:
cd /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin &amp;&amp; ./xwstatus c09175dc-205f-4f30-91a5-dbaa7c6468b1</msg>
<msg timestamp="20170913 19:24:30.925" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170913 19:24:31.422" level="INFO">Process completed.</msg>
<msg timestamp="20170913 19:24:31.423" level="INFO">${cmd_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170913 19:24:31.423" starttime="20170913 19:24:30.920"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stderr}</arg>
</arguments>
<msg timestamp="20170913 19:24:31.424" level="INFO"></msg>
<status status="PASS" endtime="20170913 19:24:31.424" starttime="20170913 19:24:31.423"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
</arguments>
<msg timestamp="20170913 19:24:31.424" level="INFO"> UID='c09175dc-205f-4f30-91a5-dbaa7c6468b1', STATUS='RUNNING', COMPLETEDDATE=NULL, LABEL=NULL</msg>
<status status="PASS" endtime="20170913 19:24:31.424" starttime="20170913 19:24:31.424"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${cmd_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170913 19:24:31.424" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170913 19:24:31.425" starttime="20170913 19:24:31.424"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
<arg>STATUS='(?P&lt;status&gt;.*)', COMPLETEDDATE</arg>
<arg>status</arg>
</arguments>
<assign>
<var>@{status_result}</var>
</assign>
<msg timestamp="20170913 19:24:31.426" level="INFO">@{status_result} = [ RUNNING ]</msg>
<status status="PASS" endtime="20170913 19:24:31.426" starttime="20170913 19:24:31.425"></status>
</kw>
<msg timestamp="20170913 19:24:31.426" level="INFO">${status_result} = RUNNING</msg>
<status status="PASS" endtime="20170913 19:24:31.426" starttime="20170913 19:24:30.919"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${status_result}</arg>
<arg>COMPLETED</arg>
</arguments>
<msg timestamp="20170913 19:24:31.427" level="FAIL">RUNNING != COMPLETED</msg>
<status status="FAIL" endtime="20170913 19:24:31.427" starttime="20170913 19:24:31.426"></status>
</kw>
<status status="FAIL" endtime="20170913 19:24:31.427" starttime="20170913 19:24:30.918"></status>
</kw>
<kw name="Check XWSTATUS Completed" library="XWClient">
<arguments>
<arg>${workuid}</arg>
</arguments>
<kw name="XWSTATUSCommand" library="XWClient">
<doc>Usage : XWSTATUS uid</doc>
<arguments>
<arg>${uid}</arg>
</arguments>
<assign>
<var>${status_result}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd ${DIST_XWHEP_PATH}/bin &amp;&amp; ./xwstatus ${uid}</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${cmd_result}</var>
</assign>
<msg timestamp="20170913 19:24:36.429" level="INFO">Starting process:
cd /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin &amp;&amp; ./xwstatus c09175dc-205f-4f30-91a5-dbaa7c6468b1</msg>
<msg timestamp="20170913 19:24:36.432" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170913 19:24:37.039" level="INFO">Process completed.</msg>
<msg timestamp="20170913 19:24:37.040" level="INFO">${cmd_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170913 19:24:37.040" starttime="20170913 19:24:36.429"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stderr}</arg>
</arguments>
<msg timestamp="20170913 19:24:37.041" level="INFO"></msg>
<status status="PASS" endtime="20170913 19:24:37.041" starttime="20170913 19:24:37.040"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
</arguments>
<msg timestamp="20170913 19:24:37.042" level="INFO"> UID='c09175dc-205f-4f30-91a5-dbaa7c6468b1', STATUS='RUNNING', COMPLETEDDATE=NULL, LABEL=NULL</msg>
<status status="PASS" endtime="20170913 19:24:37.042" starttime="20170913 19:24:37.041"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${cmd_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170913 19:24:37.042" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170913 19:24:37.043" starttime="20170913 19:24:37.042"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
<arg>STATUS='(?P&lt;status&gt;.*)', COMPLETEDDATE</arg>
<arg>status</arg>
</arguments>
<assign>
<var>@{status_result}</var>
</assign>
<msg timestamp="20170913 19:24:37.043" level="INFO">@{status_result} = [ RUNNING ]</msg>
<status status="PASS" endtime="20170913 19:24:37.043" starttime="20170913 19:24:37.043"></status>
</kw>
<msg timestamp="20170913 19:24:37.043" level="INFO">${status_result} = RUNNING</msg>
<status status="PASS" endtime="20170913 19:24:37.043" starttime="20170913 19:24:36.428"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${status_result}</arg>
<arg>COMPLETED</arg>
</arguments>
<msg timestamp="20170913 19:24:37.044" level="FAIL">RUNNING != COMPLETED</msg>
<status status="FAIL" endtime="20170913 19:24:37.044" starttime="20170913 19:24:37.044"></status>
</kw>
<status status="FAIL" endtime="20170913 19:24:37.044" starttime="20170913 19:24:36.428"></status>
</kw>
<kw name="Check XWSTATUS Completed" library="XWClient">
<arguments>
<arg>${workuid}</arg>
</arguments>
<kw name="XWSTATUSCommand" library="XWClient">
<doc>Usage : XWSTATUS uid</doc>
<arguments>
<arg>${uid}</arg>
</arguments>
<assign>
<var>${status_result}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd ${DIST_XWHEP_PATH}/bin &amp;&amp; ./xwstatus ${uid}</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${cmd_result}</var>
</assign>
<msg timestamp="20170913 19:24:42.048" level="INFO">Starting process:
cd /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin &amp;&amp; ./xwstatus c09175dc-205f-4f30-91a5-dbaa7c6468b1</msg>
<msg timestamp="20170913 19:24:42.052" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170913 19:24:42.560" level="INFO">Process completed.</msg>
<msg timestamp="20170913 19:24:42.560" level="INFO">${cmd_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170913 19:24:42.560" starttime="20170913 19:24:42.048"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stderr}</arg>
</arguments>
<msg timestamp="20170913 19:24:42.561" level="INFO"></msg>
<status status="PASS" endtime="20170913 19:24:42.561" starttime="20170913 19:24:42.561"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
</arguments>
<msg timestamp="20170913 19:24:42.562" level="INFO"> UID='c09175dc-205f-4f30-91a5-dbaa7c6468b1', STATUS='RUNNING', COMPLETEDDATE=NULL, LABEL=NULL</msg>
<status status="PASS" endtime="20170913 19:24:42.562" starttime="20170913 19:24:42.562"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${cmd_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170913 19:24:42.563" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170913 19:24:42.563" starttime="20170913 19:24:42.562"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
<arg>STATUS='(?P&lt;status&gt;.*)', COMPLETEDDATE</arg>
<arg>status</arg>
</arguments>
<assign>
<var>@{status_result}</var>
</assign>
<msg timestamp="20170913 19:24:42.563" level="INFO">@{status_result} = [ RUNNING ]</msg>
<status status="PASS" endtime="20170913 19:24:42.564" starttime="20170913 19:24:42.563"></status>
</kw>
<msg timestamp="20170913 19:24:42.564" level="INFO">${status_result} = RUNNING</msg>
<status status="PASS" endtime="20170913 19:24:42.564" starttime="20170913 19:24:42.047"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${status_result}</arg>
<arg>COMPLETED</arg>
</arguments>
<msg timestamp="20170913 19:24:42.565" level="FAIL">RUNNING != COMPLETED</msg>
<status status="FAIL" endtime="20170913 19:24:42.565" starttime="20170913 19:24:42.564"></status>
</kw>
<status status="FAIL" endtime="20170913 19:24:42.565" starttime="20170913 19:24:42.047"></status>
</kw>
<kw name="Check XWSTATUS Completed" library="XWClient">
<arguments>
<arg>${workuid}</arg>
</arguments>
<kw name="XWSTATUSCommand" library="XWClient">
<doc>Usage : XWSTATUS uid</doc>
<arguments>
<arg>${uid}</arg>
</arguments>
<assign>
<var>${status_result}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd ${DIST_XWHEP_PATH}/bin &amp;&amp; ./xwstatus ${uid}</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${cmd_result}</var>
</assign>
<msg timestamp="20170913 19:24:47.575" level="INFO">Starting process:
cd /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin &amp;&amp; ./xwstatus c09175dc-205f-4f30-91a5-dbaa7c6468b1</msg>
<msg timestamp="20170913 19:24:47.580" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170913 19:24:48.095" level="INFO">Process completed.</msg>
<msg timestamp="20170913 19:24:48.095" level="INFO">${cmd_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170913 19:24:48.095" starttime="20170913 19:24:47.574"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stderr}</arg>
</arguments>
<msg timestamp="20170913 19:24:48.096" level="INFO"></msg>
<status status="PASS" endtime="20170913 19:24:48.096" starttime="20170913 19:24:48.096"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
</arguments>
<msg timestamp="20170913 19:24:48.097" level="INFO"> UID='c09175dc-205f-4f30-91a5-dbaa7c6468b1', STATUS='RUNNING', COMPLETEDDATE=NULL, LABEL=NULL</msg>
<status status="PASS" endtime="20170913 19:24:48.097" starttime="20170913 19:24:48.096"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${cmd_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170913 19:24:48.097" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170913 19:24:48.097" starttime="20170913 19:24:48.097"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
<arg>STATUS='(?P&lt;status&gt;.*)', COMPLETEDDATE</arg>
<arg>status</arg>
</arguments>
<assign>
<var>@{status_result}</var>
</assign>
<msg timestamp="20170913 19:24:48.098" level="INFO">@{status_result} = [ RUNNING ]</msg>
<status status="PASS" endtime="20170913 19:24:48.098" starttime="20170913 19:24:48.098"></status>
</kw>
<msg timestamp="20170913 19:24:48.099" level="INFO">${status_result} = RUNNING</msg>
<status status="PASS" endtime="20170913 19:24:48.099" starttime="20170913 19:24:47.574"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${status_result}</arg>
<arg>COMPLETED</arg>
</arguments>
<msg timestamp="20170913 19:24:48.099" level="FAIL">RUNNING != COMPLETED</msg>
<status status="FAIL" endtime="20170913 19:24:48.099" starttime="20170913 19:24:48.099"></status>
</kw>
<status status="FAIL" endtime="20170913 19:24:48.099" starttime="20170913 19:24:47.573"></status>
</kw>
<kw name="Check XWSTATUS Completed" library="XWClient">
<arguments>
<arg>${workuid}</arg>
</arguments>
<kw name="XWSTATUSCommand" library="XWClient">
<doc>Usage : XWSTATUS uid</doc>
<arguments>
<arg>${uid}</arg>
</arguments>
<assign>
<var>${status_result}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd ${DIST_XWHEP_PATH}/bin &amp;&amp; ./xwstatus ${uid}</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${cmd_result}</var>
</assign>
<msg timestamp="20170913 19:24:53.105" level="INFO">Starting process:
cd /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin &amp;&amp; ./xwstatus c09175dc-205f-4f30-91a5-dbaa7c6468b1</msg>
<msg timestamp="20170913 19:24:53.109" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170913 19:24:53.598" level="INFO">Process completed.</msg>
<msg timestamp="20170913 19:24:53.599" level="INFO">${cmd_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170913 19:24:53.599" starttime="20170913 19:24:53.105"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stderr}</arg>
</arguments>
<msg timestamp="20170913 19:24:53.600" level="INFO"></msg>
<status status="PASS" endtime="20170913 19:24:53.600" starttime="20170913 19:24:53.599"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
</arguments>
<msg timestamp="20170913 19:24:53.601" level="INFO"> UID='c09175dc-205f-4f30-91a5-dbaa7c6468b1', STATUS='RUNNING', COMPLETEDDATE=NULL, LABEL=NULL</msg>
<status status="PASS" endtime="20170913 19:24:53.601" starttime="20170913 19:24:53.600"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${cmd_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170913 19:24:53.601" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170913 19:24:53.601" starttime="20170913 19:24:53.601"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
<arg>STATUS='(?P&lt;status&gt;.*)', COMPLETEDDATE</arg>
<arg>status</arg>
</arguments>
<assign>
<var>@{status_result}</var>
</assign>
<msg timestamp="20170913 19:24:53.602" level="INFO">@{status_result} = [ RUNNING ]</msg>
<status status="PASS" endtime="20170913 19:24:53.602" starttime="20170913 19:24:53.602"></status>
</kw>
<msg timestamp="20170913 19:24:53.602" level="INFO">${status_result} = RUNNING</msg>
<status status="PASS" endtime="20170913 19:24:53.602" starttime="20170913 19:24:53.105"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${status_result}</arg>
<arg>COMPLETED</arg>
</arguments>
<msg timestamp="20170913 19:24:53.603" level="FAIL">RUNNING != COMPLETED</msg>
<status status="FAIL" endtime="20170913 19:24:53.603" starttime="20170913 19:24:53.602"></status>
</kw>
<status status="FAIL" endtime="20170913 19:24:53.603" starttime="20170913 19:24:53.104"></status>
</kw>
<kw name="Check XWSTATUS Completed" library="XWClient">
<arguments>
<arg>${workuid}</arg>
</arguments>
<kw name="XWSTATUSCommand" library="XWClient">
<doc>Usage : XWSTATUS uid</doc>
<arguments>
<arg>${uid}</arg>
</arguments>
<assign>
<var>${status_result}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd ${DIST_XWHEP_PATH}/bin &amp;&amp; ./xwstatus ${uid}</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${cmd_result}</var>
</assign>
<msg timestamp="20170913 19:24:58.607" level="INFO">Starting process:
cd /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin &amp;&amp; ./xwstatus c09175dc-205f-4f30-91a5-dbaa7c6468b1</msg>
<msg timestamp="20170913 19:24:58.610" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170913 19:24:59.118" level="INFO">Process completed.</msg>
<msg timestamp="20170913 19:24:59.118" level="INFO">${cmd_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170913 19:24:59.118" starttime="20170913 19:24:58.606"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stderr}</arg>
</arguments>
<msg timestamp="20170913 19:24:59.119" level="INFO"></msg>
<status status="PASS" endtime="20170913 19:24:59.120" starttime="20170913 19:24:59.118"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
</arguments>
<msg timestamp="20170913 19:24:59.120" level="INFO"> UID='c09175dc-205f-4f30-91a5-dbaa7c6468b1', STATUS='COMPLETED', COMPLETEDDATE='2017-09-13 19:24:55', LABEL=NULL</msg>
<status status="PASS" endtime="20170913 19:24:59.120" starttime="20170913 19:24:59.120"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${cmd_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170913 19:24:59.120" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170913 19:24:59.120" starttime="20170913 19:24:59.120"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
<arg>STATUS='(?P&lt;status&gt;.*)', COMPLETEDDATE</arg>
<arg>status</arg>
</arguments>
<assign>
<var>@{status_result}</var>
</assign>
<msg timestamp="20170913 19:24:59.121" level="INFO">@{status_result} = [ COMPLETED ]</msg>
<status status="PASS" endtime="20170913 19:24:59.121" starttime="20170913 19:24:59.121"></status>
</kw>
<msg timestamp="20170913 19:24:59.121" level="INFO">${status_result} = COMPLETED</msg>
<status status="PASS" endtime="20170913 19:24:59.121" starttime="20170913 19:24:58.606"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${status_result}</arg>
<arg>COMPLETED</arg>
</arguments>
<status status="PASS" endtime="20170913 19:24:59.122" starttime="20170913 19:24:59.121"></status>
</kw>
<status status="PASS" endtime="20170913 19:24:59.122" starttime="20170913 19:24:58.605"></status>
</kw>
<status status="PASS" endtime="20170913 19:24:59.122" starttime="20170913 19:23:51.959"></status>
</kw>
<kw name="XWRESULTSCommand" library="XWClient">
<doc>Usage : XWRESULT uid</doc>
<arguments>
<arg>${workuid}</arg>
</arguments>
<assign>
<var>${results_file}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd ${DIST_XWHEP_PATH}/bin &amp;&amp; ./xwresults ${uid}</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${cmd_result}</var>
</assign>
<msg timestamp="20170913 19:24:59.123" level="INFO">Starting process:
cd /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin &amp;&amp; ./xwresults c09175dc-205f-4f30-91a5-dbaa7c6468b1</msg>
<msg timestamp="20170913 19:24:59.125" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170913 19:24:59.775" level="INFO">Process completed.</msg>
<msg timestamp="20170913 19:24:59.775" level="INFO">${cmd_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170913 19:24:59.775" starttime="20170913 19:24:59.122"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stderr}</arg>
</arguments>
<msg timestamp="20170913 19:24:59.776" level="INFO"></msg>
<status status="PASS" endtime="20170913 19:24:59.776" starttime="20170913 19:24:59.776"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
</arguments>
<msg timestamp="20170913 19:24:59.776" level="INFO"> UID='c09175dc-205f-4f30-91a5-dbaa7c6468b1', STATUS='COMPLETED', COMPLETEDDATE='2017-09-13 19:24:55', LABEL=NULL
[13/Sep/2017:19:24:59 +0000] [xtremweb.client.Client_main_1] INFO : Downloaded to : /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/dc584b8c-9bf2-44f0-843c-9b1a13439551_stdout.txt.txt</msg>
<status status="PASS" endtime="20170913 19:24:59.776" starttime="20170913 19:24:59.776"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${cmd_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170913 19:24:59.777" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170913 19:24:59.777" starttime="20170913 19:24:59.777"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
<arg>INFO : Downloaded to : (?P&lt;file&gt;.*)</arg>
<arg>file</arg>
</arguments>
<assign>
<var>@{results_file}</var>
</assign>
<msg timestamp="20170913 19:24:59.777" level="INFO">@{results_file} = [ /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/dc584b8c-9bf2-44f0-843c-9b1a13439551_stdout.txt.txt ]</msg>
<status status="PASS" endtime="20170913 19:24:59.777" starttime="20170913 19:24:59.777"></status>
</kw>
<msg timestamp="20170913 19:24:59.778" level="INFO">${results_file} = /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/dc584b8c-9bf2-44f0-843c-9b1a13439551_stdout.txt.txt</msg>
<status status="PASS" endtime="20170913 19:24:59.778" starttime="20170913 19:24:59.122"></status>
</kw>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${results_file}</arg>
</arguments>
<assign>
<var>${results_file_content}</var>
</assign>
<msg timestamp="20170913 19:24:59.778" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/dc584b8c-9bf2-44f0-843c-9b1a13439551_stdout.txt.txt"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/dc584b8c-9bf2-44f0-843c-9b1a13439551_stdout.txt.txt&lt;/a&gt;'.</msg>
<msg timestamp="20170913 19:24:59.785" level="INFO">${results_file_content} = ..
stdout.txt
stderr.txt
.
</msg>
<status status="PASS" endtime="20170913 19:24:59.785" starttime="20170913 19:24:59.778"></status>
</kw>
<kw name="Get Line Count" library="String">
<doc>Returns and logs the number of lines in the given string.</doc>
<arguments>
<arg>${results_file_content}</arg>
</arguments>
<assign>
<var>${results_file_content_lines_count}</var>
</assign>
<msg timestamp="20170913 19:24:59.785" level="INFO">4 lines</msg>
<msg timestamp="20170913 19:24:59.786" level="INFO">${results_file_content_lines_count} = 4</msg>
<status status="PASS" endtime="20170913 19:24:59.786" starttime="20170913 19:24:59.785"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${results_file_content_lines_count}</arg>
<arg>4</arg>
</arguments>
<msg timestamp="20170913 19:24:59.787" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170913 19:24:59.787" starttime="20170913 19:24:59.787"></status>
</kw>
<kw name="Split To Lines" library="String">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${results_file_content}</arg>
</arguments>
<assign>
<var>@{results_file_lines}</var>
</assign>
<msg timestamp="20170913 19:24:59.788" level="INFO">4 lines returned</msg>
<msg timestamp="20170913 19:24:59.788" level="INFO">@{results_file_lines} = [ .. | stdout.txt | stderr.txt | . ]</msg>
<status status="PASS" endtime="20170913 19:24:59.789" starttime="20170913 19:24:59.787"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>@{results_file_lines}[0]</arg>
<arg>..</arg>
</arguments>
<status status="PASS" endtime="20170913 19:24:59.789" starttime="20170913 19:24:59.789"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>@{results_file_lines}[1]</arg>
<arg>stdout.txt</arg>
</arguments>
<status status="PASS" endtime="20170913 19:24:59.790" starttime="20170913 19:24:59.789"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>@{results_file_lines}[2]</arg>
<arg>stderr.txt</arg>
</arguments>
<status status="PASS" endtime="20170913 19:24:59.790" starttime="20170913 19:24:59.790"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>@{results_file_lines}[3]</arg>
<arg>.</arg>
</arguments>
<status status="PASS" endtime="20170913 19:24:59.791" starttime="20170913 19:24:59.790"></status>
</kw>
<kw type="teardown" name="End XWtremWeb Command Test" library="XWCommon">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Nothing to do</arg>
</arguments>
<msg timestamp="20170913 19:24:59.792" level="INFO">Nothing to do</msg>
<status status="PASS" endtime="20170913 19:24:59.792" starttime="20170913 19:24:59.791"></status>
</kw>
<status status="PASS" endtime="20170913 19:24:59.792" starttime="20170913 19:24:59.791"></status>
</kw>
<doc>Testing XWSubmit and XWResults cmd with param</doc>
<tags>
<tag>CommandLine Tests</tag>
</tags>
<status status="PASS" endtime="20170913 19:24:59.792" critical="yes" starttime="20170913 19:23:44.837"></status>
</test>
<kw type="teardown" name="Stop XWtremWeb Server And XWtremWeb Worker" library="XWCommon">
<kw name="Stop XtremWeb Server" library="XWServer">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${SERVER_PROCESS}</arg>
</arguments>
<msg timestamp="20170913 19:24:59.794" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20170913 19:24:59.794" level="INFO">Process completed.</msg>
<status status="PASS" endtime="20170913 19:24:59.794" starttime="20170913 19:24:59.793"></status>
</kw>
<status status="PASS" endtime="20170913 19:24:59.794" starttime="20170913 19:24:59.793"></status>
</kw>
<kw name="Log XtremWeb Server" library="XWCommon">
<kw name="Log XtremWeb Process Log File" library="XWServer">
<kw name="Log File" library="OperatingSystem">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<msg timestamp="20170913 19:24:59.795" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170913 19:24:59.797" level="INFO">Wed Sep 13 19:23:45 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : checking launch url
Wed Sep 13 19:23:45 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] WARNING : no launcher URL defined
Wed Sep 13 19:23:45 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : launching SmartSockets hub
[13/Sep/2017:19:23:47 +0000] [main_1] ERROR : setRole : role redefined ?! (was SERVER)
[13/Sep/2017:19:23:48 +0000] [xtremweb.database.DBConnPoolThread_main_1] INFO : Connection to database jdbc:mysql://localhost/xtremweb is ok, 70 created
[13/Sep/2017:19:23:48 +0000] [xtremweb.dispatcher.DBInterface_main_1] WARN : Can't retrieve any app
[13/Sep/2017:19:23:48 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't create ProxyValidator
[13/Sep/2017:19:23:48 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.io.FileNotFoundException: /tmp/castore (No such file or directory) (/tmp/castore (No such file or directory))
[13/Sep/2017:19:23:48 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't add CA certificates to keystore
[13/Sep/2017:19:23:48 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.lang.NullPointerException (null)
[13/Sep/2017:19:23:48 +0000] [xtremweb.dispatcher.HashTaskSet_TaskSet_14] INFO : TaskSet started (300000)
[13/Sep/2017:19:23:49 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : still waiting task set...
[13/Sep/2017:19:23:49 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : UDP server not started
[13/Sep/2017:19:23:49 +0000] [xtremweb.communications.TCPServer_TCPServerNIO_15] INFO : started, listening on port : 4321
log4j:WARN No appenders could be found for logger (org.eclipse.jetty.util.log).
log4j:WARN Please initialize the log4j system properly.
log4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.
[13/Sep/2017:19:23:49 +0000] [xtremweb.communications.HTTPServer_main_1] INFO : started, listening on port : 9443
[13/Sep/2017:19:23:49 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : FACEBOOK : java.net.MalformedURLException: no protocol: 
[13/Sep/2017:19:23:49 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : GOOGLE : java.net.MalformedURLException: no protocol: 
[13/Sep/2017:19:23:49 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : TWITTER : java.net.MalformedURLException: no protocol: 
[13/Sep/2017:19:23:49 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : YAHOO : java.net.MalformedURLException: no protocol: 
[13/Sep/2017:19:23:49 +0000] [main_1] ERROR : Can't add new entry to keystore
[13/Sep/2017:19:23:49 +0000] [main_1] WARN : javax.net.ssl.SSLHandshakeException: sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target (sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target)
[13/Sep/2017:19:23:49 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : XWHEP Dispatcher(10.6.0-head) started [Wed Sep 13 19:23:49 UTC 2017]
[13/Sep/2017:19:23:49 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : DB vendor  = mysql
[13/Sep/2017:19:23:49 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : mileStone  = 
[13/Sep/2017:19:23:49 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Time out   = 15000
[13/Sep/2017:19:23:49 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Disk opt'd = true
[13/Sep/2017:19:23:49 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Net  opt'd = true
[13/Sep/2017:19:23:49 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : NIO        = true
XWHEP Dispatcher started  Wed Sep 13 19:23:49 UTC 2017
Name             : vagrant-ubuntu-trusty-64
Version          : 10.6.0-head
Identity         : 
XWRole           : SERVER
Started on       : Wed Sep 13 19:23:47 UTC 2017
Scheduler        : xtremweb.dispatcher.MatchingScheduler
SmartSockets hub : 172.28.128.3/172.17.0.1/10.0.2.15-4329#72.05.bc.e6.cc.7c.00.00.96.15.02.42.7b.de.a1.dc~vagrant
Server HTTP      : true
Alive            : 300
Alive time out   : 900
Polling time out : 15000
Optimize zip     : true
Optimize network : true
NIO              : true
Comm layer       : xtremweb.communications.TCPClient
Socket time out  : 60000
Socket retries   : 50
Max connections  : 200
TCP port         : 4321
UDP port         : 4323
HTPP  port       : 80
HTPPS port       : 9443
Sun RPC interposition port : 4328
Sandbox path : /usr/bin/lxc
Sandbox launch args : 
Host &lt;host&gt;&lt;uid&gt;45928659-74f7-4ba6-82c4-2132b2cdda26&lt;/uid&gt;&lt;accessrights&gt;0x755&lt;/accessrights&gt;&lt;name&gt;vagrant-ubuntu-trusty-64&lt;/name&gt;&lt;cpuload&gt;50&lt;/cpuload&gt;&lt;natedipaddr&gt;10.0.2.15&lt;/natedipaddr&gt;&lt;ipaddr&gt;10.0.2.15&lt;/ipaddr&gt;&lt;hwaddr&gt;&lt;/hwaddr&gt;&lt;timezone&gt;Etc/UTC&lt;/timezone&gt;&lt;os&gt;LINUX&lt;/os&gt;&lt;osversion&gt;3.13.0-129-generic&lt;/osversion&gt;&lt;javaversion&gt;1.8.0_141&lt;/javaversion&gt;&lt;javadatamodel&gt;64&lt;/javadatamodel&gt;&lt;cputype&gt;AMD64&lt;/cputype&gt;&lt;cpunb&gt;1&lt;/cpunb&gt;&lt;cpumodel&gt;unknown&lt;/cpumodel&gt;&lt;cpuspeed&gt;0&lt;/cpuspeed&gt;&lt;totalmem&gt;0&lt;/totalmem&gt;&lt;totalswap&gt;0&lt;/totalswap&gt;&lt;totaltmp&gt;40284&lt;/totaltmp&gt;&lt;freetmp&gt;37263&lt;/freetmp&gt;&lt;project&gt;&lt;/project&gt;&lt;active&gt;true&lt;/active&gt;&lt;incomingconnections&gt;false&lt;/incomingconnections&gt;&lt;available&gt;false&lt;/available&gt;&lt;pilotjob&gt;false&lt;/pilotjob&gt;&lt;sgid&gt;&lt;/sgid&gt;&lt;timeout&gt;15000&lt;/timeout&gt;&lt;traces&gt;false&lt;/traces&gt;&lt;acceptbin&gt;false&lt;/acceptbin&gt;&lt;version&gt;10.6.0-head&lt;/version&gt;&lt;/host&gt;
[13/Sep/2017:19:23:49 +0000] [xtremweb.communications.HTTPServer_HTTPServer_218] INFO : started, listening on port : 9443
[13/Sep/2017:19:23:51 +0000] [xtremweb.common.StreamIO_TCPHandler_18] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[13/Sep/2017:19:23:51 +0000] [xtremweb.common.StreamIO_TCPHandler_17] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[13/Sep/2017:19:23:51 +0000] [xtremweb.common.StreamIO_TCPHandler_19] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[13/Sep/2017:19:23:52 +0000] [xtremweb.common.StreamIO_TCPHandler_20] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[13/Sep/2017:19:23:54 +0000] [xtremweb.common.StreamIO_TCPHandler_21] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[13/Sep/2017:19:23:54 +0000] [xtremweb.common.StreamIO_TCPHandler_22] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[13/Sep/2017:19:23:54 +0000] [xtremweb.dispatcher.DBInterface_TCPHandler_23] INFO : vagrant-ubuntu-trusty-64 not in DB; inserting 6b5d70f8-ded4-4d26-9a19-8fadbefb611a
[13/Sep/2017:19:23:54 +0000] [xtremweb.common.StreamIO_TCPHandler_23] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[13/Sep/2017:19:23:58 +0000] [xtremweb.common.StreamIO_TCPHandler_24] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[13/Sep/2017:19:24:03 +0000] [xtremweb.common.StreamIO_TCPHandler_25] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[13/Sep/2017:19:24:09 +0000] [xtremweb.common.StreamIO_TCPHandler_26] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[13/Sep/2017:19:24:09 +0000] [xtremweb.common.StreamIO_TCPHandler_27] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[13/Sep/2017:19:24:09 +0000] [xtremweb.common.StreamIO_TCPHandler_28] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[13/Sep/2017:19:24:09 +0000] [xtremweb.common.StreamIO_TCPHandler_29] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[13/Sep/2017:19:24:09 +0000] [xtremweb.common.StreamIO_TCPHandler_30] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[13/Sep/2017:19:24:09 +0000] [xtremweb.dispatcher.TCPHandler_TCPHandler_31] ERROR : Can't write result
[13/Sep/2017:19:24:09 +0000] [xtremweb.dispatcher.TCPHandler_TCPHandler_31] WARN : java.io.IOException: java.net.SocketException: Broken pipe (Write failed) (java.net.SocketException: Broken pipe (Write failed))
[13/Sep/2017:19:24:09 +0000] [xtremweb.common.StreamIO_TCPHandler_31] WARN : javax.net.ssl.SSLException: Connection has been shutdown: javax.net.ssl.SSLException: java.net.SocketException: Broken pipe (Write failed) (javax.net.ssl.SSLException: java.net.SocketException: Broken pipe (Write failed))
[13/Sep/2017:19:24:14 +0000] [xtremweb.common.StreamIO_TCPHandler_32] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[13/Sep/2017:19:24:20 +0000] [xtremweb.common.StreamIO_TCPHandler_33] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[13/Sep/2017:19:24:24 +0000] [xtremweb.dispatcher.DBInterface_TCPHandler_34] WARN : javax.mail.internet.AddressException: Missing local name in string ``@DBADMINEMAIL@'' (Missing local name)
[13/Sep/2017:19:24:24 +0000] [xtremweb.common.StreamIO_TCPHandler_34] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[13/Sep/2017:19:24:24 +0000] [xtremweb.dispatcher.TCPHandler_TCPHandler_35] ERROR : Can't write result
[13/Sep/2017:19:24:24 +0000] [xtremweb.dispatcher.TCPHandler_TCPHandler_35] WARN : java.io.IOException: java.net.SocketException: Broken pipe (Write failed) (java.net.SocketException: Broken pipe (Write failed))
[13/Sep/2017:19:24:24 +0000] [xtremweb.common.StreamIO_TCPHandler_35] WARN : javax.net.ssl.SSLException: Connection has been shutdown: javax.net.ssl.SSLException: java.net.SocketException: Broken pipe (Write failed) (javax.net.ssl.SSLException: java.net.SocketException: Broken pipe (Write failed))
[13/Sep/2017:19:24:25 +0000] [xtremweb.common.StreamIO_TCPHandler_36] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[13/Sep/2017:19:24:31 +0000] [xtremweb.common.StreamIO_TCPHandler_37] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[13/Sep/2017:19:24:37 +0000] [xtremweb.common.StreamIO_TCPHandler_38] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[13/Sep/2017:19:24:42 +0000] [xtremweb.common.StreamIO_TCPHandler_39] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[13/Sep/2017:19:24:48 +0000] [xtremweb.common.StreamIO_TCPHandler_40] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[13/Sep/2017:19:24:53 +0000] [xtremweb.common.StreamIO_TCPHandler_41] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[13/Sep/2017:19:24:54 +0000] [xtremweb.common.StreamIO_TCPHandler_42] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[13/Sep/2017:19:24:54 +0000] [xtremweb.common.StreamIO_TCPHandler_43] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[13/Sep/2017:19:24:55 +0000] [xtremweb.common.StreamIO_TCPHandler_44] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[13/Sep/2017:19:24:55 +0000] [xtremweb.dispatcher.DBInterface_TCPHandler_45] WARN : javax.mail.internet.AddressException: Missing local name in string ``@DBADMINEMAIL@'' (Missing local name)
[13/Sep/2017:19:24:55 +0000] [xtremweb.common.StreamIO_TCPHandler_45] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[13/Sep/2017:19:24:55 +0000] [xtremweb.common.StreamIO_TCPHandler_46] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[13/Sep/2017:19:24:59 +0000] [xtremweb.common.StreamIO_TCPHandler_47] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[13/Sep/2017:19:24:59 +0000] [xtremweb.common.StreamIO_TCPHandler_48] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[13/Sep/2017:19:24:59 +0000] [xtremweb.communications.TCPServer_TCPServerNIO_15] WARN : java.net.SocketException: Socket closed (Socket closed)
</msg>
<status status="PASS" endtime="20170913 19:24:59.797" starttime="20170913 19:24:59.795"></status>
</kw>
<status status="PASS" endtime="20170913 19:24:59.798" starttime="20170913 19:24:59.795"></status>
</kw>
<status status="PASS" endtime="20170913 19:24:59.798" starttime="20170913 19:24:59.794"></status>
</kw>
<kw name="Stop XtremWeb Worker" library="XWWorker">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Stop XtremWeb Worker</arg>
</arguments>
<msg timestamp="20170913 19:24:59.798" level="INFO">Stop XtremWeb Worker</msg>
<status status="PASS" endtime="20170913 19:24:59.798" starttime="20170913 19:24:59.798"></status>
</kw>
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${WORKER_PROCESS}</arg>
</arguments>
<msg timestamp="20170913 19:24:59.799" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20170913 19:24:59.800" level="INFO">Process completed.</msg>
<status status="PASS" endtime="20170913 19:24:59.800" starttime="20170913 19:24:59.799"></status>
</kw>
<status status="PASS" endtime="20170913 19:24:59.800" starttime="20170913 19:24:59.798"></status>
</kw>
<status status="PASS" endtime="20170913 19:24:59.801" starttime="20170913 19:24:59.793"></status>
</kw>
<doc>All XtremWeb commands line tests</doc>
<status status="PASS" endtime="20170913 19:24:59.801" starttime="20170913 19:21:12.259"></status>
</suite>
<status status="PASS" endtime="20170913 19:24:59.806" starttime="20170913 18:46:28.315"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="9">Critical Tests</stat>
<stat fail="0" pass="9">All Tests</stat>
</total>
<tag>
<stat fail="0" pass="4">CommandLine Tests</stat>
<stat fail="0" pass="2">HelloWorld Tests</stat>
<stat fail="0" pass="2">Smart contract Tests</stat>
<stat fail="0" pass="1">Web Tests</stat>
</tag>
<suite>
<stat fail="0" id="s1" name="Tests" pass="9">Tests</stat>
<stat fail="0" id="s1-s1" name="helloWorldSuiteOnLocalGeth" pass="1">Tests.helloWorldSuiteOnLocalGeth</stat>
<stat fail="0" id="s1-s2" name="helloWorldSuiteOnTestRpc" pass="1">Tests.helloWorldSuiteOnTestRpc</stat>
<stat fail="0" id="s1-s3" name="interfaceSuite" pass="1">Tests.interfaceSuite</stat>
<stat fail="0" id="s1-s4" name="truffleTestsOnLocalGeth" pass="1">Tests.truffleTestsOnLocalGeth</stat>
<stat fail="0" id="s1-s5" name="truffleTestsOnTestrpc" pass="1">Tests.truffleTestsOnTestrpc</stat>
<stat fail="0" id="s1-s6" name="xwcommandsSuite" pass="4">Tests.xwcommandsSuite</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
