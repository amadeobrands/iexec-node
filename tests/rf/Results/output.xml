<?xml version="1.0" encoding="UTF-8"?>
<robot generated="20170907 23:22:10.872" generator="Robot 3.0.2 (Python 2.7.6 on linux2)">
<suite source="/home/vagrant/iexecdev/iexec-node/tests/rf/Tests" id="s1" name="Tests">
<suite source="/home/vagrant/iexecdev/iexec-node/tests/rf/Tests/helloWorldSuiteOnTestRpc.robot" id="s1-s1" name="helloWorldSuiteOnTestRpc">
<kw type="setup" name="Start Oracle Bridge And Xtremweb">
<kw name="Prepare And Start XWtremWeb Server And XWtremWeb Worker" library="XWCommon">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${XW_FORCE_GIT_CLONE}' == 'true'</arg>
<arg>Git Clone XWtremWeb</arg>
</arguments>
<kw name="Git Clone XWtremWeb" library="XWCommon">
<kw name="Remove Directory" library="OperatingSystem">
<doc>Removes the directory pointed to by the given ``path``.</doc>
<arguments>
<arg>xtremweb-hep</arg>
<arg>recursive=true</arg>
</arguments>
<msg timestamp="20170907 23:22:10.991" html="yes" level="INFO">Directory '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep&lt;/a&gt;' does not exist.</msg>
<status status="PASS" endtime="20170907 23:22:10.991" starttime="20170907 23:22:10.988"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>git clone ${XW_GIT_BRANCH}</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${git_result}</var>
</assign>
<msg timestamp="20170907 23:22:10.992" level="INFO">Starting process:
git clone https://github.com/iExecBlockchainComputing/xtremweb-hep.git</msg>
<msg timestamp="20170907 23:22:10.995" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170907 23:23:27.481" level="INFO">Process completed.</msg>
<msg timestamp="20170907 23:23:27.482" level="INFO">${git_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170907 23:23:27.482" starttime="20170907 23:22:10.991"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${git_result.stderr}</arg>
</arguments>
<msg timestamp="20170907 23:23:27.483" level="INFO">Cloning into 'xtremweb-hep'...
Checking out files:   7% (122/1618)   Checking out files:   8% (130/1618)   Checking out files:   9% (146/1618)   Checking out files:  10% (162/1618)   Checking out files:  11% (178/1618)   Checking out files:  11% (184/1618)   Checking out files:  12% (195/1618)   Checking out files:  13% (211/1618)   Checking out files:  14% (227/1618)   Checking out files:  15% (243/1618)   Checking out files:  15% (249/1618)   Checking out files:  16% (259/1618)   Checking out files:  17% (276/1618)   Checking out files:  18% (292/1618)   Checking out files:  19% (308/1618)   Checking out files:  20% (324/1618)   Checking out files:  20% (338/1618)   Checking out files:  21% (340/1618)   Checking out files:  22% (356/1618)   Checking out files:  22% (367/1618)   Checking out files:  23% (373/1618)   Checking out files:  23% (377/1618)   Checking out files:  23% (382/1618)   Checking out files:  24% (389/1618)   Checking out files:  25% (405/1618)   Checking out files:  25% (409/1618)   Checking out files:  26% (421/1618)   Checking out files:  26% (423/1618)   Checking out files:  27% (437/1618)   Checking out files:  27% (445/1618)   Checking out files:  28% (454/1618)   Checking out files:  29% (470/1618)   Checking out files:  30% (486/1618)   Checking out files:  30% (498/1618)   Checking out files:  31% (502/1618)   Checking out files:  32% (518/1618)   Checking out files:  32% (531/1618)   Checking out files:  33% (534/1618)   Checking out files:  33% (549/1618)   Checking out files:  34% (551/1618)   Checking out files:  34% (566/1618)   Checking out files:  35% (567/1618)   Checking out files:  36% (583/1618)   Checking out files:  37% (599/1618)   Checking out files:  38% (615/1618)   Checking out files:  39% (632/1618)   Checking out files:  39% (644/1618)   Checking out files:  40% (648/1618)   Checking out files:  41% (664/1618)   Checking out files:  42% (680/1618)   Checking out files:  42% (692/1618)   Checking out files:  43% (696/1618)   Checking out files:  44% (712/1618)   Checking out files:  45% (729/1618)   Checking out files:  46% (745/1618)   Checking out files:  47% (761/1618)   Checking out files:  48% (777/1618)   Checking out files:  49% (793/1618)   Checking out files:  50% (809/1618)   Checking out files:  51% (826/1618)   Checking out files:  52% (842/1618)   Checking out files:  53% (858/1618)   Checking out files:  54% (874/1618)   Checking out files:  55% (890/1618)   Checking out files:  56% (907/1618)   Checking out files:  56% (909/1618)   Checking out files:  57% (923/1618)   Checking out files:  58% (939/1618)   Checking out files:  59% (955/1618)   Checking out files:  60% (971/1618)   Checking out files:  61% (987/1618)   Checking out files:  62% (1004/1618)   Checking out files:  63% (1020/1618)   Checking out files:  64% (1036/1618)   Checking out files:  65% (1052/1618)   Checking out files:  66% (1068/1618)   Checking out files:  67% (1085/1618)   Checking out files:  68% (1101/1618)   Checking out files:  69% (1117/1618)   Checking out files:  70% (1133/1618)   Checking out files:  71% (1149/1618)   Checking out files:  72% (1165/1618)   Checking out files:  73% (1182/1618)   Checking out files:  73% (1183/1618)   Checking out files:  74% (1198/1618)   Checking out files:  75% (1214/1618)   Checking out files:  76% (1230/1618)   Checking out files:  77% (1246/1618)   Checking out files:  78% (1263/1618)   Checking out files:  79% (1279/1618)   Checking out files:  80% (1295/1618)   Checking out files:  81% (1311/1618)   Checking out files:  82% (1327/1618)   Checking out files:  83% (1343/1618)   Checking out files:  84% (1360/1618)   Checking out files:  85% (1376/1618)   Checking out files:  86% (1392/1618)   Checking out files:  87% (1408/1618)   Checking out files:  88% (1424/1618)   Checking out files:  89% (1441/1618)   Checking out files:  90% (1457/1618)   Checking out files:  91% (1473/1618)   Checking out files:  92% (1489/1618)   Checking out files:  93% (1505/1618)   Checking out files:  94% (1521/1618)   Checking out files:  94% (1527/1618)   Checking out files:  95% (1538/1618)   Checking out files:  96% (1554/1618)   Checking out files:  97% (1570/1618)   Checking out files:  98% (1586/1618)   Checking out files:  99% (1602/1618)   Checking out files: 100% (1618/1618)   Checking out files: 100% (1618/1618), done.</msg>
<status status="PASS" endtime="20170907 23:23:27.483" starttime="20170907 23:23:27.482"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${git_result.stdout}</arg>
</arguments>
<msg timestamp="20170907 23:23:27.484" level="INFO"></msg>
<status status="PASS" endtime="20170907 23:23:27.484" starttime="20170907 23:23:27.484"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${git_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170907 23:23:27.485" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170907 23:23:27.485" starttime="20170907 23:23:27.484"></status>
</kw>
<status status="PASS" endtime="20170907 23:23:27.485" starttime="20170907 23:22:10.988"></status>
</kw>
<status status="PASS" endtime="20170907 23:23:27.485" starttime="20170907 23:22:10.987"></status>
</kw>
<kw name="Compile XWtremWeb" library="XWCommon">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd ${BUILD_PATH} &amp;&amp; make clean &amp;&amp; make</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${compile_result}</var>
</assign>
<msg timestamp="20170907 23:23:27.486" level="INFO">Starting process:
cd ./xtremweb-hep/build &amp;&amp; make clean &amp;&amp; make</msg>
<msg timestamp="20170907 23:23:27.489" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170907 23:24:01.136" level="INFO">Process completed.</msg>
<msg timestamp="20170907 23:24:01.136" level="INFO">${compile_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170907 23:24:01.136" starttime="20170907 23:23:27.485"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${compile_result.stderr}</arg>
</arguments>
<msg timestamp="20170907 23:24:01.137" level="INFO">     [copy] Warning: Could not find file /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/keystore/xwhepworker.keys to copy.
     [copy] Warning: Could not find file /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/keystore/xwhepclient.keys to copy.
     [copy] Warning: Could not find file /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/keystore/xwhepserver.keys to copy.</msg>
<status status="PASS" endtime="20170907 23:24:01.137" starttime="20170907 23:24:01.137"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${compile_result.stdout}</arg>
</arguments>
<msg timestamp="20170907 23:24:01.138" level="INFO">./build.sh -f build.xml clean 
Buildfile: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/build.xml

tstamp:
[echoproperties] #Ant properties
[echoproperties] #Thu Sep 07 23:23:28 UTC 2017
[echoproperties] v.branch=head
[echoproperties] v.build=201709072323
[echoproperties] v.major=10
[echoproperties] v.micro=0
[echoproperties] v.minor=6

version:

clean:
   [delete] Deleting: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/.build
     [exec] mkdir: cannot create directory ‘../../build/classes/obj/’: No such file or directory
     [exec] make[1]: Entering directory `/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/natif'
     [exec] rm -f XWInterruptsImpl.h PortMapper.h XWUtilImpl.h XWTracerImpl.h
     [exec] make[1]: Leaving directory `/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/natif'

BUILD SUCCESSFUL
Total time: 1 second
./build.sh distrib 
Buildfile: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/build.xml

tstamp:
[echoproperties] #Ant properties
[echoproperties] #Thu Sep 07 23:23:29 UTC 2017
[echoproperties] v.branch=head
[echoproperties] v.build=201709072323
[echoproperties] v.major=10
[echoproperties] v.micro=0
[echoproperties] v.minor=6

version:

configure:
     [echo] 
     [echo]       ant version = Apache Ant(TM) version 1.8.4 compiled on May 22 2012
     [echo] 
     [echo]       os         = Linux
     [echo]       os.arch    = amd64
     [echo]       target     = Linux
     [echo]       xwarch     = amd64
     [echo]       xwsuffix   = linux-amd64
     [echo]       debug      = true
     [echo]       debuglevel = source,lines
     [echo] 
     [echo]         cross=${cross.prefix}
     [echo]         target java home =${cross.java.home}
     [echo]     	target           =Linux
     [echo]     	xwversion=10.6.0

templates:
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common

prepare:
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes/obj
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes/obj/linux-amd64
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes/jni
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes/xwclasses
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/lib
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/doc
     [echo] 
     [echo]       classpath=/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/test:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/JOpenId-1.08.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/JSON-java.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/MinML.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/activation.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/antlr.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/attic-all-0.3.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/bcpkix-jdk15on-151.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/bcprov-jdk15on-151.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/bcprov-jdk16-140.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/commons-codec-1.3.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/commons-fileupload-1.2.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/commons-httpclient-3.0.1.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/commons-io-1.3.2.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/commons-logging-1.1.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/ibis-util-2.1.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/jcert.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/jetty-http-9.3.8.v20160314.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/jetty-io-9.3.8.v20160314.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/jetty-server-9.3.8.v20160314.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/jetty-util-9.3.8.v20160314.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/jose4j-0.5.5.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/junit-4.10.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/log4j-1.2.17.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/mail.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/mysql-connector-java-5.1.6-bin.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/scribejava-apis-3.3.1-SNAPSHOT.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/scribejava-core-3.3.1-SNAPSHOT.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/servlet-api-3.1.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/slf4j-api-1.7.2.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/slf4j-log4j12-1.7.2.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/smartsockets-1.4.jar
     [echo]     

common:
    [javac] Compiling 277 source files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/XWTools.java:61: warning: [deprecation] HTTPOpenIdHandler in xtremweb.dispatcher has been deprecated
    [javac] import xtremweb.dispatcher.HTTPOpenIdHandler;
    [javac]                           ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/security/ACLConnect.java:36: warning: AclEntryImpl is internal proprietary API and may be removed in a future release
    [javac] import sun.security.acl.AclEntryImpl;
    [javac]                        ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/security/ACLConnect.java:37: warning: AclImpl is internal proprietary API and may be removed in a future release
    [javac] import sun.security.acl.AclImpl;
    [javac]                        ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/security/ACLConnect.java:38: warning: PermissionImpl is internal proprietary API and may be removed in a future release
    [javac] import sun.security.acl.PermissionImpl;
    [javac]                        ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/security/ACLConnect.java:39: warning: PrincipalImpl is internal proprietary API and may be removed in a future release
    [javac] import sun.security.acl.PrincipalImpl;
    [javac]                        ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/communications/CommClient.java:870: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] 		return version(new XMLRPCCommandVersion(newURI()));
    [javac] 		                   ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/communications/CommClient.java:881: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] 	public Version version(final XMLRPCCommandVersion command)
    [javac] 	                             ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/DataInterface.java:625: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/communications/IdRpc.java:89: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] 		public XMLRPCCommandVersion newCommand(final URI uri, final UserInterface client, final Table obj)
    [javac] 		       ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/communications/IdRpc.java:91: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] 			return new XMLRPCCommandVersion(uri, client);
    [javac] 			           ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/communications/XMLRPCCommand.java:614: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] 			return new XMLRPCCommandVersion(input);
    [javac] 			           ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/AppInterface.java:1446: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/UserInterface.java:577: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/GroupInterface.java:319: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/HostInterface.java:1212: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/SessionInterface.java:264: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/TaskInterface.java:441: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/TraceInterface.java:348: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/UserGroupInterface.java:365: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/WorkInterface.java:933: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/AppType.java:263: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/CPUType.java:223: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/DataType.java:265: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/Executable.java:294: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/JobInterface.java:409: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/OSType.java:243: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/Status.java:245: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/UserRightsType.java:243: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/XWTools.java:805: warning: [deprecation] HTTPOpenIdHandler in xtremweb.dispatcher has been deprecated
    [javac] 		final Logger logger = new Logger(HTTPOpenIdHandler.class);
    [javac] 		                                 ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/XWTools.java:817: warning: BASE64Encoder is internal proprietary API and may be removed in a future release
    [javac] 			out.println(new sun.misc.BASE64Encoder().encode(cert.getEncoded()));
    [javac] 			                        ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/communications/HTTPClient.java:238: warning: [deprecation] Protocol(String,SecureProtocolSocketFactory,int) in Protocol has been deprecated
    [javac] 				xwssl = new Protocol(uri.getScheme(), new AuthSSLProtocolSocketFactory(uri.getScheme(), keyStore,
    [javac] 				        ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/dispatcher/Dispatcher.java:216: warning: [deprecation] HTTPOpenIdHandler in xtremweb.dispatcher has been deprecated
    [javac] 				HTTPOpenIdHandler.setCACertificateEntries(getConfig().getKeyStore());
    [javac] 				^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/security/ACLConnect.java:65: warning: PermissionImpl is internal proprietary API and may be removed in a future release
    [javac] 	private final Permission _connect = new PermissionImpl("CONNECT");
    [javac] 	                                        ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/security/ACLConnect.java:66: warning: PrincipalImpl is internal proprietary API and may be removed in a future release
    [javac] 	private final Principal _owner = new PrincipalImpl("localhost");
    [javac] 	                                     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/security/ACLConnect.java:67: warning: AclImpl is internal proprietary API and may be removed in a future release
    [javac] 	private Acl _acl = new AclImpl(_owner, "ConnectACL");
    [javac] 	                       ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/security/ACLConnect.java:80: warning: AclImpl is internal proprietary API and may be removed in a future release
    [javac] 		_acl = new AclImpl(_owner, "ConnectACL");
    [javac] 		           ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/security/ACLConnect.java:81: warning: AclEntryImpl is internal proprietary API and may be removed in a future release
    [javac] 		final AclEntry allowConnections = new AclEntryImpl(_owner);
    [javac] 		                                      ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/security/ACLConnect.java:104: warning: PrincipalImpl is internal proprietary API and may be removed in a future release
    [javac] 			final Principal prince = new PrincipalImpl(regexp);
    [javac] 			                             ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/security/ACLConnect.java:105: warning: AclEntryImpl is internal proprietary API and may be removed in a future release
    [javac] 			final AclEntry entry = new AclEntryImpl(prince);
    [javac] 			                           ^
    [javac] Note: Some input files use unchecked or unsafe operations.
    [javac] Note: Recompile with -Xlint:unchecked for details.
    [javac] 39 warnings
    [javac] Creating empty /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes/database/package-info.class

obj:

iface:

communications:
    [javac] Compiling 60 source files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/communications/IdRpc.java:89: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] 		public XMLRPCCommandVersion newCommand(final URI uri, final UserInterface client, final Table obj)
    [javac] 		       ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/communications/IdRpc.java:91: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] 			return new XMLRPCCommandVersion(uri, client);
    [javac] 			           ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/communications/XMLRPCCommand.java:614: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] 			return new XMLRPCCommandVersion(input);
    [javac] 			           ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/communications/CommClient.java:870: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] 		return version(new XMLRPCCommandVersion(newURI()));
    [javac] 		                   ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/communications/CommClient.java:881: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] 	public Version version(final XMLRPCCommandVersion command)
    [javac] 	                             ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/communications/HTTPClient.java:238: warning: [deprecation] Protocol(String,SecureProtocolSocketFactory,int) in Protocol has been deprecated
    [javac] 				xwssl = new Protocol(uri.getScheme(), new AuthSSLProtocolSocketFactory(uri.getScheme(), keyStore,
    [javac] 				        ^
    [javac] Note: Some input files use unchecked or unsafe operations.
    [javac] Note: Recompile with -Xlint:unchecked for details.
    [javac] 6 warnings

services:
    [javac] Compiling 7 source files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes

archdep:
    [javac] Compiling 20 source files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes

upgrade:

worker:
    [javac] Compiling 42 source files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes
    [javac] Note: Some input files use unchecked or unsafe operations.
    [javac] Note: Recompile with -Xlint:unchecked for details.

dispatcher:
    [javac] Compiling 14 source files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/dispatcher/Dispatcher.java:216: warning: [deprecation] HTTPOpenIdHandler in xtremweb.dispatcher has been deprecated
    [javac] 				HTTPOpenIdHandler.setCACertificateEntries(getConfig().getKeyStore());
    [javac] 				^
    [javac] Note: Some input files use unchecked or unsafe operations.
    [javac] Note: Recompile with -Xlint:unchecked for details.
    [javac] 1 warning

worker.manifest:

jni:
     [copy] Copying 10 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/natif
     [exec] make[1]: Entering directory `/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/natif'
     [exec] gcc -c  -fPIC -g -Wall -I'/usr/lib/jvm/java-8-openjdk-amd64/include/linux' -fPIC -I'/usr/lib/jvm/java-8-openjdk-amd64/include' -o ../../build/classes/obj/linux-amd64/XWUtilUnix.o XWUtilUnix.c
     [exec] gcc -shared  -fPIC  -L'/usr/lib/jvm/java-8-openjdk-amd64/lib' -o ../../build/classes/obj/linux-amd64/XWUtil.jni ../../build/classes/obj/linux-amd64/XWUtilUnix.o 
     [exec] cp ../../build/classes/obj/linux-amd64/XWUtil.jni ../../build/classes/jni/XWUtil.jni.10.6.0.linux-amd64
     [exec] gcc -c  -fPIC -g -Wall -I'/usr/lib/jvm/java-8-openjdk-amd64/include/linux' -fPIC -I'/usr/lib/jvm/java-8-openjdk-amd64/include' -o ../../build/classes/obj/linux-amd64/XWTracerUnixlib.o XWTracerUnixlib.c
     [exec] mkdir: cannot create directory ‘../../build/classes/obj/linux-amd64’: File exists
     [exec] XWTracerUnixlib.c: In function ‘processCpustate’:
     [exec] XWTracerUnixlib.c:194:19: warning: variable ‘relative_jiffies’ set but not used [-Wunused-but-set-variable]
     [exec]      idle_jiffies, relative_jiffies, absolute_jiffies;
     [exec]                    ^
     [exec] XWTracerUnixlib.c:191:49: warning: variable ‘cpu_idle’ set but not used [-Wunused-but-set-variable]
     [exec]    static double cpu_user, cpu_nice, cpu_system, cpu_idle;
     [exec]                                                  ^
     [exec] XWTracerUnixlib.c:191:37: warning: variable ‘cpu_system’ set but not used [-Wunused-but-set-variable]
     [exec]    static double cpu_user, cpu_nice, cpu_system, cpu_idle;
     [exec]                                      ^
     [exec] XWTracerUnixlib.c:191:27: warning: variable ‘cpu_nice’ set but not used [-Wunused-but-set-variable]
     [exec]    static double cpu_user, cpu_nice, cpu_system, cpu_idle;
     [exec]                            ^
     [exec] XWTracerUnixlib.c:191:17: warning: variable ‘cpu_user’ set but not used [-Wunused-but-set-variable]
     [exec]    static double cpu_user, cpu_nice, cpu_system, cpu_idle;
     [exec]                  ^
     [exec] XWTracerUnixlib.c: In function ‘writeState’:
     [exec] XWTracerUnixlib.c:589:7: warning: variable ‘test’ set but not used [-Wunused-but-set-variable]
     [exec]    int test;
     [exec]        ^
     [exec] XWTracerUnixlib.c:587:8: warning: variable ‘k’ set but not used [-Wunused-but-set-variable]
     [exec]    char k[1];
     [exec]         ^
     [exec] XWTracerUnixlib.c:584:9: warning: variable ‘c’ set but not used [-Wunused-but-set-variable]
     [exec]    char* c;
     [exec]          ^
     [exec] gcc -c  -fPIC -g -Wall -I'/usr/lib/jvm/java-8-openjdk-amd64/include/linux' -fPIC -I'/usr/lib/jvm/java-8-openjdk-amd64/include' -o ../../build/classes/obj/linux-amd64/XWTracerUnixImpl.o XWTracerUnixImpl.c
     [exec] gcc -shared  -fPIC  -L'/usr/lib/jvm/java-8-openjdk-amd64/lib' -o ../../build/classes/obj/linux-amd64/XwTracer.jni ../../build/classes/obj/linux-amd64/XWTracerUnixlib.o ../../build/classes/obj/linux-amd64/XWTracerUnixImpl.o 
     [exec] cp ../../build/classes/obj/linux-amd64/XwTracer.jni ../../build/classes/jni/XwTracer.jni.10.6.0.linux-amd64
     [exec] gcc -c  -fPIC -g -Wall -I'/usr/lib/jvm/java-8-openjdk-amd64/include/linux' -fPIC -I'/usr/lib/jvm/java-8-openjdk-amd64/include' -o ../../build/classes/obj/linux-amd64/PortMapper.o PortMapper.c
     [exec] gcc -shared  -fPIC  -L'/usr/lib/jvm/java-8-openjdk-amd64/lib' -o ../../build/classes/obj/linux-amd64/PortMapper.jni ../../build/classes/obj/linux-amd64/PortMapper.o 
     [exec] cp ../../build/classes/obj/linux-amd64/PortMapper.jni ../../build/classes/jni/PortMapper.jni.10.6.0.linux-amd64
     [exec] make[1]: Leaving directory `/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/natif'
     [exec] PortMapper.c: In function ‘getport’:
     [exec] PortMapper.c:29:2: warning: implicit declaration of function ‘pmap_getport’ [-Wimplicit-function-declaration]
     [exec]   return pmap_getport (&amp;addr, prog, version, protocol);
     [exec]   ^

Worker:
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes/data
     [copy] Copying 23 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes/data

tests:
    [javac] Compiling 50 source files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/test/xtremweb/communications/XMLRPCCommandVersionTest.java:29: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] import xtremweb.communications.XMLRPCCommandVersion;
    [javac]                               ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/test/xtremweb/communications/XMLRPCCommandVersionTest.java:47: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] 			setCmd(new XMLRPCCommandVersion());
    [javac] 			           ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/test/xtremweb/communications/XMLRPCCommandVersionTest.java:48: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] 			setCmd2(new XMLRPCCommandVersion());
    [javac] 			            ^
    [javac] Note: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/test/xtremweb/common/XMLHashtableTest.java uses unchecked or unsafe operations.
    [javac] Note: Recompile with -Xlint:unchecked for details.
    [javac] 3 warnings

client:

allservices:

Dispatcher:
     [echo]  
     [echo] 	JAR JAR JAR
     [echo] 	basedir="/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes"
     [echo] 	jarfile="/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/lib/xtremweb.jar"
     [echo] 	manifest="/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/misc/worker.manifest"
     [echo]       
      [jar] Building jar: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/lib/xtremweb.jar

rpcv:

all:

copylibs:
     [copy] Copying 31 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/lib

distrib:

BUILD SUCCESSFUL
Total time: 22 seconds
./build.sh -f install.xml install 
Buildfile: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/install.xml

tstamp:

version:

prepare:

configure:
     [echo] 
     [echo] user  login : ${xtremweb.admin.login} ${xtremweb.admin.password}
     [echo] admin login : ${xtremweb.admin.login} ${xtremweb.admin.password}
     [echo] DB su login :  
     [echo] ENGINE : ""
     [echo] launcher.url = http://nohost/
     [echo] system.user  = xwhep
     [echo] xwsuffix=LINUX-AMD64
     [echo] xwarch=AMD64
     [echo] target.os=Linux
     [echo] cross.prefix=${cross.prefix}
     [echo] cross.java.home=${cross.java.home}
     [echo] version=10.6.0

installConfig:
     [echo] 
     [echo]        ==&gt; version    = 10.6.0
     [echo]        ==&gt; dist.dir   = /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0
     [echo]        ==&gt; installDir = /opt/xwhep-10.6.0
     [echo]     

installFiles:
     [copy] Copying 98 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/doc
     [copy] Copying 17 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/docker
     [copy] Copying 31 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/lib
     [copy] Copying 31 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.server/installer/PckRoot/private/etc/xwhep.server/lib
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf
     [echo] 
     [echo]       xtremweb.admin.login=${xtremweb.admin.login}
     [echo]       xtremweb.admin.password=${xtremweb.admin.password}
     [echo]     
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf
     [echo] 
     [echo]       xtremweb.worker.login=${xtremweb.worker.login}
     [echo]       xtremweb.worker.password=${xtremweb.worker.password}
     [echo]     
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/keystore
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.worker/installer/PckRoot/private/etc/xwhep.worker/conf
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.worker/installer/PckRoot/Applications/xwhep.worker
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.worker/installer/PckRoot/private/etc/xwhep.worker/conf
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.vworker/installer/PckRoot/Applications/xwhep.vworker
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.vworker/installer/PckRoot/private/etc/xwhep.vworker/bin
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.client/installer/PckRoot/Applications/xwhep.client/conf
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.server/installer/PckRoot/private/etc/xwhep.server/conf
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.server/installer/PckRoot/Applications/xwhep.server/doc
     [copy] Copying 98 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.server/installer/PckRoot/Applications/xwhep.server/doc
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.client/conf
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.client/innoSetup/client/bin
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.client/innoSetup/client/conf
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.client/innoSetup/client/doc
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.client/innoSetup/client/keystore
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.client/innoSetup/client/lib
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.client/innoSetup/client/conf
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/conf
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/innoSetup/worker/bin
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/innoSetup/worker/conf
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/innoSetup/worker/doc
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/innoSetup/worker/keystore
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/innoSetup/worker/lib
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/innoSetup/worker/misc
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/innoSetup/worker/conf
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/conf
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/innoSetup/worker/conf
     [copy] Copying 2 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/lib
     [copy] Copying 2 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/innoSetup/worker/lib
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/innoSetup/worker/lib
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/innoSetup/worker/lib
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/innoSetup/worker/misc
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/innoSetup/worker/doc
     [copy] Copying 8 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/bin
     [copy] Copying 5 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/innoSetup/worker/bin
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/doc
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.server/conf
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.server/innoSetup/server/bin
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.server/innoSetup/server/conf
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.server/innoSetup/server/doc
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.server/innoSetup/server/keystore
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.server/innoSetup/server/lib
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.server/innoSetup/server/misc
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.server/innoSetup/server/conf
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.server/conf
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.server/innoSetup/server/conf
     [copy] Copying 2 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.server/lib
     [copy] Copying 2 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.server/innoSetup/server/lib
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.server/innoSetup/server/misc
     [copy] Copying 2 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.server/innoSetup/server/bin

setupScripts:
     [copy] Copying 266 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/db-maintenance

installScripts:

createDownload:
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.client/installer/PckRoot/Applications/xwhep.client/lib
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.client/installer/PckRoot/Applications/xwhep.client/lib
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/db-maintenance
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/db-maintenance
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin
     [copy] Copying 98 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/doc/xwhep.client/doc
[jarbundler] Creating application bundle: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/xwhep.client.app
     [copy] Copying 5 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/xwhep.client.app
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.bridgedgsg
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.client
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.server
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.server.conf
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.worker
     [copy] Copying 20 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.worker
     [copy] Copying 17 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.vworker
     [copy] Copying 12 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.client
     [copy] Copying 19 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.server
     [copy] Copying 3 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/innoSetup
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker
     [copy] Copying 3 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.server/innoSetup
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.server
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.server.conf
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.server/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.server/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.server/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.server/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.server/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.server/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.server/DEBIAN
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.server.conf/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.server.conf/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.server.conf/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.server.conf/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.server.conf/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.server.conf/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.server.conf/DEBIAN
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.bridgedgsg/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.bridgedgsg
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.bridgedgsg/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.bridgedgsg/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.bridgedgsg/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.bridgedgsg/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.bridgedgsg/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.bridgedgsg/DEBIAN
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.client/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.client
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.client/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.client/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.client/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.client/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.client/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.client/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.worker
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.worker/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.worker/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.worker/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.worker/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.worker/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.worker/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.worker/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.client/innoSetup/client/lib
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.client/innoSetup/client/lib
     [copy] Copying 11 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0
     [copy] Copying 6 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/apptest

ganglia:

install:
     [echo] 
     [echo]       Installation done
     [echo]     

BUILD SUCCESSFUL
Total time: 9 seconds</msg>
<status status="PASS" endtime="20170907 23:24:01.138" starttime="20170907 23:24:01.137"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${compile_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170907 23:24:01.139" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170907 23:24:01.139" starttime="20170907 23:24:01.138"></status>
</kw>
<kw name="Get Lines Containing String" library="String">
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<arguments>
<arg>${compile_result.stdout}</arg>
<arg>BUILD SUCCESSFUL</arg>
</arguments>
<assign>
<var>${extract_build_successful}</var>
</assign>
<msg timestamp="20170907 23:24:01.140" level="INFO">3 out of 516 lines matched</msg>
<msg timestamp="20170907 23:24:01.140" level="INFO">${extract_build_successful} = BUILD SUCCESSFUL
BUILD SUCCESSFUL
BUILD SUCCESSFUL</msg>
<status status="PASS" endtime="20170907 23:24:01.140" starttime="20170907 23:24:01.140"></status>
</kw>
<kw name="Get Line Count" library="String">
<doc>Returns and logs the number of lines in the given string.</doc>
<arguments>
<arg>${extract_build_successful}</arg>
</arguments>
<assign>
<var>${line_count_build_successful}</var>
</assign>
<msg timestamp="20170907 23:24:01.141" level="INFO">3 lines</msg>
<msg timestamp="20170907 23:24:01.141" level="INFO">${line_count_build_successful} = 3</msg>
<status status="PASS" endtime="20170907 23:24:01.141" starttime="20170907 23:24:01.140"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${line_count_build_successful}</arg>
<arg>3</arg>
</arguments>
<msg timestamp="20170907 23:24:01.141" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170907 23:24:01.141" starttime="20170907 23:24:01.141"></status>
</kw>
<status status="PASS" endtime="20170907 23:24:01.142" starttime="20170907 23:23:27.485"></status>
</kw>
<kw name="Install XWtremWeb" library="XWCommon">
<kw name="List Directories In Directory" library="OperatingSystem">
<doc>Wrapper for `List Directory` that returns only directories.</doc>
<arguments>
<arg>${DIST_PATH}</arg>
<arg>xwhep-*</arg>
<arg>absolute</arg>
</arguments>
<assign>
<var>@{list_directories_dist_path}</var>
</assign>
<msg timestamp="20170907 23:24:01.143" html="yes" level="INFO">Listing contents of directory '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist&lt;/a&gt;'.</msg>
<msg timestamp="20170907 23:24:01.147" level="INFO">1 directory:
/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0</msg>
<msg timestamp="20170907 23:24:01.147" level="INFO">@{list_directories_dist_path} = [ /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0 ]</msg>
<status status="PASS" endtime="20170907 23:24:01.147" starttime="20170907 23:24:01.142"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>@{list_directories_dist_path}[0]</arg>
</arguments>
<msg timestamp="20170907 23:24:01.148" level="INFO">/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0</msg>
<status status="PASS" endtime="20170907 23:24:01.148" starttime="20170907 23:24:01.148"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}</arg>
<arg>@{list_directories_dist_path}[0]</arg>
</arguments>
<msg timestamp="20170907 23:24:01.149" level="INFO">${DIST_XWHEP_PATH} = /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0</msg>
<status status="PASS" endtime="20170907 23:24:01.149" starttime="20170907 23:24:01.148"></status>
</kw>
<kw name="Directory Should Exist" library="OperatingSystem">
<doc>Fails unless the given path points to an existing directory.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}</arg>
</arguments>
<msg timestamp="20170907 23:24:01.150" html="yes" level="INFO">Directory '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0&lt;/a&gt;' exists.</msg>
<status status="PASS" endtime="20170907 23:24:01.150" starttime="20170907 23:24:01.150"></status>
</kw>
<kw name="Create XWCONFIGURE.VALUES FILE" library="XWCommon">
<arguments>
<arg>${DIST_XWHEP_PATH}</arg>
</arguments>
<kw name="Directory Should Exist" library="OperatingSystem">
<doc>Fails unless the given path points to an existing directory.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf</arg>
</arguments>
<msg timestamp="20170907 23:24:01.151" html="yes" level="INFO">Directory '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf&lt;/a&gt;' exists.</msg>
<status status="PASS" endtime="20170907 23:24:01.151" starttime="20170907 23:24:01.151"></status>
</kw>
<kw name="Remove File" library="OperatingSystem">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
</arguments>
<msg timestamp="20170907 23:24:01.152" html="yes" level="INFO">File '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;' does not exist.</msg>
<status status="PASS" endtime="20170907 23:24:01.152" starttime="20170907 23:24:01.151"></status>
</kw>
<kw name="Create File" library="OperatingSystem">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
</arguments>
<msg timestamp="20170907 23:24:01.153" html="yes" level="INFO">Created file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170907 23:24:01.153" starttime="20170907 23:24:01.152"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>XWUSER='${XWCONFIGURE.VALUES.XWUSER}'\n</arg>
</arguments>
<msg timestamp="20170907 23:24:01.159" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170907 23:24:01.159" starttime="20170907 23:24:01.154"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>DBVENDOR='${XWCONFIGURE.VALUES.DBVENDOR}'\n</arg>
</arguments>
<msg timestamp="20170907 23:24:01.161" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170907 23:24:01.161" starttime="20170907 23:24:01.159"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>DBENGINE='${XWCONFIGURE.VALUES.DBENGINE}'\n</arg>
</arguments>
<msg timestamp="20170907 23:24:01.163" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170907 23:24:01.163" starttime="20170907 23:24:01.162"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>DBHOST='${XWCONFIGURE.VALUES.DBHOST}'\n</arg>
</arguments>
<msg timestamp="20170907 23:24:01.165" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170907 23:24:01.165" starttime="20170907 23:24:01.164"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>DBADMINLOGIN='${XWCONFIGURE.VALUES.DBADMINLOGIN}'\n</arg>
</arguments>
<msg timestamp="20170907 23:24:01.167" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170907 23:24:01.167" starttime="20170907 23:24:01.166"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>DBADMINPASSWORD='${XWCONFIGURE.VALUES.DBADMINPASSWORD}'\n</arg>
</arguments>
<msg timestamp="20170907 23:24:01.169" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170907 23:24:01.169" starttime="20170907 23:24:01.167"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>DBNAME='${XWCONFIGURE.VALUES.DBNAME}'\n</arg>
</arguments>
<msg timestamp="20170907 23:24:01.170" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170907 23:24:01.171" starttime="20170907 23:24:01.169"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>DBUSERLOGIN='${XWCONFIGURE.VALUES.DBUSERLOGIN}'\n</arg>
</arguments>
<msg timestamp="20170907 23:24:01.172" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170907 23:24:01.172" starttime="20170907 23:24:01.171"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>DBUSERPASSWORD='${XWCONFIGURE.VALUES.DBUSERPASSWORD}'\n</arg>
</arguments>
<msg timestamp="20170907 23:24:01.174" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170907 23:24:01.174" starttime="20170907 23:24:01.172"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>XWADMINLOGIN='${XWCONFIGURE.VALUES.XWADMINLOGIN}'\n</arg>
</arguments>
<msg timestamp="20170907 23:24:01.175" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170907 23:24:01.175" starttime="20170907 23:24:01.174"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>XWADMINPASSWORD='${XWCONFIGURE.VALUES.XWADMINPASSWORD}'\n</arg>
</arguments>
<msg timestamp="20170907 23:24:01.177" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170907 23:24:01.177" starttime="20170907 23:24:01.175"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>XWWORKERLOGIN='${XWCONFIGURE.VALUES.XWWORKERLOGIN}'\n</arg>
</arguments>
<msg timestamp="20170907 23:24:01.181" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170907 23:24:01.181" starttime="20170907 23:24:01.177"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>XWWORKERPASSWORD='${XWCONFIGURE.VALUES.XWWORKERPASSWORD}'\n</arg>
</arguments>
<msg timestamp="20170907 23:24:01.182" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170907 23:24:01.182" starttime="20170907 23:24:01.181"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>XWSERVER='${XWCONFIGURE.VALUES.XWSERVER}'\n</arg>
</arguments>
<msg timestamp="20170907 23:24:01.184" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170907 23:24:01.184" starttime="20170907 23:24:01.183"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>CERTCN='${XWCONFIGURE.VALUES.CERTCN}'\n</arg>
</arguments>
<msg timestamp="20170907 23:24:01.186" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170907 23:24:01.186" starttime="20170907 23:24:01.184"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>CERTOU='${XWCONFIGURE.VALUES.CERTOU}'\n</arg>
</arguments>
<msg timestamp="20170907 23:24:01.188" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170907 23:24:01.188" starttime="20170907 23:24:01.186"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>CERTO='${XWCONFIGURE.VALUES.CERTO}'\n</arg>
</arguments>
<msg timestamp="20170907 23:24:01.189" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170907 23:24:01.190" starttime="20170907 23:24:01.188"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>CERTL='${XWCONFIGURE.VALUES.CERTL}'\n</arg>
</arguments>
<msg timestamp="20170907 23:24:01.191" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170907 23:24:01.191" starttime="20170907 23:24:01.190"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>CERTC='${XWCONFIGURE.VALUES.CERTC}'\n</arg>
</arguments>
<msg timestamp="20170907 23:24:01.193" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170907 23:24:01.193" starttime="20170907 23:24:01.192"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>CERTC='${XWCONFIGURE.VALUES.CERTC}'\n</arg>
</arguments>
<msg timestamp="20170907 23:24:01.195" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170907 23:24:01.195" starttime="20170907 23:24:01.193"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>SSLKEYPASSPHRASE='${XWCONFIGURE.VALUES.SSLKEYPASSPHRASE}'\n</arg>
</arguments>
<msg timestamp="20170907 23:24:01.196" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170907 23:24:01.196" starttime="20170907 23:24:01.195"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>SSLKEYSERVERPASSWORD='${XWCONFIGURE.VALUES.SSLKEYSERVERPASSWORD}'\n</arg>
</arguments>
<msg timestamp="20170907 23:24:01.198" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170907 23:24:01.198" starttime="20170907 23:24:01.196"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>SSLKEYWORKERPASSWORD='${XWCONFIGURE.VALUES.SSLKEYWORKERPASSWORD}'\n</arg>
</arguments>
<msg timestamp="20170907 23:24:01.199" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170907 23:24:01.199" starttime="20170907 23:24:01.198"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>SSLKEYCLIENTPASSWORD='${XWCONFIGURE.VALUES.SSLKEYCLIENTPASSWORD}'\n</arg>
</arguments>
<msg timestamp="20170907 23:24:01.201" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170907 23:24:01.201" starttime="20170907 23:24:01.199"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>X509CERTDIR='${XWCONFIGURE.VALUES.X509CERTDIR}'\n</arg>
</arguments>
<msg timestamp="20170907 23:24:01.202" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170907 23:24:01.202" starttime="20170907 23:24:01.201"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>USERCERTDIR='${XWCONFIGURE.VALUES.USERCERTDIR}'\n</arg>
</arguments>
<msg timestamp="20170907 23:24:01.204" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170907 23:24:01.204" starttime="20170907 23:24:01.203"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>XWUPGRADEURL='${XWCONFIGURE.VALUES.XWUPGRADEURL}'\n</arg>
</arguments>
<msg timestamp="20170907 23:24:01.205" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170907 23:24:01.205" starttime="20170907 23:24:01.204"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>HTTPSPORT='${XWCONFIGURE.VALUES.HTTPSPORT}'\n</arg>
</arguments>
<msg timestamp="20170907 23:24:01.207" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170907 23:24:01.207" starttime="20170907 23:24:01.205"></status>
</kw>
<kw name="Log File" library="OperatingSystem">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
</arguments>
<msg timestamp="20170907 23:24:01.207" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<msg timestamp="20170907 23:24:01.208" level="INFO">XWUSER='root'
DBVENDOR='mysql'
DBENGINE='InnoDB'
DBHOST='localhost'
DBADMINLOGIN='root'
DBADMINPASSWORD='root'
DBNAME='xtremweb'
DBUSERLOGIN='xwuser'
DBUSERPASSWORD='xwuser'
XWADMINLOGIN='admin'
XWADMINPASSWORD='admin'
XWWORKERLOGIN='worker'
XWWORKERPASSWORD='worker'
XWSERVER='localhost'
CERTCN='localhost'
CERTOU='MrRobotFramework'
CERTO='MrRobotFramework'
CERTL='MrRobotFramework'
CERTC='fr'
CERTC='fr'
SSLKEYPASSPHRASE='MrRobotFramework'
SSLKEYSERVERPASSWORD='MrRobotFramework'
SSLKEYWORKERPASSWORD='MrRobotFramework'
SSLKEYCLIENTPASSWORD='MrRobotFramework'
X509CERTDIR='/tmp/castore'
USERCERTDIR=''
XWUPGRADEURL='http://localhost:8080/somewhere/xtremweb.jar'
HTTPSPORT='9443'
</msg>
<status status="PASS" endtime="20170907 23:24:01.208" starttime="20170907 23:24:01.207"></status>
</kw>
<status status="PASS" endtime="20170907 23:24:01.208" starttime="20170907 23:24:01.150"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd ${DIST_XWHEP_PATH} &amp;&amp; ./bin/xwconfigure --yes --nopkg --rmdb</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${install_result}</var>
</assign>
<msg timestamp="20170907 23:24:01.209" level="INFO">Starting process:
cd /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0 &amp;&amp; ./bin/xwconfigure --yes --nopkg --rmdb</msg>
<msg timestamp="20170907 23:24:01.212" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170907 23:24:45.187" level="INFO">Process completed.</msg>
<msg timestamp="20170907 23:24:45.187" level="INFO">${install_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170907 23:24:45.187" starttime="20170907 23:24:01.208"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${install_result.stdout}</arg>
</arguments>
<msg timestamp="20170907 23:24:45.188" level="INFO">
--------------------------------------------------
         XtremWeb-HEP 10.6.0 
         XWConfigurator

This script helps to configure an XtremWeb-HEP deployment 
--------------------------------------------------

This script aims to :
 - install a new database: Since 9.1. MySQL (http://www.mysql.com/) only is supported
 - creates electronic keys : 
   * server private key
   * client key store including server public key
   * worker key store including server public key
 - prepare installers
   * Win32 InnoSetup project (http://www.jrsoftware.org/isinfo.php)
   * Mac OS X Package Maker projects (http:/www.apple.com)
   * Linux RPM (http://www.rpm.org)
   * Linux Debian package (http://www.debian.org)

In order to complete configuration, several informations are needed :
 -1- MySQL administrator account (login and password)
     =&gt; If you don't know it, please ask your system administrator
 -1.1- Database server, if using MySQL
     =&gt; The name or IP address of your MySQL server
 -1.2- Database name
     =&gt; If you don't have a valid MySQL administrator account, you won't be able to perform this
     =&gt; In such a case, please ask your system administrator to create one new empty database for us
 -1.3- Database user (login and password), if using MySQL
     =&gt; This account must have insert/update/delete privileges to the previous database
     =&gt; This account will be used by the XW server to access database
     =&gt; If you don't have a valid MySQL administrator account, you won't be able to perform this
     =&gt; In such a case, please ask your system administrator to create one for you
 -2- Electronic key passphrase
     =&gt; This is free and up to you
 -3- Electronic key password for the server
     =&gt; This is free and up to you
 -4- Electronic key password for the worker
     =&gt; This is free and up to you
 -5- Electronic key password for the client
     =&gt; This is free and up to you

All informations are stored in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values
So that, you can stop this script when you want, and don't have to re-enter all informations

To reset any variable, edit or erase /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values

You should be aware that /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values stores some critical informations!!!

-----------------------------

DB vendor set to 'mysql'
DB engine set to 'InnoDB'
***************************************
 No electronic key found               
 Will generate self signed certificate 
***************************************
Upgrade URL is localhost : I guess this is for testing only...
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Can't download xtremweb.jar from 'http://localhost:8080/somewhere/xtremweb.jar'
You will have to ensure that xtremweb.jar can be downloaded from 'http://localhost:8080/somewhere/xtremweb.jar'
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

You entered :
**** Account to run the middleware : 
     USER                 = 'root'
**** Database configuration : 
     DBVENDOR             = 'mysql'
     DBENGINE             = 'InnoDB'
     DBHOST               = 'localhost'
     DBNAME               = 'xtremweb'
     DBADMINLOGIN         = 'root'
     DBADMINPASSWORD      = 'root'
     DBUSERLOGIN          = 'xwuser'
     DBUSERPASSWORD       = 'xwuser'
**** XtremWeb-HEP administrator client configuration : 
     XWADMINLOGIN         = 'admin'
     XWADMINPASSWORD      = 'admin'
**** XtremWeb-HEP public worker configuration : 
     XWWORKERLOGIN        = 'worker'
     XWWORKERPASSWORD     = 'worker'
**** XtremWeb-HEP server configuration : 
     XWSERVER             = 'localhost'
     XWUPGRADEURL         = 'http://localhost:8080/somewhere/xtremweb.jar'
**** CA certificates path : 
     X509CERTDIR          = '/tmp/castore'
**** Certificate configuration : 
     Keys found           = ''
     SSLKEYPASSPHRASE     = 'MrRobotFramework'
     SSLKEYCLIENTPASSWORD = 'MrRobotFramework'
     SSLKEYSERVERPASSWORD = 'MrRobotFramework'
     SSLKEYWORKERPASSWORD = 'MrRobotFramework'
     Common Name          = 'localhost'
     Organisation Unit    = 'MrRobotFramework'
     Organization Name    = 'MrRobotFramework'
     Locality Name        = 'MrRobotFramework'
     Country              = 'fr'

Database schema 'xtremweb' exists : DB reset forced
Resetting database schema 'xtremweb'
Preparing database script............Done
Preparing database schema 'xtremweb'
DB engine for 'xtremweb' is InnoDB :  Creating foreign keys for live tables ...
Creating DB triggers using xwhep-core-tables-create-triggers-for-data-coming-from-8.sql ...

Table "users"

Table "hosts"

Table "datas"

Table "works"

Table "tasks"

Table "apps"
Creating DB triggers using xwhep-core-tables-create-triggers-for-history-coming-from-8.sql ...

Table "users_history"

Table "hosts_history"

Table "datas_history"

Table "works_history"

Table "tasks_history"

Table "apps_history"
Create the SQL script for the creation of DB views in the current schema ...
Create the SQL script for the creation of DB users views in the current schema ...
Creating DB views using xwhep-core-tables-create-views-for-tables.sql ...
Creating DB views using xwhep-core-tables-create-users-views.sql ...
Creating DB views using xwhep-core-tables-create-views-for-sessions-and-groups.sql ...
Creating DB views using xwhep-core-tables-create-views-for-relationships.sql ...
Creating DB views using xwhep-core-tables-create-views-for-offering-and-billing.sql ...
Creating DB views using xwhep-core-tables-create-views-hosts-matching-works.sql ...
Granting access to DB schema 'xtremweb' ...
Database schema 'xtremweb' : checking compliance to '05.7.3'
Database schema 'xtremweb' : is compliant to 05.7.3
Database schema 'xtremweb' : checking compliance to '05.8.0'
Database schema 'xtremweb' : is compliant to 05.8.0
Database schema 'xtremweb' : checking compliance to '06.0.1'
Database schema 'xtremweb' : is compliant to 06.0.1
Database schema 'xtremweb' : checking compliance to '07.0.0'
Database schema 'xtremweb' : is compliant to 07.0.0
Database schema 'xtremweb' : checking compliance to '07.2.0'
Database schema 'xtremweb' : is compliant to 07.2.0
Database schema 'xtremweb' : checking compliance to '07.4.1'
Database schema 'xtremweb' : is compliant to 07.4.1
Database schema 'xtremweb' : checking compliance to '07.5.0'
Database schema 'xtremweb' : is compliant to 07.5.0
Database schema 'xtremweb' : checking compliance to '08.0.0'
Database schema 'xtremweb' : is compliant to 08.0.0
Database schema 'xtremweb' : checking compliance to '08.2.0'
Database schema 'xtremweb' : is compliant to 08.2.0
Database schema 'xtremweb' : checking compliance to '08.3.1'
Database schema 'xtremweb' : is compliant to 08.3.1
Database schema 'xtremweb' : checking compliance to '09.1.0'
Database schema 'xtremweb' : is compliant to 09.1.0
Database schema 'xtremweb' : checking compliance to '10.0.0'
Database schema 'xtremweb' : is compliant to 10.0.0
Database schema 'xtremweb' : checking compliance to '10.2.0'
Database schema 'xtremweb' : is compliant to 10.2.0
Database schema 'xtremweb' : checking compliance to '10.6.0'
Database schema 'xtremweb' : is not compliant to '10.6.0'; updating
10.6.0 is compliant, dont worry
10.6.0 is compliant, dont worry
Database schema 'xtremweb' : updated to '10.6.0'
Set current version to '10.6.0'
Setting the account to run the middleware to 'root'..........................Done
Preparing server configuration file '/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf'................. Done
Preparing xtremweb.ganglia...Done
Generating script to manage keystores (/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/xwhepgenkeys)  Done
Generating script to manage OpenId server certificates (/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/xwhepupdateopenidcerts) Done
Preparing worker configuration file '/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf'.... Done
Copying worker configuration file /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.worker/installer/PckRoot/private/etc/xwhep.worker/conf/xtremweb.worker.conf
Copying worker configuration file /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/innoSetup/worker/conf/xtremweb.worker.conf
Done
Preparing client configuration file '/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.client.conf'...Done
Copying client configuration file /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.client.conf to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.client/innoSetup/client/conf/xtremweb.client.conf
****************************************************************************************
Done
[Thu Sep  7 23:24:06 UTC 2017] xwhepgenkeys - [INFO] : Generating server keystore file /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/../keystore/xwhepserver.keys
[Thu Sep  7 23:24:06 UTC 2017] xwhepgenkeys - [INFO] : No certificate found; creating self signed ones

Keystore type: JKS
Keystore provider: SUN

Your keystore contains 1 entry

localhost, Sep 7, 2017, PrivateKeyEntry, 
Certificate fingerprint (SHA1): 48:96:50:55:30:BD:43:92:05:5B:DC:F1:3F:3C:81:27:DE:C4:2F:84
Owner: CN=localhost, O=MrRobotFramework, C=fr, OU=MrRobotFramework, L=MrRobotFramework
Issuer: CN=localhost, O=MrRobotFramework, C=fr, OU=MrRobotFramework, L=MrRobotFramework
Serial number: 52889d42
Valid from: Thu Sep 07 23:24:06 UTC 2017 until: Fri Sep 07 23:24:06 UTC 2018
Certificate fingerprints:
	 MD5:  13:2C:87:06:73:BA:D0:31:F2:EF:2B:2E:5D:F2:BA:BE
	 SHA1: 48:96:50:55:30:BD:43:92:05:5B:DC:F1:3F:3C:81:27:DE:C4:2F:84
	 SHA256: BB:55:FC:DD:EF:68:1C:FF:E7:28:AE:A9:37:D5:AE:13:17:43:DA:32:70:46:BB:8C:96:E7:69:D9:07:72:18:39
	 Signature algorithm name: SHA256withRSA
	 Version: 3

Extensions: 

#1: ObjectId: 2.5.29.14 Criticality=false
SubjectKeyIdentifier [
KeyIdentifier [
0000: 19 3A E8 FA 3E AC BC F5   8D A6 82 F1 71 07 C9 7E  .:..&gt;.......q...
0010: 40 DC DE C6                                        @...
]
]

[Thu Sep  7 23:24:07 UTC 2017] xwhepgenkeys - [INFO] : Generating worker keystore file /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/../keystore/xwhepworker.keys
[Thu Sep  7 23:24:07 UTC 2017] xwhepgenkeys - [INFO] : Importing server public key into worker keystore (/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/../keystore/xwhepworker.keys)

Keystore type: JKS
Keystore provider: SUN

Your keystore contains 2 entries

xtremweb-hep.worker.20170907232406, Sep 7, 2017, PrivateKeyEntry, 
Certificate fingerprint (SHA1): AD:0F:BD:7B:C6:D4:6D:3D:44:D7:D8:65:1D:23:FD:DC:CA:EB:EF:C9
localhost, Sep 7, 2017, trustedCertEntry, 
Certificate fingerprint (SHA1): 48:96:50:55:30:BD:43:92:05:5B:DC:F1:3F:3C:81:27:DE:C4:2F:84
[Thu Sep  7 23:24:08 UTC 2017] xwhepgenkeys - [INFO] : Generating client keystore file /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/../keystore/xwhepclient.keys
[Thu Sep  7 23:24:09 UTC 2017] xwhepgenkeys - [INFO] : Importing server public key into client keystore (/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/../keystore/xwhepworker.keys)

Keystore type: JKS
Keystore provider: SUN

Your keystore contains 2 entries

xtremweb-hep.client.20170907232406, Sep 7, 2017, PrivateKeyEntry, 
Certificate fingerprint (SHA1): 01:F6:69:73:E3:8F:DA:70:D4:8F:25:D3:73:6A:6B:11:46:02:7E:6C
localhost, Sep 7, 2017, trustedCertEntry, 
Certificate fingerprint (SHA1): 48:96:50:55:30:BD:43:92:05:5B:DC:F1:3F:3C:81:27:DE:C4:2F:84
[Thu Sep  7 23:24:09 UTC 2017] xwhepgenkeys - [INFO] : Signing jar file /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/../lib/xtremweb.jar
jar signed.

Warning: 
No -tsa or -tsacert is provided and this jar is not timestamped. Without a timestamp, users may not be able to validate this jar after the signer certificate's expiration date (2018-09-07) or after any future revocation date.

jar verified.

Warning: 
This jar contains signatures that does not include a timestamp. Without a timestamp, users may not be able to validate this jar after the signer certificate's expiration date (2018-09-07) or after any future revocation date.

Re-run with the -verbose and -certs options for more details.
[Thu Sep  7 23:24:10 UTC 2017] xwhepgenkeys - [INFO] : Done
GKRC=0
*******************
Keystores generated
*******************
Inserting known OpenId servers certificate paths into server keystore
 - google
 - yahoo
 - facebook
keytool error: java.io.FileNotFoundException: www.yahoo.com_0.pem (No such file or directory)
keytool error: java.io.FileNotFoundException: www.yahoo.com_1.pem (No such file or directory)
keytool error: java.io.FileNotFoundException: www.yahoo.com_2.pem (No such file or directory)
keytool error: java.io.FileNotFoundException: www.google.com_0.pem (No such file or directory)
keytool error: java.io.FileNotFoundException: www.google.com_1.pem (No such file or directory)
keytool error: java.io.FileNotFoundException: www.facebook.com_0.pem (No such file or directory)
keytool error: java.io.FileNotFoundException: www.facebook.com_1.pem (No such file or directory)
*******************
ERROR : can't insert OpenID server certificates into XWHEP server keystore
*******************

Preparing  client package to '/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/xwhep.client'.....Done
Copying client configuration file /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/xwhep.client/10.6.0/conf/xtremweb.client.conf.template to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.client/installer/PckRoot/Applications/xwhep.client/conf/xtremweb.client.conf
 Done

Preparing server RPM package to '/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.server'.... Done

Preparing server configuration RPM package to '/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.server.conf'.... Done

Preparing server Debian package
Server Debian package ready

Preparing server configuration Debian package
Server Configuration Debian package ready
Preparing DG to SG bridge RPM package to '/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.bridgedgsg'............ Done

Preparing bridgedgsg Debian package
Bridgedgsg Debian package ready
Preparing SG to DG bridge RPM package to '/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.bridgesgdg'........ Done

Preparing bridgesgdg Debian package
Bridgesgdg Debian package ready
Preparing client RPM package to '/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.client'.... Done

Preparing client Debian package
Client Debian package ready

Preparing worker RPM package to '/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.worker'.... Done

Preparing worker Debian package
Worker Debian package ready

&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;
! Everything is now prepared !
&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;

Available packages :
  * server
   - RedHat RPM  in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.server
   - Debian DPKG in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.server
   - Apple  PKG  in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.server

  * Desktop Grid to Service Grid bridge
   - RedHat RPM  in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.bridgedgsg
   - Debian DPKG in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.bridgedgsg

  * Service Grid to Desktop Grid bridge
   - RedHat RPM  in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.bridgesgdg
   - Debian DPKG in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.bridgesgdg

  * client
   - RedHat RPM  in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.client
   - Debian DPKG in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.client
   - Apple  PKG  in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.client
   - Windows installer  in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.client/innoSetup
                        (http://www.innosetup.com/isinfo.php)

  * worker
   - RedHat  RPM        in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.worker
   - Debian  DPKG       in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.worker
   - Apple   PKG        in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.worker
   - Windows installer  in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/innoSetup
                        (http://www.innosetup.com/isinfo.php)

  * client
   - Zip file (platform independant)  in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/xwhep-client-10.6.0.zip


You can manually :
  * start the server
   - ./bin/../bin/xwhep.server console
  * start a worker
   - ./bin/../bin/xwhep.worker console
  * as soon as your server is started you can use the client
   - ./bin/../bin/xwworkers : if you have started a worker, it is in the list
   - ./bin/../bin/xwusers
   - ./bin/../bin/xwapps
   - etc.

As soon as everything is ok you should :
  * install you server using its packages
  * deploy worker over your own volunteer PCs using its packages
  * install your worker packages on any of your web sites
    if you wish to enable anonymous volunteer power
  * install your client ZIP file on any of your web sites
    to allow registered users to use the platform

That's all folks
</msg>
<status status="PASS" endtime="20170907 23:24:45.189" starttime="20170907 23:24:45.188"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${install_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170907 23:24:45.189" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170907 23:24:45.189" starttime="20170907 23:24:45.189"></status>
</kw>
<kw name="Get Lines Containing String" library="String">
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<arguments>
<arg>${install_result.stdout}</arg>
<arg>That's all folks</arg>
</arguments>
<assign>
<var>${install_result_successful}</var>
</assign>
<msg timestamp="20170907 23:24:45.190" level="INFO">1 out of 357 lines matched</msg>
<msg timestamp="20170907 23:24:45.190" level="INFO">${install_result_successful} = That's all folks</msg>
<status status="PASS" endtime="20170907 23:24:45.190" starttime="20170907 23:24:45.190"></status>
</kw>
<kw name="Get Line Count" library="String">
<doc>Returns and logs the number of lines in the given string.</doc>
<arguments>
<arg>${install_result_successful}</arg>
</arguments>
<assign>
<var>${line_install_result_successful}</var>
</assign>
<msg timestamp="20170907 23:24:45.191" level="INFO">1 lines</msg>
<msg timestamp="20170907 23:24:45.191" level="INFO">${line_install_result_successful} = 1</msg>
<status status="PASS" endtime="20170907 23:24:45.191" starttime="20170907 23:24:45.190"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${line_install_result_successful}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20170907 23:24:45.191" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170907 23:24:45.191" starttime="20170907 23:24:45.191"></status>
</kw>
<status status="PASS" endtime="20170907 23:24:45.192" starttime="20170907 23:24:01.142"></status>
</kw>
<kw name="Start XWtremWeb Server And XWtremWeb Worker" library="XWCommon">
<kw name="Ping XWtremWeb Database" library="XWServer">
<kw name="Xtremweb Tables Must Exist" library="MySql">
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170907 23:24:45.207" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170907 23:24:45.209" starttime="20170907 23:24:45.193"></status>
</kw>
<status status="PASS" endtime="20170907 23:24:45.210" starttime="20170907 23:24:45.193"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>appTypes</arg>
</arguments>
<msg timestamp="20170907 23:24:45.210" level="INFO">Executing : Table Must Exist  |  appTypes </msg>
<msg timestamp="20170907 23:24:45.210" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='appTypes' </msg>
<status status="PASS" endtime="20170907 23:24:45.211" starttime="20170907 23:24:45.210"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps</arg>
</arguments>
<msg timestamp="20170907 23:24:45.212" level="INFO">Executing : Table Must Exist  |  apps </msg>
<msg timestamp="20170907 23:24:45.212" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='apps' </msg>
<status status="PASS" endtime="20170907 23:24:45.213" starttime="20170907 23:24:45.211"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps_history</arg>
</arguments>
<msg timestamp="20170907 23:24:45.213" level="INFO">Executing : Table Must Exist  |  apps_history </msg>
<msg timestamp="20170907 23:24:45.213" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='apps_history' </msg>
<status status="PASS" endtime="20170907 23:24:45.214" starttime="20170907 23:24:45.213"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>cpuTypes</arg>
</arguments>
<msg timestamp="20170907 23:24:45.214" level="INFO">Executing : Table Must Exist  |  cpuTypes </msg>
<msg timestamp="20170907 23:24:45.214" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='cpuTypes' </msg>
<status status="PASS" endtime="20170907 23:24:45.215" starttime="20170907 23:24:45.214"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>dataTypes</arg>
</arguments>
<msg timestamp="20170907 23:24:45.215" level="INFO">Executing : Table Must Exist  |  dataTypes </msg>
<msg timestamp="20170907 23:24:45.215" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='dataTypes' </msg>
<status status="PASS" endtime="20170907 23:24:45.216" starttime="20170907 23:24:45.215"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas</arg>
</arguments>
<msg timestamp="20170907 23:24:45.217" level="INFO">Executing : Table Must Exist  |  datas </msg>
<msg timestamp="20170907 23:24:45.217" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='datas' </msg>
<status status="PASS" endtime="20170907 23:24:45.218" starttime="20170907 23:24:45.217"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas_history</arg>
</arguments>
<msg timestamp="20170907 23:24:45.218" level="INFO">Executing : Table Must Exist  |  datas_history </msg>
<msg timestamp="20170907 23:24:45.218" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='datas_history' </msg>
<status status="PASS" endtime="20170907 23:24:45.219" starttime="20170907 23:24:45.218"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables</arg>
</arguments>
<msg timestamp="20170907 23:24:45.220" level="INFO">Executing : Table Must Exist  |  executables </msg>
<msg timestamp="20170907 23:24:45.220" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='executables' </msg>
<status status="PASS" endtime="20170907 23:24:45.221" starttime="20170907 23:24:45.220"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables_history</arg>
</arguments>
<msg timestamp="20170907 23:24:45.221" level="INFO">Executing : Table Must Exist  |  executables_history </msg>
<msg timestamp="20170907 23:24:45.221" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='executables_history' </msg>
<status status="PASS" endtime="20170907 23:24:45.222" starttime="20170907 23:24:45.221"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups</arg>
</arguments>
<msg timestamp="20170907 23:24:45.223" level="INFO">Executing : Table Must Exist  |  groups </msg>
<msg timestamp="20170907 23:24:45.223" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='groups' </msg>
<status status="PASS" endtime="20170907 23:24:45.224" starttime="20170907 23:24:45.222"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups_history</arg>
</arguments>
<msg timestamp="20170907 23:24:45.224" level="INFO">Executing : Table Must Exist  |  groups_history </msg>
<msg timestamp="20170907 23:24:45.224" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='groups_history' </msg>
<status status="PASS" endtime="20170907 23:24:45.225" starttime="20170907 23:24:45.224"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts</arg>
</arguments>
<msg timestamp="20170907 23:24:45.225" level="INFO">Executing : Table Must Exist  |  hosts </msg>
<msg timestamp="20170907 23:24:45.225" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='hosts' </msg>
<status status="PASS" endtime="20170907 23:24:45.226" starttime="20170907 23:24:45.225"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts_history</arg>
</arguments>
<msg timestamp="20170907 23:24:45.226" level="INFO">Executing : Table Must Exist  |  hosts_history </msg>
<msg timestamp="20170907 23:24:45.226" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='hosts_history' </msg>
<status status="PASS" endtime="20170907 23:24:45.228" starttime="20170907 23:24:45.226"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships</arg>
</arguments>
<msg timestamp="20170907 23:24:45.229" level="INFO">Executing : Table Must Exist  |  memberships </msg>
<msg timestamp="20170907 23:24:45.229" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='memberships' </msg>
<status status="PASS" endtime="20170907 23:24:45.229" starttime="20170907 23:24:45.228"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships_history</arg>
</arguments>
<msg timestamp="20170907 23:24:45.230" level="INFO">Executing : Table Must Exist  |  memberships_history </msg>
<msg timestamp="20170907 23:24:45.230" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='memberships_history' </msg>
<status status="PASS" endtime="20170907 23:24:45.231" starttime="20170907 23:24:45.230"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>oses</arg>
</arguments>
<msg timestamp="20170907 23:24:45.231" level="INFO">Executing : Table Must Exist  |  oses </msg>
<msg timestamp="20170907 23:24:45.231" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='oses' </msg>
<status status="PASS" endtime="20170907 23:24:45.232" starttime="20170907 23:24:45.231"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>packageTypes</arg>
</arguments>
<msg timestamp="20170907 23:24:45.233" level="INFO">Executing : Table Must Exist  |  packageTypes </msg>
<msg timestamp="20170907 23:24:45.233" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='packageTypes' </msg>
<status status="PASS" endtime="20170907 23:24:45.234" starttime="20170907 23:24:45.232"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions</arg>
</arguments>
<msg timestamp="20170907 23:24:45.234" level="INFO">Executing : Table Must Exist  |  sessions </msg>
<msg timestamp="20170907 23:24:45.234" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sessions' </msg>
<status status="PASS" endtime="20170907 23:24:45.235" starttime="20170907 23:24:45.234"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions_history</arg>
</arguments>
<msg timestamp="20170907 23:24:45.236" level="INFO">Executing : Table Must Exist  |  sessions_history </msg>
<msg timestamp="20170907 23:24:45.236" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sessions_history' </msg>
<status status="PASS" endtime="20170907 23:24:45.237" starttime="20170907 23:24:45.235"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes</arg>
</arguments>
<msg timestamp="20170907 23:24:45.237" level="INFO">Executing : Table Must Exist  |  sharedAppTypes </msg>
<msg timestamp="20170907 23:24:45.237" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedAppTypes' </msg>
<status status="PASS" endtime="20170907 23:24:45.238" starttime="20170907 23:24:45.237"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes_history</arg>
</arguments>
<msg timestamp="20170907 23:24:45.238" level="INFO">Executing : Table Must Exist  |  sharedAppTypes_history </msg>
<msg timestamp="20170907 23:24:45.238" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedAppTypes_history' </msg>
<status status="PASS" endtime="20170907 23:24:45.239" starttime="20170907 23:24:45.238"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes</arg>
</arguments>
<msg timestamp="20170907 23:24:45.240" level="INFO">Executing : Table Must Exist  |  sharedPackageTypes </msg>
<msg timestamp="20170907 23:24:45.240" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedPackageTypes' </msg>
<status status="PASS" endtime="20170907 23:24:45.241" starttime="20170907 23:24:45.239"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes_history</arg>
</arguments>
<msg timestamp="20170907 23:24:45.241" level="INFO">Executing : Table Must Exist  |  sharedPackageTypes_history </msg>
<msg timestamp="20170907 23:24:45.241" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedPackageTypes_history' </msg>
<status status="PASS" endtime="20170907 23:24:45.242" starttime="20170907 23:24:45.241"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>statuses</arg>
</arguments>
<msg timestamp="20170907 23:24:45.242" level="INFO">Executing : Table Must Exist  |  statuses </msg>
<msg timestamp="20170907 23:24:45.242" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='statuses' </msg>
<status status="PASS" endtime="20170907 23:24:45.244" starttime="20170907 23:24:45.242"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks</arg>
</arguments>
<msg timestamp="20170907 23:24:45.244" level="INFO">Executing : Table Must Exist  |  tasks </msg>
<msg timestamp="20170907 23:24:45.244" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='tasks' </msg>
<status status="PASS" endtime="20170907 23:24:45.245" starttime="20170907 23:24:45.244"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks_history</arg>
</arguments>
<msg timestamp="20170907 23:24:45.246" level="INFO">Executing : Table Must Exist  |  tasks_history </msg>
<msg timestamp="20170907 23:24:45.246" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='tasks_history' </msg>
<status status="PASS" endtime="20170907 23:24:45.247" starttime="20170907 23:24:45.245"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces</arg>
</arguments>
<msg timestamp="20170907 23:24:45.248" level="INFO">Executing : Table Must Exist  |  traces </msg>
<msg timestamp="20170907 23:24:45.248" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='traces' </msg>
<status status="PASS" endtime="20170907 23:24:45.249" starttime="20170907 23:24:45.248"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces_history</arg>
</arguments>
<msg timestamp="20170907 23:24:45.250" level="INFO">Executing : Table Must Exist  |  traces_history </msg>
<msg timestamp="20170907 23:24:45.250" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='traces_history' </msg>
<status status="PASS" endtime="20170907 23:24:45.251" starttime="20170907 23:24:45.249"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>userRights</arg>
</arguments>
<msg timestamp="20170907 23:24:45.251" level="INFO">Executing : Table Must Exist  |  userRights </msg>
<msg timestamp="20170907 23:24:45.251" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='userRights' </msg>
<status status="PASS" endtime="20170907 23:24:45.253" starttime="20170907 23:24:45.251"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups</arg>
</arguments>
<msg timestamp="20170907 23:24:45.253" level="INFO">Executing : Table Must Exist  |  usergroups </msg>
<msg timestamp="20170907 23:24:45.253" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='usergroups' </msg>
<status status="PASS" endtime="20170907 23:24:45.255" starttime="20170907 23:24:45.253"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups_history</arg>
</arguments>
<msg timestamp="20170907 23:24:45.256" level="INFO">Executing : Table Must Exist  |  usergroups_history </msg>
<msg timestamp="20170907 23:24:45.256" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='usergroups_history' </msg>
<status status="PASS" endtime="20170907 23:24:45.257" starttime="20170907 23:24:45.256"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users</arg>
</arguments>
<msg timestamp="20170907 23:24:45.258" level="INFO">Executing : Table Must Exist  |  users </msg>
<msg timestamp="20170907 23:24:45.258" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='users' </msg>
<status status="PASS" endtime="20170907 23:24:45.259" starttime="20170907 23:24:45.257"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users_history</arg>
</arguments>
<msg timestamp="20170907 23:24:45.259" level="INFO">Executing : Table Must Exist  |  users_history </msg>
<msg timestamp="20170907 23:24:45.259" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='users_history' </msg>
<status status="PASS" endtime="20170907 23:24:45.260" starttime="20170907 23:24:45.259"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>version</arg>
</arguments>
<msg timestamp="20170907 23:24:45.261" level="INFO">Executing : Table Must Exist  |  version </msg>
<msg timestamp="20170907 23:24:45.261" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='version' </msg>
<status status="PASS" endtime="20170907 23:24:45.262" starttime="20170907 23:24:45.261"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>versions</arg>
</arguments>
<msg timestamp="20170907 23:24:45.262" level="INFO">Executing : Table Must Exist  |  versions </msg>
<msg timestamp="20170907 23:24:45.262" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='versions' </msg>
<status status="PASS" endtime="20170907 23:24:45.263" starttime="20170907 23:24:45.262"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps</arg>
</arguments>
<msg timestamp="20170907 23:24:45.263" level="INFO">Executing : Table Must Exist  |  view_apps </msg>
<msg timestamp="20170907 23:24:45.263" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps' </msg>
<status status="PASS" endtime="20170907 23:24:45.265" starttime="20170907 23:24:45.263"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps_for_offering</arg>
</arguments>
<msg timestamp="20170907 23:24:45.265" level="INFO">Executing : Table Must Exist  |  view_apps_for_offering </msg>
<msg timestamp="20170907 23:24:45.265" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps_for_offering' </msg>
<status status="PASS" endtime="20170907 23:24:45.266" starttime="20170907 23:24:45.265"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps_for_offering_with_file_sizes</arg>
</arguments>
<msg timestamp="20170907 23:24:45.266" level="INFO">Executing : Table Must Exist  |  view_apps_for_offering_with_file_sizes </msg>
<msg timestamp="20170907 23:24:45.266" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps_for_offering_with_file_sizes' </msg>
<status status="PASS" endtime="20170907 23:24:45.268" starttime="20170907 23:24:45.266"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_datas</arg>
</arguments>
<msg timestamp="20170907 23:24:45.268" level="INFO">Executing : Table Must Exist  |  view_datas </msg>
<msg timestamp="20170907 23:24:45.268" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_datas' </msg>
<status status="PASS" endtime="20170907 23:24:45.269" starttime="20170907 23:24:45.268"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_executables</arg>
</arguments>
<msg timestamp="20170907 23:24:45.269" level="INFO">Executing : Table Must Exist  |  view_executables </msg>
<msg timestamp="20170907 23:24:45.269" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_executables' </msg>
<status status="PASS" endtime="20170907 23:24:45.270" starttime="20170907 23:24:45.269"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_groups</arg>
</arguments>
<msg timestamp="20170907 23:24:45.271" level="INFO">Executing : Table Must Exist  |  view_groups </msg>
<msg timestamp="20170907 23:24:45.271" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_groups' </msg>
<status status="PASS" endtime="20170907 23:24:45.272" starttime="20170907 23:24:45.271"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts</arg>
</arguments>
<msg timestamp="20170907 23:24:45.273" level="INFO">Executing : Table Must Exist  |  view_hosts </msg>
<msg timestamp="20170907 23:24:45.273" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts' </msg>
<status status="PASS" endtime="20170907 23:24:45.274" starttime="20170907 23:24:45.272"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_deployable</arg>
</arguments>
<msg timestamp="20170907 23:24:45.274" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_deployable </msg>
<msg timestamp="20170907 23:24:45.274" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_deployable' </msg>
<status status="PASS" endtime="20170907 23:24:45.276" starttime="20170907 23:24:45.274"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_deployable_and_shared</arg>
</arguments>
<msg timestamp="20170907 23:24:45.276" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_deployable_and_shared </msg>
<msg timestamp="20170907 23:24:45.276" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_deployable_and_shared' </msg>
<status status="PASS" endtime="20170907 23:24:45.277" starttime="20170907 23:24:45.276"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_shared</arg>
</arguments>
<msg timestamp="20170907 23:24:45.278" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_shared </msg>
<msg timestamp="20170907 23:24:45.278" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_shared' </msg>
<status status="PASS" endtime="20170907 23:24:45.279" starttime="20170907 23:24:45.278"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_sessions</arg>
</arguments>
<msg timestamp="20170907 23:24:45.279" level="INFO">Executing : Table Must Exist  |  view_sessions </msg>
<msg timestamp="20170907 23:24:45.279" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_sessions' </msg>
<status status="PASS" endtime="20170907 23:24:45.280" starttime="20170907 23:24:45.279"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_tasks</arg>
</arguments>
<msg timestamp="20170907 23:24:45.281" level="INFO">Executing : Table Must Exist  |  view_tasks </msg>
<msg timestamp="20170907 23:24:45.281" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_tasks' </msg>
<status status="PASS" endtime="20170907 23:24:45.282" starttime="20170907 23:24:45.281"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_traces</arg>
</arguments>
<msg timestamp="20170907 23:24:45.283" level="INFO">Executing : Table Must Exist  |  view_traces </msg>
<msg timestamp="20170907 23:24:45.283" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_traces' </msg>
<status status="PASS" endtime="20170907 23:24:45.284" starttime="20170907 23:24:45.283"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_usergroups</arg>
</arguments>
<msg timestamp="20170907 23:24:45.284" level="INFO">Executing : Table Must Exist  |  view_usergroups </msg>
<msg timestamp="20170907 23:24:45.284" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_usergroups' </msg>
<status status="PASS" endtime="20170907 23:24:45.285" starttime="20170907 23:24:45.284"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users</arg>
</arguments>
<msg timestamp="20170907 23:24:45.285" level="INFO">Executing : Table Must Exist  |  view_users </msg>
<msg timestamp="20170907 23:24:45.285" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users' </msg>
<status status="PASS" endtime="20170907 23:24:45.286" starttime="20170907 23:24:45.285"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_apps</arg>
</arguments>
<msg timestamp="20170907 23:24:45.287" level="INFO">Executing : Table Must Exist  |  view_users_apps </msg>
<msg timestamp="20170907 23:24:45.287" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_apps' </msg>
<status status="PASS" endtime="20170907 23:24:45.288" starttime="20170907 23:24:45.287"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_datas</arg>
</arguments>
<msg timestamp="20170907 23:24:45.288" level="INFO">Executing : Table Must Exist  |  view_users_datas </msg>
<msg timestamp="20170907 23:24:45.288" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_datas' </msg>
<status status="PASS" endtime="20170907 23:24:45.289" starttime="20170907 23:24:45.288"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_groups</arg>
</arguments>
<msg timestamp="20170907 23:24:45.290" level="INFO">Executing : Table Must Exist  |  view_users_groups </msg>
<msg timestamp="20170907 23:24:45.290" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_groups' </msg>
<status status="PASS" endtime="20170907 23:24:45.291" starttime="20170907 23:24:45.290"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_hosts</arg>
</arguments>
<msg timestamp="20170907 23:24:45.292" level="INFO">Executing : Table Must Exist  |  view_users_hosts </msg>
<msg timestamp="20170907 23:24:45.292" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_hosts' </msg>
<status status="PASS" endtime="20170907 23:24:45.293" starttime="20170907 23:24:45.292"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_sessions</arg>
</arguments>
<msg timestamp="20170907 23:24:45.294" level="INFO">Executing : Table Must Exist  |  view_users_sessions </msg>
<msg timestamp="20170907 23:24:45.294" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_sessions' </msg>
<status status="PASS" endtime="20170907 23:24:45.295" starttime="20170907 23:24:45.293"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_tasks</arg>
</arguments>
<msg timestamp="20170907 23:24:45.296" level="INFO">Executing : Table Must Exist  |  view_users_tasks </msg>
<msg timestamp="20170907 23:24:45.296" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_tasks' </msg>
<status status="PASS" endtime="20170907 23:24:45.298" starttime="20170907 23:24:45.296"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_traces</arg>
</arguments>
<msg timestamp="20170907 23:24:45.298" level="INFO">Executing : Table Must Exist  |  view_users_traces </msg>
<msg timestamp="20170907 23:24:45.298" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_traces' </msg>
<status status="PASS" endtime="20170907 23:24:45.300" starttime="20170907 23:24:45.298"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_usergroups</arg>
</arguments>
<msg timestamp="20170907 23:24:45.301" level="INFO">Executing : Table Must Exist  |  view_users_usergroups </msg>
<msg timestamp="20170907 23:24:45.301" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_usergroups' </msg>
<status status="PASS" endtime="20170907 23:24:45.302" starttime="20170907 23:24:45.300"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_users</arg>
</arguments>
<msg timestamp="20170907 23:24:45.302" level="INFO">Executing : Table Must Exist  |  view_users_users </msg>
<msg timestamp="20170907 23:24:45.302" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_users' </msg>
<status status="PASS" endtime="20170907 23:24:45.304" starttime="20170907 23:24:45.302"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_works</arg>
</arguments>
<msg timestamp="20170907 23:24:45.304" level="INFO">Executing : Table Must Exist  |  view_users_works </msg>
<msg timestamp="20170907 23:24:45.304" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_works' </msg>
<status status="PASS" endtime="20170907 23:24:45.306" starttime="20170907 23:24:45.304"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works</arg>
</arguments>
<msg timestamp="20170907 23:24:45.307" level="INFO">Executing : Table Must Exist  |  view_works </msg>
<msg timestamp="20170907 23:24:45.307" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works' </msg>
<status status="PASS" endtime="20170907 23:24:45.309" starttime="20170907 23:24:45.307"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works_for_billing</arg>
</arguments>
<msg timestamp="20170907 23:24:45.309" level="INFO">Executing : Table Must Exist  |  view_works_for_billing </msg>
<msg timestamp="20170907 23:24:45.310" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works_for_billing' </msg>
<status status="PASS" endtime="20170907 23:24:45.310" starttime="20170907 23:24:45.309"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works_for_billing_with_file_sizes</arg>
</arguments>
<msg timestamp="20170907 23:24:45.311" level="INFO">Executing : Table Must Exist  |  view_works_for_billing_with_file_sizes </msg>
<msg timestamp="20170907 23:24:45.311" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works_for_billing_with_file_sizes' </msg>
<status status="PASS" endtime="20170907 23:24:45.312" starttime="20170907 23:24:45.311"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works</arg>
</arguments>
<msg timestamp="20170907 23:24:45.312" level="INFO">Executing : Table Must Exist  |  works </msg>
<msg timestamp="20170907 23:24:45.312" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='works' </msg>
<status status="PASS" endtime="20170907 23:24:45.313" starttime="20170907 23:24:45.312"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works_history</arg>
</arguments>
<msg timestamp="20170907 23:24:45.313" level="INFO">Executing : Table Must Exist  |  works_history </msg>
<msg timestamp="20170907 23:24:45.313" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='works_history' </msg>
<status status="PASS" endtime="20170907 23:24:45.314" starttime="20170907 23:24:45.313"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170907 23:24:45.315" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170907 23:24:45.315" starttime="20170907 23:24:45.315"></status>
</kw>
<status status="PASS" endtime="20170907 23:24:45.315" starttime="20170907 23:24:45.315"></status>
</kw>
<status status="PASS" endtime="20170907 23:24:45.315" starttime="20170907 23:24:45.192"></status>
</kw>
<status status="PASS" endtime="20170907 23:24:45.316" starttime="20170907 23:24:45.192"></status>
</kw>
<kw name="Start XtremWeb Server" library="XWServer">
<arguments>
<arg>${DIST_XWHEP_PATH}</arg>
</arguments>
<kw name="File Should Exist" library="OperatingSystem">
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xtremweb.server.conf</arg>
</arguments>
<msg timestamp="20170907 23:24:45.317" html="yes" level="INFO">File '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf&lt;/a&gt;' exists.</msg>
<status status="PASS" endtime="20170907 23:24:45.317" starttime="20170907 23:24:45.316"></status>
</kw>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xtremweb.server.conf</arg>
</arguments>
<assign>
<var>${config_content}</var>
</assign>
<msg timestamp="20170907 23:24:45.318" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf&lt;/a&gt;'.</msg>
<msg timestamp="20170907 23:24:45.319" level="INFO">${config_content} = #
# Copyrights     : CNRS
# Author         : Oleg Lodygensky
# Acknowledgment : XtremWeb-HEP is based on XtremWeb 1.8.0 by inria : http://www.xtremweb.net/
# Web            : http://www.xtremweb-hep.o...</msg>
<status status="PASS" endtime="20170907 23:24:45.319" starttime="20170907 23:24:45.317"></status>
</kw>
<kw name="Remove String Using Regexp" library="String">
<doc>Removes ``patterns`` from the given ``string``.</doc>
<arguments>
<arg>${config_content}</arg>
<arg>LAUNCHERURL=${XWCONFIGURE.VALUES.XWUPGRADEURL}</arg>
</arguments>
<assign>
<var>${config_content_filtered}</var>
</assign>
<msg timestamp="20170907 23:24:45.320" level="INFO">${config_content_filtered} = #
# Copyrights     : CNRS
# Author         : Oleg Lodygensky
# Acknowledgment : XtremWeb-HEP is based on XtremWeb 1.8.0 by inria : http://www.xtremweb.net/
# Web            : http://www.xtremweb-hep.o...</msg>
<status status="PASS" endtime="20170907 23:24:45.320" starttime="20170907 23:24:45.319"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${config_content_filtered}</arg>
<arg>\## HTTPSPORT=443</arg>
<arg>HTTPSPORT=${XWCONFIGURE.VALUES.HTTPSPORT}</arg>
</arguments>
<assign>
<var>${config_content_filtered}</var>
</assign>
<msg timestamp="20170907 23:24:45.320" level="INFO">${config_content_filtered} = #
# Copyrights     : CNRS
# Author         : Oleg Lodygensky
# Acknowledgment : XtremWeb-HEP is based on XtremWeb 1.8.0 by inria : http://www.xtremweb.net/
# Web            : http://www.xtremweb-hep.o...</msg>
<status status="PASS" endtime="20170907 23:24:45.320" starttime="20170907 23:24:45.320"></status>
</kw>
<kw name="Create File" library="OperatingSystem">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xtremweb.server.conf</arg>
<arg>content=${config_content_filtered}</arg>
</arguments>
<msg timestamp="20170907 23:24:45.323" html="yes" level="INFO">Created file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170907 23:24:45.323" starttime="20170907 23:24:45.321"></status>
</kw>
<kw name="Remove File" library="OperatingSystem">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<msg timestamp="20170907 23:24:45.396" html="yes" level="INFO">File '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;' does not exist.</msg>
<status status="PASS" endtime="20170907 23:24:45.396" starttime="20170907 23:24:45.324"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/bin/xtremweb.server console</arg>
<arg>shell=yes</arg>
<arg>stderr=STDOUT</arg>
<arg>stdout=${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<assign>
<var>${created_process}</var>
</assign>
<msg timestamp="20170907 23:24:45.398" level="INFO">Starting process:
/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/xtremweb.server console</msg>
<msg timestamp="20170907 23:24:45.402" level="INFO">${created_process} = 4</msg>
<status status="PASS" endtime="20170907 23:24:45.402" starttime="20170907 23:24:45.397"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SERVER_PROCESS}</arg>
<arg>${created_process}</arg>
</arguments>
<msg timestamp="20170907 23:24:45.405" level="INFO">${SERVER_PROCESS} = 4</msg>
<status status="PASS" endtime="20170907 23:24:45.405" starttime="20170907 23:24:45.403"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2 min</arg>
<arg>5 sec</arg>
<arg>Check XtremWeb Server Start From Log</arg>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<kw name="Check XtremWeb Server Start From Log" library="XWServer">
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<kw name="Log XtremWeb Process Log File" library="XWServer">
<kw name="Log File" library="OperatingSystem">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<msg timestamp="20170907 23:24:45.408" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170907 23:24:45.409" level="INFO"></msg>
<status status="PASS" endtime="20170907 23:24:45.409" starttime="20170907 23:24:45.408"></status>
</kw>
<status status="PASS" endtime="20170907 23:24:45.409" starttime="20170907 23:24:45.407"></status>
</kw>
<kw name="Grep File" library="OperatingSystem">
<doc>Returns the lines of the specified file that match the ``pattern``.</doc>
<arguments>
<arg>${log}</arg>
<arg>listening on port : ${XWCONFIGURE.VALUES.HTTPSPORT}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20170907 23:24:45.410" html="yes" level="INFO">Reading file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170907 23:24:45.411" level="INFO">0 out of 0 lines matched</msg>
<msg timestamp="20170907 23:24:45.411" level="INFO">${ret} = </msg>
<status status="PASS" endtime="20170907 23:24:45.411" starttime="20170907 23:24:45.410"></status>
</kw>
<kw name="Get Line Count" library="String">
<doc>Returns and logs the number of lines in the given string.</doc>
<arguments>
<arg>${ret}</arg>
</arguments>
<assign>
<var>${line_count}</var>
</assign>
<msg timestamp="20170907 23:24:45.412" level="INFO">0 lines</msg>
<msg timestamp="20170907 23:24:45.412" level="INFO">${line_count} = 0</msg>
<status status="PASS" endtime="20170907 23:24:45.412" starttime="20170907 23:24:45.411"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${line_count}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20170907 23:24:45.413" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20170907 23:24:45.413" level="FAIL">0 != 2</msg>
<status status="FAIL" endtime="20170907 23:24:45.413" starttime="20170907 23:24:45.412"></status>
</kw>
<status status="FAIL" endtime="20170907 23:24:45.413" starttime="20170907 23:24:45.406"></status>
</kw>
<kw name="Check XtremWeb Server Start From Log" library="XWServer">
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<kw name="Log XtremWeb Process Log File" library="XWServer">
<kw name="Log File" library="OperatingSystem">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<msg timestamp="20170907 23:24:50.416" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170907 23:24:50.449" level="INFO">Thu Sep  7 23:24:45 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : checking launch url
Thu Sep  7 23:24:45 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] WARNING : no launcher URL defined
Thu Sep  7 23:24:45 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : launching SmartSockets hub
[07/Sep/2017:23:24:47 +0000] [main_1] ERROR : setRole : role redefined ?! (was SERVER)
[07/Sep/2017:23:24:48 +0000] [xtremweb.database.DBConnPoolThread_main_1] INFO : Connection to database jdbc:mysql://localhost/xtremweb is ok, 70 created
[07/Sep/2017:23:24:48 +0000] [xtremweb.dispatcher.DBInterface_main_1] WARN : Can't retrieve any app
[07/Sep/2017:23:24:48 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't create ProxyValidator
[07/Sep/2017:23:24:48 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.io.FileNotFoundException: /tmp/castore (No such file or directory) (/tmp/castore (No such file or directory))
[07/Sep/2017:23:24:48 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't add CA certificates to keystore
[07/Sep/2017:23:24:48 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.lang.NullPointerException (null)
[07/Sep/2017:23:24:48 +0000] [xtremweb.dispatcher.HashTaskSet_TaskSet_14] INFO : TaskSet started (300000)
[07/Sep/2017:23:24:49 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : still waiting task set...
[07/Sep/2017:23:24:49 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : UDP server not started
[07/Sep/2017:23:24:49 +0000] [xtremweb.communications.TCPServer_TCPServerNIO_15] INFO : started, listening on port : 4321
log4j:WARN No appenders could be found for logger (org.eclipse.jetty.util.log).
log4j:WARN Please initialize the log4j system properly.
log4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.
[07/Sep/2017:23:24:50 +0000] [xtremweb.communications.HTTPServer_main_1] INFO : started, listening on port : 9443
[07/Sep/2017:23:24:50 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : FACEBOOK : java.net.MalformedURLException: no protocol: 
[07/Sep/2017:23:24:50 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : GOOGLE : java.net.MalformedURLException: no protocol: 
[07/Sep/2017:23:24:50 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : TWITTER : java.net.MalformedURLException: no protocol: 
[07/Sep/2017:23:24:50 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : YAHOO : java.net.MalformedURLException: no protocol: 
[07/Sep/2017:23:24:50 +0000] [main_1] ERROR : Can't add new entry to keystore
[07/Sep/2017:23:24:50 +0000] [main_1] WARN : javax.net.ssl.SSLHandshakeException: sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target (sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target)
[07/Sep/2017:23:24:50 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : XWHEP Dispatcher(10.6.0-head) started [Thu Sep 07 23:24:50 UTC 2017]
[07/Sep/2017:23:24:50 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : DB vendor  = mysql
[07/Sep/2017:23:24:50 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : mileStone  = 
[07/Sep/2017:23:24:50 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Time out   = 15000
[07/Sep/2017:23:24:50 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Disk opt'd = true
[07/Sep/2017:23:24:50 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Net  opt'd = true
[07/Sep/2017:23:24:50 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : NIO        = true
XWHEP Dispatcher started  Thu Sep 07 23:24:50 UTC 2017
Name             : vagrant-ubuntu-trusty-64
Version          : 10.6.0-head
Identity         : 
XWRole           : SERVER
Started on       : Thu Sep 07 23:24:47 UTC 2017
Scheduler        : xtremweb.dispatcher.MatchingScheduler
SmartSockets hub : 172.28.128.3/172.17.0.1/10.0.2.15-4329#f6.ec.5c.ba.cb.7c.00.00.e6.44.02.42.bc.fb.75.e4~vagrant
Server HTTP      : true
Alive            : 300
Alive time out   : 900
Polling time out : 15000
Optimize zip     : true
Optimize network : true
NIO              : true
Comm layer       : xtremweb.communications.TCPClient
Socket time out  : 60000
Socket retries   : 50
Max connections  : 200
TCP port         : 4321
UDP port         : 4323
HTPP  port       : 80
HTPPS port       : 9443
Sun RPC interposition port : 4328
Sandbox path : /usr/bin/lxc
Sandbox launch args : 
Host &lt;host&gt;&lt;uid&gt;b58fddaa-683b-4fca-a55d-ca279e681ff3&lt;/uid&gt;&lt;accessrights&gt;0x755&lt;/accessrights&gt;&lt;name&gt;vagrant-ubuntu-trusty-64&lt;/name&gt;&lt;cpuload&gt;50&lt;/cpuload&gt;&lt;natedipaddr&gt;10.0.2.15&lt;/natedipaddr&gt;&lt;ipaddr&gt;10.0.2.15&lt;/ipaddr&gt;&lt;hwaddr&gt;&lt;/hwaddr&gt;&lt;timezone&gt;Etc/UTC&lt;/timezone&gt;&lt;os&gt;LINUX&lt;/os&gt;&lt;osversion&gt;3.13.0-129-generic&lt;/osversion&gt;&lt;javaversion&gt;1.8.0_141&lt;/javaversion&gt;&lt;javadatamodel&gt;64&lt;/javadatamodel&gt;&lt;cputype&gt;AMD64&lt;/cputype&gt;&lt;cpunb&gt;1&lt;/cpunb&gt;&lt;cpumodel&gt;unknown&lt;/cpumodel&gt;&lt;cpuspeed&gt;0&lt;/cpuspeed&gt;&lt;totalmem&gt;0&lt;/totalmem&gt;&lt;totalswap&gt;0&lt;/totalswap&gt;&lt;totaltmp&gt;40284&lt;/totaltmp&gt;&lt;freetmp&gt;37144&lt;/freetmp&gt;&lt;project&gt;&lt;/project&gt;&lt;active&gt;true&lt;/active&gt;&lt;incomingconnections&gt;false&lt;/incomingconnections&gt;&lt;available&gt;false&lt;/available&gt;&lt;pilotjob&gt;false&lt;/pilotjob&gt;&lt;sgid&gt;&lt;/sgid&gt;&lt;timeout&gt;15000&lt;/timeout&gt;&lt;traces&gt;false&lt;/traces&gt;&lt;acceptbin&gt;false&lt;/acceptbin&gt;&lt;version&gt;10.6.0-head&lt;/version&gt;&lt;/host&gt;
[07/Sep/2017:23:24:50 +0000] [xtremweb.communications.HTTPServer_HTTPServer_218] INFO : started, listening on port : 9443
</msg>
<status status="PASS" endtime="20170907 23:24:50.449" starttime="20170907 23:24:50.416"></status>
</kw>
<status status="PASS" endtime="20170907 23:24:50.449" starttime="20170907 23:24:50.416"></status>
</kw>
<kw name="Grep File" library="OperatingSystem">
<doc>Returns the lines of the specified file that match the ``pattern``.</doc>
<arguments>
<arg>${log}</arg>
<arg>listening on port : ${XWCONFIGURE.VALUES.HTTPSPORT}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20170907 23:24:50.450" html="yes" level="INFO">Reading file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170907 23:24:50.457" level="INFO">2 out of 59 lines matched</msg>
<msg timestamp="20170907 23:24:50.457" level="INFO">${ret} = [07/Sep/2017:23:24:50 +0000] [xtremweb.communications.HTTPServer_main_1] INFO : started, listening on port : 9443
[07/Sep/2017:23:24:50 +0000] [xtremweb.communications.HTTPServer_HTTPServer_218] INFO ...</msg>
<status status="PASS" endtime="20170907 23:24:50.457" starttime="20170907 23:24:50.450"></status>
</kw>
<kw name="Get Line Count" library="String">
<doc>Returns and logs the number of lines in the given string.</doc>
<arguments>
<arg>${ret}</arg>
</arguments>
<assign>
<var>${line_count}</var>
</assign>
<msg timestamp="20170907 23:24:50.457" level="INFO">2 lines</msg>
<msg timestamp="20170907 23:24:50.457" level="INFO">${line_count} = 2</msg>
<status status="PASS" endtime="20170907 23:24:50.457" starttime="20170907 23:24:50.457"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${line_count}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20170907 23:24:50.458" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170907 23:24:50.458" starttime="20170907 23:24:50.458"></status>
</kw>
<status status="PASS" endtime="20170907 23:24:50.459" starttime="20170907 23:24:50.415"></status>
</kw>
<status status="PASS" endtime="20170907 23:24:50.459" starttime="20170907 23:24:45.405"></status>
</kw>
<kw name="Log XtremWeb Process Log File" library="XWServer">
<kw name="Log File" library="OperatingSystem">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<msg timestamp="20170907 23:24:50.459" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170907 23:24:50.460" level="INFO">Thu Sep  7 23:24:45 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : checking launch url
Thu Sep  7 23:24:45 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] WARNING : no launcher URL defined
Thu Sep  7 23:24:45 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : launching SmartSockets hub
[07/Sep/2017:23:24:47 +0000] [main_1] ERROR : setRole : role redefined ?! (was SERVER)
[07/Sep/2017:23:24:48 +0000] [xtremweb.database.DBConnPoolThread_main_1] INFO : Connection to database jdbc:mysql://localhost/xtremweb is ok, 70 created
[07/Sep/2017:23:24:48 +0000] [xtremweb.dispatcher.DBInterface_main_1] WARN : Can't retrieve any app
[07/Sep/2017:23:24:48 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't create ProxyValidator
[07/Sep/2017:23:24:48 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.io.FileNotFoundException: /tmp/castore (No such file or directory) (/tmp/castore (No such file or directory))
[07/Sep/2017:23:24:48 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't add CA certificates to keystore
[07/Sep/2017:23:24:48 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.lang.NullPointerException (null)
[07/Sep/2017:23:24:48 +0000] [xtremweb.dispatcher.HashTaskSet_TaskSet_14] INFO : TaskSet started (300000)
[07/Sep/2017:23:24:49 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : still waiting task set...
[07/Sep/2017:23:24:49 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : UDP server not started
[07/Sep/2017:23:24:49 +0000] [xtremweb.communications.TCPServer_TCPServerNIO_15] INFO : started, listening on port : 4321
log4j:WARN No appenders could be found for logger (org.eclipse.jetty.util.log).
log4j:WARN Please initialize the log4j system properly.
log4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.
[07/Sep/2017:23:24:50 +0000] [xtremweb.communications.HTTPServer_main_1] INFO : started, listening on port : 9443
[07/Sep/2017:23:24:50 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : FACEBOOK : java.net.MalformedURLException: no protocol: 
[07/Sep/2017:23:24:50 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : GOOGLE : java.net.MalformedURLException: no protocol: 
[07/Sep/2017:23:24:50 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : TWITTER : java.net.MalformedURLException: no protocol: 
[07/Sep/2017:23:24:50 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : YAHOO : java.net.MalformedURLException: no protocol: 
[07/Sep/2017:23:24:50 +0000] [main_1] ERROR : Can't add new entry to keystore
[07/Sep/2017:23:24:50 +0000] [main_1] WARN : javax.net.ssl.SSLHandshakeException: sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target (sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target)
[07/Sep/2017:23:24:50 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : XWHEP Dispatcher(10.6.0-head) started [Thu Sep 07 23:24:50 UTC 2017]
[07/Sep/2017:23:24:50 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : DB vendor  = mysql
[07/Sep/2017:23:24:50 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : mileStone  = 
[07/Sep/2017:23:24:50 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Time out   = 15000
[07/Sep/2017:23:24:50 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Disk opt'd = true
[07/Sep/2017:23:24:50 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Net  opt'd = true
[07/Sep/2017:23:24:50 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : NIO        = true
XWHEP Dispatcher started  Thu Sep 07 23:24:50 UTC 2017
Name             : vagrant-ubuntu-trusty-64
Version          : 10.6.0-head
Identity         : 
XWRole           : SERVER
Started on       : Thu Sep 07 23:24:47 UTC 2017
Scheduler        : xtremweb.dispatcher.MatchingScheduler
SmartSockets hub : 172.28.128.3/172.17.0.1/10.0.2.15-4329#f6.ec.5c.ba.cb.7c.00.00.e6.44.02.42.bc.fb.75.e4~vagrant
Server HTTP      : true
Alive            : 300
Alive time out   : 900
Polling time out : 15000
Optimize zip     : true
Optimize network : true
NIO              : true
Comm layer       : xtremweb.communications.TCPClient
Socket time out  : 60000
Socket retries   : 50
Max connections  : 200
TCP port         : 4321
UDP port         : 4323
HTPP  port       : 80
HTPPS port       : 9443
Sun RPC interposition port : 4328
Sandbox path : /usr/bin/lxc
Sandbox launch args : 
Host &lt;host&gt;&lt;uid&gt;b58fddaa-683b-4fca-a55d-ca279e681ff3&lt;/uid&gt;&lt;accessrights&gt;0x755&lt;/accessrights&gt;&lt;name&gt;vagrant-ubuntu-trusty-64&lt;/name&gt;&lt;cpuload&gt;50&lt;/cpuload&gt;&lt;natedipaddr&gt;10.0.2.15&lt;/natedipaddr&gt;&lt;ipaddr&gt;10.0.2.15&lt;/ipaddr&gt;&lt;hwaddr&gt;&lt;/hwaddr&gt;&lt;timezone&gt;Etc/UTC&lt;/timezone&gt;&lt;os&gt;LINUX&lt;/os&gt;&lt;osversion&gt;3.13.0-129-generic&lt;/osversion&gt;&lt;javaversion&gt;1.8.0_141&lt;/javaversion&gt;&lt;javadatamodel&gt;64&lt;/javadatamodel&gt;&lt;cputype&gt;AMD64&lt;/cputype&gt;&lt;cpunb&gt;1&lt;/cpunb&gt;&lt;cpumodel&gt;unknown&lt;/cpumodel&gt;&lt;cpuspeed&gt;0&lt;/cpuspeed&gt;&lt;totalmem&gt;0&lt;/totalmem&gt;&lt;totalswap&gt;0&lt;/totalswap&gt;&lt;totaltmp&gt;40284&lt;/totaltmp&gt;&lt;freetmp&gt;37144&lt;/freetmp&gt;&lt;project&gt;&lt;/project&gt;&lt;active&gt;true&lt;/active&gt;&lt;incomingconnections&gt;false&lt;/incomingconnections&gt;&lt;available&gt;false&lt;/available&gt;&lt;pilotjob&gt;false&lt;/pilotjob&gt;&lt;sgid&gt;&lt;/sgid&gt;&lt;timeout&gt;15000&lt;/timeout&gt;&lt;traces&gt;false&lt;/traces&gt;&lt;acceptbin&gt;false&lt;/acceptbin&gt;&lt;version&gt;10.6.0-head&lt;/version&gt;&lt;/host&gt;
[07/Sep/2017:23:24:50 +0000] [xtremweb.communications.HTTPServer_HTTPServer_218] INFO : started, listening on port : 9443
</msg>
<status status="PASS" endtime="20170907 23:24:50.460" starttime="20170907 23:24:50.459"></status>
</kw>
<status status="PASS" endtime="20170907 23:24:50.460" starttime="20170907 23:24:50.459"></status>
</kw>
<status status="PASS" endtime="20170907 23:24:50.460" starttime="20170907 23:24:45.316"></status>
</kw>
<kw name="Start XtremWeb Worker" library="XWWorker">
<arguments>
<arg>${DIST_XWHEP_PATH}</arg>
</arguments>
<kw name="File Should Exist" library="OperatingSystem">
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xtremweb.worker.conf</arg>
</arguments>
<msg timestamp="20170907 23:24:50.462" html="yes" level="INFO">File '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf&lt;/a&gt;' exists.</msg>
<status status="PASS" endtime="20170907 23:24:50.462" starttime="20170907 23:24:50.461"></status>
</kw>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xtremweb.worker.conf</arg>
</arguments>
<assign>
<var>${config_content}</var>
</assign>
<msg timestamp="20170907 23:24:50.462" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf&lt;/a&gt;'.</msg>
<msg timestamp="20170907 23:24:50.463" level="INFO">${config_content} = #
# Copyrights     : CNRS
# Author         : Oleg Lodygensky
# Acknowledgment : XtremWeb-HEP is based on XtremWeb 1.8.0 by inria : http://www.xtremweb.net/
# Web            : http://www.xtremweb-hep.o...</msg>
<status status="PASS" endtime="20170907 23:24:50.463" starttime="20170907 23:24:50.462"></status>
</kw>
<kw name="Remove String Using Regexp" library="String">
<doc>Removes ``patterns`` from the given ``string``.</doc>
<arguments>
<arg>${config_content}</arg>
<arg>LAUNCHERURL=${XWCONFIGURE.VALUES.XWUPGRADEURL}</arg>
</arguments>
<assign>
<var>${config_content_filtered}</var>
</assign>
<msg timestamp="20170907 23:24:50.464" level="INFO">${config_content_filtered} = #
# Copyrights     : CNRS
# Author         : Oleg Lodygensky
# Acknowledgment : XtremWeb-HEP is based on XtremWeb 1.8.0 by inria : http://www.xtremweb.net/
# Web            : http://www.xtremweb-hep.o...</msg>
<status status="PASS" endtime="20170907 23:24:50.464" starttime="20170907 23:24:50.463"></status>
</kw>
<kw name="Create File" library="OperatingSystem">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xtremweb.worker.conf</arg>
<arg>content=${config_content_filtered}</arg>
</arguments>
<msg timestamp="20170907 23:24:50.468" html="yes" level="INFO">Created file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170907 23:24:50.468" starttime="20170907 23:24:50.464"></status>
</kw>
<kw name="Remove File" library="OperatingSystem">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.worker.process.log</arg>
</arguments>
<msg timestamp="20170907 23:24:50.472" html="yes" level="INFO">File '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.worker.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.worker.process.log&lt;/a&gt;' does not exist.</msg>
<status status="PASS" endtime="20170907 23:24:50.472" starttime="20170907 23:24:50.468"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/bin/xtremweb.worker console</arg>
<arg>shell=yes</arg>
<arg>stderr=STDOUT</arg>
<arg>stdout=${DIST_XWHEP_PATH}/xwhep.worker.process.log</arg>
</arguments>
<assign>
<var>${created_process}</var>
</assign>
<msg timestamp="20170907 23:24:50.473" level="INFO">Starting process:
/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/xtremweb.worker console</msg>
<msg timestamp="20170907 23:24:50.477" level="INFO">${created_process} = 5</msg>
<status status="PASS" endtime="20170907 23:24:50.477" starttime="20170907 23:24:50.472"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${WORKER_PROCESS}</arg>
<arg>${created_process}</arg>
</arguments>
<msg timestamp="20170907 23:24:50.478" level="INFO">${WORKER_PROCESS} = 5</msg>
<status status="PASS" endtime="20170907 23:24:50.479" starttime="20170907 23:24:50.478"></status>
</kw>
<kw name="Log File" library="OperatingSystem">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.worker.process.log</arg>
</arguments>
<msg timestamp="20170907 23:24:50.479" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.worker.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.worker.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170907 23:24:50.480" level="INFO"></msg>
<status status="PASS" endtime="20170907 23:24:50.481" starttime="20170907 23:24:50.479"></status>
</kw>
<status status="PASS" endtime="20170907 23:24:50.481" starttime="20170907 23:24:50.461"></status>
</kw>
<status status="PASS" endtime="20170907 23:24:50.481" starttime="20170907 23:24:45.192"></status>
</kw>
<status status="PASS" endtime="20170907 23:24:50.481" starttime="20170907 23:22:10.987"></status>
</kw>
<kw name="Start Testrpc" library="ETHTestrpc">
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>testrpc</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${created_process}</var>
</assign>
<msg timestamp="20170907 23:24:50.482" level="INFO">Starting process:
testrpc</msg>
<msg timestamp="20170907 23:24:50.486" level="INFO">${created_process} = 6</msg>
<status status="PASS" endtime="20170907 23:24:50.486" starttime="20170907 23:24:50.482"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TESTRPC_PROCESS}</arg>
<arg>${created_process}</arg>
</arguments>
<msg timestamp="20170907 23:24:50.487" level="INFO">${TESTRPC_PROCESS} = 6</msg>
<status status="PASS" endtime="20170907 23:24:50.487" starttime="20170907 23:24:50.486"></status>
</kw>
<status status="PASS" endtime="20170907 23:24:50.487" starttime="20170907 23:24:50.481"></status>
</kw>
<kw name="Iexec Oracle Truffle Migrate" library="IexecOracle">
<tags>
<tag>Smart contract Tests</tag>
</tags>
<doc>call truffle migrate</doc>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${IEXEC_ORACLE_FORCE_GIT_CLONE}' == 'true'</arg>
<arg>Git Clone Iexec Oracle</arg>
</arguments>
<kw name="Git Clone Iexec Oracle" library="IexecOracle">
<kw name="Remove Directory" library="OperatingSystem">
<doc>Removes the directory pointed to by the given ``path``.</doc>
<arguments>
<arg>iexec-oracle</arg>
<arg>recursive=true</arg>
</arguments>
<msg timestamp="20170907 23:24:50.492" html="yes" level="INFO">Directory '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/iexec-oracle"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/iexec-oracle&lt;/a&gt;' does not exist.</msg>
<status status="PASS" endtime="20170907 23:24:50.493" starttime="20170907 23:24:50.489"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>git clone ${IEXEC_ORACLE_GIT_BRANCH}</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${git_result}</var>
</assign>
<msg timestamp="20170907 23:24:50.494" level="INFO">Starting process:
git clone https://github.com/iExecBlockchainComputing/iexec-oracle.git</msg>
<msg timestamp="20170907 23:24:50.498" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170907 23:24:52.664" level="INFO">Process completed.</msg>
<msg timestamp="20170907 23:24:52.664" level="INFO">${git_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170907 23:24:52.664" starttime="20170907 23:24:50.493"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${git_result.stderr}</arg>
</arguments>
<msg timestamp="20170907 23:24:52.665" level="INFO">Cloning into 'iexec-oracle'...</msg>
<status status="PASS" endtime="20170907 23:24:52.665" starttime="20170907 23:24:52.665"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${git_result.stdout}</arg>
</arguments>
<msg timestamp="20170907 23:24:52.666" level="INFO"></msg>
<status status="PASS" endtime="20170907 23:24:52.666" starttime="20170907 23:24:52.666"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${git_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170907 23:24:52.667" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170907 23:24:52.667" starttime="20170907 23:24:52.666"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd iexec-oracle/API &amp;&amp; npm install</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${npm_result}</var>
</assign>
<msg timestamp="20170907 23:24:52.668" level="INFO">Starting process:
cd iexec-oracle/API &amp;&amp; npm install</msg>
<msg timestamp="20170907 23:24:52.671" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170907 23:25:09.072" level="INFO">Process completed.</msg>
<msg timestamp="20170907 23:25:09.072" level="INFO">${npm_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170907 23:25:09.072" starttime="20170907 23:24:52.667"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${npm_result.stderr}</arg>
</arguments>
<msg timestamp="20170907 23:25:09.073" level="INFO">npm WARN xtremwebinterface@1.0.0 No description
npm WARN xtremwebinterface@1.0.0 No repository field.</msg>
<status status="PASS" endtime="20170907 23:25:09.073" starttime="20170907 23:25:09.073"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${npm_result.stdout}</arg>
</arguments>
<msg timestamp="20170907 23:25:09.074" level="INFO">xtremwebinterface@1.0.0 /home/vagrant/iexecdev/iexec-node/tests/rf/iexec-oracle/API
├── bluebird@3.5.0 
├── lodash@4.17.4 
├─┬ truffle@3.4.7 
│ ├─┬ mocha@3.5.0 
│ │ ├── browser-stdout@1.3.0 
│ │ ├─┬ commander@2.9.0 
│ │ │ └── graceful-readlink@1.0.1 
│ │ ├─┬ debug@2.6.8 
│ │ │ └── ms@2.0.0 
│ │ ├── diff@3.2.0 
│ │ ├── escape-string-regexp@1.0.5 
│ │ ├─┬ glob@7.1.1 
│ │ │ ├── fs.realpath@1.0.0 
│ │ │ ├─┬ inflight@1.0.6 
│ │ │ │ └── wrappy@1.0.2 
│ │ │ ├── inherits@2.0.3 
│ │ │ ├─┬ minimatch@3.0.4 
│ │ │ │ └─┬ brace-expansion@1.1.8 
│ │ │ │   ├── balanced-match@1.0.0 
│ │ │ │   └── concat-map@0.0.1 
│ │ │ ├── once@1.4.0 
│ │ │ └── path-is-absolute@1.0.1 
│ │ ├── growl@1.9.2 
│ │ ├── json3@3.3.2 
│ │ ├─┬ lodash.create@3.1.1 
│ │ │ ├─┬ lodash._baseassign@3.2.0 
│ │ │ │ ├── lodash._basecopy@3.0.1 
│ │ │ │ └─┬ lodash.keys@3.1.2 
│ │ │ │   ├── lodash._getnative@3.9.1 
│ │ │ │   ├── lodash.isarguments@3.1.0 
│ │ │ │   └── lodash.isarray@3.0.4 
│ │ │ ├── lodash._basecreate@3.0.3 
│ │ │ └── lodash._isiterateecall@3.0.9 
│ │ ├─┬ mkdirp@0.5.1 
│ │ │ └── minimist@0.0.8 
│ │ └─┬ supports-color@3.1.2 
│ │   └── has-flag@1.0.0 
│ ├── original-require@1.0.1 
│ └─┬ solc@0.4.13 
│   ├─┬ fs-extra@0.30.0 
│   │ ├── graceful-fs@4.1.11 
│   │ ├── jsonfile@2.4.0 
│   │ ├── klaw@1.3.1 
│   │ └── rimraf@2.6.1 
│   ├── memorystream@0.3.1 
│   ├── require-from-string@1.2.1 
│   ├── semver@5.4.1 
│   └─┬ yargs@4.8.1 
│     ├─┬ cliui@3.2.0 
│     │ ├─┬ strip-ansi@3.0.1 
│     │ │ └── ansi-regex@2.1.1 
│     │ └── wrap-ansi@2.1.0 
│     ├── decamelize@1.2.0 
│     ├── get-caller-file@1.0.2 
│     ├── lodash.assign@4.2.0 
│     ├─┬ os-locale@1.4.0 
│     │ └─┬ lcid@1.0.0 
│     │   └── invert-kv@1.0.0 
│     ├─┬ read-pkg-up@1.0.1 
│     │ ├─┬ find-up@1.1.2 
│     │ │ ├── path-exists@2.1.0 
│     │ │ └─┬ pinkie-promise@2.0.1 
│     │ │   └── pinkie@2.0.4 
│     │ └─┬ read-pkg@1.1.0 
│     │   ├─┬ load-json-file@1.1.0 
│     │   │ ├─┬ parse-json@2.2.0 
│     │   │ │ └─┬ error-ex@1.3.1 
│     │   │ │   └── is-arrayish@0.2.1 
│     │   │ ├── pify@2.3.0 
│     │   │ └─┬ strip-bom@2.0.0 
│     │   │   └── is-utf8@0.2.1 
│     │   ├─┬ normalize-package-data@2.4.0 
│     │   │ ├── hosted-git-info@2.5.0 
│     │   │ ├─┬ is-builtin-module@1.0.0 
│     │   │ │ └── builtin-modules@1.1.1 
│     │   │ └─┬ validate-npm-package-license@3.0.1 
│     │   │   ├─┬ spdx-correct@1.0.2 
│     │   │   │ └── spdx-license-ids@1.2.2 
│     │   │   └── spdx-expression-parse@1.0.4 
│     │   └── path-type@1.1.0 
│     ├── require-directory@2.1.1 
│     ├── require-main-filename@1.0.1 
│     ├── set-blocking@2.0.0 
│     ├─┬ string-width@1.0.2 
│     │ ├── code-point-at@1.1.0 
│     │ └─┬ is-fullwidth-code-point@1.0.0 
│     │   └── number-is-nan@1.0.1 
│     ├── which-module@1.0.0 
│     ├── window-size@0.2.0 
│     ├── y18n@3.2.1 
│     └─┬ yargs-parser@2.4.1 
│       └── camelcase@3.0.0 
├─┬ truffle-contract@2.0.0 
│ ├─┬ ethjs-abi@0.1.8 
│ │ ├── bn.js@4.11.6 
│ │ ├── js-sha3@0.5.5 
│ │ └─┬ number-to-bn@1.7.0 
│ │   └─┬ strip-hex-prefix@1.0.0 
│ │     └── is-hex-prefixed@1.0.0 
│ ├── truffle-blockchain-utils@0.0.1 
│ └─┬ truffle-contract-schema@0.0.5 
│   └── crypto-js@3.1.9-1 
└─┬ web3@0.18.4 
  ├── bignumber.js@2.0.7  (git+https://github.com/debris/bignumber.js.git#94d7146671b9719e00a09c29b01a691bc85048c2)
  ├── crypto-js@3.1.8 
  ├── utf8@2.1.2 
  ├── xhr2@0.1.4 
  └── xmlhttprequest@1.8.0 
</msg>
<status status="PASS" endtime="20170907 23:25:09.074" starttime="20170907 23:25:09.073"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${npm_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170907 23:25:09.074" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170907 23:25:09.075" starttime="20170907 23:25:09.074"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd iexec-oracle/Bridge &amp;&amp; npm install</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${npm_result}</var>
</assign>
<msg timestamp="20170907 23:25:09.075" level="INFO">Starting process:
cd iexec-oracle/Bridge &amp;&amp; npm install</msg>
<msg timestamp="20170907 23:25:09.078" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170907 23:26:39.385" level="INFO">Process completed.</msg>
<msg timestamp="20170907 23:26:39.385" level="INFO">${npm_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170907 23:26:39.386" starttime="20170907 23:25:09.075"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${npm_result.stderr}</arg>
</arguments>
<msg timestamp="20170907 23:26:39.387" level="INFO">npm WARN deprecated babel-preset-latest@6.24.1: 💥  preset-latest accomplishes the same task as babel-preset-env. 🙏  Please install it with 'npm install babel-preset-env --save-dev'. '{ "presets": ["latest"] }' to '{ "presets": ["env"] }'. For more info, please check the docs: http://babeljs.io/docs/plugins/preset-env 👌. And let us know how you're liking Babel at @babeljs on 🐦 
npm WARN deprecated babel-preset-es2016@6.24.1: We're really excited that you're trying to use ES2016 syntax, but instead of making more yearly presets, Babel has a better preset that we recommend you use instead: npm install babel-preset-env --save-dev. Give us a follow @babeljs to get more updates
npm WARN deprecated babel-preset-es2017@6.24.1: We're really excited that you're trying to use ES2017 syntax, but instead of making more yearly presets, Babel has a better preset that we recommend you use instead: npm install babel-preset-env --save-dev. Give us a follow @babeljs to get more updates
npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@^1.0.0 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@1.1.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})
npm WARN babel-loader@7.1.2 requires a peer of webpack@2 || 3 but none was installed.</msg>
<status status="PASS" endtime="20170907 23:26:39.387" starttime="20170907 23:26:39.386"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${npm_result.stdout}</arg>
</arguments>
<msg timestamp="20170907 23:26:39.388" level="INFO">bridge@1.0.0 /home/vagrant/iexecdev/iexec-node/tests/rf/iexec-oracle/Bridge
├─┬ async@2.5.0 
│ └── lodash@4.17.4 
├─┬ babel-cli@6.26.0 
│ ├─┬ babel-polyfill@6.26.0 
│ │ ├── core-js@2.5.1 
│ │ └── regenerator-runtime@0.10.5 
│ ├─┬ babel-register@6.26.0 
│ │ ├─┬ home-or-tmp@2.0.0 
│ │ │ └── os-tmpdir@1.0.2 
│ │ └── source-map-support@0.4.17 
│ ├─┬ babel-runtime@6.26.0 
│ │ └── regenerator-runtime@0.11.0 
│ ├─┬ chokidar@1.7.0 
│ │ ├─┬ anymatch@1.3.2 
│ │ │ ├─┬ micromatch@2.3.11 
│ │ │ │ ├─┬ arr-diff@2.0.0 
│ │ │ │ │ └── arr-flatten@1.1.0 
│ │ │ │ ├── array-unique@0.2.1 
│ │ │ │ ├─┬ braces@1.8.5 
│ │ │ │ │ ├─┬ expand-range@1.8.2 
│ │ │ │ │ │ └─┬ fill-range@2.2.3 
│ │ │ │ │ │   ├── is-number@2.1.0 
│ │ │ │ │ │   ├── isobject@2.1.0 
│ │ │ │ │ │   ├─┬ randomatic@1.1.7 
│ │ │ │ │ │   │ ├─┬ is-number@3.0.0 
│ │ │ │ │ │   │ │ └── kind-of@3.2.2 
│ │ │ │ │ │   │ └── kind-of@4.0.0 
│ │ │ │ │ │   └── repeat-string@1.6.1 
│ │ │ │ │ ├── preserve@0.2.0 
│ │ │ │ │ └── repeat-element@1.1.2 
│ │ │ │ ├─┬ expand-brackets@0.1.5 
│ │ │ │ │ └── is-posix-bracket@0.1.1 
│ │ │ │ ├── extglob@0.3.2 
│ │ │ │ ├── filename-regex@2.0.1 
│ │ │ │ ├─┬ kind-of@3.2.2 
│ │ │ │ │ └── is-buffer@1.1.5 
│ │ │ │ ├─┬ object.omit@2.0.1 
│ │ │ │ │ ├─┬ for-own@0.1.5 
│ │ │ │ │ │ └── for-in@1.0.2 
│ │ │ │ │ └── is-extendable@0.1.1 
│ │ │ │ ├─┬ parse-glob@3.0.4 
│ │ │ │ │ ├── glob-base@0.3.0 
│ │ │ │ │ └── is-dotfile@1.0.3 
│ │ │ │ └─┬ regex-cache@0.4.4 
│ │ │ │   └─┬ is-equal-shallow@0.1.3 
│ │ │ │     └── is-primitive@2.0.0 
│ │ │ └─┬ normalize-path@2.1.1 
│ │ │   └── remove-trailing-separator@1.1.0 
│ │ ├── async-each@1.0.1 
│ │ ├── glob-parent@2.0.0 
│ │ ├── inherits@2.0.3 
│ │ ├─┬ is-binary-path@1.0.1 
│ │ │ └── binary-extensions@1.10.0 
│ │ ├─┬ is-glob@2.0.1 
│ │ │ └── is-extglob@1.0.0 
│ │ └─┬ readdirp@2.1.0 
│ │   └── set-immediate-shim@1.0.1 
│ ├── commander@2.11.0 
│ ├── convert-source-map@1.5.0 
│ ├── fs-readdir-recursive@1.0.0 
│ ├─┬ glob@7.1.2 
│ │ ├── fs.realpath@1.0.0 
│ │ ├─┬ inflight@1.0.6 
│ │ │ └── wrappy@1.0.2 
│ │ └── once@1.4.0 
│ ├─┬ output-file-sync@1.1.2 
│ │ └── graceful-fs@4.1.11 
│ ├── path-is-absolute@1.0.1 
│ ├── slash@1.0.0 
│ ├── source-map@0.5.7 
│ └─┬ v8flags@2.1.1 
│   └── user-home@1.1.1 
├─┬ babel-core@6.26.0 
│ ├─┬ babel-code-frame@6.26.0 
│ │ └── js-tokens@3.0.2 
│ ├─┬ babel-generator@6.26.0 
│ │ ├─┬ detect-indent@4.0.0 
│ │ │ └─┬ repeating@2.0.1 
│ │ │   └── is-finite@1.0.2 
│ │ ├── jsesc@1.3.0 
│ │ └── trim-right@1.0.1 
│ ├── babel-helpers@6.24.1 
│ ├── babel-messages@6.23.0 
│ ├── babel-template@6.26.0 
│ ├─┬ babel-traverse@6.26.0 
│ │ └── debug@2.6.8 
│ ├─┬ babel-types@6.26.0 
│ │ └── to-fast-properties@1.0.3 
│ ├── babylon@6.18.0 
│ ├─┬ debug@2.6.8 
│ │ └── ms@2.0.0 
│ ├── json5@0.5.1 
│ ├─┬ minimatch@3.0.4 
│ │ └─┬ brace-expansion@1.1.8 
│ │   ├── balanced-match@1.0.0 
│ │   └── concat-map@0.0.1 
│ └── private@0.1.7 
├── babel-eslint@7.2.3 
├─┬ babel-loader@7.1.2 
│ ├─┬ find-cache-dir@1.0.0 
│ │ ├── commondir@1.0.1 
│ │ ├─┬ make-dir@1.0.0 
│ │ │ └── pify@2.3.0 
│ │ └── pkg-dir@2.0.0 
│ ├─┬ loader-utils@1.1.0 
│ │ ├── big.js@3.1.3 
│ │ └── emojis-list@2.1.0 
│ └─┬ mkdirp@0.5.1 
│   └── minimist@0.0.8 
├─┬ babel-preset-env@1.6.0 
│ ├── babel-plugin-check-es2015-constants@6.22.0 
│ ├── babel-plugin-syntax-trailing-function-commas@6.22.0 
│ ├─┬ babel-plugin-transform-async-to-generator@6.24.1 
│ │ ├── babel-helper-remap-async-to-generator@6.24.1 
│ │ └── babel-plugin-syntax-async-functions@6.13.0 
│ ├── babel-plugin-transform-es2015-arrow-functions@6.22.0 
│ ├── babel-plugin-transform-es2015-block-scoped-functions@6.22.0 
│ ├── babel-plugin-transform-es2015-block-scoping@6.26.0 
│ ├─┬ babel-plugin-transform-es2015-classes@6.24.1 
│ │ ├── babel-helper-define-map@6.26.0 
│ │ ├── babel-helper-function-name@6.24.1 
│ │ ├── babel-helper-optimise-call-expression@6.24.1 
│ │ └── babel-helper-replace-supers@6.24.1 
│ ├── babel-plugin-transform-es2015-computed-properties@6.24.1 
│ ├── babel-plugin-transform-es2015-destructuring@6.23.0 
│ ├── babel-plugin-transform-es2015-duplicate-keys@6.24.1 
│ ├── babel-plugin-transform-es2015-for-of@6.23.0 
│ ├── babel-plugin-transform-es2015-function-name@6.24.1 
│ ├── babel-plugin-transform-es2015-literals@6.22.0 
│ ├── babel-plugin-transform-es2015-modules-amd@6.24.1 
│ ├─┬ babel-plugin-transform-es2015-modules-commonjs@6.26.0 
│ │ └── babel-plugin-transform-strict-mode@6.24.1 
│ ├─┬ babel-plugin-transform-es2015-modules-systemjs@6.24.1 
│ │ └── babel-helper-hoist-variables@6.24.1 
│ ├── babel-plugin-transform-es2015-modules-umd@6.24.1 
│ ├── babel-plugin-transform-es2015-object-super@6.24.1 
│ ├─┬ babel-plugin-transform-es2015-parameters@6.24.1 
│ │ ├── babel-helper-call-delegate@6.24.1 
│ │ └── babel-helper-get-function-arity@6.24.1 
│ ├── babel-plugin-transform-es2015-shorthand-properties@6.24.1 
│ ├── babel-plugin-transform-es2015-spread@6.22.0 
│ ├─┬ babel-plugin-transform-es2015-sticky-regex@6.24.1 
│ │ └── babel-helper-regex@6.26.0 
│ ├── babel-plugin-transform-es2015-template-literals@6.22.0 
│ ├── babel-plugin-transform-es2015-typeof-symbol@6.23.0 
│ ├─┬ babel-plugin-transform-es2015-unicode-regex@6.24.1 
│ │ └─┬ regexpu-core@2.0.0 
│ │   ├── regenerate@1.3.2 
│ │   ├── regjsgen@0.2.0 
│ │   └─┬ regjsparser@0.1.5 
│ │     └── jsesc@0.5.0 
│ ├─┬ babel-plugin-transform-exponentiation-operator@6.24.1 
│ │ ├─┬ babel-helper-builder-binary-assignment-operator-visitor@6.24.1 
│ │ │ └── babel-helper-explode-assignable-expression@6.24.1 
│ │ └── babel-plugin-syntax-exponentiation-operator@6.13.0 
│ ├─┬ babel-plugin-transform-regenerator@6.26.0 
│ │ └── regenerator-transform@0.10.1 
│ ├─┬ browserslist@2.4.0 
│ │ ├── caniuse-lite@1.0.30000726 
│ │ └── electron-to-chromium@1.3.21 
│ ├─┬ invariant@2.2.2 
│ │ └── loose-envify@1.3.1 
│ └── semver@5.4.1 
├─┬ babel-preset-latest@6.24.1 
│ ├── babel-preset-es2015@6.24.1 
│ ├── babel-preset-es2016@6.24.1 
│ └── babel-preset-es2017@6.24.1 
├─┬ babel-preset-stage-0@6.24.1 
│ ├─┬ babel-plugin-transform-do-expressions@6.22.0 
│ │ └── babel-plugin-syntax-do-expressions@6.13.0 
│ ├─┬ babel-plugin-transform-function-bind@6.22.0 
│ │ └── babel-plugin-syntax-function-bind@6.13.0 
│ └─┬ babel-preset-stage-1@6.24.1 
│   ├─┬ babel-plugin-transform-class-constructor-call@6.24.1 
│   │ └── babel-plugin-syntax-class-constructor-call@6.18.0 
│   ├─┬ babel-plugin-transform-export-extensions@6.22.0 
│   │ └── babel-plugin-syntax-export-extensions@6.13.0 
│   └─┬ babel-preset-stage-2@6.24.1 
│     ├── babel-plugin-syntax-dynamic-import@6.18.0 
│     ├─┬ babel-plugin-transform-class-properties@6.24.1 
│     │ └── babel-plugin-syntax-class-properties@6.13.0 
│     ├─┬ babel-plugin-transform-decorators@6.24.1 
│     │ ├─┬ babel-helper-explode-class@6.24.1 
│     │ │ └── babel-helper-bindify-decorators@6.24.1 
│     │ └── babel-plugin-syntax-decorators@6.13.0 
│     └─┬ babel-preset-stage-3@6.24.1 
│       ├─┬ babel-plugin-transform-async-generator-functions@6.24.1 
│       │ └── babel-plugin-syntax-async-generators@6.13.0 
│       └─┬ babel-plugin-transform-object-rest-spread@6.26.0 
│         └── babel-plugin-syntax-object-rest-spread@6.13.0 
├─┬ body-parser@1.17.2 
│ ├── bytes@2.4.0 
│ ├── content-type@1.0.2 
│ ├── debug@2.6.7 
│ ├── depd@1.1.1 
│ ├─┬ http-errors@1.6.2 
│ │ ├── setprototypeof@1.0.3 
│ │ └── statuses@1.3.1 
│ ├── iconv-lite@0.4.15 
│ ├─┬ on-finished@2.3.0 
│ │ └── ee-first@1.1.1 
│ ├── qs@6.4.0 
│ ├─┬ raw-body@2.2.0 
│ │ └── unpipe@1.0.0 
│ └─┬ type-is@1.6.15 
│   └── media-typer@0.3.0 
├── child_process@1.0.2 
├─┬ cors@2.8.4 
│ ├── object-assign@4.1.1 
│ └── vary@1.1.1 
├─┬ eslint@3.19.0 
│ ├─┬ chalk@1.1.3 
│ │ ├── ansi-styles@2.2.1 
│ │ ├── escape-string-regexp@1.0.5 
│ │ ├─┬ has-ansi@2.0.0 
│ │ │ └── ansi-regex@2.1.1 
│ │ ├─┬ strip-ansi@3.0.1 
│ │ │ └── ansi-regex@2.1.1 
│ │ └── supports-color@2.0.0 
│ ├─┬ concat-stream@1.6.0 
│ │ ├─┬ readable-stream@2.3.3 
│ │ │ ├── core-util-is@1.0.2 
│ │ │ ├── process-nextick-args@1.0.7 
│ │ │ ├── string_decoder@1.0.3 
│ │ │ └── util-deprecate@1.0.2 
│ │ └── typedarray@0.0.6 
│ ├─┬ doctrine@2.0.0 
│ │ └── isarray@1.0.0 
│ ├─┬ escope@3.6.0 
│ │ ├─┬ es6-map@0.1.5 
│ │ │ ├── d@1.0.0 
│ │ │ ├── es5-ext@0.10.30 
│ │ │ ├── es6-iterator@2.0.1 
│ │ │ ├── es6-set@0.1.5 
│ │ │ ├── es6-symbol@3.1.1 
│ │ │ └── event-emitter@0.3.5 
│ │ ├── es6-weak-map@2.0.2 
│ │ └── esrecurse@4.2.0 
│ ├─┬ espree@3.5.0 
│ │ ├── acorn@5.1.2 
│ │ └─┬ acorn-jsx@3.0.1 
│ │   └── acorn@3.3.0 
│ ├── esquery@1.0.0 
│ ├── estraverse@4.2.0 
│ ├── esutils@2.0.2 
│ ├─┬ file-entry-cache@2.0.0 
│ │ └─┬ flat-cache@1.2.2 
│ │   ├── circular-json@0.3.3 
│ │   ├─┬ del@2.2.2 
│ │   │ ├─┬ globby@5.0.0 
│ │   │ │ ├─┬ array-union@1.0.2 
│ │   │ │ │ └── array-uniq@1.0.3 
│ │   │ │ └── arrify@1.0.1 
│ │   │ ├── is-path-cwd@1.0.0 
│ │   │ ├─┬ is-path-in-cwd@1.0.0 
│ │   │ │ └── is-path-inside@1.0.0 
│ │   │ └─┬ pinkie-promise@2.0.1 
│ │   │   └── pinkie@2.0.4 
│ │   └── write@0.2.1 
│ ├── globals@9.18.0 
│ ├── ignore@3.3.5 
│ ├── imurmurhash@0.1.4 
│ ├─┬ inquirer@0.12.0 
│ │ ├── ansi-escapes@1.4.0 
│ │ ├── ansi-regex@2.1.1 
│ │ ├─┬ cli-cursor@1.0.2 
│ │ │ └─┬ restore-cursor@1.0.1 
│ │ │   ├── exit-hook@1.1.1 
│ │ │   └── onetime@1.1.0 
│ │ ├── cli-width@2.2.0 
│ │ ├── figures@1.7.0 
│ │ ├─┬ readline2@1.0.1 
│ │ │ ├── is-fullwidth-code-point@1.0.0 
│ │ │ └── mute-stream@0.0.5 
│ │ ├── run-async@0.1.0 
│ │ ├── rx-lite@3.1.2 
│ │ ├─┬ string-width@1.0.2 
│ │ │ ├── code-point-at@1.1.0 
│ │ │ └─┬ is-fullwidth-code-point@1.0.0 
│ │ │   └── number-is-nan@1.0.1 
│ │ ├── strip-ansi@3.0.1 
│ │ └── through@2.3.8 
│ ├─┬ is-my-json-valid@2.16.1 
│ │ ├── generate-function@2.0.0 
│ │ ├─┬ generate-object-property@1.2.0 
│ │ │ └── is-property@1.0.2 
│ │ ├── jsonpointer@4.0.1 
│ │ └── xtend@4.0.1 
│ ├─┬ is-resolvable@1.0.0 
│ │ └── tryit@1.0.3 
│ ├─┬ js-yaml@3.9.1 
│ │ ├─┬ argparse@1.0.9 
│ │ │ └── sprintf-js@1.0.3 
│ │ └── esprima@4.0.0 
│ ├─┬ json-stable-stringify@1.0.1 
│ │ └── jsonify@0.0.0 
│ ├─┬ levn@0.3.0 
│ │ ├── prelude-ls@1.1.2 
│ │ └── type-check@0.3.2 
│ ├── natural-compare@1.4.0 
│ ├─┬ optionator@0.8.2 
│ │ ├── deep-is@0.1.3 
│ │ ├── fast-levenshtein@2.0.6 
│ │ └── wordwrap@1.0.0 
│ ├── path-is-inside@1.0.2 
│ ├── pluralize@1.2.1 
│ ├── progress@1.1.8 
│ ├─┬ require-uncached@1.0.3 
│ │ ├─┬ caller-path@0.1.0 
│ │ │ └── callsites@0.2.0 
│ │ └── resolve-from@1.0.1 
│ ├─┬ shelljs@0.7.8 
│ │ ├── interpret@1.0.3 
│ │ └── rechoir@0.6.2 
│ ├── strip-bom@3.0.0 
│ ├── strip-json-comments@2.0.1 
│ ├─┬ table@3.8.3 
│ │ ├─┬ ajv@4.11.8 
│ │ │ └── co@4.6.0 
│ │ ├── ajv-keywords@1.5.1 
│ │ ├── slice-ansi@0.0.4 
│ │ └─┬ string-width@2.1.1 
│ │   └── is-fullwidth-code-point@2.0.0 
│ ├── text-table@0.2.0 
│ └─┬ user-home@2.0.0 
│   └── os-homedir@1.0.2 
├─┬ eslint-config-airbnb-base@11.3.2 
│ └── eslint-restricted-globals@0.1.1 
├─┬ eslint-plugin-import@2.7.0 
│ ├── builtin-modules@1.1.1 
│ ├── contains-path@0.1.0 
│ ├── debug@2.6.8 
│ ├── doctrine@1.5.0 
│ ├─┬ eslint-import-resolver-node@0.3.1 
│ │ ├── debug@2.6.8 
│ │ └─┬ resolve@1.4.0 
│ │   └── path-parse@1.0.5 
│ ├─┬ eslint-module-utils@2.1.1 
│ │ ├── debug@2.6.8 
│ │ └─┬ pkg-dir@1.0.0 
│ │   └─┬ find-up@1.1.2 
│ │     └── path-exists@2.1.0 
│ ├─┬ has@1.0.1 
│ │ └── function-bind@1.1.1 
│ ├── lodash.cond@4.5.2 
│ └─┬ read-pkg-up@2.0.0 
│   ├─┬ find-up@2.1.0 
│   │ └─┬ locate-path@2.0.0 
│   │   ├─┬ p-locate@2.0.0 
│   │   │ └── p-limit@1.1.0 
│   │   └── path-exists@3.0.0 
│   └─┬ read-pkg@2.0.0 
│     ├─┬ load-json-file@2.0.0 
│     │ └─┬ parse-json@2.2.0 
│     │   └─┬ error-ex@1.3.1 
│     │     └── is-arrayish@0.2.1 
│     ├─┬ normalize-package-data@2.4.0 
│     │ └── hosted-git-info@2.5.0 
│     └── path-type@2.0.0 
├── install@0.10.1 
├── json2xml@0.1.3 
├─┬ nodemon@1.12.0 
│ ├── debug@2.6.8 
│ ├── es6-promise@3.3.1 
│ ├── ignore-by-default@1.0.1 
│ ├─┬ lodash.defaults@3.1.2 
│ │ ├─┬ lodash.assign@3.2.0 
│ │ │ ├─┬ lodash._baseassign@3.2.0 
│ │ │ │ └── lodash._basecopy@3.0.1 
│ │ │ ├─┬ lodash._createassigner@3.1.1 
│ │ │ │ ├── lodash._bindcallback@3.0.1 
│ │ │ │ └── lodash._isiterateecall@3.0.9 
│ │ │ └─┬ lodash.keys@3.1.2 
│ │ │   ├── lodash._getnative@3.9.1 
│ │ │   ├── lodash.isarguments@3.1.0 
│ │ │   └── lodash.isarray@3.0.4 
│ │ └── lodash.restparam@3.6.1 
│ ├─┬ ps-tree@1.1.0 
│ │ └─┬ event-stream@3.3.4 
│ │   ├── duplexer@0.1.1 
│ │   ├── from@0.1.7 
│ │   ├── map-stream@0.1.0 
│ │   ├── pause-stream@0.0.11 
│ │   ├── split@0.3.3 
│ │   └── stream-combiner@0.0.4 
│ ├─┬ touch@3.1.0 
│ │ └─┬ nopt@1.0.10 
│ │   └── abbrev@1.1.0 
│ ├── undefsafe@0.0.3 
│ └─┬ update-notifier@2.2.0 
│   ├─┬ boxen@1.2.1 
│   │ ├── ansi-align@2.0.0 
│   │ ├── chalk@2.1.0 
│   │ ├── cli-boxes@1.0.0 
│   │ ├─┬ term-size@1.2.0 
│   │ │ └─┬ execa@0.7.0 
│   │ │   ├─┬ cross-spawn@5.1.0 
│   │ │   │ ├─┬ lru-cache@4.1.1 
│   │ │   │ │ ├── pseudomap@1.0.2 
│   │ │   │ │ └── yallist@2.1.2 
│   │ │   │ ├─┬ shebang-command@1.2.0 
│   │ │   │ │ └── shebang-regex@1.0.0 
│   │ │   │ └─┬ which@1.3.0 
│   │ │   │   └── isexe@2.0.0 
│   │ │   ├── get-stream@3.0.0 
│   │ │   ├── is-stream@1.1.0 
│   │ │   ├─┬ npm-run-path@2.0.2 
│   │ │   │ └── path-key@2.0.1 
│   │ │   ├── p-finally@1.0.0 
│   │ │   └── strip-eof@1.0.0 
│   │ └─┬ widest-line@1.0.0 
│   │   └─┬ string-width@1.0.2 
│   │     ├── is-fullwidth-code-point@1.0.0 
│   │     └─┬ strip-ansi@3.0.1 
│   │       └── ansi-regex@2.1.1 
│   ├─┬ configstore@3.1.1 
│   │ ├─┬ dot-prop@4.2.0 
│   │ │ └── is-obj@1.0.1 
│   │ ├─┬ unique-string@1.0.0 
│   │ │ └── crypto-random-string@1.0.0 
│   │ └── write-file-atomic@2.3.0 
│   ├── import-lazy@2.1.0 
│   ├── is-npm@1.0.0 
│   ├─┬ latest-version@3.1.0 
│   │ └─┬ package-json@4.0.1 
│   │   ├─┬ got@6.7.1 
│   │   │ ├─┬ create-error-class@3.0.2 
│   │   │ │ └── capture-stack-trace@1.0.0 
│   │   │ ├── duplexer3@0.1.4 
│   │   │ ├── is-redirect@1.0.0 
│   │   │ ├── is-retry-allowed@1.1.0 
│   │   │ ├── lowercase-keys@1.0.0 
│   │   │ ├── timed-out@4.0.1 
│   │   │ ├── unzip-response@2.0.1 
│   │   │ └─┬ url-parse-lax@1.0.0 
│   │   │   └── prepend-http@1.0.4 
│   │   ├─┬ registry-auth-token@3.3.1 
│   │   │ └─┬ rc@1.2.1 
│   │   │   ├── deep-extend@0.4.2 
│   │   │   └── minimist@1.2.0 
│   │   └── registry-url@3.1.0 
│   ├── semver-diff@2.1.0 
│   └── xdg-basedir@3.0.0 
├─┬ npm@5.4.1 
│ ├── abbrev@1.1.0 
│ ├── ansi-regex@3.0.0 
│ ├── ansicolors@0.3.2 
│ ├── ansistyles@0.1.3 
│ ├── aproba@1.1.2 
│ ├── archy@1.0.0 
│ ├── bluebird@3.5.0 
│ ├─┬ cacache@9.2.9 
│ │ ├─┬ lru-cache@4.1.1 
│ │ │ ├── pseudomap@1.0.2 
│ │ │ └── yallist@2.1.2 
│ │ └── y18n@3.2.1 
│ ├── call-limit@1.1.0 
│ ├── chownr@1.0.1 
│ ├── cmd-shim@2.0.2 
│ ├─┬ columnify@1.5.4 
│ │ ├─┬ strip-ansi@3.0.1 
│ │ │ └── ansi-regex@2.1.1 
│ │ └─┬ wcwidth@1.0.1 
│ │   └─┬ defaults@1.0.3 
│ │     └── clone@1.0.2 
│ ├─┬ config-chain@1.1.11 
│ │ └── proto-list@1.2.4 
│ ├── debuglog@1.0.1 
│ ├── detect-indent@5.0.0 
│ ├─┬ dezalgo@1.0.3 
│ │ └── asap@2.0.5 
│ ├── editor@1.0.0 
│ ├── fs-vacuum@1.2.10 
│ ├── fs-write-stream-atomic@1.0.10 
│ ├─┬ glob@7.1.2 
│ │ ├── fs.realpath@1.0.0 
│ │ ├─┬ minimatch@3.0.4 
│ │ │ └─┬ brace-expansion@1.1.8 
│ │ │   ├── balanced-match@1.0.0 
│ │ │   └── concat-map@0.0.1 
│ │ └── path-is-absolute@1.0.1 
│ ├── graceful-fs@4.1.11 
│ ├── has-unicode@2.0.1 
│ ├── hosted-git-info@2.5.0 
│ ├── iferr@0.1.5 
│ ├── imurmurhash@0.1.4 
│ ├── inflight@1.0.6 
│ ├── inherits@2.0.3 
│ ├── ini@1.3.4 
│ ├─┬ init-package-json@1.10.1 
│ │ └── promzard@0.3.0 
│ ├─┬ JSONStream@1.3.1 
│ │ ├── jsonparse@1.3.1 
│ │ └── through@2.3.8 
│ ├── lazy-property@1.0.0 
│ ├─┬ libnpx@9.6.0 
│ │ ├── dotenv@4.0.0 
│ │ ├── y18n@3.2.1 
│ │ └─┬ yargs@8.0.2 
│ │   ├── camelcase@4.1.0 
│ │   ├─┬ cliui@3.2.0 
│ │   │ ├─┬ string-width@1.0.2 
│ │   │ │ ├── code-point-at@1.1.0 
│ │   │ │ └─┬ is-fullwidth-code-point@1.0.0 
│ │   │ │   └── number-is-nan@1.0.1 
│ │   │ ├─┬ strip-ansi@3.0.1 
│ │   │ │ └── ansi-regex@2.1.1 
│ │   │ └── wrap-ansi@2.1.0 
│ │   ├── decamelize@1.2.0 
│ │   ├── get-caller-file@1.0.2 
│ │   ├─┬ os-locale@2.1.0 
│ │   │ ├─┬ execa@0.7.0 
│ │   │ │ ├─┬ cross-spawn@5.1.0 
│ │   │ │ │ └─┬ shebang-command@1.2.0 
│ │   │ │ │   └── shebang-regex@1.0.0 
│ │   │ │ ├── get-stream@3.0.0 
│ │   │ │ ├── is-stream@1.1.0 
│ │   │ │ ├─┬ npm-run-path@2.0.2 
│ │   │ │ │ └── path-key@2.0.1 
│ │   │ │ ├── p-finally@1.0.0 
│ │   │ │ ├── signal-exit@3.0.2 
│ │   │ │ └── strip-eof@1.0.0 
│ │   │ ├─┬ lcid@1.0.0 
│ │   │ │ └── invert-kv@1.0.0 
│ │   │ └─┬ mem@1.1.0 
│ │   │   └── mimic-fn@1.1.0 
│ │   ├─┬ read-pkg-up@2.0.0 
│ │   │ ├─┬ find-up@2.1.0 
│ │   │ │ └─┬ locate-path@2.0.0 
│ │   │ │   ├─┬ p-locate@2.0.0 
│ │   │ │   │ └── p-limit@1.1.0 
│ │   │ │   └── path-exists@3.0.0 
│ │   │ └─┬ read-pkg@2.0.0 
│ │   │   ├─┬ load-json-file@2.0.0 
│ │   │   │ ├─┬ parse-json@2.2.0 
│ │   │   │ │ └─┬ error-ex@1.3.1 
│ │   │   │ │   └── is-arrayish@0.2.1 
│ │   │   │ ├── pify@2.3.0 
│ │   │   │ └── strip-bom@3.0.0 
│ │   │   └─┬ path-type@2.0.0 
│ │   │     └── pify@2.3.0 
│ │   ├── require-directory@2.1.1 
│ │   ├── require-main-filename@1.0.1 
│ │   ├── set-blocking@2.0.0 
│ │   ├─┬ string-width@2.1.1 
│ │   │ └── is-fullwidth-code-point@2.0.0 
│ │   ├── which-module@2.0.0 
│ │   └── yargs-parser@7.0.0 
│ ├── lockfile@1.0.3 
│ ├── lodash._baseindexof@3.1.0 
│ ├─┬ lodash._baseuniq@4.6.0 
│ │ ├── lodash._createset@4.0.3 
│ │ └── lodash._root@3.0.1 
│ ├── lodash._bindcallback@3.0.1 
│ ├── lodash._cacheindexof@3.0.2 
│ ├── lodash._createcache@3.1.2 
│ ├── lodash._getnative@3.9.1 
│ ├── lodash.clonedeep@4.5.0 
│ ├── lodash.restparam@3.6.1 
│ ├── lodash.union@4.6.0 
│ ├── lodash.uniq@4.5.0 
│ ├── lodash.without@4.4.0 
│ ├─┬ lru-cache@4.1.1 
│ │ ├── pseudomap@1.0.2 
│ │ └── yallist@2.1.2 
│ ├── meant@1.0.0 
│ ├─┬ mississippi@1.3.0 
│ │ ├─┬ concat-stream@1.6.0 
│ │ │ └── typedarray@0.0.6 
│ │ ├─┬ duplexify@3.5.0 
│ │ │ ├─┬ end-of-stream@1.0.0 
│ │ │ │ └── once@1.3.3 
│ │ │ └── stream-shift@1.0.0 
│ │ ├── end-of-stream@1.4.0 
│ │ ├── flush-write-stream@1.0.2 
│ │ ├── from2@2.3.0 
│ │ ├─┬ parallel-transform@1.1.0 
│ │ │ └── cyclist@0.2.2 
│ │ ├── pump@1.0.2 
│ │ ├── pumpify@1.3.5 
│ │ ├─┬ stream-each@1.2.0 
│ │ │ └── stream-shift@1.0.0 
│ │ └─┬ through2@2.0.3 
│ │   └── xtend@4.0.1 
│ ├─┬ mkdirp@0.5.1 
│ │ └── minimist@0.0.8 
│ ├─┬ move-concurrently@1.0.1 
│ │ ├── copy-concurrently@1.0.3 
│ │ └── run-queue@1.0.3 
│ ├─┬ node-gyp@3.6.2 
│ │ ├── fstream@1.0.11 
│ │ ├─┬ minimatch@3.0.4 
│ │ │ └─┬ brace-expansion@1.1.8 
│ │ │   ├── balanced-match@1.0.0 
│ │ │   └── concat-map@0.0.1 
│ │ ├── nopt@3.0.6 
│ │ ├── semver@5.3.0 
│ │ └─┬ tar@2.2.1 
│ │   └── block-stream@0.0.9 
│ ├── nopt@4.0.1 
│ ├─┬ normalize-package-data@2.4.0 
│ │ └─┬ is-builtin-module@1.0.0 
│ │   └── builtin-modules@1.1.1 
│ ├── npm-cache-filename@1.0.2 
│ ├── npm-install-checks@3.0.0 
│ ├── npm-lifecycle@1.0.2 
│ ├── npm-package-arg@5.1.2 
│ ├─┬ npm-packlist@1.1.8 
│ │ ├─┬ ignore-walk@3.0.0 
│ │ │ └─┬ minimatch@3.0.4 
│ │ │   └─┬ brace-expansion@1.1.8 
│ │ │     ├── balanced-match@1.0.0 
│ │ │     └── concat-map@0.0.1 
│ │ └── npm-bundled@1.0.3 
│ ├─┬ npm-registry-client@8.4.0 
│ │ └─┬ concat-stream@1.6.0 
│ │   └── typedarray@0.0.6 
│ ├── npm-user-validate@1.0.0 
│ ├─┬ npmlog@4.1.2 
│ │ ├─┬ are-we-there-yet@1.1.4 
│ │ │ └── delegates@1.0.0 
│ │ ├── console-control-strings@1.1.0 
│ │ ├─┬ gauge@2.7.4 
│ │ │ ├── object-assign@4.1.1 
│ │ │ ├── signal-exit@3.0.2 
│ │ │ ├─┬ string-width@1.0.2 
│ │ │ │ ├── code-point-at@1.1.0 
│ │ │ │ └─┬ is-fullwidth-code-point@1.0.0 
│ │ │ │   └── number-is-nan@1.0.1 
│ │ │ ├─┬ strip-ansi@3.0.1 
│ │ │ │ └── ansi-regex@2.1.1 
│ │ │ └── wide-align@1.1.2 
│ │ └── set-blocking@2.0.0 
│ ├── once@1.4.0 
│ ├── opener@1.4.3 
│ ├─┬ osenv@0.1.4 
│ │ ├── os-homedir@1.0.2 
│ │ └── os-tmpdir@1.0.2 
│ ├─┬ pacote@6.0.2 
│ │ ├─┬ make-fetch-happen@2.5.0 
│ │ │ ├─┬ agentkeepalive@3.3.0 
│ │ │ │ └─┬ humanize-ms@1.2.1 
│ │ │ │   └── ms@2.0.0 
│ │ │ ├── http-cache-semantics@3.7.3 
│ │ │ ├─┬ http-proxy-agent@2.0.0 
│ │ │ │ ├─┬ agent-base@4.1.1 
│ │ │ │ │ └─┬ es6-promisify@5.0.0 
│ │ │ │ │   └── es6-promise@4.1.1 
│ │ │ │ └─┬ debug@2.6.8 
│ │ │ │   └── ms@2.0.0 
│ │ │ ├─┬ https-proxy-agent@2.1.0 
│ │ │ │ ├─┬ agent-base@4.1.1 
│ │ │ │ │ └─┬ es6-promisify@5.0.0 
│ │ │ │ │   └── es6-promise@4.1.1 
│ │ │ │ └─┬ debug@2.6.8 
│ │ │ │   └── ms@2.0.0 
│ │ │ ├─┬ node-fetch-npm@2.0.2 
│ │ │ │ ├─┬ encoding@0.1.12 
│ │ │ │ │ └── iconv-lite@0.4.18 
│ │ │ │ └── json-parse-better-errors@1.0.1 
│ │ │ └─┬ socks-proxy-agent@3.0.0 
│ │ │   ├─┬ agent-base@4.1.1 
│ │ │   │ └─┬ es6-promisify@5.0.0 
│ │ │   │   └── es6-promise@4.1.1 
│ │ │   └─┬ socks@1.1.10 
│ │ │     ├── ip@1.1.5 
│ │ │     └── smart-buffer@1.1.15 
│ │ ├─┬ minimatch@3.0.4 
│ │ │ └─┬ brace-expansion@1.1.8 
│ │ │   ├── balanced-match@1.0.0 
│ │ │   └── concat-map@0.0.1 
│ │ ├── npm-pick-manifest@1.0.4 
│ │ ├─┬ promise-retry@1.1.1 
│ │ │ └── err-code@1.1.2 
│ │ └─┬ protoduck@4.0.0 
│ │   └── genfun@4.0.1 
│ ├── path-is-inside@1.0.2 
│ ├── promise-inflight@1.0.1 
│ ├─┬ read@1.0.7 
│ │ └── mute-stream@0.0.7 
│ ├── read-cmd-shim@1.0.1 
│ ├─┬ read-installed@4.0.3 
│ │ └── util-extend@1.0.3 
│ ├─┬ read-package-json@2.0.12 
│ │ ├── json-parse-better-errors@1.0.1 
│ │ └── slash@1.0.0 
│ ├── read-package-tree@5.1.6 
│ ├─┬ readable-stream@2.3.3 
│ │ ├── core-util-is@1.0.2 
│ │ ├── isarray@1.0.0 
│ │ ├── process-nextick-args@1.0.7 
│ │ ├── string_decoder@1.0.3 
│ │ └── util-deprecate@1.0.2 
│ ├── readdir-scoped-modules@1.0.2 
│ ├─┬ request@2.81.0 
│ │ ├── aws-sign2@0.6.0 
│ │ ├── aws4@1.6.0 
│ │ ├── caseless@0.12.0 
│ │ ├─┬ combined-stream@1.0.5 
│ │ │ └── delayed-stream@1.0.0 
│ │ ├── extend@3.0.1 
│ │ ├── forever-agent@0.6.1 
│ │ ├─┬ form-data@2.1.4 
│ │ │ └── asynckit@0.4.0 
│ │ ├─┬ har-validator@4.2.1 
│ │ │ ├─┬ ajv@4.11.8 
│ │ │ │ ├── co@4.6.0 
│ │ │ │ └─┬ json-stable-stringify@1.0.1 
│ │ │ │   └── jsonify@0.0.0 
│ │ │ └── har-schema@1.0.5 
│ │ ├─┬ hawk@3.1.3 
│ │ │ ├── boom@2.10.1 
│ │ │ ├── cryptiles@2.0.5 
│ │ │ ├── hoek@2.16.3 
│ │ │ └── sntp@1.0.9 
│ │ ├─┬ http-signature@1.1.1 
│ │ │ ├── assert-plus@0.2.0 
│ │ │ ├─┬ jsprim@1.4.0 
│ │ │ │ ├── assert-plus@1.0.0 
│ │ │ │ ├── extsprintf@1.0.2 
│ │ │ │ ├── json-schema@0.2.3 
│ │ │ │ └── verror@1.3.6 
│ │ │ └─┬ sshpk@1.13.1 
│ │ │   ├── asn1@0.2.3 
│ │ │   ├── assert-plus@1.0.0 
│ │ │   ├── bcrypt-pbkdf@1.0.1 
│ │ │   ├── dashdash@1.14.1 
│ │ │   ├── ecc-jsbn@0.1.1 
│ │ │   ├── getpass@0.1.7 
│ │ │   ├── jsbn@0.1.1 
│ │ │   └── tweetnacl@0.14.5 
│ │ ├── is-typedarray@1.0.0 
│ │ ├── isstream@0.1.2 
│ │ ├── json-stringify-safe@5.0.1 
│ │ ├─┬ mime-types@2.1.15 
│ │ │ └── mime-db@1.27.0 
│ │ ├── oauth-sign@0.8.2 
│ │ ├── performance-now@0.2.0 
│ │ ├── qs@6.4.0 
│ │ ├── stringstream@0.0.5 
│ │ ├─┬ tough-cookie@2.3.2 
│ │ │ └── punycode@1.4.1 
│ │ └── tunnel-agent@0.6.0 
│ ├── retry@0.10.1 
│ ├── rimraf@2.6.1 
│ ├── safe-buffer@5.1.1 
│ ├── semver@5.4.1 
│ ├── sha@2.0.1 
│ ├── slide@1.1.6 
│ ├── sorted-object@2.0.1 
│ ├─┬ sorted-union-stream@2.1.3 
│ │ ├─┬ from2@1.3.0 
│ │ │ └─┬ readable-stream@1.1.14 
│ │ │   ├── core-util-is@1.0.2 
│ │ │   ├── isarray@0.0.1 
│ │ │   └── string_decoder@0.10.31 
│ │ └─┬ stream-iterate@1.2.0 
│ │   └── stream-shift@1.0.0 
│ ├── ssri@4.1.6 
│ ├─┬ strip-ansi@4.0.0 
│ │ └── ansi-regex@3.0.0 
│ ├─┬ tar@4.0.1 
│ │ ├── minipass@2.2.1 
│ │ ├── minizlib@1.0.3 
│ │ └── yallist@3.0.2 
│ ├── text-table@0.2.0 
│ ├── uid-number@0.0.6 
│ ├── umask@1.1.0 
│ ├─┬ unique-filename@1.1.0 
│ │ └── unique-slug@2.0.0 
│ ├── unpipe@1.0.0 
│ ├─┬ update-notifier@2.2.0 
│ │ ├─┬ boxen@1.1.0 
│ │ │ ├── ansi-align@2.0.0 
│ │ │ ├── camelcase@4.1.0 
│ │ │ ├── cli-boxes@1.0.0 
│ │ │ ├─┬ string-width@2.1.0 
│ │ │ │ ├── is-fullwidth-code-point@2.0.0 
│ │ │ │ └── strip-ansi@4.0.0 
│ │ │ ├─┬ term-size@0.1.1 
│ │ │ │ └─┬ execa@0.4.0 
│ │ │ │   ├── cross-spawn-async@2.2.5 
│ │ │ │   ├── is-stream@1.1.0 
│ │ │ │   ├── npm-run-path@1.0.0 
│ │ │ │   ├── object-assign@4.1.1 
│ │ │ │   ├── path-key@1.0.0 
│ │ │ │   └── strip-eof@1.0.0 
│ │ │ └─┬ widest-line@1.0.0 
│ │ │   └─┬ string-width@1.0.2 
│ │ │     ├── code-point-at@1.1.0 
│ │ │     ├─┬ is-fullwidth-code-point@1.0.0 
│ │ │     │ └── number-is-nan@1.0.1 
│ │ │     └─┬ strip-ansi@3.0.1 
│ │ │       └── ansi-regex@2.1.1 
│ │ ├─┬ chalk@1.1.3 
│ │ │ ├── ansi-styles@2.2.1 
│ │ │ ├── escape-string-regexp@1.0.5 
│ │ │ ├─┬ has-ansi@2.0.0 
│ │ │ │ └── ansi-regex@2.1.1 
│ │ │ ├─┬ strip-ansi@3.0.1 
│ │ │ │ └── ansi-regex@2.1.1 
│ │ │ └── supports-color@2.0.0 
│ │ ├─┬ configstore@3.1.0 
│ │ │ ├─┬ dot-prop@4.1.1 
│ │ │ │ └── is-obj@1.0.1 
│ │ │ ├─┬ make-dir@1.0.0 
│ │ │ │ └── pify@2.3.0 
│ │ │ └─┬ unique-string@1.0.0 
│ │ │   └── crypto-random-string@1.0.0 
│ │ ├── import-lazy@2.1.0 
│ │ ├── is-npm@1.0.0 
│ │ ├─┬ latest-version@3.1.0 
│ │ │ └─┬ package-json@4.0.1 
│ │ │   ├─┬ got@6.7.1 
│ │ │   │ ├─┬ create-error-class@3.0.2 
│ │ │   │ │ └── capture-stack-trace@1.0.0 
│ │ │   │ ├── duplexer3@0.1.4 
│ │ │   │ ├── get-stream@3.0.0 
│ │ │   │ ├── is-redirect@1.0.0 
│ │ │   │ ├── is-retry-allowed@1.1.0 
│ │ │   │ ├── is-stream@1.1.0 
│ │ │   │ ├── lowercase-keys@1.0.0 
│ │ │   │ ├── timed-out@4.0.1 
│ │ │   │ ├── unzip-response@2.0.1 
│ │ │   │ └─┬ url-parse-lax@1.0.0 
│ │ │   │   └── prepend-http@1.0.4 
│ │ │   ├─┬ registry-auth-token@3.3.1 
│ │ │   │ └─┬ rc@1.2.1 
│ │ │   │   ├── deep-extend@0.4.2 
│ │ │   │   ├── minimist@1.2.0 
│ │ │   │   └── strip-json-comments@2.0.1 
│ │ │   └─┬ registry-url@3.1.0 
│ │ │     └─┬ rc@1.2.1 
│ │ │       ├── deep-extend@0.4.2 
│ │ │       ├── minimist@1.2.0 
│ │ │       └── strip-json-comments@2.0.1 
│ │ ├── semver-diff@2.1.0 
│ │ └── xdg-basedir@3.0.0 
│ ├── uuid@3.1.0 
│ ├─┬ validate-npm-package-license@3.0.1 
│ │ ├─┬ spdx-correct@1.0.2 
│ │ │ └── spdx-license-ids@1.2.2 
│ │ └── spdx-expression-parse@1.0.4 
│ ├─┬ validate-npm-package-name@3.0.0 
│ │ └── builtins@1.0.3 
│ ├─┬ which@1.3.0 
│ │ └── isexe@2.0.0 
│ ├─┬ worker-farm@1.5.0 
│ │ ├─┬ errno@0.1.4 
│ │ │ └── prr@0.0.0 
│ │ └── xtend@4.0.1 
│ ├── wrappy@1.0.2 
│ └─┬ write-file-atomic@2.3.0 
│   └── signal-exit@3.0.2 
├─┬ promise@7.3.1 
│ └── asap@2.0.6 
├── q@1.5.0 
├─┬ request@2.81.0 
│ ├── aws-sign2@0.6.0 
│ ├── aws4@1.6.0 
│ ├── caseless@0.12.0 
│ ├─┬ combined-stream@1.0.5 
│ │ └── delayed-stream@1.0.0 
│ ├── extend@3.0.1 
│ ├── forever-agent@0.6.1 
│ ├─┬ form-data@2.1.4 
│ │ └── asynckit@0.4.0 
│ ├─┬ har-validator@4.2.1 
│ │ └── har-schema@1.0.5 
│ ├─┬ hawk@3.1.3 
│ │ ├── boom@2.10.1 
│ │ ├── cryptiles@2.0.5 
│ │ ├── hoek@2.16.3 
│ │ └── sntp@1.0.9 
│ ├─┬ http-signature@1.1.1 
│ │ ├── assert-plus@0.2.0 
│ │ ├─┬ jsprim@1.4.1 
│ │ │ ├── assert-plus@1.0.0 
│ │ │ ├── extsprintf@1.3.0 
│ │ │ ├── json-schema@0.2.3 
│ │ │ └─┬ verror@1.10.0 
│ │ │   └── assert-plus@1.0.0 
│ │ └─┬ sshpk@1.13.1 
│ │   ├── asn1@0.2.3 
│ │   ├── assert-plus@1.0.0 
│ │   ├── bcrypt-pbkdf@1.0.1 
│ │   ├─┬ dashdash@1.14.1 
│ │   │ └── assert-plus@1.0.0 
│ │   ├── ecc-jsbn@0.1.1 
│ │   ├─┬ getpass@0.1.7 
│ │   │ └── assert-plus@1.0.0 
│ │   ├── jsbn@0.1.1 
│ │   └── tweetnacl@0.14.5 
│ ├── is-typedarray@1.0.0 
│ ├── isstream@0.1.2 
│ ├── json-stringify-safe@5.0.1 
│ ├─┬ mime-types@2.1.17 
│ │ └── mime-db@1.30.0 
│ ├── oauth-sign@0.8.2 
│ ├── performance-now@0.2.0 
│ ├── safe-buffer@5.1.1 
│ ├── stringstream@0.0.5 
│ ├─┬ tough-cookie@2.3.2 
│ │ └── punycode@1.4.1 
│ └── tunnel-agent@0.6.0 
├── sequence@3.0.0 
├─┬ truffle-contract@2.0.5 
│ ├─┬ ethjs-abi@0.1.8 
│ │ ├── bn.js@4.11.6 
│ │ ├── js-sha3@0.5.5 
│ │ └─┬ number-to-bn@1.7.0 
│ │   └─┬ strip-hex-prefix@1.0.0 
│ │     └── is-hex-prefixed@1.0.0 
│ ├─┬ truffle-blockchain-utils@0.0.3 
│ │ └── web3@0.20.1 
│ ├─┬ truffle-contract-schema@0.0.5 
│ │ └── crypto-js@3.1.9-1 
│ └─┬ web3@0.20.1 
│   └── bignumber.js@2.0.7  (git+https://github.com/frozeman/bignumber.js-nolookahead.git#57692b3ecfc98bbdd6b3a516cb2353652ea49934)
├── uuid@3.1.0 
├── wait-promise@0.4.1 
├─┬ web3@0.19.1 
│ ├── bignumber.js@4.0.4 
│ ├── crypto-js@3.1.8 
│ ├── utf8@2.1.2 
│ ├── xhr2@0.1.4 
│ └── xmlhttprequest@1.8.0 
├── UNMET PEER DEPENDENCY webpack@2 || 3
├─┬ xml2js@0.4.19 
│ ├── sax@1.2.4 
│ └── xmlbuilder@9.0.4 
└─┬ yarn@0.24.6 
  ├── camelcase@4.1.0 
  ├── cmd-shim@2.0.2 
  ├── death@1.1.0 
  ├── detect-indent@5.0.0 
  ├─┬ gunzip-maybe@1.4.1 
  │ ├─┬ browserify-zlib@0.1.4 
  │ │ └── pako@0.2.9 
  │ ├── is-deflate@1.0.0 
  │ ├── is-gzip@1.0.0 
  │ ├─┬ peek-stream@1.1.2 
  │ │ └─┬ duplexify@3.5.1 
  │ │   └── stream-shift@1.0.0 
  │ ├── pumpify@1.3.5 
  │ └── through2@2.0.3 
  ├── ini@1.3.4 
  ├─┬ inquirer@3.2.3 
  │ ├── ansi-escapes@2.0.0 
  │ ├─┬ chalk@2.1.0 
  │ │ ├─┬ ansi-styles@3.2.0 
  │ │ │ └─┬ color-convert@1.9.0 
  │ │ │   └── color-name@1.1.3 
  │ │ └─┬ supports-color@4.4.0 
  │ │   └── has-flag@2.0.0 
  │ ├─┬ cli-cursor@2.1.0 
  │ │ └─┬ restore-cursor@2.0.0 
  │ │   └─┬ onetime@2.0.1 
  │ │     └── mimic-fn@1.1.0 
  │ ├─┬ external-editor@2.0.4 
  │ │ ├── iconv-lite@0.4.18 
  │ │ ├── jschardet@1.5.1 
  │ │ └── tmp@0.0.31 
  │ ├── figures@2.0.0 
  │ ├── mute-stream@0.0.7 
  │ ├─┬ run-async@2.3.0 
  │ │ └── is-promise@2.1.0 
  │ ├── rx-lite@4.0.8 
  │ ├── rx-lite-aggregates@4.0.8 
  │ └─┬ strip-ansi@4.0.0 
  │   └── ansi-regex@3.0.0 
  ├── is-builtin-module@1.0.0 
  ├─┬ is-ci@1.0.10 
  │ └── ci-info@1.1.1 
  ├── leven@2.1.0 
  ├─┬ loud-rejection@1.6.0 
  │ ├─┬ currently-unhandled@0.4.1 
  │ │ └── array-find-index@1.0.2 
  │ └── signal-exit@3.0.2 
  ├─┬ node-emoji@1.8.1 
  │ └── lodash.toarray@4.4.0 
  ├── object-path@0.11.4 
  ├─┬ proper-lockfile@2.0.1 
  │ └── retry@0.10.1 
  ├── read@1.0.7 
  ├── request-capture-har@1.2.2 
  ├── rimraf@2.6.1 
  ├─┬ tar-fs@1.15.3 
  │ ├── chownr@1.0.1 
  │ └── pump@1.0.2 
  ├─┬ tar-stream@1.5.4 
  │ ├── bl@1.2.1 
  │ └── end-of-stream@1.4.0 
  ├── v8-compile-cache@1.1.0 
  └─┬ validate-npm-package-license@3.0.1 
    ├─┬ spdx-correct@1.0.2 
    │ └── spdx-license-ids@1.2.2 
    └── spdx-expression-parse@1.0.4 
</msg>
<status status="PASS" endtime="20170907 23:26:39.389" starttime="20170907 23:26:39.388"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${npm_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170907 23:26:39.389" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170907 23:26:39.389" starttime="20170907 23:26:39.389"></status>
</kw>
<status status="PASS" endtime="20170907 23:26:39.389" starttime="20170907 23:24:50.489"></status>
</kw>
<status status="PASS" endtime="20170907 23:26:39.389" starttime="20170907 23:24:50.488"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>rm -rf iexec-oracle/API/build</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${rm_result}</var>
</assign>
<msg timestamp="20170907 23:26:39.390" level="INFO">Starting process:
rm -rf iexec-oracle/API/build</msg>
<msg timestamp="20170907 23:26:39.392" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170907 23:26:39.401" level="INFO">Process completed.</msg>
<msg timestamp="20170907 23:26:39.402" level="INFO">${rm_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170907 23:26:39.402" starttime="20170907 23:26:39.390"></status>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<doc>Verifies that the given item is empty.</doc>
<arguments>
<arg>${rm_result.stderr}</arg>
</arguments>
<msg timestamp="20170907 23:26:39.403" level="INFO">Length is 0</msg>
<status status="PASS" endtime="20170907 23:26:39.403" starttime="20170907 23:26:39.402"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rm_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170907 23:26:39.405" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170907 23:26:39.405" starttime="20170907 23:26:39.404"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd iexec-oracle/API &amp;&amp; ./node_modules/.bin/truffle migrate</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${truffletest_result}</var>
</assign>
<msg timestamp="20170907 23:26:39.406" level="INFO">Starting process:
cd iexec-oracle/API &amp;&amp; ./node_modules/.bin/truffle migrate</msg>
<msg timestamp="20170907 23:26:39.410" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170907 23:26:57.977" level="INFO">Process completed.</msg>
<msg timestamp="20170907 23:26:57.977" level="INFO">${truffletest_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170907 23:26:57.977" starttime="20170907 23:26:39.405"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stderr}</arg>
</arguments>
<msg timestamp="20170907 23:26:57.979" level="INFO"></msg>
<status status="PASS" endtime="20170907 23:26:57.979" starttime="20170907 23:26:57.978"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
</arguments>
<msg timestamp="20170907 23:26:57.979" level="INFO">Compiling ./contracts/HelloWorld.sol...
Compiling ./contracts/IexecOracle.sol...
Compiling ./contracts/IexecOracleAPI.sol...
Compiling ./contracts/Migrations.sol...
Compiling ./contracts/SafeMath.sol...

Compilation warnings encountered:

/home/vagrant/iexecdev/iexec-node/tests/rf/iexec-oracle/API/contracts/IexecOracle.sol:15:30: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (msg.sender != a) throw;
                             ^---^
,/home/vagrant/iexecdev/iexec-node/tests/rf/iexec-oracle/API/contracts/IexecOracle.sol:24:7: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
      string name;
      ^---------^
,/home/vagrant/iexecdev/iexec-node/tests/rf/iexec-oracle/API/contracts/IexecOracle.sol:27:7: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
      string stdout;
      ^-----------^
,/home/vagrant/iexecdev/iexec-node/tests/rf/iexec-oracle/API/contracts/IexecOracle.sol:28:7: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
      string stderr;
      ^-----------^
,/home/vagrant/iexecdev/iexec-node/tests/rf/iexec-oracle/API/contracts/IexecOracle.sol:123:21: Warning: Unused local variable
    function submit(string appName, string param) {// param = commandline
                    ^------------^
,/home/vagrant/iexecdev/iexec-node/tests/rf/iexec-oracle/API/contracts/IexecOracle.sol:127:28: Warning: Unused local variable
    function submitAndWait(string appName, string param, string pattern) {
                           ^------------^
,/home/vagrant/iexecdev/iexec-node/tests/rf/iexec-oracle/API/contracts/IexecOracle.sol:127:44: Warning: Unused local variable
    function submitAndWait(string appName, string param, string pattern) {
                                           ^----------^

Writing artifacts to ./build/contracts

Using network 'development'.

Running migration: 1_initial_migration.js
  Deploying Migrations...
  ... 0x137f5364714feb3a8482e07046d8bb92833776365b8af42cda1d4c531cc9d9d5
  Migrations: 0x540043d510ccee07111e1ee1c2ce665f7f47dd23
Saving successful migration to network...
  ... 0xdedced7b8d67139ae1d6f07d6ec7a1988f5331bbbfd6db838ef9359f1436a25d
Saving artifacts...
Running migration: 2_deploy_contracts.js
  Deploying IexecOracle...
  ... 0x3e3913560c4c05e8a9c8329ba4afe98fd9753cd38f882e4b6c649d845a671fb0
  IexecOracle: 0x59e2e92ffaee0368d5d3ddbf817527c01b0b0285
IexecOracle deployed at address :0x59e2e92ffaee0368d5d3ddbf817527c01b0b0285
  Deploying HelloWorld...
  ... 0x011599afce1c58d1b730c90bbebf47f67c2fd5357da13eb4a989e0563310046f
  HelloWorld: 0x280c2eb535d3ea1c09e1d7e04e23e07420f161db
HelloWorld deployed at address :0x280c2eb535d3ea1c09e1d7e04e23e07420f161db
Saving successful migration to network...
  ... 0x4130f88513ef972490bc64d3aee855e7503d54ecf1e23a1d01f1d4855725e7d1
Saving artifacts...</msg>
<status status="PASS" endtime="20170907 23:26:57.980" starttime="20170907 23:26:57.979"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${truffletest_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170907 23:26:57.980" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170907 23:26:57.980" starttime="20170907 23:26:57.980"></status>
</kw>
<status status="PASS" endtime="20170907 23:26:57.980" starttime="20170907 23:24:50.487"></status>
</kw>
<kw name="Iexec Oracle Set Contract Address In Bridge" library="IexecOracle">
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>iexec-oracle/API/build/contracts/IexecOracle.json</arg>
</arguments>
<assign>
<var>${iexecOracle_json_content}</var>
</assign>
<msg timestamp="20170907 23:26:57.981" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/iexec-oracle/API/build/contracts/IexecOracle.json"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/iexec-oracle/API/build/contracts/IexecOracle.json&lt;/a&gt;'.</msg>
<msg timestamp="20170907 23:26:57.982" level="INFO">${iexecOracle_json_content} = {
  "contract_name": "IexecOracle",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "workUid",
          "type": "string"
        }
      ],
      "name": "toDe...</msg>
<status status="PASS" endtime="20170907 23:26:57.983" starttime="20170907 23:26:57.981"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${iexecOracle_json_content}</arg>
<arg>"address": "(?P&lt;smartContractAddress&gt;.*)",</arg>
<arg>smartContractAddress</arg>
</arguments>
<assign>
<var>@{smartContractAddress}</var>
</assign>
<msg timestamp="20170907 23:26:57.984" level="INFO">@{smartContractAddress} = [ 0x59e2e92ffaee0368d5d3ddbf817527c01b0b0285 ]</msg>
<status status="PASS" endtime="20170907 23:26:57.984" starttime="20170907 23:26:57.983"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>@{smartContractAddress}</arg>
</arguments>
<msg timestamp="20170907 23:26:57.984" level="INFO">0x59e2e92ffaee0368d5d3ddbf817527c01b0b0285</msg>
<status status="PASS" endtime="20170907 23:26:57.984" starttime="20170907 23:26:57.984"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>@{smartContractAddress}[0]</arg>
</arguments>
<msg timestamp="20170907 23:26:57.984" level="INFO">0x59e2e92ffaee0368d5d3ddbf817527c01b0b0285</msg>
<status status="PASS" endtime="20170907 23:26:57.985" starttime="20170907 23:26:57.984"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${IEXEC_ORACLE_SM_ADDRESS}</arg>
<arg>@{smartContractAddress}[0]</arg>
</arguments>
<msg timestamp="20170907 23:26:57.985" level="INFO">${IEXEC_ORACLE_SM_ADDRESS} = 0x59e2e92ffaee0368d5d3ddbf817527c01b0b0285</msg>
<status status="PASS" endtime="20170907 23:26:57.985" starttime="20170907 23:26:57.985"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>sed -i 's/.*"ContractAddress":.*/"ContractAddress":\"${IEXEC_ORACLE_SM_ADDRESS}\"/g' iexec-oracle/Bridge/config.json</arg>
</arguments>
<msg timestamp="20170907 23:26:57.986" level="INFO">Running command 'sed -i 's/.*"ContractAddress":.*/"ContractAddress":"0x59e2e92ffaee0368d5d3ddbf817527c01b0b0285"/g' iexec-oracle/Bridge/config.json 2&gt;&amp;1'.</msg>
<status status="PASS" endtime="20170907 23:26:57.996" starttime="20170907 23:26:57.985"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>sed -i 's/.*return IexecOracle.at(.*/return IexecOracle.at(\"${IEXEC_ORACLE_SM_ADDRESS}\")/g' iexec-oracle/API/test/rf/*</arg>
</arguments>
<msg timestamp="20170907 23:26:57.998" level="INFO">Running command 'sed -i 's/.*return IexecOracle.at(.*/return IexecOracle.at("0x59e2e92ffaee0368d5d3ddbf817527c01b0b0285")/g' iexec-oracle/API/test/rf/* 2&gt;&amp;1'.</msg>
<status status="PASS" endtime="20170907 23:26:58.088" starttime="20170907 23:26:57.996"></status>
</kw>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>iexec-oracle/API/build/contracts/HelloWorld.json</arg>
</arguments>
<assign>
<var>${helloworld_json_content}</var>
</assign>
<msg timestamp="20170907 23:26:58.089" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/iexec-oracle/API/build/contracts/HelloWorld.json"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/iexec-oracle/API/build/contracts/HelloWorld.json&lt;/a&gt;'.</msg>
<msg timestamp="20170907 23:26:58.092" level="INFO">${helloworld_json_content} = {
  "contract_name": "HelloWorld",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "workUid",
          "type": "string"
        }
      ],
      "name": "statu...</msg>
<status status="PASS" endtime="20170907 23:26:58.092" starttime="20170907 23:26:58.089"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${helloworld_json_content}</arg>
<arg>"address": "(?P&lt;smartContractAddress&gt;.*)",</arg>
<arg>smartContractAddress</arg>
</arguments>
<assign>
<var>@{smartContractAddress}</var>
</assign>
<msg timestamp="20170907 23:26:58.093" level="INFO">@{smartContractAddress} = [ 0x280c2eb535d3ea1c09e1d7e04e23e07420f161db ]</msg>
<status status="PASS" endtime="20170907 23:26:58.093" starttime="20170907 23:26:58.092"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>@{smartContractAddress}</arg>
</arguments>
<msg timestamp="20170907 23:26:58.093" level="INFO">0x280c2eb535d3ea1c09e1d7e04e23e07420f161db</msg>
<status status="PASS" endtime="20170907 23:26:58.093" starttime="20170907 23:26:58.093"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>@{smartContractAddress}[0]</arg>
</arguments>
<msg timestamp="20170907 23:26:58.094" level="INFO">0x280c2eb535d3ea1c09e1d7e04e23e07420f161db</msg>
<status status="PASS" endtime="20170907 23:26:58.094" starttime="20170907 23:26:58.093"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${HELLO_WORLD_SM_ADDRESS}</arg>
<arg>@{smartContractAddress}[0]</arg>
</arguments>
<msg timestamp="20170907 23:26:58.094" level="INFO">${HELLO_WORLD_SM_ADDRESS} = 0x280c2eb535d3ea1c09e1d7e04e23e07420f161db</msg>
<status status="PASS" endtime="20170907 23:26:58.094" starttime="20170907 23:26:58.094"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>sed -i 's/.*return HelloWorld.at(.*/return HelloWorld.at(\"${HELLO_WORLD_SM_ADDRESS}\")/g' iexec-oracle/API/test/rf/*</arg>
</arguments>
<msg timestamp="20170907 23:26:58.096" level="INFO">Running command 'sed -i 's/.*return HelloWorld.at(.*/return HelloWorld.at("0x280c2eb535d3ea1c09e1d7e04e23e07420f161db")/g' iexec-oracle/API/test/rf/* 2&gt;&amp;1'.</msg>
<status status="PASS" endtime="20170907 23:26:58.216" starttime="20170907 23:26:58.094"></status>
</kw>
<status status="PASS" endtime="20170907 23:26:58.216" starttime="20170907 23:26:57.980"></status>
</kw>
<kw name="Iexec Oracle Set XtremWeb Config In Bridge" library="IexecOracle">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${XWCONFIGURE.VALUES.XWSERVER}</arg>
</arguments>
<msg timestamp="20170907 23:26:58.217" level="INFO">localhost</msg>
<status status="PASS" endtime="20170907 23:26:58.217" starttime="20170907 23:26:58.217"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>sed -i "s/.*const LOCALHOSTNAME = .*/const LOCALHOSTNAME = '${XWCONFIGURE.VALUES.XWSERVER}';/g" iexec-oracle/Bridge/xwhep.js</arg>
</arguments>
<msg timestamp="20170907 23:26:58.218" level="INFO">Running command 'sed -i "s/.*const LOCALHOSTNAME = .*/const LOCALHOSTNAME = 'localhost';/g" iexec-oracle/Bridge/xwhep.js 2&gt;&amp;1'.</msg>
<status status="PASS" endtime="20170907 23:26:58.232" starttime="20170907 23:26:58.217"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${XWCONFIGURE.VALUES.HTTPSPORT}</arg>
</arguments>
<msg timestamp="20170907 23:26:58.233" level="INFO">9443</msg>
<status status="PASS" endtime="20170907 23:26:58.233" starttime="20170907 23:26:58.233"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>sed -i "s/.*const LOCALHOSTPORT = .*/const LOCALHOSTPORT = ${XWCONFIGURE.VALUES.HTTPSPORT};/g" iexec-oracle/Bridge/xwhep.js</arg>
</arguments>
<msg timestamp="20170907 23:26:58.235" level="INFO">Running command 'sed -i "s/.*const LOCALHOSTPORT = .*/const LOCALHOSTPORT = 9443;/g" iexec-oracle/Bridge/xwhep.js 2&gt;&amp;1'.</msg>
<status status="PASS" endtime="20170907 23:26:58.251" starttime="20170907 23:26:58.234"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${XWCONFIGURE.VALUES.XWADMINLOGIN}</arg>
</arguments>
<msg timestamp="20170907 23:26:58.252" level="INFO">admin</msg>
<status status="PASS" endtime="20170907 23:26:58.253" starttime="20170907 23:26:58.252"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>sed -i "s/.*const LOGIN = .*/const LOGIN = '${XWCONFIGURE.VALUES.XWADMINLOGIN}';/g" iexec-oracle/Bridge/xwhep.js</arg>
</arguments>
<msg timestamp="20170907 23:26:58.255" level="INFO">Running command 'sed -i "s/.*const LOGIN = .*/const LOGIN = 'admin';/g" iexec-oracle/Bridge/xwhep.js 2&gt;&amp;1'.</msg>
<status status="PASS" endtime="20170907 23:26:58.264" starttime="20170907 23:26:58.253"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${XWCONFIGURE.VALUES.XWADMINPASSWORD}</arg>
</arguments>
<msg timestamp="20170907 23:26:58.266" level="INFO">admin</msg>
<status status="PASS" endtime="20170907 23:26:58.266" starttime="20170907 23:26:58.265"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>sed -i "s/.*const PASSWD = .*/const PASSWD = '${XWCONFIGURE.VALUES.XWADMINPASSWORD}';/g" iexec-oracle/Bridge/xwhep.js</arg>
</arguments>
<msg timestamp="20170907 23:26:58.268" level="INFO">Running command 'sed -i "s/.*const PASSWD = .*/const PASSWD = 'admin';/g" iexec-oracle/Bridge/xwhep.js 2&gt;&amp;1'.</msg>
<status status="PASS" endtime="20170907 23:26:58.277" starttime="20170907 23:26:58.266"></status>
</kw>
<status status="PASS" endtime="20170907 23:26:58.278" starttime="20170907 23:26:58.216"></status>
</kw>
<kw name="Start Bridge" library="IexecOracle">
<kw name="Remove File" library="OperatingSystem">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>iexec-oracle/Bridge/bridge.log</arg>
</arguments>
<msg timestamp="20170907 23:26:58.281" html="yes" level="INFO">File '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/iexec-oracle/Bridge/bridge.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/iexec-oracle/Bridge/bridge.log&lt;/a&gt;' does not exist.</msg>
<status status="PASS" endtime="20170907 23:26:58.281" starttime="20170907 23:26:58.279"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>cd iexec-oracle/Bridge &amp;&amp; npm run devbridgelog</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${created_process}</var>
</assign>
<msg timestamp="20170907 23:26:58.282" level="INFO">Starting process:
cd iexec-oracle/Bridge &amp;&amp; npm run devbridgelog</msg>
<msg timestamp="20170907 23:26:58.287" level="INFO">${created_process} = 12</msg>
<status status="PASS" endtime="20170907 23:26:58.287" starttime="20170907 23:26:58.281"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${BRIDGE_PROCESS}</arg>
<arg>${created_process}</arg>
</arguments>
<msg timestamp="20170907 23:26:58.288" level="INFO">${BRIDGE_PROCESS} = 12</msg>
<status status="PASS" endtime="20170907 23:26:58.288" starttime="20170907 23:26:58.287"></status>
</kw>
<status status="PASS" endtime="20170907 23:26:58.288" starttime="20170907 23:26:58.278"></status>
</kw>
<status status="PASS" endtime="20170907 23:26:58.288" starttime="20170907 23:22:10.986"></status>
</kw>
<test id="s1-s1-t1" name="Test HelloWorld Iexec">
<kw name="Get User Address" library="IexceOracleSmartContract">
<assign>
<var>${user}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd iexec-oracle/API &amp;&amp; ./node_modules/.bin/truffle test test/rf/getUserAddress.js</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${truffletest_result}</var>
</assign>
<msg timestamp="20170907 23:26:58.291" level="INFO">Starting process:
cd iexec-oracle/API &amp;&amp; ./node_modules/.bin/truffle test test/rf/getUserAddress.js</msg>
<msg timestamp="20170907 23:26:58.296" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170907 23:27:02.765" level="INFO">Process completed.</msg>
<msg timestamp="20170907 23:27:02.766" level="INFO">${truffletest_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170907 23:27:02.766" starttime="20170907 23:26:58.291"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stderr}</arg>
</arguments>
<msg timestamp="20170907 23:27:02.767" level="INFO"></msg>
<status status="PASS" endtime="20170907 23:27:02.767" starttime="20170907 23:27:02.766"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
</arguments>
<msg timestamp="20170907 23:27:02.768" level="INFO">Using network 'development'.

IexecOracle deployed at address :0xc173d59f8d2ec42f74a378369d86e6ca033db8ea
HelloWorld deployed at address :0x020572df1ef2fd63b24f95132e6e819c0438d177

[0m[0m
[0m  Contract: IexecOracle[0m
BEGIN_LOG0x0d8fdb4933a1a5af5bc7a8e344dc0d57d0be37fbEND_LOG
  [32m  ✓[0m[90m get a creator[0m


[92m [0m[32m 1 passing[0m[90m (112ms)[0m
</msg>
<status status="PASS" endtime="20170907 23:27:02.768" starttime="20170907 23:27:02.767"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${truffletest_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170907 23:27:02.769" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170907 23:27:02.769" starttime="20170907 23:27:02.768"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
<arg>BEGIN_LOG(?P&lt;address&gt;.*)END_LOG</arg>
<arg>address</arg>
</arguments>
<assign>
<var>@{address}</var>
</assign>
<msg timestamp="20170907 23:27:02.770" level="INFO">@{address} = [ 0x0d8fdb4933a1a5af5bc7a8e344dc0d57d0be37fb ]</msg>
<status status="PASS" endtime="20170907 23:27:02.770" starttime="20170907 23:27:02.769"></status>
</kw>
<msg timestamp="20170907 23:27:02.771" level="INFO">${user} = 0x0d8fdb4933a1a5af5bc7a8e344dc0d57d0be37fb</msg>
<status status="PASS" endtime="20170907 23:27:02.771" starttime="20170907 23:26:58.291"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${USER}</arg>
<arg>${user}</arg>
</arguments>
<msg timestamp="20170907 23:27:02.772" level="INFO">${USER} = 0x0d8fdb4933a1a5af5bc7a8e344dc0d57d0be37fb</msg>
<status status="PASS" endtime="20170907 23:27:02.772" starttime="20170907 23:27:02.771"></status>
</kw>
<kw name="Get Creator Address" library="IexceOracleSmartContract">
<assign>
<var>${creator}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd iexec-oracle/API &amp;&amp; ./node_modules/.bin/truffle test test/rf/getCreatorAddress.js</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${truffletest_result}</var>
</assign>
<msg timestamp="20170907 23:27:02.774" level="INFO">Starting process:
cd iexec-oracle/API &amp;&amp; ./node_modules/.bin/truffle test test/rf/getCreatorAddress.js</msg>
<msg timestamp="20170907 23:27:02.778" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170907 23:27:06.741" level="INFO">Process completed.</msg>
<msg timestamp="20170907 23:27:06.741" level="INFO">${truffletest_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170907 23:27:06.741" starttime="20170907 23:27:02.774"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stderr}</arg>
</arguments>
<msg timestamp="20170907 23:27:06.742" level="INFO"></msg>
<status status="PASS" endtime="20170907 23:27:06.742" starttime="20170907 23:27:06.742"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
</arguments>
<msg timestamp="20170907 23:27:06.743" level="INFO">Using network 'development'.

IexecOracle deployed at address :0x6c108b4a26108776d22eda26c944cd3f659c90dc
HelloWorld deployed at address :0xd98cb558bf304a7a758c7759d5003873db2d4694

[0m[0m
[0m  Contract: IexecOracle[0m
BEGIN_LOG0xd2bd96d5721210b6389b7dc03dc8f96c962197f4END_LOG
  [32m  ✓[0m[90m get a creator[0m


[92m [0m[32m 1 passing[0m[90m (65ms)[0m
</msg>
<status status="PASS" endtime="20170907 23:27:06.743" starttime="20170907 23:27:06.743"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${truffletest_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170907 23:27:06.743" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170907 23:27:06.744" starttime="20170907 23:27:06.743"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
<arg>BEGIN_LOG(?P&lt;address&gt;.*)END_LOG</arg>
<arg>address</arg>
</arguments>
<assign>
<var>@{address}</var>
</assign>
<msg timestamp="20170907 23:27:06.744" level="INFO">@{address} = [ 0xd2bd96d5721210b6389b7dc03dc8f96c962197f4 ]</msg>
<status status="PASS" endtime="20170907 23:27:06.744" starttime="20170907 23:27:06.744"></status>
</kw>
<msg timestamp="20170907 23:27:06.745" level="INFO">${creator} = 0xd2bd96d5721210b6389b7dc03dc8f96c962197f4</msg>
<status status="PASS" endtime="20170907 23:27:06.745" starttime="20170907 23:27:02.773"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${CREATOR}</arg>
<arg>${creator}</arg>
</arguments>
<msg timestamp="20170907 23:27:06.746" level="INFO">${CREATOR} = 0xd2bd96d5721210b6389b7dc03dc8f96c962197f4</msg>
<status status="PASS" endtime="20170907 23:27:06.746" starttime="20170907 23:27:06.745"></status>
</kw>
<kw name="XWSENDAPPCommand" library="XWClient">
<doc>Usage : SENDAPP appName appType cpuType osName URI | UID : inserts/updates an application; URI or UID points to binary file ; application name must be the first parameter</doc>
<arguments>
<arg>echo</arg>
<arg>DEPLOYABLE</arg>
<arg>LINUX</arg>
<arg>AMD64</arg>
<arg>/bin/echo</arg>
</arguments>
<assign>
<var>${app_uid}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd ${DIST_XWHEP_PATH}/bin &amp;&amp; ./xwsendapp ${appName} ${appType} ${cpuType} ${osName} ${uri-udi}</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${cmd_result}</var>
</assign>
<msg timestamp="20170907 23:27:06.748" level="INFO">Starting process:
cd /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin &amp;&amp; ./xwsendapp echo DEPLOYABLE LINUX AMD64 /bin/echo</msg>
<msg timestamp="20170907 23:27:06.751" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170907 23:27:07.816" level="INFO">Process completed.</msg>
<msg timestamp="20170907 23:27:07.817" level="INFO">${cmd_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170907 23:27:07.817" starttime="20170907 23:27:06.747"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stderr}</arg>
</arguments>
<msg timestamp="20170907 23:27:07.819" level="INFO"></msg>
<status status="PASS" endtime="20170907 23:27:07.819" starttime="20170907 23:27:07.818"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
</arguments>
<msg timestamp="20170907 23:27:07.820" level="INFO">xw://vagrant-ubuntu-trusty-64/0a30541a-3594-4bb9-b61d-60925723ccb4</msg>
<status status="PASS" endtime="20170907 23:27:07.820" starttime="20170907 23:27:07.819"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${cmd_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170907 23:27:07.820" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170907 23:27:07.820" starttime="20170907 23:27:07.820"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
<arg>-36</arg>
</arguments>
<assign>
<var>${uid}</var>
</assign>
<msg timestamp="20170907 23:27:07.821" level="INFO">${uid} = 0a30541a-3594-4bb9-b61d-60925723ccb4</msg>
<status status="PASS" endtime="20170907 23:27:07.821" starttime="20170907 23:27:07.820"></status>
</kw>
<msg timestamp="20170907 23:27:07.821" level="INFO">${app_uid} = 0a30541a-3594-4bb9-b61d-60925723ccb4</msg>
<status status="PASS" endtime="20170907 23:27:07.821" starttime="20170907 23:27:06.747"></status>
</kw>
<kw name="Count From Apps Where Uid" library="XWServer">
<arguments>
<arg>${app_uid}</arg>
<arg>1</arg>
</arguments>
<kw name="Count From Table Where Uid" library="MySql">
<arguments>
<arg>apps</arg>
<arg>${uid}</arg>
<arg>${countExpected}</arg>
</arguments>
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170907 23:27:07.823" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170907 23:27:07.824" starttime="20170907 23:27:07.823"></status>
</kw>
<status status="PASS" endtime="20170907 23:27:07.825" starttime="20170907 23:27:07.823"></status>
</kw>
<kw name="Row Count Is Equal To X" library="DatabaseLibrary">
<doc>Check if the number of rows returned from `selectStatement` is equal to the value submitted. If not, then this</doc>
<arguments>
<arg>SELECT * FROM ${table} WHERE uid = '${uid}'</arg>
<arg>${countExpected}</arg>
</arguments>
<msg timestamp="20170907 23:27:07.825" level="INFO">Executing : Row Count Is Equal To X  |  SELECT * FROM apps WHERE uid = '0a30541a-3594-4bb9-b61d-60925723ccb4'  |  1 </msg>
<msg timestamp="20170907 23:27:07.825" level="INFO">Executing : Row Count  |  SELECT * FROM apps WHERE uid = '0a30541a-3594-4bb9-b61d-60925723ccb4' </msg>
<status status="PASS" endtime="20170907 23:27:07.827" starttime="20170907 23:27:07.825"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170907 23:27:07.828" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170907 23:27:07.828" starttime="20170907 23:27:07.828"></status>
</kw>
<status status="PASS" endtime="20170907 23:27:07.828" starttime="20170907 23:27:07.827"></status>
</kw>
<status status="PASS" endtime="20170907 23:27:07.828" starttime="20170907 23:27:07.822"></status>
</kw>
<status status="PASS" endtime="20170907 23:27:07.828" starttime="20170907 23:27:07.821"></status>
</kw>
<kw name="Count From Works" library="XWServer">
<arguments>
<arg>0</arg>
</arguments>
<kw name="Count From Table" library="MySql">
<arguments>
<arg>works</arg>
<arg>${countExpected}</arg>
</arguments>
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170907 23:27:07.830" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170907 23:27:07.832" starttime="20170907 23:27:07.830"></status>
</kw>
<status status="PASS" endtime="20170907 23:27:07.832" starttime="20170907 23:27:07.830"></status>
</kw>
<kw name="Row Count Is Equal To X" library="DatabaseLibrary">
<doc>Check if the number of rows returned from `selectStatement` is equal to the value submitted. If not, then this</doc>
<arguments>
<arg>SELECT * FROM ${table}</arg>
<arg>${countExpected}</arg>
</arguments>
<msg timestamp="20170907 23:27:07.833" level="INFO">Executing : Row Count Is Equal To X  |  SELECT * FROM works  |  0 </msg>
<msg timestamp="20170907 23:27:07.833" level="INFO">Executing : Row Count  |  SELECT * FROM works </msg>
<status status="PASS" endtime="20170907 23:27:07.836" starttime="20170907 23:27:07.833"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170907 23:27:07.836" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170907 23:27:07.837" starttime="20170907 23:27:07.836"></status>
</kw>
<status status="PASS" endtime="20170907 23:27:07.837" starttime="20170907 23:27:07.836"></status>
</kw>
<status status="PASS" endtime="20170907 23:27:07.837" starttime="20170907 23:27:07.829"></status>
</kw>
<status status="PASS" endtime="20170907 23:27:07.837" starttime="20170907 23:27:07.829"></status>
</kw>
<kw name="RegisterEcho" library="HelloWorldSmartContract">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd iexec-oracle/API &amp;&amp; ./node_modules/.bin/truffle test test/rf/registerHelloWorldTest.js</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${truffletest_result}</var>
</assign>
<msg timestamp="20170907 23:27:07.838" level="INFO">Starting process:
cd iexec-oracle/API &amp;&amp; ./node_modules/.bin/truffle test test/rf/registerHelloWorldTest.js</msg>
<msg timestamp="20170907 23:27:07.842" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170907 23:27:11.217" level="INFO">Process completed.</msg>
<msg timestamp="20170907 23:27:11.218" level="INFO">${truffletest_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170907 23:27:11.218" starttime="20170907 23:27:07.838"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stderr}</arg>
</arguments>
<msg timestamp="20170907 23:27:11.219" level="INFO"></msg>
<status status="PASS" endtime="20170907 23:27:11.219" starttime="20170907 23:27:11.218"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
</arguments>
<msg timestamp="20170907 23:27:11.220" level="INFO">Using network 'development'.

IexecOracle deployed at address :0x2643be0cc6f7b46e8ba4202ea8d0fd1df86978c0
HelloWorld deployed at address :0x29ab904d2db25be90733908f2442dfecef3d6a2b

[0m[0m
[0m  Contract: HelloWorld[0m
BEGIN_LOG
{ tx: '0xb4b5a9fa98ebbae6795fa9490e2b9c5594daf1b0f53ac0590c307936015a28c6',
  receipt: 
   { transactionHash: '0xb4b5a9fa98ebbae6795fa9490e2b9c5594daf1b0f53ac0590c307936015a28c6',
     transactionIndex: 0,
     blockHash: '0x399ff692d931fef9c9bdec32f72cb29141e02c7e2efacce4d4b741073fc80585',
     blockNumber: 21,
     gasUsed: 28607,
     cumulativeGasUsed: 28607,
     contractAddress: null,
     logs: [ [Object] ] },
  logs: [] }
END_LOG
  [32m  ✓[0m[90m should register a work[0m[31m (82ms)[0m


[92m [0m[32m 1 passing[0m[90m (162ms)[0m
</msg>
<status status="PASS" endtime="20170907 23:27:11.220" starttime="20170907 23:27:11.219"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${truffletest_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170907 23:27:11.220" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170907 23:27:11.220" starttime="20170907 23:27:11.220"></status>
</kw>
<status status="PASS" endtime="20170907 23:27:11.221" starttime="20170907 23:27:07.838"></status>
</kw>
<kw name="Get Bridge Log" library="IexecOracle">
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>iexec-oracle/Bridge/bridge.log</arg>
</arguments>
<assign>
<var>${bridge_log}</var>
</assign>
<msg timestamp="20170907 23:27:11.222" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/iexec-oracle/Bridge/bridge.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/iexec-oracle/Bridge/bridge.log&lt;/a&gt;'.</msg>
<msg timestamp="20170907 23:27:11.224" level="INFO">${bridge_log} = [33m[nodemon] 1.12.0[39m
[33m[nodemon] to restart at any time, enter `rs`[39m
[33m[nodemon] watching: *.*[39m
[32m[nodemon] starting `babel-node ./bridge.js`[39m
start TruffleContract {
  cons...</msg>
<status status="PASS" endtime="20170907 23:27:11.224" starttime="20170907 23:27:11.222"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${bridge_log}</arg>
</arguments>
<msg timestamp="20170907 23:27:11.224" level="INFO">[33m[nodemon] 1.12.0[39m
[33m[nodemon] to restart at any time, enter `rs`[39m
[33m[nodemon] watching: *.*[39m
[32m[nodemon] starting `babel-node ./bridge.js`[39m
start TruffleContract {
  constructor: 
   { [Function: TruffleContract]
     _static_methods: 
      { setProvider: [Function: setProvider],
        new: [Function: new],
        at: [Function: at],
        deployed: [Function: deployed],
        defaults: [Function: defaults],
        hasNetwork: [Function: hasNetwork],
        isDeployed: [Function: isDeployed],
        detectNetwork: [Function: detectNetwork],
        setNetwork: [Function: setNetwork],
        resetAddress: [Function: resetAddress],
        link: [Function: link],
        clone: [Function: clone],
        addProp: [Function: addProp],
        toJSON: [Function: toJSON] },
     _properties: 
      { contract_name: [Object],
        abi: [Object],
        network: [Function: network],
        networks: [Function: networks],
        address: [Object],
        links: [Function: links],
        events: [Function: events],
        binary: [Function: binary],
        unlinked_binary: [Object],
        schema_version: [Function: schema_version],
        updated_at: [Function: updated_at] },
     _property_values: {},
     _json: 
      { contract_name: 'Contract',
        default_network: undefined,
        abi: [Object],
        unlinked_binary: undefined,
        networks: [Object],
        schema_version: '0.0.5',
        updated_at: 1504826825515 },
     setProvider: [Function: bound setProvider],
     new: [Function: bound new],
     at: [Function: bound at],
     deployed: [Function: bound deployed],
     defaults: [Function: bound defaults],
     hasNetwork: [Function: bound hasNetwork],
     isDeployed: [Function: bound isDeployed],
     detectNetwork: [Function: bound detectNetwork],
     setNetwork: [Function: bound setNetwork],
     resetAddress: [Function: bound resetAddress],
     link: [Function: bound link],
     clone: [Function: bound clone],
     addProp: [Function: bound addProp],
     toJSON: [Function: bound toJSON],
     web3: 
      Web3 {
        _requestManager: [Object],
        currentProvider: [Object],
        eth: [Object],
        db: [Object],
        shh: [Object],
        net: [Object],
        personal: [Object],
        bzz: [Object],
        settings: [Object],
        version: [Object],
        providers: [Object],
        _extend: [Object] },
     class_defaults: {},
     currentProvider: HttpProvider { host: 'http://localhost:8545', timeout: 0 } },
  abi: 
   [ { constant: false,
       inputs: [Object],
       name: 'toDelete',
       outputs: [],
       payable: false,
       type: 'function' },
     { constant: false,
       inputs: [Object],
       name: 'stdoutCallback',
       outputs: [],
       payable: false,
       type: 'function' },
     { constant: true,
       inputs: [Object],
       name: 'getWorkTimestamp',
       outputs: [Object],
       payable: false,
       type: 'function' },
     { constant: false,
       inputs: [Object],
       name: 'submitAndWait',
       outputs: [],
       payable: false,
       type: 'function' },
     { constant: false,
       inputs: [Object],
       name: 'setParamCallback',
       outputs: [],
       payable: false,
       type: 'function' },
     { constant: false,
       inputs: [],
       name: 'registerSmartContractAndCreator',
       outputs: [],
       payable: false,
       type: 'function' },
     { constant: true,
       inputs: [Object],
       name: 'getWorkName',
       outputs: [Object],
       payable: false,
       type: 'function' },
     { constant: false,
       inputs: [Object],
       name: 'statusCallback',
       outputs: [],
       payable: false,
       type: 'function' },
     { constant: false,
       inputs: [Object],
       name: 'setPendingCallback',
       outputs: [],
       payable: false,
       type: 'function' },
     { constant: false,
       inputs: [Object],
       name: 'registerCallback',
       outputs: [],
       payable: false,
       type: 'function' },
     { constant: true,
       inputs: [Object],
       name: 'getWorkStderr',
       outputs: [Object],
       payable: false,
       type: 'function' },
     { constant: true,
       inputs: [Object],
       name: 'getCreator',
       outputs: [Object],
       payable: false,
       type: 'function' },
     { constant: false,
       inputs: [Object],
       name: 'submit',
       outputs: [],
       payable: false,
       type: 'function' },
     { constant: true,
       inputs: [Object],
       name: 'getWorkStdout',
       outputs: [Object],
       payable: false,
       type: 'function' },
     { constant: true,
       inputs: [Object],
       name: 'getWork',
       outputs: [Object],
       payable: false,
       type: 'function' },
     { constant: false,
       inputs: [Object],
       name: 'waitResult',
       outputs: [],
       payable: false,
       type: 'function' },
     { constant: true,
       inputs: [],
       name: 'bridge',
       outputs: [Object],
       payable: false,
       type: 'function' },
     { constant: false,
       inputs: [Object],
       name: 'status',
       outputs: [],
       payable: false,
       type: 'function' },
     { constant: false,
       inputs: [Object],
       name: 'setParam',
       outputs: [],
       payable: false,
       type: 'function' },
     { constant: false,
       inputs: [Object],
       name: 'register',
       outputs: [],
       payable: false,
       type: 'function' },
     { constant: true,
       inputs: [Object],
       name: 'getWorkStatus',
       outputs: [Object],
       payable: false,
       type: 'function' },
     { constant: false,
       inputs: [Object],
       name: 'stdout',
       outputs: [],
       payable: false,
       type: 'function' },
     { constant: false,
       inputs: [Object],
       name: 'setPending',
       outputs: [],
       payable: false,
       type: 'function' },
     { inputs: [], payable: false, type: 'constructor' },
     { anonymous: false,
       inputs: [Object],
       name: 'Launch',
       type: 'event' },
     { anonymous: false,
       inputs: [Object],
       name: 'CallbackEvent',
       type: 'event' } ],
  contract: 
   Contract {
     _eth: 
      Eth {
        _requestManager: [Object],
        getBalance: [Object],
        getStorageAt: [Object],
        getCode: [Object],
        getBlock: [Object],
        getUncle: [Object],
        getCompilers: [Object],
        getBlockTransactionCount: [Object],
        getBlockUncleCount: [Object],
        getTransaction: [Object],
        getTransactionFromBlock: [Object],
        getTransactionReceipt: [Object],
        getTransactionCount: [Object],
        call: [Object],
        estimateGas: [Object],
        sendRawTransaction: [Object],
        signTransaction: [Object],
        sendTransaction: [Object],
        sign: [Object],
        compile: [Object],
        submitWork: [Object],
        getWork: [Object],
        coinbase: [Getter],
        getCoinbase: [Object],
        mining: [Getter],
        getMining: [Object],
        hashrate: [Getter],
        getHashrate: [Object],
        syncing: [Getter],
        getSyncing: [Object],
        gasPrice: [Getter],
        getGasPrice: [Object],
        accounts: [Getter],
        getAccounts: [Object],
        blockNumber: [Getter],
        getBlockNumber: [Object],
        protocolVersion: [Getter],
        getProtocolVersion: [Object],
        iban: [Object],
        sendIBANTransaction: [Function: bound transfer] },
     transactionHash: null,
     address: '0x59e2e92ffaee0368d5d3ddbf817527c01b0b0285',
     abi: 
      [ [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object] ],
     toDelete: 
      { [Function: bound ]
        request: [Function: bound ],
        call: [Function: bound ],
        sendTransaction: [Function: bound ],
        estimateGas: [Function: bound ],
        getData: [Function: bound ],
        string: [Circular] },
     stdoutCallback: 
      { [Function: bound ]
        request: [Function: bound ],
        call: [Function: bound ],
        sendTransaction: [Function: bound ],
        estimateGas: [Function: bound ],
        getData: [Function: bound ],
        'address,address,string,string,string': [Circular] },
     getWorkTimestamp: 
      { [Function: bound ]
        request: [Function: bound ],
        call: [Function: bound ],
        sendTransaction: [Function: bound ],
        estimateGas: [Function: bound ],
        getData: [Function: bound ],
        'address,address,string': [Circular] },
     submitAndWait: 
      { [Function: bound ]
        request: [Function: bound ],
        call: [Function: bound ],
        sendTransaction: [Function: bound ],
        estimateGas: [Function: bound ],
        getData: [Function: bound ],
        'string,string,string': [Circular] },
     setParamCallback: 
      { [Function: bound ]
        request: [Function: bound ],
        call: [Function: bound ],
        sendTransaction: [Function: bound ],
        estimateGas: [Function: bound ],
        getData: [Function: bound ],
        'address,address,string,string': [Circular] },
     registerSmartContractAndCreator: 
      { [Function: bound ]
        request: [Function: bound ],
        call: [Function: bound ],
        sendTransaction: [Function: bound ],
        estimateGas: [Function: bound ],
        getData: [Function: bound ],
        '': [Circular] },
     getWorkName: 
      { [Function: bound ]
        request: [Function: bound ],
        call: [Function: bound ],
        sendTransaction: [Function: bound ],
        estimateGas: [Function: bound ],
        getData: [Function: bound ],
        'address,address,string': [Circular] },
     statusCallback: 
      { [Function: bound ]
        request: [Function: bound ],
        call: [Function: bound ],
        sendTransaction: [Function: bound ],
        estimateGas: [Function: bound ],
        getData: [Function: bound ],
        'address,address,string,uint8,string': [Circular] },
     setPendingCallback: 
      { [Function: bound ]
        request: [Function: bound ],
        call: [Function: bound ],
        sendTransaction: [Function: bound ],
        estimateGas: [Function: bound ],
        getData: [Function: bound ],
        'address,address,string,string': [Circular] },
     registerCallback: 
      { [Function: bound ]
        request: [Function: bound ],
        call: [Function: bound ],
        sendTransaction: [Function: bound ],
        estimateGas: [Function: bound ],
        getData: [Function: bound ],
        'address,address,string,string,string': [Circular] },
     getWorkStderr: 
      { [Function: bound ]
        request: [Function: bound ],
        call: [Function: bound ],
        sendTransaction: [Function: bound ],
        estimateGas: [Function: bound ],
        getData: [Function: bound ],
        'address,address,string': [Circular] },
     getCreator: 
      { [Function: bound ]
        request: [Function: bound ],
        call: [Function: bound ],
        sendTransaction: [Function: bound ],
        estimateGas: [Function: bound ],
        getData: [Function: bound ],
        address: [Circular] },
     submit: 
      { [Function: bound ]
        request: [Function: bound ],
        call: [Function: bound ],
        sendTransaction: [Function: bound ],
        estimateGas: [Function: bound ],
        getData: [Function: bound ],
        'string,string': [Circular] },
     getWorkStdout: 
      { [Function: bound ]
        request: [Function: bound ],
        call: [Function: bound ],
        sendTransaction: [Function: bound ],
        estimateGas: [Function: bound ],
        getData: [Function: bound ],
        'address,address,string': [Circular] },
     getWork: 
      { [Function: bound ]
        request: [Function: bound ],
        call: [Function: bound ],
        sendTransaction: [Function: bound ],
        estimateGas: [Function: bound ],
        getData: [Function: bound ],
        'address,address,string': [Circular] },
     waitResult: 
      { [Function: bound ]
        request: [Function: bound ],
        call: [Function: bound ],
        sendTransaction: [Function: bound ],
        estimateGas: [Function: bound ],
        getData: [Function: bound ],
        'string,string': [Circular] },
     bridge: 
      { [Function: bound ]
        request: [Function: bound ],
        call: [Function: bound ],
        sendTransaction: [Function: bound ],
        estimateGas: [Function: bound ],
        getData: [Function: bound ],
        '': [Circular] },
     status: 
      { [Function: bound ]
        request: [Function: bound ],
        call: [Function: bound ],
        sendTransaction: [Function: bound ],
        estimateGas: [Function: bound ],
        getData: [Function: bound ],
        string: [Circular] },
     setParam: 
      { [Function: bound ]
        request: [Function: bound ],
        call: [Function: bound ],
        sendTransaction: [Function: bound ],
        estimateGas: [Function: bound ],
        getData: [Function: bound ],
        'string,string,string': [Circular] },
     register: 
      { [Function: bound ]
        request: [Function: bound ],
        call: [Function: bound ],
        sendTransaction: [Function: bound ],
        estimateGas: [Function: bound ],
        getData: [Function: bound ],
        string: [Circular] },
     getWorkStatus: 
      { [Function: bound ]
        request: [Function: bound ],
        call: [Function: bound ],
        sendTransaction: [Function: bound ],
        estimateGas: [Function: bound ],
        getData: [Function: bound ],
        'address,address,string': [Circular] },
     stdout: 
      { [Function: bound ]
        request: [Function: bound ],
        call: [Function: bound ],
        sendTransaction: [Function: bound ],
        estimateGas: [Function: bound ],
        getData: [Function: bound ],
        string: [Circular] },
     setPending: 
      { [Function: bound ]
        request: [Function: bound ],
        call: [Function: bound ],
        sendTransaction: [Function: bound ],
        estimateGas: [Function: bound ],
        getData: [Function: bound ],
        string: [Circular] },
     allEvents: [Function: bound ],
     Launch: 
      { [Function: bound ]
        'address,address,address,string,string,string,string': [Function: bound ] },
     CallbackEvent: 
      { [Function: bound ]
        'string,address,address,address,string,string,uint8,string': [Function: bound ] } },
  toDelete: 
   { [Function]
     call: [Function],
     sendTransaction: [Function],
     request: [Function: bound ],
     estimateGas: [Function] },
  stdoutCallback: 
   { [Function]
     call: [Function],
     sendTransaction: [Function],
     request: [Function: bound ],
     estimateGas: [Function] },
  getWorkTimestamp: 
   { [Function]
     call: [Function],
     sendTransaction: [Function],
     request: [Function: bound ],
     estimateGas: [Function] },
  submitAndWait: 
   { [Function]
     call: [Function],
     sendTransaction: [Function],
     request: [Function: bound ],
     estimateGas: [Function] },
  setParamCallback: 
   { [Function]
     call: [Function],
     sendTransaction: [Function],
     request: [Function: bound ],
     estimateGas: [Function] },
  registerSmartContractAndCreator: 
   { [Function]
     call: [Function],
     sendTransaction: [Function],
     request: [Function: bound ],
     estimateGas: [Function] },
  getWorkName: 
   { [Function]
     call: [Function],
     sendTransaction: [Function],
     request: [Function: bound ],
     estimateGas: [Function] },
  statusCallback: 
   { [Function]
     call: [Function],
     sendTransaction: [Function],
     request: [Function: bound ],
     estimateGas: [Function] },
  setPendingCallback: 
   { [Function]
     call: [Function],
     sendTransaction: [Function],
     request: [Function: bound ],
     estimateGas: [Function] },
  registerCallback: 
   { [Function]
     call: [Function],
     sendTransaction: [Function],
     request: [Function: bound ],
     estimateGas: [Function] },
  getWorkStderr: 
   { [Function]
     call: [Function],
     sendTransaction: [Function],
     request: [Function: bound ],
     estimateGas: [Function] },
  getCreator: 
   { [Function]
     call: [Function],
     sendTransaction: [Function],
     request: [Function: bound ],
     estimateGas: [Function] },
  submit: 
   { [Function]
     call: [Function],
     sendTransaction: [Function],
     request: [Function: bound ],
     estimateGas: [Function] },
  getWorkStdout: 
   { [Function]
     call: [Function],
     sendTransaction: [Function],
     request: [Function: bound ],
     estimateGas: [Function] },
  getWork: 
   { [Function]
     call: [Function],
     sendTransaction: [Function],
     request: [Function: bound ],
     estimateGas: [Function] },
  waitResult: 
   { [Function]
     call: [Function],
     sendTransaction: [Function],
     request: [Function: bound ],
     estimateGas: [Function] },
  bridge: 
   { [Function]
     call: [Function],
     sendTransaction: [Function],
     request: [Function: bound ],
     estimateGas: [Function] },
  status: 
   { [Function]
     call: [Function],
     sendTransaction: [Function],
     request: [Function: bound ],
     estimateGas: [Function] },
  setParam: 
   { [Function]
     call: [Function],
     sendTransaction: [Function],
     request: [Function: bound ],
     estimateGas: [Function] },
  register: 
   { [Function]
     call: [Function],
     sendTransaction: [Function],
     request: [Function: bound ],
     estimateGas: [Function] },
  getWorkStatus: 
   { [Function]
     call: [Function],
     sendTransaction: [Function],
     request: [Function: bound ],
     estimateGas: [Function] },
  stdout: 
   { [Function]
     call: [Function],
     sendTransaction: [Function],
     request: [Function: bound ],
     estimateGas: [Function] },
  setPending: 
   { [Function]
     call: [Function],
     sendTransaction: [Function],
     request: [Function: bound ],
     estimateGas: [Function] },
  Launch: 
   { [Function: bound ]
     'address,address,address,string,string,string,string': [Function: bound ] },
  CallbackEvent: 
   { [Function: bound ]
     'string,address,address,address,string,string,uint8,string': [Function: bound ] },
  sendTransaction: [Function],
  send: [Function],
  allEvents: [Function: bound ],
  address: '0x59e2e92ffaee0368d5d3ddbf817527c01b0b0285',
  transactionHash: null,
  then: [Function] }
</msg>
<status status="PASS" endtime="20170907 23:27:11.224" starttime="20170907 23:27:11.224"></status>
</kw>
<status status="PASS" endtime="20170907 23:27:11.225" starttime="20170907 23:27:11.221"></status>
</kw>
<kw name="Check Register Launch Event In IexceOracleSmartContract">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>1 min</arg>
<arg>10 sec</arg>
<arg>IexceOracleSmartContract.Watch LaunchEvent</arg>
</arguments>
<assign>
<var>${watch_launch_event}</var>
</assign>
<kw name="Watch LaunchEvent" library="IexceOracleSmartContract">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd iexec-oracle/API &amp;&amp; ./node_modules/.bin/truffle test test/rf/watchLaunchEventInIexecOracle.js</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${truffletest_result}</var>
</assign>
<msg timestamp="20170907 23:27:11.227" level="INFO">Starting process:
cd iexec-oracle/API &amp;&amp; ./node_modules/.bin/truffle test test/rf/watchLaunchEventInIexecOracle.js</msg>
<msg timestamp="20170907 23:27:11.231" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170907 23:27:15.023" level="INFO">Process completed.</msg>
<msg timestamp="20170907 23:27:15.023" level="INFO">${truffletest_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170907 23:27:15.023" starttime="20170907 23:27:11.226"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stderr}</arg>
</arguments>
<msg timestamp="20170907 23:27:15.024" level="INFO"></msg>
<status status="PASS" endtime="20170907 23:27:15.024" starttime="20170907 23:27:15.024"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
</arguments>
<msg timestamp="20170907 23:27:15.025" level="INFO">Using network 'development'.

IexecOracle deployed at address :0x64077df6586ee727cceef83a4e24d4517abfd5f2
HelloWorld deployed at address :0x2bc3c4e7072bdb7f5a110c73a8855849cfba16e7

[0m[0m
[0m  Contract: IexecOracle[0m
BEGIN_LOG
[ { logIndex: 0,
    transactionIndex: 0,
    transactionHash: '0xb4b5a9fa98ebbae6795fa9490e2b9c5594daf1b0f53ac0590c307936015a28c6',
    blockHash: '0x399ff692d931fef9c9bdec32f72cb29141e02c7e2efacce4d4b741073fc80585',
    blockNumber: 21,
    address: '0x59e2e92ffaee0368d5d3ddbf817527c01b0b0285',
    type: 'mined',
    event: 'Launch',
    args: 
     { user: '0x0d8fdb4933a1a5af5bc7a8e344dc0d57d0be37fb',
       provider: '0x280c2eb535d3ea1c09e1d7e04e23e07420f161db',
       creator: '0xd2bd96d5721210b6389b7dc03dc8f96c962197f4',
       functionName: 'register',
       param1: 'echo',
       param2: '',
       workUid: '' } } ]
END_LOG
  [32m  ✓[0m[90m watch CallbackEvent[0m[31m (277ms)[0m


[92m [0m[32m 1 passing[0m[90m (357ms)[0m
</msg>
<status status="PASS" endtime="20170907 23:27:15.025" starttime="20170907 23:27:15.025"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${truffletest_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170907 23:27:15.026" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170907 23:27:15.026" starttime="20170907 23:27:15.025"></status>
</kw>
<status status="PASS" endtime="20170907 23:27:15.026" starttime="20170907 23:27:11.226"></status>
</kw>
<msg timestamp="20170907 23:27:15.026" level="INFO">${watch_launch_event} = Using network 'development'.

IexecOracle deployed at address :0x64077df6586ee727cceef83a4e24d4517abfd5f2
HelloWorld deployed at address :0x2bc3c4e7072bdb7f5a110c73a8855849cfba16e7

[0m[0m
[0m  Con...</msg>
<status status="PASS" endtime="20170907 23:27:15.026" starttime="20170907 23:27:11.225"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${watch_launch_event}</arg>
<arg>functionName: 'register'</arg>
</arguments>
<status status="PASS" endtime="20170907 23:27:15.027" starttime="20170907 23:27:15.026"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${watch_launch_event}</arg>
<arg>param1: 'echo'</arg>
</arguments>
<status status="PASS" endtime="20170907 23:27:15.027" starttime="20170907 23:27:15.027"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${watch_launch_event}</arg>
<arg>user: '${USER}'</arg>
</arguments>
<status status="PASS" endtime="20170907 23:27:15.027" starttime="20170907 23:27:15.027"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${watch_launch_event}</arg>
<arg>creator: '${CREATOR}'</arg>
</arguments>
<status status="PASS" endtime="20170907 23:27:15.028" starttime="20170907 23:27:15.027"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${watch_launch_event}</arg>
<arg>provider: '${HELLO_WORLD_SM_ADDRESS}'</arg>
</arguments>
<status status="PASS" endtime="20170907 23:27:15.028" starttime="20170907 23:27:15.028"></status>
</kw>
<status status="PASS" endtime="20170907 23:27:15.028" starttime="20170907 23:27:11.225"></status>
</kw>
<kw name="Check Register CallbackEvent Event In IexceOracleSmartContract">
<assign>
<var>${work_uid}</var>
</assign>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>1 min</arg>
<arg>10 sec</arg>
<arg>IexceOracleSmartContract.Watch CallbackEvent</arg>
</arguments>
<assign>
<var>${watch_callback_event}</var>
</assign>
<kw name="Watch CallbackEvent" library="IexceOracleSmartContract">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd iexec-oracle/API &amp;&amp; ./node_modules/.bin/truffle test test/rf/watchCallbackEventInIexecOracle.js</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${truffletest_result}</var>
</assign>
<msg timestamp="20170907 23:27:15.030" level="INFO">Starting process:
cd iexec-oracle/API &amp;&amp; ./node_modules/.bin/truffle test test/rf/watchCallbackEventInIexecOracle.js</msg>
<msg timestamp="20170907 23:27:15.035" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170907 23:27:18.666" level="INFO">Process completed.</msg>
<msg timestamp="20170907 23:27:18.666" level="INFO">${truffletest_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170907 23:27:18.666" starttime="20170907 23:27:15.030"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stderr}</arg>
</arguments>
<msg timestamp="20170907 23:27:18.667" level="INFO"></msg>
<status status="PASS" endtime="20170907 23:27:18.667" starttime="20170907 23:27:18.666"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
</arguments>
<msg timestamp="20170907 23:27:18.667" level="INFO">Using network 'development'.

IexecOracle deployed at address :0x6263467395219ad76dfc153a05b55b67c67aa7f8
HelloWorld deployed at address :0xe912a9b4f66acd3ceaec169149dd92097493340b

[0m[0m
[0m  Contract: IexecOracle[0m
BEGIN_LOG
[ { logIndex: 0,
    transactionIndex: 0,
    transactionHash: '0x2ee472b3380abacba507a6c782dc0eb17f30eccff207ffd3548db433b5725954',
    blockHash: '0x123384f8baa0edaf948216261d325ee304c908333f25d2831f767e0b96ed7ad9',
    blockNumber: 22,
    address: '0x59e2e92ffaee0368d5d3ddbf817527c01b0b0285',
    type: 'mined',
    event: 'CallbackEvent',
    args: 
     { callbackType: 'RegisterCallback',
       user: '0x0d8fdb4933a1a5af5bc7a8e344dc0d57d0be37fb',
       provider: '0x280c2eb535d3ea1c09e1d7e04e23e07420f161db',
       creator: '0xd2bd96d5721210b6389b7dc03dc8f96c962197f4',
       appName: 'echo',
       workUid: 'fe6112ad-6d81-414d-99cd-5e54a6895062',
       status: [Object],
       errorMsg: '' } } ]
END_LOG
  [32m  ✓[0m[90m watch CallbackEvent[0m[31m (230ms)[0m


[92m [0m[32m 1 passing[0m[90m (305ms)[0m
</msg>
<status status="PASS" endtime="20170907 23:27:18.668" starttime="20170907 23:27:18.667"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${truffletest_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170907 23:27:18.668" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170907 23:27:18.668" starttime="20170907 23:27:18.668"></status>
</kw>
<status status="PASS" endtime="20170907 23:27:18.668" starttime="20170907 23:27:15.030"></status>
</kw>
<msg timestamp="20170907 23:27:18.668" level="INFO">${watch_callback_event} = Using network 'development'.

IexecOracle deployed at address :0x6263467395219ad76dfc153a05b55b67c67aa7f8
HelloWorld deployed at address :0xe912a9b4f66acd3ceaec169149dd92097493340b

[0m[0m
[0m  Con...</msg>
<status status="PASS" endtime="20170907 23:27:18.669" starttime="20170907 23:27:15.029"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${watch_callback_event}</arg>
<arg>callbackType: 'RegisterCallback'</arg>
</arguments>
<status status="PASS" endtime="20170907 23:27:18.669" starttime="20170907 23:27:18.669"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${watch_callback_event}</arg>
<arg>appName: 'echo'</arg>
</arguments>
<status status="PASS" endtime="20170907 23:27:18.669" starttime="20170907 23:27:18.669"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${watch_callback_event}</arg>
<arg>user: '${USER}'</arg>
</arguments>
<status status="PASS" endtime="20170907 23:27:18.670" starttime="20170907 23:27:18.669"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${watch_callback_event}</arg>
<arg>creator: '${CREATOR}'</arg>
</arguments>
<status status="PASS" endtime="20170907 23:27:18.670" starttime="20170907 23:27:18.670"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${watch_callback_event}</arg>
<arg>provider: '${HELLO_WORLD_SM_ADDRESS}'</arg>
</arguments>
<status status="PASS" endtime="20170907 23:27:18.670" starttime="20170907 23:27:18.670"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${watch_callback_event}</arg>
<arg>workUid: '(?P&lt;work_uid&gt;.*)',</arg>
<arg>work_uid</arg>
</arguments>
<assign>
<var>@{work_uid}</var>
</assign>
<msg timestamp="20170907 23:27:18.671" level="INFO">@{work_uid} = [ fe6112ad-6d81-414d-99cd-5e54a6895062 ]</msg>
<status status="PASS" endtime="20170907 23:27:18.671" starttime="20170907 23:27:18.670"></status>
</kw>
<msg timestamp="20170907 23:27:18.671" level="INFO">${work_uid} = fe6112ad-6d81-414d-99cd-5e54a6895062</msg>
<status status="PASS" endtime="20170907 23:27:18.671" starttime="20170907 23:27:15.029"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${work_uid}</arg>
</arguments>
<msg timestamp="20170907 23:27:18.672" level="INFO">fe6112ad-6d81-414d-99cd-5e54a6895062</msg>
<status status="PASS" endtime="20170907 23:27:18.672" starttime="20170907 23:27:18.672"></status>
</kw>
<kw name="Check Work Is Recorded in IexceOracleSmartContract After Register">
<arguments>
<arg>${work_uid}</arg>
</arguments>
<kw name="Get Work" library="IexceOracleSmartContract">
<arguments>
<arg>${USER}</arg>
<arg>${HELLO_WORLD_SM_ADDRESS}</arg>
<arg>${work_uid}</arg>
</arguments>
<assign>
<var>@{work_result}</var>
</assign>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>sed -i "s/.*getWork.call(.*/return aIexecOracleInstance.getWork.call('${user}','${provider}',\\"${uid}\\");/g" iexec-oracle/API/test/rf/getWorkInIexecOracle.js</arg>
</arguments>
<msg timestamp="20170907 23:27:18.676" level="INFO">Running command 'sed -i "s/.*getWork.call(.*/return aIexecOracleInstance.getWork.call('0x0d8fdb4933a1a5af5bc7a8e344dc0d57d0be37fb','0x280c2eb535d3ea1c09e1d7e04e23e07420f161db',\"fe6112ad-6d81-414d-99cd-5e54a6895062\");/g" iexec-oracle/API/test/rf/getWorkInIexecOracle.js 2&gt;&amp;1'.</msg>
<status status="PASS" endtime="20170907 23:27:18.681" starttime="20170907 23:27:18.674"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd iexec-oracle/API &amp;&amp; ./node_modules/.bin/truffle test test/rf/getWorkInIexecOracle.js</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${truffletest_result}</var>
</assign>
<msg timestamp="20170907 23:27:18.682" level="INFO">Starting process:
cd iexec-oracle/API &amp;&amp; ./node_modules/.bin/truffle test test/rf/getWorkInIexecOracle.js</msg>
<msg timestamp="20170907 23:27:18.686" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170907 23:27:22.283" level="INFO">Process completed.</msg>
<msg timestamp="20170907 23:27:22.283" level="INFO">${truffletest_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170907 23:27:22.283" starttime="20170907 23:27:18.682"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stderr}</arg>
</arguments>
<msg timestamp="20170907 23:27:22.284" level="INFO"></msg>
<status status="PASS" endtime="20170907 23:27:22.284" starttime="20170907 23:27:22.284"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
</arguments>
<msg timestamp="20170907 23:27:22.285" level="INFO">Using network 'development'.

IexecOracle deployed at address :0xad8416594fb207bc17277ac4245ee57e334bd0eb
HelloWorld deployed at address :0x7c8a414485a9b31f81e842230e7680a5c18d48a0

[0m[0m
[0m  Contract: IexecOracle[0m
BEGIN_LOG
name:echo
timestamp:1504826831
status:1
stdout:
stderr:
END_LOG
  [32m  ✓[0m[90m get a work[0m[31m (188ms)[0m


[92m [0m[32m 1 passing[0m[90m (255ms)[0m
</msg>
<status status="PASS" endtime="20170907 23:27:22.285" starttime="20170907 23:27:22.284"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${truffletest_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170907 23:27:22.285" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170907 23:27:22.285" starttime="20170907 23:27:22.285"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
<arg>name:(?P&lt;name&gt;.*)</arg>
<arg>name</arg>
</arguments>
<assign>
<var>@{name}</var>
</assign>
<msg timestamp="20170907 23:27:22.286" level="INFO">@{name} = [ echo ]</msg>
<status status="PASS" endtime="20170907 23:27:22.286" starttime="20170907 23:27:22.285"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
<arg>timestamp:(?P&lt;timestamp&gt;.*)</arg>
<arg>timestamp</arg>
</arguments>
<assign>
<var>@{timestamp}</var>
</assign>
<msg timestamp="20170907 23:27:22.287" level="INFO">@{timestamp} = [ 1504826831 ]</msg>
<status status="PASS" endtime="20170907 23:27:22.287" starttime="20170907 23:27:22.286"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
<arg>status:(?P&lt;status&gt;.*)</arg>
<arg>status</arg>
</arguments>
<assign>
<var>@{status}</var>
</assign>
<msg timestamp="20170907 23:27:22.287" level="INFO">@{status} = [ 1 ]</msg>
<status status="PASS" endtime="20170907 23:27:22.287" starttime="20170907 23:27:22.287"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
<arg>stdout:(?P&lt;stdout&gt;.*)</arg>
<arg>stdout</arg>
</arguments>
<assign>
<var>@{stdout}</var>
</assign>
<msg timestamp="20170907 23:27:22.288" level="INFO">@{stdout} = [  ]</msg>
<status status="PASS" endtime="20170907 23:27:22.288" starttime="20170907 23:27:22.287"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
<arg>stderr:(?P&lt;stderr&gt;.*)</arg>
<arg>stderr</arg>
</arguments>
<assign>
<var>@{stderr}</var>
</assign>
<msg timestamp="20170907 23:27:22.289" level="INFO">@{stderr} = [  ]</msg>
<status status="PASS" endtime="20170907 23:27:22.289" starttime="20170907 23:27:22.288"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>@{name}[0]</arg>
<arg>@{timestamp}[0]</arg>
<arg>@{status}[0]</arg>
<arg>@{stdout}[0]</arg>
<arg>@{stderr}[0]</arg>
</arguments>
<assign>
<var>@{work_result}</var>
</assign>
<msg timestamp="20170907 23:27:22.289" level="INFO">@{work_result} = [ echo | 1504826831 | 1 |  |  ]</msg>
<status status="PASS" endtime="20170907 23:27:22.289" starttime="20170907 23:27:22.289"></status>
</kw>
<msg timestamp="20170907 23:27:22.290" level="INFO">@{work_result} = [ echo | 1504826831 | 1 |  |  ]</msg>
<status status="PASS" endtime="20170907 23:27:22.290" starttime="20170907 23:27:18.673"></status>
</kw>
<kw name="Get Work Name" library="IexceOracleSmartContract">
<arguments>
<arg>${USER}</arg>
<arg>${HELLO_WORLD_SM_ADDRESS}</arg>
<arg>${work_uid}</arg>
</arguments>
<assign>
<var>${work_name}</var>
</assign>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>sed -i "s/.*getWorkName.call(.*/return aIexecOracleInstance.getWorkName.call('${user}','${provider}',\\"${uid}\\");/g" iexec-oracle/API/test/rf/getWorkNameInIexecOracle.js</arg>
</arguments>
<msg timestamp="20170907 23:27:22.292" level="INFO">Running command 'sed -i "s/.*getWorkName.call(.*/return aIexecOracleInstance.getWorkName.call('0x0d8fdb4933a1a5af5bc7a8e344dc0d57d0be37fb','0x280c2eb535d3ea1c09e1d7e04e23e07420f161db',\"fe6112ad-6d81-414d-99cd-5e54a6895062\");/g" iexec-oracle/API/test/rf/getWorkNameInIexecOracle.js 2&gt;&amp;1'.</msg>
<status status="PASS" endtime="20170907 23:27:22.297" starttime="20170907 23:27:22.290"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd iexec-oracle/API &amp;&amp; ./node_modules/.bin/truffle test test/rf/getWorkNameInIexecOracle.js</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${truffletest_result}</var>
</assign>
<msg timestamp="20170907 23:27:22.298" level="INFO">Starting process:
cd iexec-oracle/API &amp;&amp; ./node_modules/.bin/truffle test test/rf/getWorkNameInIexecOracle.js</msg>
<msg timestamp="20170907 23:27:22.302" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170907 23:27:25.993" level="INFO">Process completed.</msg>
<msg timestamp="20170907 23:27:25.993" level="INFO">${truffletest_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170907 23:27:25.994" starttime="20170907 23:27:22.297"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stderr}</arg>
</arguments>
<msg timestamp="20170907 23:27:25.995" level="INFO"></msg>
<status status="PASS" endtime="20170907 23:27:25.995" starttime="20170907 23:27:25.995"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
</arguments>
<msg timestamp="20170907 23:27:25.996" level="INFO">Using network 'development'.

IexecOracle deployed at address :0xa3d0197717568728c3e2dee260586e274cd665cc
HelloWorld deployed at address :0x267280dbfab48459ebd74933ed22f3bff493ccd7

[0m[0m
[0m  Contract: IexecOracle[0m
BEGIN_LOG
name:echo
END_LOG
  [32m  ✓[0m[90m get a work[0m[31m (82ms)[0m


[92m [0m[32m 1 passing[0m[90m (152ms)[0m
</msg>
<status status="PASS" endtime="20170907 23:27:25.996" starttime="20170907 23:27:25.995"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${truffletest_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170907 23:27:25.996" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170907 23:27:25.996" starttime="20170907 23:27:25.996"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
<arg>name:(?P&lt;name&gt;.*)</arg>
<arg>name</arg>
</arguments>
<assign>
<var>@{name}</var>
</assign>
<msg timestamp="20170907 23:27:25.997" level="INFO">@{name} = [ echo ]</msg>
<status status="PASS" endtime="20170907 23:27:25.997" starttime="20170907 23:27:25.996"></status>
</kw>
<msg timestamp="20170907 23:27:25.997" level="INFO">${work_name} = echo</msg>
<status status="PASS" endtime="20170907 23:27:25.997" starttime="20170907 23:27:22.290"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${work_name}</arg>
<arg>@{work_result}[0]</arg>
</arguments>
<status status="PASS" endtime="20170907 23:27:25.998" starttime="20170907 23:27:25.997"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${work_name}</arg>
<arg>echo</arg>
</arguments>
<status status="PASS" endtime="20170907 23:27:25.998" starttime="20170907 23:27:25.998"></status>
</kw>
<kw name="Get Work Timestamp" library="IexceOracleSmartContract">
<arguments>
<arg>${USER}</arg>
<arg>${HELLO_WORLD_SM_ADDRESS}</arg>
<arg>${work_uid}</arg>
</arguments>
<assign>
<var>${work_timestamp}</var>
</assign>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>sed -i "s/.*getWorkTimestamp.call(.*/return aIexecOracleInstance.getWorkTimestamp.call('${user}','${provider}',\\"${uid}\\");/g" iexec-oracle/API/test/rf/getWorkTimestampInIexecOracle.js</arg>
</arguments>
<msg timestamp="20170907 23:27:26.002" level="INFO">Running command 'sed -i "s/.*getWorkTimestamp.call(.*/return aIexecOracleInstance.getWorkTimestamp.call('0x0d8fdb4933a1a5af5bc7a8e344dc0d57d0be37fb','0x280c2eb535d3ea1c09e1d7e04e23e07420f161db',\"fe6112ad-6d81-414d-99cd-5e54a6895062\");/g" iexec-oracle/API/test/rf/getWorkTimestampInIexecOracle.js 2&gt;&amp;1'.</msg>
<status status="PASS" endtime="20170907 23:27:26.015" starttime="20170907 23:27:25.999"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd iexec-oracle/API &amp;&amp; ./node_modules/.bin/truffle test test/rf/getWorkTimestampInIexecOracle.js</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${truffletest_result}</var>
</assign>
<msg timestamp="20170907 23:27:26.016" level="INFO">Starting process:
cd iexec-oracle/API &amp;&amp; ./node_modules/.bin/truffle test test/rf/getWorkTimestampInIexecOracle.js</msg>
<msg timestamp="20170907 23:27:26.020" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170907 23:27:29.628" level="INFO">Process completed.</msg>
<msg timestamp="20170907 23:27:29.629" level="INFO">${truffletest_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170907 23:27:29.629" starttime="20170907 23:27:26.016"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stderr}</arg>
</arguments>
<msg timestamp="20170907 23:27:29.630" level="INFO"></msg>
<status status="PASS" endtime="20170907 23:27:29.630" starttime="20170907 23:27:29.629"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
</arguments>
<msg timestamp="20170907 23:27:29.631" level="INFO">Using network 'development'.

IexecOracle deployed at address :0xdea1781a8b69ae5c174340567133a917a4356475
HelloWorld deployed at address :0xebcb7c77463bfc21adfc11e1205695e150888a48

[0m[0m
[0m  Contract: IexecOracle[0m
BEGIN_LOG
timestamp:1504826831
END_LOG
  [32m  ✓[0m[90m get a work[0m[31m (89ms)[0m


[92m [0m[32m 1 passing[0m[90m (164ms)[0m
</msg>
<status status="PASS" endtime="20170907 23:27:29.631" starttime="20170907 23:27:29.630"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${truffletest_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170907 23:27:29.631" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170907 23:27:29.631" starttime="20170907 23:27:29.631"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
<arg>timestamp:(?P&lt;timestamp&gt;.*)</arg>
<arg>timestamp</arg>
</arguments>
<assign>
<var>@{timestamp}</var>
</assign>
<msg timestamp="20170907 23:27:29.632" level="INFO">@{timestamp} = [ 1504826831 ]</msg>
<status status="PASS" endtime="20170907 23:27:29.632" starttime="20170907 23:27:29.631"></status>
</kw>
<msg timestamp="20170907 23:27:29.632" level="INFO">${work_timestamp} = 1504826831</msg>
<status status="PASS" endtime="20170907 23:27:29.632" starttime="20170907 23:27:25.998"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${work_timestamp}</arg>
<arg>@{work_result}[1]</arg>
</arguments>
<status status="PASS" endtime="20170907 23:27:29.633" starttime="20170907 23:27:29.633"></status>
</kw>
<kw name="Get Work Status" library="IexceOracleSmartContract">
<arguments>
<arg>${USER}</arg>
<arg>${HELLO_WORLD_SM_ADDRESS}</arg>
<arg>${work_uid}</arg>
</arguments>
<assign>
<var>${work_status}</var>
</assign>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>sed -i "s/.*getWorkStatus.call(.*/return aIexecOracleInstance.getWorkStatus.call('${user}','${provider}',\\"${uid}\\");/g" iexec-oracle/API/test/rf/getWorkStatusInIexecOracle.js</arg>
</arguments>
<msg timestamp="20170907 23:27:29.635" level="INFO">Running command 'sed -i "s/.*getWorkStatus.call(.*/return aIexecOracleInstance.getWorkStatus.call('0x0d8fdb4933a1a5af5bc7a8e344dc0d57d0be37fb','0x280c2eb535d3ea1c09e1d7e04e23e07420f161db',\"fe6112ad-6d81-414d-99cd-5e54a6895062\");/g" iexec-oracle/API/test/rf/getWorkStatusInIexecOracle.js 2&gt;&amp;1'.</msg>
<status status="PASS" endtime="20170907 23:27:29.645" starttime="20170907 23:27:29.633"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd iexec-oracle/API &amp;&amp; ./node_modules/.bin/truffle test test/rf/getWorkStatusInIexecOracle.js</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${truffletest_result}</var>
</assign>
<msg timestamp="20170907 23:27:29.646" level="INFO">Starting process:
cd iexec-oracle/API &amp;&amp; ./node_modules/.bin/truffle test test/rf/getWorkStatusInIexecOracle.js</msg>
<msg timestamp="20170907 23:27:29.648" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170907 23:27:33.222" level="INFO">Process completed.</msg>
<msg timestamp="20170907 23:27:33.223" level="INFO">${truffletest_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170907 23:27:33.223" starttime="20170907 23:27:29.645"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stderr}</arg>
</arguments>
<msg timestamp="20170907 23:27:33.223" level="INFO"></msg>
<status status="PASS" endtime="20170907 23:27:33.224" starttime="20170907 23:27:33.223"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
</arguments>
<msg timestamp="20170907 23:27:33.224" level="INFO">Using network 'development'.

IexecOracle deployed at address :0x407e126ffa475ce745e93dfbf627dd8893f25d2a
HelloWorld deployed at address :0xea84cf9737146836d2fac62e397f415955c262bd

[0m[0m
[0m  Contract: IexecOracle[0m
BEGIN_LOG
status:1
END_LOG
  [32m  ✓[0m[90m get a work[0m[31m (102ms)[0m


[92m [0m[32m 1 passing[0m[90m (171ms)[0m
</msg>
<status status="PASS" endtime="20170907 23:27:33.225" starttime="20170907 23:27:33.224"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${truffletest_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170907 23:27:33.225" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170907 23:27:33.225" starttime="20170907 23:27:33.225"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
<arg>status:(?P&lt;status&gt;.*)</arg>
<arg>status</arg>
</arguments>
<assign>
<var>@{status}</var>
</assign>
<msg timestamp="20170907 23:27:33.226" level="INFO">@{status} = [ 1 ]</msg>
<status status="PASS" endtime="20170907 23:27:33.226" starttime="20170907 23:27:33.225"></status>
</kw>
<msg timestamp="20170907 23:27:33.226" level="INFO">${work_status} = 1</msg>
<status status="PASS" endtime="20170907 23:27:33.226" starttime="20170907 23:27:29.633"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${work_status}</arg>
<arg>@{work_result}[2]</arg>
</arguments>
<status status="PASS" endtime="20170907 23:27:33.227" starttime="20170907 23:27:33.226"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${work_status}</arg>
<arg>1</arg>
</arguments>
<status status="PASS" endtime="20170907 23:27:33.228" starttime="20170907 23:27:33.227"></status>
</kw>
<kw name="Get Work Stdout" library="IexceOracleSmartContract">
<arguments>
<arg>${USER}</arg>
<arg>${HELLO_WORLD_SM_ADDRESS}</arg>
<arg>${work_uid}</arg>
</arguments>
<assign>
<var>${work_stdout}</var>
</assign>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>sed -i "s/.*getWorkStdout.call(.*/return aIexecOracleInstance.getWorkStdout.call('${user}','${provider}',\\"${uid}\\");/g" iexec-oracle/API/test/rf/getWorkStdoutInIexecOracle.js</arg>
</arguments>
<msg timestamp="20170907 23:27:33.230" level="INFO">Running command 'sed -i "s/.*getWorkStdout.call(.*/return aIexecOracleInstance.getWorkStdout.call('0x0d8fdb4933a1a5af5bc7a8e344dc0d57d0be37fb','0x280c2eb535d3ea1c09e1d7e04e23e07420f161db',\"fe6112ad-6d81-414d-99cd-5e54a6895062\");/g" iexec-oracle/API/test/rf/getWorkStdoutInIexecOracle.js 2&gt;&amp;1'.</msg>
<status status="PASS" endtime="20170907 23:27:33.235" starttime="20170907 23:27:33.228"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd iexec-oracle/API &amp;&amp; ./node_modules/.bin/truffle test test/rf/getWorkStdoutInIexecOracle.js</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${truffletest_result}</var>
</assign>
<msg timestamp="20170907 23:27:33.236" level="INFO">Starting process:
cd iexec-oracle/API &amp;&amp; ./node_modules/.bin/truffle test test/rf/getWorkStdoutInIexecOracle.js</msg>
<msg timestamp="20170907 23:27:33.240" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170907 23:27:36.888" level="INFO">Process completed.</msg>
<msg timestamp="20170907 23:27:36.888" level="INFO">${truffletest_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170907 23:27:36.888" starttime="20170907 23:27:33.236"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stderr}</arg>
</arguments>
<msg timestamp="20170907 23:27:36.889" level="INFO"></msg>
<status status="PASS" endtime="20170907 23:27:36.889" starttime="20170907 23:27:36.889"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
</arguments>
<msg timestamp="20170907 23:27:36.890" level="INFO">Using network 'development'.

IexecOracle deployed at address :0xf12d9144aa2fdd6920eff2af015141e51ff51efa
HelloWorld deployed at address :0x090c00441e31702aa11fe7628dc1bd35075dd1ec

[0m[0m
[0m  Contract: IexecOracle[0m
BEGIN_LOG
stdout:
END_LOG
  [32m  ✓[0m[90m get a work[0m[31m (85ms)[0m


[92m [0m[32m 1 passing[0m[90m (181ms)[0m
</msg>
<status status="PASS" endtime="20170907 23:27:36.890" starttime="20170907 23:27:36.889"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${truffletest_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170907 23:27:36.890" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170907 23:27:36.890" starttime="20170907 23:27:36.890"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
<arg>stdout:(?P&lt;stdout&gt;.*)</arg>
<arg>stdout</arg>
</arguments>
<assign>
<var>@{stdout}</var>
</assign>
<msg timestamp="20170907 23:27:36.891" level="INFO">@{stdout} = [  ]</msg>
<status status="PASS" endtime="20170907 23:27:36.891" starttime="20170907 23:27:36.891"></status>
</kw>
<msg timestamp="20170907 23:27:36.891" level="INFO">${work_stdout} = </msg>
<status status="PASS" endtime="20170907 23:27:36.891" starttime="20170907 23:27:33.228"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${work_stdout}</arg>
<arg>@{work_result}[3]</arg>
</arguments>
<status status="PASS" endtime="20170907 23:27:36.892" starttime="20170907 23:27:36.891"></status>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<doc>Verifies that the given item is empty.</doc>
<arguments>
<arg>${work_stdout}</arg>
</arguments>
<msg timestamp="20170907 23:27:36.892" level="INFO">Length is 0</msg>
<status status="PASS" endtime="20170907 23:27:36.892" starttime="20170907 23:27:36.892"></status>
</kw>
<kw name="Get Work Stderr" library="IexceOracleSmartContract">
<arguments>
<arg>${USER}</arg>
<arg>${HELLO_WORLD_SM_ADDRESS}</arg>
<arg>${work_uid}</arg>
</arguments>
<assign>
<var>${work_stderr}</var>
</assign>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>sed -i "s/.*getWorkStderr.call(.*/return aIexecOracleInstance.getWorkStderr.call('${user}','${provider}',\\"${uid}\\");/g" iexec-oracle/API/test/rf/getWorkStderrInIexecOracle.js</arg>
</arguments>
<msg timestamp="20170907 23:27:36.894" level="INFO">Running command 'sed -i "s/.*getWorkStderr.call(.*/return aIexecOracleInstance.getWorkStderr.call('0x0d8fdb4933a1a5af5bc7a8e344dc0d57d0be37fb','0x280c2eb535d3ea1c09e1d7e04e23e07420f161db',\"fe6112ad-6d81-414d-99cd-5e54a6895062\");/g" iexec-oracle/API/test/rf/getWorkStderrInIexecOracle.js 2&gt;&amp;1'.</msg>
<status status="PASS" endtime="20170907 23:27:36.901" starttime="20170907 23:27:36.893"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd iexec-oracle/API &amp;&amp; ./node_modules/.bin/truffle test test/rf/getWorkStderrInIexecOracle.js</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${truffletest_result}</var>
</assign>
<msg timestamp="20170907 23:27:36.903" level="INFO">Starting process:
cd iexec-oracle/API &amp;&amp; ./node_modules/.bin/truffle test test/rf/getWorkStderrInIexecOracle.js</msg>
<msg timestamp="20170907 23:27:36.907" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170907 23:27:40.650" level="INFO">Process completed.</msg>
<msg timestamp="20170907 23:27:40.651" level="INFO">${truffletest_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170907 23:27:40.651" starttime="20170907 23:27:36.902"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stderr}</arg>
</arguments>
<msg timestamp="20170907 23:27:40.652" level="INFO"></msg>
<status status="PASS" endtime="20170907 23:27:40.652" starttime="20170907 23:27:40.651"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
</arguments>
<msg timestamp="20170907 23:27:40.653" level="INFO">Using network 'development'.

IexecOracle deployed at address :0x8244b61400cfebd65b523ac696c7d2c245312c38
HelloWorld deployed at address :0xd10b4cfd69581778a1709ecf6cf8de42f59d729e

[0m[0m
[0m  Contract: IexecOracle[0m
BEGIN_LOG
stderr:
END_LOG
  [32m  ✓[0m[90m get a work[0m[31m (86ms)[0m


[92m [0m[32m 1 passing[0m[90m (162ms)[0m
</msg>
<status status="PASS" endtime="20170907 23:27:40.654" starttime="20170907 23:27:40.653"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${truffletest_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170907 23:27:40.655" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170907 23:27:40.655" starttime="20170907 23:27:40.654"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
<arg>stderr:(?P&lt;stderr&gt;.*)</arg>
<arg>stderr</arg>
</arguments>
<assign>
<var>@{stderr}</var>
</assign>
<msg timestamp="20170907 23:27:40.657" level="INFO">@{stderr} = [  ]</msg>
<status status="PASS" endtime="20170907 23:27:40.657" starttime="20170907 23:27:40.655"></status>
</kw>
<msg timestamp="20170907 23:27:40.657" level="INFO">${work_stderr} = </msg>
<status status="PASS" endtime="20170907 23:27:40.657" starttime="20170907 23:27:36.892"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${work_stderr}</arg>
<arg>@{work_result}[4]</arg>
</arguments>
<status status="PASS" endtime="20170907 23:27:40.658" starttime="20170907 23:27:40.657"></status>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<doc>Verifies that the given item is empty.</doc>
<arguments>
<arg>${work_stderr}</arg>
</arguments>
<msg timestamp="20170907 23:27:40.661" level="INFO">Length is 0</msg>
<status status="PASS" endtime="20170907 23:27:40.661" starttime="20170907 23:27:40.658"></status>
</kw>
<status status="PASS" endtime="20170907 23:27:40.661" starttime="20170907 23:27:18.672"></status>
</kw>
<kw name="Count From Works Where Uid" library="XWServer">
<arguments>
<arg>${work_uid}</arg>
<arg>1</arg>
</arguments>
<kw name="Count From Table Where Uid" library="MySql">
<arguments>
<arg>works</arg>
<arg>${uid}</arg>
<arg>${countExpected}</arg>
</arguments>
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170907 23:27:40.666" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170907 23:27:40.667" starttime="20170907 23:27:40.665"></status>
</kw>
<status status="PASS" endtime="20170907 23:27:40.667" starttime="20170907 23:27:40.664"></status>
</kw>
<kw name="Row Count Is Equal To X" library="DatabaseLibrary">
<doc>Check if the number of rows returned from `selectStatement` is equal to the value submitted. If not, then this</doc>
<arguments>
<arg>SELECT * FROM ${table} WHERE uid = '${uid}'</arg>
<arg>${countExpected}</arg>
</arguments>
<msg timestamp="20170907 23:27:40.668" level="INFO">Executing : Row Count Is Equal To X  |  SELECT * FROM works WHERE uid = 'fe6112ad-6d81-414d-99cd-5e54a6895062'  |  1 </msg>
<msg timestamp="20170907 23:27:40.668" level="INFO">Executing : Row Count  |  SELECT * FROM works WHERE uid = 'fe6112ad-6d81-414d-99cd-5e54a6895062' </msg>
<status status="PASS" endtime="20170907 23:27:40.670" starttime="20170907 23:27:40.668"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170907 23:27:40.670" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170907 23:27:40.670" starttime="20170907 23:27:40.670"></status>
</kw>
<status status="PASS" endtime="20170907 23:27:40.671" starttime="20170907 23:27:40.670"></status>
</kw>
<status status="PASS" endtime="20170907 23:27:40.671" starttime="20170907 23:27:40.663"></status>
</kw>
<status status="PASS" endtime="20170907 23:27:40.671" starttime="20170907 23:27:40.662"></status>
</kw>
<kw name="SetParamHelloWorld" library="HelloWorldSmartContract">
<arguments>
<arg>${work_uid}</arg>
<arg>HelloWorld!!!</arg>
</arguments>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>sed -i "s/.*return aHelloWorldInstance.setHelloWorldParam(.*/return aHelloWorldInstance.setHelloWorldParam(\\"${uid}\\",\\"${text}\\",{/g" iexec-oracle/API/test/rf/setParamHelloWorldTest.js</arg>
</arguments>
<msg timestamp="20170907 23:27:40.673" level="INFO">Running command 'sed -i "s/.*return aHelloWorldInstance.setHelloWorldParam(.*/return aHelloWorldInstance.setHelloWorldParam(\"fe6112ad-6d81-414d-99cd-5e54a6895062\",\"HelloWorld!!!\",{/g" iexec-oracle/API/test/rf/setParamHelloWorldTest.js 2&gt;&amp;1'.</msg>
<status status="PASS" endtime="20170907 23:27:40.682" starttime="20170907 23:27:40.672"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd iexec-oracle/API &amp;&amp; ./node_modules/.bin/truffle test test/rf/setParamHelloWorldTest.js</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${truffletest_result}</var>
</assign>
<msg timestamp="20170907 23:27:40.683" level="INFO">Starting process:
cd iexec-oracle/API &amp;&amp; ./node_modules/.bin/truffle test test/rf/setParamHelloWorldTest.js</msg>
<msg timestamp="20170907 23:27:40.687" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170907 23:27:44.187" level="INFO">Process completed.</msg>
<msg timestamp="20170907 23:27:44.188" level="INFO">${truffletest_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170907 23:27:44.188" starttime="20170907 23:27:40.683"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stderr}</arg>
</arguments>
<msg timestamp="20170907 23:27:44.188" level="INFO"></msg>
<status status="PASS" endtime="20170907 23:27:44.189" starttime="20170907 23:27:44.188"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
</arguments>
<msg timestamp="20170907 23:27:44.189" level="INFO">Using network 'development'.

IexecOracle deployed at address :0xf8bc8d3d62ad279ed835ac9d50ce97f05fc531be
HelloWorld deployed at address :0x4ba1c705aed76e2fb9a0b7834b725e33bd759cb5

[0m[0m
[0m  Contract: HelloWorld[0m
BEGIN_LOG
{ tx: '0xe41467e0cd243bbbe18fc165b9544523ad0a07e6117e21c393212da7ef9ba8fa',
  receipt: 
   { transactionHash: '0xe41467e0cd243bbbe18fc165b9544523ad0a07e6117e21c393212da7ef9ba8fa',
     transactionIndex: 0,
     blockHash: '0xe6b63aa4f4caa28cb0aaa721093171b40a1dd58efa5b5bb053d32ee9f37641fb',
     blockNumber: 68,
     gasUsed: 35160,
     cumulativeGasUsed: 35160,
     contractAddress: null,
     logs: [ [Object] ] },
  logs: [] }
END_LOG
  [32m  ✓[0m[90m should setParam[0m[31m (102ms)[0m


[92m [0m[32m 1 passing[0m[90m (169ms)[0m
</msg>
<status status="PASS" endtime="20170907 23:27:44.189" starttime="20170907 23:27:44.189"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${truffletest_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170907 23:27:44.190" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170907 23:27:44.190" starttime="20170907 23:27:44.189"></status>
</kw>
<status status="PASS" endtime="20170907 23:27:44.190" starttime="20170907 23:27:40.671"></status>
</kw>
<kw name="Check SetParam Launch Event In IexceOracleSmartContract">
<arguments>
<arg>${work_uid}</arg>
</arguments>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>1 min</arg>
<arg>10 sec</arg>
<arg>IexceOracleSmartContract.Watch LaunchEvent</arg>
</arguments>
<assign>
<var>${watch_launch_event}</var>
</assign>
<kw name="Watch LaunchEvent" library="IexceOracleSmartContract">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd iexec-oracle/API &amp;&amp; ./node_modules/.bin/truffle test test/rf/watchLaunchEventInIexecOracle.js</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${truffletest_result}</var>
</assign>
<msg timestamp="20170907 23:27:44.192" level="INFO">Starting process:
cd iexec-oracle/API &amp;&amp; ./node_modules/.bin/truffle test test/rf/watchLaunchEventInIexecOracle.js</msg>
<msg timestamp="20170907 23:27:44.195" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170907 23:27:48.086" level="INFO">Process completed.</msg>
<msg timestamp="20170907 23:27:48.086" level="INFO">${truffletest_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170907 23:27:48.086" starttime="20170907 23:27:44.192"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stderr}</arg>
</arguments>
<msg timestamp="20170907 23:27:48.087" level="INFO"></msg>
<status status="PASS" endtime="20170907 23:27:48.087" starttime="20170907 23:27:48.087"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
</arguments>
<msg timestamp="20170907 23:27:48.088" level="INFO">Using network 'development'.

IexecOracle deployed at address :0x6e75d0d626964b7429216b00445b5af820356e19
HelloWorld deployed at address :0x8a120a95efc32ae59e407f40a846e6b1f87939b4

[0m[0m
[0m  Contract: IexecOracle[0m
BEGIN_LOG
[ { logIndex: 0,
    transactionIndex: 0,
    transactionHash: '0xb4b5a9fa98ebbae6795fa9490e2b9c5594daf1b0f53ac0590c307936015a28c6',
    blockHash: '0x399ff692d931fef9c9bdec32f72cb29141e02c7e2efacce4d4b741073fc80585',
    blockNumber: 21,
    address: '0x59e2e92ffaee0368d5d3ddbf817527c01b0b0285',
    type: 'mined',
    event: 'Launch',
    args: 
     { user: '0x0d8fdb4933a1a5af5bc7a8e344dc0d57d0be37fb',
       provider: '0x280c2eb535d3ea1c09e1d7e04e23e07420f161db',
       creator: '0xd2bd96d5721210b6389b7dc03dc8f96c962197f4',
       functionName: 'register',
       param1: 'echo',
       param2: '',
       workUid: '' } },
  { logIndex: 0,
    transactionIndex: 0,
    transactionHash: '0xe41467e0cd243bbbe18fc165b9544523ad0a07e6117e21c393212da7ef9ba8fa',
    blockHash: '0xe6b63aa4f4caa28cb0aaa721093171b40a1dd58efa5b5bb053d32ee9f37641fb',
    blockNumber: 68,
    address: '0x59e2e92ffaee0368d5d3ddbf817527c01b0b0285',
    type: 'mined',
    event: 'Launch',
    args: 
     { user: '0x0d8fdb4933a1a5af5bc7a8e344dc0d57d0be37fb',
       provider: '0x280c2eb535d3ea1c09e1d7e04e23e07420f161db',
       creator: '0xd2bd96d5721210b6389b7dc03dc8f96c962197f4',
       functionName: 'setParam',
       param1: 'cmdline',
       param2: 'HelloWorld!!!',
       workUid: 'fe6112ad-6d81-414d-99cd-5e54a6895062' } } ]
END_LOG
  [32m  ✓[0m[90m watch CallbackEvent[0m[31m (461ms)[0m


[92m [0m[32m 1 passing[0m[90m (539ms)[0m
</msg>
<status status="PASS" endtime="20170907 23:27:48.088" starttime="20170907 23:27:48.087"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${truffletest_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170907 23:27:48.088" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170907 23:27:48.088" starttime="20170907 23:27:48.088"></status>
</kw>
<status status="PASS" endtime="20170907 23:27:48.089" starttime="20170907 23:27:44.191"></status>
</kw>
<msg timestamp="20170907 23:27:48.089" level="INFO">${watch_launch_event} = Using network 'development'.

IexecOracle deployed at address :0x6e75d0d626964b7429216b00445b5af820356e19
HelloWorld deployed at address :0x8a120a95efc32ae59e407f40a846e6b1f87939b4

[0m[0m
[0m  Con...</msg>
<status status="PASS" endtime="20170907 23:27:48.089" starttime="20170907 23:27:44.191"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${watch_launch_event}</arg>
<arg>functionName: 'setParam'</arg>
</arguments>
<status status="PASS" endtime="20170907 23:27:48.089" starttime="20170907 23:27:48.089"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${watch_launch_event}</arg>
<arg>param2: 'HelloWorld!!!'</arg>
</arguments>
<status status="PASS" endtime="20170907 23:27:48.090" starttime="20170907 23:27:48.089"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${watch_launch_event}</arg>
<arg>user: '${USER}'</arg>
</arguments>
<status status="PASS" endtime="20170907 23:27:48.090" starttime="20170907 23:27:48.090"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${watch_launch_event}</arg>
<arg>creator: '${CREATOR}'</arg>
</arguments>
<status status="PASS" endtime="20170907 23:27:48.091" starttime="20170907 23:27:48.091"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${watch_launch_event}</arg>
<arg>provider: '${HELLO_WORLD_SM_ADDRESS}'</arg>
</arguments>
<status status="PASS" endtime="20170907 23:27:48.092" starttime="20170907 23:27:48.091"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${watch_launch_event}</arg>
<arg>workUid: '${work_uid}'</arg>
</arguments>
<status status="PASS" endtime="20170907 23:27:48.092" starttime="20170907 23:27:48.092"></status>
</kw>
<status status="PASS" endtime="20170907 23:27:48.092" starttime="20170907 23:27:44.190"></status>
</kw>
<kw name="Check SetParam CallbackEvent Event In IexceOracleSmartContract">
<arguments>
<arg>${work_uid}</arg>
</arguments>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>1 min</arg>
<arg>10 sec</arg>
<arg>IexceOracleSmartContract.Watch CallbackEvent</arg>
</arguments>
<assign>
<var>${watch_callback_event}</var>
</assign>
<kw name="Watch CallbackEvent" library="IexceOracleSmartContract">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd iexec-oracle/API &amp;&amp; ./node_modules/.bin/truffle test test/rf/watchCallbackEventInIexecOracle.js</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${truffletest_result}</var>
</assign>
<msg timestamp="20170907 23:27:48.095" level="INFO">Starting process:
cd iexec-oracle/API &amp;&amp; ./node_modules/.bin/truffle test test/rf/watchCallbackEventInIexecOracle.js</msg>
<msg timestamp="20170907 23:27:48.098" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170907 23:27:52.093" level="INFO">Process completed.</msg>
<msg timestamp="20170907 23:27:52.094" level="INFO">${truffletest_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170907 23:27:52.094" starttime="20170907 23:27:48.094"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stderr}</arg>
</arguments>
<msg timestamp="20170907 23:27:52.095" level="INFO"></msg>
<status status="PASS" endtime="20170907 23:27:52.095" starttime="20170907 23:27:52.094"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
</arguments>
<msg timestamp="20170907 23:27:52.096" level="INFO">Using network 'development'.

IexecOracle deployed at address :0xe9c0d345309efdd71f67ede9aa62281ec4b77d5f
HelloWorld deployed at address :0x7cb7b49e57b5ec14272dba1540c6f5b72f5229ef

[0m[0m
[0m  Contract: IexecOracle[0m
BEGIN_LOG
[ { logIndex: 0,
    transactionIndex: 0,
    transactionHash: '0x2ee472b3380abacba507a6c782dc0eb17f30eccff207ffd3548db433b5725954',
    blockHash: '0x123384f8baa0edaf948216261d325ee304c908333f25d2831f767e0b96ed7ad9',
    blockNumber: 22,
    address: '0x59e2e92ffaee0368d5d3ddbf817527c01b0b0285',
    type: 'mined',
    event: 'CallbackEvent',
    args: 
     { callbackType: 'RegisterCallback',
       user: '0x0d8fdb4933a1a5af5bc7a8e344dc0d57d0be37fb',
       provider: '0x280c2eb535d3ea1c09e1d7e04e23e07420f161db',
       creator: '0xd2bd96d5721210b6389b7dc03dc8f96c962197f4',
       appName: 'echo',
       workUid: 'fe6112ad-6d81-414d-99cd-5e54a6895062',
       status: [Object],
       errorMsg: '' } },
  { logIndex: 0,
    transactionIndex: 0,
    transactionHash: '0x90559391935e2440c9983407613d5bf25a2a5e313c52e439ec372e66fe67f545',
    blockHash: '0x7cdb47b103c6e2d6de0c9e7aec62d5e51de20000864b453310855518ac1ec9b8',
    blockNumber: 69,
    address: '0x59e2e92ffaee0368d5d3ddbf817527c01b0b0285',
    type: 'mined',
    event: 'CallbackEvent',
    args: 
     { callbackType: 'SetParamCallback',
       user: '0x0d8fdb4933a1a5af5bc7a8e344dc0d57d0be37fb',
       provider: '0x280c2eb535d3ea1c09e1d7e04e23e07420f161db',
       creator: '0xd2bd96d5721210b6389b7dc03dc8f96c962197f4',
       appName: 'echo',
       workUid: 'fe6112ad-6d81-414d-99cd-5e54a6895062',
       status: [Object],
       errorMsg: '' } } ]
END_LOG
  [32m  ✓[0m[90m watch CallbackEvent[0m[31m (486ms)[0m


[92m [0m[32m 1 passing[0m[90m (558ms)[0m
</msg>
<status status="PASS" endtime="20170907 23:27:52.096" starttime="20170907 23:27:52.095"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${truffletest_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170907 23:27:52.096" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170907 23:27:52.096" starttime="20170907 23:27:52.096"></status>
</kw>
<status status="PASS" endtime="20170907 23:27:52.097" starttime="20170907 23:27:48.094"></status>
</kw>
<msg timestamp="20170907 23:27:52.097" level="INFO">${watch_callback_event} = Using network 'development'.

IexecOracle deployed at address :0xe9c0d345309efdd71f67ede9aa62281ec4b77d5f
HelloWorld deployed at address :0x7cb7b49e57b5ec14272dba1540c6f5b72f5229ef

[0m[0m
[0m  Con...</msg>
<status status="PASS" endtime="20170907 23:27:52.097" starttime="20170907 23:27:48.094"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${watch_callback_event}</arg>
<arg>callbackType: 'SetParamCallback'</arg>
</arguments>
<status status="PASS" endtime="20170907 23:27:52.097" starttime="20170907 23:27:52.097"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${watch_callback_event}</arg>
<arg>appName: 'echo'</arg>
</arguments>
<status status="PASS" endtime="20170907 23:27:52.098" starttime="20170907 23:27:52.097"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${watch_callback_event}</arg>
<arg>user: '${USER}'</arg>
</arguments>
<status status="PASS" endtime="20170907 23:27:52.098" starttime="20170907 23:27:52.098"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${watch_callback_event}</arg>
<arg>creator: '${CREATOR}'</arg>
</arguments>
<status status="PASS" endtime="20170907 23:27:52.098" starttime="20170907 23:27:52.098"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${watch_callback_event}</arg>
<arg>provider: '${HELLO_WORLD_SM_ADDRESS}'</arg>
</arguments>
<status status="PASS" endtime="20170907 23:27:52.099" starttime="20170907 23:27:52.098"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${watch_callback_event}</arg>
<arg>workUid: '${work_uid}'</arg>
</arguments>
<status status="PASS" endtime="20170907 23:27:52.099" starttime="20170907 23:27:52.099"></status>
</kw>
<status status="PASS" endtime="20170907 23:27:52.099" starttime="20170907 23:27:48.093"></status>
</kw>
<kw name="Get Work Status" library="IexceOracleSmartContract">
<arguments>
<arg>${USER}</arg>
<arg>${HELLO_WORLD_SM_ADDRESS}</arg>
<arg>${work_uid}</arg>
</arguments>
<assign>
<var>${work_status}</var>
</assign>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>sed -i "s/.*getWorkStatus.call(.*/return aIexecOracleInstance.getWorkStatus.call('${user}','${provider}',\\"${uid}\\");/g" iexec-oracle/API/test/rf/getWorkStatusInIexecOracle.js</arg>
</arguments>
<msg timestamp="20170907 23:27:52.104" level="INFO">Running command 'sed -i "s/.*getWorkStatus.call(.*/return aIexecOracleInstance.getWorkStatus.call('0x0d8fdb4933a1a5af5bc7a8e344dc0d57d0be37fb','0x280c2eb535d3ea1c09e1d7e04e23e07420f161db',\"fe6112ad-6d81-414d-99cd-5e54a6895062\");/g" iexec-oracle/API/test/rf/getWorkStatusInIexecOracle.js 2&gt;&amp;1'.</msg>
<status status="PASS" endtime="20170907 23:27:52.111" starttime="20170907 23:27:52.102"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd iexec-oracle/API &amp;&amp; ./node_modules/.bin/truffle test test/rf/getWorkStatusInIexecOracle.js</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${truffletest_result}</var>
</assign>
<msg timestamp="20170907 23:27:52.112" level="INFO">Starting process:
cd iexec-oracle/API &amp;&amp; ./node_modules/.bin/truffle test test/rf/getWorkStatusInIexecOracle.js</msg>
<msg timestamp="20170907 23:27:52.116" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170907 23:27:55.499" level="INFO">Process completed.</msg>
<msg timestamp="20170907 23:27:55.500" level="INFO">${truffletest_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170907 23:27:55.500" starttime="20170907 23:27:52.112"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stderr}</arg>
</arguments>
<msg timestamp="20170907 23:27:55.500" level="INFO"></msg>
<status status="PASS" endtime="20170907 23:27:55.501" starttime="20170907 23:27:55.500"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
</arguments>
<msg timestamp="20170907 23:27:55.501" level="INFO">Using network 'development'.

IexecOracle deployed at address :0x13b5686db9bf28e7eae91ad8e15d5b8010c16e01
HelloWorld deployed at address :0xc7f5f41c9de99fcfc40427c2e3de23f9fce10606

[0m[0m
[0m  Contract: IexecOracle[0m
BEGIN_LOG
status:1
END_LOG
  [32m  ✓[0m[90m get a work[0m[31m (86ms)[0m


[92m [0m[32m 1 passing[0m[90m (160ms)[0m
</msg>
<status status="PASS" endtime="20170907 23:27:55.501" starttime="20170907 23:27:55.501"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${truffletest_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170907 23:27:55.502" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170907 23:27:55.502" starttime="20170907 23:27:55.501"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
<arg>status:(?P&lt;status&gt;.*)</arg>
<arg>status</arg>
</arguments>
<assign>
<var>@{status}</var>
</assign>
<msg timestamp="20170907 23:27:55.502" level="INFO">@{status} = [ 1 ]</msg>
<status status="PASS" endtime="20170907 23:27:55.502" starttime="20170907 23:27:55.502"></status>
</kw>
<msg timestamp="20170907 23:27:55.503" level="INFO">${work_status} = 1</msg>
<status status="PASS" endtime="20170907 23:27:55.503" starttime="20170907 23:27:52.101"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${work_status}</arg>
<arg>1</arg>
</arguments>
<status status="PASS" endtime="20170907 23:27:55.505" starttime="20170907 23:27:55.504"></status>
</kw>
<kw name="Set Pending" library="HelloWorldSmartContract">
<arguments>
<arg>${work_uid}</arg>
</arguments>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>sed -i "s/.*return aHelloWorldInstance.setPendingHelloWorld(.*/return aHelloWorldInstance.setPendingHelloWorld(\\"${uid}\\",{/g" iexec-oracle/API/test/rf/setPendingHelloWorldTest.js</arg>
</arguments>
<msg timestamp="20170907 23:27:55.508" level="INFO">Running command 'sed -i "s/.*return aHelloWorldInstance.setPendingHelloWorld(.*/return aHelloWorldInstance.setPendingHelloWorld(\"fe6112ad-6d81-414d-99cd-5e54a6895062\",{/g" iexec-oracle/API/test/rf/setPendingHelloWorldTest.js 2&gt;&amp;1'.</msg>
<status status="PASS" endtime="20170907 23:27:55.513" starttime="20170907 23:27:55.506"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd iexec-oracle/API &amp;&amp; ./node_modules/.bin/truffle test test/rf/setPendingHelloWorldTest.js</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${truffletest_result}</var>
</assign>
<msg timestamp="20170907 23:27:55.514" level="INFO">Starting process:
cd iexec-oracle/API &amp;&amp; ./node_modules/.bin/truffle test test/rf/setPendingHelloWorldTest.js</msg>
<msg timestamp="20170907 23:27:55.517" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170907 23:27:59.068" level="INFO">Process completed.</msg>
<msg timestamp="20170907 23:27:59.069" level="INFO">${truffletest_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170907 23:27:59.069" starttime="20170907 23:27:55.513"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stderr}</arg>
</arguments>
<msg timestamp="20170907 23:27:59.069" level="INFO"></msg>
<status status="PASS" endtime="20170907 23:27:59.070" starttime="20170907 23:27:59.069"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
</arguments>
<msg timestamp="20170907 23:27:59.070" level="INFO">Using network 'development'.

IexecOracle deployed at address :0x908b47d874352a74d19a6559bdc661a65d4c65e5
HelloWorld deployed at address :0x20ddc191ef094c3a4f130da9ade587da93b84ccb

[0m[0m
[0m  Contract: HelloWorld[0m
BEGIN_LOG
{ tx: '0xef5addd4847bafe4152571e48439ae549439eda9fcc701165f7132ff0d98ccd1',
  receipt: 
   { transactionHash: '0xef5addd4847bafe4152571e48439ae549439eda9fcc701165f7132ff0d98ccd1',
     transactionIndex: 0,
     blockHash: '0x343efa94711d11019eca228a5c13cff6bcaaea7c3f981538430c3eda09a0f94d',
     blockNumber: 90,
     gasUsed: 32159,
     cumulativeGasUsed: 32159,
     contractAddress: null,
     logs: [ [Object] ] },
  logs: [] }
END_LOG
  [32m  ✓[0m[90m should setParam[0m[31m (81ms)[0m


[92m [0m[32m 1 passing[0m[90m (146ms)[0m
</msg>
<status status="PASS" endtime="20170907 23:27:59.071" starttime="20170907 23:27:59.070"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${truffletest_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170907 23:27:59.072" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170907 23:27:59.072" starttime="20170907 23:27:59.071"></status>
</kw>
<status status="PASS" endtime="20170907 23:27:59.072" starttime="20170907 23:27:55.505"></status>
</kw>
<kw name="Check SetPending Launch Event In IexceOracleSmartContract">
<arguments>
<arg>${work_uid}</arg>
</arguments>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>1 min</arg>
<arg>10 sec</arg>
<arg>IexceOracleSmartContract.Watch LaunchEvent</arg>
</arguments>
<assign>
<var>${watch_launch_event}</var>
</assign>
<kw name="Watch LaunchEvent" library="IexceOracleSmartContract">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd iexec-oracle/API &amp;&amp; ./node_modules/.bin/truffle test test/rf/watchLaunchEventInIexecOracle.js</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${truffletest_result}</var>
</assign>
<msg timestamp="20170907 23:27:59.075" level="INFO">Starting process:
cd iexec-oracle/API &amp;&amp; ./node_modules/.bin/truffle test test/rf/watchLaunchEventInIexecOracle.js</msg>
<msg timestamp="20170907 23:27:59.083" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170907 23:28:03.350" level="INFO">Process completed.</msg>
<msg timestamp="20170907 23:28:03.351" level="INFO">${truffletest_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170907 23:28:03.351" starttime="20170907 23:27:59.075"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stderr}</arg>
</arguments>
<msg timestamp="20170907 23:28:03.352" level="INFO"></msg>
<status status="PASS" endtime="20170907 23:28:03.352" starttime="20170907 23:28:03.351"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
</arguments>
<msg timestamp="20170907 23:28:03.354" level="INFO">Using network 'development'.

IexecOracle deployed at address :0xa297b30d472bd36dacc0e84b6c112e61ae7d5c8a
HelloWorld deployed at address :0xe9c5b9813e9e5f777b05335efc3b7f7e9e8593be

[0m[0m
[0m  Contract: IexecOracle[0m
BEGIN_LOG
[ { logIndex: 0,
    transactionIndex: 0,
    transactionHash: '0xb4b5a9fa98ebbae6795fa9490e2b9c5594daf1b0f53ac0590c307936015a28c6',
    blockHash: '0x399ff692d931fef9c9bdec32f72cb29141e02c7e2efacce4d4b741073fc80585',
    blockNumber: 21,
    address: '0x59e2e92ffaee0368d5d3ddbf817527c01b0b0285',
    type: 'mined',
    event: 'Launch',
    args: 
     { user: '0x0d8fdb4933a1a5af5bc7a8e344dc0d57d0be37fb',
       provider: '0x280c2eb535d3ea1c09e1d7e04e23e07420f161db',
       creator: '0xd2bd96d5721210b6389b7dc03dc8f96c962197f4',
       functionName: 'register',
       param1: 'echo',
       param2: '',
       workUid: '' } },
  { logIndex: 0,
    transactionIndex: 0,
    transactionHash: '0xe41467e0cd243bbbe18fc165b9544523ad0a07e6117e21c393212da7ef9ba8fa',
    blockHash: '0xe6b63aa4f4caa28cb0aaa721093171b40a1dd58efa5b5bb053d32ee9f37641fb',
    blockNumber: 68,
    address: '0x59e2e92ffaee0368d5d3ddbf817527c01b0b0285',
    type: 'mined',
    event: 'Launch',
    args: 
     { user: '0x0d8fdb4933a1a5af5bc7a8e344dc0d57d0be37fb',
       provider: '0x280c2eb535d3ea1c09e1d7e04e23e07420f161db',
       creator: '0xd2bd96d5721210b6389b7dc03dc8f96c962197f4',
       functionName: 'setParam',
       param1: 'cmdline',
       param2: 'HelloWorld!!!',
       workUid: 'fe6112ad-6d81-414d-99cd-5e54a6895062' } },
  { logIndex: 0,
    transactionIndex: 0,
    transactionHash: '0xef5addd4847bafe4152571e48439ae549439eda9fcc701165f7132ff0d98ccd1',
    blockHash: '0x343efa94711d11019eca228a5c13cff6bcaaea7c3f981538430c3eda09a0f94d',
    blockNumber: 90,
    address: '0x59e2e92ffaee0368d5d3ddbf817527c01b0b0285',
    type: 'mined',
    event: 'Launch',
    args: 
     { user: '0x0d8fdb4933a1a5af5bc7a8e344dc0d57d0be37fb',
       provider: '0x280c2eb535d3ea1c09e1d7e04e23e07420f161db',
       creator: '0xd2bd96d5721210b6389b7dc03dc8f96c962197f4',
       functionName: 'setPending',
       param1: 'status',
       param2: 'pending',
       workUid: 'fe6112ad-6d81-414d-99cd-5e54a6895062' } } ]
END_LOG
  [32m  ✓[0m[90m watch CallbackEvent[0m[31m (636ms)[0m


[92m [0m[32m 1 passing[0m[90m (709ms)[0m
</msg>
<status status="PASS" endtime="20170907 23:28:03.354" starttime="20170907 23:28:03.353"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${truffletest_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170907 23:28:03.357" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170907 23:28:03.358" starttime="20170907 23:28:03.356"></status>
</kw>
<status status="PASS" endtime="20170907 23:28:03.358" starttime="20170907 23:27:59.074"></status>
</kw>
<msg timestamp="20170907 23:28:03.358" level="INFO">${watch_launch_event} = Using network 'development'.

IexecOracle deployed at address :0xa297b30d472bd36dacc0e84b6c112e61ae7d5c8a
HelloWorld deployed at address :0xe9c5b9813e9e5f777b05335efc3b7f7e9e8593be

[0m[0m
[0m  Con...</msg>
<status status="PASS" endtime="20170907 23:28:03.358" starttime="20170907 23:27:59.074"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${watch_launch_event}</arg>
<arg>functionName: 'setPending'</arg>
</arguments>
<status status="PASS" endtime="20170907 23:28:03.359" starttime="20170907 23:28:03.359"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${watch_launch_event}</arg>
<arg>param1: 'status'</arg>
</arguments>
<status status="PASS" endtime="20170907 23:28:03.360" starttime="20170907 23:28:03.359"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${watch_launch_event}</arg>
<arg>param2: 'pending'</arg>
</arguments>
<status status="PASS" endtime="20170907 23:28:03.360" starttime="20170907 23:28:03.360"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${watch_launch_event}</arg>
<arg>user: '${USER}'</arg>
</arguments>
<status status="PASS" endtime="20170907 23:28:03.361" starttime="20170907 23:28:03.360"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${watch_launch_event}</arg>
<arg>creator: '${CREATOR}'</arg>
</arguments>
<status status="PASS" endtime="20170907 23:28:03.361" starttime="20170907 23:28:03.361"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${watch_launch_event}</arg>
<arg>provider: '${HELLO_WORLD_SM_ADDRESS}'</arg>
</arguments>
<status status="PASS" endtime="20170907 23:28:03.362" starttime="20170907 23:28:03.361"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${watch_launch_event}</arg>
<arg>workUid: '${work_uid}'</arg>
</arguments>
<status status="PASS" endtime="20170907 23:28:03.362" starttime="20170907 23:28:03.362"></status>
</kw>
<status status="PASS" endtime="20170907 23:28:03.362" starttime="20170907 23:27:59.073"></status>
</kw>
<kw name="Check SetPending CallbackEvent Event In IexceOracleSmartContract">
<arguments>
<arg>${work_uid}</arg>
</arguments>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>1 min</arg>
<arg>10 sec</arg>
<arg>IexceOracleSmartContract.Watch CallbackEvent</arg>
</arguments>
<assign>
<var>${watch_callback_event}</var>
</assign>
<kw name="Watch CallbackEvent" library="IexceOracleSmartContract">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd iexec-oracle/API &amp;&amp; ./node_modules/.bin/truffle test test/rf/watchCallbackEventInIexecOracle.js</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${truffletest_result}</var>
</assign>
<msg timestamp="20170907 23:28:03.365" level="INFO">Starting process:
cd iexec-oracle/API &amp;&amp; ./node_modules/.bin/truffle test test/rf/watchCallbackEventInIexecOracle.js</msg>
<msg timestamp="20170907 23:28:03.369" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170907 23:28:07.502" level="INFO">Process completed.</msg>
<msg timestamp="20170907 23:28:07.502" level="INFO">${truffletest_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170907 23:28:07.503" starttime="20170907 23:28:03.364"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stderr}</arg>
</arguments>
<msg timestamp="20170907 23:28:07.504" level="INFO"></msg>
<status status="PASS" endtime="20170907 23:28:07.504" starttime="20170907 23:28:07.503"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
</arguments>
<msg timestamp="20170907 23:28:07.504" level="INFO">Using network 'development'.

IexecOracle deployed at address :0xfbc533a98cc62e76dd2e5c3ab2a7660aa381852e
HelloWorld deployed at address :0x6fa7dc12dd2837dd334557bcf55b27ea765e51ba

[0m[0m
[0m  Contract: IexecOracle[0m
BEGIN_LOG
[ { logIndex: 0,
    transactionIndex: 0,
    transactionHash: '0x2ee472b3380abacba507a6c782dc0eb17f30eccff207ffd3548db433b5725954',
    blockHash: '0x123384f8baa0edaf948216261d325ee304c908333f25d2831f767e0b96ed7ad9',
    blockNumber: 22,
    address: '0x59e2e92ffaee0368d5d3ddbf817527c01b0b0285',
    type: 'mined',
    event: 'CallbackEvent',
    args: 
     { callbackType: 'RegisterCallback',
       user: '0x0d8fdb4933a1a5af5bc7a8e344dc0d57d0be37fb',
       provider: '0x280c2eb535d3ea1c09e1d7e04e23e07420f161db',
       creator: '0xd2bd96d5721210b6389b7dc03dc8f96c962197f4',
       appName: 'echo',
       workUid: 'fe6112ad-6d81-414d-99cd-5e54a6895062',
       status: [Object],
       errorMsg: '' } },
  { logIndex: 0,
    transactionIndex: 0,
    transactionHash: '0x90559391935e2440c9983407613d5bf25a2a5e313c52e439ec372e66fe67f545',
    blockHash: '0x7cdb47b103c6e2d6de0c9e7aec62d5e51de20000864b453310855518ac1ec9b8',
    blockNumber: 69,
    address: '0x59e2e92ffaee0368d5d3ddbf817527c01b0b0285',
    type: 'mined',
    event: 'CallbackEvent',
    args: 
     { callbackType: 'SetParamCallback',
       user: '0x0d8fdb4933a1a5af5bc7a8e344dc0d57d0be37fb',
       provider: '0x280c2eb535d3ea1c09e1d7e04e23e07420f161db',
       creator: '0xd2bd96d5721210b6389b7dc03dc8f96c962197f4',
       appName: 'echo',
       workUid: 'fe6112ad-6d81-414d-99cd-5e54a6895062',
       status: [Object],
       errorMsg: '' } },
  { logIndex: 0,
    transactionIndex: 0,
    transactionHash: '0x16f65631b46853d7614ceb18c4af714c09058898cf479910749dde0d067e96c0',
    blockHash: '0x2e531a6ddc0604645f263949aa3a0a197482fc4f02f43e4dff1a9ec46998f749',
    blockNumber: 91,
    address: '0x59e2e92ffaee0368d5d3ddbf817527c01b0b0285',
    type: 'mined',
    event: 'CallbackEvent',
    args: 
     { callbackType: 'SetPendingCallback',
       user: '0x0d8fdb4933a1a5af5bc7a8e344dc0d57d0be37fb',
       provider: '0x280c2eb535d3ea1c09e1d7e04e23e07420f161db',
       creator: '0xd2bd96d5721210b6389b7dc03dc8f96c962197f4',
       appName: 'echo',
       workUid: 'fe6112ad-6d81-414d-99cd-5e54a6895062',
       status: [Object],
       errorMsg: '' } } ]
END_LOG
  [32m  ✓[0m[90m watch CallbackEvent[0m[31m (696ms)[0m


[92m [0m[32m 1 passing[0m[90m (779ms)[0m
</msg>
<status status="PASS" endtime="20170907 23:28:07.504" starttime="20170907 23:28:07.504"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${truffletest_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170907 23:28:07.505" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170907 23:28:07.505" starttime="20170907 23:28:07.504"></status>
</kw>
<status status="PASS" endtime="20170907 23:28:07.505" starttime="20170907 23:28:03.364"></status>
</kw>
<msg timestamp="20170907 23:28:07.505" level="INFO">${watch_callback_event} = Using network 'development'.

IexecOracle deployed at address :0xfbc533a98cc62e76dd2e5c3ab2a7660aa381852e
HelloWorld deployed at address :0x6fa7dc12dd2837dd334557bcf55b27ea765e51ba

[0m[0m
[0m  Con...</msg>
<status status="PASS" endtime="20170907 23:28:07.505" starttime="20170907 23:28:03.363"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${watch_callback_event}</arg>
<arg>callbackType: 'SetPendingCallback'</arg>
</arguments>
<status status="PASS" endtime="20170907 23:28:07.506" starttime="20170907 23:28:07.506"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${watch_callback_event}</arg>
<arg>appName: 'echo'</arg>
</arguments>
<status status="PASS" endtime="20170907 23:28:07.507" starttime="20170907 23:28:07.506"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${watch_callback_event}</arg>
<arg>user: '${USER}'</arg>
</arguments>
<status status="PASS" endtime="20170907 23:28:07.508" starttime="20170907 23:28:07.507"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${watch_callback_event}</arg>
<arg>creator: '${CREATOR}'</arg>
</arguments>
<status status="PASS" endtime="20170907 23:28:07.509" starttime="20170907 23:28:07.508"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${watch_callback_event}</arg>
<arg>provider: '${HELLO_WORLD_SM_ADDRESS}'</arg>
</arguments>
<status status="PASS" endtime="20170907 23:28:07.510" starttime="20170907 23:28:07.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${watch_callback_event}</arg>
<arg>workUid: '${work_uid}'</arg>
</arguments>
<status status="PASS" endtime="20170907 23:28:07.511" starttime="20170907 23:28:07.510"></status>
</kw>
<status status="PASS" endtime="20170907 23:28:07.511" starttime="20170907 23:28:03.363"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3 min</arg>
<arg>5 sec</arg>
<arg>XWClient.Check XWSTATUS Completed</arg>
<arg>${work_uid}</arg>
</arguments>
<kw name="Check XWSTATUS Completed" library="XWClient">
<arguments>
<arg>${work_uid}</arg>
</arguments>
<kw name="XWSTATUSCommand" library="XWClient">
<doc>Usage : XWSTATUS uid</doc>
<arguments>
<arg>${uid}</arg>
</arguments>
<assign>
<var>${status_result}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd ${DIST_XWHEP_PATH}/bin &amp;&amp; ./xwstatus ${uid}</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${cmd_result}</var>
</assign>
<msg timestamp="20170907 23:28:07.515" level="INFO">Starting process:
cd /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin &amp;&amp; ./xwstatus fe6112ad-6d81-414d-99cd-5e54a6895062</msg>
<msg timestamp="20170907 23:28:07.520" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170907 23:28:08.532" level="INFO">Process completed.</msg>
<msg timestamp="20170907 23:28:08.533" level="INFO">${cmd_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170907 23:28:08.533" starttime="20170907 23:28:07.515"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stderr}</arg>
</arguments>
<msg timestamp="20170907 23:28:08.534" level="INFO"></msg>
<status status="PASS" endtime="20170907 23:28:08.534" starttime="20170907 23:28:08.533"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
</arguments>
<msg timestamp="20170907 23:28:08.534" level="INFO"> UID='fe6112ad-6d81-414d-99cd-5e54a6895062', STATUS='PENDING', COMPLETEDDATE=NULL, LABEL=NULL</msg>
<status status="PASS" endtime="20170907 23:28:08.535" starttime="20170907 23:28:08.534"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${cmd_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170907 23:28:08.535" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170907 23:28:08.535" starttime="20170907 23:28:08.535"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
<arg>STATUS='(?P&lt;status&gt;.*)', COMPLETEDDATE</arg>
<arg>status</arg>
</arguments>
<assign>
<var>@{status_result}</var>
</assign>
<msg timestamp="20170907 23:28:08.536" level="INFO">@{status_result} = [ PENDING ]</msg>
<status status="PASS" endtime="20170907 23:28:08.536" starttime="20170907 23:28:08.535"></status>
</kw>
<msg timestamp="20170907 23:28:08.536" level="INFO">${status_result} = PENDING</msg>
<status status="PASS" endtime="20170907 23:28:08.536" starttime="20170907 23:28:07.514"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${status_result}</arg>
<arg>COMPLETED</arg>
</arguments>
<msg timestamp="20170907 23:28:08.537" level="FAIL">PENDING != COMPLETED</msg>
<status status="FAIL" endtime="20170907 23:28:08.537" starttime="20170907 23:28:08.536"></status>
</kw>
<status status="FAIL" endtime="20170907 23:28:08.537" starttime="20170907 23:28:07.513"></status>
</kw>
<kw name="Check XWSTATUS Completed" library="XWClient">
<arguments>
<arg>${work_uid}</arg>
</arguments>
<kw name="XWSTATUSCommand" library="XWClient">
<doc>Usage : XWSTATUS uid</doc>
<arguments>
<arg>${uid}</arg>
</arguments>
<assign>
<var>${status_result}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd ${DIST_XWHEP_PATH}/bin &amp;&amp; ./xwstatus ${uid}</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${cmd_result}</var>
</assign>
<msg timestamp="20170907 23:28:13.542" level="INFO">Starting process:
cd /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin &amp;&amp; ./xwstatus fe6112ad-6d81-414d-99cd-5e54a6895062</msg>
<msg timestamp="20170907 23:28:13.548" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170907 23:28:14.504" level="INFO">Process completed.</msg>
<msg timestamp="20170907 23:28:14.505" level="INFO">${cmd_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170907 23:28:14.505" starttime="20170907 23:28:13.540"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stderr}</arg>
</arguments>
<msg timestamp="20170907 23:28:14.506" level="INFO"></msg>
<status status="PASS" endtime="20170907 23:28:14.506" starttime="20170907 23:28:14.505"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
</arguments>
<msg timestamp="20170907 23:28:14.507" level="INFO"> UID='fe6112ad-6d81-414d-99cd-5e54a6895062', STATUS='RUNNING', COMPLETEDDATE=NULL, LABEL=NULL</msg>
<status status="PASS" endtime="20170907 23:28:14.507" starttime="20170907 23:28:14.506"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${cmd_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170907 23:28:14.509" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170907 23:28:14.509" starttime="20170907 23:28:14.508"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
<arg>STATUS='(?P&lt;status&gt;.*)', COMPLETEDDATE</arg>
<arg>status</arg>
</arguments>
<assign>
<var>@{status_result}</var>
</assign>
<msg timestamp="20170907 23:28:14.511" level="INFO">@{status_result} = [ RUNNING ]</msg>
<status status="PASS" endtime="20170907 23:28:14.511" starttime="20170907 23:28:14.510"></status>
</kw>
<msg timestamp="20170907 23:28:14.511" level="INFO">${status_result} = RUNNING</msg>
<status status="PASS" endtime="20170907 23:28:14.511" starttime="20170907 23:28:13.538"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${status_result}</arg>
<arg>COMPLETED</arg>
</arguments>
<msg timestamp="20170907 23:28:14.512" level="FAIL">RUNNING != COMPLETED</msg>
<status status="FAIL" endtime="20170907 23:28:14.512" starttime="20170907 23:28:14.512"></status>
</kw>
<status status="FAIL" endtime="20170907 23:28:14.513" starttime="20170907 23:28:13.538"></status>
</kw>
<kw name="Check XWSTATUS Completed" library="XWClient">
<arguments>
<arg>${work_uid}</arg>
</arguments>
<kw name="XWSTATUSCommand" library="XWClient">
<doc>Usage : XWSTATUS uid</doc>
<arguments>
<arg>${uid}</arg>
</arguments>
<assign>
<var>${status_result}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd ${DIST_XWHEP_PATH}/bin &amp;&amp; ./xwstatus ${uid}</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${cmd_result}</var>
</assign>
<msg timestamp="20170907 23:28:19.518" level="INFO">Starting process:
cd /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin &amp;&amp; ./xwstatus fe6112ad-6d81-414d-99cd-5e54a6895062</msg>
<msg timestamp="20170907 23:28:19.521" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170907 23:28:20.376" level="INFO">Process completed.</msg>
<msg timestamp="20170907 23:28:20.376" level="INFO">${cmd_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170907 23:28:20.376" starttime="20170907 23:28:19.517"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stderr}</arg>
</arguments>
<msg timestamp="20170907 23:28:20.377" level="INFO"></msg>
<status status="PASS" endtime="20170907 23:28:20.377" starttime="20170907 23:28:20.376"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
</arguments>
<msg timestamp="20170907 23:28:20.378" level="INFO"> UID='fe6112ad-6d81-414d-99cd-5e54a6895062', STATUS='RUNNING', COMPLETEDDATE=NULL, LABEL=NULL</msg>
<status status="PASS" endtime="20170907 23:28:20.378" starttime="20170907 23:28:20.377"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${cmd_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170907 23:28:20.378" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170907 23:28:20.378" starttime="20170907 23:28:20.378"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
<arg>STATUS='(?P&lt;status&gt;.*)', COMPLETEDDATE</arg>
<arg>status</arg>
</arguments>
<assign>
<var>@{status_result}</var>
</assign>
<msg timestamp="20170907 23:28:20.379" level="INFO">@{status_result} = [ RUNNING ]</msg>
<status status="PASS" endtime="20170907 23:28:20.379" starttime="20170907 23:28:20.378"></status>
</kw>
<msg timestamp="20170907 23:28:20.379" level="INFO">${status_result} = RUNNING</msg>
<status status="PASS" endtime="20170907 23:28:20.379" starttime="20170907 23:28:19.516"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${status_result}</arg>
<arg>COMPLETED</arg>
</arguments>
<msg timestamp="20170907 23:28:20.380" level="FAIL">RUNNING != COMPLETED</msg>
<status status="FAIL" endtime="20170907 23:28:20.380" starttime="20170907 23:28:20.379"></status>
</kw>
<status status="FAIL" endtime="20170907 23:28:20.380" starttime="20170907 23:28:19.513"></status>
</kw>
<kw name="Check XWSTATUS Completed" library="XWClient">
<arguments>
<arg>${work_uid}</arg>
</arguments>
<kw name="XWSTATUSCommand" library="XWClient">
<doc>Usage : XWSTATUS uid</doc>
<arguments>
<arg>${uid}</arg>
</arguments>
<assign>
<var>${status_result}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd ${DIST_XWHEP_PATH}/bin &amp;&amp; ./xwstatus ${uid}</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${cmd_result}</var>
</assign>
<msg timestamp="20170907 23:28:25.388" level="INFO">Starting process:
cd /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin &amp;&amp; ./xwstatus fe6112ad-6d81-414d-99cd-5e54a6895062</msg>
<msg timestamp="20170907 23:28:25.392" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170907 23:28:26.248" level="INFO">Process completed.</msg>
<msg timestamp="20170907 23:28:26.248" level="INFO">${cmd_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170907 23:28:26.248" starttime="20170907 23:28:25.388"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stderr}</arg>
</arguments>
<msg timestamp="20170907 23:28:26.249" level="INFO"></msg>
<status status="PASS" endtime="20170907 23:28:26.249" starttime="20170907 23:28:26.249"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
</arguments>
<msg timestamp="20170907 23:28:26.250" level="INFO"> UID='fe6112ad-6d81-414d-99cd-5e54a6895062', STATUS='RUNNING', COMPLETEDDATE=NULL, LABEL=NULL</msg>
<status status="PASS" endtime="20170907 23:28:26.250" starttime="20170907 23:28:26.249"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${cmd_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170907 23:28:26.251" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170907 23:28:26.251" starttime="20170907 23:28:26.250"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
<arg>STATUS='(?P&lt;status&gt;.*)', COMPLETEDDATE</arg>
<arg>status</arg>
</arguments>
<assign>
<var>@{status_result}</var>
</assign>
<msg timestamp="20170907 23:28:26.252" level="INFO">@{status_result} = [ RUNNING ]</msg>
<status status="PASS" endtime="20170907 23:28:26.252" starttime="20170907 23:28:26.252"></status>
</kw>
<msg timestamp="20170907 23:28:26.253" level="INFO">${status_result} = RUNNING</msg>
<status status="PASS" endtime="20170907 23:28:26.253" starttime="20170907 23:28:25.387"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${status_result}</arg>
<arg>COMPLETED</arg>
</arguments>
<msg timestamp="20170907 23:28:26.253" level="FAIL">RUNNING != COMPLETED</msg>
<status status="FAIL" endtime="20170907 23:28:26.253" starttime="20170907 23:28:26.253"></status>
</kw>
<status status="FAIL" endtime="20170907 23:28:26.254" starttime="20170907 23:28:25.387"></status>
</kw>
<kw name="Check XWSTATUS Completed" library="XWClient">
<arguments>
<arg>${work_uid}</arg>
</arguments>
<kw name="XWSTATUSCommand" library="XWClient">
<doc>Usage : XWSTATUS uid</doc>
<arguments>
<arg>${uid}</arg>
</arguments>
<assign>
<var>${status_result}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd ${DIST_XWHEP_PATH}/bin &amp;&amp; ./xwstatus ${uid}</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${cmd_result}</var>
</assign>
<msg timestamp="20170907 23:28:31.260" level="INFO">Starting process:
cd /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin &amp;&amp; ./xwstatus fe6112ad-6d81-414d-99cd-5e54a6895062</msg>
<msg timestamp="20170907 23:28:31.264" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170907 23:28:32.061" level="INFO">Process completed.</msg>
<msg timestamp="20170907 23:28:32.061" level="INFO">${cmd_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170907 23:28:32.061" starttime="20170907 23:28:31.259"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stderr}</arg>
</arguments>
<msg timestamp="20170907 23:28:32.062" level="INFO"></msg>
<status status="PASS" endtime="20170907 23:28:32.062" starttime="20170907 23:28:32.061"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
</arguments>
<msg timestamp="20170907 23:28:32.062" level="INFO"> UID='fe6112ad-6d81-414d-99cd-5e54a6895062', STATUS='RUNNING', COMPLETEDDATE=NULL, LABEL=NULL</msg>
<status status="PASS" endtime="20170907 23:28:32.062" starttime="20170907 23:28:32.062"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${cmd_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170907 23:28:32.063" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170907 23:28:32.063" starttime="20170907 23:28:32.063"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
<arg>STATUS='(?P&lt;status&gt;.*)', COMPLETEDDATE</arg>
<arg>status</arg>
</arguments>
<assign>
<var>@{status_result}</var>
</assign>
<msg timestamp="20170907 23:28:32.064" level="INFO">@{status_result} = [ RUNNING ]</msg>
<status status="PASS" endtime="20170907 23:28:32.064" starttime="20170907 23:28:32.063"></status>
</kw>
<msg timestamp="20170907 23:28:32.064" level="INFO">${status_result} = RUNNING</msg>
<status status="PASS" endtime="20170907 23:28:32.064" starttime="20170907 23:28:31.258"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${status_result}</arg>
<arg>COMPLETED</arg>
</arguments>
<msg timestamp="20170907 23:28:32.065" level="FAIL">RUNNING != COMPLETED</msg>
<status status="FAIL" endtime="20170907 23:28:32.065" starttime="20170907 23:28:32.064"></status>
</kw>
<status status="FAIL" endtime="20170907 23:28:32.065" starttime="20170907 23:28:31.257"></status>
</kw>
<kw name="Check XWSTATUS Completed" library="XWClient">
<arguments>
<arg>${work_uid}</arg>
</arguments>
<kw name="XWSTATUSCommand" library="XWClient">
<doc>Usage : XWSTATUS uid</doc>
<arguments>
<arg>${uid}</arg>
</arguments>
<assign>
<var>${status_result}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd ${DIST_XWHEP_PATH}/bin &amp;&amp; ./xwstatus ${uid}</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${cmd_result}</var>
</assign>
<msg timestamp="20170907 23:28:37.068" level="INFO">Starting process:
cd /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin &amp;&amp; ./xwstatus fe6112ad-6d81-414d-99cd-5e54a6895062</msg>
<msg timestamp="20170907 23:28:37.071" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170907 23:28:38.261" level="INFO">Process completed.</msg>
<msg timestamp="20170907 23:28:38.261" level="INFO">${cmd_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170907 23:28:38.261" starttime="20170907 23:28:37.067"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stderr}</arg>
</arguments>
<msg timestamp="20170907 23:28:38.262" level="INFO"></msg>
<status status="PASS" endtime="20170907 23:28:38.263" starttime="20170907 23:28:38.262"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
</arguments>
<msg timestamp="20170907 23:28:38.264" level="INFO"> UID='fe6112ad-6d81-414d-99cd-5e54a6895062', STATUS='RUNNING', COMPLETEDDATE=NULL, LABEL=NULL</msg>
<status status="PASS" endtime="20170907 23:28:38.264" starttime="20170907 23:28:38.263"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${cmd_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170907 23:28:38.264" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170907 23:28:38.265" starttime="20170907 23:28:38.264"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
<arg>STATUS='(?P&lt;status&gt;.*)', COMPLETEDDATE</arg>
<arg>status</arg>
</arguments>
<assign>
<var>@{status_result}</var>
</assign>
<msg timestamp="20170907 23:28:38.265" level="INFO">@{status_result} = [ RUNNING ]</msg>
<status status="PASS" endtime="20170907 23:28:38.265" starttime="20170907 23:28:38.265"></status>
</kw>
<msg timestamp="20170907 23:28:38.266" level="INFO">${status_result} = RUNNING</msg>
<status status="PASS" endtime="20170907 23:28:38.266" starttime="20170907 23:28:37.066"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${status_result}</arg>
<arg>COMPLETED</arg>
</arguments>
<msg timestamp="20170907 23:28:38.267" level="FAIL">RUNNING != COMPLETED</msg>
<status status="FAIL" endtime="20170907 23:28:38.267" starttime="20170907 23:28:38.266"></status>
</kw>
<status status="FAIL" endtime="20170907 23:28:38.267" starttime="20170907 23:28:37.066"></status>
</kw>
<kw name="Check XWSTATUS Completed" library="XWClient">
<arguments>
<arg>${work_uid}</arg>
</arguments>
<kw name="XWSTATUSCommand" library="XWClient">
<doc>Usage : XWSTATUS uid</doc>
<arguments>
<arg>${uid}</arg>
</arguments>
<assign>
<var>${status_result}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd ${DIST_XWHEP_PATH}/bin &amp;&amp; ./xwstatus ${uid}</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${cmd_result}</var>
</assign>
<msg timestamp="20170907 23:28:43.270" level="INFO">Starting process:
cd /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin &amp;&amp; ./xwstatus fe6112ad-6d81-414d-99cd-5e54a6895062</msg>
<msg timestamp="20170907 23:28:43.274" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170907 23:28:44.441" level="INFO">Process completed.</msg>
<msg timestamp="20170907 23:28:44.441" level="INFO">${cmd_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170907 23:28:44.441" starttime="20170907 23:28:43.270"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stderr}</arg>
</arguments>
<msg timestamp="20170907 23:28:44.443" level="INFO"></msg>
<status status="PASS" endtime="20170907 23:28:44.443" starttime="20170907 23:28:44.442"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
</arguments>
<msg timestamp="20170907 23:28:44.443" level="INFO"> UID='fe6112ad-6d81-414d-99cd-5e54a6895062', STATUS='RUNNING', COMPLETEDDATE=NULL, LABEL=NULL</msg>
<status status="PASS" endtime="20170907 23:28:44.443" starttime="20170907 23:28:44.443"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${cmd_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170907 23:28:44.444" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170907 23:28:44.444" starttime="20170907 23:28:44.444"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
<arg>STATUS='(?P&lt;status&gt;.*)', COMPLETEDDATE</arg>
<arg>status</arg>
</arguments>
<assign>
<var>@{status_result}</var>
</assign>
<msg timestamp="20170907 23:28:44.445" level="INFO">@{status_result} = [ RUNNING ]</msg>
<status status="PASS" endtime="20170907 23:28:44.445" starttime="20170907 23:28:44.444"></status>
</kw>
<msg timestamp="20170907 23:28:44.445" level="INFO">${status_result} = RUNNING</msg>
<status status="PASS" endtime="20170907 23:28:44.445" starttime="20170907 23:28:43.269"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${status_result}</arg>
<arg>COMPLETED</arg>
</arguments>
<msg timestamp="20170907 23:28:44.446" level="FAIL">RUNNING != COMPLETED</msg>
<status status="FAIL" endtime="20170907 23:28:44.446" starttime="20170907 23:28:44.446"></status>
</kw>
<status status="FAIL" endtime="20170907 23:28:44.447" starttime="20170907 23:28:43.268"></status>
</kw>
<kw name="Check XWSTATUS Completed" library="XWClient">
<arguments>
<arg>${work_uid}</arg>
</arguments>
<kw name="XWSTATUSCommand" library="XWClient">
<doc>Usage : XWSTATUS uid</doc>
<arguments>
<arg>${uid}</arg>
</arguments>
<assign>
<var>${status_result}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd ${DIST_XWHEP_PATH}/bin &amp;&amp; ./xwstatus ${uid}</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${cmd_result}</var>
</assign>
<msg timestamp="20170907 23:28:49.450" level="INFO">Starting process:
cd /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin &amp;&amp; ./xwstatus fe6112ad-6d81-414d-99cd-5e54a6895062</msg>
<msg timestamp="20170907 23:28:49.454" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170907 23:28:50.651" level="INFO">Process completed.</msg>
<msg timestamp="20170907 23:28:50.652" level="INFO">${cmd_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170907 23:28:50.652" starttime="20170907 23:28:49.449"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stderr}</arg>
</arguments>
<msg timestamp="20170907 23:28:50.653" level="INFO"></msg>
<status status="PASS" endtime="20170907 23:28:50.653" starttime="20170907 23:28:50.652"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
</arguments>
<msg timestamp="20170907 23:28:50.655" level="INFO"> UID='fe6112ad-6d81-414d-99cd-5e54a6895062', STATUS='RUNNING', COMPLETEDDATE=NULL, LABEL=NULL</msg>
<status status="PASS" endtime="20170907 23:28:50.655" starttime="20170907 23:28:50.654"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${cmd_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170907 23:28:50.657" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170907 23:28:50.658" starttime="20170907 23:28:50.656"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
<arg>STATUS='(?P&lt;status&gt;.*)', COMPLETEDDATE</arg>
<arg>status</arg>
</arguments>
<assign>
<var>@{status_result}</var>
</assign>
<msg timestamp="20170907 23:28:50.660" level="INFO">@{status_result} = [ RUNNING ]</msg>
<status status="PASS" endtime="20170907 23:28:50.661" starttime="20170907 23:28:50.659"></status>
</kw>
<msg timestamp="20170907 23:28:50.662" level="INFO">${status_result} = RUNNING</msg>
<status status="PASS" endtime="20170907 23:28:50.662" starttime="20170907 23:28:49.448"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${status_result}</arg>
<arg>COMPLETED</arg>
</arguments>
<msg timestamp="20170907 23:28:50.664" level="FAIL">RUNNING != COMPLETED</msg>
<status status="FAIL" endtime="20170907 23:28:50.664" starttime="20170907 23:28:50.663"></status>
</kw>
<status status="FAIL" endtime="20170907 23:28:50.665" starttime="20170907 23:28:49.447"></status>
</kw>
<kw name="Check XWSTATUS Completed" library="XWClient">
<arguments>
<arg>${work_uid}</arg>
</arguments>
<kw name="XWSTATUSCommand" library="XWClient">
<doc>Usage : XWSTATUS uid</doc>
<arguments>
<arg>${uid}</arg>
</arguments>
<assign>
<var>${status_result}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd ${DIST_XWHEP_PATH}/bin &amp;&amp; ./xwstatus ${uid}</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${cmd_result}</var>
</assign>
<msg timestamp="20170907 23:28:55.667" level="INFO">Starting process:
cd /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin &amp;&amp; ./xwstatus fe6112ad-6d81-414d-99cd-5e54a6895062</msg>
<msg timestamp="20170907 23:28:55.672" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170907 23:28:56.934" level="INFO">Process completed.</msg>
<msg timestamp="20170907 23:28:56.935" level="INFO">${cmd_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170907 23:28:56.935" starttime="20170907 23:28:55.667"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stderr}</arg>
</arguments>
<msg timestamp="20170907 23:28:56.936" level="INFO"></msg>
<status status="PASS" endtime="20170907 23:28:56.936" starttime="20170907 23:28:56.935"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
</arguments>
<msg timestamp="20170907 23:28:56.937" level="INFO"> UID='fe6112ad-6d81-414d-99cd-5e54a6895062', STATUS='RUNNING', COMPLETEDDATE=NULL, LABEL=NULL</msg>
<status status="PASS" endtime="20170907 23:28:56.937" starttime="20170907 23:28:56.936"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${cmd_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170907 23:28:56.937" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170907 23:28:56.937" starttime="20170907 23:28:56.937"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
<arg>STATUS='(?P&lt;status&gt;.*)', COMPLETEDDATE</arg>
<arg>status</arg>
</arguments>
<assign>
<var>@{status_result}</var>
</assign>
<msg timestamp="20170907 23:28:56.938" level="INFO">@{status_result} = [ RUNNING ]</msg>
<status status="PASS" endtime="20170907 23:28:56.938" starttime="20170907 23:28:56.938"></status>
</kw>
<msg timestamp="20170907 23:28:56.939" level="INFO">${status_result} = RUNNING</msg>
<status status="PASS" endtime="20170907 23:28:56.939" starttime="20170907 23:28:55.666"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${status_result}</arg>
<arg>COMPLETED</arg>
</arguments>
<msg timestamp="20170907 23:28:56.940" level="FAIL">RUNNING != COMPLETED</msg>
<status status="FAIL" endtime="20170907 23:28:56.940" starttime="20170907 23:28:56.939"></status>
</kw>
<status status="FAIL" endtime="20170907 23:28:56.940" starttime="20170907 23:28:55.665"></status>
</kw>
<kw name="Check XWSTATUS Completed" library="XWClient">
<arguments>
<arg>${work_uid}</arg>
</arguments>
<kw name="XWSTATUSCommand" library="XWClient">
<doc>Usage : XWSTATUS uid</doc>
<arguments>
<arg>${uid}</arg>
</arguments>
<assign>
<var>${status_result}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd ${DIST_XWHEP_PATH}/bin &amp;&amp; ./xwstatus ${uid}</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${cmd_result}</var>
</assign>
<msg timestamp="20170907 23:29:01.943" level="INFO">Starting process:
cd /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin &amp;&amp; ./xwstatus fe6112ad-6d81-414d-99cd-5e54a6895062</msg>
<msg timestamp="20170907 23:29:01.946" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170907 23:29:03.169" level="INFO">Process completed.</msg>
<msg timestamp="20170907 23:29:03.169" level="INFO">${cmd_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170907 23:29:03.169" starttime="20170907 23:29:01.942"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stderr}</arg>
</arguments>
<msg timestamp="20170907 23:29:03.170" level="INFO"></msg>
<status status="PASS" endtime="20170907 23:29:03.170" starttime="20170907 23:29:03.170"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
</arguments>
<msg timestamp="20170907 23:29:03.171" level="INFO"> UID='fe6112ad-6d81-414d-99cd-5e54a6895062', STATUS='COMPLETED', COMPLETEDDATE='2017-09-07 23:28:57', LABEL=NULL</msg>
<status status="PASS" endtime="20170907 23:29:03.171" starttime="20170907 23:29:03.171"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${cmd_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170907 23:29:03.172" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170907 23:29:03.172" starttime="20170907 23:29:03.171"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
<arg>STATUS='(?P&lt;status&gt;.*)', COMPLETEDDATE</arg>
<arg>status</arg>
</arguments>
<assign>
<var>@{status_result}</var>
</assign>
<msg timestamp="20170907 23:29:03.173" level="INFO">@{status_result} = [ COMPLETED ]</msg>
<status status="PASS" endtime="20170907 23:29:03.173" starttime="20170907 23:29:03.172"></status>
</kw>
<msg timestamp="20170907 23:29:03.173" level="INFO">${status_result} = COMPLETED</msg>
<status status="PASS" endtime="20170907 23:29:03.173" starttime="20170907 23:29:01.941"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${status_result}</arg>
<arg>COMPLETED</arg>
</arguments>
<status status="PASS" endtime="20170907 23:29:03.174" starttime="20170907 23:29:03.173"></status>
</kw>
<status status="PASS" endtime="20170907 23:29:03.174" starttime="20170907 23:29:01.941"></status>
</kw>
<status status="PASS" endtime="20170907 23:29:03.174" starttime="20170907 23:28:07.512"></status>
</kw>
<kw name="Get Status" library="HelloWorldSmartContract">
<arguments>
<arg>${work_uid}</arg>
</arguments>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>sed -i "s/.*return aHelloWorldInstance.statusHelloWorld(.*/return aHelloWorldInstance.statusHelloWorld(\\"${uid}\\",{/g" iexec-oracle/API/test/rf/statusHelloWorldTest.js</arg>
</arguments>
<msg timestamp="20170907 23:29:03.178" level="INFO">Running command 'sed -i "s/.*return aHelloWorldInstance.statusHelloWorld(.*/return aHelloWorldInstance.statusHelloWorld(\"fe6112ad-6d81-414d-99cd-5e54a6895062\",{/g" iexec-oracle/API/test/rf/statusHelloWorldTest.js 2&gt;&amp;1'.</msg>
<status status="PASS" endtime="20170907 23:29:03.205" starttime="20170907 23:29:03.176"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd iexec-oracle/API &amp;&amp; ./node_modules/.bin/truffle test test/rf/statusHelloWorldTest.js</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${truffletest_result}</var>
</assign>
<msg timestamp="20170907 23:29:03.206" level="INFO">Starting process:
cd iexec-oracle/API &amp;&amp; ./node_modules/.bin/truffle test test/rf/statusHelloWorldTest.js</msg>
<msg timestamp="20170907 23:29:03.210" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170907 23:29:08.179" level="INFO">Process completed.</msg>
<msg timestamp="20170907 23:29:08.180" level="INFO">${truffletest_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170907 23:29:08.180" starttime="20170907 23:29:03.206"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stderr}</arg>
</arguments>
<msg timestamp="20170907 23:29:08.181" level="INFO"></msg>
<status status="PASS" endtime="20170907 23:29:08.181" starttime="20170907 23:29:08.180"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
</arguments>
<msg timestamp="20170907 23:29:08.182" level="INFO">Using network 'development'.

IexecOracle deployed at address :0xb02d0ff27c7c9f02891dc6ec7e10b164f8b6b08e
HelloWorld deployed at address :0xd978fae463243e44c13718bc62acf8a5477b5194

[0m[0m
[0m  Contract: HelloWorld[0m
BEGIN_LOG
{ tx: '0xf3d22978a3cee863caacd827a233cd1aa1acfef01ff54d6fd3f7588417dce22f',
  receipt: 
   { transactionHash: '0xf3d22978a3cee863caacd827a233cd1aa1acfef01ff54d6fd3f7588417dce22f',
     transactionIndex: 0,
     blockHash: '0xb70b8e41f2a2d9a784a47993fd22621a481ad9278753ce349289aee93ff997ca',
     blockNumber: 107,
     gasUsed: 31966,
     cumulativeGasUsed: 31966,
     contractAddress: null,
     logs: [ [Object] ] },
  logs: [] }
END_LOG
  [32m  ✓[0m[90m should setParam[0m[31m (114ms)[0m


[92m [0m[32m 1 passing[0m[90m (201ms)[0m
</msg>
<status status="PASS" endtime="20170907 23:29:08.182" starttime="20170907 23:29:08.181"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${truffletest_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170907 23:29:08.183" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170907 23:29:08.183" starttime="20170907 23:29:08.182"></status>
</kw>
<status status="PASS" endtime="20170907 23:29:08.183" starttime="20170907 23:29:03.175"></status>
</kw>
<kw name="Check Status Launch Event In IexceOracleSmartContract">
<arguments>
<arg>${work_uid}</arg>
</arguments>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>1 min</arg>
<arg>10 sec</arg>
<arg>IexceOracleSmartContract.Watch LaunchEvent</arg>
</arguments>
<assign>
<var>${watch_launch_event}</var>
</assign>
<kw name="Watch LaunchEvent" library="IexceOracleSmartContract">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd iexec-oracle/API &amp;&amp; ./node_modules/.bin/truffle test test/rf/watchLaunchEventInIexecOracle.js</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${truffletest_result}</var>
</assign>
<msg timestamp="20170907 23:29:08.187" level="INFO">Starting process:
cd iexec-oracle/API &amp;&amp; ./node_modules/.bin/truffle test test/rf/watchLaunchEventInIexecOracle.js</msg>
<msg timestamp="20170907 23:29:08.193" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170907 23:29:13.448" level="INFO">Process completed.</msg>
<msg timestamp="20170907 23:29:13.449" level="INFO">${truffletest_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170907 23:29:13.449" starttime="20170907 23:29:08.186"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stderr}</arg>
</arguments>
<msg timestamp="20170907 23:29:13.451" level="INFO"></msg>
<status status="PASS" endtime="20170907 23:29:13.453" starttime="20170907 23:29:13.450"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
</arguments>
<msg timestamp="20170907 23:29:13.455" level="INFO">Using network 'development'.

IexecOracle deployed at address :0x7705e6566f44d65c2f8c29fd61ebf473c919a936
HelloWorld deployed at address :0x984dd1d316a401a26d2ceed0b44d8302373e35f4

[0m[0m
[0m  Contract: IexecOracle[0m
BEGIN_LOG
[ { logIndex: 0,
    transactionIndex: 0,
    transactionHash: '0xb4b5a9fa98ebbae6795fa9490e2b9c5594daf1b0f53ac0590c307936015a28c6',
    blockHash: '0x399ff692d931fef9c9bdec32f72cb29141e02c7e2efacce4d4b741073fc80585',
    blockNumber: 21,
    address: '0x59e2e92ffaee0368d5d3ddbf817527c01b0b0285',
    type: 'mined',
    event: 'Launch',
    args: 
     { user: '0x0d8fdb4933a1a5af5bc7a8e344dc0d57d0be37fb',
       provider: '0x280c2eb535d3ea1c09e1d7e04e23e07420f161db',
       creator: '0xd2bd96d5721210b6389b7dc03dc8f96c962197f4',
       functionName: 'register',
       param1: 'echo',
       param2: '',
       workUid: '' } },
  { logIndex: 0,
    transactionIndex: 0,
    transactionHash: '0xe41467e0cd243bbbe18fc165b9544523ad0a07e6117e21c393212da7ef9ba8fa',
    blockHash: '0xe6b63aa4f4caa28cb0aaa721093171b40a1dd58efa5b5bb053d32ee9f37641fb',
    blockNumber: 68,
    address: '0x59e2e92ffaee0368d5d3ddbf817527c01b0b0285',
    type: 'mined',
    event: 'Launch',
    args: 
     { user: '0x0d8fdb4933a1a5af5bc7a8e344dc0d57d0be37fb',
       provider: '0x280c2eb535d3ea1c09e1d7e04e23e07420f161db',
       creator: '0xd2bd96d5721210b6389b7dc03dc8f96c962197f4',
       functionName: 'setParam',
       param1: 'cmdline',
       param2: 'HelloWorld!!!',
       workUid: 'fe6112ad-6d81-414d-99cd-5e54a6895062' } },
  { logIndex: 0,
    transactionIndex: 0,
    transactionHash: '0xef5addd4847bafe4152571e48439ae549439eda9fcc701165f7132ff0d98ccd1',
    blockHash: '0x343efa94711d11019eca228a5c13cff6bcaaea7c3f981538430c3eda09a0f94d',
    blockNumber: 90,
    address: '0x59e2e92ffaee0368d5d3ddbf817527c01b0b0285',
    type: 'mined',
    event: 'Launch',
    args: 
     { user: '0x0d8fdb4933a1a5af5bc7a8e344dc0d57d0be37fb',
       provider: '0x280c2eb535d3ea1c09e1d7e04e23e07420f161db',
       creator: '0xd2bd96d5721210b6389b7dc03dc8f96c962197f4',
       functionName: 'setPending',
       param1: 'status',
       param2: 'pending',
       workUid: 'fe6112ad-6d81-414d-99cd-5e54a6895062' } },
  { logIndex: 0,
    transactionIndex: 0,
    transactionHash: '0xf3d22978a3cee863caacd827a233cd1aa1acfef01ff54d6fd3f7588417dce22f',
    blockHash: '0xb70b8e41f2a2d9a784a47993fd22621a481ad9278753ce349289aee93ff997ca',
    blockNumber: 107,
    address: '0x59e2e92ffaee0368d5d3ddbf817527c01b0b0285',
    type: 'mined',
    event: 'Launch',
    args: 
     { user: '0x0d8fdb4933a1a5af5bc7a8e344dc0d57d0be37fb',
       provider: '0x280c2eb535d3ea1c09e1d7e04e23e07420f161db',
       creator: '0xd2bd96d5721210b6389b7dc03dc8f96c962197f4',
       functionName: 'status',
       param1: '',
       param2: '',
       workUid: 'fe6112ad-6d81-414d-99cd-5e54a6895062' } } ]
END_LOG
  [32m  ✓[0m[90m watch CallbackEvent[0m[31m (1086ms)[0m


[92m [0m[32m 1 passing[0m[90m (1s)[0m
</msg>
<status status="PASS" endtime="20170907 23:29:13.456" starttime="20170907 23:29:13.454"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${truffletest_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170907 23:29:13.456" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170907 23:29:13.457" starttime="20170907 23:29:13.456"></status>
</kw>
<status status="PASS" endtime="20170907 23:29:13.457" starttime="20170907 23:29:08.185"></status>
</kw>
<msg timestamp="20170907 23:29:13.457" level="INFO">${watch_launch_event} = Using network 'development'.

IexecOracle deployed at address :0x7705e6566f44d65c2f8c29fd61ebf473c919a936
HelloWorld deployed at address :0x984dd1d316a401a26d2ceed0b44d8302373e35f4

[0m[0m
[0m  Con...</msg>
<status status="PASS" endtime="20170907 23:29:13.457" starttime="20170907 23:29:08.185"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${watch_launch_event}</arg>
<arg>functionName: 'status'</arg>
</arguments>
<status status="PASS" endtime="20170907 23:29:13.458" starttime="20170907 23:29:13.457"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${watch_launch_event}</arg>
<arg>param1: ''</arg>
</arguments>
<status status="PASS" endtime="20170907 23:29:13.458" starttime="20170907 23:29:13.458"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${watch_launch_event}</arg>
<arg>param2: ''</arg>
</arguments>
<status status="PASS" endtime="20170907 23:29:13.459" starttime="20170907 23:29:13.459"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${watch_launch_event}</arg>
<arg>user: '${USER}'</arg>
</arguments>
<status status="PASS" endtime="20170907 23:29:13.460" starttime="20170907 23:29:13.459"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${watch_launch_event}</arg>
<arg>creator: '${CREATOR}'</arg>
</arguments>
<status status="PASS" endtime="20170907 23:29:13.460" starttime="20170907 23:29:13.460"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${watch_launch_event}</arg>
<arg>provider: '${HELLO_WORLD_SM_ADDRESS}'</arg>
</arguments>
<status status="PASS" endtime="20170907 23:29:13.461" starttime="20170907 23:29:13.460"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${watch_launch_event}</arg>
<arg>workUid: '${work_uid}'</arg>
</arguments>
<status status="PASS" endtime="20170907 23:29:13.462" starttime="20170907 23:29:13.461"></status>
</kw>
<status status="PASS" endtime="20170907 23:29:13.462" starttime="20170907 23:29:08.183"></status>
</kw>
<kw name="Check Status CallbackEvent Event In IexceOracleSmartContract">
<arguments>
<arg>${work_uid}</arg>
</arguments>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>1 min</arg>
<arg>10 sec</arg>
<arg>IexceOracleSmartContract.Watch CallbackEvent</arg>
</arguments>
<assign>
<var>${watch_callback_event}</var>
</assign>
<kw name="Watch CallbackEvent" library="IexceOracleSmartContract">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd iexec-oracle/API &amp;&amp; ./node_modules/.bin/truffle test test/rf/watchCallbackEventInIexecOracle.js</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${truffletest_result}</var>
</assign>
<msg timestamp="20170907 23:29:13.465" level="INFO">Starting process:
cd iexec-oracle/API &amp;&amp; ./node_modules/.bin/truffle test test/rf/watchCallbackEventInIexecOracle.js</msg>
<msg timestamp="20170907 23:29:13.470" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170907 23:29:18.621" level="INFO">Process completed.</msg>
<msg timestamp="20170907 23:29:18.622" level="INFO">${truffletest_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170907 23:29:18.622" starttime="20170907 23:29:13.465"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stderr}</arg>
</arguments>
<msg timestamp="20170907 23:29:18.623" level="INFO"></msg>
<status status="PASS" endtime="20170907 23:29:18.623" starttime="20170907 23:29:18.622"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
</arguments>
<msg timestamp="20170907 23:29:18.624" level="INFO">Using network 'development'.

IexecOracle deployed at address :0x18a6d5dcc53c580eed3d4c417d81a9656d9d8581
HelloWorld deployed at address :0x3e77a3cc5faa2d45ceb29745b6a48b3071d9ce9d

[0m[0m
[0m  Contract: IexecOracle[0m
BEGIN_LOG
[ { logIndex: 0,
    transactionIndex: 0,
    transactionHash: '0x2ee472b3380abacba507a6c782dc0eb17f30eccff207ffd3548db433b5725954',
    blockHash: '0x123384f8baa0edaf948216261d325ee304c908333f25d2831f767e0b96ed7ad9',
    blockNumber: 22,
    address: '0x59e2e92ffaee0368d5d3ddbf817527c01b0b0285',
    type: 'mined',
    event: 'CallbackEvent',
    args: 
     { callbackType: 'RegisterCallback',
       user: '0x0d8fdb4933a1a5af5bc7a8e344dc0d57d0be37fb',
       provider: '0x280c2eb535d3ea1c09e1d7e04e23e07420f161db',
       creator: '0xd2bd96d5721210b6389b7dc03dc8f96c962197f4',
       appName: 'echo',
       workUid: 'fe6112ad-6d81-414d-99cd-5e54a6895062',
       status: [Object],
       errorMsg: '' } },
  { logIndex: 0,
    transactionIndex: 0,
    transactionHash: '0x90559391935e2440c9983407613d5bf25a2a5e313c52e439ec372e66fe67f545',
    blockHash: '0x7cdb47b103c6e2d6de0c9e7aec62d5e51de20000864b453310855518ac1ec9b8',
    blockNumber: 69,
    address: '0x59e2e92ffaee0368d5d3ddbf817527c01b0b0285',
    type: 'mined',
    event: 'CallbackEvent',
    args: 
     { callbackType: 'SetParamCallback',
       user: '0x0d8fdb4933a1a5af5bc7a8e344dc0d57d0be37fb',
       provider: '0x280c2eb535d3ea1c09e1d7e04e23e07420f161db',
       creator: '0xd2bd96d5721210b6389b7dc03dc8f96c962197f4',
       appName: 'echo',
       workUid: 'fe6112ad-6d81-414d-99cd-5e54a6895062',
       status: [Object],
       errorMsg: '' } },
  { logIndex: 0,
    transactionIndex: 0,
    transactionHash: '0x16f65631b46853d7614ceb18c4af714c09058898cf479910749dde0d067e96c0',
    blockHash: '0x2e531a6ddc0604645f263949aa3a0a197482fc4f02f43e4dff1a9ec46998f749',
    blockNumber: 91,
    address: '0x59e2e92ffaee0368d5d3ddbf817527c01b0b0285',
    type: 'mined',
    event: 'CallbackEvent',
    args: 
     { callbackType: 'SetPendingCallback',
       user: '0x0d8fdb4933a1a5af5bc7a8e344dc0d57d0be37fb',
       provider: '0x280c2eb535d3ea1c09e1d7e04e23e07420f161db',
       creator: '0xd2bd96d5721210b6389b7dc03dc8f96c962197f4',
       appName: 'echo',
       workUid: 'fe6112ad-6d81-414d-99cd-5e54a6895062',
       status: [Object],
       errorMsg: '' } },
  { logIndex: 0,
    transactionIndex: 0,
    transactionHash: '0x599c72a236acaf5ecf74ea6537ee4011f28ebe7080ad25316968c8b1924915e3',
    blockHash: '0xb4b2d94aa0d91c82ec9c9f6a5c9282cf3d1894acbfc27c0332ead0f274b2525f',
    blockNumber: 108,
    address: '0x59e2e92ffaee0368d5d3ddbf817527c01b0b0285',
    type: 'mined',
    event: 'CallbackEvent',
    args: 
     { callbackType: 'StatusCallback',
       user: '0x0d8fdb4933a1a5af5bc7a8e344dc0d57d0be37fb',
       provider: '0x280c2eb535d3ea1c09e1d7e04e23e07420f161db',
       creator: '0xd2bd96d5721210b6389b7dc03dc8f96c962197f4',
       appName: 'echo',
       workUid: 'fe6112ad-6d81-414d-99cd-5e54a6895062',
       status: [Object],
       errorMsg: '' } } ]
END_LOG
  [32m  ✓[0m[90m watch CallbackEvent[0m[31m (1084ms)[0m


[92m [0m[32m 1 passing[0m[90m (1s)[0m
</msg>
<status status="PASS" endtime="20170907 23:29:18.624" starttime="20170907 23:29:18.623"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${truffletest_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170907 23:29:18.625" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170907 23:29:18.625" starttime="20170907 23:29:18.624"></status>
</kw>
<status status="PASS" endtime="20170907 23:29:18.625" starttime="20170907 23:29:13.464"></status>
</kw>
<msg timestamp="20170907 23:29:18.625" level="INFO">${watch_callback_event} = Using network 'development'.

IexecOracle deployed at address :0x18a6d5dcc53c580eed3d4c417d81a9656d9d8581
HelloWorld deployed at address :0x3e77a3cc5faa2d45ceb29745b6a48b3071d9ce9d

[0m[0m
[0m  Con...</msg>
<status status="PASS" endtime="20170907 23:29:18.625" starttime="20170907 23:29:13.463"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${watch_callback_event}</arg>
<arg>callbackType: 'StatusCallback'</arg>
</arguments>
<status status="PASS" endtime="20170907 23:29:18.627" starttime="20170907 23:29:18.627"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${watch_callback_event}</arg>
<arg>appName: 'echo'</arg>
</arguments>
<status status="PASS" endtime="20170907 23:29:18.628" starttime="20170907 23:29:18.627"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${watch_callback_event}</arg>
<arg>user: '${USER}'</arg>
</arguments>
<status status="PASS" endtime="20170907 23:29:18.628" starttime="20170907 23:29:18.628"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${watch_callback_event}</arg>
<arg>creator: '${CREATOR}'</arg>
</arguments>
<status status="PASS" endtime="20170907 23:29:18.629" starttime="20170907 23:29:18.628"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${watch_callback_event}</arg>
<arg>provider: '${HELLO_WORLD_SM_ADDRESS}'</arg>
</arguments>
<status status="PASS" endtime="20170907 23:29:18.630" starttime="20170907 23:29:18.629"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${watch_callback_event}</arg>
<arg>workUid: '${work_uid}'</arg>
</arguments>
<status status="PASS" endtime="20170907 23:29:18.631" starttime="20170907 23:29:18.630"></status>
</kw>
<status status="PASS" endtime="20170907 23:29:18.631" starttime="20170907 23:29:13.462"></status>
</kw>
<kw name="Get Work Status" library="IexceOracleSmartContract">
<arguments>
<arg>${USER}</arg>
<arg>${HELLO_WORLD_SM_ADDRESS}</arg>
<arg>${work_uid}</arg>
</arguments>
<assign>
<var>${work_status}</var>
</assign>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>sed -i "s/.*getWorkStatus.call(.*/return aIexecOracleInstance.getWorkStatus.call('${user}','${provider}',\\"${uid}\\");/g" iexec-oracle/API/test/rf/getWorkStatusInIexecOracle.js</arg>
</arguments>
<msg timestamp="20170907 23:29:18.634" level="INFO">Running command 'sed -i "s/.*getWorkStatus.call(.*/return aIexecOracleInstance.getWorkStatus.call('0x0d8fdb4933a1a5af5bc7a8e344dc0d57d0be37fb','0x280c2eb535d3ea1c09e1d7e04e23e07420f161db',\"fe6112ad-6d81-414d-99cd-5e54a6895062\");/g" iexec-oracle/API/test/rf/getWorkStatusInIexecOracle.js 2&gt;&amp;1'.</msg>
<status status="PASS" endtime="20170907 23:29:18.648" starttime="20170907 23:29:18.633"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd iexec-oracle/API &amp;&amp; ./node_modules/.bin/truffle test test/rf/getWorkStatusInIexecOracle.js</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${truffletest_result}</var>
</assign>
<msg timestamp="20170907 23:29:18.650" level="INFO">Starting process:
cd iexec-oracle/API &amp;&amp; ./node_modules/.bin/truffle test test/rf/getWorkStatusInIexecOracle.js</msg>
<msg timestamp="20170907 23:29:18.655" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170907 23:29:23.113" level="INFO">Process completed.</msg>
<msg timestamp="20170907 23:29:23.113" level="INFO">${truffletest_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170907 23:29:23.113" starttime="20170907 23:29:18.649"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stderr}</arg>
</arguments>
<msg timestamp="20170907 23:29:23.115" level="INFO"></msg>
<status status="PASS" endtime="20170907 23:29:23.115" starttime="20170907 23:29:23.114"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
</arguments>
<msg timestamp="20170907 23:29:23.116" level="INFO">Using network 'development'.

IexecOracle deployed at address :0x54667ddce50970428b9af62009cd86349491e954
HelloWorld deployed at address :0x3e58bbe0a93fda388d919b085e32161041395c0e

[0m[0m
[0m  Contract: IexecOracle[0m
BEGIN_LOG
status:4
END_LOG
  [32m  ✓[0m[90m get a work[0m[31m (145ms)[0m


[92m [0m[32m 1 passing[0m[90m (233ms)[0m
</msg>
<status status="PASS" endtime="20170907 23:29:23.116" starttime="20170907 23:29:23.115"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${truffletest_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170907 23:29:23.117" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170907 23:29:23.117" starttime="20170907 23:29:23.116"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
<arg>status:(?P&lt;status&gt;.*)</arg>
<arg>status</arg>
</arguments>
<assign>
<var>@{status}</var>
</assign>
<msg timestamp="20170907 23:29:23.117" level="INFO">@{status} = [ 4 ]</msg>
<status status="PASS" endtime="20170907 23:29:23.117" starttime="20170907 23:29:23.117"></status>
</kw>
<msg timestamp="20170907 23:29:23.118" level="INFO">${work_status} = 4</msg>
<status status="PASS" endtime="20170907 23:29:23.118" starttime="20170907 23:29:18.632"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${work_status}</arg>
<arg>4</arg>
</arguments>
<status status="PASS" endtime="20170907 23:29:23.118" starttime="20170907 23:29:23.118"></status>
</kw>
<kw name="Get Result" library="HelloWorldSmartContract">
<arguments>
<arg>${work_uid}</arg>
</arguments>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>sed -i "s/.*return aHelloWorldInstance.resultHelloWorld(.*/return aHelloWorldInstance.resultHelloWorld(\\"${uid}\\",{/g" iexec-oracle/API/test/rf/resultHelloWorldTest.js</arg>
</arguments>
<msg timestamp="20170907 23:29:23.122" level="INFO">Running command 'sed -i "s/.*return aHelloWorldInstance.resultHelloWorld(.*/return aHelloWorldInstance.resultHelloWorld(\"fe6112ad-6d81-414d-99cd-5e54a6895062\",{/g" iexec-oracle/API/test/rf/resultHelloWorldTest.js 2&gt;&amp;1'.</msg>
<status status="PASS" endtime="20170907 23:29:23.133" starttime="20170907 23:29:23.120"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd iexec-oracle/API &amp;&amp; ./node_modules/.bin/truffle test test/rf/resultHelloWorldTest.js</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${truffletest_result}</var>
</assign>
<msg timestamp="20170907 23:29:23.134" level="INFO">Starting process:
cd iexec-oracle/API &amp;&amp; ./node_modules/.bin/truffle test test/rf/resultHelloWorldTest.js</msg>
<msg timestamp="20170907 23:29:23.138" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170907 23:29:27.262" level="INFO">Process completed.</msg>
<msg timestamp="20170907 23:29:27.263" level="INFO">${truffletest_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170907 23:29:27.263" starttime="20170907 23:29:23.133"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stderr}</arg>
</arguments>
<msg timestamp="20170907 23:29:27.264" level="INFO"></msg>
<status status="PASS" endtime="20170907 23:29:27.264" starttime="20170907 23:29:27.264"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
</arguments>
<msg timestamp="20170907 23:29:27.265" level="INFO">Using network 'development'.

IexecOracle deployed at address :0xdcff1b35939e1291d4ada0c57b71f9363c4cf413
HelloWorld deployed at address :0x60e4e85412ed7484f718c84df0469d8e8154bc31

[0m[0m
[0m  Contract: HelloWorld[0m
BEGIN_LOG
{ tx: '0xf40f0c4fed88d14488940a66a43a3d79dd2e3982e4ec328327eb2c93ba7c93b8',
  receipt: 
   { transactionHash: '0xf40f0c4fed88d14488940a66a43a3d79dd2e3982e4ec328327eb2c93ba7c93b8',
     transactionIndex: 0,
     blockHash: '0xf1900982e6e480f069fb18f1c8adf7d36a9c34d8692c457fd40c8ef49d10018c',
     blockNumber: 129,
     gasUsed: 32186,
     cumulativeGasUsed: 32186,
     contractAddress: null,
     logs: [ [Object] ] },
  logs: [] }
END_LOG
  [32m  ✓[0m[90m should setParam[0m[31m (152ms)[0m


[92m [0m[32m 1 passing[0m[90m (217ms)[0m
</msg>
<status status="PASS" endtime="20170907 23:29:27.265" starttime="20170907 23:29:27.264"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${truffletest_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170907 23:29:27.266" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170907 23:29:27.266" starttime="20170907 23:29:27.265"></status>
</kw>
<status status="PASS" endtime="20170907 23:29:27.266" starttime="20170907 23:29:23.119"></status>
</kw>
<kw name="Check Result Launch Event In IexceOracleSmartContract">
<arguments>
<arg>${work_uid}</arg>
</arguments>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>1 min</arg>
<arg>10 sec</arg>
<arg>IexceOracleSmartContract.Watch LaunchEvent</arg>
</arguments>
<assign>
<var>${watch_launch_event}</var>
</assign>
<kw name="Watch LaunchEvent" library="IexceOracleSmartContract">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd iexec-oracle/API &amp;&amp; ./node_modules/.bin/truffle test test/rf/watchLaunchEventInIexecOracle.js</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${truffletest_result}</var>
</assign>
<msg timestamp="20170907 23:29:27.268" level="INFO">Starting process:
cd iexec-oracle/API &amp;&amp; ./node_modules/.bin/truffle test test/rf/watchLaunchEventInIexecOracle.js</msg>
<msg timestamp="20170907 23:29:27.275" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170907 23:29:32.895" level="INFO">Process completed.</msg>
<msg timestamp="20170907 23:29:32.895" level="INFO">${truffletest_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170907 23:29:32.895" starttime="20170907 23:29:27.268"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stderr}</arg>
</arguments>
<msg timestamp="20170907 23:29:32.897" level="INFO"></msg>
<status status="PASS" endtime="20170907 23:29:32.897" starttime="20170907 23:29:32.896"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
</arguments>
<msg timestamp="20170907 23:29:32.898" level="INFO">Using network 'development'.

IexecOracle deployed at address :0x476a60c54b183249bc236a5136da1785c99f229e
HelloWorld deployed at address :0x6f6a62706eef430b74e13804c2f408524f5b970f

[0m[0m
[0m  Contract: IexecOracle[0m
BEGIN_LOG
[ { logIndex: 0,
    transactionIndex: 0,
    transactionHash: '0xb4b5a9fa98ebbae6795fa9490e2b9c5594daf1b0f53ac0590c307936015a28c6',
    blockHash: '0x399ff692d931fef9c9bdec32f72cb29141e02c7e2efacce4d4b741073fc80585',
    blockNumber: 21,
    address: '0x59e2e92ffaee0368d5d3ddbf817527c01b0b0285',
    type: 'mined',
    event: 'Launch',
    args: 
     { user: '0x0d8fdb4933a1a5af5bc7a8e344dc0d57d0be37fb',
       provider: '0x280c2eb535d3ea1c09e1d7e04e23e07420f161db',
       creator: '0xd2bd96d5721210b6389b7dc03dc8f96c962197f4',
       functionName: 'register',
       param1: 'echo',
       param2: '',
       workUid: '' } },
  { logIndex: 0,
    transactionIndex: 0,
    transactionHash: '0xe41467e0cd243bbbe18fc165b9544523ad0a07e6117e21c393212da7ef9ba8fa',
    blockHash: '0xe6b63aa4f4caa28cb0aaa721093171b40a1dd58efa5b5bb053d32ee9f37641fb',
    blockNumber: 68,
    address: '0x59e2e92ffaee0368d5d3ddbf817527c01b0b0285',
    type: 'mined',
    event: 'Launch',
    args: 
     { user: '0x0d8fdb4933a1a5af5bc7a8e344dc0d57d0be37fb',
       provider: '0x280c2eb535d3ea1c09e1d7e04e23e07420f161db',
       creator: '0xd2bd96d5721210b6389b7dc03dc8f96c962197f4',
       functionName: 'setParam',
       param1: 'cmdline',
       param2: 'HelloWorld!!!',
       workUid: 'fe6112ad-6d81-414d-99cd-5e54a6895062' } },
  { logIndex: 0,
    transactionIndex: 0,
    transactionHash: '0xef5addd4847bafe4152571e48439ae549439eda9fcc701165f7132ff0d98ccd1',
    blockHash: '0x343efa94711d11019eca228a5c13cff6bcaaea7c3f981538430c3eda09a0f94d',
    blockNumber: 90,
    address: '0x59e2e92ffaee0368d5d3ddbf817527c01b0b0285',
    type: 'mined',
    event: 'Launch',
    args: 
     { user: '0x0d8fdb4933a1a5af5bc7a8e344dc0d57d0be37fb',
       provider: '0x280c2eb535d3ea1c09e1d7e04e23e07420f161db',
       creator: '0xd2bd96d5721210b6389b7dc03dc8f96c962197f4',
       functionName: 'setPending',
       param1: 'status',
       param2: 'pending',
       workUid: 'fe6112ad-6d81-414d-99cd-5e54a6895062' } },
  { logIndex: 0,
    transactionIndex: 0,
    transactionHash: '0xf3d22978a3cee863caacd827a233cd1aa1acfef01ff54d6fd3f7588417dce22f',
    blockHash: '0xb70b8e41f2a2d9a784a47993fd22621a481ad9278753ce349289aee93ff997ca',
    blockNumber: 107,
    address: '0x59e2e92ffaee0368d5d3ddbf817527c01b0b0285',
    type: 'mined',
    event: 'Launch',
    args: 
     { user: '0x0d8fdb4933a1a5af5bc7a8e344dc0d57d0be37fb',
       provider: '0x280c2eb535d3ea1c09e1d7e04e23e07420f161db',
       creator: '0xd2bd96d5721210b6389b7dc03dc8f96c962197f4',
       functionName: 'status',
       param1: '',
       param2: '',
       workUid: 'fe6112ad-6d81-414d-99cd-5e54a6895062' } },
  { logIndex: 0,
    transactionIndex: 0,
    transactionHash: '0xf40f0c4fed88d14488940a66a43a3d79dd2e3982e4ec328327eb2c93ba7c93b8',
    blockHash: '0xf1900982e6e480f069fb18f1c8adf7d36a9c34d8692c457fd40c8ef49d10018c',
    blockNumber: 129,
    address: '0x59e2e92ffaee0368d5d3ddbf817527c01b0b0285',
    type: 'mined',
    event: 'Launch',
    args: 
     { user: '0x0d8fdb4933a1a5af5bc7a8e344dc0d57d0be37fb',
       provider: '0x280c2eb535d3ea1c09e1d7e04e23e07420f161db',
       creator: '0xd2bd96d5721210b6389b7dc03dc8f96c962197f4',
       functionName: 'stdout',
       param1: '',
       param2: '',
       workUid: 'fe6112ad-6d81-414d-99cd-5e54a6895062' } } ]
END_LOG
  [32m  ✓[0m[90m watch CallbackEvent[0m[31m (1400ms)[0m


[92m [0m[32m 1 passing[0m[90m (1s)[0m
</msg>
<status status="PASS" endtime="20170907 23:29:32.899" starttime="20170907 23:29:32.897"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${truffletest_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170907 23:29:32.901" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170907 23:29:32.901" starttime="20170907 23:29:32.899"></status>
</kw>
<status status="PASS" endtime="20170907 23:29:32.901" starttime="20170907 23:29:27.268"></status>
</kw>
<msg timestamp="20170907 23:29:32.902" level="INFO">${watch_launch_event} = Using network 'development'.

IexecOracle deployed at address :0x476a60c54b183249bc236a5136da1785c99f229e
HelloWorld deployed at address :0x6f6a62706eef430b74e13804c2f408524f5b970f

[0m[0m
[0m  Con...</msg>
<status status="PASS" endtime="20170907 23:29:32.902" starttime="20170907 23:29:27.267"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${watch_launch_event}</arg>
<arg>functionName: 'stdout'</arg>
</arguments>
<status status="PASS" endtime="20170907 23:29:32.902" starttime="20170907 23:29:32.902"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${watch_launch_event}</arg>
<arg>param1: ''</arg>
</arguments>
<status status="PASS" endtime="20170907 23:29:32.903" starttime="20170907 23:29:32.903"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${watch_launch_event}</arg>
<arg>param2: ''</arg>
</arguments>
<status status="PASS" endtime="20170907 23:29:32.904" starttime="20170907 23:29:32.903"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${watch_launch_event}</arg>
<arg>user: '${USER}'</arg>
</arguments>
<status status="PASS" endtime="20170907 23:29:32.904" starttime="20170907 23:29:32.904"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${watch_launch_event}</arg>
<arg>creator: '${CREATOR}'</arg>
</arguments>
<status status="PASS" endtime="20170907 23:29:32.905" starttime="20170907 23:29:32.904"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${watch_launch_event}</arg>
<arg>provider: '${HELLO_WORLD_SM_ADDRESS}'</arg>
</arguments>
<status status="PASS" endtime="20170907 23:29:32.906" starttime="20170907 23:29:32.905"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${watch_launch_event}</arg>
<arg>workUid: '${work_uid}'</arg>
</arguments>
<status status="PASS" endtime="20170907 23:29:32.907" starttime="20170907 23:29:32.906"></status>
</kw>
<status status="PASS" endtime="20170907 23:29:32.908" starttime="20170907 23:29:27.267"></status>
</kw>
<kw name="Check Result CallbackEvent Event In IexceOracleSmartContract">
<arguments>
<arg>${work_uid}</arg>
</arguments>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>1 min</arg>
<arg>10 sec</arg>
<arg>IexceOracleSmartContract.Watch CallbackEvent</arg>
</arguments>
<assign>
<var>${watch_callback_event}</var>
</assign>
<kw name="Watch CallbackEvent" library="IexceOracleSmartContract">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd iexec-oracle/API &amp;&amp; ./node_modules/.bin/truffle test test/rf/watchCallbackEventInIexecOracle.js</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${truffletest_result}</var>
</assign>
<msg timestamp="20170907 23:29:32.911" level="INFO">Starting process:
cd iexec-oracle/API &amp;&amp; ./node_modules/.bin/truffle test test/rf/watchCallbackEventInIexecOracle.js</msg>
<msg timestamp="20170907 23:29:32.915" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170907 23:29:38.396" level="INFO">Process completed.</msg>
<msg timestamp="20170907 23:29:38.397" level="INFO">${truffletest_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170907 23:29:38.397" starttime="20170907 23:29:32.910"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stderr}</arg>
</arguments>
<msg timestamp="20170907 23:29:38.398" level="INFO"></msg>
<status status="PASS" endtime="20170907 23:29:38.398" starttime="20170907 23:29:38.397"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
</arguments>
<msg timestamp="20170907 23:29:38.400" level="INFO">Using network 'development'.

IexecOracle deployed at address :0xfb78d1472e25f0ba39d03d43d54ad206b66b656b
HelloWorld deployed at address :0x5c7a22035e3de3e237b86db51085e418b9f85dc3

[0m[0m
[0m  Contract: IexecOracle[0m
BEGIN_LOG
[ { logIndex: 0,
    transactionIndex: 0,
    transactionHash: '0x2ee472b3380abacba507a6c782dc0eb17f30eccff207ffd3548db433b5725954',
    blockHash: '0x123384f8baa0edaf948216261d325ee304c908333f25d2831f767e0b96ed7ad9',
    blockNumber: 22,
    address: '0x59e2e92ffaee0368d5d3ddbf817527c01b0b0285',
    type: 'mined',
    event: 'CallbackEvent',
    args: 
     { callbackType: 'RegisterCallback',
       user: '0x0d8fdb4933a1a5af5bc7a8e344dc0d57d0be37fb',
       provider: '0x280c2eb535d3ea1c09e1d7e04e23e07420f161db',
       creator: '0xd2bd96d5721210b6389b7dc03dc8f96c962197f4',
       appName: 'echo',
       workUid: 'fe6112ad-6d81-414d-99cd-5e54a6895062',
       status: [Object],
       errorMsg: '' } },
  { logIndex: 0,
    transactionIndex: 0,
    transactionHash: '0x90559391935e2440c9983407613d5bf25a2a5e313c52e439ec372e66fe67f545',
    blockHash: '0x7cdb47b103c6e2d6de0c9e7aec62d5e51de20000864b453310855518ac1ec9b8',
    blockNumber: 69,
    address: '0x59e2e92ffaee0368d5d3ddbf817527c01b0b0285',
    type: 'mined',
    event: 'CallbackEvent',
    args: 
     { callbackType: 'SetParamCallback',
       user: '0x0d8fdb4933a1a5af5bc7a8e344dc0d57d0be37fb',
       provider: '0x280c2eb535d3ea1c09e1d7e04e23e07420f161db',
       creator: '0xd2bd96d5721210b6389b7dc03dc8f96c962197f4',
       appName: 'echo',
       workUid: 'fe6112ad-6d81-414d-99cd-5e54a6895062',
       status: [Object],
       errorMsg: '' } },
  { logIndex: 0,
    transactionIndex: 0,
    transactionHash: '0x16f65631b46853d7614ceb18c4af714c09058898cf479910749dde0d067e96c0',
    blockHash: '0x2e531a6ddc0604645f263949aa3a0a197482fc4f02f43e4dff1a9ec46998f749',
    blockNumber: 91,
    address: '0x59e2e92ffaee0368d5d3ddbf817527c01b0b0285',
    type: 'mined',
    event: 'CallbackEvent',
    args: 
     { callbackType: 'SetPendingCallback',
       user: '0x0d8fdb4933a1a5af5bc7a8e344dc0d57d0be37fb',
       provider: '0x280c2eb535d3ea1c09e1d7e04e23e07420f161db',
       creator: '0xd2bd96d5721210b6389b7dc03dc8f96c962197f4',
       appName: 'echo',
       workUid: 'fe6112ad-6d81-414d-99cd-5e54a6895062',
       status: [Object],
       errorMsg: '' } },
  { logIndex: 0,
    transactionIndex: 0,
    transactionHash: '0x599c72a236acaf5ecf74ea6537ee4011f28ebe7080ad25316968c8b1924915e3',
    blockHash: '0xb4b2d94aa0d91c82ec9c9f6a5c9282cf3d1894acbfc27c0332ead0f274b2525f',
    blockNumber: 108,
    address: '0x59e2e92ffaee0368d5d3ddbf817527c01b0b0285',
    type: 'mined',
    event: 'CallbackEvent',
    args: 
     { callbackType: 'StatusCallback',
       user: '0x0d8fdb4933a1a5af5bc7a8e344dc0d57d0be37fb',
       provider: '0x280c2eb535d3ea1c09e1d7e04e23e07420f161db',
       creator: '0xd2bd96d5721210b6389b7dc03dc8f96c962197f4',
       appName: 'echo',
       workUid: 'fe6112ad-6d81-414d-99cd-5e54a6895062',
       status: [Object],
       errorMsg: '' } },
  { logIndex: 0,
    transactionIndex: 0,
    transactionHash: '0xbfd22eb75181641df909a7983767bfefc4a3c7474c0022b3b76deb433cf2227f',
    blockHash: '0x7a0fdf51e9bd06b8e037f43e0fa2de184894c335961f1fb23e6b3f1b21894fe9',
    blockNumber: 130,
    address: '0x59e2e92ffaee0368d5d3ddbf817527c01b0b0285',
    type: 'mined',
    event: 'CallbackEvent',
    args: 
     { callbackType: 'StdoutCallback',
       user: '0x0d8fdb4933a1a5af5bc7a8e344dc0d57d0be37fb',
       provider: '0x280c2eb535d3ea1c09e1d7e04e23e07420f161db',
       creator: '0xd2bd96d5721210b6389b7dc03dc8f96c962197f4',
       appName: 'echo',
       workUid: 'fe6112ad-6d81-414d-99cd-5e54a6895062',
       status: [Object],
       errorMsg: '' } } ]
END_LOG
  [32m  ✓[0m[90m watch CallbackEvent[0m[31m (1426ms)[0m


[92m [0m[32m 1 passing[0m[90m (2s)[0m
</msg>
<status status="PASS" endtime="20170907 23:29:38.400" starttime="20170907 23:29:38.399"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${truffletest_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170907 23:29:38.401" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170907 23:29:38.402" starttime="20170907 23:29:38.401"></status>
</kw>
<status status="PASS" endtime="20170907 23:29:38.402" starttime="20170907 23:29:32.910"></status>
</kw>
<msg timestamp="20170907 23:29:38.403" level="INFO">${watch_callback_event} = Using network 'development'.

IexecOracle deployed at address :0xfb78d1472e25f0ba39d03d43d54ad206b66b656b
HelloWorld deployed at address :0x5c7a22035e3de3e237b86db51085e418b9f85dc3

[0m[0m
[0m  Con...</msg>
<status status="PASS" endtime="20170907 23:29:38.403" starttime="20170907 23:29:32.909"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${watch_callback_event}</arg>
<arg>callbackType: 'StdoutCallback'</arg>
</arguments>
<status status="PASS" endtime="20170907 23:29:38.403" starttime="20170907 23:29:38.403"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${watch_callback_event}</arg>
<arg>appName: 'echo'</arg>
</arguments>
<status status="PASS" endtime="20170907 23:29:38.404" starttime="20170907 23:29:38.403"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${watch_callback_event}</arg>
<arg>user: '${USER}'</arg>
</arguments>
<status status="PASS" endtime="20170907 23:29:38.404" starttime="20170907 23:29:38.404"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${watch_callback_event}</arg>
<arg>creator: '${CREATOR}'</arg>
</arguments>
<status status="PASS" endtime="20170907 23:29:38.405" starttime="20170907 23:29:38.404"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${watch_callback_event}</arg>
<arg>provider: '${HELLO_WORLD_SM_ADDRESS}'</arg>
</arguments>
<status status="PASS" endtime="20170907 23:29:38.405" starttime="20170907 23:29:38.405"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${watch_callback_event}</arg>
<arg>workUid: '${work_uid}'</arg>
</arguments>
<status status="PASS" endtime="20170907 23:29:38.406" starttime="20170907 23:29:38.405"></status>
</kw>
<status status="PASS" endtime="20170907 23:29:38.406" starttime="20170907 23:29:32.908"></status>
</kw>
<kw name="Get Work Stdout" library="IexceOracleSmartContract">
<arguments>
<arg>${USER}</arg>
<arg>${HELLO_WORLD_SM_ADDRESS}</arg>
<arg>${work_uid}</arg>
</arguments>
<assign>
<var>${work_stdout}</var>
</assign>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>sed -i "s/.*getWorkStdout.call(.*/return aIexecOracleInstance.getWorkStdout.call('${user}','${provider}',\\"${uid}\\");/g" iexec-oracle/API/test/rf/getWorkStdoutInIexecOracle.js</arg>
</arguments>
<msg timestamp="20170907 23:29:38.410" level="INFO">Running command 'sed -i "s/.*getWorkStdout.call(.*/return aIexecOracleInstance.getWorkStdout.call('0x0d8fdb4933a1a5af5bc7a8e344dc0d57d0be37fb','0x280c2eb535d3ea1c09e1d7e04e23e07420f161db',\"fe6112ad-6d81-414d-99cd-5e54a6895062\");/g" iexec-oracle/API/test/rf/getWorkStdoutInIexecOracle.js 2&gt;&amp;1'.</msg>
<status status="PASS" endtime="20170907 23:29:38.420" starttime="20170907 23:29:38.407"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd iexec-oracle/API &amp;&amp; ./node_modules/.bin/truffle test test/rf/getWorkStdoutInIexecOracle.js</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${truffletest_result}</var>
</assign>
<msg timestamp="20170907 23:29:38.422" level="INFO">Starting process:
cd iexec-oracle/API &amp;&amp; ./node_modules/.bin/truffle test test/rf/getWorkStdoutInIexecOracle.js</msg>
<msg timestamp="20170907 23:29:38.426" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170907 23:29:42.661" level="INFO">Process completed.</msg>
<msg timestamp="20170907 23:29:42.661" level="INFO">${truffletest_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170907 23:29:42.661" starttime="20170907 23:29:38.421"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stderr}</arg>
</arguments>
<msg timestamp="20170907 23:29:42.662" level="INFO"></msg>
<status status="PASS" endtime="20170907 23:29:42.663" starttime="20170907 23:29:42.662"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
</arguments>
<msg timestamp="20170907 23:29:42.664" level="INFO">Using network 'development'.

IexecOracle deployed at address :0xa1f98edc8c8e9ffa3667292f39436947909ce80c
HelloWorld deployed at address :0x7a1a68598dc156cd286f7cdcb121f84e66104c17

[0m[0m
[0m  Contract: IexecOracle[0m
BEGIN_LOG
stdout:HelloWorld!!!

END_LOG
  [32m  ✓[0m[90m get a work[0m[31m (155ms)[0m


[92m [0m[32m 1 passing[0m[90m (261ms)[0m
</msg>
<status status="PASS" endtime="20170907 23:29:42.664" starttime="20170907 23:29:42.663"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${truffletest_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170907 23:29:42.665" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170907 23:29:42.665" starttime="20170907 23:29:42.664"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
<arg>stdout:(?P&lt;stdout&gt;.*)</arg>
<arg>stdout</arg>
</arguments>
<assign>
<var>@{stdout}</var>
</assign>
<msg timestamp="20170907 23:29:42.667" level="INFO">@{stdout} = [ HelloWorld!!! ]</msg>
<status status="PASS" endtime="20170907 23:29:42.667" starttime="20170907 23:29:42.665"></status>
</kw>
<msg timestamp="20170907 23:29:42.668" level="INFO">${work_stdout} = HelloWorld!!!</msg>
<status status="PASS" endtime="20170907 23:29:42.668" starttime="20170907 23:29:38.407"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${work_stdout}</arg>
<arg>HelloWorld!!!</arg>
</arguments>
<status status="PASS" endtime="20170907 23:29:42.670" starttime="20170907 23:29:42.669"></status>
</kw>
<doc>Test HelloWorld Iexec</doc>
<tags>
<tag>HelloWorld Tests</tag>
</tags>
<status status="PASS" endtime="20170907 23:29:42.672" critical="yes" starttime="20170907 23:26:58.288"></status>
</test>
<kw type="teardown" name="Stop Oracle Bridge And Xtremweb">
<kw name="Stop Bridge" library="IexecOracle">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${BRIDGE_PROCESS}</arg>
</arguments>
<msg timestamp="20170907 23:29:42.677" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20170907 23:29:42.693" level="INFO">Process completed.</msg>
<status status="PASS" endtime="20170907 23:29:42.693" starttime="20170907 23:29:42.677"></status>
</kw>
<status status="PASS" endtime="20170907 23:29:42.694" starttime="20170907 23:29:42.677"></status>
</kw>
<kw name="Stop Testrpc" library="ETHTestrpc">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${TESTRPC_PROCESS}</arg>
</arguments>
<msg timestamp="20170907 23:29:42.696" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20170907 23:29:42.800" level="INFO">Process completed.</msg>
<status status="PASS" endtime="20170907 23:29:42.800" starttime="20170907 23:29:42.695"></status>
</kw>
<status status="PASS" endtime="20170907 23:29:42.800" starttime="20170907 23:29:42.694"></status>
</kw>
<kw name="Stop XWtremWeb Server And XWtremWeb Worker" library="XWCommon">
<kw name="Stop XtremWeb Server" library="XWServer">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${SERVER_PROCESS}</arg>
</arguments>
<msg timestamp="20170907 23:29:42.803" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20170907 23:29:42.804" level="INFO">Process completed.</msg>
<status status="PASS" endtime="20170907 23:29:42.805" starttime="20170907 23:29:42.803"></status>
</kw>
<status status="PASS" endtime="20170907 23:29:42.805" starttime="20170907 23:29:42.802"></status>
</kw>
<kw name="Log XtremWeb Server" library="XWCommon">
<kw name="Log XtremWeb Process Log File" library="XWServer">
<kw name="Log File" library="OperatingSystem">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<msg timestamp="20170907 23:29:42.810" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170907 23:29:42.813" level="INFO">Thu Sep  7 23:24:45 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : checking launch url
Thu Sep  7 23:24:45 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] WARNING : no launcher URL defined
Thu Sep  7 23:24:45 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : launching SmartSockets hub
[07/Sep/2017:23:24:47 +0000] [main_1] ERROR : setRole : role redefined ?! (was SERVER)
[07/Sep/2017:23:24:48 +0000] [xtremweb.database.DBConnPoolThread_main_1] INFO : Connection to database jdbc:mysql://localhost/xtremweb is ok, 70 created
[07/Sep/2017:23:24:48 +0000] [xtremweb.dispatcher.DBInterface_main_1] WARN : Can't retrieve any app
[07/Sep/2017:23:24:48 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't create ProxyValidator
[07/Sep/2017:23:24:48 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.io.FileNotFoundException: /tmp/castore (No such file or directory) (/tmp/castore (No such file or directory))
[07/Sep/2017:23:24:48 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't add CA certificates to keystore
[07/Sep/2017:23:24:48 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.lang.NullPointerException (null)
[07/Sep/2017:23:24:48 +0000] [xtremweb.dispatcher.HashTaskSet_TaskSet_14] INFO : TaskSet started (300000)
[07/Sep/2017:23:24:49 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : still waiting task set...
[07/Sep/2017:23:24:49 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : UDP server not started
[07/Sep/2017:23:24:49 +0000] [xtremweb.communications.TCPServer_TCPServerNIO_15] INFO : started, listening on port : 4321
log4j:WARN No appenders could be found for logger (org.eclipse.jetty.util.log).
log4j:WARN Please initialize the log4j system properly.
log4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.
[07/Sep/2017:23:24:50 +0000] [xtremweb.communications.HTTPServer_main_1] INFO : started, listening on port : 9443
[07/Sep/2017:23:24:50 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : FACEBOOK : java.net.MalformedURLException: no protocol: 
[07/Sep/2017:23:24:50 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : GOOGLE : java.net.MalformedURLException: no protocol: 
[07/Sep/2017:23:24:50 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : TWITTER : java.net.MalformedURLException: no protocol: 
[07/Sep/2017:23:24:50 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : YAHOO : java.net.MalformedURLException: no protocol: 
[07/Sep/2017:23:24:50 +0000] [main_1] ERROR : Can't add new entry to keystore
[07/Sep/2017:23:24:50 +0000] [main_1] WARN : javax.net.ssl.SSLHandshakeException: sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target (sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target)
[07/Sep/2017:23:24:50 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : XWHEP Dispatcher(10.6.0-head) started [Thu Sep 07 23:24:50 UTC 2017]
[07/Sep/2017:23:24:50 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : DB vendor  = mysql
[07/Sep/2017:23:24:50 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : mileStone  = 
[07/Sep/2017:23:24:50 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Time out   = 15000
[07/Sep/2017:23:24:50 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Disk opt'd = true
[07/Sep/2017:23:24:50 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Net  opt'd = true
[07/Sep/2017:23:24:50 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : NIO        = true
XWHEP Dispatcher started  Thu Sep 07 23:24:50 UTC 2017
Name             : vagrant-ubuntu-trusty-64
Version          : 10.6.0-head
Identity         : 
XWRole           : SERVER
Started on       : Thu Sep 07 23:24:47 UTC 2017
Scheduler        : xtremweb.dispatcher.MatchingScheduler
SmartSockets hub : 172.28.128.3/172.17.0.1/10.0.2.15-4329#f6.ec.5c.ba.cb.7c.00.00.e6.44.02.42.bc.fb.75.e4~vagrant
Server HTTP      : true
Alive            : 300
Alive time out   : 900
Polling time out : 15000
Optimize zip     : true
Optimize network : true
NIO              : true
Comm layer       : xtremweb.communications.TCPClient
Socket time out  : 60000
Socket retries   : 50
Max connections  : 200
TCP port         : 4321
UDP port         : 4323
HTPP  port       : 80
HTPPS port       : 9443
Sun RPC interposition port : 4328
Sandbox path : /usr/bin/lxc
Sandbox launch args : 
Host &lt;host&gt;&lt;uid&gt;b58fddaa-683b-4fca-a55d-ca279e681ff3&lt;/uid&gt;&lt;accessrights&gt;0x755&lt;/accessrights&gt;&lt;name&gt;vagrant-ubuntu-trusty-64&lt;/name&gt;&lt;cpuload&gt;50&lt;/cpuload&gt;&lt;natedipaddr&gt;10.0.2.15&lt;/natedipaddr&gt;&lt;ipaddr&gt;10.0.2.15&lt;/ipaddr&gt;&lt;hwaddr&gt;&lt;/hwaddr&gt;&lt;timezone&gt;Etc/UTC&lt;/timezone&gt;&lt;os&gt;LINUX&lt;/os&gt;&lt;osversion&gt;3.13.0-129-generic&lt;/osversion&gt;&lt;javaversion&gt;1.8.0_141&lt;/javaversion&gt;&lt;javadatamodel&gt;64&lt;/javadatamodel&gt;&lt;cputype&gt;AMD64&lt;/cputype&gt;&lt;cpunb&gt;1&lt;/cpunb&gt;&lt;cpumodel&gt;unknown&lt;/cpumodel&gt;&lt;cpuspeed&gt;0&lt;/cpuspeed&gt;&lt;totalmem&gt;0&lt;/totalmem&gt;&lt;totalswap&gt;0&lt;/totalswap&gt;&lt;totaltmp&gt;40284&lt;/totaltmp&gt;&lt;freetmp&gt;37144&lt;/freetmp&gt;&lt;project&gt;&lt;/project&gt;&lt;active&gt;true&lt;/active&gt;&lt;incomingconnections&gt;false&lt;/incomingconnections&gt;&lt;available&gt;false&lt;/available&gt;&lt;pilotjob&gt;false&lt;/pilotjob&gt;&lt;sgid&gt;&lt;/sgid&gt;&lt;timeout&gt;15000&lt;/timeout&gt;&lt;traces&gt;false&lt;/traces&gt;&lt;acceptbin&gt;false&lt;/acceptbin&gt;&lt;version&gt;10.6.0-head&lt;/version&gt;&lt;/host&gt;
[07/Sep/2017:23:24:50 +0000] [xtremweb.communications.HTTPServer_HTTPServer_218] INFO : started, listening on port : 9443
[07/Sep/2017:23:24:52 +0000] [xtremweb.common.StreamIO_TCPHandler_17] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[07/Sep/2017:23:24:55 +0000] [xtremweb.common.StreamIO_TCPHandler_18] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[07/Sep/2017:23:24:55 +0000] [xtremweb.common.StreamIO_TCPHandler_19] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[07/Sep/2017:23:24:56 +0000] [xtremweb.dispatcher.DBInterface_TCPHandler_20] INFO : vagrant-ubuntu-trusty-64 not in DB; inserting 20166f54-9072-4d91-9a3b-74cb987c3ab8
[07/Sep/2017:23:24:56 +0000] [xtremweb.common.StreamIO_TCPHandler_20] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[07/Sep/2017:23:25:10 +0000] [xtremweb.common.StreamIO_TCPHandler_21] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[07/Sep/2017:23:25:56 +0000] [xtremweb.common.StreamIO_TCPHandler_22] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[07/Sep/2017:23:26:41 +0000] [xtremweb.common.StreamIO_TCPHandler_23] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[07/Sep/2017:23:27:07 +0000] [xtremweb.common.StreamIO_TCPHandler_24] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[07/Sep/2017:23:27:11 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2023938592-227_227] WARN : 227 : getIdRpc a ete synchronise ! null
[07/Sep/2017:23:27:11 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2023938592-227_227] WARN : 227 : getIdRpc a ete synchronise ! GETAPPS
[07/Sep/2017:23:27:11 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2023938592-227_227] WARN : 227 : getIdRpc a ete synchronise ! GETAPPS
[07/Sep/2017:23:27:11 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2023938592-225_225] WARN : 225 : getIdRpc a ete synchronise ! null
[07/Sep/2017:23:27:11 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2023938592-225_225] WARN : 225 : getIdRpc a ete synchronise ! GET
[07/Sep/2017:23:27:11 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2023938592-225_225] WARN : 225 : getIdRpc a ete synchronise ! GET
[07/Sep/2017:23:27:11 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2023938592-224_224] WARN : 224 : getIdRpc a ete synchronise ! null
[07/Sep/2017:23:27:11 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2023938592-224_224] WARN : 224 : getIdRpc a ete synchronise ! SENDWORK
[07/Sep/2017:23:27:11 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2023938592-224_224] WARN : 224 : getIdRpc a ete synchronise ! SENDWORK
[07/Sep/2017:23:27:11 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2023938592-225_225] WARN : 225 : getIdRpc a ete synchronise ! null
[07/Sep/2017:23:27:11 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2023938592-225_225] WARN : 225 : getIdRpc a ete synchronise ! SENDWORK
[07/Sep/2017:23:27:11 +0000] [xtremweb.dispatcher.DBInterface_qtp2023938592-225_225] WARN : javax.mail.internet.AddressException: Missing local name in string ``@DBADMINEMAIL@'' (Missing local name)
[07/Sep/2017:23:27:11 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2023938592-225_225] WARN : 225 : getIdRpc a ete synchronise ! SENDWORK
[07/Sep/2017:23:27:26 +0000] [xtremweb.common.StreamIO_TCPHandler_25] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[07/Sep/2017:23:27:44 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2023938592-231_231] WARN : 231 : getIdRpc a ete synchronise ! null
[07/Sep/2017:23:27:44 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2023938592-231_231] WARN : 231 : getIdRpc a ete synchronise ! GET
[07/Sep/2017:23:27:44 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2023938592-231_231] WARN : 231 : getIdRpc a ete synchronise ! GET
[07/Sep/2017:23:27:44 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2023938592-225_225] WARN : 225 : getIdRpc a ete synchronise ! null
[07/Sep/2017:23:27:44 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2023938592-225_225] WARN : 225 : getIdRpc a ete synchronise ! SENDWORK
[07/Sep/2017:23:27:44 +0000] [xtremweb.dispatcher.DBInterface_qtp2023938592-225_225] WARN : javax.mail.internet.AddressException: Missing local name in string ``@DBADMINEMAIL@'' (Missing local name)
[07/Sep/2017:23:27:44 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2023938592-225_225] WARN : 225 : getIdRpc a ete synchronise ! SENDWORK
[07/Sep/2017:23:27:59 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2023938592-227_227] WARN : 227 : getIdRpc a ete synchronise ! null
[07/Sep/2017:23:27:59 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2023938592-227_227] WARN : 227 : getIdRpc a ete synchronise ! GET
[07/Sep/2017:23:27:59 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2023938592-227_227] WARN : 227 : getIdRpc a ete synchronise ! GET
[07/Sep/2017:23:27:59 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2023938592-225_225] WARN : 225 : getIdRpc a ete synchronise ! null
[07/Sep/2017:23:27:59 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2023938592-225_225] WARN : 225 : getIdRpc a ete synchronise ! SENDWORK
[07/Sep/2017:23:27:59 +0000] [xtremweb.dispatcher.DBInterface_qtp2023938592-225_225] WARN : javax.mail.internet.AddressException: Missing local name in string ``@DBADMINEMAIL@'' (Missing local name)
[07/Sep/2017:23:27:59 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2023938592-225_225] WARN : 225 : getIdRpc a ete synchronise ! SENDWORK
[07/Sep/2017:23:28:08 +0000] [xtremweb.common.StreamIO_TCPHandler_26] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[07/Sep/2017:23:28:11 +0000] [xtremweb.common.StreamIO_TCPHandler_27] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[07/Sep/2017:23:28:11 +0000] [xtremweb.common.StreamIO_TCPHandler_28] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[07/Sep/2017:23:28:11 +0000] [xtremweb.common.StreamIO_TCPHandler_29] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[07/Sep/2017:23:28:11 +0000] [xtremweb.common.StreamIO_TCPHandler_30] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[07/Sep/2017:23:28:11 +0000] [xtremweb.dispatcher.TCPHandler_TCPHandler_31] ERROR : Can't write result
[07/Sep/2017:23:28:11 +0000] [xtremweb.dispatcher.TCPHandler_TCPHandler_31] WARN : java.io.IOException: java.net.SocketException: Broken pipe (Write failed) (java.net.SocketException: Broken pipe (Write failed))
[07/Sep/2017:23:28:11 +0000] [xtremweb.common.StreamIO_TCPHandler_31] WARN : javax.net.ssl.SSLException: Connection has been shutdown: javax.net.ssl.SSLException: java.net.SocketException: Broken pipe (Write failed) (javax.net.ssl.SSLException: java.net.SocketException: Broken pipe (Write failed))
[07/Sep/2017:23:28:14 +0000] [xtremweb.common.StreamIO_TCPHandler_32] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[07/Sep/2017:23:28:20 +0000] [xtremweb.common.StreamIO_TCPHandler_33] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[07/Sep/2017:23:28:26 +0000] [xtremweb.common.StreamIO_TCPHandler_34] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[07/Sep/2017:23:28:27 +0000] [xtremweb.dispatcher.DBInterface_TCPHandler_35] WARN : javax.mail.internet.AddressException: Missing local name in string ``@DBADMINEMAIL@'' (Missing local name)
[07/Sep/2017:23:28:27 +0000] [xtremweb.common.StreamIO_TCPHandler_35] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[07/Sep/2017:23:28:27 +0000] [xtremweb.common.StreamIO_TCPHandler_36] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[07/Sep/2017:23:28:32 +0000] [xtremweb.common.StreamIO_TCPHandler_37] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[07/Sep/2017:23:28:38 +0000] [xtremweb.common.StreamIO_TCPHandler_38] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[07/Sep/2017:23:28:44 +0000] [xtremweb.common.StreamIO_TCPHandler_39] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[07/Sep/2017:23:28:50 +0000] [xtremweb.common.StreamIO_TCPHandler_40] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[07/Sep/2017:23:28:56 +0000] [xtremweb.common.StreamIO_TCPHandler_41] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[07/Sep/2017:23:28:57 +0000] [xtremweb.common.StreamIO_TCPHandler_42] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[07/Sep/2017:23:28:57 +0000] [xtremweb.common.StreamIO_TCPHandler_43] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[07/Sep/2017:23:28:57 +0000] [xtremweb.common.StreamIO_TCPHandler_44] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[07/Sep/2017:23:28:57 +0000] [xtremweb.dispatcher.DBInterface_TCPHandler_45] WARN : javax.mail.internet.AddressException: Missing local name in string ``@DBADMINEMAIL@'' (Missing local name)
[07/Sep/2017:23:28:57 +0000] [xtremweb.common.StreamIO_TCPHandler_45] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[07/Sep/2017:23:28:57 +0000] [xtremweb.common.StreamIO_TCPHandler_46] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[07/Sep/2017:23:29:03 +0000] [xtremweb.common.StreamIO_TCPHandler_47] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[07/Sep/2017:23:29:08 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2023938592-224_224] WARN : 224 : getIdRpc a ete synchronise ! null
[07/Sep/2017:23:29:08 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2023938592-224_224] WARN : 224 : getIdRpc a ete synchronise ! GET
[07/Sep/2017:23:29:08 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2023938592-224_224] WARN : 224 : getIdRpc a ete synchronise ! GET
[07/Sep/2017:23:29:27 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2023938592-228_228] WARN : 228 : getIdRpc a ete synchronise ! null
[07/Sep/2017:23:29:27 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2023938592-228_228] WARN : 228 : getIdRpc a ete synchronise ! GET
[07/Sep/2017:23:29:27 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2023938592-228_228] WARN : 228 : getIdRpc a ete synchronise ! GET
[07/Sep/2017:23:29:27 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2023938592-231_231] WARN : 231 : getIdRpc a ete synchronise ! null
[07/Sep/2017:23:29:27 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2023938592-231_231] WARN : 231 : getIdRpc a ete synchronise ! GET
[07/Sep/2017:23:29:27 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2023938592-231_231] WARN : 231 : getIdRpc a ete synchronise ! GET
[07/Sep/2017:23:29:27 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2023938592-227_227] WARN : 227 : getIdRpc a ete synchronise ! null
[07/Sep/2017:23:29:27 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2023938592-227_227] WARN : 227 : getIdRpc a ete synchronise ! DOWNLOADDATA
[07/Sep/2017:23:29:27 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2023938592-227_227] WARN : 227 : getIdRpc a ete synchronise ! DOWNLOADDATA
[07/Sep/2017:23:29:42 +0000] [xtremweb.common.StreamIO_TCPHandler_48] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[07/Sep/2017:23:29:42 +0000] [xtremweb.communications.TCPServer_TCPServerNIO_15] WARN : java.net.SocketException: Socket closed (Socket closed)
</msg>
<status status="PASS" endtime="20170907 23:29:42.814" starttime="20170907 23:29:42.809"></status>
</kw>
<status status="PASS" endtime="20170907 23:29:42.814" starttime="20170907 23:29:42.807"></status>
</kw>
<status status="PASS" endtime="20170907 23:29:42.814" starttime="20170907 23:29:42.806"></status>
</kw>
<kw name="Stop XtremWeb Worker" library="XWWorker">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Stop XtremWeb Worker</arg>
</arguments>
<msg timestamp="20170907 23:29:42.817" level="INFO">Stop XtremWeb Worker</msg>
<status status="PASS" endtime="20170907 23:29:42.817" starttime="20170907 23:29:42.816"></status>
</kw>
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${WORKER_PROCESS}</arg>
</arguments>
<msg timestamp="20170907 23:29:42.818" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20170907 23:29:42.819" level="INFO">Process completed.</msg>
<status status="PASS" endtime="20170907 23:29:42.819" starttime="20170907 23:29:42.817"></status>
</kw>
<status status="PASS" endtime="20170907 23:29:42.820" starttime="20170907 23:29:42.815"></status>
</kw>
<status status="PASS" endtime="20170907 23:29:42.820" starttime="20170907 23:29:42.800"></status>
</kw>
<status status="PASS" endtime="20170907 23:29:42.820" starttime="20170907 23:29:42.676"></status>
</kw>
<doc>End-to-End test HelloWorld usecase Oracle+bridge+xtremweb</doc>
<status status="PASS" endtime="20170907 23:29:42.820" starttime="20170907 23:22:10.896"></status>
</suite>
<suite source="/home/vagrant/iexecdev/iexec-node/tests/rf/Tests/interfaceSuite.robot" id="s1-s2" name="interfaceSuite">
<test id="s1-s2-t1" name="Test Interface Web">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>TODO</arg>
</arguments>
<msg timestamp="20170907 23:29:42.837" level="INFO">TODO</msg>
<status status="PASS" endtime="20170907 23:29:42.837" starttime="20170907 23:29:42.836"></status>
</kw>
<doc>We can use via http://robotframework.org/#libraries External Selenium2Library : http://robotframework.org/Selenium2Library/Selenium2Library.html</doc>
<tags>
<tag>Web Tests</tag>
</tags>
<status status="PASS" endtime="20170907 23:29:42.838" critical="yes" starttime="20170907 23:29:42.834"></status>
</test>
<doc>All user interfaces tests</doc>
<status status="PASS" endtime="20170907 23:29:42.841" starttime="20170907 23:29:42.827"></status>
</suite>
<suite source="/home/vagrant/iexecdev/iexec-node/tests/rf/Tests/truffleTestsOnLocalGeth.robot" id="s1-s3" name="truffleTestsOnLocalGeth">
<kw type="setup" name="Start Geth42">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd ~/gethUtils &amp;&amp; ./resetANewChain42AndMine.sh</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${geth_result}</var>
</assign>
<msg timestamp="20170907 23:29:42.859" level="INFO">Starting process:
cd ~/gethUtils &amp;&amp; ./resetANewChain42AndMine.sh</msg>
<msg timestamp="20170907 23:29:42.864" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170907 23:35:32.309" level="INFO">Process completed.</msg>
<msg timestamp="20170907 23:35:32.310" level="INFO">${geth_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170907 23:35:32.310" starttime="20170907 23:29:42.859"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${geth_result.stderr}</arg>
</arguments>
<msg timestamp="20170907 23:35:32.311" level="INFO">rm: cannot remove ‘/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata/000014.ldb’: Permission denied
rm: cannot remove ‘/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata/000015.ldb’: Permission denied
rm: cannot remove ‘/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata/000018.ldb’: Permission denied
rm: cannot remove ‘/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata/000021.ldb’: Permission denied
rm: cannot remove ‘/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata/000022.log’: Permission denied
rm: cannot remove ‘/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata/CURRENT’: Permission denied
rm: cannot remove ‘/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata/LOCK’: Permission denied
rm: cannot remove ‘/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata/LOG’: Permission denied
rm: cannot remove ‘/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata/MANIFEST-000023’: Permission denied
rm: cannot remove ‘/home/vagrant/iexecdev/.ethereum/net42/geth/lightchaindata/000002.ldb’: Permission denied
rm: cannot remove ‘/home/vagrant/iexecdev/.ethereum/net42/geth/lightchaindata/000005.ldb’: Permission denied
rm: cannot remove ‘/home/vagrant/iexecdev/.ethereum/net42/geth/lightchaindata/000008.ldb’: Permission denied
rm: cannot remove ‘/home/vagrant/iexecdev/.ethereum/net42/geth/lightchaindata/000011.ldb’: Permission denied
rm: cannot remove ‘/home/vagrant/iexecdev/.ethereum/net42/geth/lightchaindata/000015.log’: Permission denied
rm: cannot remove ‘/home/vagrant/iexecdev/.ethereum/net42/geth/lightchaindata/000017.ldb’: Permission denied
rm: cannot remove ‘/home/vagrant/iexecdev/.ethereum/net42/geth/lightchaindata/CURRENT’: Permission denied
rm: cannot remove ‘/home/vagrant/iexecdev/.ethereum/net42/geth/lightchaindata/LOCK’: Permission denied
rm: cannot remove ‘/home/vagrant/iexecdev/.ethereum/net42/geth/lightchaindata/LOG’: Permission denied
rm: cannot remove ‘/home/vagrant/iexecdev/.ethereum/net42/geth/lightchaindata/MANIFEST-000016’: Permission denied
rm: cannot remove ‘/home/vagrant/iexecdev/.ethereum/net42/geth/LOCK’: Permission denied
rm: cannot remove ‘/home/vagrant/iexecdev/.ethereum/net42/geth/nodekey’: Permission denied
rm: cannot remove ‘/home/vagrant/iexecdev/.ethereum/net42/geth/nodes/000002.ldb’: Permission denied
rm: cannot remove ‘/home/vagrant/iexecdev/.ethereum/net42/geth/nodes/000003.log’: Permission denied
rm: cannot remove ‘/home/vagrant/iexecdev/.ethereum/net42/geth/nodes/CURRENT’: Permission denied
rm: cannot remove ‘/home/vagrant/iexecdev/.ethereum/net42/geth/nodes/LOCK’: Permission denied
rm: cannot remove ‘/home/vagrant/iexecdev/.ethereum/net42/geth/nodes/LOG’: Permission denied
rm: cannot remove ‘/home/vagrant/iexecdev/.ethereum/net42/geth/nodes/MANIFEST-000004’: Permission denied
rm: cannot remove ‘/home/vagrant/iexecdev/.ethereum/net42/keystore/UTC--2017-09-03T16-44-05.122678563Z--7f49e659b57f7ee2fffee1fd21f360426b604699’: Permission denied
rm: cannot remove ‘/home/vagrant/iexecdev/.ethereum/net42/keystore/UTC--2017-09-03T16-44-06.328044784Z--23f649bdbee33b6608409cfd0ddfa5a5ce8694f7’: Permission denied
rm: cannot remove ‘/home/vagrant/iexecdev/.ethereum/net42/keystore/UTC--2017-09-03T16-44-07.289715733Z--5e5dbe9f8ad9f57b6d06f6e76dcfdb216ca92363’: Permission denied
rm: cannot remove ‘/home/vagrant/iexecdev/.ethereum/net42/keystore/UTC--2017-09-03T16-44-08.306593557Z--729a07c002bbb710fd3498e3d765ba1502c28bdd’: Permission denied
rm: cannot remove ‘/home/vagrant/iexecdev/.ethereum/net42/keystore/UTC--2017-09-03T16-44-09.309462662Z--ae3e2705067406401340b29a1392deef86eb4203’: Permission denied
rm: cannot remove ‘/home/vagrant/iexecdev/.ethereum/net42/keystore/UTC--2017-09-03T16-44-10.629761973Z--eec5e77b964110b67d6c8b6d0615ca71815679d8’: Permission denied
rm: cannot remove ‘/home/vagrant/iexecdev/.ethereum/net42/keystore/UTC--2017-09-03T16-44-11.756602603Z--23bd482abfa1f07eb2924e1f18e0fe6778ebf0f0’: Permission denied
rm: cannot remove ‘/home/vagrant/iexecdev/.ethereum/net42/keystore/UTC--2017-09-03T16-44-12.812209442Z--87237396c4ae31a5a21287e77a2b0afea55cdbd0’: Permission denied
rm: cannot remove ‘/home/vagrant/iexecdev/.ethereum/net42/keystore/UTC--2017-09-03T16-44-13.875927936Z--87b628e75181f93c227f385326fd8a616ba9834b’: Permission denied
rm: cannot remove ‘/home/vagrant/iexecdev/.ethereum/net42/keystore/UTC--2017-09-03T16-44-14.886999001Z--bc0c03cb79e926098827f40a290ee9a4e52ea5ac’: Permission denied
rm: cannot remove ‘/home/vagrant/iexecdev/.ethereum/net42/keystore/UTC--2017-09-06T23-27-49.105735470Z--548ce57d88766fba2b8c4269c4098c0e5a101cdb’: Permission denied
rm: cannot remove ‘/home/vagrant/iexecdev/.ethereum/net42/keystore/UTC--2017-09-06T23-27-50.104321477Z--9cca8babc1abd377919928ee9c3d648f5030f760’: Permission denied
rm: cannot remove ‘/home/vagrant/iexecdev/.ethereum/net42/keystore/UTC--2017-09-06T23-27-51.139762884Z--3050cc30505f98fcfb0b2f8c3a8ec39c6a3a324d’: Permission denied
rm: cannot remove ‘/home/vagrant/iexecdev/.ethereum/net42/keystore/UTC--2017-09-06T23-27-52.152213435Z--9138ccd09ad0f30f551bdab6f92719f211eca75e’: Permission denied
rm: cannot remove ‘/home/vagrant/iexecdev/.ethereum/net42/keystore/UTC--2017-09-06T23-27-53.121555933Z--46b3d55a0dbc734591c6684a72842a207486add9’: Permission denied
rm: cannot remove ‘/home/vagrant/iexecdev/.ethereum/net42/keystore/UTC--2017-09-06T23-27-54.065561589Z--36c9016b7839eb7c05566876eb8f33ea59c04d36’: Permission denied
rm: cannot remove ‘/home/vagrant/iexecdev/.ethereum/net42/keystore/UTC--2017-09-06T23-27-55.090443052Z--b253e34c11a3fb69b35c9262ca047d4112ab9483’: Permission denied
rm: cannot remove ‘/home/vagrant/iexecdev/.ethereum/net42/keystore/UTC--2017-09-06T23-27-56.137993269Z--3f525c459399d6fde2003dd3d65dc7cfe0b06942’: Permission denied
rm: cannot remove ‘/home/vagrant/iexecdev/.ethereum/net42/keystore/UTC--2017-09-06T23-27-57.173449239Z--8b1fb3cdc30be00fa150344f206c71bf88b59719’: Permission denied
rm: cannot remove ‘/home/vagrant/iexecdev/.ethereum/net42/keystore/UTC--2017-09-06T23-27-58.271225741Z--63b0a527c6329b0322f0b2335b3a928c070f1209’: Permission denied
INFO [09-07|23:29:49] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
INFO [09-07|23:29:50] Successfully wrote genesis state         database=chaindata                                             hash=afad92…166fe3
INFO [09-07|23:29:50] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/lightchaindata cache=16 handles=16
INFO [09-07|23:29:51] Successfully wrote genesis state         database=lightchaindata                                             hash=afad92…166fe3
INFO [09-07|23:30:02] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
INFO [09-07|23:30:02] Successfully wrote genesis state         database=chaindata                                             hash=afad92…166fe3
INFO [09-07|23:30:02] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/lightchaindata cache=16 handles=16
INFO [09-07|23:30:02] Successfully wrote genesis state         database=lightchaindata                                             hash=afad92…166fe3
INFO [09-07|23:30:06] Generating DAG in progress               epoch=1 percentage=0 elapsed=2.962s
INFO [09-07|23:30:09] Generating DAG in progress               epoch=1 percentage=1 elapsed=5.906s
INFO [09-07|23:30:12] Generating DAG in progress               epoch=1 percentage=2 elapsed=8.788s
INFO [09-07|23:30:15] Generating DAG in progress               epoch=1 percentage=3 elapsed=11.725s
INFO [09-07|23:30:18] Generating DAG in progress               epoch=1 percentage=4 elapsed=14.572s
INFO [09-07|23:30:21] Generating DAG in progress               epoch=1 percentage=5 elapsed=17.473s
INFO [09-07|23:30:23] Generating DAG in progress               epoch=1 percentage=6 elapsed=20.431s
INFO [09-07|23:30:26] Generating DAG in progress               epoch=1 percentage=7 elapsed=23.333s
INFO [09-07|23:30:29] Generating DAG in progress               epoch=1 percentage=8 elapsed=26.227s
INFO [09-07|23:30:32] Generating DAG in progress               epoch=1 percentage=9 elapsed=29.087s
INFO [09-07|23:30:35] Generating DAG in progress               epoch=1 percentage=10 elapsed=31.948s
INFO [09-07|23:30:39] Generating DAG in progress               epoch=1 percentage=11 elapsed=36.013s
INFO [09-07|23:30:42] Generating DAG in progress               epoch=1 percentage=12 elapsed=38.985s
INFO [09-07|23:30:45] Generating DAG in progress               epoch=1 percentage=13 elapsed=41.919s
INFO [09-07|23:30:48] Generating DAG in progress               epoch=1 percentage=14 elapsed=44.934s
INFO [09-07|23:30:51] Generating DAG in progress               epoch=1 percentage=15 elapsed=47.875s
INFO [09-07|23:30:54] Generating DAG in progress               epoch=1 percentage=16 elapsed=50.905s
INFO [09-07|23:30:57] Generating DAG in progress               epoch=1 percentage=17 elapsed=53.818s
INFO [09-07|23:31:00] Generating DAG in progress               epoch=1 percentage=18 elapsed=56.711s
INFO [09-07|23:31:03] Generating DAG in progress               epoch=1 percentage=19 elapsed=59.598s
INFO [09-07|23:31:06] Generating DAG in progress               epoch=1 percentage=20 elapsed=1m2.463s
INFO [09-07|23:31:08] Generating DAG in progress               epoch=1 percentage=21 elapsed=1m5.330s
INFO [09-07|23:31:11] Generating DAG in progress               epoch=1 percentage=22 elapsed=1m8.200s
INFO [09-07|23:31:14] Generating DAG in progress               epoch=1 percentage=23 elapsed=1m11.100s
INFO [09-07|23:31:18] Generating DAG in progress               epoch=1 percentage=24 elapsed=1m14.781s
INFO [09-07|23:31:21] Generating DAG in progress               epoch=1 percentage=25 elapsed=1m17.890s
INFO [09-07|23:31:24] Generating DAG in progress               epoch=1 percentage=26 elapsed=1m20.941s
INFO [09-07|23:31:27] Generating DAG in progress               epoch=1 percentage=27 elapsed=1m23.832s
INFO [09-07|23:31:30] Generating DAG in progress               epoch=1 percentage=28 elapsed=1m26.707s
INFO [09-07|23:31:33] Generating DAG in progress               epoch=1 percentage=29 elapsed=1m29.609s
INFO [09-07|23:31:36] Generating DAG in progress               epoch=1 percentage=30 elapsed=1m32.463s
INFO [09-07|23:31:38] Generating DAG in progress               epoch=1 percentage=31 elapsed=1m35.435s
INFO [09-07|23:31:41] Generating DAG in progress               epoch=1 percentage=32 elapsed=1m38.341s
INFO [09-07|23:31:44] Generating DAG in progress               epoch=1 percentage=33 elapsed=1m41.271s
INFO [09-07|23:31:47] Generating DAG in progress               epoch=1 percentage=34 elapsed=1m44.201s
INFO [09-07|23:31:50] Generating DAG in progress               epoch=1 percentage=35 elapsed=1m47.122s
INFO [09-07|23:31:54] Generating DAG in progress               epoch=1 percentage=36 elapsed=1m51.182s
INFO [09-07|23:31:57] Generating DAG in progress               epoch=1 percentage=37 elapsed=1m54.138s
INFO [09-07|23:32:00] Generating DAG in progress               epoch=1 percentage=38 elapsed=1m57.006s
INFO [09-07|23:32:03] Generating DAG in progress               epoch=1 percentage=39 elapsed=1m59.858s
INFO [09-07|23:32:06] Generating DAG in progress               epoch=1 percentage=40 elapsed=2m2.758s
INFO [09-07|23:32:09] Generating DAG in progress               epoch=1 percentage=41 elapsed=2m5.732s
INFO [09-07|23:32:12] Generating DAG in progress               epoch=1 percentage=42 elapsed=2m8.619s
INFO [09-07|23:32:15] Generating DAG in progress               epoch=1 percentage=43 elapsed=2m11.494s
INFO [09-07|23:32:18] Generating DAG in progress               epoch=1 percentage=44 elapsed=2m15.326s
INFO [09-07|23:32:21] Generating DAG in progress               epoch=1 percentage=45 elapsed=2m18.256s
INFO [09-07|23:32:26] Generating DAG in progress               epoch=1 percentage=46 elapsed=2m22.903s
INFO [09-07|23:32:29] Generating DAG in progress               epoch=1 percentage=47 elapsed=2m26.021s
INFO [09-07|23:32:32] Generating DAG in progress               epoch=1 percentage=48 elapsed=2m28.966s
INFO [09-07|23:32:35] Generating DAG in progress               epoch=1 percentage=49 elapsed=2m31.900s
INFO [09-07|23:32:38] Generating DAG in progress               epoch=1 percentage=50 elapsed=2m34.776s
INFO [09-07|23:32:41] Generating DAG in progress               epoch=1 percentage=51 elapsed=2m37.653s
INFO [09-07|23:32:44] Generating DAG in progress               epoch=1 percentage=52 elapsed=2m40.542s
INFO [09-07|23:32:47] Generating DAG in progress               epoch=1 percentage=53 elapsed=2m43.482s
INFO [09-07|23:32:49] Generating DAG in progress               epoch=1 percentage=54 elapsed=2m46.392s
INFO [09-07|23:32:53] Generating DAG in progress               epoch=1 percentage=55 elapsed=2m49.523s
INFO [09-07|23:32:56] Generating DAG in progress               epoch=1 percentage=56 elapsed=2m52.476s
INFO [09-07|23:32:59] Generating DAG in progress               epoch=1 percentage=57 elapsed=2m56.221s
INFO [09-07|23:33:02] Generating DAG in progress               epoch=1 percentage=58 elapsed=2m59.070s
INFO [09-07|23:33:05] Generating DAG in progress               epoch=1 percentage=59 elapsed=3m2.246s
INFO [09-07|23:33:08] Generating DAG in progress               epoch=1 percentage=60 elapsed=3m5.170s
INFO [09-07|23:33:11] Generating DAG in progress               epoch=1 percentage=61 elapsed=3m8.042s
INFO [09-07|23:33:14] Generating DAG in progress               epoch=1 percentage=62 elapsed=3m10.932s
INFO [09-07|23:33:17] Generating DAG in progress               epoch=1 percentage=63 elapsed=3m13.824s
INFO [09-07|23:33:20] Generating DAG in progress               epoch=1 percentage=64 elapsed=3m16.700s
INFO [09-07|23:33:23] Generating DAG in progress               epoch=1 percentage=65 elapsed=3m19.652s
INFO [09-07|23:33:26] Generating DAG in progress               epoch=1 percentage=66 elapsed=3m22.530s
INFO [09-07|23:33:29] Generating DAG in progress               epoch=1 percentage=67 elapsed=3m25.548s
INFO [09-07|23:33:32] Generating DAG in progress               epoch=1 percentage=68 elapsed=3m28.850s
INFO [09-07|23:33:36] Generating DAG in progress               epoch=1 percentage=69 elapsed=3m32.901s
INFO [09-07|23:33:39] Generating DAG in progress               epoch=1 percentage=70 elapsed=3m36.024s
INFO [09-07|23:33:42] Generating DAG in progress               epoch=1 percentage=71 elapsed=3m38.934s
INFO [09-07|23:33:45] Generating DAG in progress               epoch=1 percentage=72 elapsed=3m41.788s
INFO [09-07|23:33:48] Generating DAG in progress               epoch=1 percentage=73 elapsed=3m44.705s
INFO [09-07|23:33:51] Generating DAG in progress               epoch=1 percentage=74 elapsed=3m47.652s
INFO [09-07|23:33:54] Generating DAG in progress               epoch=1 percentage=75 elapsed=3m50.549s
INFO [09-07|23:33:57] Generating DAG in progress               epoch=1 percentage=76 elapsed=3m53.506s
INFO [09-07|23:34:00] Generating DAG in progress               epoch=1 percentage=77 elapsed=3m56.634s
INFO [09-07|23:34:03] Generating DAG in progress               epoch=1 percentage=78 elapsed=3m59.593s
INFO [09-07|23:34:06] Generating DAG in progress               epoch=1 percentage=79 elapsed=4m2.494s
INFO [09-07|23:34:09] Generating DAG in progress               epoch=1 percentage=80 elapsed=4m5.461s
INFO [09-07|23:34:13] Generating DAG in progress               epoch=1 percentage=81 elapsed=4m10.050s
INFO [09-07|23:34:16] Generating DAG in progress               epoch=1 percentage=82 elapsed=4m13.098s
INFO [09-07|23:34:19] Generating DAG in progress               epoch=1 percentage=83 elapsed=4m16.002s
INFO [09-07|23:34:22] Generating DAG in progress               epoch=1 percentage=84 elapsed=4m19.315s
INFO [09-07|23:34:25] Generating DAG in progress               epoch=1 percentage=85 elapsed=4m22.446s
INFO [09-07|23:34:29] Generating DAG in progress               epoch=1 percentage=86 elapsed=4m25.485s
INFO [09-07|23:34:31] Generating DAG in progress               epoch=1 percentage=87 elapsed=4m28.399s
INFO [09-07|23:34:34] Generating DAG in progress               epoch=1 percentage=88 elapsed=4m31.267s
INFO [09-07|23:34:37] Generating DAG in progress               epoch=1 percentage=89 elapsed=4m34.109s
INFO [09-07|23:34:40] Generating DAG in progress               epoch=1 percentage=90 elapsed=4m36.995s
INFO [09-07|23:34:43] Generating DAG in progress               epoch=1 percentage=91 elapsed=4m39.889s
INFO [09-07|23:34:46] Generating DAG in progress               epoch=1 percentage=92 elapsed=4m42.770s
INFO [09-07|23:34:49] Generating DAG in progress               epoch=1 percentage=93 elapsed=4m45.677s
INFO [09-07|23:34:52] Generating DAG in progress               epoch=1 percentage=94 elapsed=4m48.662s
INFO [09-07|23:34:55] Generating DAG in progress               epoch=1 percentage=95 elapsed=4m51.918s
INFO [09-07|23:34:59] Generating DAG in progress               epoch=1 percentage=96 elapsed=4m55.493s
INFO [09-07|23:35:02] Generating DAG in progress               epoch=1 percentage=97 elapsed=4m58.486s
INFO [09-07|23:35:04] Generating DAG in progress               epoch=1 percentage=98 elapsed=5m1.347s
INFO [09-07|23:35:08] Generating DAG in progress               epoch=1 percentage=99 elapsed=5m4.786s
INFO [09-07|23:35:08] Generated ethash verification cache      epoch=1 elapsed=5m4.788s
INFO [09-07|23:35:09] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
INFO [09-07|23:35:09] Successfully wrote genesis state         database=chaindata                                             hash=afad92…166fe3
INFO [09-07|23:35:09] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/lightchaindata cache=16 handles=16
INFO [09-07|23:35:09] Successfully wrote genesis state         database=lightchaindata                                             hash=afad92…166fe3
INFO [09-07|23:35:14] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-07|23:35:14] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable</msg>
<status status="PASS" endtime="20170907 23:35:32.311" starttime="20170907 23:35:32.310"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${geth_result.stdout}</arg>
</arguments>
<msg timestamp="20170907 23:35:32.312" level="INFO">kill existing geth process
clear ~/iexecdev/.ethereum/net42/ content
clear ~/.ethash content
creating 10 accounts
create account 1
Address: {cfc432e30d81f08b3357aa12cdbf9f60eefa96dc}
create account 2
Address: {c48413cbf9b3da649ab10e79c44d5b4d9179fea9}
create account 3
Address: {e49a27e352eafe29d4d8648a5f26a3785be0dbca}
create account 4
Address: {c49a0acf22e1282f51f685c0796e514723bee993}
create account 5
Address: {a20efc0a83302ac78062b049f652e58ecd9a8504}
create account 6
Address: {ff9afee02427d5c92110bd42006cd6e2fca54733}
create account 7
Address: {265d4ede7fc9337f235fa9d812a1abe225f361cc}
create account 8
Address: {f8772f7203630925eec3adb9da1f0a3e51c835b5}
create account 9
Address: {d92ef689c1bfad5a2a250a4bfa91aeabc40e993b}
create account 10
Address: {860cb807333d67a356a23e9bb955d456a6f26d9b}
create DAG epoch 1
clear ~/.ethash content
making DAG, this could take awhile...
start a coinbase miner in background
5 blocks mined in geth 42 !
unlocked 9 accounts
Fatal: Failed to open database: resource temporarily unavailable
unlock account 1
true
unlock account 2
true
unlock account 3
true
unlock account 4
true
unlock account 5
true
unlock account 6
true
unlock account 7
true
unlock account 8
true
unlock account 9
true
local geth 42 ready to go for testing</msg>
<status status="PASS" endtime="20170907 23:35:32.312" starttime="20170907 23:35:32.311"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${geth_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170907 23:35:32.313" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170907 23:35:32.313" starttime="20170907 23:35:32.312"></status>
</kw>
<status status="PASS" endtime="20170907 23:35:32.313" starttime="20170907 23:29:42.859"></status>
</kw>
<test id="s1-s3-t1" name="Test Iexec Oracle Truffle Tests On Local Geth">
<kw name="Iexec Oracle Truffle Tests" library="IexecOracle">
<tags>
<tag>Smart contract Tests</tag>
</tags>
<doc>call truffle test and show the result here.</doc>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${IEXEC_ORACLE_FORCE_GIT_CLONE}' == 'true'</arg>
<arg>Git Clone Iexec Oracle</arg>
</arguments>
<kw name="Git Clone Iexec Oracle" library="IexecOracle">
<kw name="Remove Directory" library="OperatingSystem">
<doc>Removes the directory pointed to by the given ``path``.</doc>
<arguments>
<arg>iexec-oracle</arg>
<arg>recursive=true</arg>
</arguments>
<msg timestamp="20170907 23:35:45.287" html="yes" level="INFO">Removed directory '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/iexec-oracle"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/iexec-oracle&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170907 23:35:45.287" starttime="20170907 23:35:32.326"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>git clone ${IEXEC_ORACLE_GIT_BRANCH}</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${git_result}</var>
</assign>
<msg timestamp="20170907 23:35:45.288" level="INFO">Starting process:
git clone https://github.com/iExecBlockchainComputing/iexec-oracle.git</msg>
<msg timestamp="20170907 23:35:45.299" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170907 23:35:47.566" level="INFO">Process completed.</msg>
<msg timestamp="20170907 23:35:47.566" level="INFO">${git_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170907 23:35:47.566" starttime="20170907 23:35:45.287"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${git_result.stderr}</arg>
</arguments>
<msg timestamp="20170907 23:35:47.567" level="INFO">Cloning into 'iexec-oracle'...</msg>
<status status="PASS" endtime="20170907 23:35:47.567" starttime="20170907 23:35:47.566"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${git_result.stdout}</arg>
</arguments>
<msg timestamp="20170907 23:35:47.568" level="INFO"></msg>
<status status="PASS" endtime="20170907 23:35:47.568" starttime="20170907 23:35:47.568"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${git_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170907 23:35:47.569" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170907 23:35:47.569" starttime="20170907 23:35:47.568"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd iexec-oracle/API &amp;&amp; npm install</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${npm_result}</var>
</assign>
<msg timestamp="20170907 23:35:47.569" level="INFO">Starting process:
cd iexec-oracle/API &amp;&amp; npm install</msg>
<msg timestamp="20170907 23:35:47.583" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170907 23:36:08.218" level="INFO">Process completed.</msg>
<msg timestamp="20170907 23:36:08.218" level="INFO">${npm_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170907 23:36:08.218" starttime="20170907 23:35:47.569"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${npm_result.stderr}</arg>
</arguments>
<msg timestamp="20170907 23:36:08.219" level="INFO">npm WARN xtremwebinterface@1.0.0 No description
npm WARN xtremwebinterface@1.0.0 No repository field.</msg>
<status status="PASS" endtime="20170907 23:36:08.219" starttime="20170907 23:36:08.219"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${npm_result.stdout}</arg>
</arguments>
<msg timestamp="20170907 23:36:08.220" level="INFO">xtremwebinterface@1.0.0 /home/vagrant/iexecdev/iexec-node/tests/rf/iexec-oracle/API
├── bluebird@3.5.0 
├── lodash@4.17.4 
├─┬ truffle@3.4.7 
│ ├─┬ mocha@3.5.0 
│ │ ├── browser-stdout@1.3.0 
│ │ ├─┬ commander@2.9.0 
│ │ │ └── graceful-readlink@1.0.1 
│ │ ├─┬ debug@2.6.8 
│ │ │ └── ms@2.0.0 
│ │ ├── diff@3.2.0 
│ │ ├── escape-string-regexp@1.0.5 
│ │ ├─┬ glob@7.1.1 
│ │ │ ├── fs.realpath@1.0.0 
│ │ │ ├─┬ inflight@1.0.6 
│ │ │ │ └── wrappy@1.0.2 
│ │ │ ├── inherits@2.0.3 
│ │ │ ├─┬ minimatch@3.0.4 
│ │ │ │ └─┬ brace-expansion@1.1.8 
│ │ │ │   ├── balanced-match@1.0.0 
│ │ │ │   └── concat-map@0.0.1 
│ │ │ ├── once@1.4.0 
│ │ │ └── path-is-absolute@1.0.1 
│ │ ├── growl@1.9.2 
│ │ ├── json3@3.3.2 
│ │ ├─┬ lodash.create@3.1.1 
│ │ │ ├─┬ lodash._baseassign@3.2.0 
│ │ │ │ ├── lodash._basecopy@3.0.1 
│ │ │ │ └─┬ lodash.keys@3.1.2 
│ │ │ │   ├── lodash._getnative@3.9.1 
│ │ │ │   ├── lodash.isarguments@3.1.0 
│ │ │ │   └── lodash.isarray@3.0.4 
│ │ │ ├── lodash._basecreate@3.0.3 
│ │ │ └── lodash._isiterateecall@3.0.9 
│ │ ├─┬ mkdirp@0.5.1 
│ │ │ └── minimist@0.0.8 
│ │ └─┬ supports-color@3.1.2 
│ │   └── has-flag@1.0.0 
│ ├── original-require@1.0.1 
│ └─┬ solc@0.4.13 
│   ├─┬ fs-extra@0.30.0 
│   │ ├── graceful-fs@4.1.11 
│   │ ├── jsonfile@2.4.0 
│   │ ├── klaw@1.3.1 
│   │ └── rimraf@2.6.1 
│   ├── memorystream@0.3.1 
│   ├── require-from-string@1.2.1 
│   ├── semver@5.4.1 
│   └─┬ yargs@4.8.1 
│     ├─┬ cliui@3.2.0 
│     │ ├─┬ strip-ansi@3.0.1 
│     │ │ └── ansi-regex@2.1.1 
│     │ └── wrap-ansi@2.1.0 
│     ├── decamelize@1.2.0 
│     ├── get-caller-file@1.0.2 
│     ├── lodash.assign@4.2.0 
│     ├─┬ os-locale@1.4.0 
│     │ └─┬ lcid@1.0.0 
│     │   └── invert-kv@1.0.0 
│     ├─┬ read-pkg-up@1.0.1 
│     │ ├─┬ find-up@1.1.2 
│     │ │ ├── path-exists@2.1.0 
│     │ │ └─┬ pinkie-promise@2.0.1 
│     │ │   └── pinkie@2.0.4 
│     │ └─┬ read-pkg@1.1.0 
│     │   ├─┬ load-json-file@1.1.0 
│     │   │ ├─┬ parse-json@2.2.0 
│     │   │ │ └─┬ error-ex@1.3.1 
│     │   │ │   └── is-arrayish@0.2.1 
│     │   │ ├── pify@2.3.0 
│     │   │ └─┬ strip-bom@2.0.0 
│     │   │   └── is-utf8@0.2.1 
│     │   ├─┬ normalize-package-data@2.4.0 
│     │   │ ├── hosted-git-info@2.5.0 
│     │   │ ├─┬ is-builtin-module@1.0.0 
│     │   │ │ └── builtin-modules@1.1.1 
│     │   │ └─┬ validate-npm-package-license@3.0.1 
│     │   │   ├─┬ spdx-correct@1.0.2 
│     │   │   │ └── spdx-license-ids@1.2.2 
│     │   │   └── spdx-expression-parse@1.0.4 
│     │   └── path-type@1.1.0 
│     ├── require-directory@2.1.1 
│     ├── require-main-filename@1.0.1 
│     ├── set-blocking@2.0.0 
│     ├─┬ string-width@1.0.2 
│     │ ├── code-point-at@1.1.0 
│     │ └─┬ is-fullwidth-code-point@1.0.0 
│     │   └── number-is-nan@1.0.1 
│     ├── which-module@1.0.0 
│     ├── window-size@0.2.0 
│     ├── y18n@3.2.1 
│     └─┬ yargs-parser@2.4.1 
│       └── camelcase@3.0.0 
├─┬ truffle-contract@2.0.0 
│ ├─┬ ethjs-abi@0.1.8 
│ │ ├── bn.js@4.11.6 
│ │ ├── js-sha3@0.5.5 
│ │ └─┬ number-to-bn@1.7.0 
│ │   └─┬ strip-hex-prefix@1.0.0 
│ │     └── is-hex-prefixed@1.0.0 
│ ├── truffle-blockchain-utils@0.0.1 
│ └─┬ truffle-contract-schema@0.0.5 
│   └── crypto-js@3.1.9-1 
└─┬ web3@0.18.4 
  ├── bignumber.js@2.0.7  (git+https://github.com/debris/bignumber.js.git#94d7146671b9719e00a09c29b01a691bc85048c2)
  ├── crypto-js@3.1.8 
  ├── utf8@2.1.2 
  ├── xhr2@0.1.4 
  └── xmlhttprequest@1.8.0 
</msg>
<status status="PASS" endtime="20170907 23:36:08.220" starttime="20170907 23:36:08.220"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${npm_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170907 23:36:08.221" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170907 23:36:08.222" starttime="20170907 23:36:08.221"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd iexec-oracle/Bridge &amp;&amp; npm install</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${npm_result}</var>
</assign>
<msg timestamp="20170907 23:36:08.227" level="INFO">Starting process:
cd iexec-oracle/Bridge &amp;&amp; npm install</msg>
<msg timestamp="20170907 23:36:08.240" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170907 23:38:02.151" level="INFO">Process completed.</msg>
<msg timestamp="20170907 23:38:02.152" level="INFO">${npm_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170907 23:38:02.152" starttime="20170907 23:36:08.222"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${npm_result.stderr}</arg>
</arguments>
<msg timestamp="20170907 23:38:02.152" level="INFO">npm WARN deprecated babel-preset-latest@6.24.1: 💥  preset-latest accomplishes the same task as babel-preset-env. 🙏  Please install it with 'npm install babel-preset-env --save-dev'. '{ "presets": ["latest"] }' to '{ "presets": ["env"] }'. For more info, please check the docs: http://babeljs.io/docs/plugins/preset-env 👌. And let us know how you're liking Babel at @babeljs on 🐦 
npm WARN deprecated babel-preset-es2016@6.24.1: We're really excited that you're trying to use ES2016 syntax, but instead of making more yearly presets, Babel has a better preset that we recommend you use instead: npm install babel-preset-env --save-dev. Give us a follow @babeljs to get more updates
npm WARN deprecated babel-preset-es2017@6.24.1: We're really excited that you're trying to use ES2017 syntax, but instead of making more yearly presets, Babel has a better preset that we recommend you use instead: npm install babel-preset-env --save-dev. Give us a follow @babeljs to get more updates
npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@^1.0.0 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@1.1.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})
npm WARN babel-loader@7.1.2 requires a peer of webpack@2 || 3 but none was installed.</msg>
<status status="PASS" endtime="20170907 23:38:02.153" starttime="20170907 23:38:02.152"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${npm_result.stdout}</arg>
</arguments>
<msg timestamp="20170907 23:38:02.153" level="INFO">bridge@1.0.0 /home/vagrant/iexecdev/iexec-node/tests/rf/iexec-oracle/Bridge
├─┬ async@2.5.0 
│ └── lodash@4.17.4 
├─┬ babel-cli@6.26.0 
│ ├─┬ babel-polyfill@6.26.0 
│ │ ├── core-js@2.5.1 
│ │ └── regenerator-runtime@0.10.5 
│ ├─┬ babel-register@6.26.0 
│ │ ├─┬ home-or-tmp@2.0.0 
│ │ │ └── os-tmpdir@1.0.2 
│ │ └── source-map-support@0.4.17 
│ ├─┬ babel-runtime@6.26.0 
│ │ └── regenerator-runtime@0.11.0 
│ ├─┬ chokidar@1.7.0 
│ │ ├─┬ anymatch@1.3.2 
│ │ │ ├─┬ micromatch@2.3.11 
│ │ │ │ ├─┬ arr-diff@2.0.0 
│ │ │ │ │ └── arr-flatten@1.1.0 
│ │ │ │ ├── array-unique@0.2.1 
│ │ │ │ ├─┬ braces@1.8.5 
│ │ │ │ │ ├─┬ expand-range@1.8.2 
│ │ │ │ │ │ └─┬ fill-range@2.2.3 
│ │ │ │ │ │   ├── is-number@2.1.0 
│ │ │ │ │ │   ├── isobject@2.1.0 
│ │ │ │ │ │   ├─┬ randomatic@1.1.7 
│ │ │ │ │ │   │ ├─┬ is-number@3.0.0 
│ │ │ │ │ │   │ │ └── kind-of@3.2.2 
│ │ │ │ │ │   │ └── kind-of@4.0.0 
│ │ │ │ │ │   └── repeat-string@1.6.1 
│ │ │ │ │ ├── preserve@0.2.0 
│ │ │ │ │ └── repeat-element@1.1.2 
│ │ │ │ ├─┬ expand-brackets@0.1.5 
│ │ │ │ │ └── is-posix-bracket@0.1.1 
│ │ │ │ ├── extglob@0.3.2 
│ │ │ │ ├── filename-regex@2.0.1 
│ │ │ │ ├─┬ kind-of@3.2.2 
│ │ │ │ │ └── is-buffer@1.1.5 
│ │ │ │ ├─┬ object.omit@2.0.1 
│ │ │ │ │ ├─┬ for-own@0.1.5 
│ │ │ │ │ │ └── for-in@1.0.2 
│ │ │ │ │ └── is-extendable@0.1.1 
│ │ │ │ ├─┬ parse-glob@3.0.4 
│ │ │ │ │ ├── glob-base@0.3.0 
│ │ │ │ │ └── is-dotfile@1.0.3 
│ │ │ │ └─┬ regex-cache@0.4.4 
│ │ │ │   └─┬ is-equal-shallow@0.1.3 
│ │ │ │     └── is-primitive@2.0.0 
│ │ │ └─┬ normalize-path@2.1.1 
│ │ │   └── remove-trailing-separator@1.1.0 
│ │ ├── async-each@1.0.1 
│ │ ├── glob-parent@2.0.0 
│ │ ├── inherits@2.0.3 
│ │ ├─┬ is-binary-path@1.0.1 
│ │ │ └── binary-extensions@1.10.0 
│ │ ├─┬ is-glob@2.0.1 
│ │ │ └── is-extglob@1.0.0 
│ │ └─┬ readdirp@2.1.0 
│ │   └── set-immediate-shim@1.0.1 
│ ├── commander@2.11.0 
│ ├── convert-source-map@1.5.0 
│ ├── fs-readdir-recursive@1.0.0 
│ ├─┬ glob@7.1.2 
│ │ ├── fs.realpath@1.0.0 
│ │ ├─┬ inflight@1.0.6 
│ │ │ └── wrappy@1.0.2 
│ │ └── once@1.4.0 
│ ├─┬ output-file-sync@1.1.2 
│ │ └── graceful-fs@4.1.11 
│ ├── path-is-absolute@1.0.1 
│ ├── slash@1.0.0 
│ ├── source-map@0.5.7 
│ └─┬ v8flags@2.1.1 
│   └── user-home@1.1.1 
├─┬ babel-core@6.26.0 
│ ├─┬ babel-code-frame@6.26.0 
│ │ └── js-tokens@3.0.2 
│ ├─┬ babel-generator@6.26.0 
│ │ ├─┬ detect-indent@4.0.0 
│ │ │ └─┬ repeating@2.0.1 
│ │ │   └── is-finite@1.0.2 
│ │ ├── jsesc@1.3.0 
│ │ └── trim-right@1.0.1 
│ ├── babel-helpers@6.24.1 
│ ├── babel-messages@6.23.0 
│ ├── babel-template@6.26.0 
│ ├─┬ babel-traverse@6.26.0 
│ │ └── debug@2.6.8 
│ ├─┬ babel-types@6.26.0 
│ │ └── to-fast-properties@1.0.3 
│ ├── babylon@6.18.0 
│ ├─┬ debug@2.6.8 
│ │ └── ms@2.0.0 
│ ├── json5@0.5.1 
│ ├─┬ minimatch@3.0.4 
│ │ └─┬ brace-expansion@1.1.8 
│ │   ├── balanced-match@1.0.0 
│ │   └── concat-map@0.0.1 
│ └── private@0.1.7 
├── babel-eslint@7.2.3 
├─┬ babel-loader@7.1.2 
│ ├─┬ find-cache-dir@1.0.0 
│ │ ├── commondir@1.0.1 
│ │ ├─┬ make-dir@1.0.0 
│ │ │ └── pify@2.3.0 
│ │ └── pkg-dir@2.0.0 
│ ├─┬ loader-utils@1.1.0 
│ │ ├── big.js@3.1.3 
│ │ └── emojis-list@2.1.0 
│ └─┬ mkdirp@0.5.1 
│   └── minimist@0.0.8 
├─┬ babel-preset-env@1.6.0 
│ ├── babel-plugin-check-es2015-constants@6.22.0 
│ ├── babel-plugin-syntax-trailing-function-commas@6.22.0 
│ ├─┬ babel-plugin-transform-async-to-generator@6.24.1 
│ │ ├── babel-helper-remap-async-to-generator@6.24.1 
│ │ └── babel-plugin-syntax-async-functions@6.13.0 
│ ├── babel-plugin-transform-es2015-arrow-functions@6.22.0 
│ ├── babel-plugin-transform-es2015-block-scoped-functions@6.22.0 
│ ├── babel-plugin-transform-es2015-block-scoping@6.26.0 
│ ├─┬ babel-plugin-transform-es2015-classes@6.24.1 
│ │ ├── babel-helper-define-map@6.26.0 
│ │ ├── babel-helper-function-name@6.24.1 
│ │ ├── babel-helper-optimise-call-expression@6.24.1 
│ │ └── babel-helper-replace-supers@6.24.1 
│ ├── babel-plugin-transform-es2015-computed-properties@6.24.1 
│ ├── babel-plugin-transform-es2015-destructuring@6.23.0 
│ ├── babel-plugin-transform-es2015-duplicate-keys@6.24.1 
│ ├── babel-plugin-transform-es2015-for-of@6.23.0 
│ ├── babel-plugin-transform-es2015-function-name@6.24.1 
│ ├── babel-plugin-transform-es2015-literals@6.22.0 
│ ├── babel-plugin-transform-es2015-modules-amd@6.24.1 
│ ├─┬ babel-plugin-transform-es2015-modules-commonjs@6.26.0 
│ │ └── babel-plugin-transform-strict-mode@6.24.1 
│ ├─┬ babel-plugin-transform-es2015-modules-systemjs@6.24.1 
│ │ └── babel-helper-hoist-variables@6.24.1 
│ ├── babel-plugin-transform-es2015-modules-umd@6.24.1 
│ ├── babel-plugin-transform-es2015-object-super@6.24.1 
│ ├─┬ babel-plugin-transform-es2015-parameters@6.24.1 
│ │ ├── babel-helper-call-delegate@6.24.1 
│ │ └── babel-helper-get-function-arity@6.24.1 
│ ├── babel-plugin-transform-es2015-shorthand-properties@6.24.1 
│ ├── babel-plugin-transform-es2015-spread@6.22.0 
│ ├─┬ babel-plugin-transform-es2015-sticky-regex@6.24.1 
│ │ └── babel-helper-regex@6.26.0 
│ ├── babel-plugin-transform-es2015-template-literals@6.22.0 
│ ├── babel-plugin-transform-es2015-typeof-symbol@6.23.0 
│ ├─┬ babel-plugin-transform-es2015-unicode-regex@6.24.1 
│ │ └─┬ regexpu-core@2.0.0 
│ │   ├── regenerate@1.3.2 
│ │   ├── regjsgen@0.2.0 
│ │   └─┬ regjsparser@0.1.5 
│ │     └── jsesc@0.5.0 
│ ├─┬ babel-plugin-transform-exponentiation-operator@6.24.1 
│ │ ├─┬ babel-helper-builder-binary-assignment-operator-visitor@6.24.1 
│ │ │ └── babel-helper-explode-assignable-expression@6.24.1 
│ │ └── babel-plugin-syntax-exponentiation-operator@6.13.0 
│ ├─┬ babel-plugin-transform-regenerator@6.26.0 
│ │ └── regenerator-transform@0.10.1 
│ ├─┬ browserslist@2.4.0 
│ │ ├── caniuse-lite@1.0.30000726 
│ │ └── electron-to-chromium@1.3.21 
│ ├─┬ invariant@2.2.2 
│ │ └── loose-envify@1.3.1 
│ └── semver@5.4.1 
├─┬ babel-preset-latest@6.24.1 
│ ├── babel-preset-es2015@6.24.1 
│ ├── babel-preset-es2016@6.24.1 
│ └── babel-preset-es2017@6.24.1 
├─┬ babel-preset-stage-0@6.24.1 
│ ├─┬ babel-plugin-transform-do-expressions@6.22.0 
│ │ └── babel-plugin-syntax-do-expressions@6.13.0 
│ ├─┬ babel-plugin-transform-function-bind@6.22.0 
│ │ └── babel-plugin-syntax-function-bind@6.13.0 
│ └─┬ babel-preset-stage-1@6.24.1 
│   ├─┬ babel-plugin-transform-class-constructor-call@6.24.1 
│   │ └── babel-plugin-syntax-class-constructor-call@6.18.0 
│   ├─┬ babel-plugin-transform-export-extensions@6.22.0 
│   │ └── babel-plugin-syntax-export-extensions@6.13.0 
│   └─┬ babel-preset-stage-2@6.24.1 
│     ├── babel-plugin-syntax-dynamic-import@6.18.0 
│     ├─┬ babel-plugin-transform-class-properties@6.24.1 
│     │ └── babel-plugin-syntax-class-properties@6.13.0 
│     ├─┬ babel-plugin-transform-decorators@6.24.1 
│     │ ├─┬ babel-helper-explode-class@6.24.1 
│     │ │ └── babel-helper-bindify-decorators@6.24.1 
│     │ └── babel-plugin-syntax-decorators@6.13.0 
│     └─┬ babel-preset-stage-3@6.24.1 
│       ├─┬ babel-plugin-transform-async-generator-functions@6.24.1 
│       │ └── babel-plugin-syntax-async-generators@6.13.0 
│       └─┬ babel-plugin-transform-object-rest-spread@6.26.0 
│         └── babel-plugin-syntax-object-rest-spread@6.13.0 
├─┬ body-parser@1.17.2 
│ ├── bytes@2.4.0 
│ ├── content-type@1.0.2 
│ ├── debug@2.6.7 
│ ├── depd@1.1.1 
│ ├─┬ http-errors@1.6.2 
│ │ ├── setprototypeof@1.0.3 
│ │ └── statuses@1.3.1 
│ ├── iconv-lite@0.4.15 
│ ├─┬ on-finished@2.3.0 
│ │ └── ee-first@1.1.1 
│ ├── qs@6.4.0 
│ ├─┬ raw-body@2.2.0 
│ │ └── unpipe@1.0.0 
│ └─┬ type-is@1.6.15 
│   └── media-typer@0.3.0 
├── child_process@1.0.2 
├─┬ cors@2.8.4 
│ ├── object-assign@4.1.1 
│ └── vary@1.1.1 
├─┬ eslint@3.19.0 
│ ├─┬ chalk@1.1.3 
│ │ ├── ansi-styles@2.2.1 
│ │ ├── escape-string-regexp@1.0.5 
│ │ ├─┬ has-ansi@2.0.0 
│ │ │ └── ansi-regex@2.1.1 
│ │ ├─┬ strip-ansi@3.0.1 
│ │ │ └── ansi-regex@2.1.1 
│ │ └── supports-color@2.0.0 
│ ├─┬ concat-stream@1.6.0 
│ │ ├─┬ readable-stream@2.3.3 
│ │ │ ├── core-util-is@1.0.2 
│ │ │ ├── process-nextick-args@1.0.7 
│ │ │ ├── string_decoder@1.0.3 
│ │ │ └── util-deprecate@1.0.2 
│ │ └── typedarray@0.0.6 
│ ├─┬ doctrine@2.0.0 
│ │ └── isarray@1.0.0 
│ ├─┬ escope@3.6.0 
│ │ ├─┬ es6-map@0.1.5 
│ │ │ ├── d@1.0.0 
│ │ │ ├── es5-ext@0.10.30 
│ │ │ ├── es6-iterator@2.0.1 
│ │ │ ├── es6-set@0.1.5 
│ │ │ ├── es6-symbol@3.1.1 
│ │ │ └── event-emitter@0.3.5 
│ │ ├── es6-weak-map@2.0.2 
│ │ └── esrecurse@4.2.0 
│ ├─┬ espree@3.5.0 
│ │ ├── acorn@5.1.2 
│ │ └─┬ acorn-jsx@3.0.1 
│ │   └── acorn@3.3.0 
│ ├── esquery@1.0.0 
│ ├── estraverse@4.2.0 
│ ├── esutils@2.0.2 
│ ├─┬ file-entry-cache@2.0.0 
│ │ └─┬ flat-cache@1.2.2 
│ │   ├── circular-json@0.3.3 
│ │   ├─┬ del@2.2.2 
│ │   │ ├─┬ globby@5.0.0 
│ │   │ │ ├─┬ array-union@1.0.2 
│ │   │ │ │ └── array-uniq@1.0.3 
│ │   │ │ └── arrify@1.0.1 
│ │   │ ├── is-path-cwd@1.0.0 
│ │   │ ├─┬ is-path-in-cwd@1.0.0 
│ │   │ │ └── is-path-inside@1.0.0 
│ │   │ └─┬ pinkie-promise@2.0.1 
│ │   │   └── pinkie@2.0.4 
│ │   └── write@0.2.1 
│ ├── globals@9.18.0 
│ ├── ignore@3.3.5 
│ ├── imurmurhash@0.1.4 
│ ├─┬ inquirer@0.12.0 
│ │ ├── ansi-escapes@1.4.0 
│ │ ├── ansi-regex@2.1.1 
│ │ ├─┬ cli-cursor@1.0.2 
│ │ │ └─┬ restore-cursor@1.0.1 
│ │ │   ├── exit-hook@1.1.1 
│ │ │   └── onetime@1.1.0 
│ │ ├── cli-width@2.2.0 
│ │ ├── figures@1.7.0 
│ │ ├─┬ readline2@1.0.1 
│ │ │ ├── is-fullwidth-code-point@1.0.0 
│ │ │ └── mute-stream@0.0.5 
│ │ ├── run-async@0.1.0 
│ │ ├── rx-lite@3.1.2 
│ │ ├─┬ string-width@1.0.2 
│ │ │ ├── code-point-at@1.1.0 
│ │ │ └─┬ is-fullwidth-code-point@1.0.0 
│ │ │   └── number-is-nan@1.0.1 
│ │ ├── strip-ansi@3.0.1 
│ │ └── through@2.3.8 
│ ├─┬ is-my-json-valid@2.16.1 
│ │ ├── generate-function@2.0.0 
│ │ ├─┬ generate-object-property@1.2.0 
│ │ │ └── is-property@1.0.2 
│ │ ├── jsonpointer@4.0.1 
│ │ └── xtend@4.0.1 
│ ├─┬ is-resolvable@1.0.0 
│ │ └── tryit@1.0.3 
│ ├─┬ js-yaml@3.9.1 
│ │ ├─┬ argparse@1.0.9 
│ │ │ └── sprintf-js@1.0.3 
│ │ └── esprima@4.0.0 
│ ├─┬ json-stable-stringify@1.0.1 
│ │ └── jsonify@0.0.0 
│ ├─┬ levn@0.3.0 
│ │ ├── prelude-ls@1.1.2 
│ │ └── type-check@0.3.2 
│ ├── natural-compare@1.4.0 
│ ├─┬ optionator@0.8.2 
│ │ ├── deep-is@0.1.3 
│ │ ├── fast-levenshtein@2.0.6 
│ │ └── wordwrap@1.0.0 
│ ├── path-is-inside@1.0.2 
│ ├── pluralize@1.2.1 
│ ├── progress@1.1.8 
│ ├─┬ require-uncached@1.0.3 
│ │ ├─┬ caller-path@0.1.0 
│ │ │ └── callsites@0.2.0 
│ │ └── resolve-from@1.0.1 
│ ├─┬ shelljs@0.7.8 
│ │ ├── interpret@1.0.3 
│ │ └── rechoir@0.6.2 
│ ├── strip-bom@3.0.0 
│ ├── strip-json-comments@2.0.1 
│ ├─┬ table@3.8.3 
│ │ ├─┬ ajv@4.11.8 
│ │ │ └── co@4.6.0 
│ │ ├── ajv-keywords@1.5.1 
│ │ ├── slice-ansi@0.0.4 
│ │ └─┬ string-width@2.1.1 
│ │   └── is-fullwidth-code-point@2.0.0 
│ ├── text-table@0.2.0 
│ └─┬ user-home@2.0.0 
│   └── os-homedir@1.0.2 
├─┬ eslint-config-airbnb-base@11.3.2 
│ └── eslint-restricted-globals@0.1.1 
├─┬ eslint-plugin-import@2.7.0 
│ ├── builtin-modules@1.1.1 
│ ├── contains-path@0.1.0 
│ ├── debug@2.6.8 
│ ├── doctrine@1.5.0 
│ ├─┬ eslint-import-resolver-node@0.3.1 
│ │ ├── debug@2.6.8 
│ │ └─┬ resolve@1.4.0 
│ │   └── path-parse@1.0.5 
│ ├─┬ eslint-module-utils@2.1.1 
│ │ ├── debug@2.6.8 
│ │ └─┬ pkg-dir@1.0.0 
│ │   └─┬ find-up@1.1.2 
│ │     └── path-exists@2.1.0 
│ ├─┬ has@1.0.1 
│ │ └── function-bind@1.1.1 
│ ├── lodash.cond@4.5.2 
│ └─┬ read-pkg-up@2.0.0 
│   ├─┬ find-up@2.1.0 
│   │ └─┬ locate-path@2.0.0 
│   │   ├─┬ p-locate@2.0.0 
│   │   │ └── p-limit@1.1.0 
│   │   └── path-exists@3.0.0 
│   └─┬ read-pkg@2.0.0 
│     ├─┬ load-json-file@2.0.0 
│     │ └─┬ parse-json@2.2.0 
│     │   └─┬ error-ex@1.3.1 
│     │     └── is-arrayish@0.2.1 
│     ├─┬ normalize-package-data@2.4.0 
│     │ └── hosted-git-info@2.5.0 
│     └── path-type@2.0.0 
├── install@0.10.1 
├── json2xml@0.1.3 
├─┬ nodemon@1.12.0 
│ ├── debug@2.6.8 
│ ├── es6-promise@3.3.1 
│ ├── ignore-by-default@1.0.1 
│ ├─┬ lodash.defaults@3.1.2 
│ │ ├─┬ lodash.assign@3.2.0 
│ │ │ ├─┬ lodash._baseassign@3.2.0 
│ │ │ │ └── lodash._basecopy@3.0.1 
│ │ │ ├─┬ lodash._createassigner@3.1.1 
│ │ │ │ ├── lodash._bindcallback@3.0.1 
│ │ │ │ └── lodash._isiterateecall@3.0.9 
│ │ │ └─┬ lodash.keys@3.1.2 
│ │ │   ├── lodash._getnative@3.9.1 
│ │ │   ├── lodash.isarguments@3.1.0 
│ │ │   └── lodash.isarray@3.0.4 
│ │ └── lodash.restparam@3.6.1 
│ ├─┬ ps-tree@1.1.0 
│ │ └─┬ event-stream@3.3.4 
│ │   ├── duplexer@0.1.1 
│ │   ├── from@0.1.7 
│ │   ├── map-stream@0.1.0 
│ │   ├── pause-stream@0.0.11 
│ │   ├── split@0.3.3 
│ │   └── stream-combiner@0.0.4 
│ ├─┬ touch@3.1.0 
│ │ └─┬ nopt@1.0.10 
│ │   └── abbrev@1.1.0 
│ ├── undefsafe@0.0.3 
│ └─┬ update-notifier@2.2.0 
│   ├─┬ boxen@1.2.1 
│   │ ├── ansi-align@2.0.0 
│   │ ├── chalk@2.1.0 
│   │ ├── cli-boxes@1.0.0 
│   │ ├─┬ term-size@1.2.0 
│   │ │ └─┬ execa@0.7.0 
│   │ │   ├─┬ cross-spawn@5.1.0 
│   │ │   │ ├─┬ lru-cache@4.1.1 
│   │ │   │ │ ├── pseudomap@1.0.2 
│   │ │   │ │ └── yallist@2.1.2 
│   │ │   │ ├─┬ shebang-command@1.2.0 
│   │ │   │ │ └── shebang-regex@1.0.0 
│   │ │   │ └─┬ which@1.3.0 
│   │ │   │   └── isexe@2.0.0 
│   │ │   ├── get-stream@3.0.0 
│   │ │   ├── is-stream@1.1.0 
│   │ │   ├─┬ npm-run-path@2.0.2 
│   │ │   │ └── path-key@2.0.1 
│   │ │   ├── p-finally@1.0.0 
│   │ │   └── strip-eof@1.0.0 
│   │ └─┬ widest-line@1.0.0 
│   │   └─┬ string-width@1.0.2 
│   │     ├── is-fullwidth-code-point@1.0.0 
│   │     └─┬ strip-ansi@3.0.1 
│   │       └── ansi-regex@2.1.1 
│   ├─┬ configstore@3.1.1 
│   │ ├─┬ dot-prop@4.2.0 
│   │ │ └── is-obj@1.0.1 
│   │ ├─┬ unique-string@1.0.0 
│   │ │ └── crypto-random-string@1.0.0 
│   │ └── write-file-atomic@2.3.0 
│   ├── import-lazy@2.1.0 
│   ├── is-npm@1.0.0 
│   ├─┬ latest-version@3.1.0 
│   │ └─┬ package-json@4.0.1 
│   │   ├─┬ got@6.7.1 
│   │   │ ├─┬ create-error-class@3.0.2 
│   │   │ │ └── capture-stack-trace@1.0.0 
│   │   │ ├── duplexer3@0.1.4 
│   │   │ ├── is-redirect@1.0.0 
│   │   │ ├── is-retry-allowed@1.1.0 
│   │   │ ├── lowercase-keys@1.0.0 
│   │   │ ├── timed-out@4.0.1 
│   │   │ ├── unzip-response@2.0.1 
│   │   │ └─┬ url-parse-lax@1.0.0 
│   │   │   └── prepend-http@1.0.4 
│   │   ├─┬ registry-auth-token@3.3.1 
│   │   │ └─┬ rc@1.2.1 
│   │   │   ├── deep-extend@0.4.2 
│   │   │   └── minimist@1.2.0 
│   │   └── registry-url@3.1.0 
│   ├── semver-diff@2.1.0 
│   └── xdg-basedir@3.0.0 
├─┬ npm@5.4.1 
│ ├── abbrev@1.1.0 
│ ├── ansi-regex@3.0.0 
│ ├── ansicolors@0.3.2 
│ ├── ansistyles@0.1.3 
│ ├── aproba@1.1.2 
│ ├── archy@1.0.0 
│ ├── bluebird@3.5.0 
│ ├─┬ cacache@9.2.9 
│ │ ├─┬ lru-cache@4.1.1 
│ │ │ ├── pseudomap@1.0.2 
│ │ │ └── yallist@2.1.2 
│ │ └── y18n@3.2.1 
│ ├── call-limit@1.1.0 
│ ├── chownr@1.0.1 
│ ├── cmd-shim@2.0.2 
│ ├─┬ columnify@1.5.4 
│ │ ├─┬ strip-ansi@3.0.1 
│ │ │ └── ansi-regex@2.1.1 
│ │ └─┬ wcwidth@1.0.1 
│ │   └─┬ defaults@1.0.3 
│ │     └── clone@1.0.2 
│ ├─┬ config-chain@1.1.11 
│ │ └── proto-list@1.2.4 
│ ├── debuglog@1.0.1 
│ ├── detect-indent@5.0.0 
│ ├─┬ dezalgo@1.0.3 
│ │ └── asap@2.0.5 
│ ├── editor@1.0.0 
│ ├── fs-vacuum@1.2.10 
│ ├── fs-write-stream-atomic@1.0.10 
│ ├─┬ glob@7.1.2 
│ │ ├── fs.realpath@1.0.0 
│ │ ├─┬ minimatch@3.0.4 
│ │ │ └─┬ brace-expansion@1.1.8 
│ │ │   ├── balanced-match@1.0.0 
│ │ │   └── concat-map@0.0.1 
│ │ └── path-is-absolute@1.0.1 
│ ├── graceful-fs@4.1.11 
│ ├── has-unicode@2.0.1 
│ ├── hosted-git-info@2.5.0 
│ ├── iferr@0.1.5 
│ ├── imurmurhash@0.1.4 
│ ├── inflight@1.0.6 
│ ├── inherits@2.0.3 
│ ├── ini@1.3.4 
│ ├─┬ init-package-json@1.10.1 
│ │ └── promzard@0.3.0 
│ ├─┬ JSONStream@1.3.1 
│ │ ├── jsonparse@1.3.1 
│ │ └── through@2.3.8 
│ ├── lazy-property@1.0.0 
│ ├─┬ libnpx@9.6.0 
│ │ ├── dotenv@4.0.0 
│ │ ├── y18n@3.2.1 
│ │ └─┬ yargs@8.0.2 
│ │   ├── camelcase@4.1.0 
│ │   ├─┬ cliui@3.2.0 
│ │   │ ├─┬ string-width@1.0.2 
│ │   │ │ ├── code-point-at@1.1.0 
│ │   │ │ └─┬ is-fullwidth-code-point@1.0.0 
│ │   │ │   └── number-is-nan@1.0.1 
│ │   │ ├─┬ strip-ansi@3.0.1 
│ │   │ │ └── ansi-regex@2.1.1 
│ │   │ └── wrap-ansi@2.1.0 
│ │   ├── decamelize@1.2.0 
│ │   ├── get-caller-file@1.0.2 
│ │   ├─┬ os-locale@2.1.0 
│ │   │ ├─┬ execa@0.7.0 
│ │   │ │ ├─┬ cross-spawn@5.1.0 
│ │   │ │ │ └─┬ shebang-command@1.2.0 
│ │   │ │ │   └── shebang-regex@1.0.0 
│ │   │ │ ├── get-stream@3.0.0 
│ │   │ │ ├── is-stream@1.1.0 
│ │   │ │ ├─┬ npm-run-path@2.0.2 
│ │   │ │ │ └── path-key@2.0.1 
│ │   │ │ ├── p-finally@1.0.0 
│ │   │ │ ├── signal-exit@3.0.2 
│ │   │ │ └── strip-eof@1.0.0 
│ │   │ ├─┬ lcid@1.0.0 
│ │   │ │ └── invert-kv@1.0.0 
│ │   │ └─┬ mem@1.1.0 
│ │   │   └── mimic-fn@1.1.0 
│ │   ├─┬ read-pkg-up@2.0.0 
│ │   │ ├─┬ find-up@2.1.0 
│ │   │ │ └─┬ locate-path@2.0.0 
│ │   │ │   ├─┬ p-locate@2.0.0 
│ │   │ │   │ └── p-limit@1.1.0 
│ │   │ │   └── path-exists@3.0.0 
│ │   │ └─┬ read-pkg@2.0.0 
│ │   │   ├─┬ load-json-file@2.0.0 
│ │   │   │ ├─┬ parse-json@2.2.0 
│ │   │   │ │ └─┬ error-ex@1.3.1 
│ │   │   │ │   └── is-arrayish@0.2.1 
│ │   │   │ ├── pify@2.3.0 
│ │   │   │ └── strip-bom@3.0.0 
│ │   │   └─┬ path-type@2.0.0 
│ │   │     └── pify@2.3.0 
│ │   ├── require-directory@2.1.1 
│ │   ├── require-main-filename@1.0.1 
│ │   ├── set-blocking@2.0.0 
│ │   ├─┬ string-width@2.1.1 
│ │   │ └── is-fullwidth-code-point@2.0.0 
│ │   ├── which-module@2.0.0 
│ │   └── yargs-parser@7.0.0 
│ ├── lockfile@1.0.3 
│ ├── lodash._baseindexof@3.1.0 
│ ├─┬ lodash._baseuniq@4.6.0 
│ │ ├── lodash._createset@4.0.3 
│ │ └── lodash._root@3.0.1 
│ ├── lodash._bindcallback@3.0.1 
│ ├── lodash._cacheindexof@3.0.2 
│ ├── lodash._createcache@3.1.2 
│ ├── lodash._getnative@3.9.1 
│ ├── lodash.clonedeep@4.5.0 
│ ├── lodash.restparam@3.6.1 
│ ├── lodash.union@4.6.0 
│ ├── lodash.uniq@4.5.0 
│ ├── lodash.without@4.4.0 
│ ├─┬ lru-cache@4.1.1 
│ │ ├── pseudomap@1.0.2 
│ │ └── yallist@2.1.2 
│ ├── meant@1.0.0 
│ ├─┬ mississippi@1.3.0 
│ │ ├─┬ concat-stream@1.6.0 
│ │ │ └── typedarray@0.0.6 
│ │ ├─┬ duplexify@3.5.0 
│ │ │ ├─┬ end-of-stream@1.0.0 
│ │ │ │ └── once@1.3.3 
│ │ │ └── stream-shift@1.0.0 
│ │ ├── end-of-stream@1.4.0 
│ │ ├── flush-write-stream@1.0.2 
│ │ ├── from2@2.3.0 
│ │ ├─┬ parallel-transform@1.1.0 
│ │ │ └── cyclist@0.2.2 
│ │ ├── pump@1.0.2 
│ │ ├── pumpify@1.3.5 
│ │ ├─┬ stream-each@1.2.0 
│ │ │ └── stream-shift@1.0.0 
│ │ └─┬ through2@2.0.3 
│ │   └── xtend@4.0.1 
│ ├─┬ mkdirp@0.5.1 
│ │ └── minimist@0.0.8 
│ ├─┬ move-concurrently@1.0.1 
│ │ ├── copy-concurrently@1.0.3 
│ │ └── run-queue@1.0.3 
│ ├─┬ node-gyp@3.6.2 
│ │ ├── fstream@1.0.11 
│ │ ├─┬ minimatch@3.0.4 
│ │ │ └─┬ brace-expansion@1.1.8 
│ │ │   ├── balanced-match@1.0.0 
│ │ │   └── concat-map@0.0.1 
│ │ ├── nopt@3.0.6 
│ │ ├── semver@5.3.0 
│ │ └─┬ tar@2.2.1 
│ │   └── block-stream@0.0.9 
│ ├── nopt@4.0.1 
│ ├─┬ normalize-package-data@2.4.0 
│ │ └─┬ is-builtin-module@1.0.0 
│ │   └── builtin-modules@1.1.1 
│ ├── npm-cache-filename@1.0.2 
│ ├── npm-install-checks@3.0.0 
│ ├── npm-lifecycle@1.0.2 
│ ├── npm-package-arg@5.1.2 
│ ├─┬ npm-packlist@1.1.8 
│ │ ├─┬ ignore-walk@3.0.0 
│ │ │ └─┬ minimatch@3.0.4 
│ │ │   └─┬ brace-expansion@1.1.8 
│ │ │     ├── balanced-match@1.0.0 
│ │ │     └── concat-map@0.0.1 
│ │ └── npm-bundled@1.0.3 
│ ├─┬ npm-registry-client@8.4.0 
│ │ └─┬ concat-stream@1.6.0 
│ │   └── typedarray@0.0.6 
│ ├── npm-user-validate@1.0.0 
│ ├─┬ npmlog@4.1.2 
│ │ ├─┬ are-we-there-yet@1.1.4 
│ │ │ └── delegates@1.0.0 
│ │ ├── console-control-strings@1.1.0 
│ │ ├─┬ gauge@2.7.4 
│ │ │ ├── object-assign@4.1.1 
│ │ │ ├── signal-exit@3.0.2 
│ │ │ ├─┬ string-width@1.0.2 
│ │ │ │ ├── code-point-at@1.1.0 
│ │ │ │ └─┬ is-fullwidth-code-point@1.0.0 
│ │ │ │   └── number-is-nan@1.0.1 
│ │ │ ├─┬ strip-ansi@3.0.1 
│ │ │ │ └── ansi-regex@2.1.1 
│ │ │ └── wide-align@1.1.2 
│ │ └── set-blocking@2.0.0 
│ ├── once@1.4.0 
│ ├── opener@1.4.3 
│ ├─┬ osenv@0.1.4 
│ │ ├── os-homedir@1.0.2 
│ │ └── os-tmpdir@1.0.2 
│ ├─┬ pacote@6.0.2 
│ │ ├─┬ make-fetch-happen@2.5.0 
│ │ │ ├─┬ agentkeepalive@3.3.0 
│ │ │ │ └─┬ humanize-ms@1.2.1 
│ │ │ │   └── ms@2.0.0 
│ │ │ ├── http-cache-semantics@3.7.3 
│ │ │ ├─┬ http-proxy-agent@2.0.0 
│ │ │ │ ├─┬ agent-base@4.1.1 
│ │ │ │ │ └─┬ es6-promisify@5.0.0 
│ │ │ │ │   └── es6-promise@4.1.1 
│ │ │ │ └─┬ debug@2.6.8 
│ │ │ │   └── ms@2.0.0 
│ │ │ ├─┬ https-proxy-agent@2.1.0 
│ │ │ │ ├─┬ agent-base@4.1.1 
│ │ │ │ │ └─┬ es6-promisify@5.0.0 
│ │ │ │ │   └── es6-promise@4.1.1 
│ │ │ │ └─┬ debug@2.6.8 
│ │ │ │   └── ms@2.0.0 
│ │ │ ├─┬ node-fetch-npm@2.0.2 
│ │ │ │ ├─┬ encoding@0.1.12 
│ │ │ │ │ └── iconv-lite@0.4.18 
│ │ │ │ └── json-parse-better-errors@1.0.1 
│ │ │ └─┬ socks-proxy-agent@3.0.0 
│ │ │   ├─┬ agent-base@4.1.1 
│ │ │   │ └─┬ es6-promisify@5.0.0 
│ │ │   │   └── es6-promise@4.1.1 
│ │ │   └─┬ socks@1.1.10 
│ │ │     ├── ip@1.1.5 
│ │ │     └── smart-buffer@1.1.15 
│ │ ├─┬ minimatch@3.0.4 
│ │ │ └─┬ brace-expansion@1.1.8 
│ │ │   ├── balanced-match@1.0.0 
│ │ │   └── concat-map@0.0.1 
│ │ ├── npm-pick-manifest@1.0.4 
│ │ ├─┬ promise-retry@1.1.1 
│ │ │ └── err-code@1.1.2 
│ │ └─┬ protoduck@4.0.0 
│ │   └── genfun@4.0.1 
│ ├── path-is-inside@1.0.2 
│ ├── promise-inflight@1.0.1 
│ ├─┬ read@1.0.7 
│ │ └── mute-stream@0.0.7 
│ ├── read-cmd-shim@1.0.1 
│ ├─┬ read-installed@4.0.3 
│ │ └── util-extend@1.0.3 
│ ├─┬ read-package-json@2.0.12 
│ │ ├── json-parse-better-errors@1.0.1 
│ │ └── slash@1.0.0 
│ ├── read-package-tree@5.1.6 
│ ├─┬ readable-stream@2.3.3 
│ │ ├── core-util-is@1.0.2 
│ │ ├── isarray@1.0.0 
│ │ ├── process-nextick-args@1.0.7 
│ │ ├── string_decoder@1.0.3 
│ │ └── util-deprecate@1.0.2 
│ ├── readdir-scoped-modules@1.0.2 
│ ├─┬ request@2.81.0 
│ │ ├── aws-sign2@0.6.0 
│ │ ├── aws4@1.6.0 
│ │ ├── caseless@0.12.0 
│ │ ├─┬ combined-stream@1.0.5 
│ │ │ └── delayed-stream@1.0.0 
│ │ ├── extend@3.0.1 
│ │ ├── forever-agent@0.6.1 
│ │ ├─┬ form-data@2.1.4 
│ │ │ └── asynckit@0.4.0 
│ │ ├─┬ har-validator@4.2.1 
│ │ │ ├─┬ ajv@4.11.8 
│ │ │ │ ├── co@4.6.0 
│ │ │ │ └─┬ json-stable-stringify@1.0.1 
│ │ │ │   └── jsonify@0.0.0 
│ │ │ └── har-schema@1.0.5 
│ │ ├─┬ hawk@3.1.3 
│ │ │ ├── boom@2.10.1 
│ │ │ ├── cryptiles@2.0.5 
│ │ │ ├── hoek@2.16.3 
│ │ │ └── sntp@1.0.9 
│ │ ├─┬ http-signature@1.1.1 
│ │ │ ├── assert-plus@0.2.0 
│ │ │ ├─┬ jsprim@1.4.0 
│ │ │ │ ├── assert-plus@1.0.0 
│ │ │ │ ├── extsprintf@1.0.2 
│ │ │ │ ├── json-schema@0.2.3 
│ │ │ │ └── verror@1.3.6 
│ │ │ └─┬ sshpk@1.13.1 
│ │ │   ├── asn1@0.2.3 
│ │ │   ├── assert-plus@1.0.0 
│ │ │   ├── bcrypt-pbkdf@1.0.1 
│ │ │   ├── dashdash@1.14.1 
│ │ │   ├── ecc-jsbn@0.1.1 
│ │ │   ├── getpass@0.1.7 
│ │ │   ├── jsbn@0.1.1 
│ │ │   └── tweetnacl@0.14.5 
│ │ ├── is-typedarray@1.0.0 
│ │ ├── isstream@0.1.2 
│ │ ├── json-stringify-safe@5.0.1 
│ │ ├─┬ mime-types@2.1.15 
│ │ │ └── mime-db@1.27.0 
│ │ ├── oauth-sign@0.8.2 
│ │ ├── performance-now@0.2.0 
│ │ ├── qs@6.4.0 
│ │ ├── stringstream@0.0.5 
│ │ ├─┬ tough-cookie@2.3.2 
│ │ │ └── punycode@1.4.1 
│ │ └── tunnel-agent@0.6.0 
│ ├── retry@0.10.1 
│ ├── rimraf@2.6.1 
│ ├── safe-buffer@5.1.1 
│ ├── semver@5.4.1 
│ ├── sha@2.0.1 
│ ├── slide@1.1.6 
│ ├── sorted-object@2.0.1 
│ ├─┬ sorted-union-stream@2.1.3 
│ │ ├─┬ from2@1.3.0 
│ │ │ └─┬ readable-stream@1.1.14 
│ │ │   ├── core-util-is@1.0.2 
│ │ │   ├── isarray@0.0.1 
│ │ │   └── string_decoder@0.10.31 
│ │ └─┬ stream-iterate@1.2.0 
│ │   └── stream-shift@1.0.0 
│ ├── ssri@4.1.6 
│ ├─┬ strip-ansi@4.0.0 
│ │ └── ansi-regex@3.0.0 
│ ├─┬ tar@4.0.1 
│ │ ├── minipass@2.2.1 
│ │ ├── minizlib@1.0.3 
│ │ └── yallist@3.0.2 
│ ├── text-table@0.2.0 
│ ├── uid-number@0.0.6 
│ ├── umask@1.1.0 
│ ├─┬ unique-filename@1.1.0 
│ │ └── unique-slug@2.0.0 
│ ├── unpipe@1.0.0 
│ ├─┬ update-notifier@2.2.0 
│ │ ├─┬ boxen@1.1.0 
│ │ │ ├── ansi-align@2.0.0 
│ │ │ ├── camelcase@4.1.0 
│ │ │ ├── cli-boxes@1.0.0 
│ │ │ ├─┬ string-width@2.1.0 
│ │ │ │ ├── is-fullwidth-code-point@2.0.0 
│ │ │ │ └── strip-ansi@4.0.0 
│ │ │ ├─┬ term-size@0.1.1 
│ │ │ │ └─┬ execa@0.4.0 
│ │ │ │   ├── cross-spawn-async@2.2.5 
│ │ │ │   ├── is-stream@1.1.0 
│ │ │ │   ├── npm-run-path@1.0.0 
│ │ │ │   ├── object-assign@4.1.1 
│ │ │ │   ├── path-key@1.0.0 
│ │ │ │   └── strip-eof@1.0.0 
│ │ │ └─┬ widest-line@1.0.0 
│ │ │   └─┬ string-width@1.0.2 
│ │ │     ├── code-point-at@1.1.0 
│ │ │     ├─┬ is-fullwidth-code-point@1.0.0 
│ │ │     │ └── number-is-nan@1.0.1 
│ │ │     └─┬ strip-ansi@3.0.1 
│ │ │       └── ansi-regex@2.1.1 
│ │ ├─┬ chalk@1.1.3 
│ │ │ ├── ansi-styles@2.2.1 
│ │ │ ├── escape-string-regexp@1.0.5 
│ │ │ ├─┬ has-ansi@2.0.0 
│ │ │ │ └── ansi-regex@2.1.1 
│ │ │ ├─┬ strip-ansi@3.0.1 
│ │ │ │ └── ansi-regex@2.1.1 
│ │ │ └── supports-color@2.0.0 
│ │ ├─┬ configstore@3.1.0 
│ │ │ ├─┬ dot-prop@4.1.1 
│ │ │ │ └── is-obj@1.0.1 
│ │ │ ├─┬ make-dir@1.0.0 
│ │ │ │ └── pify@2.3.0 
│ │ │ └─┬ unique-string@1.0.0 
│ │ │   └── crypto-random-string@1.0.0 
│ │ ├── import-lazy@2.1.0 
│ │ ├── is-npm@1.0.0 
│ │ ├─┬ latest-version@3.1.0 
│ │ │ └─┬ package-json@4.0.1 
│ │ │   ├─┬ got@6.7.1 
│ │ │   │ ├─┬ create-error-class@3.0.2 
│ │ │   │ │ └── capture-stack-trace@1.0.0 
│ │ │   │ ├── duplexer3@0.1.4 
│ │ │   │ ├── get-stream@3.0.0 
│ │ │   │ ├── is-redirect@1.0.0 
│ │ │   │ ├── is-retry-allowed@1.1.0 
│ │ │   │ ├── is-stream@1.1.0 
│ │ │   │ ├── lowercase-keys@1.0.0 
│ │ │   │ ├── timed-out@4.0.1 
│ │ │   │ ├── unzip-response@2.0.1 
│ │ │   │ └─┬ url-parse-lax@1.0.0 
│ │ │   │   └── prepend-http@1.0.4 
│ │ │   ├─┬ registry-auth-token@3.3.1 
│ │ │   │ └─┬ rc@1.2.1 
│ │ │   │   ├── deep-extend@0.4.2 
│ │ │   │   ├── minimist@1.2.0 
│ │ │   │   └── strip-json-comments@2.0.1 
│ │ │   └─┬ registry-url@3.1.0 
│ │ │     └─┬ rc@1.2.1 
│ │ │       ├── deep-extend@0.4.2 
│ │ │       ├── minimist@1.2.0 
│ │ │       └── strip-json-comments@2.0.1 
│ │ ├── semver-diff@2.1.0 
│ │ └── xdg-basedir@3.0.0 
│ ├── uuid@3.1.0 
│ ├─┬ validate-npm-package-license@3.0.1 
│ │ ├─┬ spdx-correct@1.0.2 
│ │ │ └── spdx-license-ids@1.2.2 
│ │ └── spdx-expression-parse@1.0.4 
│ ├─┬ validate-npm-package-name@3.0.0 
│ │ └── builtins@1.0.3 
│ ├─┬ which@1.3.0 
│ │ └── isexe@2.0.0 
│ ├─┬ worker-farm@1.5.0 
│ │ ├─┬ errno@0.1.4 
│ │ │ └── prr@0.0.0 
│ │ └── xtend@4.0.1 
│ ├── wrappy@1.0.2 
│ └─┬ write-file-atomic@2.3.0 
│   └── signal-exit@3.0.2 
├─┬ promise@7.3.1 
│ └── asap@2.0.6 
├── q@1.5.0 
├─┬ request@2.81.0 
│ ├── aws-sign2@0.6.0 
│ ├── aws4@1.6.0 
│ ├── caseless@0.12.0 
│ ├─┬ combined-stream@1.0.5 
│ │ └── delayed-stream@1.0.0 
│ ├── extend@3.0.1 
│ ├── forever-agent@0.6.1 
│ ├─┬ form-data@2.1.4 
│ │ └── asynckit@0.4.0 
│ ├─┬ har-validator@4.2.1 
│ │ └── har-schema@1.0.5 
│ ├─┬ hawk@3.1.3 
│ │ ├── boom@2.10.1 
│ │ ├── cryptiles@2.0.5 
│ │ ├── hoek@2.16.3 
│ │ └── sntp@1.0.9 
│ ├─┬ http-signature@1.1.1 
│ │ ├── assert-plus@0.2.0 
│ │ ├─┬ jsprim@1.4.1 
│ │ │ ├── assert-plus@1.0.0 
│ │ │ ├── extsprintf@1.3.0 
│ │ │ ├── json-schema@0.2.3 
│ │ │ └─┬ verror@1.10.0 
│ │ │   └── assert-plus@1.0.0 
│ │ └─┬ sshpk@1.13.1 
│ │   ├── asn1@0.2.3 
│ │   ├── assert-plus@1.0.0 
│ │   ├── bcrypt-pbkdf@1.0.1 
│ │   ├─┬ dashdash@1.14.1 
│ │   │ └── assert-plus@1.0.0 
│ │   ├── ecc-jsbn@0.1.1 
│ │   ├─┬ getpass@0.1.7 
│ │   │ └── assert-plus@1.0.0 
│ │   ├── jsbn@0.1.1 
│ │   └── tweetnacl@0.14.5 
│ ├── is-typedarray@1.0.0 
│ ├── isstream@0.1.2 
│ ├── json-stringify-safe@5.0.1 
│ ├─┬ mime-types@2.1.17 
│ │ └── mime-db@1.30.0 
│ ├── oauth-sign@0.8.2 
│ ├── performance-now@0.2.0 
│ ├── safe-buffer@5.1.1 
│ ├── stringstream@0.0.5 
│ ├─┬ tough-cookie@2.3.2 
│ │ └── punycode@1.4.1 
│ └── tunnel-agent@0.6.0 
├── sequence@3.0.0 
├─┬ truffle-contract@2.0.5 
│ ├─┬ ethjs-abi@0.1.8 
│ │ ├── bn.js@4.11.6 
│ │ ├── js-sha3@0.5.5 
│ │ └─┬ number-to-bn@1.7.0 
│ │   └─┬ strip-hex-prefix@1.0.0 
│ │     └── is-hex-prefixed@1.0.0 
│ ├─┬ truffle-blockchain-utils@0.0.3 
│ │ └── web3@0.20.1 
│ ├─┬ truffle-contract-schema@0.0.5 
│ │ └── crypto-js@3.1.9-1 
│ └─┬ web3@0.20.1 
│   └── bignumber.js@2.0.7  (git+https://github.com/frozeman/bignumber.js-nolookahead.git#57692b3ecfc98bbdd6b3a516cb2353652ea49934)
├── uuid@3.1.0 
├── wait-promise@0.4.1 
├─┬ web3@0.19.1 
│ ├── bignumber.js@4.0.4 
│ ├── crypto-js@3.1.8 
│ ├── utf8@2.1.2 
│ ├── xhr2@0.1.4 
│ └── xmlhttprequest@1.8.0 
├── UNMET PEER DEPENDENCY webpack@2 || 3
├─┬ xml2js@0.4.19 
│ ├── sax@1.2.4 
│ └── xmlbuilder@9.0.4 
└─┬ yarn@0.24.6 
  ├── camelcase@4.1.0 
  ├── cmd-shim@2.0.2 
  ├── death@1.1.0 
  ├── detect-indent@5.0.0 
  ├─┬ gunzip-maybe@1.4.1 
  │ ├─┬ browserify-zlib@0.1.4 
  │ │ └── pako@0.2.9 
  │ ├── is-deflate@1.0.0 
  │ ├── is-gzip@1.0.0 
  │ ├─┬ peek-stream@1.1.2 
  │ │ └─┬ duplexify@3.5.1 
  │ │   └── stream-shift@1.0.0 
  │ ├── pumpify@1.3.5 
  │ └── through2@2.0.3 
  ├── ini@1.3.4 
  ├─┬ inquirer@3.2.3 
  │ ├── ansi-escapes@2.0.0 
  │ ├─┬ chalk@2.1.0 
  │ │ ├─┬ ansi-styles@3.2.0 
  │ │ │ └─┬ color-convert@1.9.0 
  │ │ │   └── color-name@1.1.3 
  │ │ └─┬ supports-color@4.4.0 
  │ │   └── has-flag@2.0.0 
  │ ├─┬ cli-cursor@2.1.0 
  │ │ └─┬ restore-cursor@2.0.0 
  │ │   └─┬ onetime@2.0.1 
  │ │     └── mimic-fn@1.1.0 
  │ ├─┬ external-editor@2.0.4 
  │ │ ├── iconv-lite@0.4.18 
  │ │ ├── jschardet@1.5.1 
  │ │ └── tmp@0.0.31 
  │ ├── figures@2.0.0 
  │ ├── mute-stream@0.0.7 
  │ ├─┬ run-async@2.3.0 
  │ │ └── is-promise@2.1.0 
  │ ├── rx-lite@4.0.8 
  │ ├── rx-lite-aggregates@4.0.8 
  │ └─┬ strip-ansi@4.0.0 
  │   └── ansi-regex@3.0.0 
  ├── is-builtin-module@1.0.0 
  ├─┬ is-ci@1.0.10 
  │ └── ci-info@1.1.1 
  ├── leven@2.1.0 
  ├─┬ loud-rejection@1.6.0 
  │ ├─┬ currently-unhandled@0.4.1 
  │ │ └── array-find-index@1.0.2 
  │ └── signal-exit@3.0.2 
  ├─┬ node-emoji@1.8.1 
  │ └── lodash.toarray@4.4.0 
  ├── object-path@0.11.4 
  ├─┬ proper-lockfile@2.0.1 
  │ └── retry@0.10.1 
  ├── read@1.0.7 
  ├── request-capture-har@1.2.2 
  ├── rimraf@2.6.1 
  ├─┬ tar-fs@1.15.3 
  │ ├── chownr@1.0.1 
  │ └── pump@1.0.2 
  ├─┬ tar-stream@1.5.4 
  │ ├── bl@1.2.1 
  │ └── end-of-stream@1.4.0 
  ├── v8-compile-cache@1.1.0 
  └─┬ validate-npm-package-license@3.0.1 
    ├─┬ spdx-correct@1.0.2 
    │ └── spdx-license-ids@1.2.2 
    └── spdx-expression-parse@1.0.4 
</msg>
<status status="PASS" endtime="20170907 23:38:02.154" starttime="20170907 23:38:02.153"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${npm_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170907 23:38:02.154" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170907 23:38:02.154" starttime="20170907 23:38:02.154"></status>
</kw>
<status status="PASS" endtime="20170907 23:38:02.155" starttime="20170907 23:35:32.326"></status>
</kw>
<status status="PASS" endtime="20170907 23:38:02.155" starttime="20170907 23:35:32.325"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd iexec-oracle/API &amp;&amp; ./node_modules/.bin/truffle test test/iexecoracleapi.js</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${truffletest_result}</var>
</assign>
<msg timestamp="20170907 23:38:02.156" level="INFO">Starting process:
cd iexec-oracle/API &amp;&amp; ./node_modules/.bin/truffle test test/iexecoracleapi.js</msg>
<msg timestamp="20170907 23:38:02.172" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170907 23:45:05.570" level="INFO">Process completed.</msg>
<msg timestamp="20170907 23:45:05.570" level="INFO">${truffletest_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170907 23:45:05.570" starttime="20170907 23:38:02.156"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stderr}</arg>
</arguments>
<msg timestamp="20170907 23:45:05.571" level="INFO"></msg>
<status status="PASS" endtime="20170907 23:45:05.571" starttime="20170907 23:45:05.570"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
</arguments>
<msg timestamp="20170907 23:45:05.571" level="INFO">Compiling ./contracts/HelloWorld.sol...
Compiling ./contracts/IexecOracle.sol...
Compiling ./contracts/IexecOracleAPI.sol...
Compiling ./contracts/Migrations.sol...
Compiling ./contracts/SafeMath.sol...

Compilation warnings encountered:

/home/vagrant/iexecdev/iexec-node/tests/rf/iexec-oracle/API/contracts/IexecOracle.sol:15:30: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (msg.sender != a) throw;
                             ^---^
,/home/vagrant/iexecdev/iexec-node/tests/rf/iexec-oracle/API/contracts/IexecOracle.sol:24:7: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
      string name;
      ^---------^
,/home/vagrant/iexecdev/iexec-node/tests/rf/iexec-oracle/API/contracts/IexecOracle.sol:27:7: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
      string stdout;
      ^-----------^
,/home/vagrant/iexecdev/iexec-node/tests/rf/iexec-oracle/API/contracts/IexecOracle.sol:28:7: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
      string stderr;
      ^-----------^
,/home/vagrant/iexecdev/iexec-node/tests/rf/iexec-oracle/API/contracts/IexecOracle.sol:123:21: Warning: Unused local variable
    function submit(string appName, string param) {// param = commandline
                    ^------------^
,/home/vagrant/iexecdev/iexec-node/tests/rf/iexec-oracle/API/contracts/IexecOracle.sol:127:28: Warning: Unused local variable
    function submitAndWait(string appName, string param, string pattern) {
                           ^------------^
,/home/vagrant/iexecdev/iexec-node/tests/rf/iexec-oracle/API/contracts/IexecOracle.sol:127:44: Warning: Unused local variable
    function submitAndWait(string appName, string param, string pattern) {
                                           ^----------^

IexecOracle deployed at address :0xfcdb7cd4d43c44420dfca9f84e90ecebd1f95178
HelloWorld deployed at address :0x27e7ae165bb285cd5fcb8d25abacd6c21fffeb87

[0m[0m
[0m  Contract: IexecOracleAPI[0m
  [32m  ✓[0m[90m Test call registerSmartContractAndCreator with tx.origin = msg.sender[0m[31m (3736ms)[0m
[0m    Test IexecOracle on IexecOracle well initialized[0m
    [32m  ✓[0m[90m Test Launch Event when call iexecRegister[0m[31m (1575ms)[0m
[0m    Test Register function call then simulate bridge response[0m
Geth mode : run out of gas. throw expected ?
    [32m  ✓[0m[90m Only bridge can call registerCallback fonction[0m[31m (3185ms)[0m
    [32m  ✓[0m[90m Simulate bridge response OK and test event Register[0m[31m (3336ms)[0m
    [32m  ✓[0m[90m Simulate bridge response KO and test event Register[0m[31m (5387ms)[0m
    [32m  ✓[0m[90m Simulate bridge registerCallback and test event Register, then next registerCallback call do not generate event Register[0m[31m (12455ms)[0m
[0m    Test IexecOracleAPI on IexecOracle well initialized[0m
    [32m  ✓[0m[90m Test creator and creator of IexecOracleAPI are set correctly in IexecOracle[0m[33m (41ms)[0m
Geth mode : run out of gas. throw expected ?
    [32m  ✓[0m[90m Cannot change creator in aIexecOracleInstance after first call by IexecOracleAPI constructor[0m[31m (4232ms)[0m


[92m [0m[32m 8 passing[0m[90m (2m)[0m
</msg>
<status status="PASS" endtime="20170907 23:45:05.572" starttime="20170907 23:45:05.571"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${truffletest_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170907 23:45:05.572" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170907 23:45:05.572" starttime="20170907 23:45:05.572"></status>
</kw>
<status status="PASS" endtime="20170907 23:45:05.572" starttime="20170907 23:35:32.324"></status>
</kw>
<doc>call truffle test on a started local geth and show the result here.</doc>
<tags>
<tag>Smart contract Tests</tag>
</tags>
<status status="PASS" endtime="20170907 23:45:05.573" critical="yes" starttime="20170907 23:35:32.313"></status>
</test>
<kw type="teardown" name="Stop Geth42">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd ~/gethUtils &amp;&amp; ./killGeth.sh</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${geth_result}</var>
</assign>
<msg timestamp="20170907 23:45:05.577" level="INFO">Starting process:
cd ~/gethUtils &amp;&amp; ./killGeth.sh</msg>
<msg timestamp="20170907 23:45:05.594" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170907 23:45:05.615" level="INFO">Process completed.</msg>
<msg timestamp="20170907 23:45:05.615" level="INFO">${geth_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170907 23:45:05.616" starttime="20170907 23:45:05.576"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${geth_result.stderr}</arg>
</arguments>
<msg timestamp="20170907 23:45:05.616" level="INFO"></msg>
<status status="PASS" endtime="20170907 23:45:05.616" starttime="20170907 23:45:05.616"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${geth_result.stdout}</arg>
</arguments>
<msg timestamp="20170907 23:45:05.617" level="INFO"></msg>
<status status="PASS" endtime="20170907 23:45:05.617" starttime="20170907 23:45:05.617"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${geth_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170907 23:45:05.617" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170907 23:45:05.617" starttime="20170907 23:45:05.617"></status>
</kw>
<status status="PASS" endtime="20170907 23:45:05.618" starttime="20170907 23:45:05.575"></status>
</kw>
<doc>All smart contract tests on Local Geth</doc>
<status status="PASS" endtime="20170907 23:45:05.618" starttime="20170907 23:29:42.843"></status>
</suite>
<suite source="/home/vagrant/iexecdev/iexec-node/tests/rf/Tests/truffleTestsOnTestrpc.robot" id="s1-s4" name="truffleTestsOnTestrpc">
<kw type="setup" name="Start Testrpc" library="ETHTestrpc">
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>testrpc</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${created_process}</var>
</assign>
<msg timestamp="20170907 23:45:05.635" level="INFO">Starting process:
testrpc</msg>
<msg timestamp="20170907 23:45:05.638" level="INFO">${created_process} = 56</msg>
<status status="PASS" endtime="20170907 23:45:05.638" starttime="20170907 23:45:05.635"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TESTRPC_PROCESS}</arg>
<arg>${created_process}</arg>
</arguments>
<msg timestamp="20170907 23:45:05.639" level="INFO">${TESTRPC_PROCESS} = 56</msg>
<status status="PASS" endtime="20170907 23:45:05.639" starttime="20170907 23:45:05.639"></status>
</kw>
<status status="PASS" endtime="20170907 23:45:05.640" starttime="20170907 23:45:05.635"></status>
</kw>
<test id="s1-s4-t1" name="Test Iexec Oracle Truffle Tests On Testrpc">
<kw name="Iexec Oracle Truffle Tests" library="IexecOracle">
<tags>
<tag>Smart contract Tests</tag>
</tags>
<doc>call truffle test and show the result here.</doc>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${IEXEC_ORACLE_FORCE_GIT_CLONE}' == 'true'</arg>
<arg>Git Clone Iexec Oracle</arg>
</arguments>
<kw name="Git Clone Iexec Oracle" library="IexecOracle">
<kw name="Remove Directory" library="OperatingSystem">
<doc>Removes the directory pointed to by the given ``path``.</doc>
<arguments>
<arg>iexec-oracle</arg>
<arg>recursive=true</arg>
</arguments>
<msg timestamp="20170907 23:45:48.162" html="yes" level="INFO">Removed directory '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/iexec-oracle"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/iexec-oracle&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170907 23:45:48.162" starttime="20170907 23:45:05.643"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>git clone ${IEXEC_ORACLE_GIT_BRANCH}</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${git_result}</var>
</assign>
<msg timestamp="20170907 23:45:48.163" level="INFO">Starting process:
git clone https://github.com/iExecBlockchainComputing/iexec-oracle.git</msg>
<msg timestamp="20170907 23:45:48.166" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170907 23:45:51.344" level="INFO">Process completed.</msg>
<msg timestamp="20170907 23:45:51.345" level="INFO">${git_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170907 23:45:51.345" starttime="20170907 23:45:48.162"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${git_result.stderr}</arg>
</arguments>
<msg timestamp="20170907 23:45:51.345" level="INFO">Cloning into 'iexec-oracle'...</msg>
<status status="PASS" endtime="20170907 23:45:51.346" starttime="20170907 23:45:51.345"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${git_result.stdout}</arg>
</arguments>
<msg timestamp="20170907 23:45:51.346" level="INFO"></msg>
<status status="PASS" endtime="20170907 23:45:51.346" starttime="20170907 23:45:51.346"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${git_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170907 23:45:51.347" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170907 23:45:51.347" starttime="20170907 23:45:51.346"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd iexec-oracle/API &amp;&amp; npm install</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${npm_result}</var>
</assign>
<msg timestamp="20170907 23:45:51.347" level="INFO">Starting process:
cd iexec-oracle/API &amp;&amp; npm install</msg>
<msg timestamp="20170907 23:45:51.350" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170907 23:46:10.540" level="INFO">Process completed.</msg>
<msg timestamp="20170907 23:46:10.540" level="INFO">${npm_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170907 23:46:10.540" starttime="20170907 23:45:51.347"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${npm_result.stderr}</arg>
</arguments>
<msg timestamp="20170907 23:46:10.542" level="INFO">npm WARN xtremwebinterface@1.0.0 No description
npm WARN xtremwebinterface@1.0.0 No repository field.</msg>
<status status="PASS" endtime="20170907 23:46:10.542" starttime="20170907 23:46:10.541"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${npm_result.stdout}</arg>
</arguments>
<msg timestamp="20170907 23:46:10.542" level="INFO">xtremwebinterface@1.0.0 /home/vagrant/iexecdev/iexec-node/tests/rf/iexec-oracle/API
├── bluebird@3.5.0 
├── lodash@4.17.4 
├─┬ truffle@3.4.7 
│ ├─┬ mocha@3.5.0 
│ │ ├── browser-stdout@1.3.0 
│ │ ├─┬ commander@2.9.0 
│ │ │ └── graceful-readlink@1.0.1 
│ │ ├─┬ debug@2.6.8 
│ │ │ └── ms@2.0.0 
│ │ ├── diff@3.2.0 
│ │ ├── escape-string-regexp@1.0.5 
│ │ ├─┬ glob@7.1.1 
│ │ │ ├── fs.realpath@1.0.0 
│ │ │ ├─┬ inflight@1.0.6 
│ │ │ │ └── wrappy@1.0.2 
│ │ │ ├── inherits@2.0.3 
│ │ │ ├─┬ minimatch@3.0.4 
│ │ │ │ └─┬ brace-expansion@1.1.8 
│ │ │ │   ├── balanced-match@1.0.0 
│ │ │ │   └── concat-map@0.0.1 
│ │ │ ├── once@1.4.0 
│ │ │ └── path-is-absolute@1.0.1 
│ │ ├── growl@1.9.2 
│ │ ├── json3@3.3.2 
│ │ ├─┬ lodash.create@3.1.1 
│ │ │ ├─┬ lodash._baseassign@3.2.0 
│ │ │ │ ├── lodash._basecopy@3.0.1 
│ │ │ │ └─┬ lodash.keys@3.1.2 
│ │ │ │   ├── lodash._getnative@3.9.1 
│ │ │ │   ├── lodash.isarguments@3.1.0 
│ │ │ │   └── lodash.isarray@3.0.4 
│ │ │ ├── lodash._basecreate@3.0.3 
│ │ │ └── lodash._isiterateecall@3.0.9 
│ │ ├─┬ mkdirp@0.5.1 
│ │ │ └── minimist@0.0.8 
│ │ └─┬ supports-color@3.1.2 
│ │   └── has-flag@1.0.0 
│ ├── original-require@1.0.1 
│ └─┬ solc@0.4.13 
│   ├─┬ fs-extra@0.30.0 
│   │ ├── graceful-fs@4.1.11 
│   │ ├── jsonfile@2.4.0 
│   │ ├── klaw@1.3.1 
│   │ └── rimraf@2.6.1 
│   ├── memorystream@0.3.1 
│   ├── require-from-string@1.2.1 
│   ├── semver@5.4.1 
│   └─┬ yargs@4.8.1 
│     ├─┬ cliui@3.2.0 
│     │ ├─┬ strip-ansi@3.0.1 
│     │ │ └── ansi-regex@2.1.1 
│     │ └── wrap-ansi@2.1.0 
│     ├── decamelize@1.2.0 
│     ├── get-caller-file@1.0.2 
│     ├── lodash.assign@4.2.0 
│     ├─┬ os-locale@1.4.0 
│     │ └─┬ lcid@1.0.0 
│     │   └── invert-kv@1.0.0 
│     ├─┬ read-pkg-up@1.0.1 
│     │ ├─┬ find-up@1.1.2 
│     │ │ ├── path-exists@2.1.0 
│     │ │ └─┬ pinkie-promise@2.0.1 
│     │ │   └── pinkie@2.0.4 
│     │ └─┬ read-pkg@1.1.0 
│     │   ├─┬ load-json-file@1.1.0 
│     │   │ ├─┬ parse-json@2.2.0 
│     │   │ │ └─┬ error-ex@1.3.1 
│     │   │ │   └── is-arrayish@0.2.1 
│     │   │ ├── pify@2.3.0 
│     │   │ └─┬ strip-bom@2.0.0 
│     │   │   └── is-utf8@0.2.1 
│     │   ├─┬ normalize-package-data@2.4.0 
│     │   │ ├── hosted-git-info@2.5.0 
│     │   │ ├─┬ is-builtin-module@1.0.0 
│     │   │ │ └── builtin-modules@1.1.1 
│     │   │ └─┬ validate-npm-package-license@3.0.1 
│     │   │   ├─┬ spdx-correct@1.0.2 
│     │   │   │ └── spdx-license-ids@1.2.2 
│     │   │   └── spdx-expression-parse@1.0.4 
│     │   └── path-type@1.1.0 
│     ├── require-directory@2.1.1 
│     ├── require-main-filename@1.0.1 
│     ├── set-blocking@2.0.0 
│     ├─┬ string-width@1.0.2 
│     │ ├── code-point-at@1.1.0 
│     │ └─┬ is-fullwidth-code-point@1.0.0 
│     │   └── number-is-nan@1.0.1 
│     ├── which-module@1.0.0 
│     ├── window-size@0.2.0 
│     ├── y18n@3.2.1 
│     └─┬ yargs-parser@2.4.1 
│       └── camelcase@3.0.0 
├─┬ truffle-contract@2.0.0 
│ ├─┬ ethjs-abi@0.1.8 
│ │ ├── bn.js@4.11.6 
│ │ ├── js-sha3@0.5.5 
│ │ └─┬ number-to-bn@1.7.0 
│ │   └─┬ strip-hex-prefix@1.0.0 
│ │     └── is-hex-prefixed@1.0.0 
│ ├── truffle-blockchain-utils@0.0.1 
│ └─┬ truffle-contract-schema@0.0.5 
│   └── crypto-js@3.1.9-1 
└─┬ web3@0.18.4 
  ├── bignumber.js@2.0.7  (git+https://github.com/debris/bignumber.js.git#94d7146671b9719e00a09c29b01a691bc85048c2)
  ├── crypto-js@3.1.8 
  ├── utf8@2.1.2 
  ├── xhr2@0.1.4 
  └── xmlhttprequest@1.8.0 
</msg>
<status status="PASS" endtime="20170907 23:46:10.543" starttime="20170907 23:46:10.542"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${npm_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170907 23:46:10.544" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170907 23:46:10.544" starttime="20170907 23:46:10.543"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd iexec-oracle/Bridge &amp;&amp; npm install</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${npm_result}</var>
</assign>
<msg timestamp="20170907 23:46:10.546" level="INFO">Starting process:
cd iexec-oracle/Bridge &amp;&amp; npm install</msg>
<msg timestamp="20170907 23:46:10.552" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170907 23:47:51.440" level="INFO">Process completed.</msg>
<msg timestamp="20170907 23:47:51.440" level="INFO">${npm_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170907 23:47:51.440" starttime="20170907 23:46:10.545"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${npm_result.stderr}</arg>
</arguments>
<msg timestamp="20170907 23:47:51.441" level="INFO">npm WARN deprecated babel-preset-latest@6.24.1: 💥  preset-latest accomplishes the same task as babel-preset-env. 🙏  Please install it with 'npm install babel-preset-env --save-dev'. '{ "presets": ["latest"] }' to '{ "presets": ["env"] }'. For more info, please check the docs: http://babeljs.io/docs/plugins/preset-env 👌. And let us know how you're liking Babel at @babeljs on 🐦 
npm WARN deprecated babel-preset-es2016@6.24.1: We're really excited that you're trying to use ES2016 syntax, but instead of making more yearly presets, Babel has a better preset that we recommend you use instead: npm install babel-preset-env --save-dev. Give us a follow @babeljs to get more updates
npm WARN deprecated babel-preset-es2017@6.24.1: We're really excited that you're trying to use ES2017 syntax, but instead of making more yearly presets, Babel has a better preset that we recommend you use instead: npm install babel-preset-env --save-dev. Give us a follow @babeljs to get more updates
npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@^1.0.0 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@1.1.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})
npm WARN babel-loader@7.1.2 requires a peer of webpack@2 || 3 but none was installed.</msg>
<status status="PASS" endtime="20170907 23:47:51.441" starttime="20170907 23:47:51.440"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${npm_result.stdout}</arg>
</arguments>
<msg timestamp="20170907 23:47:51.441" level="INFO">bridge@1.0.0 /home/vagrant/iexecdev/iexec-node/tests/rf/iexec-oracle/Bridge
├─┬ async@2.5.0 
│ └── lodash@4.17.4 
├─┬ babel-cli@6.26.0 
│ ├─┬ babel-polyfill@6.26.0 
│ │ ├── core-js@2.5.1 
│ │ └── regenerator-runtime@0.10.5 
│ ├─┬ babel-register@6.26.0 
│ │ ├─┬ home-or-tmp@2.0.0 
│ │ │ └── os-tmpdir@1.0.2 
│ │ └── source-map-support@0.4.17 
│ ├─┬ babel-runtime@6.26.0 
│ │ └── regenerator-runtime@0.11.0 
│ ├─┬ chokidar@1.7.0 
│ │ ├─┬ anymatch@1.3.2 
│ │ │ ├─┬ micromatch@2.3.11 
│ │ │ │ ├─┬ arr-diff@2.0.0 
│ │ │ │ │ └── arr-flatten@1.1.0 
│ │ │ │ ├── array-unique@0.2.1 
│ │ │ │ ├─┬ braces@1.8.5 
│ │ │ │ │ ├─┬ expand-range@1.8.2 
│ │ │ │ │ │ └─┬ fill-range@2.2.3 
│ │ │ │ │ │   ├── is-number@2.1.0 
│ │ │ │ │ │   ├── isobject@2.1.0 
│ │ │ │ │ │   ├─┬ randomatic@1.1.7 
│ │ │ │ │ │   │ ├─┬ is-number@3.0.0 
│ │ │ │ │ │   │ │ └── kind-of@3.2.2 
│ │ │ │ │ │   │ └── kind-of@4.0.0 
│ │ │ │ │ │   └── repeat-string@1.6.1 
│ │ │ │ │ ├── preserve@0.2.0 
│ │ │ │ │ └── repeat-element@1.1.2 
│ │ │ │ ├─┬ expand-brackets@0.1.5 
│ │ │ │ │ └── is-posix-bracket@0.1.1 
│ │ │ │ ├── extglob@0.3.2 
│ │ │ │ ├── filename-regex@2.0.1 
│ │ │ │ ├─┬ kind-of@3.2.2 
│ │ │ │ │ └── is-buffer@1.1.5 
│ │ │ │ ├─┬ object.omit@2.0.1 
│ │ │ │ │ ├─┬ for-own@0.1.5 
│ │ │ │ │ │ └── for-in@1.0.2 
│ │ │ │ │ └── is-extendable@0.1.1 
│ │ │ │ ├─┬ parse-glob@3.0.4 
│ │ │ │ │ ├── glob-base@0.3.0 
│ │ │ │ │ └── is-dotfile@1.0.3 
│ │ │ │ └─┬ regex-cache@0.4.4 
│ │ │ │   └─┬ is-equal-shallow@0.1.3 
│ │ │ │     └── is-primitive@2.0.0 
│ │ │ └─┬ normalize-path@2.1.1 
│ │ │   └── remove-trailing-separator@1.1.0 
│ │ ├── async-each@1.0.1 
│ │ ├── glob-parent@2.0.0 
│ │ ├── inherits@2.0.3 
│ │ ├─┬ is-binary-path@1.0.1 
│ │ │ └── binary-extensions@1.10.0 
│ │ ├─┬ is-glob@2.0.1 
│ │ │ └── is-extglob@1.0.0 
│ │ └─┬ readdirp@2.1.0 
│ │   └── set-immediate-shim@1.0.1 
│ ├── commander@2.11.0 
│ ├── convert-source-map@1.5.0 
│ ├── fs-readdir-recursive@1.0.0 
│ ├─┬ glob@7.1.2 
│ │ ├── fs.realpath@1.0.0 
│ │ ├─┬ inflight@1.0.6 
│ │ │ └── wrappy@1.0.2 
│ │ └── once@1.4.0 
│ ├─┬ output-file-sync@1.1.2 
│ │ └── graceful-fs@4.1.11 
│ ├── path-is-absolute@1.0.1 
│ ├── slash@1.0.0 
│ ├── source-map@0.5.7 
│ └─┬ v8flags@2.1.1 
│   └── user-home@1.1.1 
├─┬ babel-core@6.26.0 
│ ├─┬ babel-code-frame@6.26.0 
│ │ └── js-tokens@3.0.2 
│ ├─┬ babel-generator@6.26.0 
│ │ ├─┬ detect-indent@4.0.0 
│ │ │ └─┬ repeating@2.0.1 
│ │ │   └── is-finite@1.0.2 
│ │ ├── jsesc@1.3.0 
│ │ └── trim-right@1.0.1 
│ ├── babel-helpers@6.24.1 
│ ├── babel-messages@6.23.0 
│ ├── babel-template@6.26.0 
│ ├─┬ babel-traverse@6.26.0 
│ │ └── debug@2.6.8 
│ ├─┬ babel-types@6.26.0 
│ │ └── to-fast-properties@1.0.3 
│ ├── babylon@6.18.0 
│ ├─┬ debug@2.6.8 
│ │ └── ms@2.0.0 
│ ├── json5@0.5.1 
│ ├─┬ minimatch@3.0.4 
│ │ └─┬ brace-expansion@1.1.8 
│ │   ├── balanced-match@1.0.0 
│ │   └── concat-map@0.0.1 
│ └── private@0.1.7 
├── babel-eslint@7.2.3 
├─┬ babel-loader@7.1.2 
│ ├─┬ find-cache-dir@1.0.0 
│ │ ├── commondir@1.0.1 
│ │ ├─┬ make-dir@1.0.0 
│ │ │ └── pify@2.3.0 
│ │ └── pkg-dir@2.0.0 
│ ├─┬ loader-utils@1.1.0 
│ │ ├── big.js@3.1.3 
│ │ └── emojis-list@2.1.0 
│ └─┬ mkdirp@0.5.1 
│   └── minimist@0.0.8 
├─┬ babel-preset-env@1.6.0 
│ ├── babel-plugin-check-es2015-constants@6.22.0 
│ ├── babel-plugin-syntax-trailing-function-commas@6.22.0 
│ ├─┬ babel-plugin-transform-async-to-generator@6.24.1 
│ │ ├── babel-helper-remap-async-to-generator@6.24.1 
│ │ └── babel-plugin-syntax-async-functions@6.13.0 
│ ├── babel-plugin-transform-es2015-arrow-functions@6.22.0 
│ ├── babel-plugin-transform-es2015-block-scoped-functions@6.22.0 
│ ├── babel-plugin-transform-es2015-block-scoping@6.26.0 
│ ├─┬ babel-plugin-transform-es2015-classes@6.24.1 
│ │ ├── babel-helper-define-map@6.26.0 
│ │ ├── babel-helper-function-name@6.24.1 
│ │ ├── babel-helper-optimise-call-expression@6.24.1 
│ │ └── babel-helper-replace-supers@6.24.1 
│ ├── babel-plugin-transform-es2015-computed-properties@6.24.1 
│ ├── babel-plugin-transform-es2015-destructuring@6.23.0 
│ ├── babel-plugin-transform-es2015-duplicate-keys@6.24.1 
│ ├── babel-plugin-transform-es2015-for-of@6.23.0 
│ ├── babel-plugin-transform-es2015-function-name@6.24.1 
│ ├── babel-plugin-transform-es2015-literals@6.22.0 
│ ├── babel-plugin-transform-es2015-modules-amd@6.24.1 
│ ├─┬ babel-plugin-transform-es2015-modules-commonjs@6.26.0 
│ │ └── babel-plugin-transform-strict-mode@6.24.1 
│ ├─┬ babel-plugin-transform-es2015-modules-systemjs@6.24.1 
│ │ └── babel-helper-hoist-variables@6.24.1 
│ ├── babel-plugin-transform-es2015-modules-umd@6.24.1 
│ ├── babel-plugin-transform-es2015-object-super@6.24.1 
│ ├─┬ babel-plugin-transform-es2015-parameters@6.24.1 
│ │ ├── babel-helper-call-delegate@6.24.1 
│ │ └── babel-helper-get-function-arity@6.24.1 
│ ├── babel-plugin-transform-es2015-shorthand-properties@6.24.1 
│ ├── babel-plugin-transform-es2015-spread@6.22.0 
│ ├─┬ babel-plugin-transform-es2015-sticky-regex@6.24.1 
│ │ └── babel-helper-regex@6.26.0 
│ ├── babel-plugin-transform-es2015-template-literals@6.22.0 
│ ├── babel-plugin-transform-es2015-typeof-symbol@6.23.0 
│ ├─┬ babel-plugin-transform-es2015-unicode-regex@6.24.1 
│ │ └─┬ regexpu-core@2.0.0 
│ │   ├── regenerate@1.3.2 
│ │   ├── regjsgen@0.2.0 
│ │   └─┬ regjsparser@0.1.5 
│ │     └── jsesc@0.5.0 
│ ├─┬ babel-plugin-transform-exponentiation-operator@6.24.1 
│ │ ├─┬ babel-helper-builder-binary-assignment-operator-visitor@6.24.1 
│ │ │ └── babel-helper-explode-assignable-expression@6.24.1 
│ │ └── babel-plugin-syntax-exponentiation-operator@6.13.0 
│ ├─┬ babel-plugin-transform-regenerator@6.26.0 
│ │ └── regenerator-transform@0.10.1 
│ ├─┬ browserslist@2.4.0 
│ │ ├── caniuse-lite@1.0.30000726 
│ │ └── electron-to-chromium@1.3.21 
│ ├─┬ invariant@2.2.2 
│ │ └── loose-envify@1.3.1 
│ └── semver@5.4.1 
├─┬ babel-preset-latest@6.24.1 
│ ├── babel-preset-es2015@6.24.1 
│ ├── babel-preset-es2016@6.24.1 
│ └── babel-preset-es2017@6.24.1 
├─┬ babel-preset-stage-0@6.24.1 
│ ├─┬ babel-plugin-transform-do-expressions@6.22.0 
│ │ └── babel-plugin-syntax-do-expressions@6.13.0 
│ ├─┬ babel-plugin-transform-function-bind@6.22.0 
│ │ └── babel-plugin-syntax-function-bind@6.13.0 
│ └─┬ babel-preset-stage-1@6.24.1 
│   ├─┬ babel-plugin-transform-class-constructor-call@6.24.1 
│   │ └── babel-plugin-syntax-class-constructor-call@6.18.0 
│   ├─┬ babel-plugin-transform-export-extensions@6.22.0 
│   │ └── babel-plugin-syntax-export-extensions@6.13.0 
│   └─┬ babel-preset-stage-2@6.24.1 
│     ├── babel-plugin-syntax-dynamic-import@6.18.0 
│     ├─┬ babel-plugin-transform-class-properties@6.24.1 
│     │ └── babel-plugin-syntax-class-properties@6.13.0 
│     ├─┬ babel-plugin-transform-decorators@6.24.1 
│     │ ├─┬ babel-helper-explode-class@6.24.1 
│     │ │ └── babel-helper-bindify-decorators@6.24.1 
│     │ └── babel-plugin-syntax-decorators@6.13.0 
│     └─┬ babel-preset-stage-3@6.24.1 
│       ├─┬ babel-plugin-transform-async-generator-functions@6.24.1 
│       │ └── babel-plugin-syntax-async-generators@6.13.0 
│       └─┬ babel-plugin-transform-object-rest-spread@6.26.0 
│         └── babel-plugin-syntax-object-rest-spread@6.13.0 
├─┬ body-parser@1.17.2 
│ ├── bytes@2.4.0 
│ ├── content-type@1.0.2 
│ ├── debug@2.6.7 
│ ├── depd@1.1.1 
│ ├─┬ http-errors@1.6.2 
│ │ ├── setprototypeof@1.0.3 
│ │ └── statuses@1.3.1 
│ ├── iconv-lite@0.4.15 
│ ├─┬ on-finished@2.3.0 
│ │ └── ee-first@1.1.1 
│ ├── qs@6.4.0 
│ ├─┬ raw-body@2.2.0 
│ │ └── unpipe@1.0.0 
│ └─┬ type-is@1.6.15 
│   └── media-typer@0.3.0 
├── child_process@1.0.2 
├─┬ cors@2.8.4 
│ ├── object-assign@4.1.1 
│ └── vary@1.1.1 
├─┬ eslint@3.19.0 
│ ├─┬ chalk@1.1.3 
│ │ ├── ansi-styles@2.2.1 
│ │ ├── escape-string-regexp@1.0.5 
│ │ ├─┬ has-ansi@2.0.0 
│ │ │ └── ansi-regex@2.1.1 
│ │ ├─┬ strip-ansi@3.0.1 
│ │ │ └── ansi-regex@2.1.1 
│ │ └── supports-color@2.0.0 
│ ├─┬ concat-stream@1.6.0 
│ │ ├─┬ readable-stream@2.3.3 
│ │ │ ├── core-util-is@1.0.2 
│ │ │ ├── process-nextick-args@1.0.7 
│ │ │ ├── string_decoder@1.0.3 
│ │ │ └── util-deprecate@1.0.2 
│ │ └── typedarray@0.0.6 
│ ├─┬ doctrine@2.0.0 
│ │ └── isarray@1.0.0 
│ ├─┬ escope@3.6.0 
│ │ ├─┬ es6-map@0.1.5 
│ │ │ ├── d@1.0.0 
│ │ │ ├── es5-ext@0.10.30 
│ │ │ ├── es6-iterator@2.0.1 
│ │ │ ├── es6-set@0.1.5 
│ │ │ ├── es6-symbol@3.1.1 
│ │ │ └── event-emitter@0.3.5 
│ │ ├── es6-weak-map@2.0.2 
│ │ └── esrecurse@4.2.0 
│ ├─┬ espree@3.5.0 
│ │ ├── acorn@5.1.2 
│ │ └─┬ acorn-jsx@3.0.1 
│ │   └── acorn@3.3.0 
│ ├── esquery@1.0.0 
│ ├── estraverse@4.2.0 
│ ├── esutils@2.0.2 
│ ├─┬ file-entry-cache@2.0.0 
│ │ └─┬ flat-cache@1.2.2 
│ │   ├── circular-json@0.3.3 
│ │   ├─┬ del@2.2.2 
│ │   │ ├─┬ globby@5.0.0 
│ │   │ │ ├─┬ array-union@1.0.2 
│ │   │ │ │ └── array-uniq@1.0.3 
│ │   │ │ └── arrify@1.0.1 
│ │   │ ├── is-path-cwd@1.0.0 
│ │   │ ├─┬ is-path-in-cwd@1.0.0 
│ │   │ │ └── is-path-inside@1.0.0 
│ │   │ └─┬ pinkie-promise@2.0.1 
│ │   │   └── pinkie@2.0.4 
│ │   └── write@0.2.1 
│ ├── globals@9.18.0 
│ ├── ignore@3.3.5 
│ ├── imurmurhash@0.1.4 
│ ├─┬ inquirer@0.12.0 
│ │ ├── ansi-escapes@1.4.0 
│ │ ├── ansi-regex@2.1.1 
│ │ ├─┬ cli-cursor@1.0.2 
│ │ │ └─┬ restore-cursor@1.0.1 
│ │ │   ├── exit-hook@1.1.1 
│ │ │   └── onetime@1.1.0 
│ │ ├── cli-width@2.2.0 
│ │ ├── figures@1.7.0 
│ │ ├─┬ readline2@1.0.1 
│ │ │ ├── is-fullwidth-code-point@1.0.0 
│ │ │ └── mute-stream@0.0.5 
│ │ ├── run-async@0.1.0 
│ │ ├── rx-lite@3.1.2 
│ │ ├─┬ string-width@1.0.2 
│ │ │ ├── code-point-at@1.1.0 
│ │ │ └─┬ is-fullwidth-code-point@1.0.0 
│ │ │   └── number-is-nan@1.0.1 
│ │ ├── strip-ansi@3.0.1 
│ │ └── through@2.3.8 
│ ├─┬ is-my-json-valid@2.16.1 
│ │ ├── generate-function@2.0.0 
│ │ ├─┬ generate-object-property@1.2.0 
│ │ │ └── is-property@1.0.2 
│ │ ├── jsonpointer@4.0.1 
│ │ └── xtend@4.0.1 
│ ├─┬ is-resolvable@1.0.0 
│ │ └── tryit@1.0.3 
│ ├─┬ js-yaml@3.9.1 
│ │ ├─┬ argparse@1.0.9 
│ │ │ └── sprintf-js@1.0.3 
│ │ └── esprima@4.0.0 
│ ├─┬ json-stable-stringify@1.0.1 
│ │ └── jsonify@0.0.0 
│ ├─┬ levn@0.3.0 
│ │ ├── prelude-ls@1.1.2 
│ │ └── type-check@0.3.2 
│ ├── natural-compare@1.4.0 
│ ├─┬ optionator@0.8.2 
│ │ ├── deep-is@0.1.3 
│ │ ├── fast-levenshtein@2.0.6 
│ │ └── wordwrap@1.0.0 
│ ├── path-is-inside@1.0.2 
│ ├── pluralize@1.2.1 
│ ├── progress@1.1.8 
│ ├─┬ require-uncached@1.0.3 
│ │ ├─┬ caller-path@0.1.0 
│ │ │ └── callsites@0.2.0 
│ │ └── resolve-from@1.0.1 
│ ├─┬ shelljs@0.7.8 
│ │ ├── interpret@1.0.3 
│ │ └── rechoir@0.6.2 
│ ├── strip-bom@3.0.0 
│ ├── strip-json-comments@2.0.1 
│ ├─┬ table@3.8.3 
│ │ ├─┬ ajv@4.11.8 
│ │ │ └── co@4.6.0 
│ │ ├── ajv-keywords@1.5.1 
│ │ ├── slice-ansi@0.0.4 
│ │ └─┬ string-width@2.1.1 
│ │   └── is-fullwidth-code-point@2.0.0 
│ ├── text-table@0.2.0 
│ └─┬ user-home@2.0.0 
│   └── os-homedir@1.0.2 
├─┬ eslint-config-airbnb-base@11.3.2 
│ └── eslint-restricted-globals@0.1.1 
├─┬ eslint-plugin-import@2.7.0 
│ ├── builtin-modules@1.1.1 
│ ├── contains-path@0.1.0 
│ ├── debug@2.6.8 
│ ├── doctrine@1.5.0 
│ ├─┬ eslint-import-resolver-node@0.3.1 
│ │ ├── debug@2.6.8 
│ │ └─┬ resolve@1.4.0 
│ │   └── path-parse@1.0.5 
│ ├─┬ eslint-module-utils@2.1.1 
│ │ ├── debug@2.6.8 
│ │ └─┬ pkg-dir@1.0.0 
│ │   └─┬ find-up@1.1.2 
│ │     └── path-exists@2.1.0 
│ ├─┬ has@1.0.1 
│ │ └── function-bind@1.1.1 
│ ├── lodash.cond@4.5.2 
│ └─┬ read-pkg-up@2.0.0 
│   ├─┬ find-up@2.1.0 
│   │ └─┬ locate-path@2.0.0 
│   │   ├─┬ p-locate@2.0.0 
│   │   │ └── p-limit@1.1.0 
│   │   └── path-exists@3.0.0 
│   └─┬ read-pkg@2.0.0 
│     ├─┬ load-json-file@2.0.0 
│     │ └─┬ parse-json@2.2.0 
│     │   └─┬ error-ex@1.3.1 
│     │     └── is-arrayish@0.2.1 
│     ├─┬ normalize-package-data@2.4.0 
│     │ └── hosted-git-info@2.5.0 
│     └── path-type@2.0.0 
├── install@0.10.1 
├── json2xml@0.1.3 
├─┬ nodemon@1.12.0 
│ ├── debug@2.6.8 
│ ├── es6-promise@3.3.1 
│ ├── ignore-by-default@1.0.1 
│ ├─┬ lodash.defaults@3.1.2 
│ │ ├─┬ lodash.assign@3.2.0 
│ │ │ ├─┬ lodash._baseassign@3.2.0 
│ │ │ │ └── lodash._basecopy@3.0.1 
│ │ │ ├─┬ lodash._createassigner@3.1.1 
│ │ │ │ ├── lodash._bindcallback@3.0.1 
│ │ │ │ └── lodash._isiterateecall@3.0.9 
│ │ │ └─┬ lodash.keys@3.1.2 
│ │ │   ├── lodash._getnative@3.9.1 
│ │ │   ├── lodash.isarguments@3.1.0 
│ │ │   └── lodash.isarray@3.0.4 
│ │ └── lodash.restparam@3.6.1 
│ ├─┬ ps-tree@1.1.0 
│ │ └─┬ event-stream@3.3.4 
│ │   ├── duplexer@0.1.1 
│ │   ├── from@0.1.7 
│ │   ├── map-stream@0.1.0 
│ │   ├── pause-stream@0.0.11 
│ │   ├── split@0.3.3 
│ │   └── stream-combiner@0.0.4 
│ ├─┬ touch@3.1.0 
│ │ └─┬ nopt@1.0.10 
│ │   └── abbrev@1.1.0 
│ ├── undefsafe@0.0.3 
│ └─┬ update-notifier@2.2.0 
│   ├─┬ boxen@1.2.1 
│   │ ├── ansi-align@2.0.0 
│   │ ├── chalk@2.1.0 
│   │ ├── cli-boxes@1.0.0 
│   │ ├─┬ term-size@1.2.0 
│   │ │ └─┬ execa@0.7.0 
│   │ │   ├─┬ cross-spawn@5.1.0 
│   │ │   │ ├─┬ lru-cache@4.1.1 
│   │ │   │ │ ├── pseudomap@1.0.2 
│   │ │   │ │ └── yallist@2.1.2 
│   │ │   │ ├─┬ shebang-command@1.2.0 
│   │ │   │ │ └── shebang-regex@1.0.0 
│   │ │   │ └─┬ which@1.3.0 
│   │ │   │   └── isexe@2.0.0 
│   │ │   ├── get-stream@3.0.0 
│   │ │   ├── is-stream@1.1.0 
│   │ │   ├─┬ npm-run-path@2.0.2 
│   │ │   │ └── path-key@2.0.1 
│   │ │   ├── p-finally@1.0.0 
│   │ │   └── strip-eof@1.0.0 
│   │ └─┬ widest-line@1.0.0 
│   │   └─┬ string-width@1.0.2 
│   │     ├── is-fullwidth-code-point@1.0.0 
│   │     └─┬ strip-ansi@3.0.1 
│   │       └── ansi-regex@2.1.1 
│   ├─┬ configstore@3.1.1 
│   │ ├─┬ dot-prop@4.2.0 
│   │ │ └── is-obj@1.0.1 
│   │ ├─┬ unique-string@1.0.0 
│   │ │ └── crypto-random-string@1.0.0 
│   │ └── write-file-atomic@2.3.0 
│   ├── import-lazy@2.1.0 
│   ├── is-npm@1.0.0 
│   ├─┬ latest-version@3.1.0 
│   │ └─┬ package-json@4.0.1 
│   │   ├─┬ got@6.7.1 
│   │   │ ├─┬ create-error-class@3.0.2 
│   │   │ │ └── capture-stack-trace@1.0.0 
│   │   │ ├── duplexer3@0.1.4 
│   │   │ ├── is-redirect@1.0.0 
│   │   │ ├── is-retry-allowed@1.1.0 
│   │   │ ├── lowercase-keys@1.0.0 
│   │   │ ├── timed-out@4.0.1 
│   │   │ ├── unzip-response@2.0.1 
│   │   │ └─┬ url-parse-lax@1.0.0 
│   │   │   └── prepend-http@1.0.4 
│   │   ├─┬ registry-auth-token@3.3.1 
│   │   │ └─┬ rc@1.2.1 
│   │   │   ├── deep-extend@0.4.2 
│   │   │   └── minimist@1.2.0 
│   │   └── registry-url@3.1.0 
│   ├── semver-diff@2.1.0 
│   └── xdg-basedir@3.0.0 
├─┬ npm@5.4.1 
│ ├── abbrev@1.1.0 
│ ├── ansi-regex@3.0.0 
│ ├── ansicolors@0.3.2 
│ ├── ansistyles@0.1.3 
│ ├── aproba@1.1.2 
│ ├── archy@1.0.0 
│ ├── bluebird@3.5.0 
│ ├─┬ cacache@9.2.9 
│ │ ├─┬ lru-cache@4.1.1 
│ │ │ ├── pseudomap@1.0.2 
│ │ │ └── yallist@2.1.2 
│ │ └── y18n@3.2.1 
│ ├── call-limit@1.1.0 
│ ├── chownr@1.0.1 
│ ├── cmd-shim@2.0.2 
│ ├─┬ columnify@1.5.4 
│ │ ├─┬ strip-ansi@3.0.1 
│ │ │ └── ansi-regex@2.1.1 
│ │ └─┬ wcwidth@1.0.1 
│ │   └─┬ defaults@1.0.3 
│ │     └── clone@1.0.2 
│ ├─┬ config-chain@1.1.11 
│ │ └── proto-list@1.2.4 
│ ├── debuglog@1.0.1 
│ ├── detect-indent@5.0.0 
│ ├─┬ dezalgo@1.0.3 
│ │ └── asap@2.0.5 
│ ├── editor@1.0.0 
│ ├── fs-vacuum@1.2.10 
│ ├── fs-write-stream-atomic@1.0.10 
│ ├─┬ glob@7.1.2 
│ │ ├── fs.realpath@1.0.0 
│ │ ├─┬ minimatch@3.0.4 
│ │ │ └─┬ brace-expansion@1.1.8 
│ │ │   ├── balanced-match@1.0.0 
│ │ │   └── concat-map@0.0.1 
│ │ └── path-is-absolute@1.0.1 
│ ├── graceful-fs@4.1.11 
│ ├── has-unicode@2.0.1 
│ ├── hosted-git-info@2.5.0 
│ ├── iferr@0.1.5 
│ ├── imurmurhash@0.1.4 
│ ├── inflight@1.0.6 
│ ├── inherits@2.0.3 
│ ├── ini@1.3.4 
│ ├─┬ init-package-json@1.10.1 
│ │ └── promzard@0.3.0 
│ ├─┬ JSONStream@1.3.1 
│ │ ├── jsonparse@1.3.1 
│ │ └── through@2.3.8 
│ ├── lazy-property@1.0.0 
│ ├─┬ libnpx@9.6.0 
│ │ ├── dotenv@4.0.0 
│ │ ├── y18n@3.2.1 
│ │ └─┬ yargs@8.0.2 
│ │   ├── camelcase@4.1.0 
│ │   ├─┬ cliui@3.2.0 
│ │   │ ├─┬ string-width@1.0.2 
│ │   │ │ ├── code-point-at@1.1.0 
│ │   │ │ └─┬ is-fullwidth-code-point@1.0.0 
│ │   │ │   └── number-is-nan@1.0.1 
│ │   │ ├─┬ strip-ansi@3.0.1 
│ │   │ │ └── ansi-regex@2.1.1 
│ │   │ └── wrap-ansi@2.1.0 
│ │   ├── decamelize@1.2.0 
│ │   ├── get-caller-file@1.0.2 
│ │   ├─┬ os-locale@2.1.0 
│ │   │ ├─┬ execa@0.7.0 
│ │   │ │ ├─┬ cross-spawn@5.1.0 
│ │   │ │ │ └─┬ shebang-command@1.2.0 
│ │   │ │ │   └── shebang-regex@1.0.0 
│ │   │ │ ├── get-stream@3.0.0 
│ │   │ │ ├── is-stream@1.1.0 
│ │   │ │ ├─┬ npm-run-path@2.0.2 
│ │   │ │ │ └── path-key@2.0.1 
│ │   │ │ ├── p-finally@1.0.0 
│ │   │ │ ├── signal-exit@3.0.2 
│ │   │ │ └── strip-eof@1.0.0 
│ │   │ ├─┬ lcid@1.0.0 
│ │   │ │ └── invert-kv@1.0.0 
│ │   │ └─┬ mem@1.1.0 
│ │   │   └── mimic-fn@1.1.0 
│ │   ├─┬ read-pkg-up@2.0.0 
│ │   │ ├─┬ find-up@2.1.0 
│ │   │ │ └─┬ locate-path@2.0.0 
│ │   │ │   ├─┬ p-locate@2.0.0 
│ │   │ │   │ └── p-limit@1.1.0 
│ │   │ │   └── path-exists@3.0.0 
│ │   │ └─┬ read-pkg@2.0.0 
│ │   │   ├─┬ load-json-file@2.0.0 
│ │   │   │ ├─┬ parse-json@2.2.0 
│ │   │   │ │ └─┬ error-ex@1.3.1 
│ │   │   │ │   └── is-arrayish@0.2.1 
│ │   │   │ ├── pify@2.3.0 
│ │   │   │ └── strip-bom@3.0.0 
│ │   │   └─┬ path-type@2.0.0 
│ │   │     └── pify@2.3.0 
│ │   ├── require-directory@2.1.1 
│ │   ├── require-main-filename@1.0.1 
│ │   ├── set-blocking@2.0.0 
│ │   ├─┬ string-width@2.1.1 
│ │   │ └── is-fullwidth-code-point@2.0.0 
│ │   ├── which-module@2.0.0 
│ │   └── yargs-parser@7.0.0 
│ ├── lockfile@1.0.3 
│ ├── lodash._baseindexof@3.1.0 
│ ├─┬ lodash._baseuniq@4.6.0 
│ │ ├── lodash._createset@4.0.3 
│ │ └── lodash._root@3.0.1 
│ ├── lodash._bindcallback@3.0.1 
│ ├── lodash._cacheindexof@3.0.2 
│ ├── lodash._createcache@3.1.2 
│ ├── lodash._getnative@3.9.1 
│ ├── lodash.clonedeep@4.5.0 
│ ├── lodash.restparam@3.6.1 
│ ├── lodash.union@4.6.0 
│ ├── lodash.uniq@4.5.0 
│ ├── lodash.without@4.4.0 
│ ├─┬ lru-cache@4.1.1 
│ │ ├── pseudomap@1.0.2 
│ │ └── yallist@2.1.2 
│ ├── meant@1.0.0 
│ ├─┬ mississippi@1.3.0 
│ │ ├─┬ concat-stream@1.6.0 
│ │ │ └── typedarray@0.0.6 
│ │ ├─┬ duplexify@3.5.0 
│ │ │ ├─┬ end-of-stream@1.0.0 
│ │ │ │ └── once@1.3.3 
│ │ │ └── stream-shift@1.0.0 
│ │ ├── end-of-stream@1.4.0 
│ │ ├── flush-write-stream@1.0.2 
│ │ ├── from2@2.3.0 
│ │ ├─┬ parallel-transform@1.1.0 
│ │ │ └── cyclist@0.2.2 
│ │ ├── pump@1.0.2 
│ │ ├── pumpify@1.3.5 
│ │ ├─┬ stream-each@1.2.0 
│ │ │ └── stream-shift@1.0.0 
│ │ └─┬ through2@2.0.3 
│ │   └── xtend@4.0.1 
│ ├─┬ mkdirp@0.5.1 
│ │ └── minimist@0.0.8 
│ ├─┬ move-concurrently@1.0.1 
│ │ ├── copy-concurrently@1.0.3 
│ │ └── run-queue@1.0.3 
│ ├─┬ node-gyp@3.6.2 
│ │ ├── fstream@1.0.11 
│ │ ├─┬ minimatch@3.0.4 
│ │ │ └─┬ brace-expansion@1.1.8 
│ │ │   ├── balanced-match@1.0.0 
│ │ │   └── concat-map@0.0.1 
│ │ ├── nopt@3.0.6 
│ │ ├── semver@5.3.0 
│ │ └─┬ tar@2.2.1 
│ │   └── block-stream@0.0.9 
│ ├── nopt@4.0.1 
│ ├─┬ normalize-package-data@2.4.0 
│ │ └─┬ is-builtin-module@1.0.0 
│ │   └── builtin-modules@1.1.1 
│ ├── npm-cache-filename@1.0.2 
│ ├── npm-install-checks@3.0.0 
│ ├── npm-lifecycle@1.0.2 
│ ├── npm-package-arg@5.1.2 
│ ├─┬ npm-packlist@1.1.8 
│ │ ├─┬ ignore-walk@3.0.0 
│ │ │ └─┬ minimatch@3.0.4 
│ │ │   └─┬ brace-expansion@1.1.8 
│ │ │     ├── balanced-match@1.0.0 
│ │ │     └── concat-map@0.0.1 
│ │ └── npm-bundled@1.0.3 
│ ├─┬ npm-registry-client@8.4.0 
│ │ └─┬ concat-stream@1.6.0 
│ │   └── typedarray@0.0.6 
│ ├── npm-user-validate@1.0.0 
│ ├─┬ npmlog@4.1.2 
│ │ ├─┬ are-we-there-yet@1.1.4 
│ │ │ └── delegates@1.0.0 
│ │ ├── console-control-strings@1.1.0 
│ │ ├─┬ gauge@2.7.4 
│ │ │ ├── object-assign@4.1.1 
│ │ │ ├── signal-exit@3.0.2 
│ │ │ ├─┬ string-width@1.0.2 
│ │ │ │ ├── code-point-at@1.1.0 
│ │ │ │ └─┬ is-fullwidth-code-point@1.0.0 
│ │ │ │   └── number-is-nan@1.0.1 
│ │ │ ├─┬ strip-ansi@3.0.1 
│ │ │ │ └── ansi-regex@2.1.1 
│ │ │ └── wide-align@1.1.2 
│ │ └── set-blocking@2.0.0 
│ ├── once@1.4.0 
│ ├── opener@1.4.3 
│ ├─┬ osenv@0.1.4 
│ │ ├── os-homedir@1.0.2 
│ │ └── os-tmpdir@1.0.2 
│ ├─┬ pacote@6.0.2 
│ │ ├─┬ make-fetch-happen@2.5.0 
│ │ │ ├─┬ agentkeepalive@3.3.0 
│ │ │ │ └─┬ humanize-ms@1.2.1 
│ │ │ │   └── ms@2.0.0 
│ │ │ ├── http-cache-semantics@3.7.3 
│ │ │ ├─┬ http-proxy-agent@2.0.0 
│ │ │ │ ├─┬ agent-base@4.1.1 
│ │ │ │ │ └─┬ es6-promisify@5.0.0 
│ │ │ │ │   └── es6-promise@4.1.1 
│ │ │ │ └─┬ debug@2.6.8 
│ │ │ │   └── ms@2.0.0 
│ │ │ ├─┬ https-proxy-agent@2.1.0 
│ │ │ │ ├─┬ agent-base@4.1.1 
│ │ │ │ │ └─┬ es6-promisify@5.0.0 
│ │ │ │ │   └── es6-promise@4.1.1 
│ │ │ │ └─┬ debug@2.6.8 
│ │ │ │   └── ms@2.0.0 
│ │ │ ├─┬ node-fetch-npm@2.0.2 
│ │ │ │ ├─┬ encoding@0.1.12 
│ │ │ │ │ └── iconv-lite@0.4.18 
│ │ │ │ └── json-parse-better-errors@1.0.1 
│ │ │ └─┬ socks-proxy-agent@3.0.0 
│ │ │   ├─┬ agent-base@4.1.1 
│ │ │   │ └─┬ es6-promisify@5.0.0 
│ │ │   │   └── es6-promise@4.1.1 
│ │ │   └─┬ socks@1.1.10 
│ │ │     ├── ip@1.1.5 
│ │ │     └── smart-buffer@1.1.15 
│ │ ├─┬ minimatch@3.0.4 
│ │ │ └─┬ brace-expansion@1.1.8 
│ │ │   ├── balanced-match@1.0.0 
│ │ │   └── concat-map@0.0.1 
│ │ ├── npm-pick-manifest@1.0.4 
│ │ ├─┬ promise-retry@1.1.1 
│ │ │ └── err-code@1.1.2 
│ │ └─┬ protoduck@4.0.0 
│ │   └── genfun@4.0.1 
│ ├── path-is-inside@1.0.2 
│ ├── promise-inflight@1.0.1 
│ ├─┬ read@1.0.7 
│ │ └── mute-stream@0.0.7 
│ ├── read-cmd-shim@1.0.1 
│ ├─┬ read-installed@4.0.3 
│ │ └── util-extend@1.0.3 
│ ├─┬ read-package-json@2.0.12 
│ │ ├── json-parse-better-errors@1.0.1 
│ │ └── slash@1.0.0 
│ ├── read-package-tree@5.1.6 
│ ├─┬ readable-stream@2.3.3 
│ │ ├── core-util-is@1.0.2 
│ │ ├── isarray@1.0.0 
│ │ ├── process-nextick-args@1.0.7 
│ │ ├── string_decoder@1.0.3 
│ │ └── util-deprecate@1.0.2 
│ ├── readdir-scoped-modules@1.0.2 
│ ├─┬ request@2.81.0 
│ │ ├── aws-sign2@0.6.0 
│ │ ├── aws4@1.6.0 
│ │ ├── caseless@0.12.0 
│ │ ├─┬ combined-stream@1.0.5 
│ │ │ └── delayed-stream@1.0.0 
│ │ ├── extend@3.0.1 
│ │ ├── forever-agent@0.6.1 
│ │ ├─┬ form-data@2.1.4 
│ │ │ └── asynckit@0.4.0 
│ │ ├─┬ har-validator@4.2.1 
│ │ │ ├─┬ ajv@4.11.8 
│ │ │ │ ├── co@4.6.0 
│ │ │ │ └─┬ json-stable-stringify@1.0.1 
│ │ │ │   └── jsonify@0.0.0 
│ │ │ └── har-schema@1.0.5 
│ │ ├─┬ hawk@3.1.3 
│ │ │ ├── boom@2.10.1 
│ │ │ ├── cryptiles@2.0.5 
│ │ │ ├── hoek@2.16.3 
│ │ │ └── sntp@1.0.9 
│ │ ├─┬ http-signature@1.1.1 
│ │ │ ├── assert-plus@0.2.0 
│ │ │ ├─┬ jsprim@1.4.0 
│ │ │ │ ├── assert-plus@1.0.0 
│ │ │ │ ├── extsprintf@1.0.2 
│ │ │ │ ├── json-schema@0.2.3 
│ │ │ │ └── verror@1.3.6 
│ │ │ └─┬ sshpk@1.13.1 
│ │ │   ├── asn1@0.2.3 
│ │ │   ├── assert-plus@1.0.0 
│ │ │   ├── bcrypt-pbkdf@1.0.1 
│ │ │   ├── dashdash@1.14.1 
│ │ │   ├── ecc-jsbn@0.1.1 
│ │ │   ├── getpass@0.1.7 
│ │ │   ├── jsbn@0.1.1 
│ │ │   └── tweetnacl@0.14.5 
│ │ ├── is-typedarray@1.0.0 
│ │ ├── isstream@0.1.2 
│ │ ├── json-stringify-safe@5.0.1 
│ │ ├─┬ mime-types@2.1.15 
│ │ │ └── mime-db@1.27.0 
│ │ ├── oauth-sign@0.8.2 
│ │ ├── performance-now@0.2.0 
│ │ ├── qs@6.4.0 
│ │ ├── stringstream@0.0.5 
│ │ ├─┬ tough-cookie@2.3.2 
│ │ │ └── punycode@1.4.1 
│ │ └── tunnel-agent@0.6.0 
│ ├── retry@0.10.1 
│ ├── rimraf@2.6.1 
│ ├── safe-buffer@5.1.1 
│ ├── semver@5.4.1 
│ ├── sha@2.0.1 
│ ├── slide@1.1.6 
│ ├── sorted-object@2.0.1 
│ ├─┬ sorted-union-stream@2.1.3 
│ │ ├─┬ from2@1.3.0 
│ │ │ └─┬ readable-stream@1.1.14 
│ │ │   ├── core-util-is@1.0.2 
│ │ │   ├── isarray@0.0.1 
│ │ │   └── string_decoder@0.10.31 
│ │ └─┬ stream-iterate@1.2.0 
│ │   └── stream-shift@1.0.0 
│ ├── ssri@4.1.6 
│ ├─┬ strip-ansi@4.0.0 
│ │ └── ansi-regex@3.0.0 
│ ├─┬ tar@4.0.1 
│ │ ├── minipass@2.2.1 
│ │ ├── minizlib@1.0.3 
│ │ └── yallist@3.0.2 
│ ├── text-table@0.2.0 
│ ├── uid-number@0.0.6 
│ ├── umask@1.1.0 
│ ├─┬ unique-filename@1.1.0 
│ │ └── unique-slug@2.0.0 
│ ├── unpipe@1.0.0 
│ ├─┬ update-notifier@2.2.0 
│ │ ├─┬ boxen@1.1.0 
│ │ │ ├── ansi-align@2.0.0 
│ │ │ ├── camelcase@4.1.0 
│ │ │ ├── cli-boxes@1.0.0 
│ │ │ ├─┬ string-width@2.1.0 
│ │ │ │ ├── is-fullwidth-code-point@2.0.0 
│ │ │ │ └── strip-ansi@4.0.0 
│ │ │ ├─┬ term-size@0.1.1 
│ │ │ │ └─┬ execa@0.4.0 
│ │ │ │   ├── cross-spawn-async@2.2.5 
│ │ │ │   ├── is-stream@1.1.0 
│ │ │ │   ├── npm-run-path@1.0.0 
│ │ │ │   ├── object-assign@4.1.1 
│ │ │ │   ├── path-key@1.0.0 
│ │ │ │   └── strip-eof@1.0.0 
│ │ │ └─┬ widest-line@1.0.0 
│ │ │   └─┬ string-width@1.0.2 
│ │ │     ├── code-point-at@1.1.0 
│ │ │     ├─┬ is-fullwidth-code-point@1.0.0 
│ │ │     │ └── number-is-nan@1.0.1 
│ │ │     └─┬ strip-ansi@3.0.1 
│ │ │       └── ansi-regex@2.1.1 
│ │ ├─┬ chalk@1.1.3 
│ │ │ ├── ansi-styles@2.2.1 
│ │ │ ├── escape-string-regexp@1.0.5 
│ │ │ ├─┬ has-ansi@2.0.0 
│ │ │ │ └── ansi-regex@2.1.1 
│ │ │ ├─┬ strip-ansi@3.0.1 
│ │ │ │ └── ansi-regex@2.1.1 
│ │ │ └── supports-color@2.0.0 
│ │ ├─┬ configstore@3.1.0 
│ │ │ ├─┬ dot-prop@4.1.1 
│ │ │ │ └── is-obj@1.0.1 
│ │ │ ├─┬ make-dir@1.0.0 
│ │ │ │ └── pify@2.3.0 
│ │ │ └─┬ unique-string@1.0.0 
│ │ │   └── crypto-random-string@1.0.0 
│ │ ├── import-lazy@2.1.0 
│ │ ├── is-npm@1.0.0 
│ │ ├─┬ latest-version@3.1.0 
│ │ │ └─┬ package-json@4.0.1 
│ │ │   ├─┬ got@6.7.1 
│ │ │   │ ├─┬ create-error-class@3.0.2 
│ │ │   │ │ └── capture-stack-trace@1.0.0 
│ │ │   │ ├── duplexer3@0.1.4 
│ │ │   │ ├── get-stream@3.0.0 
│ │ │   │ ├── is-redirect@1.0.0 
│ │ │   │ ├── is-retry-allowed@1.1.0 
│ │ │   │ ├── is-stream@1.1.0 
│ │ │   │ ├── lowercase-keys@1.0.0 
│ │ │   │ ├── timed-out@4.0.1 
│ │ │   │ ├── unzip-response@2.0.1 
│ │ │   │ └─┬ url-parse-lax@1.0.0 
│ │ │   │   └── prepend-http@1.0.4 
│ │ │   ├─┬ registry-auth-token@3.3.1 
│ │ │   │ └─┬ rc@1.2.1 
│ │ │   │   ├── deep-extend@0.4.2 
│ │ │   │   ├── minimist@1.2.0 
│ │ │   │   └── strip-json-comments@2.0.1 
│ │ │   └─┬ registry-url@3.1.0 
│ │ │     └─┬ rc@1.2.1 
│ │ │       ├── deep-extend@0.4.2 
│ │ │       ├── minimist@1.2.0 
│ │ │       └── strip-json-comments@2.0.1 
│ │ ├── semver-diff@2.1.0 
│ │ └── xdg-basedir@3.0.0 
│ ├── uuid@3.1.0 
│ ├─┬ validate-npm-package-license@3.0.1 
│ │ ├─┬ spdx-correct@1.0.2 
│ │ │ └── spdx-license-ids@1.2.2 
│ │ └── spdx-expression-parse@1.0.4 
│ ├─┬ validate-npm-package-name@3.0.0 
│ │ └── builtins@1.0.3 
│ ├─┬ which@1.3.0 
│ │ └── isexe@2.0.0 
│ ├─┬ worker-farm@1.5.0 
│ │ ├─┬ errno@0.1.4 
│ │ │ └── prr@0.0.0 
│ │ └── xtend@4.0.1 
│ ├── wrappy@1.0.2 
│ └─┬ write-file-atomic@2.3.0 
│   └── signal-exit@3.0.2 
├─┬ promise@7.3.1 
│ └── asap@2.0.6 
├── q@1.5.0 
├─┬ request@2.81.0 
│ ├── aws-sign2@0.6.0 
│ ├── aws4@1.6.0 
│ ├── caseless@0.12.0 
│ ├─┬ combined-stream@1.0.5 
│ │ └── delayed-stream@1.0.0 
│ ├── extend@3.0.1 
│ ├── forever-agent@0.6.1 
│ ├─┬ form-data@2.1.4 
│ │ └── asynckit@0.4.0 
│ ├─┬ har-validator@4.2.1 
│ │ └── har-schema@1.0.5 
│ ├─┬ hawk@3.1.3 
│ │ ├── boom@2.10.1 
│ │ ├── cryptiles@2.0.5 
│ │ ├── hoek@2.16.3 
│ │ └── sntp@1.0.9 
│ ├─┬ http-signature@1.1.1 
│ │ ├── assert-plus@0.2.0 
│ │ ├─┬ jsprim@1.4.1 
│ │ │ ├── assert-plus@1.0.0 
│ │ │ ├── extsprintf@1.3.0 
│ │ │ ├── json-schema@0.2.3 
│ │ │ └─┬ verror@1.10.0 
│ │ │   └── assert-plus@1.0.0 
│ │ └─┬ sshpk@1.13.1 
│ │   ├── asn1@0.2.3 
│ │   ├── assert-plus@1.0.0 
│ │   ├── bcrypt-pbkdf@1.0.1 
│ │   ├─┬ dashdash@1.14.1 
│ │   │ └── assert-plus@1.0.0 
│ │   ├── ecc-jsbn@0.1.1 
│ │   ├─┬ getpass@0.1.7 
│ │   │ └── assert-plus@1.0.0 
│ │   ├── jsbn@0.1.1 
│ │   └── tweetnacl@0.14.5 
│ ├── is-typedarray@1.0.0 
│ ├── isstream@0.1.2 
│ ├── json-stringify-safe@5.0.1 
│ ├─┬ mime-types@2.1.17 
│ │ └── mime-db@1.30.0 
│ ├── oauth-sign@0.8.2 
│ ├── performance-now@0.2.0 
│ ├── safe-buffer@5.1.1 
│ ├── stringstream@0.0.5 
│ ├─┬ tough-cookie@2.3.2 
│ │ └── punycode@1.4.1 
│ └── tunnel-agent@0.6.0 
├── sequence@3.0.0 
├─┬ truffle-contract@2.0.5 
│ ├─┬ ethjs-abi@0.1.8 
│ │ ├── bn.js@4.11.6 
│ │ ├── js-sha3@0.5.5 
│ │ └─┬ number-to-bn@1.7.0 
│ │   └─┬ strip-hex-prefix@1.0.0 
│ │     └── is-hex-prefixed@1.0.0 
│ ├─┬ truffle-blockchain-utils@0.0.3 
│ │ └── web3@0.20.1 
│ ├─┬ truffle-contract-schema@0.0.5 
│ │ └── crypto-js@3.1.9-1 
│ └─┬ web3@0.20.1 
│   └── bignumber.js@2.0.7  (git+https://github.com/frozeman/bignumber.js-nolookahead.git#57692b3ecfc98bbdd6b3a516cb2353652ea49934)
├── uuid@3.1.0 
├── wait-promise@0.4.1 
├─┬ web3@0.19.1 
│ ├── bignumber.js@4.0.4 
│ ├── crypto-js@3.1.8 
│ ├── utf8@2.1.2 
│ ├── xhr2@0.1.4 
│ └── xmlhttprequest@1.8.0 
├── UNMET PEER DEPENDENCY webpack@2 || 3
├─┬ xml2js@0.4.19 
│ ├── sax@1.2.4 
│ └── xmlbuilder@9.0.4 
└─┬ yarn@0.24.6 
  ├── camelcase@4.1.0 
  ├── cmd-shim@2.0.2 
  ├── death@1.1.0 
  ├── detect-indent@5.0.0 
  ├─┬ gunzip-maybe@1.4.1 
  │ ├─┬ browserify-zlib@0.1.4 
  │ │ └── pako@0.2.9 
  │ ├── is-deflate@1.0.0 
  │ ├── is-gzip@1.0.0 
  │ ├─┬ peek-stream@1.1.2 
  │ │ └─┬ duplexify@3.5.1 
  │ │   └── stream-shift@1.0.0 
  │ ├── pumpify@1.3.5 
  │ └── through2@2.0.3 
  ├── ini@1.3.4 
  ├─┬ inquirer@3.2.3 
  │ ├── ansi-escapes@2.0.0 
  │ ├─┬ chalk@2.1.0 
  │ │ ├─┬ ansi-styles@3.2.0 
  │ │ │ └─┬ color-convert@1.9.0 
  │ │ │   └── color-name@1.1.3 
  │ │ └─┬ supports-color@4.4.0 
  │ │   └── has-flag@2.0.0 
  │ ├─┬ cli-cursor@2.1.0 
  │ │ └─┬ restore-cursor@2.0.0 
  │ │   └─┬ onetime@2.0.1 
  │ │     └── mimic-fn@1.1.0 
  │ ├─┬ external-editor@2.0.4 
  │ │ ├── iconv-lite@0.4.18 
  │ │ ├── jschardet@1.5.1 
  │ │ └── tmp@0.0.31 
  │ ├── figures@2.0.0 
  │ ├── mute-stream@0.0.7 
  │ ├─┬ run-async@2.3.0 
  │ │ └── is-promise@2.1.0 
  │ ├── rx-lite@4.0.8 
  │ ├── rx-lite-aggregates@4.0.8 
  │ └─┬ strip-ansi@4.0.0 
  │   └── ansi-regex@3.0.0 
  ├── is-builtin-module@1.0.0 
  ├─┬ is-ci@1.0.10 
  │ └── ci-info@1.1.1 
  ├── leven@2.1.0 
  ├─┬ loud-rejection@1.6.0 
  │ ├─┬ currently-unhandled@0.4.1 
  │ │ └── array-find-index@1.0.2 
  │ └── signal-exit@3.0.2 
  ├─┬ node-emoji@1.8.1 
  │ └── lodash.toarray@4.4.0 
  ├── object-path@0.11.4 
  ├─┬ proper-lockfile@2.0.1 
  │ └── retry@0.10.1 
  ├── read@1.0.7 
  ├── request-capture-har@1.2.2 
  ├── rimraf@2.6.1 
  ├─┬ tar-fs@1.15.3 
  │ ├── chownr@1.0.1 
  │ └── pump@1.0.2 
  ├─┬ tar-stream@1.5.4 
  │ ├── bl@1.2.1 
  │ └── end-of-stream@1.4.0 
  ├── v8-compile-cache@1.1.0 
  └─┬ validate-npm-package-license@3.0.1 
    ├─┬ spdx-correct@1.0.2 
    │ └── spdx-license-ids@1.2.2 
    └── spdx-expression-parse@1.0.4 
</msg>
<status status="PASS" endtime="20170907 23:47:51.442" starttime="20170907 23:47:51.441"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${npm_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170907 23:47:51.444" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170907 23:47:51.444" starttime="20170907 23:47:51.442"></status>
</kw>
<status status="PASS" endtime="20170907 23:47:51.444" starttime="20170907 23:45:05.642"></status>
</kw>
<status status="PASS" endtime="20170907 23:47:51.444" starttime="20170907 23:45:05.641"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd iexec-oracle/API &amp;&amp; ./node_modules/.bin/truffle test test/iexecoracleapi.js</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${truffletest_result}</var>
</assign>
<msg timestamp="20170907 23:47:51.445" level="INFO">Starting process:
cd iexec-oracle/API &amp;&amp; ./node_modules/.bin/truffle test test/iexecoracleapi.js</msg>
<msg timestamp="20170907 23:47:51.448" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170907 23:48:12.808" level="INFO">Process completed.</msg>
<msg timestamp="20170907 23:48:12.808" level="INFO">${truffletest_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170907 23:48:12.808" starttime="20170907 23:47:51.444"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stderr}</arg>
</arguments>
<msg timestamp="20170907 23:48:12.809" level="INFO"></msg>
<status status="PASS" endtime="20170907 23:48:12.809" starttime="20170907 23:48:12.808"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
</arguments>
<msg timestamp="20170907 23:48:12.810" level="INFO">Compiling ./contracts/HelloWorld.sol...
Compiling ./contracts/IexecOracle.sol...
Compiling ./contracts/IexecOracleAPI.sol...
Compiling ./contracts/Migrations.sol...
Compiling ./contracts/SafeMath.sol...

Compilation warnings encountered:

/home/vagrant/iexecdev/iexec-node/tests/rf/iexec-oracle/API/contracts/IexecOracle.sol:15:30: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (msg.sender != a) throw;
                             ^---^
,/home/vagrant/iexecdev/iexec-node/tests/rf/iexec-oracle/API/contracts/IexecOracle.sol:24:7: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
      string name;
      ^---------^
,/home/vagrant/iexecdev/iexec-node/tests/rf/iexec-oracle/API/contracts/IexecOracle.sol:27:7: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
      string stdout;
      ^-----------^
,/home/vagrant/iexecdev/iexec-node/tests/rf/iexec-oracle/API/contracts/IexecOracle.sol:28:7: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
      string stderr;
      ^-----------^
,/home/vagrant/iexecdev/iexec-node/tests/rf/iexec-oracle/API/contracts/IexecOracle.sol:123:21: Warning: Unused local variable
    function submit(string appName, string param) {// param = commandline
                    ^------------^
,/home/vagrant/iexecdev/iexec-node/tests/rf/iexec-oracle/API/contracts/IexecOracle.sol:127:28: Warning: Unused local variable
    function submitAndWait(string appName, string param, string pattern) {
                           ^------------^
,/home/vagrant/iexecdev/iexec-node/tests/rf/iexec-oracle/API/contracts/IexecOracle.sol:127:44: Warning: Unused local variable
    function submitAndWait(string appName, string param, string pattern) {
                                           ^----------^

IexecOracle deployed at address :0xde301ac26aa77a0447b0d1c5e9c9aa6e7f989bbc
HelloWorld deployed at address :0xb20c830b48941065104b37c28ce596c9e2a6f4f4

[0m[0m
[0m  Contract: IexecOracleAPI[0m
  [32m  ✓[0m[90m Test call registerSmartContractAndCreator with tx.origin = msg.sender[0m[31m (86ms)[0m
[0m    Test IexecOracle on IexecOracle well initialized[0m
    [32m  ✓[0m[90m Test Launch Event when call iexecRegister[0m[31m (319ms)[0m
[0m    Test Register function call then simulate bridge response[0m
TestRPC mode : Error: VM Exception. throw expected ?
    [32m  ✓[0m[90m Only bridge can call registerCallback fonction[0m[33m (44ms)[0m
    [32m  ✓[0m[90m Simulate bridge response OK and test event Register[0m[31m (400ms)[0m
    [32m  ✓[0m[90m Simulate bridge response KO and test event Register[0m[31m (503ms)[0m
    [32m  ✓[0m[90m Simulate bridge registerCallback and test event Register, then next registerCallback call do not generate event Register[0m[31m (149ms)[0m
[0m    Test IexecOracleAPI on IexecOracle well initialized[0m
    [32m  ✓[0m[90m Test creator and creator of IexecOracleAPI are set correctly in IexecOracle[0m
TestRPC mode : Error: VM Exception. throw expected ?
    [32m  ✓[0m[90m Cannot change creator in aIexecOracleInstance after first call by IexecOracleAPI constructor[0m[33m (58ms)[0m


[92m [0m[32m 8 passing[0m[90m (3s)[0m
</msg>
<status status="PASS" endtime="20170907 23:48:12.811" starttime="20170907 23:48:12.809"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${truffletest_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170907 23:48:12.811" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170907 23:48:12.811" starttime="20170907 23:48:12.811"></status>
</kw>
<status status="PASS" endtime="20170907 23:48:12.811" starttime="20170907 23:45:05.641"></status>
</kw>
<doc>call truffle test on a started testrpc and show the result here.</doc>
<tags>
<tag>Smart contract Tests</tag>
</tags>
<status status="PASS" endtime="20170907 23:48:12.811" critical="yes" starttime="20170907 23:45:05.640"></status>
</test>
<kw type="teardown" name="Stop Testrpc" library="ETHTestrpc">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${TESTRPC_PROCESS}</arg>
</arguments>
<msg timestamp="20170907 23:48:12.813" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20170907 23:48:12.916" level="INFO">Process completed.</msg>
<status status="PASS" endtime="20170907 23:48:12.916" starttime="20170907 23:48:12.813"></status>
</kw>
<status status="PASS" endtime="20170907 23:48:12.916" starttime="20170907 23:48:12.812"></status>
</kw>
<doc>All smart contract tests on testrpc</doc>
<status status="PASS" endtime="20170907 23:48:12.916" starttime="20170907 23:45:05.622"></status>
</suite>
<suite source="/home/vagrant/iexecdev/iexec-node/tests/rf/Tests/xwcommandsSuite.robot" id="s1-s5" name="xwcommandsSuite">
<kw type="setup" name="Prepare And Start XWtremWeb Server And XWtremWeb Worker" library="XWCommon">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${XW_FORCE_GIT_CLONE}' == 'true'</arg>
<arg>Git Clone XWtremWeb</arg>
</arguments>
<kw name="Git Clone XWtremWeb" library="XWCommon">
<kw name="Remove Directory" library="OperatingSystem">
<doc>Removes the directory pointed to by the given ``path``.</doc>
<arguments>
<arg>xtremweb-hep</arg>
<arg>recursive=true</arg>
</arguments>
<msg timestamp="20170907 23:48:36.886" html="yes" level="INFO">Removed directory '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170907 23:48:36.887" starttime="20170907 23:48:12.934"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>git clone ${XW_GIT_BRANCH}</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${git_result}</var>
</assign>
<msg timestamp="20170907 23:48:36.887" level="INFO">Starting process:
git clone https://github.com/iExecBlockchainComputing/xtremweb-hep.git</msg>
<msg timestamp="20170907 23:48:36.891" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170907 23:50:11.926" level="INFO">Process completed.</msg>
<msg timestamp="20170907 23:50:11.926" level="INFO">${git_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170907 23:50:11.926" starttime="20170907 23:48:36.887"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${git_result.stderr}</arg>
</arguments>
<msg timestamp="20170907 23:50:11.927" level="INFO">Cloning into 'xtremweb-hep'...
Checking out files:  11% (187/1618)   Checking out files:  12% (195/1618)   Checking out files:  13% (211/1618)   Checking out files:  14% (227/1618)   Checking out files:  14% (233/1618)   Checking out files:  15% (243/1618)   Checking out files:  16% (259/1618)   Checking out files:  17% (276/1618)   Checking out files:  18% (292/1618)   Checking out files:  19% (308/1618)   Checking out files:  20% (324/1618)   Checking out files:  21% (340/1618)   Checking out files:  22% (356/1618)   Checking out files:  22% (367/1618)   Checking out files:  23% (373/1618)   Checking out files:  23% (381/1618)   Checking out files:  24% (389/1618)   Checking out files:  24% (403/1618)   Checking out files:  25% (405/1618)   Checking out files:  25% (414/1618)   Checking out files:  26% (421/1618)   Checking out files:  26% (426/1618)   Checking out files:  27% (437/1618)   Checking out files:  27% (443/1618)   Checking out files:  28% (454/1618)   Checking out files:  29% (470/1618)   Checking out files:  30% (486/1618)   Checking out files:  30% (491/1618)   Checking out files:  31% (502/1618)   Checking out files:  32% (518/1618)   Checking out files:  32% (531/1618)   Checking out files:  33% (534/1618)   Checking out files:  34% (551/1618)   Checking out files:  34% (556/1618)   Checking out files:  35% (567/1618)   Checking out files:  35% (570/1618)   Checking out files:  36% (583/1618)   Checking out files:  37% (599/1618)   Checking out files:  38% (615/1618)   Checking out files:  39% (632/1618)   Checking out files:  40% (648/1618)   Checking out files:  40% (652/1618)   Checking out files:  41% (664/1618)   Checking out files:  42% (680/1618)   Checking out files:  42% (687/1618)   Checking out files:  43% (696/1618)   Checking out files:  44% (712/1618)   Checking out files:  45% (729/1618)   Checking out files:  46% (745/1618)   Checking out files:  46% (754/1618)   Checking out files:  47% (761/1618)   Checking out files:  48% (777/1618)   Checking out files:  48% (792/1618)   Checking out files:  49% (793/1618)   Checking out files:  50% (809/1618)   Checking out files:  51% (826/1618)   Checking out files:  51% (841/1618)   Checking out files:  52% (842/1618)   Checking out files:  53% (858/1618)   Checking out files:  53% (871/1618)   Checking out files:  54% (874/1618)   Checking out files:  55% (890/1618)   Checking out files:  55% (905/1618)   Checking out files:  56% (907/1618)   Checking out files:  57% (923/1618)   Checking out files:  57% (935/1618)   Checking out files:  58% (939/1618)   Checking out files:  59% (955/1618)   Checking out files:  60% (971/1618)   Checking out files:  60% (976/1618)   Checking out files:  61% (987/1618)   Checking out files:  62% (1004/1618)   Checking out files:  62% (1012/1618)   Checking out files:  63% (1020/1618)   Checking out files:  64% (1036/1618)   Checking out files:  65% (1052/1618)   Checking out files:  65% (1059/1618)   Checking out files:  66% (1068/1618)   Checking out files:  67% (1085/1618)   Checking out files:  67% (1095/1618)   Checking out files:  68% (1101/1618)   Checking out files:  69% (1117/1618)   Checking out files:  69% (1123/1618)   Checking out files:  70% (1133/1618)   Checking out files:  71% (1149/1618)   Checking out files:  72% (1165/1618)   Checking out files:  72% (1178/1618)   Checking out files:  73% (1182/1618)   Checking out files:  74% (1198/1618)   Checking out files:  74% (1210/1618)   Checking out files:  75% (1214/1618)   Checking out files:  76% (1230/1618)   Checking out files:  77% (1246/1618)   Checking out files:  77% (1248/1618)   Checking out files:  78% (1263/1618)   Checking out files:  78% (1277/1618)   Checking out files:  79% (1279/1618)   Checking out files:  80% (1295/1618)   Checking out files:  81% (1311/1618)   Checking out files:  81% (1314/1618)   Checking out files:  82% (1327/1618)   Checking out files:  83% (1343/1618)   Checking out files:  83% (1355/1618)   Checking out files:  84% (1360/1618)   Checking out files:  85% (1376/1618)   Checking out files:  85% (1390/1618)   Checking out files:  86% (1392/1618)   Checking out files:  87% (1408/1618)   Checking out files:  88% (1424/1618)   Checking out files:  88% (1434/1618)   Checking out files:  89% (1441/1618)   Checking out files:  90% (1457/1618)   Checking out files:  91% (1473/1618)   Checking out files:  92% (1489/1618)   Checking out files:  92% (1500/1618)   Checking out files:  93% (1505/1618)   Checking out files:  94% (1521/1618)   Checking out files:  95% (1538/1618)   Checking out files:  95% (1550/1618)   Checking out files:  96% (1554/1618)   Checking out files:  97% (1570/1618)   Checking out files:  98% (1586/1618)   Checking out files:  99% (1602/1618)   Checking out files:  99% (1617/1618)   Checking out files: 100% (1618/1618)   Checking out files: 100% (1618/1618), done.</msg>
<status status="PASS" endtime="20170907 23:50:11.928" starttime="20170907 23:50:11.927"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${git_result.stdout}</arg>
</arguments>
<msg timestamp="20170907 23:50:11.928" level="INFO"></msg>
<status status="PASS" endtime="20170907 23:50:11.928" starttime="20170907 23:50:11.928"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${git_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170907 23:50:11.929" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170907 23:50:11.929" starttime="20170907 23:50:11.928"></status>
</kw>
<status status="PASS" endtime="20170907 23:50:11.929" starttime="20170907 23:48:12.933"></status>
</kw>
<status status="PASS" endtime="20170907 23:50:11.929" starttime="20170907 23:48:12.932"></status>
</kw>
<kw name="Compile XWtremWeb" library="XWCommon">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd ${BUILD_PATH} &amp;&amp; make clean &amp;&amp; make</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${compile_result}</var>
</assign>
<msg timestamp="20170907 23:50:11.930" level="INFO">Starting process:
cd ./xtremweb-hep/build &amp;&amp; make clean &amp;&amp; make</msg>
<msg timestamp="20170907 23:50:11.935" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170907 23:51:08.869" level="INFO">Process completed.</msg>
<msg timestamp="20170907 23:51:08.870" level="INFO">${compile_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170907 23:51:08.870" starttime="20170907 23:50:11.930"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${compile_result.stderr}</arg>
</arguments>
<msg timestamp="20170907 23:51:08.872" level="INFO">     [copy] Warning: Could not find file /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/keystore/xwhepworker.keys to copy.
     [copy] Warning: Could not find file /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/keystore/xwhepclient.keys to copy.
     [copy] Warning: Could not find file /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/keystore/xwhepserver.keys to copy.</msg>
<status status="PASS" endtime="20170907 23:51:08.872" starttime="20170907 23:51:08.871"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${compile_result.stdout}</arg>
</arguments>
<msg timestamp="20170907 23:51:08.873" level="INFO">./build.sh -f build.xml clean 
Buildfile: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/build.xml

tstamp:
[echoproperties] #Ant properties
[echoproperties] #Thu Sep 07 23:50:12 UTC 2017
[echoproperties] v.branch=head
[echoproperties] v.build=201709072350
[echoproperties] v.major=10
[echoproperties] v.micro=0
[echoproperties] v.minor=6

version:

clean:
   [delete] Deleting: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/.build
     [exec] make[1]: Entering directory `/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/natif'
     [exec] rm -f XWInterruptsImpl.h PortMapper.h XWUtilImpl.h XWTracerImpl.h
     [exec] mkdir: cannot create directory ‘../../build/classes/obj/’: No such file or directory
     [exec] make[1]: Leaving directory `/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/natif'

BUILD SUCCESSFUL
Total time: 1 second
./build.sh distrib 
Buildfile: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/build.xml

tstamp:
[echoproperties] #Ant properties
[echoproperties] #Thu Sep 07 23:50:14 UTC 2017
[echoproperties] v.branch=head
[echoproperties] v.build=201709072350
[echoproperties] v.major=10
[echoproperties] v.micro=0
[echoproperties] v.minor=6

version:

configure:
     [echo] 
     [echo]       ant version = Apache Ant(TM) version 1.8.4 compiled on May 22 2012
     [echo] 
     [echo]       os         = Linux
     [echo]       os.arch    = amd64
     [echo]       target     = Linux
     [echo]       xwarch     = amd64
     [echo]       xwsuffix   = linux-amd64
     [echo]       debug      = true
     [echo]       debuglevel = source,lines
     [echo] 
     [echo]         cross=${cross.prefix}
     [echo]         target java home =${cross.java.home}
     [echo]     	target           =Linux
     [echo]     	xwversion=10.6.0

templates:
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common

prepare:
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes/obj
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes/obj/linux-amd64
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes/jni
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes/xwclasses
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/lib
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/doc
     [echo] 
     [echo]       classpath=/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/test:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/JOpenId-1.08.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/JSON-java.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/MinML.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/activation.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/antlr.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/attic-all-0.3.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/bcpkix-jdk15on-151.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/bcprov-jdk15on-151.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/bcprov-jdk16-140.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/commons-codec-1.3.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/commons-fileupload-1.2.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/commons-httpclient-3.0.1.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/commons-io-1.3.2.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/commons-logging-1.1.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/ibis-util-2.1.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/jcert.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/jetty-http-9.3.8.v20160314.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/jetty-io-9.3.8.v20160314.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/jetty-server-9.3.8.v20160314.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/jetty-util-9.3.8.v20160314.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/jose4j-0.5.5.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/junit-4.10.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/log4j-1.2.17.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/mail.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/mysql-connector-java-5.1.6-bin.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/scribejava-apis-3.3.1-SNAPSHOT.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/scribejava-core-3.3.1-SNAPSHOT.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/servlet-api-3.1.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/slf4j-api-1.7.2.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/slf4j-log4j12-1.7.2.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/smartsockets-1.4.jar
     [echo]     

common:
    [javac] Compiling 277 source files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/XWTools.java:61: warning: [deprecation] HTTPOpenIdHandler in xtremweb.dispatcher has been deprecated
    [javac] import xtremweb.dispatcher.HTTPOpenIdHandler;
    [javac]                           ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/security/ACLConnect.java:36: warning: AclEntryImpl is internal proprietary API and may be removed in a future release
    [javac] import sun.security.acl.AclEntryImpl;
    [javac]                        ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/security/ACLConnect.java:37: warning: AclImpl is internal proprietary API and may be removed in a future release
    [javac] import sun.security.acl.AclImpl;
    [javac]                        ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/security/ACLConnect.java:38: warning: PermissionImpl is internal proprietary API and may be removed in a future release
    [javac] import sun.security.acl.PermissionImpl;
    [javac]                        ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/security/ACLConnect.java:39: warning: PrincipalImpl is internal proprietary API and may be removed in a future release
    [javac] import sun.security.acl.PrincipalImpl;
    [javac]                        ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/communications/CommClient.java:870: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] 		return version(new XMLRPCCommandVersion(newURI()));
    [javac] 		                   ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/communications/CommClient.java:881: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] 	public Version version(final XMLRPCCommandVersion command)
    [javac] 	                             ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/DataInterface.java:625: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/communications/IdRpc.java:89: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] 		public XMLRPCCommandVersion newCommand(final URI uri, final UserInterface client, final Table obj)
    [javac] 		       ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/communications/IdRpc.java:91: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] 			return new XMLRPCCommandVersion(uri, client);
    [javac] 			           ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/communications/XMLRPCCommand.java:614: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] 			return new XMLRPCCommandVersion(input);
    [javac] 			           ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/AppInterface.java:1446: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/UserInterface.java:577: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/GroupInterface.java:319: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/HostInterface.java:1212: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/SessionInterface.java:264: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/TaskInterface.java:441: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/TraceInterface.java:348: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/UserGroupInterface.java:365: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/WorkInterface.java:933: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/AppType.java:263: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/CPUType.java:223: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/DataType.java:265: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/Executable.java:294: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/JobInterface.java:409: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/OSType.java:243: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/Status.java:245: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/UserRightsType.java:243: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/XWTools.java:805: warning: [deprecation] HTTPOpenIdHandler in xtremweb.dispatcher has been deprecated
    [javac] 		final Logger logger = new Logger(HTTPOpenIdHandler.class);
    [javac] 		                                 ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/XWTools.java:817: warning: BASE64Encoder is internal proprietary API and may be removed in a future release
    [javac] 			out.println(new sun.misc.BASE64Encoder().encode(cert.getEncoded()));
    [javac] 			                        ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/communications/HTTPClient.java:238: warning: [deprecation] Protocol(String,SecureProtocolSocketFactory,int) in Protocol has been deprecated
    [javac] 				xwssl = new Protocol(uri.getScheme(), new AuthSSLProtocolSocketFactory(uri.getScheme(), keyStore,
    [javac] 				        ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/dispatcher/Dispatcher.java:216: warning: [deprecation] HTTPOpenIdHandler in xtremweb.dispatcher has been deprecated
    [javac] 				HTTPOpenIdHandler.setCACertificateEntries(getConfig().getKeyStore());
    [javac] 				^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/security/ACLConnect.java:65: warning: PermissionImpl is internal proprietary API and may be removed in a future release
    [javac] 	private final Permission _connect = new PermissionImpl("CONNECT");
    [javac] 	                                        ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/security/ACLConnect.java:66: warning: PrincipalImpl is internal proprietary API and may be removed in a future release
    [javac] 	private final Principal _owner = new PrincipalImpl("localhost");
    [javac] 	                                     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/security/ACLConnect.java:67: warning: AclImpl is internal proprietary API and may be removed in a future release
    [javac] 	private Acl _acl = new AclImpl(_owner, "ConnectACL");
    [javac] 	                       ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/security/ACLConnect.java:80: warning: AclImpl is internal proprietary API and may be removed in a future release
    [javac] 		_acl = new AclImpl(_owner, "ConnectACL");
    [javac] 		           ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/security/ACLConnect.java:81: warning: AclEntryImpl is internal proprietary API and may be removed in a future release
    [javac] 		final AclEntry allowConnections = new AclEntryImpl(_owner);
    [javac] 		                                      ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/security/ACLConnect.java:104: warning: PrincipalImpl is internal proprietary API and may be removed in a future release
    [javac] 			final Principal prince = new PrincipalImpl(regexp);
    [javac] 			                             ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/security/ACLConnect.java:105: warning: AclEntryImpl is internal proprietary API and may be removed in a future release
    [javac] 			final AclEntry entry = new AclEntryImpl(prince);
    [javac] 			                           ^
    [javac] Note: Some input files use unchecked or unsafe operations.
    [javac] Note: Recompile with -Xlint:unchecked for details.
    [javac] 39 warnings
    [javac] Creating empty /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes/database/package-info.class

obj:

iface:

communications:
    [javac] Compiling 60 source files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/communications/IdRpc.java:89: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] 		public XMLRPCCommandVersion newCommand(final URI uri, final UserInterface client, final Table obj)
    [javac] 		       ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/communications/IdRpc.java:91: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] 			return new XMLRPCCommandVersion(uri, client);
    [javac] 			           ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/communications/XMLRPCCommand.java:614: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] 			return new XMLRPCCommandVersion(input);
    [javac] 			           ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/communications/CommClient.java:870: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] 		return version(new XMLRPCCommandVersion(newURI()));
    [javac] 		                   ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/communications/CommClient.java:881: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] 	public Version version(final XMLRPCCommandVersion command)
    [javac] 	                             ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/communications/HTTPClient.java:238: warning: [deprecation] Protocol(String,SecureProtocolSocketFactory,int) in Protocol has been deprecated
    [javac] 				xwssl = new Protocol(uri.getScheme(), new AuthSSLProtocolSocketFactory(uri.getScheme(), keyStore,
    [javac] 				        ^
    [javac] Note: Some input files use unchecked or unsafe operations.
    [javac] Note: Recompile with -Xlint:unchecked for details.
    [javac] 6 warnings

services:
    [javac] Compiling 7 source files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes

archdep:
    [javac] Compiling 20 source files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes

upgrade:

worker:
    [javac] Compiling 42 source files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes
    [javac] Note: Some input files use unchecked or unsafe operations.
    [javac] Note: Recompile with -Xlint:unchecked for details.

dispatcher:
    [javac] Compiling 14 source files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/dispatcher/Dispatcher.java:216: warning: [deprecation] HTTPOpenIdHandler in xtremweb.dispatcher has been deprecated
    [javac] 				HTTPOpenIdHandler.setCACertificateEntries(getConfig().getKeyStore());
    [javac] 				^
    [javac] Note: Some input files use unchecked or unsafe operations.
    [javac] Note: Recompile with -Xlint:unchecked for details.
    [javac] 1 warning

worker.manifest:

jni:
     [copy] Copying 10 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/natif
     [exec] make[1]: Entering directory `/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/natif'
     [exec] gcc -c  -fPIC -g -Wall -I'/usr/lib/jvm/java-8-openjdk-amd64/include/linux' -fPIC -I'/usr/lib/jvm/java-8-openjdk-amd64/include' -o ../../build/classes/obj/linux-amd64/XWUtilUnix.o XWUtilUnix.c
     [exec] mkdir: cannot create directory ‘../../build/classes/obj/linux-amd64’: File exists
     [exec] gcc -shared  -fPIC  -L'/usr/lib/jvm/java-8-openjdk-amd64/lib' -o ../../build/classes/obj/linux-amd64/XWUtil.jni ../../build/classes/obj/linux-amd64/XWUtilUnix.o 
     [exec] cp ../../build/classes/obj/linux-amd64/XWUtil.jni ../../build/classes/jni/XWUtil.jni.10.6.0.linux-amd64
     [exec] gcc -c  -fPIC -g -Wall -I'/usr/lib/jvm/java-8-openjdk-amd64/include/linux' -fPIC -I'/usr/lib/jvm/java-8-openjdk-amd64/include' -o ../../build/classes/obj/linux-amd64/XWTracerUnixlib.o XWTracerUnixlib.c
     [exec] XWTracerUnixlib.c: In function ‘processCpustate’:
     [exec] XWTracerUnixlib.c:194:19: warning: variable ‘relative_jiffies’ set but not used [-Wunused-but-set-variable]
     [exec]      idle_jiffies, relative_jiffies, absolute_jiffies;
     [exec]                    ^
     [exec] XWTracerUnixlib.c:191:49: warning: variable ‘cpu_idle’ set but not used [-Wunused-but-set-variable]
     [exec]    static double cpu_user, cpu_nice, cpu_system, cpu_idle;
     [exec]                                                  ^
     [exec] XWTracerUnixlib.c:191:37: warning: variable ‘cpu_system’ set but not used [-Wunused-but-set-variable]
     [exec]    static double cpu_user, cpu_nice, cpu_system, cpu_idle;
     [exec]                                      ^
     [exec] gcc -c  -fPIC -g -Wall -I'/usr/lib/jvm/java-8-openjdk-amd64/include/linux' -fPIC -I'/usr/lib/jvm/java-8-openjdk-amd64/include' -o ../../build/classes/obj/linux-amd64/XWTracerUnixImpl.o XWTracerUnixImpl.c
     [exec] XWTracerUnixlib.c:191:27: warning: variable ‘cpu_nice’ set but not used [-Wunused-but-set-variable]
     [exec]    static double cpu_user, cpu_nice, cpu_system, cpu_idle;
     [exec]                            ^
     [exec] XWTracerUnixlib.c:191:17: warning: variable ‘cpu_user’ set but not used [-Wunused-but-set-variable]
     [exec]    static double cpu_user, cpu_nice, cpu_system, cpu_idle;
     [exec]                  ^
     [exec] XWTracerUnixlib.c: In function ‘writeState’:
     [exec] XWTracerUnixlib.c:589:7: warning: variable ‘test’ set but not used [-Wunused-but-set-variable]
     [exec]    int test;
     [exec]        ^
     [exec] XWTracerUnixlib.c:587:8: warning: variable ‘k’ set but not used [-Wunused-but-set-variable]
     [exec]    char k[1];
     [exec]         ^
     [exec] XWTracerUnixlib.c:584:9: warning: variable ‘c’ set but not used [-Wunused-but-set-variable]
     [exec]    char* c;
     [exec]          ^
     [exec] gcc -shared  -fPIC  -L'/usr/lib/jvm/java-8-openjdk-amd64/lib' -o ../../build/classes/obj/linux-amd64/XwTracer.jni ../../build/classes/obj/linux-amd64/XWTracerUnixlib.o ../../build/classes/obj/linux-amd64/XWTracerUnixImpl.o 
     [exec] PortMapper.c: In function ‘getport’:
     [exec] PortMapper.c:29:2: warning: implicit declaration of function ‘pmap_getport’ [-Wimplicit-function-declaration]
     [exec]   return pmap_getport (&amp;addr, prog, version, protocol);
     [exec]   ^
     [exec] cp ../../build/classes/obj/linux-amd64/XwTracer.jni ../../build/classes/jni/XwTracer.jni.10.6.0.linux-amd64
     [exec] gcc -c  -fPIC -g -Wall -I'/usr/lib/jvm/java-8-openjdk-amd64/include/linux' -fPIC -I'/usr/lib/jvm/java-8-openjdk-amd64/include' -o ../../build/classes/obj/linux-amd64/PortMapper.o PortMapper.c
     [exec] gcc -shared  -fPIC  -L'/usr/lib/jvm/java-8-openjdk-amd64/lib' -o ../../build/classes/obj/linux-amd64/PortMapper.jni ../../build/classes/obj/linux-amd64/PortMapper.o 
     [exec] cp ../../build/classes/obj/linux-amd64/PortMapper.jni ../../build/classes/jni/PortMapper.jni.10.6.0.linux-amd64
     [exec] make[1]: Leaving directory `/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/natif'

Worker:
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes/data
     [copy] Copying 23 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes/data

tests:
    [javac] Compiling 50 source files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/test/xtremweb/communications/XMLRPCCommandVersionTest.java:29: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] import xtremweb.communications.XMLRPCCommandVersion;
    [javac]                               ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/test/xtremweb/communications/XMLRPCCommandVersionTest.java:47: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] 			setCmd(new XMLRPCCommandVersion());
    [javac] 			           ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/test/xtremweb/communications/XMLRPCCommandVersionTest.java:48: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] 			setCmd2(new XMLRPCCommandVersion());
    [javac] 			            ^
    [javac] Note: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/test/xtremweb/common/XMLHashtableTest.java uses unchecked or unsafe operations.
    [javac] Note: Recompile with -Xlint:unchecked for details.
    [javac] 3 warnings

client:

allservices:

Dispatcher:
     [echo]  
     [echo] 	JAR JAR JAR
     [echo] 	basedir="/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes"
     [echo] 	jarfile="/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/lib/xtremweb.jar"
     [echo] 	manifest="/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/misc/worker.manifest"
     [echo]       
      [jar] Building jar: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/lib/xtremweb.jar

rpcv:

all:

copylibs:
     [copy] Copying 31 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/lib

distrib:

BUILD SUCCESSFUL
Total time: 33 seconds
./build.sh -f install.xml install 
Buildfile: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/install.xml

tstamp:

version:

prepare:

configure:
     [echo] 
     [echo] user  login : ${xtremweb.admin.login} ${xtremweb.admin.password}
     [echo] admin login : ${xtremweb.admin.login} ${xtremweb.admin.password}
     [echo] DB su login :  
     [echo] ENGINE : ""
     [echo] launcher.url = http://nohost/
     [echo] system.user  = xwhep
     [echo] xwsuffix=LINUX-AMD64
     [echo] xwarch=AMD64
     [echo] target.os=Linux
     [echo] cross.prefix=${cross.prefix}
     [echo] cross.java.home=${cross.java.home}
     [echo] version=10.6.0

installConfig:
     [echo] 
     [echo]        ==&gt; version    = 10.6.0
     [echo]        ==&gt; dist.dir   = /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0
     [echo]        ==&gt; installDir = /opt/xwhep-10.6.0
     [echo]     

installFiles:
     [copy] Copying 98 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/doc
     [copy] Copying 17 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/docker
     [copy] Copying 31 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/lib
     [copy] Copying 31 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.server/installer/PckRoot/private/etc/xwhep.server/lib
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf
     [echo] 
     [echo]       xtremweb.admin.login=${xtremweb.admin.login}
     [echo]       xtremweb.admin.password=${xtremweb.admin.password}
     [echo]     
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf
     [echo] 
     [echo]       xtremweb.worker.login=${xtremweb.worker.login}
     [echo]       xtremweb.worker.password=${xtremweb.worker.password}
     [echo]     
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/keystore
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.worker/installer/PckRoot/private/etc/xwhep.worker/conf
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.worker/installer/PckRoot/Applications/xwhep.worker
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.worker/installer/PckRoot/private/etc/xwhep.worker/conf
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.vworker/installer/PckRoot/Applications/xwhep.vworker
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.vworker/installer/PckRoot/private/etc/xwhep.vworker/bin
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.client/installer/PckRoot/Applications/xwhep.client/conf
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.server/installer/PckRoot/private/etc/xwhep.server/conf
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.server/installer/PckRoot/Applications/xwhep.server/doc
     [copy] Copying 98 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.server/installer/PckRoot/Applications/xwhep.server/doc
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.client/conf
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.client/innoSetup/client/bin
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.client/innoSetup/client/conf
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.client/innoSetup/client/doc
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.client/innoSetup/client/keystore
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.client/innoSetup/client/lib
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.client/innoSetup/client/conf
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/conf
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/innoSetup/worker/bin
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/innoSetup/worker/conf
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/innoSetup/worker/doc
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/innoSetup/worker/keystore
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/innoSetup/worker/lib
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/innoSetup/worker/misc
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/innoSetup/worker/conf
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/conf
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/innoSetup/worker/conf
     [copy] Copying 2 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/lib
     [copy] Copying 2 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/innoSetup/worker/lib
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/innoSetup/worker/lib
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/innoSetup/worker/lib
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/innoSetup/worker/misc
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/innoSetup/worker/doc
     [copy] Copying 8 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/bin
     [copy] Copying 5 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/innoSetup/worker/bin
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/doc
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.server/conf
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.server/innoSetup/server/bin
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.server/innoSetup/server/conf
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.server/innoSetup/server/doc
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.server/innoSetup/server/keystore
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.server/innoSetup/server/lib
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.server/innoSetup/server/misc
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.server/innoSetup/server/conf
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.server/conf
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.server/innoSetup/server/conf
     [copy] Copying 2 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.server/lib
     [copy] Copying 2 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.server/innoSetup/server/lib
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.server/innoSetup/server/misc
     [copy] Copying 2 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.server/innoSetup/server/bin

setupScripts:
     [copy] Copying 266 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/db-maintenance

installScripts:

createDownload:
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.client/installer/PckRoot/Applications/xwhep.client/lib
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.client/installer/PckRoot/Applications/xwhep.client/lib
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/db-maintenance
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/db-maintenance
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin
     [copy] Copying 98 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/doc/xwhep.client/doc
[jarbundler] Creating application bundle: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/xwhep.client.app
     [copy] Copying 5 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/xwhep.client.app
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.bridgedgsg
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.client
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.server
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.server.conf
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.worker
     [copy] Copying 20 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.worker
     [copy] Copying 17 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.vworker
     [copy] Copying 12 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.client
     [copy] Copying 19 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.server
     [copy] Copying 3 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/innoSetup
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker
     [copy] Copying 3 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.server/innoSetup
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.server
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.server.conf
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.server/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.server/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.server/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.server/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.server/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.server/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.server/DEBIAN
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.server.conf/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.server.conf/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.server.conf/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.server.conf/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.server.conf/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.server.conf/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.server.conf/DEBIAN
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.bridgedgsg/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.bridgedgsg
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.bridgedgsg/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.bridgedgsg/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.bridgedgsg/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.bridgedgsg/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.bridgedgsg/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.bridgedgsg/DEBIAN
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.client/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.client
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.client/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.client/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.client/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.client/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.client/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.client/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.worker
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.worker/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.worker/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.worker/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.worker/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.worker/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.worker/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.worker/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.client/innoSetup/client/lib
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.client/innoSetup/client/lib
     [copy] Copying 11 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0
     [copy] Copying 6 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/apptest

ganglia:

install:
     [echo] 
     [echo]       Installation done
     [echo]     

BUILD SUCCESSFUL
Total time: 21 seconds</msg>
<status status="PASS" endtime="20170907 23:51:08.873" starttime="20170907 23:51:08.872"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${compile_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170907 23:51:08.874" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170907 23:51:08.874" starttime="20170907 23:51:08.874"></status>
</kw>
<kw name="Get Lines Containing String" library="String">
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<arguments>
<arg>${compile_result.stdout}</arg>
<arg>BUILD SUCCESSFUL</arg>
</arguments>
<assign>
<var>${extract_build_successful}</var>
</assign>
<msg timestamp="20170907 23:51:08.875" level="INFO">3 out of 516 lines matched</msg>
<msg timestamp="20170907 23:51:08.875" level="INFO">${extract_build_successful} = BUILD SUCCESSFUL
BUILD SUCCESSFUL
BUILD SUCCESSFUL</msg>
<status status="PASS" endtime="20170907 23:51:08.876" starttime="20170907 23:51:08.874"></status>
</kw>
<kw name="Get Line Count" library="String">
<doc>Returns and logs the number of lines in the given string.</doc>
<arguments>
<arg>${extract_build_successful}</arg>
</arguments>
<assign>
<var>${line_count_build_successful}</var>
</assign>
<msg timestamp="20170907 23:51:08.876" level="INFO">3 lines</msg>
<msg timestamp="20170907 23:51:08.876" level="INFO">${line_count_build_successful} = 3</msg>
<status status="PASS" endtime="20170907 23:51:08.876" starttime="20170907 23:51:08.876"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${line_count_build_successful}</arg>
<arg>3</arg>
</arguments>
<msg timestamp="20170907 23:51:08.877" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170907 23:51:08.877" starttime="20170907 23:51:08.877"></status>
</kw>
<status status="PASS" endtime="20170907 23:51:08.877" starttime="20170907 23:50:11.930"></status>
</kw>
<kw name="Install XWtremWeb" library="XWCommon">
<kw name="List Directories In Directory" library="OperatingSystem">
<doc>Wrapper for `List Directory` that returns only directories.</doc>
<arguments>
<arg>${DIST_PATH}</arg>
<arg>xwhep-*</arg>
<arg>absolute</arg>
</arguments>
<assign>
<var>@{list_directories_dist_path}</var>
</assign>
<msg timestamp="20170907 23:51:08.878" html="yes" level="INFO">Listing contents of directory '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist&lt;/a&gt;'.</msg>
<msg timestamp="20170907 23:51:08.879" level="INFO">1 directory:
/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0</msg>
<msg timestamp="20170907 23:51:08.880" level="INFO">@{list_directories_dist_path} = [ /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0 ]</msg>
<status status="PASS" endtime="20170907 23:51:08.880" starttime="20170907 23:51:08.878"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>@{list_directories_dist_path}[0]</arg>
</arguments>
<msg timestamp="20170907 23:51:08.880" level="INFO">/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0</msg>
<status status="PASS" endtime="20170907 23:51:08.880" starttime="20170907 23:51:08.880"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}</arg>
<arg>@{list_directories_dist_path}[0]</arg>
</arguments>
<msg timestamp="20170907 23:51:08.881" level="INFO">${DIST_XWHEP_PATH} = /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0</msg>
<status status="PASS" endtime="20170907 23:51:08.881" starttime="20170907 23:51:08.881"></status>
</kw>
<kw name="Directory Should Exist" library="OperatingSystem">
<doc>Fails unless the given path points to an existing directory.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}</arg>
</arguments>
<msg timestamp="20170907 23:51:08.882" html="yes" level="INFO">Directory '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0&lt;/a&gt;' exists.</msg>
<status status="PASS" endtime="20170907 23:51:08.882" starttime="20170907 23:51:08.881"></status>
</kw>
<kw name="Create XWCONFIGURE.VALUES FILE" library="XWCommon">
<arguments>
<arg>${DIST_XWHEP_PATH}</arg>
</arguments>
<kw name="Directory Should Exist" library="OperatingSystem">
<doc>Fails unless the given path points to an existing directory.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf</arg>
</arguments>
<msg timestamp="20170907 23:51:08.883" html="yes" level="INFO">Directory '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf&lt;/a&gt;' exists.</msg>
<status status="PASS" endtime="20170907 23:51:08.883" starttime="20170907 23:51:08.883"></status>
</kw>
<kw name="Remove File" library="OperatingSystem">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
</arguments>
<msg timestamp="20170907 23:51:08.884" html="yes" level="INFO">File '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;' does not exist.</msg>
<status status="PASS" endtime="20170907 23:51:08.884" starttime="20170907 23:51:08.883"></status>
</kw>
<kw name="Create File" library="OperatingSystem">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
</arguments>
<msg timestamp="20170907 23:51:08.886" html="yes" level="INFO">Created file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170907 23:51:08.886" starttime="20170907 23:51:08.885"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>XWUSER='${XWCONFIGURE.VALUES.XWUSER}'\n</arg>
</arguments>
<msg timestamp="20170907 23:51:08.891" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170907 23:51:08.891" starttime="20170907 23:51:08.886"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>DBVENDOR='${XWCONFIGURE.VALUES.DBVENDOR}'\n</arg>
</arguments>
<msg timestamp="20170907 23:51:08.895" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170907 23:51:08.896" starttime="20170907 23:51:08.891"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>DBENGINE='${XWCONFIGURE.VALUES.DBENGINE}'\n</arg>
</arguments>
<msg timestamp="20170907 23:51:08.898" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170907 23:51:08.898" starttime="20170907 23:51:08.896"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>DBHOST='${XWCONFIGURE.VALUES.DBHOST}'\n</arg>
</arguments>
<msg timestamp="20170907 23:51:08.904" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170907 23:51:08.904" starttime="20170907 23:51:08.898"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>DBADMINLOGIN='${XWCONFIGURE.VALUES.DBADMINLOGIN}'\n</arg>
</arguments>
<msg timestamp="20170907 23:51:08.907" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170907 23:51:08.908" starttime="20170907 23:51:08.904"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>DBADMINPASSWORD='${XWCONFIGURE.VALUES.DBADMINPASSWORD}'\n</arg>
</arguments>
<msg timestamp="20170907 23:51:08.911" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170907 23:51:08.911" starttime="20170907 23:51:08.908"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>DBNAME='${XWCONFIGURE.VALUES.DBNAME}'\n</arg>
</arguments>
<msg timestamp="20170907 23:51:08.913" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170907 23:51:08.914" starttime="20170907 23:51:08.912"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>DBUSERLOGIN='${XWCONFIGURE.VALUES.DBUSERLOGIN}'\n</arg>
</arguments>
<msg timestamp="20170907 23:51:08.916" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170907 23:51:08.916" starttime="20170907 23:51:08.914"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>DBUSERPASSWORD='${XWCONFIGURE.VALUES.DBUSERPASSWORD}'\n</arg>
</arguments>
<msg timestamp="20170907 23:51:08.917" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170907 23:51:08.918" starttime="20170907 23:51:08.916"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>XWADMINLOGIN='${XWCONFIGURE.VALUES.XWADMINLOGIN}'\n</arg>
</arguments>
<msg timestamp="20170907 23:51:08.919" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170907 23:51:08.920" starttime="20170907 23:51:08.918"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>XWADMINPASSWORD='${XWCONFIGURE.VALUES.XWADMINPASSWORD}'\n</arg>
</arguments>
<msg timestamp="20170907 23:51:08.921" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170907 23:51:08.921" starttime="20170907 23:51:08.920"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>XWWORKERLOGIN='${XWCONFIGURE.VALUES.XWWORKERLOGIN}'\n</arg>
</arguments>
<msg timestamp="20170907 23:51:08.923" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170907 23:51:08.923" starttime="20170907 23:51:08.922"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>XWWORKERPASSWORD='${XWCONFIGURE.VALUES.XWWORKERPASSWORD}'\n</arg>
</arguments>
<msg timestamp="20170907 23:51:08.927" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170907 23:51:08.928" starttime="20170907 23:51:08.924"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>XWSERVER='${XWCONFIGURE.VALUES.XWSERVER}'\n</arg>
</arguments>
<msg timestamp="20170907 23:51:08.929" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170907 23:51:08.929" starttime="20170907 23:51:08.928"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>CERTCN='${XWCONFIGURE.VALUES.CERTCN}'\n</arg>
</arguments>
<msg timestamp="20170907 23:51:08.931" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170907 23:51:08.931" starttime="20170907 23:51:08.930"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>CERTOU='${XWCONFIGURE.VALUES.CERTOU}'\n</arg>
</arguments>
<msg timestamp="20170907 23:51:08.933" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170907 23:51:08.933" starttime="20170907 23:51:08.931"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>CERTO='${XWCONFIGURE.VALUES.CERTO}'\n</arg>
</arguments>
<msg timestamp="20170907 23:51:08.935" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170907 23:51:08.935" starttime="20170907 23:51:08.933"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>CERTL='${XWCONFIGURE.VALUES.CERTL}'\n</arg>
</arguments>
<msg timestamp="20170907 23:51:09.076" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170907 23:51:09.076" starttime="20170907 23:51:08.935"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>CERTC='${XWCONFIGURE.VALUES.CERTC}'\n</arg>
</arguments>
<msg timestamp="20170907 23:51:09.078" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170907 23:51:09.078" starttime="20170907 23:51:09.076"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>CERTC='${XWCONFIGURE.VALUES.CERTC}'\n</arg>
</arguments>
<msg timestamp="20170907 23:51:09.080" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170907 23:51:09.080" starttime="20170907 23:51:09.078"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>SSLKEYPASSPHRASE='${XWCONFIGURE.VALUES.SSLKEYPASSPHRASE}'\n</arg>
</arguments>
<msg timestamp="20170907 23:51:09.082" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170907 23:51:09.082" starttime="20170907 23:51:09.080"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>SSLKEYSERVERPASSWORD='${XWCONFIGURE.VALUES.SSLKEYSERVERPASSWORD}'\n</arg>
</arguments>
<msg timestamp="20170907 23:51:09.084" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170907 23:51:09.084" starttime="20170907 23:51:09.082"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>SSLKEYWORKERPASSWORD='${XWCONFIGURE.VALUES.SSLKEYWORKERPASSWORD}'\n</arg>
</arguments>
<msg timestamp="20170907 23:51:09.086" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170907 23:51:09.086" starttime="20170907 23:51:09.084"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>SSLKEYCLIENTPASSWORD='${XWCONFIGURE.VALUES.SSLKEYCLIENTPASSWORD}'\n</arg>
</arguments>
<msg timestamp="20170907 23:51:09.087" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170907 23:51:09.087" starttime="20170907 23:51:09.086"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>X509CERTDIR='${XWCONFIGURE.VALUES.X509CERTDIR}'\n</arg>
</arguments>
<msg timestamp="20170907 23:51:09.089" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170907 23:51:09.089" starttime="20170907 23:51:09.088"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>USERCERTDIR='${XWCONFIGURE.VALUES.USERCERTDIR}'\n</arg>
</arguments>
<msg timestamp="20170907 23:51:09.091" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170907 23:51:09.091" starttime="20170907 23:51:09.089"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>XWUPGRADEURL='${XWCONFIGURE.VALUES.XWUPGRADEURL}'\n</arg>
</arguments>
<msg timestamp="20170907 23:51:09.093" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170907 23:51:09.093" starttime="20170907 23:51:09.091"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>HTTPSPORT='${XWCONFIGURE.VALUES.HTTPSPORT}'\n</arg>
</arguments>
<msg timestamp="20170907 23:51:09.095" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170907 23:51:09.095" starttime="20170907 23:51:09.093"></status>
</kw>
<kw name="Log File" library="OperatingSystem">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
</arguments>
<msg timestamp="20170907 23:51:09.096" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<msg timestamp="20170907 23:51:09.096" level="INFO">XWUSER='root'
DBVENDOR='mysql'
DBENGINE='InnoDB'
DBHOST='localhost'
DBADMINLOGIN='root'
DBADMINPASSWORD='root'
DBNAME='xtremweb'
DBUSERLOGIN='xwuser'
DBUSERPASSWORD='xwuser'
XWADMINLOGIN='admin'
XWADMINPASSWORD='admin'
XWWORKERLOGIN='worker'
XWWORKERPASSWORD='worker'
XWSERVER='localhost'
CERTCN='localhost'
CERTOU='MrRobotFramework'
CERTO='MrRobotFramework'
CERTL='MrRobotFramework'
CERTC='fr'
CERTC='fr'
SSLKEYPASSPHRASE='MrRobotFramework'
SSLKEYSERVERPASSWORD='MrRobotFramework'
SSLKEYWORKERPASSWORD='MrRobotFramework'
SSLKEYCLIENTPASSWORD='MrRobotFramework'
X509CERTDIR='/tmp/castore'
USERCERTDIR=''
XWUPGRADEURL='http://localhost:8080/somewhere/xtremweb.jar'
HTTPSPORT='9443'
</msg>
<status status="PASS" endtime="20170907 23:51:09.097" starttime="20170907 23:51:09.095"></status>
</kw>
<status status="PASS" endtime="20170907 23:51:09.097" starttime="20170907 23:51:08.882"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd ${DIST_XWHEP_PATH} &amp;&amp; ./bin/xwconfigure --yes --nopkg --rmdb</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${install_result}</var>
</assign>
<msg timestamp="20170907 23:51:09.098" level="INFO">Starting process:
cd /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0 &amp;&amp; ./bin/xwconfigure --yes --nopkg --rmdb</msg>
<msg timestamp="20170907 23:51:09.103" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170907 23:52:02.384" level="INFO">Process completed.</msg>
<msg timestamp="20170907 23:52:02.384" level="INFO">${install_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170907 23:52:02.384" starttime="20170907 23:51:09.097"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${install_result.stdout}</arg>
</arguments>
<msg timestamp="20170907 23:52:02.385" level="INFO">
--------------------------------------------------
         XtremWeb-HEP 10.6.0 
         XWConfigurator

This script helps to configure an XtremWeb-HEP deployment 
--------------------------------------------------

This script aims to :
 - install a new database: Since 9.1. MySQL (http://www.mysql.com/) only is supported
 - creates electronic keys : 
   * server private key
   * client key store including server public key
   * worker key store including server public key
 - prepare installers
   * Win32 InnoSetup project (http://www.jrsoftware.org/isinfo.php)
   * Mac OS X Package Maker projects (http:/www.apple.com)
   * Linux RPM (http://www.rpm.org)
   * Linux Debian package (http://www.debian.org)

In order to complete configuration, several informations are needed :
 -1- MySQL administrator account (login and password)
     =&gt; If you don't know it, please ask your system administrator
 -1.1- Database server, if using MySQL
     =&gt; The name or IP address of your MySQL server
 -1.2- Database name
     =&gt; If you don't have a valid MySQL administrator account, you won't be able to perform this
     =&gt; In such a case, please ask your system administrator to create one new empty database for us
 -1.3- Database user (login and password), if using MySQL
     =&gt; This account must have insert/update/delete privileges to the previous database
     =&gt; This account will be used by the XW server to access database
     =&gt; If you don't have a valid MySQL administrator account, you won't be able to perform this
     =&gt; In such a case, please ask your system administrator to create one for you
 -2- Electronic key passphrase
     =&gt; This is free and up to you
 -3- Electronic key password for the server
     =&gt; This is free and up to you
 -4- Electronic key password for the worker
     =&gt; This is free and up to you
 -5- Electronic key password for the client
     =&gt; This is free and up to you

All informations are stored in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values
So that, you can stop this script when you want, and don't have to re-enter all informations

To reset any variable, edit or erase /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values

You should be aware that /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values stores some critical informations!!!

-----------------------------

DB vendor set to 'mysql'
DB engine set to 'InnoDB'
***************************************
 No electronic key found               
 Will generate self signed certificate 
***************************************
Upgrade URL is localhost : I guess this is for testing only...
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Can't download xtremweb.jar from 'http://localhost:8080/somewhere/xtremweb.jar'
You will have to ensure that xtremweb.jar can be downloaded from 'http://localhost:8080/somewhere/xtremweb.jar'
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

You entered :
**** Account to run the middleware : 
     USER                 = 'root'
**** Database configuration : 
     DBVENDOR             = 'mysql'
     DBENGINE             = 'InnoDB'
     DBHOST               = 'localhost'
     DBNAME               = 'xtremweb'
     DBADMINLOGIN         = 'root'
     DBADMINPASSWORD      = 'root'
     DBUSERLOGIN          = 'xwuser'
     DBUSERPASSWORD       = 'xwuser'
**** XtremWeb-HEP administrator client configuration : 
     XWADMINLOGIN         = 'admin'
     XWADMINPASSWORD      = 'admin'
**** XtremWeb-HEP public worker configuration : 
     XWWORKERLOGIN        = 'worker'
     XWWORKERPASSWORD     = 'worker'
**** XtremWeb-HEP server configuration : 
     XWSERVER             = 'localhost'
     XWUPGRADEURL         = 'http://localhost:8080/somewhere/xtremweb.jar'
**** CA certificates path : 
     X509CERTDIR          = '/tmp/castore'
**** Certificate configuration : 
     Keys found           = ''
     SSLKEYPASSPHRASE     = 'MrRobotFramework'
     SSLKEYCLIENTPASSWORD = 'MrRobotFramework'
     SSLKEYSERVERPASSWORD = 'MrRobotFramework'
     SSLKEYWORKERPASSWORD = 'MrRobotFramework'
     Common Name          = 'localhost'
     Organisation Unit    = 'MrRobotFramework'
     Organization Name    = 'MrRobotFramework'
     Locality Name        = 'MrRobotFramework'
     Country              = 'fr'

Database schema 'xtremweb' exists : DB reset forced
Resetting database schema 'xtremweb'
Preparing database script............Done
Preparing database schema 'xtremweb'
DB engine for 'xtremweb' is InnoDB :  Creating foreign keys for live tables ...
Creating DB triggers using xwhep-core-tables-create-triggers-for-data-coming-from-8.sql ...

Table "users"

Table "hosts"

Table "datas"

Table "works"

Table "tasks"

Table "apps"
Creating DB triggers using xwhep-core-tables-create-triggers-for-history-coming-from-8.sql ...

Table "users_history"

Table "hosts_history"

Table "datas_history"

Table "works_history"

Table "tasks_history"

Table "apps_history"
Create the SQL script for the creation of DB views in the current schema ...
Create the SQL script for the creation of DB users views in the current schema ...
Creating DB views using xwhep-core-tables-create-views-for-tables.sql ...
Creating DB views using xwhep-core-tables-create-users-views.sql ...
Creating DB views using xwhep-core-tables-create-views-for-sessions-and-groups.sql ...
Creating DB views using xwhep-core-tables-create-views-for-relationships.sql ...
Creating DB views using xwhep-core-tables-create-views-for-offering-and-billing.sql ...
Creating DB views using xwhep-core-tables-create-views-hosts-matching-works.sql ...
Granting access to DB schema 'xtremweb' ...
Database schema 'xtremweb' : checking compliance to '05.7.3'
Database schema 'xtremweb' : is compliant to 05.7.3
Database schema 'xtremweb' : checking compliance to '05.8.0'
Database schema 'xtremweb' : is compliant to 05.8.0
Database schema 'xtremweb' : checking compliance to '06.0.1'
Database schema 'xtremweb' : is compliant to 06.0.1
Database schema 'xtremweb' : checking compliance to '07.0.0'
Database schema 'xtremweb' : is compliant to 07.0.0
Database schema 'xtremweb' : checking compliance to '07.2.0'
Database schema 'xtremweb' : is compliant to 07.2.0
Database schema 'xtremweb' : checking compliance to '07.4.1'
Database schema 'xtremweb' : is compliant to 07.4.1
Database schema 'xtremweb' : checking compliance to '07.5.0'
Database schema 'xtremweb' : is compliant to 07.5.0
Database schema 'xtremweb' : checking compliance to '08.0.0'
Database schema 'xtremweb' : is compliant to 08.0.0
Database schema 'xtremweb' : checking compliance to '08.2.0'
Database schema 'xtremweb' : is compliant to 08.2.0
Database schema 'xtremweb' : checking compliance to '08.3.1'
Database schema 'xtremweb' : is compliant to 08.3.1
Database schema 'xtremweb' : checking compliance to '09.1.0'
Database schema 'xtremweb' : is compliant to 09.1.0
Database schema 'xtremweb' : checking compliance to '10.0.0'
Database schema 'xtremweb' : is compliant to 10.0.0
Database schema 'xtremweb' : checking compliance to '10.2.0'
Database schema 'xtremweb' : is compliant to 10.2.0
Database schema 'xtremweb' : checking compliance to '10.6.0'
Database schema 'xtremweb' : is not compliant to '10.6.0'; updating
10.6.0 is compliant, dont worry
10.6.0 is compliant, dont worry
Database schema 'xtremweb' : updated to '10.6.0'
Set current version to '10.6.0'
Setting the account to run the middleware to 'root'..........................Done
Preparing server configuration file '/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf'................. Done
Preparing xtremweb.ganglia...Done
Generating script to manage keystores (/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/xwhepgenkeys)  Done
Generating script to manage OpenId server certificates (/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/xwhepupdateopenidcerts) Done
Preparing worker configuration file '/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf'.... Done
Copying worker configuration file /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.worker/installer/PckRoot/private/etc/xwhep.worker/conf/xtremweb.worker.conf
Copying worker configuration file /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/innoSetup/worker/conf/xtremweb.worker.conf
Done
Preparing client configuration file '/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.client.conf'...Done
Copying client configuration file /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.client.conf to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.client/innoSetup/client/conf/xtremweb.client.conf
****************************************************************************************
Done
[Thu Sep  7 23:51:14 UTC 2017] xwhepgenkeys - [INFO] : Generating server keystore file /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/../keystore/xwhepserver.keys
[Thu Sep  7 23:51:14 UTC 2017] xwhepgenkeys - [INFO] : No certificate found; creating self signed ones

Keystore type: JKS
Keystore provider: SUN

Your keystore contains 1 entry

localhost, Sep 7, 2017, PrivateKeyEntry, 
Certificate fingerprint (SHA1): 28:52:B2:02:90:93:CD:34:0A:A0:98:98:AC:24:97:48:2E:3B:4B:9D
Owner: CN=localhost, O=MrRobotFramework, C=fr, OU=MrRobotFramework, L=MrRobotFramework
Issuer: CN=localhost, O=MrRobotFramework, C=fr, OU=MrRobotFramework, L=MrRobotFramework
Serial number: 9d9d6da
Valid from: Thu Sep 07 23:51:15 UTC 2017 until: Fri Sep 07 23:51:15 UTC 2018
Certificate fingerprints:
	 MD5:  51:25:08:30:98:6E:71:0E:64:0C:4D:E3:72:90:C8:D8
	 SHA1: 28:52:B2:02:90:93:CD:34:0A:A0:98:98:AC:24:97:48:2E:3B:4B:9D
	 SHA256: BA:7D:47:6D:CF:9D:5C:29:1E:43:48:1F:0B:D7:1A:20:7E:04:BF:61:4D:39:8A:BC:6A:63:07:EC:64:76:E1:D8
	 Signature algorithm name: SHA256withRSA
	 Version: 3

Extensions: 

#1: ObjectId: 2.5.29.14 Criticality=false
SubjectKeyIdentifier [
KeyIdentifier [
0000: D2 C6 31 4F ED 88 8D 33   1F CF 80 1B 8A 5C 9A 53  ..1O...3.....\.S
0010: E3 71 80 5A                                        .q.Z
]
]

[Thu Sep  7 23:51:16 UTC 2017] xwhepgenkeys - [INFO] : Generating worker keystore file /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/../keystore/xwhepworker.keys
[Thu Sep  7 23:51:17 UTC 2017] xwhepgenkeys - [INFO] : Importing server public key into worker keystore (/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/../keystore/xwhepworker.keys)

Keystore type: JKS
Keystore provider: SUN

Your keystore contains 2 entries

xtremweb-hep.worker.20170907235114, Sep 7, 2017, PrivateKeyEntry, 
Certificate fingerprint (SHA1): 47:99:F6:98:5B:66:74:E4:C8:E0:7A:2C:3A:3F:76:C9:87:CB:97:26
localhost, Sep 7, 2017, trustedCertEntry, 
Certificate fingerprint (SHA1): 28:52:B2:02:90:93:CD:34:0A:A0:98:98:AC:24:97:48:2E:3B:4B:9D
[Thu Sep  7 23:51:17 UTC 2017] xwhepgenkeys - [INFO] : Generating client keystore file /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/../keystore/xwhepclient.keys
[Thu Sep  7 23:51:18 UTC 2017] xwhepgenkeys - [INFO] : Importing server public key into client keystore (/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/../keystore/xwhepworker.keys)

Keystore type: JKS
Keystore provider: SUN

Your keystore contains 2 entries

xtremweb-hep.client.20170907235114, Sep 7, 2017, PrivateKeyEntry, 
Certificate fingerprint (SHA1): 79:55:89:46:0E:E7:50:B2:46:D2:FB:B3:47:EC:EC:2E:D1:08:A3:0D
localhost, Sep 7, 2017, trustedCertEntry, 
Certificate fingerprint (SHA1): 28:52:B2:02:90:93:CD:34:0A:A0:98:98:AC:24:97:48:2E:3B:4B:9D
[Thu Sep  7 23:51:19 UTC 2017] xwhepgenkeys - [INFO] : Signing jar file /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/../lib/xtremweb.jar
jar signed.

Warning: 
No -tsa or -tsacert is provided and this jar is not timestamped. Without a timestamp, users may not be able to validate this jar after the signer certificate's expiration date (2018-09-07) or after any future revocation date.

jar verified.

Warning: 
This jar contains signatures that does not include a timestamp. Without a timestamp, users may not be able to validate this jar after the signer certificate's expiration date (2018-09-07) or after any future revocation date.

Re-run with the -verbose and -certs options for more details.
[Thu Sep  7 23:51:20 UTC 2017] xwhepgenkeys - [INFO] : Done
GKRC=0
*******************
Keystores generated
*******************
Inserting known OpenId servers certificate paths into server keystore
 - google
 - yahoo
 - facebook
keytool error: java.io.FileNotFoundException: www.yahoo.com_0.pem (No such file or directory)
keytool error: java.io.FileNotFoundException: www.yahoo.com_1.pem (No such file or directory)
keytool error: java.io.FileNotFoundException: www.yahoo.com_2.pem (No such file or directory)
keytool error: java.io.FileNotFoundException: www.google.com_0.pem (No such file or directory)
keytool error: java.io.FileNotFoundException: www.google.com_1.pem (No such file or directory)
keytool error: java.io.FileNotFoundException: www.facebook.com_0.pem (No such file or directory)
keytool error: java.io.FileNotFoundException: www.facebook.com_1.pem (No such file or directory)
*******************
ERROR : can't insert OpenID server certificates into XWHEP server keystore
*******************

Preparing  client package to '/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/xwhep.client'.....Done
Copying client configuration file /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/xwhep.client/10.6.0/conf/xtremweb.client.conf.template to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.client/installer/PckRoot/Applications/xwhep.client/conf/xtremweb.client.conf
 Done

Preparing server RPM package to '/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.server'.... Done

Preparing server configuration RPM package to '/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.server.conf'.... Done

Preparing server Debian package
Server Debian package ready

Preparing server configuration Debian package
Server Configuration Debian package ready
Preparing DG to SG bridge RPM package to '/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.bridgedgsg'............ Done

Preparing bridgedgsg Debian package
Bridgedgsg Debian package ready
Preparing SG to DG bridge RPM package to '/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.bridgesgdg'........ Done

Preparing bridgesgdg Debian package
Bridgesgdg Debian package ready
Preparing client RPM package to '/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.client'.... Done

Preparing client Debian package
Client Debian package ready

Preparing worker RPM package to '/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.worker'.... Done

Preparing worker Debian package
Worker Debian package ready

&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;
! Everything is now prepared !
&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;

Available packages :
  * server
   - RedHat RPM  in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.server
   - Debian DPKG in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.server
   - Apple  PKG  in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.server

  * Desktop Grid to Service Grid bridge
   - RedHat RPM  in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.bridgedgsg
   - Debian DPKG in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.bridgedgsg

  * Service Grid to Desktop Grid bridge
   - RedHat RPM  in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.bridgesgdg
   - Debian DPKG in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.bridgesgdg

  * client
   - RedHat RPM  in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.client
   - Debian DPKG in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.client
   - Apple  PKG  in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.client
   - Windows installer  in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.client/innoSetup
                        (http://www.innosetup.com/isinfo.php)

  * worker
   - RedHat  RPM        in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.worker
   - Debian  DPKG       in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.worker
   - Apple   PKG        in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.worker
   - Windows installer  in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/innoSetup
                        (http://www.innosetup.com/isinfo.php)

  * client
   - Zip file (platform independant)  in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/xwhep-client-10.6.0.zip


You can manually :
  * start the server
   - ./bin/../bin/xwhep.server console
  * start a worker
   - ./bin/../bin/xwhep.worker console
  * as soon as your server is started you can use the client
   - ./bin/../bin/xwworkers : if you have started a worker, it is in the list
   - ./bin/../bin/xwusers
   - ./bin/../bin/xwapps
   - etc.

As soon as everything is ok you should :
  * install you server using its packages
  * deploy worker over your own volunteer PCs using its packages
  * install your worker packages on any of your web sites
    if you wish to enable anonymous volunteer power
  * install your client ZIP file on any of your web sites
    to allow registered users to use the platform

That's all folks
</msg>
<status status="PASS" endtime="20170907 23:52:02.386" starttime="20170907 23:52:02.385"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${install_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170907 23:52:02.386" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170907 23:52:02.386" starttime="20170907 23:52:02.386"></status>
</kw>
<kw name="Get Lines Containing String" library="String">
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<arguments>
<arg>${install_result.stdout}</arg>
<arg>That's all folks</arg>
</arguments>
<assign>
<var>${install_result_successful}</var>
</assign>
<msg timestamp="20170907 23:52:02.388" level="INFO">1 out of 357 lines matched</msg>
<msg timestamp="20170907 23:52:02.388" level="INFO">${install_result_successful} = That's all folks</msg>
<status status="PASS" endtime="20170907 23:52:02.388" starttime="20170907 23:52:02.386"></status>
</kw>
<kw name="Get Line Count" library="String">
<doc>Returns and logs the number of lines in the given string.</doc>
<arguments>
<arg>${install_result_successful}</arg>
</arguments>
<assign>
<var>${line_install_result_successful}</var>
</assign>
<msg timestamp="20170907 23:52:02.388" level="INFO">1 lines</msg>
<msg timestamp="20170907 23:52:02.388" level="INFO">${line_install_result_successful} = 1</msg>
<status status="PASS" endtime="20170907 23:52:02.388" starttime="20170907 23:52:02.388"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${line_install_result_successful}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20170907 23:52:02.389" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170907 23:52:02.389" starttime="20170907 23:52:02.389"></status>
</kw>
<status status="PASS" endtime="20170907 23:52:02.389" starttime="20170907 23:51:08.877"></status>
</kw>
<kw name="Start XWtremWeb Server And XWtremWeb Worker" library="XWCommon">
<kw name="Ping XWtremWeb Database" library="XWServer">
<kw name="Xtremweb Tables Must Exist" library="MySql">
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170907 23:52:02.391" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170907 23:52:02.392" starttime="20170907 23:52:02.390"></status>
</kw>
<status status="PASS" endtime="20170907 23:52:02.392" starttime="20170907 23:52:02.390"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>appTypes</arg>
</arguments>
<msg timestamp="20170907 23:52:02.392" level="INFO">Executing : Table Must Exist  |  appTypes </msg>
<msg timestamp="20170907 23:52:02.393" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='appTypes' </msg>
<status status="PASS" endtime="20170907 23:52:02.394" starttime="20170907 23:52:02.392"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps</arg>
</arguments>
<msg timestamp="20170907 23:52:02.394" level="INFO">Executing : Table Must Exist  |  apps </msg>
<msg timestamp="20170907 23:52:02.394" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='apps' </msg>
<status status="PASS" endtime="20170907 23:52:02.395" starttime="20170907 23:52:02.394"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps_history</arg>
</arguments>
<msg timestamp="20170907 23:52:02.395" level="INFO">Executing : Table Must Exist  |  apps_history </msg>
<msg timestamp="20170907 23:52:02.395" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='apps_history' </msg>
<status status="PASS" endtime="20170907 23:52:02.396" starttime="20170907 23:52:02.395"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>cpuTypes</arg>
</arguments>
<msg timestamp="20170907 23:52:02.397" level="INFO">Executing : Table Must Exist  |  cpuTypes </msg>
<msg timestamp="20170907 23:52:02.397" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='cpuTypes' </msg>
<status status="PASS" endtime="20170907 23:52:02.398" starttime="20170907 23:52:02.397"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>dataTypes</arg>
</arguments>
<msg timestamp="20170907 23:52:02.398" level="INFO">Executing : Table Must Exist  |  dataTypes </msg>
<msg timestamp="20170907 23:52:02.398" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='dataTypes' </msg>
<status status="PASS" endtime="20170907 23:52:02.399" starttime="20170907 23:52:02.398"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas</arg>
</arguments>
<msg timestamp="20170907 23:52:02.399" level="INFO">Executing : Table Must Exist  |  datas </msg>
<msg timestamp="20170907 23:52:02.399" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='datas' </msg>
<status status="PASS" endtime="20170907 23:52:02.400" starttime="20170907 23:52:02.399"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas_history</arg>
</arguments>
<msg timestamp="20170907 23:52:02.401" level="INFO">Executing : Table Must Exist  |  datas_history </msg>
<msg timestamp="20170907 23:52:02.401" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='datas_history' </msg>
<status status="PASS" endtime="20170907 23:52:02.403" starttime="20170907 23:52:02.400"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables</arg>
</arguments>
<msg timestamp="20170907 23:52:02.404" level="INFO">Executing : Table Must Exist  |  executables </msg>
<msg timestamp="20170907 23:52:02.404" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='executables' </msg>
<status status="PASS" endtime="20170907 23:52:02.406" starttime="20170907 23:52:02.403"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables_history</arg>
</arguments>
<msg timestamp="20170907 23:52:02.406" level="INFO">Executing : Table Must Exist  |  executables_history </msg>
<msg timestamp="20170907 23:52:02.407" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='executables_history' </msg>
<status status="PASS" endtime="20170907 23:52:02.409" starttime="20170907 23:52:02.406"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups</arg>
</arguments>
<msg timestamp="20170907 23:52:02.409" level="INFO">Executing : Table Must Exist  |  groups </msg>
<msg timestamp="20170907 23:52:02.409" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='groups' </msg>
<status status="PASS" endtime="20170907 23:52:02.411" starttime="20170907 23:52:02.409"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups_history</arg>
</arguments>
<msg timestamp="20170907 23:52:02.412" level="INFO">Executing : Table Must Exist  |  groups_history </msg>
<msg timestamp="20170907 23:52:02.412" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='groups_history' </msg>
<status status="PASS" endtime="20170907 23:52:02.413" starttime="20170907 23:52:02.411"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts</arg>
</arguments>
<msg timestamp="20170907 23:52:02.414" level="INFO">Executing : Table Must Exist  |  hosts </msg>
<msg timestamp="20170907 23:52:02.414" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='hosts' </msg>
<status status="PASS" endtime="20170907 23:52:02.416" starttime="20170907 23:52:02.414"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts_history</arg>
</arguments>
<msg timestamp="20170907 23:52:02.417" level="INFO">Executing : Table Must Exist  |  hosts_history </msg>
<msg timestamp="20170907 23:52:02.417" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='hosts_history' </msg>
<status status="PASS" endtime="20170907 23:52:02.419" starttime="20170907 23:52:02.416"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships</arg>
</arguments>
<msg timestamp="20170907 23:52:02.419" level="INFO">Executing : Table Must Exist  |  memberships </msg>
<msg timestamp="20170907 23:52:02.419" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='memberships' </msg>
<status status="PASS" endtime="20170907 23:52:02.421" starttime="20170907 23:52:02.419"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships_history</arg>
</arguments>
<msg timestamp="20170907 23:52:02.421" level="INFO">Executing : Table Must Exist  |  memberships_history </msg>
<msg timestamp="20170907 23:52:02.421" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='memberships_history' </msg>
<status status="PASS" endtime="20170907 23:52:02.423" starttime="20170907 23:52:02.421"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>oses</arg>
</arguments>
<msg timestamp="20170907 23:52:02.424" level="INFO">Executing : Table Must Exist  |  oses </msg>
<msg timestamp="20170907 23:52:02.424" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='oses' </msg>
<status status="PASS" endtime="20170907 23:52:02.425" starttime="20170907 23:52:02.423"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>packageTypes</arg>
</arguments>
<msg timestamp="20170907 23:52:02.426" level="INFO">Executing : Table Must Exist  |  packageTypes </msg>
<msg timestamp="20170907 23:52:02.426" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='packageTypes' </msg>
<status status="PASS" endtime="20170907 23:52:02.428" starttime="20170907 23:52:02.425"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions</arg>
</arguments>
<msg timestamp="20170907 23:52:02.428" level="INFO">Executing : Table Must Exist  |  sessions </msg>
<msg timestamp="20170907 23:52:02.428" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sessions' </msg>
<status status="PASS" endtime="20170907 23:52:02.429" starttime="20170907 23:52:02.428"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions_history</arg>
</arguments>
<msg timestamp="20170907 23:52:02.429" level="INFO">Executing : Table Must Exist  |  sessions_history </msg>
<msg timestamp="20170907 23:52:02.429" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sessions_history' </msg>
<status status="PASS" endtime="20170907 23:52:02.430" starttime="20170907 23:52:02.429"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes</arg>
</arguments>
<msg timestamp="20170907 23:52:02.431" level="INFO">Executing : Table Must Exist  |  sharedAppTypes </msg>
<msg timestamp="20170907 23:52:02.431" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedAppTypes' </msg>
<status status="PASS" endtime="20170907 23:52:02.432" starttime="20170907 23:52:02.431"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes_history</arg>
</arguments>
<msg timestamp="20170907 23:52:02.432" level="INFO">Executing : Table Must Exist  |  sharedAppTypes_history </msg>
<msg timestamp="20170907 23:52:02.432" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedAppTypes_history' </msg>
<status status="PASS" endtime="20170907 23:52:02.433" starttime="20170907 23:52:02.432"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes</arg>
</arguments>
<msg timestamp="20170907 23:52:02.433" level="INFO">Executing : Table Must Exist  |  sharedPackageTypes </msg>
<msg timestamp="20170907 23:52:02.433" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedPackageTypes' </msg>
<status status="PASS" endtime="20170907 23:52:02.434" starttime="20170907 23:52:02.433"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes_history</arg>
</arguments>
<msg timestamp="20170907 23:52:02.434" level="INFO">Executing : Table Must Exist  |  sharedPackageTypes_history </msg>
<msg timestamp="20170907 23:52:02.434" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedPackageTypes_history' </msg>
<status status="PASS" endtime="20170907 23:52:02.436" starttime="20170907 23:52:02.434"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>statuses</arg>
</arguments>
<msg timestamp="20170907 23:52:02.436" level="INFO">Executing : Table Must Exist  |  statuses </msg>
<msg timestamp="20170907 23:52:02.436" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='statuses' </msg>
<status status="PASS" endtime="20170907 23:52:02.437" starttime="20170907 23:52:02.436"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks</arg>
</arguments>
<msg timestamp="20170907 23:52:02.438" level="INFO">Executing : Table Must Exist  |  tasks </msg>
<msg timestamp="20170907 23:52:02.438" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='tasks' </msg>
<status status="PASS" endtime="20170907 23:52:02.438" starttime="20170907 23:52:02.438"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks_history</arg>
</arguments>
<msg timestamp="20170907 23:52:02.439" level="INFO">Executing : Table Must Exist  |  tasks_history </msg>
<msg timestamp="20170907 23:52:02.439" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='tasks_history' </msg>
<status status="PASS" endtime="20170907 23:52:02.440" starttime="20170907 23:52:02.439"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces</arg>
</arguments>
<msg timestamp="20170907 23:52:02.441" level="INFO">Executing : Table Must Exist  |  traces </msg>
<msg timestamp="20170907 23:52:02.441" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='traces' </msg>
<status status="PASS" endtime="20170907 23:52:02.443" starttime="20170907 23:52:02.441"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces_history</arg>
</arguments>
<msg timestamp="20170907 23:52:02.443" level="INFO">Executing : Table Must Exist  |  traces_history </msg>
<msg timestamp="20170907 23:52:02.443" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='traces_history' </msg>
<status status="PASS" endtime="20170907 23:52:02.444" starttime="20170907 23:52:02.443"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>userRights</arg>
</arguments>
<msg timestamp="20170907 23:52:02.445" level="INFO">Executing : Table Must Exist  |  userRights </msg>
<msg timestamp="20170907 23:52:02.445" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='userRights' </msg>
<status status="PASS" endtime="20170907 23:52:02.446" starttime="20170907 23:52:02.445"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups</arg>
</arguments>
<msg timestamp="20170907 23:52:02.447" level="INFO">Executing : Table Must Exist  |  usergroups </msg>
<msg timestamp="20170907 23:52:02.447" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='usergroups' </msg>
<status status="PASS" endtime="20170907 23:52:02.448" starttime="20170907 23:52:02.446"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups_history</arg>
</arguments>
<msg timestamp="20170907 23:52:02.449" level="INFO">Executing : Table Must Exist  |  usergroups_history </msg>
<msg timestamp="20170907 23:52:02.449" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='usergroups_history' </msg>
<status status="PASS" endtime="20170907 23:52:02.450" starttime="20170907 23:52:02.449"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users</arg>
</arguments>
<msg timestamp="20170907 23:52:02.450" level="INFO">Executing : Table Must Exist  |  users </msg>
<msg timestamp="20170907 23:52:02.451" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='users' </msg>
<status status="PASS" endtime="20170907 23:52:02.452" starttime="20170907 23:52:02.450"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users_history</arg>
</arguments>
<msg timestamp="20170907 23:52:02.452" level="INFO">Executing : Table Must Exist  |  users_history </msg>
<msg timestamp="20170907 23:52:02.453" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='users_history' </msg>
<status status="PASS" endtime="20170907 23:52:02.454" starttime="20170907 23:52:02.452"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>version</arg>
</arguments>
<msg timestamp="20170907 23:52:02.455" level="INFO">Executing : Table Must Exist  |  version </msg>
<msg timestamp="20170907 23:52:02.455" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='version' </msg>
<status status="PASS" endtime="20170907 23:52:02.456" starttime="20170907 23:52:02.455"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>versions</arg>
</arguments>
<msg timestamp="20170907 23:52:02.457" level="INFO">Executing : Table Must Exist  |  versions </msg>
<msg timestamp="20170907 23:52:02.457" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='versions' </msg>
<status status="PASS" endtime="20170907 23:52:02.459" starttime="20170907 23:52:02.457"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps</arg>
</arguments>
<msg timestamp="20170907 23:52:02.459" level="INFO">Executing : Table Must Exist  |  view_apps </msg>
<msg timestamp="20170907 23:52:02.459" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps' </msg>
<status status="PASS" endtime="20170907 23:52:02.461" starttime="20170907 23:52:02.459"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps_for_offering</arg>
</arguments>
<msg timestamp="20170907 23:52:02.461" level="INFO">Executing : Table Must Exist  |  view_apps_for_offering </msg>
<msg timestamp="20170907 23:52:02.461" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps_for_offering' </msg>
<status status="PASS" endtime="20170907 23:52:02.463" starttime="20170907 23:52:02.461"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps_for_offering_with_file_sizes</arg>
</arguments>
<msg timestamp="20170907 23:52:02.464" level="INFO">Executing : Table Must Exist  |  view_apps_for_offering_with_file_sizes </msg>
<msg timestamp="20170907 23:52:02.464" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps_for_offering_with_file_sizes' </msg>
<status status="PASS" endtime="20170907 23:52:02.467" starttime="20170907 23:52:02.463"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_datas</arg>
</arguments>
<msg timestamp="20170907 23:52:02.468" level="INFO">Executing : Table Must Exist  |  view_datas </msg>
<msg timestamp="20170907 23:52:02.469" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_datas' </msg>
<status status="PASS" endtime="20170907 23:52:02.470" starttime="20170907 23:52:02.468"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_executables</arg>
</arguments>
<msg timestamp="20170907 23:52:02.471" level="INFO">Executing : Table Must Exist  |  view_executables </msg>
<msg timestamp="20170907 23:52:02.471" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_executables' </msg>
<status status="PASS" endtime="20170907 23:52:02.473" starttime="20170907 23:52:02.471"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_groups</arg>
</arguments>
<msg timestamp="20170907 23:52:02.473" level="INFO">Executing : Table Must Exist  |  view_groups </msg>
<msg timestamp="20170907 23:52:02.473" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_groups' </msg>
<status status="PASS" endtime="20170907 23:52:02.476" starttime="20170907 23:52:02.473"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts</arg>
</arguments>
<msg timestamp="20170907 23:52:02.476" level="INFO">Executing : Table Must Exist  |  view_hosts </msg>
<msg timestamp="20170907 23:52:02.476" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts' </msg>
<status status="PASS" endtime="20170907 23:52:02.478" starttime="20170907 23:52:02.476"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_deployable</arg>
</arguments>
<msg timestamp="20170907 23:52:02.478" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_deployable </msg>
<msg timestamp="20170907 23:52:02.478" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_deployable' </msg>
<status status="PASS" endtime="20170907 23:52:02.479" starttime="20170907 23:52:02.478"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_deployable_and_shared</arg>
</arguments>
<msg timestamp="20170907 23:52:02.480" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_deployable_and_shared </msg>
<msg timestamp="20170907 23:52:02.480" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_deployable_and_shared' </msg>
<status status="PASS" endtime="20170907 23:52:02.481" starttime="20170907 23:52:02.480"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_shared</arg>
</arguments>
<msg timestamp="20170907 23:52:02.481" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_shared </msg>
<msg timestamp="20170907 23:52:02.482" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_shared' </msg>
<status status="PASS" endtime="20170907 23:52:02.482" starttime="20170907 23:52:02.481"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_sessions</arg>
</arguments>
<msg timestamp="20170907 23:52:02.483" level="INFO">Executing : Table Must Exist  |  view_sessions </msg>
<msg timestamp="20170907 23:52:02.483" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_sessions' </msg>
<status status="PASS" endtime="20170907 23:52:02.484" starttime="20170907 23:52:02.483"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_tasks</arg>
</arguments>
<msg timestamp="20170907 23:52:02.485" level="INFO">Executing : Table Must Exist  |  view_tasks </msg>
<msg timestamp="20170907 23:52:02.485" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_tasks' </msg>
<status status="PASS" endtime="20170907 23:52:02.486" starttime="20170907 23:52:02.484"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_traces</arg>
</arguments>
<msg timestamp="20170907 23:52:02.486" level="INFO">Executing : Table Must Exist  |  view_traces </msg>
<msg timestamp="20170907 23:52:02.486" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_traces' </msg>
<status status="PASS" endtime="20170907 23:52:02.487" starttime="20170907 23:52:02.486"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_usergroups</arg>
</arguments>
<msg timestamp="20170907 23:52:02.487" level="INFO">Executing : Table Must Exist  |  view_usergroups </msg>
<msg timestamp="20170907 23:52:02.487" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_usergroups' </msg>
<status status="PASS" endtime="20170907 23:52:02.488" starttime="20170907 23:52:02.487"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users</arg>
</arguments>
<msg timestamp="20170907 23:52:02.489" level="INFO">Executing : Table Must Exist  |  view_users </msg>
<msg timestamp="20170907 23:52:02.489" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users' </msg>
<status status="PASS" endtime="20170907 23:52:02.490" starttime="20170907 23:52:02.489"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_apps</arg>
</arguments>
<msg timestamp="20170907 23:52:02.490" level="INFO">Executing : Table Must Exist  |  view_users_apps </msg>
<msg timestamp="20170907 23:52:02.490" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_apps' </msg>
<status status="PASS" endtime="20170907 23:52:02.491" starttime="20170907 23:52:02.490"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_datas</arg>
</arguments>
<msg timestamp="20170907 23:52:02.492" level="INFO">Executing : Table Must Exist  |  view_users_datas </msg>
<msg timestamp="20170907 23:52:02.492" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_datas' </msg>
<status status="PASS" endtime="20170907 23:52:02.493" starttime="20170907 23:52:02.492"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_groups</arg>
</arguments>
<msg timestamp="20170907 23:52:02.494" level="INFO">Executing : Table Must Exist  |  view_users_groups </msg>
<msg timestamp="20170907 23:52:02.494" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_groups' </msg>
<status status="PASS" endtime="20170907 23:52:02.495" starttime="20170907 23:52:02.493"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_hosts</arg>
</arguments>
<msg timestamp="20170907 23:52:02.496" level="INFO">Executing : Table Must Exist  |  view_users_hosts </msg>
<msg timestamp="20170907 23:52:02.496" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_hosts' </msg>
<status status="PASS" endtime="20170907 23:52:02.497" starttime="20170907 23:52:02.496"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_sessions</arg>
</arguments>
<msg timestamp="20170907 23:52:02.497" level="INFO">Executing : Table Must Exist  |  view_users_sessions </msg>
<msg timestamp="20170907 23:52:02.497" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_sessions' </msg>
<status status="PASS" endtime="20170907 23:52:02.498" starttime="20170907 23:52:02.497"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_tasks</arg>
</arguments>
<msg timestamp="20170907 23:52:02.499" level="INFO">Executing : Table Must Exist  |  view_users_tasks </msg>
<msg timestamp="20170907 23:52:02.499" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_tasks' </msg>
<status status="PASS" endtime="20170907 23:52:02.500" starttime="20170907 23:52:02.498"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_traces</arg>
</arguments>
<msg timestamp="20170907 23:52:02.500" level="INFO">Executing : Table Must Exist  |  view_users_traces </msg>
<msg timestamp="20170907 23:52:02.500" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_traces' </msg>
<status status="PASS" endtime="20170907 23:52:02.501" starttime="20170907 23:52:02.500"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_usergroups</arg>
</arguments>
<msg timestamp="20170907 23:52:02.502" level="INFO">Executing : Table Must Exist  |  view_users_usergroups </msg>
<msg timestamp="20170907 23:52:02.502" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_usergroups' </msg>
<status status="PASS" endtime="20170907 23:52:02.503" starttime="20170907 23:52:02.502"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_users</arg>
</arguments>
<msg timestamp="20170907 23:52:02.504" level="INFO">Executing : Table Must Exist  |  view_users_users </msg>
<msg timestamp="20170907 23:52:02.504" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_users' </msg>
<status status="PASS" endtime="20170907 23:52:02.506" starttime="20170907 23:52:02.504"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_works</arg>
</arguments>
<msg timestamp="20170907 23:52:02.507" level="INFO">Executing : Table Must Exist  |  view_users_works </msg>
<msg timestamp="20170907 23:52:02.507" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_works' </msg>
<status status="PASS" endtime="20170907 23:52:02.510" starttime="20170907 23:52:02.507"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works</arg>
</arguments>
<msg timestamp="20170907 23:52:02.510" level="INFO">Executing : Table Must Exist  |  view_works </msg>
<msg timestamp="20170907 23:52:02.510" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works' </msg>
<status status="PASS" endtime="20170907 23:52:02.513" starttime="20170907 23:52:02.510"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works_for_billing</arg>
</arguments>
<msg timestamp="20170907 23:52:02.513" level="INFO">Executing : Table Must Exist  |  view_works_for_billing </msg>
<msg timestamp="20170907 23:52:02.513" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works_for_billing' </msg>
<status status="PASS" endtime="20170907 23:52:02.516" starttime="20170907 23:52:02.513"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works_for_billing_with_file_sizes</arg>
</arguments>
<msg timestamp="20170907 23:52:02.516" level="INFO">Executing : Table Must Exist  |  view_works_for_billing_with_file_sizes </msg>
<msg timestamp="20170907 23:52:02.516" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works_for_billing_with_file_sizes' </msg>
<status status="PASS" endtime="20170907 23:52:02.518" starttime="20170907 23:52:02.516"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works</arg>
</arguments>
<msg timestamp="20170907 23:52:02.519" level="INFO">Executing : Table Must Exist  |  works </msg>
<msg timestamp="20170907 23:52:02.519" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='works' </msg>
<status status="PASS" endtime="20170907 23:52:02.521" starttime="20170907 23:52:02.519"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works_history</arg>
</arguments>
<msg timestamp="20170907 23:52:02.522" level="INFO">Executing : Table Must Exist  |  works_history </msg>
<msg timestamp="20170907 23:52:02.522" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='works_history' </msg>
<status status="PASS" endtime="20170907 23:52:02.524" starttime="20170907 23:52:02.521"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170907 23:52:02.525" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170907 23:52:02.525" starttime="20170907 23:52:02.524"></status>
</kw>
<status status="PASS" endtime="20170907 23:52:02.525" starttime="20170907 23:52:02.524"></status>
</kw>
<status status="PASS" endtime="20170907 23:52:02.525" starttime="20170907 23:52:02.390"></status>
</kw>
<status status="PASS" endtime="20170907 23:52:02.525" starttime="20170907 23:52:02.389"></status>
</kw>
<kw name="Start XtremWeb Server" library="XWServer">
<arguments>
<arg>${DIST_XWHEP_PATH}</arg>
</arguments>
<kw name="File Should Exist" library="OperatingSystem">
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xtremweb.server.conf</arg>
</arguments>
<msg timestamp="20170907 23:52:02.527" html="yes" level="INFO">File '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf&lt;/a&gt;' exists.</msg>
<status status="PASS" endtime="20170907 23:52:02.527" starttime="20170907 23:52:02.526"></status>
</kw>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xtremweb.server.conf</arg>
</arguments>
<assign>
<var>${config_content}</var>
</assign>
<msg timestamp="20170907 23:52:02.527" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf&lt;/a&gt;'.</msg>
<msg timestamp="20170907 23:52:02.528" level="INFO">${config_content} = #
# Copyrights     : CNRS
# Author         : Oleg Lodygensky
# Acknowledgment : XtremWeb-HEP is based on XtremWeb 1.8.0 by inria : http://www.xtremweb.net/
# Web            : http://www.xtremweb-hep.o...</msg>
<status status="PASS" endtime="20170907 23:52:02.528" starttime="20170907 23:52:02.527"></status>
</kw>
<kw name="Remove String Using Regexp" library="String">
<doc>Removes ``patterns`` from the given ``string``.</doc>
<arguments>
<arg>${config_content}</arg>
<arg>LAUNCHERURL=${XWCONFIGURE.VALUES.XWUPGRADEURL}</arg>
</arguments>
<assign>
<var>${config_content_filtered}</var>
</assign>
<msg timestamp="20170907 23:52:02.529" level="INFO">${config_content_filtered} = #
# Copyrights     : CNRS
# Author         : Oleg Lodygensky
# Acknowledgment : XtremWeb-HEP is based on XtremWeb 1.8.0 by inria : http://www.xtremweb.net/
# Web            : http://www.xtremweb-hep.o...</msg>
<status status="PASS" endtime="20170907 23:52:02.529" starttime="20170907 23:52:02.528"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${config_content_filtered}</arg>
<arg>\## HTTPSPORT=443</arg>
<arg>HTTPSPORT=${XWCONFIGURE.VALUES.HTTPSPORT}</arg>
</arguments>
<assign>
<var>${config_content_filtered}</var>
</assign>
<msg timestamp="20170907 23:52:02.530" level="INFO">${config_content_filtered} = #
# Copyrights     : CNRS
# Author         : Oleg Lodygensky
# Acknowledgment : XtremWeb-HEP is based on XtremWeb 1.8.0 by inria : http://www.xtremweb.net/
# Web            : http://www.xtremweb-hep.o...</msg>
<status status="PASS" endtime="20170907 23:52:02.530" starttime="20170907 23:52:02.529"></status>
</kw>
<kw name="Create File" library="OperatingSystem">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xtremweb.server.conf</arg>
<arg>content=${config_content_filtered}</arg>
</arguments>
<msg timestamp="20170907 23:52:02.537" html="yes" level="INFO">Created file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170907 23:52:02.537" starttime="20170907 23:52:02.530"></status>
</kw>
<kw name="Remove File" library="OperatingSystem">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<msg timestamp="20170907 23:52:02.538" html="yes" level="INFO">File '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;' does not exist.</msg>
<status status="PASS" endtime="20170907 23:52:02.538" starttime="20170907 23:52:02.537"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/bin/xtremweb.server console</arg>
<arg>shell=yes</arg>
<arg>stderr=STDOUT</arg>
<arg>stdout=${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<assign>
<var>${created_process}</var>
</assign>
<msg timestamp="20170907 23:52:02.539" level="INFO">Starting process:
/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/xtremweb.server console</msg>
<msg timestamp="20170907 23:52:02.543" level="INFO">${created_process} = 64</msg>
<status status="PASS" endtime="20170907 23:52:02.543" starttime="20170907 23:52:02.538"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SERVER_PROCESS}</arg>
<arg>${created_process}</arg>
</arguments>
<msg timestamp="20170907 23:52:02.544" level="INFO">${SERVER_PROCESS} = 64</msg>
<status status="PASS" endtime="20170907 23:52:02.544" starttime="20170907 23:52:02.544"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2 min</arg>
<arg>5 sec</arg>
<arg>Check XtremWeb Server Start From Log</arg>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<kw name="Check XtremWeb Server Start From Log" library="XWServer">
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<kw name="Log XtremWeb Process Log File" library="XWServer">
<kw name="Log File" library="OperatingSystem">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<msg timestamp="20170907 23:52:02.546" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170907 23:52:02.548" level="INFO"></msg>
<status status="PASS" endtime="20170907 23:52:02.548" starttime="20170907 23:52:02.546"></status>
</kw>
<status status="PASS" endtime="20170907 23:52:02.548" starttime="20170907 23:52:02.545"></status>
</kw>
<kw name="Grep File" library="OperatingSystem">
<doc>Returns the lines of the specified file that match the ``pattern``.</doc>
<arguments>
<arg>${log}</arg>
<arg>listening on port : ${XWCONFIGURE.VALUES.HTTPSPORT}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20170907 23:52:02.549" html="yes" level="INFO">Reading file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170907 23:52:02.549" level="INFO">0 out of 0 lines matched</msg>
<msg timestamp="20170907 23:52:02.549" level="INFO">${ret} = </msg>
<status status="PASS" endtime="20170907 23:52:02.549" starttime="20170907 23:52:02.548"></status>
</kw>
<kw name="Get Line Count" library="String">
<doc>Returns and logs the number of lines in the given string.</doc>
<arguments>
<arg>${ret}</arg>
</arguments>
<assign>
<var>${line_count}</var>
</assign>
<msg timestamp="20170907 23:52:02.550" level="INFO">0 lines</msg>
<msg timestamp="20170907 23:52:02.551" level="INFO">${line_count} = 0</msg>
<status status="PASS" endtime="20170907 23:52:02.551" starttime="20170907 23:52:02.550"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${line_count}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20170907 23:52:02.552" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20170907 23:52:02.552" level="FAIL">0 != 2</msg>
<status status="FAIL" endtime="20170907 23:52:02.553" starttime="20170907 23:52:02.551"></status>
</kw>
<status status="FAIL" endtime="20170907 23:52:02.553" starttime="20170907 23:52:02.545"></status>
</kw>
<kw name="Check XtremWeb Server Start From Log" library="XWServer">
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<kw name="Log XtremWeb Process Log File" library="XWServer">
<kw name="Log File" library="OperatingSystem">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<msg timestamp="20170907 23:52:07.555" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170907 23:52:07.559" level="INFO">Thu Sep  7 23:52:02 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : checking launch url
Thu Sep  7 23:52:02 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] WARNING : no launcher URL defined
Thu Sep  7 23:52:02 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : launching SmartSockets hub
[07/Sep/2017:23:52:05 +0000] [main_1] ERROR : setRole : role redefined ?! (was SERVER)
[07/Sep/2017:23:52:05 +0000] [xtremweb.database.DBConnPoolThread_main_1] INFO : Connection to database jdbc:mysql://localhost/xtremweb is ok, 70 created
[07/Sep/2017:23:52:05 +0000] [xtremweb.dispatcher.DBInterface_main_1] WARN : Can't retrieve any app
[07/Sep/2017:23:52:06 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't create ProxyValidator
[07/Sep/2017:23:52:06 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.io.FileNotFoundException: /tmp/castore (No such file or directory) (/tmp/castore (No such file or directory))
[07/Sep/2017:23:52:06 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't add CA certificates to keystore
[07/Sep/2017:23:52:06 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.lang.NullPointerException (null)
[07/Sep/2017:23:52:06 +0000] [xtremweb.dispatcher.HashTaskSet_TaskSet_14] INFO : TaskSet started (300000)
[07/Sep/2017:23:52:07 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : still waiting task set...
[07/Sep/2017:23:52:07 +0000] [xtremweb.communications.TCPServer_TCPServerNIO_15] INFO : started, listening on port : 4321
[07/Sep/2017:23:52:07 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : UDP server not started
log4j:WARN No appenders could be found for logger (org.eclipse.jetty.util.log).
log4j:WARN Please initialize the log4j system properly.
log4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.
[07/Sep/2017:23:52:07 +0000] [xtremweb.communications.HTTPServer_main_1] INFO : started, listening on port : 9443
[07/Sep/2017:23:52:07 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : FACEBOOK : java.net.MalformedURLException: no protocol: 
[07/Sep/2017:23:52:07 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : GOOGLE : java.net.MalformedURLException: no protocol: 
[07/Sep/2017:23:52:07 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : TWITTER : java.net.MalformedURLException: no protocol: 
[07/Sep/2017:23:52:07 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : YAHOO : java.net.MalformedURLException: no protocol: 
</msg>
<status status="PASS" endtime="20170907 23:52:07.559" starttime="20170907 23:52:07.555"></status>
</kw>
<status status="PASS" endtime="20170907 23:52:07.559" starttime="20170907 23:52:07.554"></status>
</kw>
<kw name="Grep File" library="OperatingSystem">
<doc>Returns the lines of the specified file that match the ``pattern``.</doc>
<arguments>
<arg>${log}</arg>
<arg>listening on port : ${XWCONFIGURE.VALUES.HTTPSPORT}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20170907 23:52:07.560" html="yes" level="INFO">Reading file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170907 23:52:07.561" level="INFO">1 out of 22 lines matched</msg>
<msg timestamp="20170907 23:52:07.561" level="INFO">${ret} = [07/Sep/2017:23:52:07 +0000] [xtremweb.communications.HTTPServer_main_1] INFO : started, listening on port : 9443</msg>
<status status="PASS" endtime="20170907 23:52:07.561" starttime="20170907 23:52:07.559"></status>
</kw>
<kw name="Get Line Count" library="String">
<doc>Returns and logs the number of lines in the given string.</doc>
<arguments>
<arg>${ret}</arg>
</arguments>
<assign>
<var>${line_count}</var>
</assign>
<msg timestamp="20170907 23:52:07.561" level="INFO">1 lines</msg>
<msg timestamp="20170907 23:52:07.562" level="INFO">${line_count} = 1</msg>
<status status="PASS" endtime="20170907 23:52:07.562" starttime="20170907 23:52:07.561"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${line_count}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20170907 23:52:07.562" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20170907 23:52:07.562" level="FAIL">1 != 2</msg>
<status status="FAIL" endtime="20170907 23:52:07.562" starttime="20170907 23:52:07.562"></status>
</kw>
<status status="FAIL" endtime="20170907 23:52:07.562" starttime="20170907 23:52:07.553"></status>
</kw>
<kw name="Check XtremWeb Server Start From Log" library="XWServer">
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<kw name="Log XtremWeb Process Log File" library="XWServer">
<kw name="Log File" library="OperatingSystem">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<msg timestamp="20170907 23:52:12.566" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170907 23:52:12.569" level="INFO">Thu Sep  7 23:52:02 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : checking launch url
Thu Sep  7 23:52:02 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] WARNING : no launcher URL defined
Thu Sep  7 23:52:02 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : launching SmartSockets hub
[07/Sep/2017:23:52:05 +0000] [main_1] ERROR : setRole : role redefined ?! (was SERVER)
[07/Sep/2017:23:52:05 +0000] [xtremweb.database.DBConnPoolThread_main_1] INFO : Connection to database jdbc:mysql://localhost/xtremweb is ok, 70 created
[07/Sep/2017:23:52:05 +0000] [xtremweb.dispatcher.DBInterface_main_1] WARN : Can't retrieve any app
[07/Sep/2017:23:52:06 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't create ProxyValidator
[07/Sep/2017:23:52:06 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.io.FileNotFoundException: /tmp/castore (No such file or directory) (/tmp/castore (No such file or directory))
[07/Sep/2017:23:52:06 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't add CA certificates to keystore
[07/Sep/2017:23:52:06 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.lang.NullPointerException (null)
[07/Sep/2017:23:52:06 +0000] [xtremweb.dispatcher.HashTaskSet_TaskSet_14] INFO : TaskSet started (300000)
[07/Sep/2017:23:52:07 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : still waiting task set...
[07/Sep/2017:23:52:07 +0000] [xtremweb.communications.TCPServer_TCPServerNIO_15] INFO : started, listening on port : 4321
[07/Sep/2017:23:52:07 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : UDP server not started
log4j:WARN No appenders could be found for logger (org.eclipse.jetty.util.log).
log4j:WARN Please initialize the log4j system properly.
log4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.
[07/Sep/2017:23:52:07 +0000] [xtremweb.communications.HTTPServer_main_1] INFO : started, listening on port : 9443
[07/Sep/2017:23:52:07 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : FACEBOOK : java.net.MalformedURLException: no protocol: 
[07/Sep/2017:23:52:07 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : GOOGLE : java.net.MalformedURLException: no protocol: 
[07/Sep/2017:23:52:07 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : TWITTER : java.net.MalformedURLException: no protocol: 
[07/Sep/2017:23:52:07 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : YAHOO : java.net.MalformedURLException: no protocol: 
[07/Sep/2017:23:52:07 +0000] [main_1] ERROR : Can't add new entry to keystore
[07/Sep/2017:23:52:07 +0000] [main_1] WARN : javax.net.ssl.SSLHandshakeException: sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target (sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target)
[07/Sep/2017:23:52:07 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : XWHEP Dispatcher(10.6.0-head) started [Thu Sep 07 23:52:07 UTC 2017]
[07/Sep/2017:23:52:07 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : DB vendor  = mysql
[07/Sep/2017:23:52:07 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : mileStone  = 
[07/Sep/2017:23:52:07 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Time out   = 15000
[07/Sep/2017:23:52:07 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Disk opt'd = true
[07/Sep/2017:23:52:07 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Net  opt'd = true
[07/Sep/2017:23:52:07 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : NIO        = true
XWHEP Dispatcher started  Thu Sep 07 23:52:07 UTC 2017
Name             : vagrant-ubuntu-trusty-64
Version          : 10.6.0-head
Identity         : 
XWRole           : SERVER
Started on       : Thu Sep 07 23:52:05 UTC 2017
Scheduler        : xtremweb.dispatcher.MatchingScheduler
SmartSockets hub : 172.28.128.3/172.17.0.1/10.0.2.15-4329#d2.b9.56.bb.cb.7c.00.00.d6.21.02.42.bc.fb.75.e4~vagrant
Server HTTP      : true
Alive            : 300
Alive time out   : 900
Polling time out : 15000
Optimize zip     : true
Optimize network : true
NIO              : true
Comm layer       : xtremweb.communications.TCPClient
Socket time out  : 60000
Socket retries   : 50
Max connections  : 200
TCP port         : 4321
UDP port         : 4323
HTPP  port       : 80
HTPPS port       : 9443
Sun RPC interposition port : 4328
Sandbox path : /usr/bin/lxc
Sandbox launch args : 
Host &lt;host&gt;&lt;uid&gt;fc638b58-cb4b-417f-ab37-bde0a3a8bcda&lt;/uid&gt;&lt;accessrights&gt;0x755&lt;/accessrights&gt;&lt;name&gt;vagrant-ubuntu-trusty-64&lt;/name&gt;&lt;cpuload&gt;50&lt;/cpuload&gt;&lt;natedipaddr&gt;10.0.2.15&lt;/natedipaddr&gt;&lt;ipaddr&gt;10.0.2.15&lt;/ipaddr&gt;&lt;hwaddr&gt;&lt;/hwaddr&gt;&lt;timezone&gt;Etc/UTC&lt;/timezone&gt;&lt;os&gt;LINUX&lt;/os&gt;&lt;osversion&gt;3.13.0-129-generic&lt;/osversion&gt;&lt;javaversion&gt;1.8.0_141&lt;/javaversion&gt;&lt;javadatamodel&gt;64&lt;/javadatamodel&gt;&lt;cputype&gt;AMD64&lt;/cputype&gt;&lt;cpunb&gt;1&lt;/cpunb&gt;&lt;cpumodel&gt;unknown&lt;/cpumodel&gt;&lt;cpuspeed&gt;0&lt;/cpuspeed&gt;&lt;totalmem&gt;0&lt;/totalmem&gt;&lt;totalswap&gt;0&lt;/totalswap&gt;&lt;totaltmp&gt;40284&lt;/totaltmp&gt;&lt;freetmp&gt;37110&lt;/freetmp&gt;&lt;project&gt;&lt;/project&gt;&lt;active&gt;true&lt;/active&gt;&lt;incomingconnections&gt;false&lt;/incomingconnections&gt;&lt;available&gt;false&lt;/available&gt;&lt;pilotjob&gt;false&lt;/pilotjob&gt;&lt;sgid&gt;&lt;/sgid&gt;&lt;timeout&gt;15000&lt;/timeout&gt;&lt;traces&gt;false&lt;/traces&gt;&lt;acceptbin&gt;false&lt;/acceptbin&gt;&lt;version&gt;10.6.0-head&lt;/version&gt;&lt;/host&gt;
[07/Sep/2017:23:52:07 +0000] [xtremweb.communications.HTTPServer_HTTPServer_218] INFO : started, listening on port : 9443
</msg>
<status status="PASS" endtime="20170907 23:52:12.570" starttime="20170907 23:52:12.566"></status>
</kw>
<status status="PASS" endtime="20170907 23:52:12.570" starttime="20170907 23:52:12.565"></status>
</kw>
<kw name="Grep File" library="OperatingSystem">
<doc>Returns the lines of the specified file that match the ``pattern``.</doc>
<arguments>
<arg>${log}</arg>
<arg>listening on port : ${XWCONFIGURE.VALUES.HTTPSPORT}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20170907 23:52:12.571" html="yes" level="INFO">Reading file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170907 23:52:12.573" level="INFO">2 out of 59 lines matched</msg>
<msg timestamp="20170907 23:52:12.573" level="INFO">${ret} = [07/Sep/2017:23:52:07 +0000] [xtremweb.communications.HTTPServer_main_1] INFO : started, listening on port : 9443
[07/Sep/2017:23:52:07 +0000] [xtremweb.communications.HTTPServer_HTTPServer_218] INFO ...</msg>
<status status="PASS" endtime="20170907 23:52:12.573" starttime="20170907 23:52:12.571"></status>
</kw>
<kw name="Get Line Count" library="String">
<doc>Returns and logs the number of lines in the given string.</doc>
<arguments>
<arg>${ret}</arg>
</arguments>
<assign>
<var>${line_count}</var>
</assign>
<msg timestamp="20170907 23:52:12.574" level="INFO">2 lines</msg>
<msg timestamp="20170907 23:52:12.574" level="INFO">${line_count} = 2</msg>
<status status="PASS" endtime="20170907 23:52:12.575" starttime="20170907 23:52:12.574"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${line_count}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20170907 23:52:12.575" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170907 23:52:12.576" starttime="20170907 23:52:12.575"></status>
</kw>
<status status="PASS" endtime="20170907 23:52:12.576" starttime="20170907 23:52:12.564"></status>
</kw>
<status status="PASS" endtime="20170907 23:52:12.576" starttime="20170907 23:52:02.544"></status>
</kw>
<kw name="Log XtremWeb Process Log File" library="XWServer">
<kw name="Log File" library="OperatingSystem">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<msg timestamp="20170907 23:52:12.577" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170907 23:52:12.578" level="INFO">Thu Sep  7 23:52:02 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : checking launch url
Thu Sep  7 23:52:02 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] WARNING : no launcher URL defined
Thu Sep  7 23:52:02 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : launching SmartSockets hub
[07/Sep/2017:23:52:05 +0000] [main_1] ERROR : setRole : role redefined ?! (was SERVER)
[07/Sep/2017:23:52:05 +0000] [xtremweb.database.DBConnPoolThread_main_1] INFO : Connection to database jdbc:mysql://localhost/xtremweb is ok, 70 created
[07/Sep/2017:23:52:05 +0000] [xtremweb.dispatcher.DBInterface_main_1] WARN : Can't retrieve any app
[07/Sep/2017:23:52:06 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't create ProxyValidator
[07/Sep/2017:23:52:06 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.io.FileNotFoundException: /tmp/castore (No such file or directory) (/tmp/castore (No such file or directory))
[07/Sep/2017:23:52:06 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't add CA certificates to keystore
[07/Sep/2017:23:52:06 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.lang.NullPointerException (null)
[07/Sep/2017:23:52:06 +0000] [xtremweb.dispatcher.HashTaskSet_TaskSet_14] INFO : TaskSet started (300000)
[07/Sep/2017:23:52:07 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : still waiting task set...
[07/Sep/2017:23:52:07 +0000] [xtremweb.communications.TCPServer_TCPServerNIO_15] INFO : started, listening on port : 4321
[07/Sep/2017:23:52:07 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : UDP server not started
log4j:WARN No appenders could be found for logger (org.eclipse.jetty.util.log).
log4j:WARN Please initialize the log4j system properly.
log4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.
[07/Sep/2017:23:52:07 +0000] [xtremweb.communications.HTTPServer_main_1] INFO : started, listening on port : 9443
[07/Sep/2017:23:52:07 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : FACEBOOK : java.net.MalformedURLException: no protocol: 
[07/Sep/2017:23:52:07 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : GOOGLE : java.net.MalformedURLException: no protocol: 
[07/Sep/2017:23:52:07 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : TWITTER : java.net.MalformedURLException: no protocol: 
[07/Sep/2017:23:52:07 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : YAHOO : java.net.MalformedURLException: no protocol: 
[07/Sep/2017:23:52:07 +0000] [main_1] ERROR : Can't add new entry to keystore
[07/Sep/2017:23:52:07 +0000] [main_1] WARN : javax.net.ssl.SSLHandshakeException: sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target (sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target)
[07/Sep/2017:23:52:07 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : XWHEP Dispatcher(10.6.0-head) started [Thu Sep 07 23:52:07 UTC 2017]
[07/Sep/2017:23:52:07 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : DB vendor  = mysql
[07/Sep/2017:23:52:07 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : mileStone  = 
[07/Sep/2017:23:52:07 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Time out   = 15000
[07/Sep/2017:23:52:07 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Disk opt'd = true
[07/Sep/2017:23:52:07 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Net  opt'd = true
[07/Sep/2017:23:52:07 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : NIO        = true
XWHEP Dispatcher started  Thu Sep 07 23:52:07 UTC 2017
Name             : vagrant-ubuntu-trusty-64
Version          : 10.6.0-head
Identity         : 
XWRole           : SERVER
Started on       : Thu Sep 07 23:52:05 UTC 2017
Scheduler        : xtremweb.dispatcher.MatchingScheduler
SmartSockets hub : 172.28.128.3/172.17.0.1/10.0.2.15-4329#d2.b9.56.bb.cb.7c.00.00.d6.21.02.42.bc.fb.75.e4~vagrant
Server HTTP      : true
Alive            : 300
Alive time out   : 900
Polling time out : 15000
Optimize zip     : true
Optimize network : true
NIO              : true
Comm layer       : xtremweb.communications.TCPClient
Socket time out  : 60000
Socket retries   : 50
Max connections  : 200
TCP port         : 4321
UDP port         : 4323
HTPP  port       : 80
HTPPS port       : 9443
Sun RPC interposition port : 4328
Sandbox path : /usr/bin/lxc
Sandbox launch args : 
Host &lt;host&gt;&lt;uid&gt;fc638b58-cb4b-417f-ab37-bde0a3a8bcda&lt;/uid&gt;&lt;accessrights&gt;0x755&lt;/accessrights&gt;&lt;name&gt;vagrant-ubuntu-trusty-64&lt;/name&gt;&lt;cpuload&gt;50&lt;/cpuload&gt;&lt;natedipaddr&gt;10.0.2.15&lt;/natedipaddr&gt;&lt;ipaddr&gt;10.0.2.15&lt;/ipaddr&gt;&lt;hwaddr&gt;&lt;/hwaddr&gt;&lt;timezone&gt;Etc/UTC&lt;/timezone&gt;&lt;os&gt;LINUX&lt;/os&gt;&lt;osversion&gt;3.13.0-129-generic&lt;/osversion&gt;&lt;javaversion&gt;1.8.0_141&lt;/javaversion&gt;&lt;javadatamodel&gt;64&lt;/javadatamodel&gt;&lt;cputype&gt;AMD64&lt;/cputype&gt;&lt;cpunb&gt;1&lt;/cpunb&gt;&lt;cpumodel&gt;unknown&lt;/cpumodel&gt;&lt;cpuspeed&gt;0&lt;/cpuspeed&gt;&lt;totalmem&gt;0&lt;/totalmem&gt;&lt;totalswap&gt;0&lt;/totalswap&gt;&lt;totaltmp&gt;40284&lt;/totaltmp&gt;&lt;freetmp&gt;37110&lt;/freetmp&gt;&lt;project&gt;&lt;/project&gt;&lt;active&gt;true&lt;/active&gt;&lt;incomingconnections&gt;false&lt;/incomingconnections&gt;&lt;available&gt;false&lt;/available&gt;&lt;pilotjob&gt;false&lt;/pilotjob&gt;&lt;sgid&gt;&lt;/sgid&gt;&lt;timeout&gt;15000&lt;/timeout&gt;&lt;traces&gt;false&lt;/traces&gt;&lt;acceptbin&gt;false&lt;/acceptbin&gt;&lt;version&gt;10.6.0-head&lt;/version&gt;&lt;/host&gt;
[07/Sep/2017:23:52:07 +0000] [xtremweb.communications.HTTPServer_HTTPServer_218] INFO : started, listening on port : 9443
</msg>
<status status="PASS" endtime="20170907 23:52:12.578" starttime="20170907 23:52:12.577"></status>
</kw>
<status status="PASS" endtime="20170907 23:52:12.578" starttime="20170907 23:52:12.576"></status>
</kw>
<status status="PASS" endtime="20170907 23:52:12.578" starttime="20170907 23:52:02.526"></status>
</kw>
<kw name="Start XtremWeb Worker" library="XWWorker">
<arguments>
<arg>${DIST_XWHEP_PATH}</arg>
</arguments>
<kw name="File Should Exist" library="OperatingSystem">
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xtremweb.worker.conf</arg>
</arguments>
<msg timestamp="20170907 23:52:12.579" html="yes" level="INFO">File '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf&lt;/a&gt;' exists.</msg>
<status status="PASS" endtime="20170907 23:52:12.579" starttime="20170907 23:52:12.578"></status>
</kw>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xtremweb.worker.conf</arg>
</arguments>
<assign>
<var>${config_content}</var>
</assign>
<msg timestamp="20170907 23:52:12.580" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf&lt;/a&gt;'.</msg>
<msg timestamp="20170907 23:52:12.581" level="INFO">${config_content} = #
# Copyrights     : CNRS
# Author         : Oleg Lodygensky
# Acknowledgment : XtremWeb-HEP is based on XtremWeb 1.8.0 by inria : http://www.xtremweb.net/
# Web            : http://www.xtremweb-hep.o...</msg>
<status status="PASS" endtime="20170907 23:52:12.581" starttime="20170907 23:52:12.579"></status>
</kw>
<kw name="Remove String Using Regexp" library="String">
<doc>Removes ``patterns`` from the given ``string``.</doc>
<arguments>
<arg>${config_content}</arg>
<arg>LAUNCHERURL=${XWCONFIGURE.VALUES.XWUPGRADEURL}</arg>
</arguments>
<assign>
<var>${config_content_filtered}</var>
</assign>
<msg timestamp="20170907 23:52:12.581" level="INFO">${config_content_filtered} = #
# Copyrights     : CNRS
# Author         : Oleg Lodygensky
# Acknowledgment : XtremWeb-HEP is based on XtremWeb 1.8.0 by inria : http://www.xtremweb.net/
# Web            : http://www.xtremweb-hep.o...</msg>
<status status="PASS" endtime="20170907 23:52:12.581" starttime="20170907 23:52:12.581"></status>
</kw>
<kw name="Create File" library="OperatingSystem">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xtremweb.worker.conf</arg>
<arg>content=${config_content_filtered}</arg>
</arguments>
<msg timestamp="20170907 23:52:12.583" html="yes" level="INFO">Created file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170907 23:52:12.584" starttime="20170907 23:52:12.581"></status>
</kw>
<kw name="Remove File" library="OperatingSystem">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.worker.process.log</arg>
</arguments>
<msg timestamp="20170907 23:52:12.585" html="yes" level="INFO">File '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.worker.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.worker.process.log&lt;/a&gt;' does not exist.</msg>
<status status="PASS" endtime="20170907 23:52:12.585" starttime="20170907 23:52:12.584"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/bin/xtremweb.worker console</arg>
<arg>shell=yes</arg>
<arg>stderr=STDOUT</arg>
<arg>stdout=${DIST_XWHEP_PATH}/xwhep.worker.process.log</arg>
</arguments>
<assign>
<var>${created_process}</var>
</assign>
<msg timestamp="20170907 23:52:12.586" level="INFO">Starting process:
/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/xtremweb.worker console</msg>
<msg timestamp="20170907 23:52:12.590" level="INFO">${created_process} = 65</msg>
<status status="PASS" endtime="20170907 23:52:12.590" starttime="20170907 23:52:12.585"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${WORKER_PROCESS}</arg>
<arg>${created_process}</arg>
</arguments>
<msg timestamp="20170907 23:52:12.591" level="INFO">${WORKER_PROCESS} = 65</msg>
<status status="PASS" endtime="20170907 23:52:12.592" starttime="20170907 23:52:12.590"></status>
</kw>
<kw name="Log File" library="OperatingSystem">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.worker.process.log</arg>
</arguments>
<msg timestamp="20170907 23:52:12.592" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.worker.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.worker.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170907 23:52:12.593" level="INFO"></msg>
<status status="PASS" endtime="20170907 23:52:12.593" starttime="20170907 23:52:12.592"></status>
</kw>
<status status="PASS" endtime="20170907 23:52:12.594" starttime="20170907 23:52:12.578"></status>
</kw>
<status status="PASS" endtime="20170907 23:52:12.594" starttime="20170907 23:52:02.389"></status>
</kw>
<status status="PASS" endtime="20170907 23:52:12.594" starttime="20170907 23:48:12.932"></status>
</kw>
<test id="s1-s5-t1" name="Test XWSenddata Command With LS Binary">
<kw type="setup" name="Begin XWtremWeb Command Test" library="XWCommon">
<kw name="Ping XWtremWeb Database" library="XWServer">
<kw name="Xtremweb Tables Must Exist" library="MySql">
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170907 23:52:12.598" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170907 23:52:12.600" starttime="20170907 23:52:12.597"></status>
</kw>
<status status="PASS" endtime="20170907 23:52:12.601" starttime="20170907 23:52:12.597"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>appTypes</arg>
</arguments>
<msg timestamp="20170907 23:52:12.601" level="INFO">Executing : Table Must Exist  |  appTypes </msg>
<msg timestamp="20170907 23:52:12.602" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='appTypes' </msg>
<status status="PASS" endtime="20170907 23:52:12.604" starttime="20170907 23:52:12.601"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps</arg>
</arguments>
<msg timestamp="20170907 23:52:12.605" level="INFO">Executing : Table Must Exist  |  apps </msg>
<msg timestamp="20170907 23:52:12.605" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='apps' </msg>
<status status="PASS" endtime="20170907 23:52:12.608" starttime="20170907 23:52:12.604"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps_history</arg>
</arguments>
<msg timestamp="20170907 23:52:12.609" level="INFO">Executing : Table Must Exist  |  apps_history </msg>
<msg timestamp="20170907 23:52:12.609" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='apps_history' </msg>
<status status="PASS" endtime="20170907 23:52:12.611" starttime="20170907 23:52:12.608"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>cpuTypes</arg>
</arguments>
<msg timestamp="20170907 23:52:12.611" level="INFO">Executing : Table Must Exist  |  cpuTypes </msg>
<msg timestamp="20170907 23:52:12.611" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='cpuTypes' </msg>
<status status="PASS" endtime="20170907 23:52:12.614" starttime="20170907 23:52:12.611"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>dataTypes</arg>
</arguments>
<msg timestamp="20170907 23:52:12.615" level="INFO">Executing : Table Must Exist  |  dataTypes </msg>
<msg timestamp="20170907 23:52:12.615" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='dataTypes' </msg>
<status status="PASS" endtime="20170907 23:52:12.616" starttime="20170907 23:52:12.614"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas</arg>
</arguments>
<msg timestamp="20170907 23:52:12.617" level="INFO">Executing : Table Must Exist  |  datas </msg>
<msg timestamp="20170907 23:52:12.617" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='datas' </msg>
<status status="PASS" endtime="20170907 23:52:12.618" starttime="20170907 23:52:12.616"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas_history</arg>
</arguments>
<msg timestamp="20170907 23:52:12.618" level="INFO">Executing : Table Must Exist  |  datas_history </msg>
<msg timestamp="20170907 23:52:12.618" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='datas_history' </msg>
<status status="PASS" endtime="20170907 23:52:12.619" starttime="20170907 23:52:12.618"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables</arg>
</arguments>
<msg timestamp="20170907 23:52:12.620" level="INFO">Executing : Table Must Exist  |  executables </msg>
<msg timestamp="20170907 23:52:12.620" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='executables' </msg>
<status status="PASS" endtime="20170907 23:52:12.621" starttime="20170907 23:52:12.620"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables_history</arg>
</arguments>
<msg timestamp="20170907 23:52:12.621" level="INFO">Executing : Table Must Exist  |  executables_history </msg>
<msg timestamp="20170907 23:52:12.621" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='executables_history' </msg>
<status status="PASS" endtime="20170907 23:52:12.623" starttime="20170907 23:52:12.621"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups</arg>
</arguments>
<msg timestamp="20170907 23:52:12.624" level="INFO">Executing : Table Must Exist  |  groups </msg>
<msg timestamp="20170907 23:52:12.624" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='groups' </msg>
<status status="PASS" endtime="20170907 23:52:12.627" starttime="20170907 23:52:12.623"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups_history</arg>
</arguments>
<msg timestamp="20170907 23:52:12.627" level="INFO">Executing : Table Must Exist  |  groups_history </msg>
<msg timestamp="20170907 23:52:12.628" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='groups_history' </msg>
<status status="PASS" endtime="20170907 23:52:12.629" starttime="20170907 23:52:12.627"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts</arg>
</arguments>
<msg timestamp="20170907 23:52:12.629" level="INFO">Executing : Table Must Exist  |  hosts </msg>
<msg timestamp="20170907 23:52:12.629" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='hosts' </msg>
<status status="PASS" endtime="20170907 23:52:12.632" starttime="20170907 23:52:12.629"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts_history</arg>
</arguments>
<msg timestamp="20170907 23:52:12.632" level="INFO">Executing : Table Must Exist  |  hosts_history </msg>
<msg timestamp="20170907 23:52:12.632" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='hosts_history' </msg>
<status status="PASS" endtime="20170907 23:52:12.633" starttime="20170907 23:52:12.632"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships</arg>
</arguments>
<msg timestamp="20170907 23:52:12.634" level="INFO">Executing : Table Must Exist  |  memberships </msg>
<msg timestamp="20170907 23:52:12.634" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='memberships' </msg>
<status status="PASS" endtime="20170907 23:52:12.636" starttime="20170907 23:52:12.634"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships_history</arg>
</arguments>
<msg timestamp="20170907 23:52:12.636" level="INFO">Executing : Table Must Exist  |  memberships_history </msg>
<msg timestamp="20170907 23:52:12.636" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='memberships_history' </msg>
<status status="PASS" endtime="20170907 23:52:12.638" starttime="20170907 23:52:12.636"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>oses</arg>
</arguments>
<msg timestamp="20170907 23:52:12.638" level="INFO">Executing : Table Must Exist  |  oses </msg>
<msg timestamp="20170907 23:52:12.638" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='oses' </msg>
<status status="PASS" endtime="20170907 23:52:12.639" starttime="20170907 23:52:12.638"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>packageTypes</arg>
</arguments>
<msg timestamp="20170907 23:52:12.640" level="INFO">Executing : Table Must Exist  |  packageTypes </msg>
<msg timestamp="20170907 23:52:12.640" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='packageTypes' </msg>
<status status="PASS" endtime="20170907 23:52:12.641" starttime="20170907 23:52:12.639"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions</arg>
</arguments>
<msg timestamp="20170907 23:52:12.641" level="INFO">Executing : Table Must Exist  |  sessions </msg>
<msg timestamp="20170907 23:52:12.641" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sessions' </msg>
<status status="PASS" endtime="20170907 23:52:12.642" starttime="20170907 23:52:12.641"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions_history</arg>
</arguments>
<msg timestamp="20170907 23:52:12.643" level="INFO">Executing : Table Must Exist  |  sessions_history </msg>
<msg timestamp="20170907 23:52:12.643" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sessions_history' </msg>
<status status="PASS" endtime="20170907 23:52:12.645" starttime="20170907 23:52:12.643"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes</arg>
</arguments>
<msg timestamp="20170907 23:52:12.646" level="INFO">Executing : Table Must Exist  |  sharedAppTypes </msg>
<msg timestamp="20170907 23:52:12.646" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedAppTypes' </msg>
<status status="PASS" endtime="20170907 23:52:12.647" starttime="20170907 23:52:12.646"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes_history</arg>
</arguments>
<msg timestamp="20170907 23:52:12.648" level="INFO">Executing : Table Must Exist  |  sharedAppTypes_history </msg>
<msg timestamp="20170907 23:52:12.648" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedAppTypes_history' </msg>
<status status="PASS" endtime="20170907 23:52:12.651" starttime="20170907 23:52:12.648"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes</arg>
</arguments>
<msg timestamp="20170907 23:52:12.651" level="INFO">Executing : Table Must Exist  |  sharedPackageTypes </msg>
<msg timestamp="20170907 23:52:12.651" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedPackageTypes' </msg>
<status status="PASS" endtime="20170907 23:52:12.653" starttime="20170907 23:52:12.651"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes_history</arg>
</arguments>
<msg timestamp="20170907 23:52:12.654" level="INFO">Executing : Table Must Exist  |  sharedPackageTypes_history </msg>
<msg timestamp="20170907 23:52:12.654" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedPackageTypes_history' </msg>
<status status="PASS" endtime="20170907 23:52:12.656" starttime="20170907 23:52:12.653"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>statuses</arg>
</arguments>
<msg timestamp="20170907 23:52:12.657" level="INFO">Executing : Table Must Exist  |  statuses </msg>
<msg timestamp="20170907 23:52:12.657" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='statuses' </msg>
<status status="PASS" endtime="20170907 23:52:12.659" starttime="20170907 23:52:12.656"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks</arg>
</arguments>
<msg timestamp="20170907 23:52:12.659" level="INFO">Executing : Table Must Exist  |  tasks </msg>
<msg timestamp="20170907 23:52:12.659" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='tasks' </msg>
<status status="PASS" endtime="20170907 23:52:12.663" starttime="20170907 23:52:12.659"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks_history</arg>
</arguments>
<msg timestamp="20170907 23:52:12.665" level="INFO">Executing : Table Must Exist  |  tasks_history </msg>
<msg timestamp="20170907 23:52:12.666" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='tasks_history' </msg>
<status status="PASS" endtime="20170907 23:52:12.668" starttime="20170907 23:52:12.664"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces</arg>
</arguments>
<msg timestamp="20170907 23:52:12.669" level="INFO">Executing : Table Must Exist  |  traces </msg>
<msg timestamp="20170907 23:52:12.669" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='traces' </msg>
<status status="PASS" endtime="20170907 23:52:12.671" starttime="20170907 23:52:12.668"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces_history</arg>
</arguments>
<msg timestamp="20170907 23:52:12.672" level="INFO">Executing : Table Must Exist  |  traces_history </msg>
<msg timestamp="20170907 23:52:12.672" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='traces_history' </msg>
<status status="PASS" endtime="20170907 23:52:12.673" starttime="20170907 23:52:12.671"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>userRights</arg>
</arguments>
<msg timestamp="20170907 23:52:12.674" level="INFO">Executing : Table Must Exist  |  userRights </msg>
<msg timestamp="20170907 23:52:12.674" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='userRights' </msg>
<status status="PASS" endtime="20170907 23:52:12.675" starttime="20170907 23:52:12.673"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups</arg>
</arguments>
<msg timestamp="20170907 23:52:12.675" level="INFO">Executing : Table Must Exist  |  usergroups </msg>
<msg timestamp="20170907 23:52:12.675" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='usergroups' </msg>
<status status="PASS" endtime="20170907 23:52:12.677" starttime="20170907 23:52:12.675"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups_history</arg>
</arguments>
<msg timestamp="20170907 23:52:12.678" level="INFO">Executing : Table Must Exist  |  usergroups_history </msg>
<msg timestamp="20170907 23:52:12.678" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='usergroups_history' </msg>
<status status="PASS" endtime="20170907 23:52:12.679" starttime="20170907 23:52:12.678"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users</arg>
</arguments>
<msg timestamp="20170907 23:52:12.680" level="INFO">Executing : Table Must Exist  |  users </msg>
<msg timestamp="20170907 23:52:12.680" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='users' </msg>
<status status="PASS" endtime="20170907 23:52:12.681" starttime="20170907 23:52:12.680"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users_history</arg>
</arguments>
<msg timestamp="20170907 23:52:12.682" level="INFO">Executing : Table Must Exist  |  users_history </msg>
<msg timestamp="20170907 23:52:12.682" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='users_history' </msg>
<status status="PASS" endtime="20170907 23:52:12.683" starttime="20170907 23:52:12.681"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>version</arg>
</arguments>
<msg timestamp="20170907 23:52:12.683" level="INFO">Executing : Table Must Exist  |  version </msg>
<msg timestamp="20170907 23:52:12.684" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='version' </msg>
<status status="PASS" endtime="20170907 23:52:12.684" starttime="20170907 23:52:12.683"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>versions</arg>
</arguments>
<msg timestamp="20170907 23:52:12.686" level="INFO">Executing : Table Must Exist  |  versions </msg>
<msg timestamp="20170907 23:52:12.686" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='versions' </msg>
<status status="PASS" endtime="20170907 23:52:12.687" starttime="20170907 23:52:12.685"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps</arg>
</arguments>
<msg timestamp="20170907 23:52:12.687" level="INFO">Executing : Table Must Exist  |  view_apps </msg>
<msg timestamp="20170907 23:52:12.688" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps' </msg>
<status status="PASS" endtime="20170907 23:52:12.689" starttime="20170907 23:52:12.687"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps_for_offering</arg>
</arguments>
<msg timestamp="20170907 23:52:12.689" level="INFO">Executing : Table Must Exist  |  view_apps_for_offering </msg>
<msg timestamp="20170907 23:52:12.689" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps_for_offering' </msg>
<status status="PASS" endtime="20170907 23:52:12.690" starttime="20170907 23:52:12.689"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps_for_offering_with_file_sizes</arg>
</arguments>
<msg timestamp="20170907 23:52:12.691" level="INFO">Executing : Table Must Exist  |  view_apps_for_offering_with_file_sizes </msg>
<msg timestamp="20170907 23:52:12.691" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps_for_offering_with_file_sizes' </msg>
<status status="PASS" endtime="20170907 23:52:12.692" starttime="20170907 23:52:12.690"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_datas</arg>
</arguments>
<msg timestamp="20170907 23:52:12.692" level="INFO">Executing : Table Must Exist  |  view_datas </msg>
<msg timestamp="20170907 23:52:12.692" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_datas' </msg>
<status status="PASS" endtime="20170907 23:52:12.693" starttime="20170907 23:52:12.692"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_executables</arg>
</arguments>
<msg timestamp="20170907 23:52:12.694" level="INFO">Executing : Table Must Exist  |  view_executables </msg>
<msg timestamp="20170907 23:52:12.694" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_executables' </msg>
<status status="PASS" endtime="20170907 23:52:12.695" starttime="20170907 23:52:12.694"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_groups</arg>
</arguments>
<msg timestamp="20170907 23:52:12.696" level="INFO">Executing : Table Must Exist  |  view_groups </msg>
<msg timestamp="20170907 23:52:12.696" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_groups' </msg>
<status status="PASS" endtime="20170907 23:52:12.697" starttime="20170907 23:52:12.696"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts</arg>
</arguments>
<msg timestamp="20170907 23:52:12.697" level="INFO">Executing : Table Must Exist  |  view_hosts </msg>
<msg timestamp="20170907 23:52:12.697" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts' </msg>
<status status="PASS" endtime="20170907 23:52:12.699" starttime="20170907 23:52:12.697"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_deployable</arg>
</arguments>
<msg timestamp="20170907 23:52:12.699" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_deployable </msg>
<msg timestamp="20170907 23:52:12.699" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_deployable' </msg>
<status status="PASS" endtime="20170907 23:52:12.701" starttime="20170907 23:52:12.699"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_deployable_and_shared</arg>
</arguments>
<msg timestamp="20170907 23:52:12.702" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_deployable_and_shared </msg>
<msg timestamp="20170907 23:52:12.702" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_deployable_and_shared' </msg>
<status status="PASS" endtime="20170907 23:52:12.704" starttime="20170907 23:52:12.702"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_shared</arg>
</arguments>
<msg timestamp="20170907 23:52:12.705" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_shared </msg>
<msg timestamp="20170907 23:52:12.705" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_shared' </msg>
<status status="PASS" endtime="20170907 23:52:12.707" starttime="20170907 23:52:12.705"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_sessions</arg>
</arguments>
<msg timestamp="20170907 23:52:12.708" level="INFO">Executing : Table Must Exist  |  view_sessions </msg>
<msg timestamp="20170907 23:52:12.708" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_sessions' </msg>
<status status="PASS" endtime="20170907 23:52:12.710" starttime="20170907 23:52:12.708"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_tasks</arg>
</arguments>
<msg timestamp="20170907 23:52:12.711" level="INFO">Executing : Table Must Exist  |  view_tasks </msg>
<msg timestamp="20170907 23:52:12.711" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_tasks' </msg>
<status status="PASS" endtime="20170907 23:52:12.713" starttime="20170907 23:52:12.711"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_traces</arg>
</arguments>
<msg timestamp="20170907 23:52:12.714" level="INFO">Executing : Table Must Exist  |  view_traces </msg>
<msg timestamp="20170907 23:52:12.714" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_traces' </msg>
<status status="PASS" endtime="20170907 23:52:12.716" starttime="20170907 23:52:12.713"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_usergroups</arg>
</arguments>
<msg timestamp="20170907 23:52:12.716" level="INFO">Executing : Table Must Exist  |  view_usergroups </msg>
<msg timestamp="20170907 23:52:12.716" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_usergroups' </msg>
<status status="PASS" endtime="20170907 23:52:12.718" starttime="20170907 23:52:12.716"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users</arg>
</arguments>
<msg timestamp="20170907 23:52:12.718" level="INFO">Executing : Table Must Exist  |  view_users </msg>
<msg timestamp="20170907 23:52:12.718" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users' </msg>
<status status="PASS" endtime="20170907 23:52:12.720" starttime="20170907 23:52:12.718"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_apps</arg>
</arguments>
<msg timestamp="20170907 23:52:12.721" level="INFO">Executing : Table Must Exist  |  view_users_apps </msg>
<msg timestamp="20170907 23:52:12.721" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_apps' </msg>
<status status="PASS" endtime="20170907 23:52:12.722" starttime="20170907 23:52:12.720"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_datas</arg>
</arguments>
<msg timestamp="20170907 23:52:12.723" level="INFO">Executing : Table Must Exist  |  view_users_datas </msg>
<msg timestamp="20170907 23:52:12.723" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_datas' </msg>
<status status="PASS" endtime="20170907 23:52:12.724" starttime="20170907 23:52:12.723"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_groups</arg>
</arguments>
<msg timestamp="20170907 23:52:12.724" level="INFO">Executing : Table Must Exist  |  view_users_groups </msg>
<msg timestamp="20170907 23:52:12.724" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_groups' </msg>
<status status="PASS" endtime="20170907 23:52:12.726" starttime="20170907 23:52:12.724"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_hosts</arg>
</arguments>
<msg timestamp="20170907 23:52:12.726" level="INFO">Executing : Table Must Exist  |  view_users_hosts </msg>
<msg timestamp="20170907 23:52:12.726" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_hosts' </msg>
<status status="PASS" endtime="20170907 23:52:12.728" starttime="20170907 23:52:12.726"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_sessions</arg>
</arguments>
<msg timestamp="20170907 23:52:12.728" level="INFO">Executing : Table Must Exist  |  view_users_sessions </msg>
<msg timestamp="20170907 23:52:12.728" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_sessions' </msg>
<status status="PASS" endtime="20170907 23:52:12.729" starttime="20170907 23:52:12.728"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_tasks</arg>
</arguments>
<msg timestamp="20170907 23:52:12.730" level="INFO">Executing : Table Must Exist  |  view_users_tasks </msg>
<msg timestamp="20170907 23:52:12.730" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_tasks' </msg>
<status status="PASS" endtime="20170907 23:52:12.732" starttime="20170907 23:52:12.730"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_traces</arg>
</arguments>
<msg timestamp="20170907 23:52:12.732" level="INFO">Executing : Table Must Exist  |  view_users_traces </msg>
<msg timestamp="20170907 23:52:12.732" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_traces' </msg>
<status status="PASS" endtime="20170907 23:52:12.734" starttime="20170907 23:52:12.732"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_usergroups</arg>
</arguments>
<msg timestamp="20170907 23:52:12.734" level="INFO">Executing : Table Must Exist  |  view_users_usergroups </msg>
<msg timestamp="20170907 23:52:12.734" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_usergroups' </msg>
<status status="PASS" endtime="20170907 23:52:12.735" starttime="20170907 23:52:12.734"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_users</arg>
</arguments>
<msg timestamp="20170907 23:52:12.736" level="INFO">Executing : Table Must Exist  |  view_users_users </msg>
<msg timestamp="20170907 23:52:12.736" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_users' </msg>
<status status="PASS" endtime="20170907 23:52:12.737" starttime="20170907 23:52:12.736"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_works</arg>
</arguments>
<msg timestamp="20170907 23:52:12.738" level="INFO">Executing : Table Must Exist  |  view_users_works </msg>
<msg timestamp="20170907 23:52:12.738" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_works' </msg>
<status status="PASS" endtime="20170907 23:52:12.739" starttime="20170907 23:52:12.737"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works</arg>
</arguments>
<msg timestamp="20170907 23:52:12.740" level="INFO">Executing : Table Must Exist  |  view_works </msg>
<msg timestamp="20170907 23:52:12.740" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works' </msg>
<status status="PASS" endtime="20170907 23:52:12.741" starttime="20170907 23:52:12.739"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works_for_billing</arg>
</arguments>
<msg timestamp="20170907 23:52:12.742" level="INFO">Executing : Table Must Exist  |  view_works_for_billing </msg>
<msg timestamp="20170907 23:52:12.742" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works_for_billing' </msg>
<status status="PASS" endtime="20170907 23:52:12.743" starttime="20170907 23:52:12.741"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works_for_billing_with_file_sizes</arg>
</arguments>
<msg timestamp="20170907 23:52:12.743" level="INFO">Executing : Table Must Exist  |  view_works_for_billing_with_file_sizes </msg>
<msg timestamp="20170907 23:52:12.743" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works_for_billing_with_file_sizes' </msg>
<status status="PASS" endtime="20170907 23:52:12.744" starttime="20170907 23:52:12.743"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works</arg>
</arguments>
<msg timestamp="20170907 23:52:12.745" level="INFO">Executing : Table Must Exist  |  works </msg>
<msg timestamp="20170907 23:52:12.745" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='works' </msg>
<status status="PASS" endtime="20170907 23:52:12.746" starttime="20170907 23:52:12.745"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works_history</arg>
</arguments>
<msg timestamp="20170907 23:52:12.747" level="INFO">Executing : Table Must Exist  |  works_history </msg>
<msg timestamp="20170907 23:52:12.747" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='works_history' </msg>
<status status="PASS" endtime="20170907 23:52:12.748" starttime="20170907 23:52:12.746"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170907 23:52:12.748" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170907 23:52:12.749" starttime="20170907 23:52:12.748"></status>
</kw>
<status status="PASS" endtime="20170907 23:52:12.749" starttime="20170907 23:52:12.748"></status>
</kw>
<status status="PASS" endtime="20170907 23:52:12.749" starttime="20170907 23:52:12.597"></status>
</kw>
<status status="PASS" endtime="20170907 23:52:12.749" starttime="20170907 23:52:12.596"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>TODO ping XWtremWeb server up</arg>
</arguments>
<msg timestamp="20170907 23:52:12.749" level="INFO">TODO ping XWtremWeb server up</msg>
<status status="PASS" endtime="20170907 23:52:12.749" starttime="20170907 23:52:12.749"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>TODO ping XWtremWeb worker up before one test</arg>
</arguments>
<msg timestamp="20170907 23:52:12.750" level="INFO">TODO ping XWtremWeb worker up before one test</msg>
<status status="PASS" endtime="20170907 23:52:12.750" starttime="20170907 23:52:12.750"></status>
</kw>
<kw name="Delete Fonctionnal Xtremweb Tables" library="MySql">
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170907 23:52:12.751" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170907 23:52:12.753" starttime="20170907 23:52:12.751"></status>
</kw>
<status status="PASS" endtime="20170907 23:52:12.753" starttime="20170907 23:52:12.750"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps</arg>
</arguments>
<msg timestamp="20170907 23:52:12.754" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM apps; </msg>
<status status="PASS" endtime="20170907 23:52:12.755" starttime="20170907 23:52:12.754"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps_history</arg>
</arguments>
<msg timestamp="20170907 23:52:12.755" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM apps_history; </msg>
<status status="PASS" endtime="20170907 23:52:12.756" starttime="20170907 23:52:12.755"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas</arg>
</arguments>
<msg timestamp="20170907 23:52:12.756" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM datas; </msg>
<status status="PASS" endtime="20170907 23:52:12.757" starttime="20170907 23:52:12.756"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas_history</arg>
</arguments>
<msg timestamp="20170907 23:52:12.757" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM datas_history; </msg>
<status status="PASS" endtime="20170907 23:52:12.758" starttime="20170907 23:52:12.757"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables</arg>
</arguments>
<msg timestamp="20170907 23:52:12.758" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM executables; </msg>
<status status="PASS" endtime="20170907 23:52:12.759" starttime="20170907 23:52:12.758"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables_history</arg>
</arguments>
<msg timestamp="20170907 23:52:12.759" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM executables_history; </msg>
<status status="PASS" endtime="20170907 23:52:12.760" starttime="20170907 23:52:12.759"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups</arg>
</arguments>
<msg timestamp="20170907 23:52:12.760" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM groups; </msg>
<status status="PASS" endtime="20170907 23:52:12.761" starttime="20170907 23:52:12.760"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups_history</arg>
</arguments>
<msg timestamp="20170907 23:52:12.761" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM groups_history; </msg>
<status status="PASS" endtime="20170907 23:52:12.762" starttime="20170907 23:52:12.761"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts</arg>
</arguments>
<msg timestamp="20170907 23:52:12.762" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM hosts; </msg>
<status status="PASS" endtime="20170907 23:52:12.763" starttime="20170907 23:52:12.762"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts_history</arg>
</arguments>
<msg timestamp="20170907 23:52:12.763" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM hosts_history; </msg>
<status status="PASS" endtime="20170907 23:52:12.764" starttime="20170907 23:52:12.763"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships</arg>
</arguments>
<msg timestamp="20170907 23:52:12.764" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM memberships; </msg>
<status status="PASS" endtime="20170907 23:52:12.765" starttime="20170907 23:52:12.764"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships_history</arg>
</arguments>
<msg timestamp="20170907 23:52:12.765" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM memberships_history; </msg>
<status status="PASS" endtime="20170907 23:52:12.766" starttime="20170907 23:52:12.765"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions</arg>
</arguments>
<msg timestamp="20170907 23:52:12.767" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sessions; </msg>
<status status="PASS" endtime="20170907 23:52:12.767" starttime="20170907 23:52:12.766"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions_history</arg>
</arguments>
<msg timestamp="20170907 23:52:12.767" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sessions_history; </msg>
<status status="PASS" endtime="20170907 23:52:12.768" starttime="20170907 23:52:12.767"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes</arg>
</arguments>
<msg timestamp="20170907 23:52:12.768" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedAppTypes; </msg>
<status status="PASS" endtime="20170907 23:52:12.769" starttime="20170907 23:52:12.768"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes_history</arg>
</arguments>
<msg timestamp="20170907 23:52:12.770" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedAppTypes_history; </msg>
<status status="PASS" endtime="20170907 23:52:12.770" starttime="20170907 23:52:12.769"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes</arg>
</arguments>
<msg timestamp="20170907 23:52:12.770" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedPackageTypes; </msg>
<status status="PASS" endtime="20170907 23:52:12.771" starttime="20170907 23:52:12.770"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes_history</arg>
</arguments>
<msg timestamp="20170907 23:52:12.771" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedPackageTypes_history; </msg>
<status status="PASS" endtime="20170907 23:52:12.772" starttime="20170907 23:52:12.771"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks</arg>
</arguments>
<msg timestamp="20170907 23:52:12.772" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM tasks; </msg>
<status status="PASS" endtime="20170907 23:52:12.773" starttime="20170907 23:52:12.772"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks_history</arg>
</arguments>
<msg timestamp="20170907 23:52:12.773" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM tasks_history; </msg>
<status status="PASS" endtime="20170907 23:52:12.774" starttime="20170907 23:52:12.773"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces</arg>
</arguments>
<msg timestamp="20170907 23:52:12.774" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM traces; </msg>
<status status="PASS" endtime="20170907 23:52:12.775" starttime="20170907 23:52:12.774"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces_history</arg>
</arguments>
<msg timestamp="20170907 23:52:12.775" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM traces_history; </msg>
<status status="PASS" endtime="20170907 23:52:12.776" starttime="20170907 23:52:12.775"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups</arg>
</arguments>
<msg timestamp="20170907 23:52:12.776" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM usergroups; </msg>
<status status="PASS" endtime="20170907 23:52:12.777" starttime="20170907 23:52:12.776"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups_history</arg>
</arguments>
<msg timestamp="20170907 23:52:12.777" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM usergroups_history; </msg>
<status status="PASS" endtime="20170907 23:52:12.777" starttime="20170907 23:52:12.777"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users_history</arg>
</arguments>
<msg timestamp="20170907 23:52:12.778" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM users_history; </msg>
<status status="PASS" endtime="20170907 23:52:12.778" starttime="20170907 23:52:12.778"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works</arg>
</arguments>
<msg timestamp="20170907 23:52:12.779" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM works; </msg>
<status status="PASS" endtime="20170907 23:52:12.779" starttime="20170907 23:52:12.779"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works_history</arg>
</arguments>
<msg timestamp="20170907 23:52:12.780" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM works_history; </msg>
<status status="PASS" endtime="20170907 23:52:12.780" starttime="20170907 23:52:12.779"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170907 23:52:12.781" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170907 23:52:12.781" starttime="20170907 23:52:12.780"></status>
</kw>
<status status="PASS" endtime="20170907 23:52:12.781" starttime="20170907 23:52:12.780"></status>
</kw>
<status status="PASS" endtime="20170907 23:52:12.781" starttime="20170907 23:52:12.750"></status>
</kw>
<kw name="Stop XWtremWeb Server And XWtremWeb Worker" library="XWCommon">
<kw name="Stop XtremWeb Server" library="XWServer">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${SERVER_PROCESS}</arg>
</arguments>
<msg timestamp="20170907 23:52:12.782" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20170907 23:52:12.784" level="INFO">Process completed.</msg>
<status status="PASS" endtime="20170907 23:52:12.785" starttime="20170907 23:52:12.782"></status>
</kw>
<status status="PASS" endtime="20170907 23:52:12.785" starttime="20170907 23:52:12.782"></status>
</kw>
<kw name="Log XtremWeb Server" library="XWCommon">
<kw name="Log XtremWeb Process Log File" library="XWServer">
<kw name="Log File" library="OperatingSystem">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<msg timestamp="20170907 23:52:12.787" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170907 23:52:12.788" level="INFO">Thu Sep  7 23:52:02 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : checking launch url
Thu Sep  7 23:52:02 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] WARNING : no launcher URL defined
Thu Sep  7 23:52:02 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : launching SmartSockets hub
[07/Sep/2017:23:52:05 +0000] [main_1] ERROR : setRole : role redefined ?! (was SERVER)
[07/Sep/2017:23:52:05 +0000] [xtremweb.database.DBConnPoolThread_main_1] INFO : Connection to database jdbc:mysql://localhost/xtremweb is ok, 70 created
[07/Sep/2017:23:52:05 +0000] [xtremweb.dispatcher.DBInterface_main_1] WARN : Can't retrieve any app
[07/Sep/2017:23:52:06 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't create ProxyValidator
[07/Sep/2017:23:52:06 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.io.FileNotFoundException: /tmp/castore (No such file or directory) (/tmp/castore (No such file or directory))
[07/Sep/2017:23:52:06 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't add CA certificates to keystore
[07/Sep/2017:23:52:06 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.lang.NullPointerException (null)
[07/Sep/2017:23:52:06 +0000] [xtremweb.dispatcher.HashTaskSet_TaskSet_14] INFO : TaskSet started (300000)
[07/Sep/2017:23:52:07 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : still waiting task set...
[07/Sep/2017:23:52:07 +0000] [xtremweb.communications.TCPServer_TCPServerNIO_15] INFO : started, listening on port : 4321
[07/Sep/2017:23:52:07 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : UDP server not started
log4j:WARN No appenders could be found for logger (org.eclipse.jetty.util.log).
log4j:WARN Please initialize the log4j system properly.
log4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.
[07/Sep/2017:23:52:07 +0000] [xtremweb.communications.HTTPServer_main_1] INFO : started, listening on port : 9443
[07/Sep/2017:23:52:07 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : FACEBOOK : java.net.MalformedURLException: no protocol: 
[07/Sep/2017:23:52:07 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : GOOGLE : java.net.MalformedURLException: no protocol: 
[07/Sep/2017:23:52:07 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : TWITTER : java.net.MalformedURLException: no protocol: 
[07/Sep/2017:23:52:07 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : YAHOO : java.net.MalformedURLException: no protocol: 
[07/Sep/2017:23:52:07 +0000] [main_1] ERROR : Can't add new entry to keystore
[07/Sep/2017:23:52:07 +0000] [main_1] WARN : javax.net.ssl.SSLHandshakeException: sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target (sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target)
[07/Sep/2017:23:52:07 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : XWHEP Dispatcher(10.6.0-head) started [Thu Sep 07 23:52:07 UTC 2017]
[07/Sep/2017:23:52:07 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : DB vendor  = mysql
[07/Sep/2017:23:52:07 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : mileStone  = 
[07/Sep/2017:23:52:07 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Time out   = 15000
[07/Sep/2017:23:52:07 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Disk opt'd = true
[07/Sep/2017:23:52:07 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Net  opt'd = true
[07/Sep/2017:23:52:07 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : NIO        = true
XWHEP Dispatcher started  Thu Sep 07 23:52:07 UTC 2017
Name             : vagrant-ubuntu-trusty-64
Version          : 10.6.0-head
Identity         : 
XWRole           : SERVER
Started on       : Thu Sep 07 23:52:05 UTC 2017
Scheduler        : xtremweb.dispatcher.MatchingScheduler
SmartSockets hub : 172.28.128.3/172.17.0.1/10.0.2.15-4329#d2.b9.56.bb.cb.7c.00.00.d6.21.02.42.bc.fb.75.e4~vagrant
Server HTTP      : true
Alive            : 300
Alive time out   : 900
Polling time out : 15000
Optimize zip     : true
Optimize network : true
NIO              : true
Comm layer       : xtremweb.communications.TCPClient
Socket time out  : 60000
Socket retries   : 50
Max connections  : 200
TCP port         : 4321
UDP port         : 4323
HTPP  port       : 80
HTPPS port       : 9443
Sun RPC interposition port : 4328
Sandbox path : /usr/bin/lxc
Sandbox launch args : 
Host &lt;host&gt;&lt;uid&gt;fc638b58-cb4b-417f-ab37-bde0a3a8bcda&lt;/uid&gt;&lt;accessrights&gt;0x755&lt;/accessrights&gt;&lt;name&gt;vagrant-ubuntu-trusty-64&lt;/name&gt;&lt;cpuload&gt;50&lt;/cpuload&gt;&lt;natedipaddr&gt;10.0.2.15&lt;/natedipaddr&gt;&lt;ipaddr&gt;10.0.2.15&lt;/ipaddr&gt;&lt;hwaddr&gt;&lt;/hwaddr&gt;&lt;timezone&gt;Etc/UTC&lt;/timezone&gt;&lt;os&gt;LINUX&lt;/os&gt;&lt;osversion&gt;3.13.0-129-generic&lt;/osversion&gt;&lt;javaversion&gt;1.8.0_141&lt;/javaversion&gt;&lt;javadatamodel&gt;64&lt;/javadatamodel&gt;&lt;cputype&gt;AMD64&lt;/cputype&gt;&lt;cpunb&gt;1&lt;/cpunb&gt;&lt;cpumodel&gt;unknown&lt;/cpumodel&gt;&lt;cpuspeed&gt;0&lt;/cpuspeed&gt;&lt;totalmem&gt;0&lt;/totalmem&gt;&lt;totalswap&gt;0&lt;/totalswap&gt;&lt;totaltmp&gt;40284&lt;/totaltmp&gt;&lt;freetmp&gt;37110&lt;/freetmp&gt;&lt;project&gt;&lt;/project&gt;&lt;active&gt;true&lt;/active&gt;&lt;incomingconnections&gt;false&lt;/incomingconnections&gt;&lt;available&gt;false&lt;/available&gt;&lt;pilotjob&gt;false&lt;/pilotjob&gt;&lt;sgid&gt;&lt;/sgid&gt;&lt;timeout&gt;15000&lt;/timeout&gt;&lt;traces&gt;false&lt;/traces&gt;&lt;acceptbin&gt;false&lt;/acceptbin&gt;&lt;version&gt;10.6.0-head&lt;/version&gt;&lt;/host&gt;
[07/Sep/2017:23:52:07 +0000] [xtremweb.communications.HTTPServer_HTTPServer_218] INFO : started, listening on port : 9443
</msg>
<status status="PASS" endtime="20170907 23:52:12.788" starttime="20170907 23:52:12.786"></status>
</kw>
<status status="PASS" endtime="20170907 23:52:12.788" starttime="20170907 23:52:12.786"></status>
</kw>
<status status="PASS" endtime="20170907 23:52:12.788" starttime="20170907 23:52:12.785"></status>
</kw>
<kw name="Stop XtremWeb Worker" library="XWWorker">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Stop XtremWeb Worker</arg>
</arguments>
<msg timestamp="20170907 23:52:12.789" level="INFO">Stop XtremWeb Worker</msg>
<status status="PASS" endtime="20170907 23:52:12.789" starttime="20170907 23:52:12.789"></status>
</kw>
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${WORKER_PROCESS}</arg>
</arguments>
<msg timestamp="20170907 23:52:12.790" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20170907 23:52:12.791" level="INFO">Process completed.</msg>
<status status="PASS" endtime="20170907 23:52:12.792" starttime="20170907 23:52:12.789"></status>
</kw>
<status status="PASS" endtime="20170907 23:52:12.792" starttime="20170907 23:52:12.788"></status>
</kw>
<status status="PASS" endtime="20170907 23:52:12.792" starttime="20170907 23:52:12.781"></status>
</kw>
<kw name="Start XWtremWeb Server And XWtremWeb Worker" library="XWCommon">
<kw name="Ping XWtremWeb Database" library="XWServer">
<kw name="Xtremweb Tables Must Exist" library="MySql">
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170907 23:52:12.794" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170907 23:52:12.796" starttime="20170907 23:52:12.794"></status>
</kw>
<status status="PASS" endtime="20170907 23:52:12.796" starttime="20170907 23:52:12.793"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>appTypes</arg>
</arguments>
<msg timestamp="20170907 23:52:12.797" level="INFO">Executing : Table Must Exist  |  appTypes </msg>
<msg timestamp="20170907 23:52:12.797" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='appTypes' </msg>
<status status="PASS" endtime="20170907 23:52:12.798" starttime="20170907 23:52:12.797"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps</arg>
</arguments>
<msg timestamp="20170907 23:52:12.799" level="INFO">Executing : Table Must Exist  |  apps </msg>
<msg timestamp="20170907 23:52:12.799" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='apps' </msg>
<status status="PASS" endtime="20170907 23:52:12.800" starttime="20170907 23:52:12.798"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps_history</arg>
</arguments>
<msg timestamp="20170907 23:52:12.800" level="INFO">Executing : Table Must Exist  |  apps_history </msg>
<msg timestamp="20170907 23:52:12.800" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='apps_history' </msg>
<status status="PASS" endtime="20170907 23:52:12.802" starttime="20170907 23:52:12.800"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>cpuTypes</arg>
</arguments>
<msg timestamp="20170907 23:52:12.803" level="INFO">Executing : Table Must Exist  |  cpuTypes </msg>
<msg timestamp="20170907 23:52:12.803" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='cpuTypes' </msg>
<status status="PASS" endtime="20170907 23:52:12.806" starttime="20170907 23:52:12.802"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>dataTypes</arg>
</arguments>
<msg timestamp="20170907 23:52:12.807" level="INFO">Executing : Table Must Exist  |  dataTypes </msg>
<msg timestamp="20170907 23:52:12.808" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='dataTypes' </msg>
<status status="PASS" endtime="20170907 23:52:12.811" starttime="20170907 23:52:12.807"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas</arg>
</arguments>
<msg timestamp="20170907 23:52:12.811" level="INFO">Executing : Table Must Exist  |  datas </msg>
<msg timestamp="20170907 23:52:12.812" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='datas' </msg>
<status status="PASS" endtime="20170907 23:52:12.813" starttime="20170907 23:52:12.811"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas_history</arg>
</arguments>
<msg timestamp="20170907 23:52:12.814" level="INFO">Executing : Table Must Exist  |  datas_history </msg>
<msg timestamp="20170907 23:52:12.814" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='datas_history' </msg>
<status status="PASS" endtime="20170907 23:52:12.816" starttime="20170907 23:52:12.814"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables</arg>
</arguments>
<msg timestamp="20170907 23:52:12.816" level="INFO">Executing : Table Must Exist  |  executables </msg>
<msg timestamp="20170907 23:52:12.816" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='executables' </msg>
<status status="PASS" endtime="20170907 23:52:12.818" starttime="20170907 23:52:12.816"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables_history</arg>
</arguments>
<msg timestamp="20170907 23:52:12.819" level="INFO">Executing : Table Must Exist  |  executables_history </msg>
<msg timestamp="20170907 23:52:12.819" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='executables_history' </msg>
<status status="PASS" endtime="20170907 23:52:12.820" starttime="20170907 23:52:12.819"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups</arg>
</arguments>
<msg timestamp="20170907 23:52:12.821" level="INFO">Executing : Table Must Exist  |  groups </msg>
<msg timestamp="20170907 23:52:12.821" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='groups' </msg>
<status status="PASS" endtime="20170907 23:52:12.822" starttime="20170907 23:52:12.821"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups_history</arg>
</arguments>
<msg timestamp="20170907 23:52:12.822" level="INFO">Executing : Table Must Exist  |  groups_history </msg>
<msg timestamp="20170907 23:52:12.822" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='groups_history' </msg>
<status status="PASS" endtime="20170907 23:52:12.823" starttime="20170907 23:52:12.822"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts</arg>
</arguments>
<msg timestamp="20170907 23:52:12.824" level="INFO">Executing : Table Must Exist  |  hosts </msg>
<msg timestamp="20170907 23:52:12.824" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='hosts' </msg>
<status status="PASS" endtime="20170907 23:52:12.824" starttime="20170907 23:52:12.824"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts_history</arg>
</arguments>
<msg timestamp="20170907 23:52:12.825" level="INFO">Executing : Table Must Exist  |  hosts_history </msg>
<msg timestamp="20170907 23:52:12.825" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='hosts_history' </msg>
<status status="PASS" endtime="20170907 23:52:12.826" starttime="20170907 23:52:12.825"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships</arg>
</arguments>
<msg timestamp="20170907 23:52:12.827" level="INFO">Executing : Table Must Exist  |  memberships </msg>
<msg timestamp="20170907 23:52:12.827" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='memberships' </msg>
<status status="PASS" endtime="20170907 23:52:12.828" starttime="20170907 23:52:12.827"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships_history</arg>
</arguments>
<msg timestamp="20170907 23:52:12.828" level="INFO">Executing : Table Must Exist  |  memberships_history </msg>
<msg timestamp="20170907 23:52:12.828" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='memberships_history' </msg>
<status status="PASS" endtime="20170907 23:52:12.829" starttime="20170907 23:52:12.828"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>oses</arg>
</arguments>
<msg timestamp="20170907 23:52:12.830" level="INFO">Executing : Table Must Exist  |  oses </msg>
<msg timestamp="20170907 23:52:12.830" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='oses' </msg>
<status status="PASS" endtime="20170907 23:52:12.832" starttime="20170907 23:52:12.829"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>packageTypes</arg>
</arguments>
<msg timestamp="20170907 23:52:12.832" level="INFO">Executing : Table Must Exist  |  packageTypes </msg>
<msg timestamp="20170907 23:52:12.832" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='packageTypes' </msg>
<status status="PASS" endtime="20170907 23:52:12.833" starttime="20170907 23:52:12.832"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions</arg>
</arguments>
<msg timestamp="20170907 23:52:12.833" level="INFO">Executing : Table Must Exist  |  sessions </msg>
<msg timestamp="20170907 23:52:12.833" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sessions' </msg>
<status status="PASS" endtime="20170907 23:52:12.834" starttime="20170907 23:52:12.833"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions_history</arg>
</arguments>
<msg timestamp="20170907 23:52:12.835" level="INFO">Executing : Table Must Exist  |  sessions_history </msg>
<msg timestamp="20170907 23:52:12.835" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sessions_history' </msg>
<status status="PASS" endtime="20170907 23:52:12.836" starttime="20170907 23:52:12.834"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes</arg>
</arguments>
<msg timestamp="20170907 23:52:12.836" level="INFO">Executing : Table Must Exist  |  sharedAppTypes </msg>
<msg timestamp="20170907 23:52:12.836" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedAppTypes' </msg>
<status status="PASS" endtime="20170907 23:52:12.837" starttime="20170907 23:52:12.836"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes_history</arg>
</arguments>
<msg timestamp="20170907 23:52:12.837" level="INFO">Executing : Table Must Exist  |  sharedAppTypes_history </msg>
<msg timestamp="20170907 23:52:12.837" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedAppTypes_history' </msg>
<status status="PASS" endtime="20170907 23:52:12.838" starttime="20170907 23:52:12.837"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes</arg>
</arguments>
<msg timestamp="20170907 23:52:12.839" level="INFO">Executing : Table Must Exist  |  sharedPackageTypes </msg>
<msg timestamp="20170907 23:52:12.839" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedPackageTypes' </msg>
<status status="PASS" endtime="20170907 23:52:12.840" starttime="20170907 23:52:12.839"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes_history</arg>
</arguments>
<msg timestamp="20170907 23:52:12.840" level="INFO">Executing : Table Must Exist  |  sharedPackageTypes_history </msg>
<msg timestamp="20170907 23:52:12.840" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedPackageTypes_history' </msg>
<status status="PASS" endtime="20170907 23:52:12.841" starttime="20170907 23:52:12.840"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>statuses</arg>
</arguments>
<msg timestamp="20170907 23:52:12.841" level="INFO">Executing : Table Must Exist  |  statuses </msg>
<msg timestamp="20170907 23:52:12.841" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='statuses' </msg>
<status status="PASS" endtime="20170907 23:52:12.842" starttime="20170907 23:52:12.841"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks</arg>
</arguments>
<msg timestamp="20170907 23:52:12.843" level="INFO">Executing : Table Must Exist  |  tasks </msg>
<msg timestamp="20170907 23:52:12.843" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='tasks' </msg>
<status status="PASS" endtime="20170907 23:52:12.844" starttime="20170907 23:52:12.843"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks_history</arg>
</arguments>
<msg timestamp="20170907 23:52:12.844" level="INFO">Executing : Table Must Exist  |  tasks_history </msg>
<msg timestamp="20170907 23:52:12.844" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='tasks_history' </msg>
<status status="PASS" endtime="20170907 23:52:12.845" starttime="20170907 23:52:12.844"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces</arg>
</arguments>
<msg timestamp="20170907 23:52:12.845" level="INFO">Executing : Table Must Exist  |  traces </msg>
<msg timestamp="20170907 23:52:12.845" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='traces' </msg>
<status status="PASS" endtime="20170907 23:52:12.846" starttime="20170907 23:52:12.845"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces_history</arg>
</arguments>
<msg timestamp="20170907 23:52:12.847" level="INFO">Executing : Table Must Exist  |  traces_history </msg>
<msg timestamp="20170907 23:52:12.847" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='traces_history' </msg>
<status status="PASS" endtime="20170907 23:52:12.847" starttime="20170907 23:52:12.846"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>userRights</arg>
</arguments>
<msg timestamp="20170907 23:52:12.848" level="INFO">Executing : Table Must Exist  |  userRights </msg>
<msg timestamp="20170907 23:52:12.848" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='userRights' </msg>
<status status="PASS" endtime="20170907 23:52:12.849" starttime="20170907 23:52:12.848"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups</arg>
</arguments>
<msg timestamp="20170907 23:52:12.849" level="INFO">Executing : Table Must Exist  |  usergroups </msg>
<msg timestamp="20170907 23:52:12.849" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='usergroups' </msg>
<status status="PASS" endtime="20170907 23:52:12.851" starttime="20170907 23:52:12.849"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups_history</arg>
</arguments>
<msg timestamp="20170907 23:52:12.851" level="INFO">Executing : Table Must Exist  |  usergroups_history </msg>
<msg timestamp="20170907 23:52:12.851" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='usergroups_history' </msg>
<status status="PASS" endtime="20170907 23:52:12.853" starttime="20170907 23:52:12.851"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users</arg>
</arguments>
<msg timestamp="20170907 23:52:12.853" level="INFO">Executing : Table Must Exist  |  users </msg>
<msg timestamp="20170907 23:52:12.853" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='users' </msg>
<status status="PASS" endtime="20170907 23:52:12.854" starttime="20170907 23:52:12.853"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users_history</arg>
</arguments>
<msg timestamp="20170907 23:52:12.855" level="INFO">Executing : Table Must Exist  |  users_history </msg>
<msg timestamp="20170907 23:52:12.855" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='users_history' </msg>
<status status="PASS" endtime="20170907 23:52:12.857" starttime="20170907 23:52:12.855"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>version</arg>
</arguments>
<msg timestamp="20170907 23:52:12.857" level="INFO">Executing : Table Must Exist  |  version </msg>
<msg timestamp="20170907 23:52:12.857" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='version' </msg>
<status status="PASS" endtime="20170907 23:52:12.858" starttime="20170907 23:52:12.857"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>versions</arg>
</arguments>
<msg timestamp="20170907 23:52:12.858" level="INFO">Executing : Table Must Exist  |  versions </msg>
<msg timestamp="20170907 23:52:12.859" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='versions' </msg>
<status status="PASS" endtime="20170907 23:52:12.860" starttime="20170907 23:52:12.858"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps</arg>
</arguments>
<msg timestamp="20170907 23:52:12.860" level="INFO">Executing : Table Must Exist  |  view_apps </msg>
<msg timestamp="20170907 23:52:12.860" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps' </msg>
<status status="PASS" endtime="20170907 23:52:12.862" starttime="20170907 23:52:12.860"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps_for_offering</arg>
</arguments>
<msg timestamp="20170907 23:52:12.862" level="INFO">Executing : Table Must Exist  |  view_apps_for_offering </msg>
<msg timestamp="20170907 23:52:12.863" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps_for_offering' </msg>
<status status="PASS" endtime="20170907 23:52:12.864" starttime="20170907 23:52:12.862"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps_for_offering_with_file_sizes</arg>
</arguments>
<msg timestamp="20170907 23:52:12.864" level="INFO">Executing : Table Must Exist  |  view_apps_for_offering_with_file_sizes </msg>
<msg timestamp="20170907 23:52:12.864" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps_for_offering_with_file_sizes' </msg>
<status status="PASS" endtime="20170907 23:52:12.865" starttime="20170907 23:52:12.864"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_datas</arg>
</arguments>
<msg timestamp="20170907 23:52:12.866" level="INFO">Executing : Table Must Exist  |  view_datas </msg>
<msg timestamp="20170907 23:52:12.866" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_datas' </msg>
<status status="PASS" endtime="20170907 23:52:12.866" starttime="20170907 23:52:12.865"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_executables</arg>
</arguments>
<msg timestamp="20170907 23:52:12.867" level="INFO">Executing : Table Must Exist  |  view_executables </msg>
<msg timestamp="20170907 23:52:12.867" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_executables' </msg>
<status status="PASS" endtime="20170907 23:52:12.869" starttime="20170907 23:52:12.867"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_groups</arg>
</arguments>
<msg timestamp="20170907 23:52:12.869" level="INFO">Executing : Table Must Exist  |  view_groups </msg>
<msg timestamp="20170907 23:52:12.869" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_groups' </msg>
<status status="PASS" endtime="20170907 23:52:12.871" starttime="20170907 23:52:12.869"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts</arg>
</arguments>
<msg timestamp="20170907 23:52:12.872" level="INFO">Executing : Table Must Exist  |  view_hosts </msg>
<msg timestamp="20170907 23:52:12.872" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts' </msg>
<status status="PASS" endtime="20170907 23:52:12.873" starttime="20170907 23:52:12.871"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_deployable</arg>
</arguments>
<msg timestamp="20170907 23:52:12.873" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_deployable </msg>
<msg timestamp="20170907 23:52:12.873" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_deployable' </msg>
<status status="PASS" endtime="20170907 23:52:12.874" starttime="20170907 23:52:12.873"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_deployable_and_shared</arg>
</arguments>
<msg timestamp="20170907 23:52:12.875" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_deployable_and_shared </msg>
<msg timestamp="20170907 23:52:12.875" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_deployable_and_shared' </msg>
<status status="PASS" endtime="20170907 23:52:12.876" starttime="20170907 23:52:12.875"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_shared</arg>
</arguments>
<msg timestamp="20170907 23:52:12.876" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_shared </msg>
<msg timestamp="20170907 23:52:12.876" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_shared' </msg>
<status status="PASS" endtime="20170907 23:52:12.878" starttime="20170907 23:52:12.876"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_sessions</arg>
</arguments>
<msg timestamp="20170907 23:52:12.878" level="INFO">Executing : Table Must Exist  |  view_sessions </msg>
<msg timestamp="20170907 23:52:12.878" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_sessions' </msg>
<status status="PASS" endtime="20170907 23:52:12.879" starttime="20170907 23:52:12.878"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_tasks</arg>
</arguments>
<msg timestamp="20170907 23:52:12.879" level="INFO">Executing : Table Must Exist  |  view_tasks </msg>
<msg timestamp="20170907 23:52:12.879" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_tasks' </msg>
<status status="PASS" endtime="20170907 23:52:12.880" starttime="20170907 23:52:12.879"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_traces</arg>
</arguments>
<msg timestamp="20170907 23:52:12.881" level="INFO">Executing : Table Must Exist  |  view_traces </msg>
<msg timestamp="20170907 23:52:12.881" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_traces' </msg>
<status status="PASS" endtime="20170907 23:52:12.881" starttime="20170907 23:52:12.880"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_usergroups</arg>
</arguments>
<msg timestamp="20170907 23:52:12.882" level="INFO">Executing : Table Must Exist  |  view_usergroups </msg>
<msg timestamp="20170907 23:52:12.882" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_usergroups' </msg>
<status status="PASS" endtime="20170907 23:52:12.883" starttime="20170907 23:52:12.882"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users</arg>
</arguments>
<msg timestamp="20170907 23:52:12.883" level="INFO">Executing : Table Must Exist  |  view_users </msg>
<msg timestamp="20170907 23:52:12.883" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users' </msg>
<status status="PASS" endtime="20170907 23:52:12.884" starttime="20170907 23:52:12.883"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_apps</arg>
</arguments>
<msg timestamp="20170907 23:52:12.885" level="INFO">Executing : Table Must Exist  |  view_users_apps </msg>
<msg timestamp="20170907 23:52:12.885" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_apps' </msg>
<status status="PASS" endtime="20170907 23:52:12.886" starttime="20170907 23:52:12.885"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_datas</arg>
</arguments>
<msg timestamp="20170907 23:52:12.886" level="INFO">Executing : Table Must Exist  |  view_users_datas </msg>
<msg timestamp="20170907 23:52:12.887" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_datas' </msg>
<status status="PASS" endtime="20170907 23:52:12.888" starttime="20170907 23:52:12.886"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_groups</arg>
</arguments>
<msg timestamp="20170907 23:52:12.888" level="INFO">Executing : Table Must Exist  |  view_users_groups </msg>
<msg timestamp="20170907 23:52:12.888" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_groups' </msg>
<status status="PASS" endtime="20170907 23:52:12.889" starttime="20170907 23:52:12.888"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_hosts</arg>
</arguments>
<msg timestamp="20170907 23:52:12.889" level="INFO">Executing : Table Must Exist  |  view_users_hosts </msg>
<msg timestamp="20170907 23:52:12.889" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_hosts' </msg>
<status status="PASS" endtime="20170907 23:52:12.890" starttime="20170907 23:52:12.889"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_sessions</arg>
</arguments>
<msg timestamp="20170907 23:52:12.891" level="INFO">Executing : Table Must Exist  |  view_users_sessions </msg>
<msg timestamp="20170907 23:52:12.891" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_sessions' </msg>
<status status="PASS" endtime="20170907 23:52:12.893" starttime="20170907 23:52:12.891"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_tasks</arg>
</arguments>
<msg timestamp="20170907 23:52:12.894" level="INFO">Executing : Table Must Exist  |  view_users_tasks </msg>
<msg timestamp="20170907 23:52:12.894" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_tasks' </msg>
<status status="PASS" endtime="20170907 23:52:12.894" starttime="20170907 23:52:12.893"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_traces</arg>
</arguments>
<msg timestamp="20170907 23:52:12.895" level="INFO">Executing : Table Must Exist  |  view_users_traces </msg>
<msg timestamp="20170907 23:52:12.895" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_traces' </msg>
<status status="PASS" endtime="20170907 23:52:12.896" starttime="20170907 23:52:12.895"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_usergroups</arg>
</arguments>
<msg timestamp="20170907 23:52:12.896" level="INFO">Executing : Table Must Exist  |  view_users_usergroups </msg>
<msg timestamp="20170907 23:52:12.896" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_usergroups' </msg>
<status status="PASS" endtime="20170907 23:52:12.897" starttime="20170907 23:52:12.896"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_users</arg>
</arguments>
<msg timestamp="20170907 23:52:12.897" level="INFO">Executing : Table Must Exist  |  view_users_users </msg>
<msg timestamp="20170907 23:52:12.898" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_users' </msg>
<status status="PASS" endtime="20170907 23:52:12.899" starttime="20170907 23:52:12.897"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_works</arg>
</arguments>
<msg timestamp="20170907 23:52:12.900" level="INFO">Executing : Table Must Exist  |  view_users_works </msg>
<msg timestamp="20170907 23:52:12.900" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_works' </msg>
<status status="PASS" endtime="20170907 23:52:12.903" starttime="20170907 23:52:12.899"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works</arg>
</arguments>
<msg timestamp="20170907 23:52:12.903" level="INFO">Executing : Table Must Exist  |  view_works </msg>
<msg timestamp="20170907 23:52:12.903" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works' </msg>
<status status="PASS" endtime="20170907 23:52:12.906" starttime="20170907 23:52:12.903"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works_for_billing</arg>
</arguments>
<msg timestamp="20170907 23:52:12.907" level="INFO">Executing : Table Must Exist  |  view_works_for_billing </msg>
<msg timestamp="20170907 23:52:12.907" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works_for_billing' </msg>
<status status="PASS" endtime="20170907 23:52:12.909" starttime="20170907 23:52:12.906"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works_for_billing_with_file_sizes</arg>
</arguments>
<msg timestamp="20170907 23:52:12.910" level="INFO">Executing : Table Must Exist  |  view_works_for_billing_with_file_sizes </msg>
<msg timestamp="20170907 23:52:12.910" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works_for_billing_with_file_sizes' </msg>
<status status="PASS" endtime="20170907 23:52:12.913" starttime="20170907 23:52:12.909"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works</arg>
</arguments>
<msg timestamp="20170907 23:52:12.914" level="INFO">Executing : Table Must Exist  |  works </msg>
<msg timestamp="20170907 23:52:12.914" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='works' </msg>
<status status="PASS" endtime="20170907 23:52:12.916" starttime="20170907 23:52:12.913"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works_history</arg>
</arguments>
<msg timestamp="20170907 23:52:12.917" level="INFO">Executing : Table Must Exist  |  works_history </msg>
<msg timestamp="20170907 23:52:12.917" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='works_history' </msg>
<status status="PASS" endtime="20170907 23:52:12.919" starttime="20170907 23:52:12.916"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170907 23:52:12.920" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170907 23:52:12.920" starttime="20170907 23:52:12.920"></status>
</kw>
<status status="PASS" endtime="20170907 23:52:12.921" starttime="20170907 23:52:12.920"></status>
</kw>
<status status="PASS" endtime="20170907 23:52:12.921" starttime="20170907 23:52:12.793"></status>
</kw>
<status status="PASS" endtime="20170907 23:52:12.921" starttime="20170907 23:52:12.792"></status>
</kw>
<kw name="Start XtremWeb Server" library="XWServer">
<arguments>
<arg>${DIST_XWHEP_PATH}</arg>
</arguments>
<kw name="File Should Exist" library="OperatingSystem">
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xtremweb.server.conf</arg>
</arguments>
<msg timestamp="20170907 23:52:12.923" html="yes" level="INFO">File '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf&lt;/a&gt;' exists.</msg>
<status status="PASS" endtime="20170907 23:52:12.923" starttime="20170907 23:52:12.922"></status>
</kw>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xtremweb.server.conf</arg>
</arguments>
<assign>
<var>${config_content}</var>
</assign>
<msg timestamp="20170907 23:52:12.925" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf&lt;/a&gt;'.</msg>
<msg timestamp="20170907 23:52:12.926" level="INFO">${config_content} = #
# Copyrights     : CNRS
# Author         : Oleg Lodygensky
# Acknowledgment : XtremWeb-HEP is based on XtremWeb 1.8.0 by inria : http://www.xtremweb.net/
# Web            : http://www.xtremweb-hep.o...</msg>
<status status="PASS" endtime="20170907 23:52:12.926" starttime="20170907 23:52:12.924"></status>
</kw>
<kw name="Remove String Using Regexp" library="String">
<doc>Removes ``patterns`` from the given ``string``.</doc>
<arguments>
<arg>${config_content}</arg>
<arg>LAUNCHERURL=${XWCONFIGURE.VALUES.XWUPGRADEURL}</arg>
</arguments>
<assign>
<var>${config_content_filtered}</var>
</assign>
<msg timestamp="20170907 23:52:12.927" level="INFO">${config_content_filtered} = #
# Copyrights     : CNRS
# Author         : Oleg Lodygensky
# Acknowledgment : XtremWeb-HEP is based on XtremWeb 1.8.0 by inria : http://www.xtremweb.net/
# Web            : http://www.xtremweb-hep.o...</msg>
<status status="PASS" endtime="20170907 23:52:12.927" starttime="20170907 23:52:12.927"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${config_content_filtered}</arg>
<arg>\## HTTPSPORT=443</arg>
<arg>HTTPSPORT=${XWCONFIGURE.VALUES.HTTPSPORT}</arg>
</arguments>
<assign>
<var>${config_content_filtered}</var>
</assign>
<msg timestamp="20170907 23:52:12.928" level="INFO">${config_content_filtered} = #
# Copyrights     : CNRS
# Author         : Oleg Lodygensky
# Acknowledgment : XtremWeb-HEP is based on XtremWeb 1.8.0 by inria : http://www.xtremweb.net/
# Web            : http://www.xtremweb-hep.o...</msg>
<status status="PASS" endtime="20170907 23:52:12.929" starttime="20170907 23:52:12.928"></status>
</kw>
<kw name="Create File" library="OperatingSystem">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xtremweb.server.conf</arg>
<arg>content=${config_content_filtered}</arg>
</arguments>
<msg timestamp="20170907 23:52:12.931" html="yes" level="INFO">Created file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170907 23:52:12.932" starttime="20170907 23:52:12.929"></status>
</kw>
<kw name="Remove File" library="OperatingSystem">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<msg timestamp="20170907 23:52:12.936" html="yes" level="INFO">Removed file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170907 23:52:12.936" starttime="20170907 23:52:12.932"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/bin/xtremweb.server console</arg>
<arg>shell=yes</arg>
<arg>stderr=STDOUT</arg>
<arg>stdout=${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<assign>
<var>${created_process}</var>
</assign>
<msg timestamp="20170907 23:52:12.937" level="INFO">Starting process:
/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/xtremweb.server console</msg>
<msg timestamp="20170907 23:52:12.941" level="INFO">${created_process} = 66</msg>
<status status="PASS" endtime="20170907 23:52:12.941" starttime="20170907 23:52:12.936"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SERVER_PROCESS}</arg>
<arg>${created_process}</arg>
</arguments>
<msg timestamp="20170907 23:52:12.943" level="INFO">${SERVER_PROCESS} = 66</msg>
<status status="PASS" endtime="20170907 23:52:12.944" starttime="20170907 23:52:12.942"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2 min</arg>
<arg>5 sec</arg>
<arg>Check XtremWeb Server Start From Log</arg>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<kw name="Check XtremWeb Server Start From Log" library="XWServer">
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<kw name="Log XtremWeb Process Log File" library="XWServer">
<kw name="Log File" library="OperatingSystem">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<msg timestamp="20170907 23:52:12.946" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170907 23:52:12.948" level="INFO"></msg>
<status status="PASS" endtime="20170907 23:52:12.948" starttime="20170907 23:52:12.946"></status>
</kw>
<status status="PASS" endtime="20170907 23:52:12.948" starttime="20170907 23:52:12.945"></status>
</kw>
<kw name="Grep File" library="OperatingSystem">
<doc>Returns the lines of the specified file that match the ``pattern``.</doc>
<arguments>
<arg>${log}</arg>
<arg>listening on port : ${XWCONFIGURE.VALUES.HTTPSPORT}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20170907 23:52:12.949" html="yes" level="INFO">Reading file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170907 23:52:12.950" level="INFO">0 out of 0 lines matched</msg>
<msg timestamp="20170907 23:52:12.950" level="INFO">${ret} = </msg>
<status status="PASS" endtime="20170907 23:52:12.950" starttime="20170907 23:52:12.948"></status>
</kw>
<kw name="Get Line Count" library="String">
<doc>Returns and logs the number of lines in the given string.</doc>
<arguments>
<arg>${ret}</arg>
</arguments>
<assign>
<var>${line_count}</var>
</assign>
<msg timestamp="20170907 23:52:12.951" level="INFO">0 lines</msg>
<msg timestamp="20170907 23:52:12.952" level="INFO">${line_count} = 0</msg>
<status status="PASS" endtime="20170907 23:52:12.952" starttime="20170907 23:52:12.951"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${line_count}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20170907 23:52:12.953" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20170907 23:52:12.953" level="FAIL">0 != 2</msg>
<status status="FAIL" endtime="20170907 23:52:12.953" starttime="20170907 23:52:12.952"></status>
</kw>
<status status="FAIL" endtime="20170907 23:52:12.954" starttime="20170907 23:52:12.945"></status>
</kw>
<kw name="Check XtremWeb Server Start From Log" library="XWServer">
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<kw name="Log XtremWeb Process Log File" library="XWServer">
<kw name="Log File" library="OperatingSystem">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<msg timestamp="20170907 23:52:17.957" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170907 23:52:17.959" level="INFO">Thu Sep  7 23:52:13 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : checking launch url
Thu Sep  7 23:52:13 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] WARNING : no launcher URL defined
Thu Sep  7 23:52:13 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : launching SmartSockets hub
[07/Sep/2017:23:52:15 +0000] [main_1] ERROR : setRole : role redefined ?! (was SERVER)
[07/Sep/2017:23:52:16 +0000] [xtremweb.database.DBConnPoolThread_main_1] INFO : Connection to database jdbc:mysql://localhost/xtremweb is ok, 70 created
[07/Sep/2017:23:52:16 +0000] [xtremweb.dispatcher.DBInterface_main_1] WARN : Can't retrieve any app
[07/Sep/2017:23:52:16 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't create ProxyValidator
[07/Sep/2017:23:52:16 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.io.FileNotFoundException: /tmp/castore (No such file or directory) (/tmp/castore (No such file or directory))
[07/Sep/2017:23:52:16 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't add CA certificates to keystore
[07/Sep/2017:23:52:16 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.lang.NullPointerException (null)
[07/Sep/2017:23:52:16 +0000] [xtremweb.dispatcher.HashTaskSet_TaskSet_14] INFO : TaskSet started (300000)
[07/Sep/2017:23:52:17 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : still waiting task set...
[07/Sep/2017:23:52:17 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : UDP server not started
[07/Sep/2017:23:52:17 +0000] [xtremweb.communications.TCPServer_TCPServerNIO_15] INFO : started, listening on port : 4321
log4j:WARN No appenders could be found for logger (org.eclipse.jetty.util.log).
log4j:WARN Please initialize the log4j system properly.
log4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.
[07/Sep/2017:23:52:17 +0000] [xtremweb.communications.HTTPServer_main_1] INFO : started, listening on port : 9443
[07/Sep/2017:23:52:17 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : FACEBOOK : java.net.MalformedURLException: no protocol: 
[07/Sep/2017:23:52:17 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : GOOGLE : java.net.MalformedURLException: no protocol: 
[07/Sep/2017:23:52:17 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : TWITTER : java.net.MalformedURLException: no protocol: 
[07/Sep/2017:23:52:17 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : YAHOO : java.net.MalformedURLException: no protocol: 
</msg>
<status status="PASS" endtime="20170907 23:52:17.959" starttime="20170907 23:52:17.956"></status>
</kw>
<status status="PASS" endtime="20170907 23:52:17.959" starttime="20170907 23:52:17.955"></status>
</kw>
<kw name="Grep File" library="OperatingSystem">
<doc>Returns the lines of the specified file that match the ``pattern``.</doc>
<arguments>
<arg>${log}</arg>
<arg>listening on port : ${XWCONFIGURE.VALUES.HTTPSPORT}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20170907 23:52:17.960" html="yes" level="INFO">Reading file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170907 23:52:17.962" level="INFO">1 out of 22 lines matched</msg>
<msg timestamp="20170907 23:52:17.962" level="INFO">${ret} = [07/Sep/2017:23:52:17 +0000] [xtremweb.communications.HTTPServer_main_1] INFO : started, listening on port : 9443</msg>
<status status="PASS" endtime="20170907 23:52:17.962" starttime="20170907 23:52:17.960"></status>
</kw>
<kw name="Get Line Count" library="String">
<doc>Returns and logs the number of lines in the given string.</doc>
<arguments>
<arg>${ret}</arg>
</arguments>
<assign>
<var>${line_count}</var>
</assign>
<msg timestamp="20170907 23:52:17.963" level="INFO">1 lines</msg>
<msg timestamp="20170907 23:52:17.963" level="INFO">${line_count} = 1</msg>
<status status="PASS" endtime="20170907 23:52:17.963" starttime="20170907 23:52:17.962"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${line_count}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20170907 23:52:17.964" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20170907 23:52:17.964" level="FAIL">1 != 2</msg>
<status status="FAIL" endtime="20170907 23:52:17.965" starttime="20170907 23:52:17.964"></status>
</kw>
<status status="FAIL" endtime="20170907 23:52:17.965" starttime="20170907 23:52:17.954"></status>
</kw>
<kw name="Check XtremWeb Server Start From Log" library="XWServer">
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<kw name="Log XtremWeb Process Log File" library="XWServer">
<kw name="Log File" library="OperatingSystem">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<msg timestamp="20170907 23:52:22.968" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170907 23:52:22.972" level="INFO">Thu Sep  7 23:52:13 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : checking launch url
Thu Sep  7 23:52:13 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] WARNING : no launcher URL defined
Thu Sep  7 23:52:13 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : launching SmartSockets hub
[07/Sep/2017:23:52:15 +0000] [main_1] ERROR : setRole : role redefined ?! (was SERVER)
[07/Sep/2017:23:52:16 +0000] [xtremweb.database.DBConnPoolThread_main_1] INFO : Connection to database jdbc:mysql://localhost/xtremweb is ok, 70 created
[07/Sep/2017:23:52:16 +0000] [xtremweb.dispatcher.DBInterface_main_1] WARN : Can't retrieve any app
[07/Sep/2017:23:52:16 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't create ProxyValidator
[07/Sep/2017:23:52:16 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.io.FileNotFoundException: /tmp/castore (No such file or directory) (/tmp/castore (No such file or directory))
[07/Sep/2017:23:52:16 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't add CA certificates to keystore
[07/Sep/2017:23:52:16 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.lang.NullPointerException (null)
[07/Sep/2017:23:52:16 +0000] [xtremweb.dispatcher.HashTaskSet_TaskSet_14] INFO : TaskSet started (300000)
[07/Sep/2017:23:52:17 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : still waiting task set...
[07/Sep/2017:23:52:17 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : UDP server not started
[07/Sep/2017:23:52:17 +0000] [xtremweb.communications.TCPServer_TCPServerNIO_15] INFO : started, listening on port : 4321
log4j:WARN No appenders could be found for logger (org.eclipse.jetty.util.log).
log4j:WARN Please initialize the log4j system properly.
log4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.
[07/Sep/2017:23:52:17 +0000] [xtremweb.communications.HTTPServer_main_1] INFO : started, listening on port : 9443
[07/Sep/2017:23:52:17 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : FACEBOOK : java.net.MalformedURLException: no protocol: 
[07/Sep/2017:23:52:17 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : GOOGLE : java.net.MalformedURLException: no protocol: 
[07/Sep/2017:23:52:17 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : TWITTER : java.net.MalformedURLException: no protocol: 
[07/Sep/2017:23:52:17 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : YAHOO : java.net.MalformedURLException: no protocol: 
[07/Sep/2017:23:52:18 +0000] [main_1] ERROR : Can't add new entry to keystore
[07/Sep/2017:23:52:18 +0000] [main_1] WARN : javax.net.ssl.SSLHandshakeException: sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target (sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target)
[07/Sep/2017:23:52:18 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : XWHEP Dispatcher(10.6.0-head) started [Thu Sep 07 23:52:18 UTC 2017]
[07/Sep/2017:23:52:18 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : DB vendor  = mysql
[07/Sep/2017:23:52:18 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : mileStone  = 
[07/Sep/2017:23:52:18 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Time out   = 15000
[07/Sep/2017:23:52:18 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Disk opt'd = true
[07/Sep/2017:23:52:18 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Net  opt'd = true
[07/Sep/2017:23:52:18 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : NIO        = true
XWHEP Dispatcher started  Thu Sep 07 23:52:18 UTC 2017
Name             : vagrant-ubuntu-trusty-64
Version          : 10.6.0-head
Identity         : 
XWRole           : SERVER
Started on       : Thu Sep 07 23:52:15 UTC 2017
Scheduler        : xtremweb.dispatcher.MatchingScheduler
SmartSockets hub : 172.28.128.3/172.17.0.1/10.0.2.15-4329#c6.52.58.bb.cb.7c.00.00.b7.e0.02.42.bc.fb.75.e4~vagrant
Server HTTP      : true
Alive            : 300
Alive time out   : 900
Polling time out : 15000
Optimize zip     : true
Optimize network : true
NIO              : true
Comm layer       : xtremweb.communications.TCPClient
Socket time out  : 60000
Socket retries   : 50
Max connections  : 200
TCP port         : 4321
UDP port         : 4323
HTPP  port       : 80
HTPPS port       : 9443
Sun RPC interposition port : 4328
Sandbox path : /usr/bin/lxc
Sandbox launch args : 
Host &lt;host&gt;&lt;uid&gt;fbdb9d65-61c9-4ca1-8232-e725e1850d22&lt;/uid&gt;&lt;accessrights&gt;0x755&lt;/accessrights&gt;&lt;name&gt;vagrant-ubuntu-trusty-64&lt;/name&gt;&lt;cpuload&gt;50&lt;/cpuload&gt;&lt;natedipaddr&gt;10.0.2.15&lt;/natedipaddr&gt;&lt;ipaddr&gt;10.0.2.15&lt;/ipaddr&gt;&lt;hwaddr&gt;&lt;/hwaddr&gt;&lt;timezone&gt;Etc/UTC&lt;/timezone&gt;&lt;os&gt;LINUX&lt;/os&gt;&lt;osversion&gt;3.13.0-129-generic&lt;/osversion&gt;&lt;javaversion&gt;1.8.0_141&lt;/javaversion&gt;&lt;javadatamodel&gt;64&lt;/javadatamodel&gt;&lt;cputype&gt;AMD64&lt;/cputype&gt;&lt;cpunb&gt;1&lt;/cpunb&gt;&lt;cpumodel&gt;unknown&lt;/cpumodel&gt;&lt;cpuspeed&gt;0&lt;/cpuspeed&gt;&lt;totalmem&gt;0&lt;/totalmem&gt;&lt;totalswap&gt;0&lt;/totalswap&gt;&lt;totaltmp&gt;40284&lt;/totaltmp&gt;&lt;freetmp&gt;37110&lt;/freetmp&gt;&lt;project&gt;&lt;/project&gt;&lt;active&gt;true&lt;/active&gt;&lt;incomingconnections&gt;false&lt;/incomingconnections&gt;&lt;available&gt;false&lt;/available&gt;&lt;pilotjob&gt;false&lt;/pilotjob&gt;&lt;sgid&gt;&lt;/sgid&gt;&lt;timeout&gt;15000&lt;/timeout&gt;&lt;traces&gt;false&lt;/traces&gt;&lt;acceptbin&gt;false&lt;/acceptbin&gt;&lt;version&gt;10.6.0-head&lt;/version&gt;&lt;/host&gt;
[07/Sep/2017:23:52:18 +0000] [xtremweb.communications.HTTPServer_HTTPServer_218] INFO : started, listening on port : 9443
</msg>
<status status="PASS" endtime="20170907 23:52:22.972" starttime="20170907 23:52:22.967"></status>
</kw>
<status status="PASS" endtime="20170907 23:52:22.973" starttime="20170907 23:52:22.967"></status>
</kw>
<kw name="Grep File" library="OperatingSystem">
<doc>Returns the lines of the specified file that match the ``pattern``.</doc>
<arguments>
<arg>${log}</arg>
<arg>listening on port : ${XWCONFIGURE.VALUES.HTTPSPORT}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20170907 23:52:22.974" html="yes" level="INFO">Reading file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170907 23:52:22.975" level="INFO">2 out of 59 lines matched</msg>
<msg timestamp="20170907 23:52:22.976" level="INFO">${ret} = [07/Sep/2017:23:52:17 +0000] [xtremweb.communications.HTTPServer_main_1] INFO : started, listening on port : 9443
[07/Sep/2017:23:52:18 +0000] [xtremweb.communications.HTTPServer_HTTPServer_218] INFO ...</msg>
<status status="PASS" endtime="20170907 23:52:22.976" starttime="20170907 23:52:22.973"></status>
</kw>
<kw name="Get Line Count" library="String">
<doc>Returns and logs the number of lines in the given string.</doc>
<arguments>
<arg>${ret}</arg>
</arguments>
<assign>
<var>${line_count}</var>
</assign>
<msg timestamp="20170907 23:52:22.976" level="INFO">2 lines</msg>
<msg timestamp="20170907 23:52:22.977" level="INFO">${line_count} = 2</msg>
<status status="PASS" endtime="20170907 23:52:22.977" starttime="20170907 23:52:22.976"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${line_count}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20170907 23:52:22.977" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170907 23:52:22.978" starttime="20170907 23:52:22.977"></status>
</kw>
<status status="PASS" endtime="20170907 23:52:22.978" starttime="20170907 23:52:22.965"></status>
</kw>
<status status="PASS" endtime="20170907 23:52:22.978" starttime="20170907 23:52:12.944"></status>
</kw>
<kw name="Log XtremWeb Process Log File" library="XWServer">
<kw name="Log File" library="OperatingSystem">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<msg timestamp="20170907 23:52:22.979" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170907 23:52:22.979" level="INFO">Thu Sep  7 23:52:13 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : checking launch url
Thu Sep  7 23:52:13 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] WARNING : no launcher URL defined
Thu Sep  7 23:52:13 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : launching SmartSockets hub
[07/Sep/2017:23:52:15 +0000] [main_1] ERROR : setRole : role redefined ?! (was SERVER)
[07/Sep/2017:23:52:16 +0000] [xtremweb.database.DBConnPoolThread_main_1] INFO : Connection to database jdbc:mysql://localhost/xtremweb is ok, 70 created
[07/Sep/2017:23:52:16 +0000] [xtremweb.dispatcher.DBInterface_main_1] WARN : Can't retrieve any app
[07/Sep/2017:23:52:16 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't create ProxyValidator
[07/Sep/2017:23:52:16 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.io.FileNotFoundException: /tmp/castore (No such file or directory) (/tmp/castore (No such file or directory))
[07/Sep/2017:23:52:16 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't add CA certificates to keystore
[07/Sep/2017:23:52:16 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.lang.NullPointerException (null)
[07/Sep/2017:23:52:16 +0000] [xtremweb.dispatcher.HashTaskSet_TaskSet_14] INFO : TaskSet started (300000)
[07/Sep/2017:23:52:17 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : still waiting task set...
[07/Sep/2017:23:52:17 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : UDP server not started
[07/Sep/2017:23:52:17 +0000] [xtremweb.communications.TCPServer_TCPServerNIO_15] INFO : started, listening on port : 4321
log4j:WARN No appenders could be found for logger (org.eclipse.jetty.util.log).
log4j:WARN Please initialize the log4j system properly.
log4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.
[07/Sep/2017:23:52:17 +0000] [xtremweb.communications.HTTPServer_main_1] INFO : started, listening on port : 9443
[07/Sep/2017:23:52:17 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : FACEBOOK : java.net.MalformedURLException: no protocol: 
[07/Sep/2017:23:52:17 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : GOOGLE : java.net.MalformedURLException: no protocol: 
[07/Sep/2017:23:52:17 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : TWITTER : java.net.MalformedURLException: no protocol: 
[07/Sep/2017:23:52:17 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : YAHOO : java.net.MalformedURLException: no protocol: 
[07/Sep/2017:23:52:18 +0000] [main_1] ERROR : Can't add new entry to keystore
[07/Sep/2017:23:52:18 +0000] [main_1] WARN : javax.net.ssl.SSLHandshakeException: sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target (sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target)
[07/Sep/2017:23:52:18 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : XWHEP Dispatcher(10.6.0-head) started [Thu Sep 07 23:52:18 UTC 2017]
[07/Sep/2017:23:52:18 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : DB vendor  = mysql
[07/Sep/2017:23:52:18 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : mileStone  = 
[07/Sep/2017:23:52:18 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Time out   = 15000
[07/Sep/2017:23:52:18 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Disk opt'd = true
[07/Sep/2017:23:52:18 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Net  opt'd = true
[07/Sep/2017:23:52:18 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : NIO        = true
XWHEP Dispatcher started  Thu Sep 07 23:52:18 UTC 2017
Name             : vagrant-ubuntu-trusty-64
Version          : 10.6.0-head
Identity         : 
XWRole           : SERVER
Started on       : Thu Sep 07 23:52:15 UTC 2017
Scheduler        : xtremweb.dispatcher.MatchingScheduler
SmartSockets hub : 172.28.128.3/172.17.0.1/10.0.2.15-4329#c6.52.58.bb.cb.7c.00.00.b7.e0.02.42.bc.fb.75.e4~vagrant
Server HTTP      : true
Alive            : 300
Alive time out   : 900
Polling time out : 15000
Optimize zip     : true
Optimize network : true
NIO              : true
Comm layer       : xtremweb.communications.TCPClient
Socket time out  : 60000
Socket retries   : 50
Max connections  : 200
TCP port         : 4321
UDP port         : 4323
HTPP  port       : 80
HTPPS port       : 9443
Sun RPC interposition port : 4328
Sandbox path : /usr/bin/lxc
Sandbox launch args : 
Host &lt;host&gt;&lt;uid&gt;fbdb9d65-61c9-4ca1-8232-e725e1850d22&lt;/uid&gt;&lt;accessrights&gt;0x755&lt;/accessrights&gt;&lt;name&gt;vagrant-ubuntu-trusty-64&lt;/name&gt;&lt;cpuload&gt;50&lt;/cpuload&gt;&lt;natedipaddr&gt;10.0.2.15&lt;/natedipaddr&gt;&lt;ipaddr&gt;10.0.2.15&lt;/ipaddr&gt;&lt;hwaddr&gt;&lt;/hwaddr&gt;&lt;timezone&gt;Etc/UTC&lt;/timezone&gt;&lt;os&gt;LINUX&lt;/os&gt;&lt;osversion&gt;3.13.0-129-generic&lt;/osversion&gt;&lt;javaversion&gt;1.8.0_141&lt;/javaversion&gt;&lt;javadatamodel&gt;64&lt;/javadatamodel&gt;&lt;cputype&gt;AMD64&lt;/cputype&gt;&lt;cpunb&gt;1&lt;/cpunb&gt;&lt;cpumodel&gt;unknown&lt;/cpumodel&gt;&lt;cpuspeed&gt;0&lt;/cpuspeed&gt;&lt;totalmem&gt;0&lt;/totalmem&gt;&lt;totalswap&gt;0&lt;/totalswap&gt;&lt;totaltmp&gt;40284&lt;/totaltmp&gt;&lt;freetmp&gt;37110&lt;/freetmp&gt;&lt;project&gt;&lt;/project&gt;&lt;active&gt;true&lt;/active&gt;&lt;incomingconnections&gt;false&lt;/incomingconnections&gt;&lt;available&gt;false&lt;/available&gt;&lt;pilotjob&gt;false&lt;/pilotjob&gt;&lt;sgid&gt;&lt;/sgid&gt;&lt;timeout&gt;15000&lt;/timeout&gt;&lt;traces&gt;false&lt;/traces&gt;&lt;acceptbin&gt;false&lt;/acceptbin&gt;&lt;version&gt;10.6.0-head&lt;/version&gt;&lt;/host&gt;
[07/Sep/2017:23:52:18 +0000] [xtremweb.communications.HTTPServer_HTTPServer_218] INFO : started, listening on port : 9443
</msg>
<status status="PASS" endtime="20170907 23:52:22.979" starttime="20170907 23:52:22.978"></status>
</kw>
<status status="PASS" endtime="20170907 23:52:22.979" starttime="20170907 23:52:22.978"></status>
</kw>
<status status="PASS" endtime="20170907 23:52:22.980" starttime="20170907 23:52:12.921"></status>
</kw>
<kw name="Start XtremWeb Worker" library="XWWorker">
<arguments>
<arg>${DIST_XWHEP_PATH}</arg>
</arguments>
<kw name="File Should Exist" library="OperatingSystem">
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xtremweb.worker.conf</arg>
</arguments>
<msg timestamp="20170907 23:52:22.981" html="yes" level="INFO">File '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf&lt;/a&gt;' exists.</msg>
<status status="PASS" endtime="20170907 23:52:22.981" starttime="20170907 23:52:22.980"></status>
</kw>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xtremweb.worker.conf</arg>
</arguments>
<assign>
<var>${config_content}</var>
</assign>
<msg timestamp="20170907 23:52:22.981" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf&lt;/a&gt;'.</msg>
<msg timestamp="20170907 23:52:22.982" level="INFO">${config_content} = #
# Copyrights     : CNRS
# Author         : Oleg Lodygensky
# Acknowledgment : XtremWeb-HEP is based on XtremWeb 1.8.0 by inria : http://www.xtremweb.net/
# Web            : http://www.xtremweb-hep.o...</msg>
<status status="PASS" endtime="20170907 23:52:22.982" starttime="20170907 23:52:22.981"></status>
</kw>
<kw name="Remove String Using Regexp" library="String">
<doc>Removes ``patterns`` from the given ``string``.</doc>
<arguments>
<arg>${config_content}</arg>
<arg>LAUNCHERURL=${XWCONFIGURE.VALUES.XWUPGRADEURL}</arg>
</arguments>
<assign>
<var>${config_content_filtered}</var>
</assign>
<msg timestamp="20170907 23:52:22.983" level="INFO">${config_content_filtered} = #
# Copyrights     : CNRS
# Author         : Oleg Lodygensky
# Acknowledgment : XtremWeb-HEP is based on XtremWeb 1.8.0 by inria : http://www.xtremweb.net/
# Web            : http://www.xtremweb-hep.o...</msg>
<status status="PASS" endtime="20170907 23:52:22.983" starttime="20170907 23:52:22.982"></status>
</kw>
<kw name="Create File" library="OperatingSystem">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xtremweb.worker.conf</arg>
<arg>content=${config_content_filtered}</arg>
</arguments>
<msg timestamp="20170907 23:52:22.985" html="yes" level="INFO">Created file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170907 23:52:22.986" starttime="20170907 23:52:22.983"></status>
</kw>
<kw name="Remove File" library="OperatingSystem">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.worker.process.log</arg>
</arguments>
<msg timestamp="20170907 23:52:22.987" html="yes" level="INFO">Removed file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.worker.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.worker.process.log&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170907 23:52:22.987" starttime="20170907 23:52:22.986"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/bin/xtremweb.worker console</arg>
<arg>shell=yes</arg>
<arg>stderr=STDOUT</arg>
<arg>stdout=${DIST_XWHEP_PATH}/xwhep.worker.process.log</arg>
</arguments>
<assign>
<var>${created_process}</var>
</assign>
<msg timestamp="20170907 23:52:22.988" level="INFO">Starting process:
/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/xtremweb.worker console</msg>
<msg timestamp="20170907 23:52:22.992" level="INFO">${created_process} = 67</msg>
<status status="PASS" endtime="20170907 23:52:22.993" starttime="20170907 23:52:22.987"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${WORKER_PROCESS}</arg>
<arg>${created_process}</arg>
</arguments>
<msg timestamp="20170907 23:52:22.994" level="INFO">${WORKER_PROCESS} = 67</msg>
<status status="PASS" endtime="20170907 23:52:22.994" starttime="20170907 23:52:22.993"></status>
</kw>
<kw name="Log File" library="OperatingSystem">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.worker.process.log</arg>
</arguments>
<msg timestamp="20170907 23:52:22.994" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.worker.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.worker.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170907 23:52:22.995" level="INFO"></msg>
<status status="PASS" endtime="20170907 23:52:22.995" starttime="20170907 23:52:22.994"></status>
</kw>
<status status="PASS" endtime="20170907 23:52:22.996" starttime="20170907 23:52:22.980"></status>
</kw>
<status status="PASS" endtime="20170907 23:52:22.996" starttime="20170907 23:52:12.792"></status>
</kw>
<status status="PASS" endtime="20170907 23:52:22.996" starttime="20170907 23:52:12.596"></status>
</kw>
<kw name="XWSENDDATACommand" library="XWClient">
<doc>Usage : SENDDATA dataName [cpuType] [osName] [dataType] [accessRigths] [dataFile | dataURI | dataUID] : sends data and uploads data if dataFile provided</doc>
<arguments>
<arg>ls</arg>
<arg>DEPLOYABLE</arg>
<arg>LINUX</arg>
<arg>AMD64</arg>
<arg>/bin/ls</arg>
</arguments>
<assign>
<var>${uid}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd ${DIST_XWHEP_PATH}/bin &amp;&amp; ./xwsenddata ${dataName} ${osName} ${cpuType} ${dataType} ${dataFile-dataURI-dataUID}</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${cmd_result}</var>
</assign>
<msg timestamp="20170907 23:52:22.999" level="INFO">Starting process:
cd /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin &amp;&amp; ./xwsenddata ls DEPLOYABLE LINUX AMD64 /bin/ls</msg>
<msg timestamp="20170907 23:52:23.004" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170907 23:52:25.044" level="INFO">Process completed.</msg>
<msg timestamp="20170907 23:52:25.044" level="INFO">${cmd_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170907 23:52:25.044" starttime="20170907 23:52:22.998"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stderr}</arg>
</arguments>
<msg timestamp="20170907 23:52:25.045" level="INFO"></msg>
<status status="PASS" endtime="20170907 23:52:25.045" starttime="20170907 23:52:25.044"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
</arguments>
<msg timestamp="20170907 23:52:25.045" level="INFO">xw://vagrant-ubuntu-trusty-64/bcfff7b3-2526-4b19-9e6c-cc1ba73fc8f1</msg>
<status status="PASS" endtime="20170907 23:52:25.045" starttime="20170907 23:52:25.045"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${cmd_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170907 23:52:25.046" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170907 23:52:25.046" starttime="20170907 23:52:25.046"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
<arg>-36</arg>
</arguments>
<assign>
<var>${uid}</var>
</assign>
<msg timestamp="20170907 23:52:25.047" level="INFO">${uid} = bcfff7b3-2526-4b19-9e6c-cc1ba73fc8f1</msg>
<status status="PASS" endtime="20170907 23:52:25.047" starttime="20170907 23:52:25.046"></status>
</kw>
<msg timestamp="20170907 23:52:25.047" level="INFO">${uid} = bcfff7b3-2526-4b19-9e6c-cc1ba73fc8f1</msg>
<status status="PASS" endtime="20170907 23:52:25.047" starttime="20170907 23:52:22.997"></status>
</kw>
<kw name="Count From Datas Where Uid" library="XWServer">
<arguments>
<arg>${uid}</arg>
<arg>1</arg>
</arguments>
<kw name="Count From Table Where Uid" library="MySql">
<arguments>
<arg>datas</arg>
<arg>${uid}</arg>
<arg>${countExpected}</arg>
</arguments>
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170907 23:52:25.050" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170907 23:52:25.052" starttime="20170907 23:52:25.049"></status>
</kw>
<status status="PASS" endtime="20170907 23:52:25.052" starttime="20170907 23:52:25.048"></status>
</kw>
<kw name="Row Count Is Equal To X" library="DatabaseLibrary">
<doc>Check if the number of rows returned from `selectStatement` is equal to the value submitted. If not, then this</doc>
<arguments>
<arg>SELECT * FROM ${table} WHERE uid = '${uid}'</arg>
<arg>${countExpected}</arg>
</arguments>
<msg timestamp="20170907 23:52:25.053" level="INFO">Executing : Row Count Is Equal To X  |  SELECT * FROM datas WHERE uid = 'bcfff7b3-2526-4b19-9e6c-cc1ba73fc8f1'  |  1 </msg>
<msg timestamp="20170907 23:52:25.053" level="INFO">Executing : Row Count  |  SELECT * FROM datas WHERE uid = 'bcfff7b3-2526-4b19-9e6c-cc1ba73fc8f1' </msg>
<status status="PASS" endtime="20170907 23:52:25.056" starttime="20170907 23:52:25.052"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170907 23:52:25.057" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170907 23:52:25.058" starttime="20170907 23:52:25.057"></status>
</kw>
<status status="PASS" endtime="20170907 23:52:25.058" starttime="20170907 23:52:25.056"></status>
</kw>
<status status="PASS" endtime="20170907 23:52:25.058" starttime="20170907 23:52:25.048"></status>
</kw>
<status status="PASS" endtime="20170907 23:52:25.059" starttime="20170907 23:52:25.047"></status>
</kw>
<kw type="teardown" name="End XWtremWeb Command Test" library="XWCommon">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Nothing to do</arg>
</arguments>
<msg timestamp="20170907 23:52:25.061" level="INFO">Nothing to do</msg>
<status status="PASS" endtime="20170907 23:52:25.061" starttime="20170907 23:52:25.060"></status>
</kw>
<status status="PASS" endtime="20170907 23:52:25.061" starttime="20170907 23:52:25.060"></status>
</kw>
<doc>Testing XWSenddata cmd</doc>
<tags>
<tag>CommandLine Tests</tag>
</tags>
<status status="PASS" endtime="20170907 23:52:25.061" critical="yes" starttime="20170907 23:52:12.594"></status>
</test>
<test id="s1-s5-t2" name="Test XWSendapp Command With LS Binary">
<kw type="setup" name="Begin XWtremWeb Command Test" library="XWCommon">
<kw name="Ping XWtremWeb Database" library="XWServer">
<kw name="Xtremweb Tables Must Exist" library="MySql">
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170907 23:52:25.067" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170907 23:52:25.069" starttime="20170907 23:52:25.066"></status>
</kw>
<status status="PASS" endtime="20170907 23:52:25.069" starttime="20170907 23:52:25.065"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>appTypes</arg>
</arguments>
<msg timestamp="20170907 23:52:25.070" level="INFO">Executing : Table Must Exist  |  appTypes </msg>
<msg timestamp="20170907 23:52:25.070" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='appTypes' </msg>
<status status="PASS" endtime="20170907 23:52:25.072" starttime="20170907 23:52:25.069"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps</arg>
</arguments>
<msg timestamp="20170907 23:52:25.073" level="INFO">Executing : Table Must Exist  |  apps </msg>
<msg timestamp="20170907 23:52:25.073" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='apps' </msg>
<status status="PASS" endtime="20170907 23:52:25.076" starttime="20170907 23:52:25.073"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps_history</arg>
</arguments>
<msg timestamp="20170907 23:52:25.076" level="INFO">Executing : Table Must Exist  |  apps_history </msg>
<msg timestamp="20170907 23:52:25.076" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='apps_history' </msg>
<status status="PASS" endtime="20170907 23:52:25.078" starttime="20170907 23:52:25.076"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>cpuTypes</arg>
</arguments>
<msg timestamp="20170907 23:52:25.078" level="INFO">Executing : Table Must Exist  |  cpuTypes </msg>
<msg timestamp="20170907 23:52:25.078" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='cpuTypes' </msg>
<status status="PASS" endtime="20170907 23:52:25.079" starttime="20170907 23:52:25.078"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>dataTypes</arg>
</arguments>
<msg timestamp="20170907 23:52:25.080" level="INFO">Executing : Table Must Exist  |  dataTypes </msg>
<msg timestamp="20170907 23:52:25.080" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='dataTypes' </msg>
<status status="PASS" endtime="20170907 23:52:25.081" starttime="20170907 23:52:25.079"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas</arg>
</arguments>
<msg timestamp="20170907 23:52:25.081" level="INFO">Executing : Table Must Exist  |  datas </msg>
<msg timestamp="20170907 23:52:25.081" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='datas' </msg>
<status status="PASS" endtime="20170907 23:52:25.082" starttime="20170907 23:52:25.081"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas_history</arg>
</arguments>
<msg timestamp="20170907 23:52:25.083" level="INFO">Executing : Table Must Exist  |  datas_history </msg>
<msg timestamp="20170907 23:52:25.083" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='datas_history' </msg>
<status status="PASS" endtime="20170907 23:52:25.084" starttime="20170907 23:52:25.083"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables</arg>
</arguments>
<msg timestamp="20170907 23:52:25.084" level="INFO">Executing : Table Must Exist  |  executables </msg>
<msg timestamp="20170907 23:52:25.084" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='executables' </msg>
<status status="PASS" endtime="20170907 23:52:25.085" starttime="20170907 23:52:25.084"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables_history</arg>
</arguments>
<msg timestamp="20170907 23:52:25.086" level="INFO">Executing : Table Must Exist  |  executables_history </msg>
<msg timestamp="20170907 23:52:25.086" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='executables_history' </msg>
<status status="PASS" endtime="20170907 23:52:25.087" starttime="20170907 23:52:25.085"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups</arg>
</arguments>
<msg timestamp="20170907 23:52:25.088" level="INFO">Executing : Table Must Exist  |  groups </msg>
<msg timestamp="20170907 23:52:25.088" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='groups' </msg>
<status status="PASS" endtime="20170907 23:52:25.089" starttime="20170907 23:52:25.087"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups_history</arg>
</arguments>
<msg timestamp="20170907 23:52:25.089" level="INFO">Executing : Table Must Exist  |  groups_history </msg>
<msg timestamp="20170907 23:52:25.089" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='groups_history' </msg>
<status status="PASS" endtime="20170907 23:52:25.090" starttime="20170907 23:52:25.089"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts</arg>
</arguments>
<msg timestamp="20170907 23:52:25.090" level="INFO">Executing : Table Must Exist  |  hosts </msg>
<msg timestamp="20170907 23:52:25.090" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='hosts' </msg>
<status status="PASS" endtime="20170907 23:52:25.091" starttime="20170907 23:52:25.090"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts_history</arg>
</arguments>
<msg timestamp="20170907 23:52:25.091" level="INFO">Executing : Table Must Exist  |  hosts_history </msg>
<msg timestamp="20170907 23:52:25.091" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='hosts_history' </msg>
<status status="PASS" endtime="20170907 23:52:25.092" starttime="20170907 23:52:25.091"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships</arg>
</arguments>
<msg timestamp="20170907 23:52:25.093" level="INFO">Executing : Table Must Exist  |  memberships </msg>
<msg timestamp="20170907 23:52:25.093" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='memberships' </msg>
<status status="PASS" endtime="20170907 23:52:25.094" starttime="20170907 23:52:25.093"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships_history</arg>
</arguments>
<msg timestamp="20170907 23:52:25.094" level="INFO">Executing : Table Must Exist  |  memberships_history </msg>
<msg timestamp="20170907 23:52:25.094" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='memberships_history' </msg>
<status status="PASS" endtime="20170907 23:52:25.095" starttime="20170907 23:52:25.094"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>oses</arg>
</arguments>
<msg timestamp="20170907 23:52:25.095" level="INFO">Executing : Table Must Exist  |  oses </msg>
<msg timestamp="20170907 23:52:25.095" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='oses' </msg>
<status status="PASS" endtime="20170907 23:52:25.095" starttime="20170907 23:52:25.095"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>packageTypes</arg>
</arguments>
<msg timestamp="20170907 23:52:25.097" level="INFO">Executing : Table Must Exist  |  packageTypes </msg>
<msg timestamp="20170907 23:52:25.097" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='packageTypes' </msg>
<status status="PASS" endtime="20170907 23:52:25.098" starttime="20170907 23:52:25.097"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions</arg>
</arguments>
<msg timestamp="20170907 23:52:25.098" level="INFO">Executing : Table Must Exist  |  sessions </msg>
<msg timestamp="20170907 23:52:25.098" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sessions' </msg>
<status status="PASS" endtime="20170907 23:52:25.099" starttime="20170907 23:52:25.098"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions_history</arg>
</arguments>
<msg timestamp="20170907 23:52:25.099" level="INFO">Executing : Table Must Exist  |  sessions_history </msg>
<msg timestamp="20170907 23:52:25.099" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sessions_history' </msg>
<status status="PASS" endtime="20170907 23:52:25.102" starttime="20170907 23:52:25.099"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes</arg>
</arguments>
<msg timestamp="20170907 23:52:25.102" level="INFO">Executing : Table Must Exist  |  sharedAppTypes </msg>
<msg timestamp="20170907 23:52:25.102" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedAppTypes' </msg>
<status status="PASS" endtime="20170907 23:52:25.104" starttime="20170907 23:52:25.102"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes_history</arg>
</arguments>
<msg timestamp="20170907 23:52:25.105" level="INFO">Executing : Table Must Exist  |  sharedAppTypes_history </msg>
<msg timestamp="20170907 23:52:25.105" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedAppTypes_history' </msg>
<status status="PASS" endtime="20170907 23:52:25.107" starttime="20170907 23:52:25.105"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes</arg>
</arguments>
<msg timestamp="20170907 23:52:25.108" level="INFO">Executing : Table Must Exist  |  sharedPackageTypes </msg>
<msg timestamp="20170907 23:52:25.108" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedPackageTypes' </msg>
<status status="PASS" endtime="20170907 23:52:25.110" starttime="20170907 23:52:25.108"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes_history</arg>
</arguments>
<msg timestamp="20170907 23:52:25.111" level="INFO">Executing : Table Must Exist  |  sharedPackageTypes_history </msg>
<msg timestamp="20170907 23:52:25.111" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedPackageTypes_history' </msg>
<status status="PASS" endtime="20170907 23:52:25.114" starttime="20170907 23:52:25.110"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>statuses</arg>
</arguments>
<msg timestamp="20170907 23:52:25.114" level="INFO">Executing : Table Must Exist  |  statuses </msg>
<msg timestamp="20170907 23:52:25.115" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='statuses' </msg>
<status status="PASS" endtime="20170907 23:52:25.117" starttime="20170907 23:52:25.114"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks</arg>
</arguments>
<msg timestamp="20170907 23:52:25.117" level="INFO">Executing : Table Must Exist  |  tasks </msg>
<msg timestamp="20170907 23:52:25.117" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='tasks' </msg>
<status status="PASS" endtime="20170907 23:52:25.119" starttime="20170907 23:52:25.117"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks_history</arg>
</arguments>
<msg timestamp="20170907 23:52:25.120" level="INFO">Executing : Table Must Exist  |  tasks_history </msg>
<msg timestamp="20170907 23:52:25.120" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='tasks_history' </msg>
<status status="PASS" endtime="20170907 23:52:25.121" starttime="20170907 23:52:25.119"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces</arg>
</arguments>
<msg timestamp="20170907 23:52:25.122" level="INFO">Executing : Table Must Exist  |  traces </msg>
<msg timestamp="20170907 23:52:25.122" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='traces' </msg>
<status status="PASS" endtime="20170907 23:52:25.124" starttime="20170907 23:52:25.122"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces_history</arg>
</arguments>
<msg timestamp="20170907 23:52:25.124" level="INFO">Executing : Table Must Exist  |  traces_history </msg>
<msg timestamp="20170907 23:52:25.124" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='traces_history' </msg>
<status status="PASS" endtime="20170907 23:52:25.125" starttime="20170907 23:52:25.124"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>userRights</arg>
</arguments>
<msg timestamp="20170907 23:52:25.125" level="INFO">Executing : Table Must Exist  |  userRights </msg>
<msg timestamp="20170907 23:52:25.125" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='userRights' </msg>
<status status="PASS" endtime="20170907 23:52:25.127" starttime="20170907 23:52:25.125"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups</arg>
</arguments>
<msg timestamp="20170907 23:52:25.128" level="INFO">Executing : Table Must Exist  |  usergroups </msg>
<msg timestamp="20170907 23:52:25.128" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='usergroups' </msg>
<status status="PASS" endtime="20170907 23:52:25.129" starttime="20170907 23:52:25.128"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups_history</arg>
</arguments>
<msg timestamp="20170907 23:52:25.129" level="INFO">Executing : Table Must Exist  |  usergroups_history </msg>
<msg timestamp="20170907 23:52:25.129" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='usergroups_history' </msg>
<status status="PASS" endtime="20170907 23:52:25.130" starttime="20170907 23:52:25.129"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users</arg>
</arguments>
<msg timestamp="20170907 23:52:25.130" level="INFO">Executing : Table Must Exist  |  users </msg>
<msg timestamp="20170907 23:52:25.130" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='users' </msg>
<status status="PASS" endtime="20170907 23:52:25.131" starttime="20170907 23:52:25.130"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users_history</arg>
</arguments>
<msg timestamp="20170907 23:52:25.132" level="INFO">Executing : Table Must Exist  |  users_history </msg>
<msg timestamp="20170907 23:52:25.132" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='users_history' </msg>
<status status="PASS" endtime="20170907 23:52:25.133" starttime="20170907 23:52:25.132"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>version</arg>
</arguments>
<msg timestamp="20170907 23:52:25.133" level="INFO">Executing : Table Must Exist  |  version </msg>
<msg timestamp="20170907 23:52:25.133" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='version' </msg>
<status status="PASS" endtime="20170907 23:52:25.134" starttime="20170907 23:52:25.133"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>versions</arg>
</arguments>
<msg timestamp="20170907 23:52:25.134" level="INFO">Executing : Table Must Exist  |  versions </msg>
<msg timestamp="20170907 23:52:25.134" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='versions' </msg>
<status status="PASS" endtime="20170907 23:52:25.135" starttime="20170907 23:52:25.134"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps</arg>
</arguments>
<msg timestamp="20170907 23:52:25.136" level="INFO">Executing : Table Must Exist  |  view_apps </msg>
<msg timestamp="20170907 23:52:25.136" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps' </msg>
<status status="PASS" endtime="20170907 23:52:25.137" starttime="20170907 23:52:25.136"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps_for_offering</arg>
</arguments>
<msg timestamp="20170907 23:52:25.137" level="INFO">Executing : Table Must Exist  |  view_apps_for_offering </msg>
<msg timestamp="20170907 23:52:25.137" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps_for_offering' </msg>
<status status="PASS" endtime="20170907 23:52:25.139" starttime="20170907 23:52:25.137"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps_for_offering_with_file_sizes</arg>
</arguments>
<msg timestamp="20170907 23:52:25.139" level="INFO">Executing : Table Must Exist  |  view_apps_for_offering_with_file_sizes </msg>
<msg timestamp="20170907 23:52:25.139" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps_for_offering_with_file_sizes' </msg>
<status status="PASS" endtime="20170907 23:52:25.140" starttime="20170907 23:52:25.139"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_datas</arg>
</arguments>
<msg timestamp="20170907 23:52:25.141" level="INFO">Executing : Table Must Exist  |  view_datas </msg>
<msg timestamp="20170907 23:52:25.141" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_datas' </msg>
<status status="PASS" endtime="20170907 23:52:25.142" starttime="20170907 23:52:25.141"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_executables</arg>
</arguments>
<msg timestamp="20170907 23:52:25.142" level="INFO">Executing : Table Must Exist  |  view_executables </msg>
<msg timestamp="20170907 23:52:25.142" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_executables' </msg>
<status status="PASS" endtime="20170907 23:52:25.143" starttime="20170907 23:52:25.142"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_groups</arg>
</arguments>
<msg timestamp="20170907 23:52:25.143" level="INFO">Executing : Table Must Exist  |  view_groups </msg>
<msg timestamp="20170907 23:52:25.143" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_groups' </msg>
<status status="PASS" endtime="20170907 23:52:25.144" starttime="20170907 23:52:25.143"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts</arg>
</arguments>
<msg timestamp="20170907 23:52:25.145" level="INFO">Executing : Table Must Exist  |  view_hosts </msg>
<msg timestamp="20170907 23:52:25.145" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts' </msg>
<status status="PASS" endtime="20170907 23:52:25.146" starttime="20170907 23:52:25.145"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_deployable</arg>
</arguments>
<msg timestamp="20170907 23:52:25.146" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_deployable </msg>
<msg timestamp="20170907 23:52:25.146" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_deployable' </msg>
<status status="PASS" endtime="20170907 23:52:25.147" starttime="20170907 23:52:25.146"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_deployable_and_shared</arg>
</arguments>
<msg timestamp="20170907 23:52:25.148" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_deployable_and_shared </msg>
<msg timestamp="20170907 23:52:25.148" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_deployable_and_shared' </msg>
<status status="PASS" endtime="20170907 23:52:25.150" starttime="20170907 23:52:25.148"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_shared</arg>
</arguments>
<msg timestamp="20170907 23:52:25.150" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_shared </msg>
<msg timestamp="20170907 23:52:25.150" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_shared' </msg>
<status status="PASS" endtime="20170907 23:52:25.151" starttime="20170907 23:52:25.150"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_sessions</arg>
</arguments>
<msg timestamp="20170907 23:52:25.152" level="INFO">Executing : Table Must Exist  |  view_sessions </msg>
<msg timestamp="20170907 23:52:25.152" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_sessions' </msg>
<status status="PASS" endtime="20170907 23:52:25.154" starttime="20170907 23:52:25.152"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_tasks</arg>
</arguments>
<msg timestamp="20170907 23:52:25.154" level="INFO">Executing : Table Must Exist  |  view_tasks </msg>
<msg timestamp="20170907 23:52:25.154" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_tasks' </msg>
<status status="PASS" endtime="20170907 23:52:25.155" starttime="20170907 23:52:25.154"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_traces</arg>
</arguments>
<msg timestamp="20170907 23:52:25.156" level="INFO">Executing : Table Must Exist  |  view_traces </msg>
<msg timestamp="20170907 23:52:25.156" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_traces' </msg>
<status status="PASS" endtime="20170907 23:52:25.157" starttime="20170907 23:52:25.156"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_usergroups</arg>
</arguments>
<msg timestamp="20170907 23:52:25.157" level="INFO">Executing : Table Must Exist  |  view_usergroups </msg>
<msg timestamp="20170907 23:52:25.157" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_usergroups' </msg>
<status status="PASS" endtime="20170907 23:52:25.158" starttime="20170907 23:52:25.157"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users</arg>
</arguments>
<msg timestamp="20170907 23:52:25.159" level="INFO">Executing : Table Must Exist  |  view_users </msg>
<msg timestamp="20170907 23:52:25.159" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users' </msg>
<status status="PASS" endtime="20170907 23:52:25.160" starttime="20170907 23:52:25.159"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_apps</arg>
</arguments>
<msg timestamp="20170907 23:52:25.160" level="INFO">Executing : Table Must Exist  |  view_users_apps </msg>
<msg timestamp="20170907 23:52:25.161" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_apps' </msg>
<status status="PASS" endtime="20170907 23:52:25.162" starttime="20170907 23:52:25.160"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_datas</arg>
</arguments>
<msg timestamp="20170907 23:52:25.162" level="INFO">Executing : Table Must Exist  |  view_users_datas </msg>
<msg timestamp="20170907 23:52:25.162" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_datas' </msg>
<status status="PASS" endtime="20170907 23:52:25.163" starttime="20170907 23:52:25.162"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_groups</arg>
</arguments>
<msg timestamp="20170907 23:52:25.164" level="INFO">Executing : Table Must Exist  |  view_users_groups </msg>
<msg timestamp="20170907 23:52:25.164" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_groups' </msg>
<status status="PASS" endtime="20170907 23:52:25.165" starttime="20170907 23:52:25.164"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_hosts</arg>
</arguments>
<msg timestamp="20170907 23:52:25.165" level="INFO">Executing : Table Must Exist  |  view_users_hosts </msg>
<msg timestamp="20170907 23:52:25.165" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_hosts' </msg>
<status status="PASS" endtime="20170907 23:52:25.167" starttime="20170907 23:52:25.165"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_sessions</arg>
</arguments>
<msg timestamp="20170907 23:52:25.168" level="INFO">Executing : Table Must Exist  |  view_users_sessions </msg>
<msg timestamp="20170907 23:52:25.168" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_sessions' </msg>
<status status="PASS" endtime="20170907 23:52:25.170" starttime="20170907 23:52:25.168"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_tasks</arg>
</arguments>
<msg timestamp="20170907 23:52:25.170" level="INFO">Executing : Table Must Exist  |  view_users_tasks </msg>
<msg timestamp="20170907 23:52:25.170" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_tasks' </msg>
<status status="PASS" endtime="20170907 23:52:25.172" starttime="20170907 23:52:25.170"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_traces</arg>
</arguments>
<msg timestamp="20170907 23:52:25.172" level="INFO">Executing : Table Must Exist  |  view_users_traces </msg>
<msg timestamp="20170907 23:52:25.172" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_traces' </msg>
<status status="PASS" endtime="20170907 23:52:25.173" starttime="20170907 23:52:25.172"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_usergroups</arg>
</arguments>
<msg timestamp="20170907 23:52:25.174" level="INFO">Executing : Table Must Exist  |  view_users_usergroups </msg>
<msg timestamp="20170907 23:52:25.174" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_usergroups' </msg>
<status status="PASS" endtime="20170907 23:52:25.175" starttime="20170907 23:52:25.174"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_users</arg>
</arguments>
<msg timestamp="20170907 23:52:25.176" level="INFO">Executing : Table Must Exist  |  view_users_users </msg>
<msg timestamp="20170907 23:52:25.176" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_users' </msg>
<status status="PASS" endtime="20170907 23:52:25.178" starttime="20170907 23:52:25.176"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_works</arg>
</arguments>
<msg timestamp="20170907 23:52:25.178" level="INFO">Executing : Table Must Exist  |  view_users_works </msg>
<msg timestamp="20170907 23:52:25.179" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_works' </msg>
<status status="PASS" endtime="20170907 23:52:25.180" starttime="20170907 23:52:25.178"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works</arg>
</arguments>
<msg timestamp="20170907 23:52:25.180" level="INFO">Executing : Table Must Exist  |  view_works </msg>
<msg timestamp="20170907 23:52:25.180" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works' </msg>
<status status="PASS" endtime="20170907 23:52:25.182" starttime="20170907 23:52:25.180"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works_for_billing</arg>
</arguments>
<msg timestamp="20170907 23:52:25.182" level="INFO">Executing : Table Must Exist  |  view_works_for_billing </msg>
<msg timestamp="20170907 23:52:25.182" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works_for_billing' </msg>
<status status="PASS" endtime="20170907 23:52:25.183" starttime="20170907 23:52:25.182"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works_for_billing_with_file_sizes</arg>
</arguments>
<msg timestamp="20170907 23:52:25.183" level="INFO">Executing : Table Must Exist  |  view_works_for_billing_with_file_sizes </msg>
<msg timestamp="20170907 23:52:25.183" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works_for_billing_with_file_sizes' </msg>
<status status="PASS" endtime="20170907 23:52:25.184" starttime="20170907 23:52:25.183"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works</arg>
</arguments>
<msg timestamp="20170907 23:52:25.185" level="INFO">Executing : Table Must Exist  |  works </msg>
<msg timestamp="20170907 23:52:25.185" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='works' </msg>
<status status="PASS" endtime="20170907 23:52:25.186" starttime="20170907 23:52:25.185"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works_history</arg>
</arguments>
<msg timestamp="20170907 23:52:25.186" level="INFO">Executing : Table Must Exist  |  works_history </msg>
<msg timestamp="20170907 23:52:25.186" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='works_history' </msg>
<status status="PASS" endtime="20170907 23:52:25.187" starttime="20170907 23:52:25.186"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170907 23:52:25.188" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170907 23:52:25.188" starttime="20170907 23:52:25.188"></status>
</kw>
<status status="PASS" endtime="20170907 23:52:25.188" starttime="20170907 23:52:25.187"></status>
</kw>
<status status="PASS" endtime="20170907 23:52:25.188" starttime="20170907 23:52:25.065"></status>
</kw>
<status status="PASS" endtime="20170907 23:52:25.188" starttime="20170907 23:52:25.064"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>TODO ping XWtremWeb server up</arg>
</arguments>
<msg timestamp="20170907 23:52:25.189" level="INFO">TODO ping XWtremWeb server up</msg>
<status status="PASS" endtime="20170907 23:52:25.189" starttime="20170907 23:52:25.189"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>TODO ping XWtremWeb worker up before one test</arg>
</arguments>
<msg timestamp="20170907 23:52:25.189" level="INFO">TODO ping XWtremWeb worker up before one test</msg>
<status status="PASS" endtime="20170907 23:52:25.189" starttime="20170907 23:52:25.189"></status>
</kw>
<kw name="Delete Fonctionnal Xtremweb Tables" library="MySql">
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170907 23:52:25.190" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170907 23:52:25.192" starttime="20170907 23:52:25.190"></status>
</kw>
<status status="PASS" endtime="20170907 23:52:25.192" starttime="20170907 23:52:25.190"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps</arg>
</arguments>
<msg timestamp="20170907 23:52:25.192" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM apps; </msg>
<status status="PASS" endtime="20170907 23:52:25.193" starttime="20170907 23:52:25.192"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps_history</arg>
</arguments>
<msg timestamp="20170907 23:52:25.193" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM apps_history; </msg>
<status status="PASS" endtime="20170907 23:52:25.194" starttime="20170907 23:52:25.193"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas</arg>
</arguments>
<msg timestamp="20170907 23:52:25.194" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM datas; </msg>
<status status="PASS" endtime="20170907 23:52:25.196" starttime="20170907 23:52:25.194"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas_history</arg>
</arguments>
<msg timestamp="20170907 23:52:25.196" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM datas_history; </msg>
<status status="PASS" endtime="20170907 23:52:25.197" starttime="20170907 23:52:25.196"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables</arg>
</arguments>
<msg timestamp="20170907 23:52:25.197" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM executables; </msg>
<status status="PASS" endtime="20170907 23:52:25.198" starttime="20170907 23:52:25.197"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables_history</arg>
</arguments>
<msg timestamp="20170907 23:52:25.198" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM executables_history; </msg>
<status status="PASS" endtime="20170907 23:52:25.198" starttime="20170907 23:52:25.198"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups</arg>
</arguments>
<msg timestamp="20170907 23:52:25.199" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM groups; </msg>
<status status="PASS" endtime="20170907 23:52:25.199" starttime="20170907 23:52:25.199"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups_history</arg>
</arguments>
<msg timestamp="20170907 23:52:25.199" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM groups_history; </msg>
<status status="PASS" endtime="20170907 23:52:25.200" starttime="20170907 23:52:25.199"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts</arg>
</arguments>
<msg timestamp="20170907 23:52:25.201" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM hosts; </msg>
<status status="PASS" endtime="20170907 23:52:25.201" starttime="20170907 23:52:25.200"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts_history</arg>
</arguments>
<msg timestamp="20170907 23:52:25.202" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM hosts_history; </msg>
<status status="PASS" endtime="20170907 23:52:25.203" starttime="20170907 23:52:25.202"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships</arg>
</arguments>
<msg timestamp="20170907 23:52:25.203" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM memberships; </msg>
<status status="PASS" endtime="20170907 23:52:25.204" starttime="20170907 23:52:25.203"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships_history</arg>
</arguments>
<msg timestamp="20170907 23:52:25.205" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM memberships_history; </msg>
<status status="PASS" endtime="20170907 23:52:25.206" starttime="20170907 23:52:25.205"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions</arg>
</arguments>
<msg timestamp="20170907 23:52:25.207" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sessions; </msg>
<status status="PASS" endtime="20170907 23:52:25.207" starttime="20170907 23:52:25.206"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions_history</arg>
</arguments>
<msg timestamp="20170907 23:52:25.208" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sessions_history; </msg>
<status status="PASS" endtime="20170907 23:52:25.209" starttime="20170907 23:52:25.208"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes</arg>
</arguments>
<msg timestamp="20170907 23:52:25.210" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedAppTypes; </msg>
<status status="PASS" endtime="20170907 23:52:25.211" starttime="20170907 23:52:25.209"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes_history</arg>
</arguments>
<msg timestamp="20170907 23:52:25.211" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedAppTypes_history; </msg>
<status status="PASS" endtime="20170907 23:52:25.212" starttime="20170907 23:52:25.211"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes</arg>
</arguments>
<msg timestamp="20170907 23:52:25.213" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedPackageTypes; </msg>
<status status="PASS" endtime="20170907 23:52:25.214" starttime="20170907 23:52:25.212"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes_history</arg>
</arguments>
<msg timestamp="20170907 23:52:25.215" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedPackageTypes_history; </msg>
<status status="PASS" endtime="20170907 23:52:25.216" starttime="20170907 23:52:25.214"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks</arg>
</arguments>
<msg timestamp="20170907 23:52:25.217" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM tasks; </msg>
<status status="PASS" endtime="20170907 23:52:25.217" starttime="20170907 23:52:25.216"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks_history</arg>
</arguments>
<msg timestamp="20170907 23:52:25.218" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM tasks_history; </msg>
<status status="PASS" endtime="20170907 23:52:25.219" starttime="20170907 23:52:25.218"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces</arg>
</arguments>
<msg timestamp="20170907 23:52:25.221" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM traces; </msg>
<status status="PASS" endtime="20170907 23:52:25.222" starttime="20170907 23:52:25.219"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces_history</arg>
</arguments>
<msg timestamp="20170907 23:52:25.223" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM traces_history; </msg>
<status status="PASS" endtime="20170907 23:52:25.224" starttime="20170907 23:52:25.222"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups</arg>
</arguments>
<msg timestamp="20170907 23:52:25.224" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM usergroups; </msg>
<status status="PASS" endtime="20170907 23:52:25.225" starttime="20170907 23:52:25.224"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups_history</arg>
</arguments>
<msg timestamp="20170907 23:52:25.226" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM usergroups_history; </msg>
<status status="PASS" endtime="20170907 23:52:25.227" starttime="20170907 23:52:25.226"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users_history</arg>
</arguments>
<msg timestamp="20170907 23:52:25.228" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM users_history; </msg>
<status status="PASS" endtime="20170907 23:52:25.228" starttime="20170907 23:52:25.227"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works</arg>
</arguments>
<msg timestamp="20170907 23:52:25.228" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM works; </msg>
<status status="PASS" endtime="20170907 23:52:25.229" starttime="20170907 23:52:25.228"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works_history</arg>
</arguments>
<msg timestamp="20170907 23:52:25.229" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM works_history; </msg>
<status status="PASS" endtime="20170907 23:52:25.230" starttime="20170907 23:52:25.229"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170907 23:52:25.230" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170907 23:52:25.230" starttime="20170907 23:52:25.230"></status>
</kw>
<status status="PASS" endtime="20170907 23:52:25.231" starttime="20170907 23:52:25.230"></status>
</kw>
<status status="PASS" endtime="20170907 23:52:25.231" starttime="20170907 23:52:25.189"></status>
</kw>
<kw name="Stop XWtremWeb Server And XWtremWeb Worker" library="XWCommon">
<kw name="Stop XtremWeb Server" library="XWServer">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${SERVER_PROCESS}</arg>
</arguments>
<msg timestamp="20170907 23:52:25.232" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20170907 23:52:25.337" level="INFO">Process completed.</msg>
<status status="PASS" endtime="20170907 23:52:25.337" starttime="20170907 23:52:25.231"></status>
</kw>
<status status="PASS" endtime="20170907 23:52:25.337" starttime="20170907 23:52:25.231"></status>
</kw>
<kw name="Log XtremWeb Server" library="XWCommon">
<kw name="Log XtremWeb Process Log File" library="XWServer">
<kw name="Log File" library="OperatingSystem">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<msg timestamp="20170907 23:52:25.338" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170907 23:52:25.339" level="INFO">Thu Sep  7 23:52:13 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : checking launch url
Thu Sep  7 23:52:13 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] WARNING : no launcher URL defined
Thu Sep  7 23:52:13 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : launching SmartSockets hub
[07/Sep/2017:23:52:15 +0000] [main_1] ERROR : setRole : role redefined ?! (was SERVER)
[07/Sep/2017:23:52:16 +0000] [xtremweb.database.DBConnPoolThread_main_1] INFO : Connection to database jdbc:mysql://localhost/xtremweb is ok, 70 created
[07/Sep/2017:23:52:16 +0000] [xtremweb.dispatcher.DBInterface_main_1] WARN : Can't retrieve any app
[07/Sep/2017:23:52:16 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't create ProxyValidator
[07/Sep/2017:23:52:16 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.io.FileNotFoundException: /tmp/castore (No such file or directory) (/tmp/castore (No such file or directory))
[07/Sep/2017:23:52:16 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't add CA certificates to keystore
[07/Sep/2017:23:52:16 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.lang.NullPointerException (null)
[07/Sep/2017:23:52:16 +0000] [xtremweb.dispatcher.HashTaskSet_TaskSet_14] INFO : TaskSet started (300000)
[07/Sep/2017:23:52:17 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : still waiting task set...
[07/Sep/2017:23:52:17 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : UDP server not started
[07/Sep/2017:23:52:17 +0000] [xtremweb.communications.TCPServer_TCPServerNIO_15] INFO : started, listening on port : 4321
log4j:WARN No appenders could be found for logger (org.eclipse.jetty.util.log).
log4j:WARN Please initialize the log4j system properly.
log4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.
[07/Sep/2017:23:52:17 +0000] [xtremweb.communications.HTTPServer_main_1] INFO : started, listening on port : 9443
[07/Sep/2017:23:52:17 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : FACEBOOK : java.net.MalformedURLException: no protocol: 
[07/Sep/2017:23:52:17 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : GOOGLE : java.net.MalformedURLException: no protocol: 
[07/Sep/2017:23:52:17 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : TWITTER : java.net.MalformedURLException: no protocol: 
[07/Sep/2017:23:52:17 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : YAHOO : java.net.MalformedURLException: no protocol: 
[07/Sep/2017:23:52:18 +0000] [main_1] ERROR : Can't add new entry to keystore
[07/Sep/2017:23:52:18 +0000] [main_1] WARN : javax.net.ssl.SSLHandshakeException: sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target (sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target)
[07/Sep/2017:23:52:18 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : XWHEP Dispatcher(10.6.0-head) started [Thu Sep 07 23:52:18 UTC 2017]
[07/Sep/2017:23:52:18 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : DB vendor  = mysql
[07/Sep/2017:23:52:18 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : mileStone  = 
[07/Sep/2017:23:52:18 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Time out   = 15000
[07/Sep/2017:23:52:18 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Disk opt'd = true
[07/Sep/2017:23:52:18 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Net  opt'd = true
[07/Sep/2017:23:52:18 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : NIO        = true
XWHEP Dispatcher started  Thu Sep 07 23:52:18 UTC 2017
Name             : vagrant-ubuntu-trusty-64
Version          : 10.6.0-head
Identity         : 
XWRole           : SERVER
Started on       : Thu Sep 07 23:52:15 UTC 2017
Scheduler        : xtremweb.dispatcher.MatchingScheduler
SmartSockets hub : 172.28.128.3/172.17.0.1/10.0.2.15-4329#c6.52.58.bb.cb.7c.00.00.b7.e0.02.42.bc.fb.75.e4~vagrant
Server HTTP      : true
Alive            : 300
Alive time out   : 900
Polling time out : 15000
Optimize zip     : true
Optimize network : true
NIO              : true
Comm layer       : xtremweb.communications.TCPClient
Socket time out  : 60000
Socket retries   : 50
Max connections  : 200
TCP port         : 4321
UDP port         : 4323
HTPP  port       : 80
HTPPS port       : 9443
Sun RPC interposition port : 4328
Sandbox path : /usr/bin/lxc
Sandbox launch args : 
Host &lt;host&gt;&lt;uid&gt;fbdb9d65-61c9-4ca1-8232-e725e1850d22&lt;/uid&gt;&lt;accessrights&gt;0x755&lt;/accessrights&gt;&lt;name&gt;vagrant-ubuntu-trusty-64&lt;/name&gt;&lt;cpuload&gt;50&lt;/cpuload&gt;&lt;natedipaddr&gt;10.0.2.15&lt;/natedipaddr&gt;&lt;ipaddr&gt;10.0.2.15&lt;/ipaddr&gt;&lt;hwaddr&gt;&lt;/hwaddr&gt;&lt;timezone&gt;Etc/UTC&lt;/timezone&gt;&lt;os&gt;LINUX&lt;/os&gt;&lt;osversion&gt;3.13.0-129-generic&lt;/osversion&gt;&lt;javaversion&gt;1.8.0_141&lt;/javaversion&gt;&lt;javadatamodel&gt;64&lt;/javadatamodel&gt;&lt;cputype&gt;AMD64&lt;/cputype&gt;&lt;cpunb&gt;1&lt;/cpunb&gt;&lt;cpumodel&gt;unknown&lt;/cpumodel&gt;&lt;cpuspeed&gt;0&lt;/cpuspeed&gt;&lt;totalmem&gt;0&lt;/totalmem&gt;&lt;totalswap&gt;0&lt;/totalswap&gt;&lt;totaltmp&gt;40284&lt;/totaltmp&gt;&lt;freetmp&gt;37110&lt;/freetmp&gt;&lt;project&gt;&lt;/project&gt;&lt;active&gt;true&lt;/active&gt;&lt;incomingconnections&gt;false&lt;/incomingconnections&gt;&lt;available&gt;false&lt;/available&gt;&lt;pilotjob&gt;false&lt;/pilotjob&gt;&lt;sgid&gt;&lt;/sgid&gt;&lt;timeout&gt;15000&lt;/timeout&gt;&lt;traces&gt;false&lt;/traces&gt;&lt;acceptbin&gt;false&lt;/acceptbin&gt;&lt;version&gt;10.6.0-head&lt;/version&gt;&lt;/host&gt;
[07/Sep/2017:23:52:18 +0000] [xtremweb.communications.HTTPServer_HTTPServer_218] INFO : started, listening on port : 9443
[07/Sep/2017:23:52:24 +0000] [xtremweb.common.StreamIO_TCPHandler_18] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[07/Sep/2017:23:52:25 +0000] [xtremweb.common.StreamIO_TCPHandler_17] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[07/Sep/2017:23:52:25 +0000] [xtremweb.communications.TCPServer_TCPServerNIO_15] WARN : java.net.SocketException: Socket closed (Socket closed)
</msg>
<status status="PASS" endtime="20170907 23:52:25.339" starttime="20170907 23:52:25.338"></status>
</kw>
<status status="PASS" endtime="20170907 23:52:25.339" starttime="20170907 23:52:25.338"></status>
</kw>
<status status="PASS" endtime="20170907 23:52:25.339" starttime="20170907 23:52:25.337"></status>
</kw>
<kw name="Stop XtremWeb Worker" library="XWWorker">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Stop XtremWeb Worker</arg>
</arguments>
<msg timestamp="20170907 23:52:25.340" level="INFO">Stop XtremWeb Worker</msg>
<status status="PASS" endtime="20170907 23:52:25.340" starttime="20170907 23:52:25.340"></status>
</kw>
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${WORKER_PROCESS}</arg>
</arguments>
<msg timestamp="20170907 23:52:25.341" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20170907 23:52:25.341" level="INFO">Process completed.</msg>
<status status="PASS" endtime="20170907 23:52:25.341" starttime="20170907 23:52:25.340"></status>
</kw>
<status status="PASS" endtime="20170907 23:52:25.341" starttime="20170907 23:52:25.340"></status>
</kw>
<status status="PASS" endtime="20170907 23:52:25.342" starttime="20170907 23:52:25.231"></status>
</kw>
<kw name="Start XWtremWeb Server And XWtremWeb Worker" library="XWCommon">
<kw name="Ping XWtremWeb Database" library="XWServer">
<kw name="Xtremweb Tables Must Exist" library="MySql">
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170907 23:52:25.344" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170907 23:52:25.345" starttime="20170907 23:52:25.343"></status>
</kw>
<status status="PASS" endtime="20170907 23:52:25.345" starttime="20170907 23:52:25.343"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>appTypes</arg>
</arguments>
<msg timestamp="20170907 23:52:25.346" level="INFO">Executing : Table Must Exist  |  appTypes </msg>
<msg timestamp="20170907 23:52:25.346" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='appTypes' </msg>
<status status="PASS" endtime="20170907 23:52:25.347" starttime="20170907 23:52:25.345"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps</arg>
</arguments>
<msg timestamp="20170907 23:52:25.348" level="INFO">Executing : Table Must Exist  |  apps </msg>
<msg timestamp="20170907 23:52:25.348" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='apps' </msg>
<status status="PASS" endtime="20170907 23:52:25.349" starttime="20170907 23:52:25.347"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps_history</arg>
</arguments>
<msg timestamp="20170907 23:52:25.349" level="INFO">Executing : Table Must Exist  |  apps_history </msg>
<msg timestamp="20170907 23:52:25.349" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='apps_history' </msg>
<status status="PASS" endtime="20170907 23:52:25.351" starttime="20170907 23:52:25.349"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>cpuTypes</arg>
</arguments>
<msg timestamp="20170907 23:52:25.352" level="INFO">Executing : Table Must Exist  |  cpuTypes </msg>
<msg timestamp="20170907 23:52:25.352" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='cpuTypes' </msg>
<status status="PASS" endtime="20170907 23:52:25.354" starttime="20170907 23:52:25.351"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>dataTypes</arg>
</arguments>
<msg timestamp="20170907 23:52:25.355" level="INFO">Executing : Table Must Exist  |  dataTypes </msg>
<msg timestamp="20170907 23:52:25.355" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='dataTypes' </msg>
<status status="PASS" endtime="20170907 23:52:25.357" starttime="20170907 23:52:25.354"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas</arg>
</arguments>
<msg timestamp="20170907 23:52:25.358" level="INFO">Executing : Table Must Exist  |  datas </msg>
<msg timestamp="20170907 23:52:25.358" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='datas' </msg>
<status status="PASS" endtime="20170907 23:52:25.360" starttime="20170907 23:52:25.357"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas_history</arg>
</arguments>
<msg timestamp="20170907 23:52:25.361" level="INFO">Executing : Table Must Exist  |  datas_history </msg>
<msg timestamp="20170907 23:52:25.361" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='datas_history' </msg>
<status status="PASS" endtime="20170907 23:52:25.363" starttime="20170907 23:52:25.360"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables</arg>
</arguments>
<msg timestamp="20170907 23:52:25.364" level="INFO">Executing : Table Must Exist  |  executables </msg>
<msg timestamp="20170907 23:52:25.364" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='executables' </msg>
<status status="PASS" endtime="20170907 23:52:25.365" starttime="20170907 23:52:25.363"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables_history</arg>
</arguments>
<msg timestamp="20170907 23:52:25.366" level="INFO">Executing : Table Must Exist  |  executables_history </msg>
<msg timestamp="20170907 23:52:25.366" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='executables_history' </msg>
<status status="PASS" endtime="20170907 23:52:25.368" starttime="20170907 23:52:25.366"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups</arg>
</arguments>
<msg timestamp="20170907 23:52:25.368" level="INFO">Executing : Table Must Exist  |  groups </msg>
<msg timestamp="20170907 23:52:25.368" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='groups' </msg>
<status status="PASS" endtime="20170907 23:52:25.369" starttime="20170907 23:52:25.368"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups_history</arg>
</arguments>
<msg timestamp="20170907 23:52:25.370" level="INFO">Executing : Table Must Exist  |  groups_history </msg>
<msg timestamp="20170907 23:52:25.370" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='groups_history' </msg>
<status status="PASS" endtime="20170907 23:52:25.371" starttime="20170907 23:52:25.369"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts</arg>
</arguments>
<msg timestamp="20170907 23:52:25.372" level="INFO">Executing : Table Must Exist  |  hosts </msg>
<msg timestamp="20170907 23:52:25.372" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='hosts' </msg>
<status status="PASS" endtime="20170907 23:52:25.373" starttime="20170907 23:52:25.371"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts_history</arg>
</arguments>
<msg timestamp="20170907 23:52:25.373" level="INFO">Executing : Table Must Exist  |  hosts_history </msg>
<msg timestamp="20170907 23:52:25.373" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='hosts_history' </msg>
<status status="PASS" endtime="20170907 23:52:25.374" starttime="20170907 23:52:25.373"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships</arg>
</arguments>
<msg timestamp="20170907 23:52:25.374" level="INFO">Executing : Table Must Exist  |  memberships </msg>
<msg timestamp="20170907 23:52:25.374" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='memberships' </msg>
<status status="PASS" endtime="20170907 23:52:25.376" starttime="20170907 23:52:25.374"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships_history</arg>
</arguments>
<msg timestamp="20170907 23:52:25.376" level="INFO">Executing : Table Must Exist  |  memberships_history </msg>
<msg timestamp="20170907 23:52:25.376" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='memberships_history' </msg>
<status status="PASS" endtime="20170907 23:52:25.377" starttime="20170907 23:52:25.376"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>oses</arg>
</arguments>
<msg timestamp="20170907 23:52:25.378" level="INFO">Executing : Table Must Exist  |  oses </msg>
<msg timestamp="20170907 23:52:25.378" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='oses' </msg>
<status status="PASS" endtime="20170907 23:52:25.378" starttime="20170907 23:52:25.378"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>packageTypes</arg>
</arguments>
<msg timestamp="20170907 23:52:25.379" level="INFO">Executing : Table Must Exist  |  packageTypes </msg>
<msg timestamp="20170907 23:52:25.379" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='packageTypes' </msg>
<status status="PASS" endtime="20170907 23:52:25.380" starttime="20170907 23:52:25.379"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions</arg>
</arguments>
<msg timestamp="20170907 23:52:25.380" level="INFO">Executing : Table Must Exist  |  sessions </msg>
<msg timestamp="20170907 23:52:25.380" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sessions' </msg>
<status status="PASS" endtime="20170907 23:52:25.381" starttime="20170907 23:52:25.380"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions_history</arg>
</arguments>
<msg timestamp="20170907 23:52:25.381" level="INFO">Executing : Table Must Exist  |  sessions_history </msg>
<msg timestamp="20170907 23:52:25.381" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sessions_history' </msg>
<status status="PASS" endtime="20170907 23:52:25.382" starttime="20170907 23:52:25.381"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes</arg>
</arguments>
<msg timestamp="20170907 23:52:25.383" level="INFO">Executing : Table Must Exist  |  sharedAppTypes </msg>
<msg timestamp="20170907 23:52:25.383" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedAppTypes' </msg>
<status status="PASS" endtime="20170907 23:52:25.384" starttime="20170907 23:52:25.383"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes_history</arg>
</arguments>
<msg timestamp="20170907 23:52:25.384" level="INFO">Executing : Table Must Exist  |  sharedAppTypes_history </msg>
<msg timestamp="20170907 23:52:25.384" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedAppTypes_history' </msg>
<status status="PASS" endtime="20170907 23:52:25.385" starttime="20170907 23:52:25.384"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes</arg>
</arguments>
<msg timestamp="20170907 23:52:25.385" level="INFO">Executing : Table Must Exist  |  sharedPackageTypes </msg>
<msg timestamp="20170907 23:52:25.385" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedPackageTypes' </msg>
<status status="PASS" endtime="20170907 23:52:25.386" starttime="20170907 23:52:25.385"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes_history</arg>
</arguments>
<msg timestamp="20170907 23:52:25.387" level="INFO">Executing : Table Must Exist  |  sharedPackageTypes_history </msg>
<msg timestamp="20170907 23:52:25.387" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedPackageTypes_history' </msg>
<status status="PASS" endtime="20170907 23:52:25.388" starttime="20170907 23:52:25.386"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>statuses</arg>
</arguments>
<msg timestamp="20170907 23:52:25.388" level="INFO">Executing : Table Must Exist  |  statuses </msg>
<msg timestamp="20170907 23:52:25.388" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='statuses' </msg>
<status status="PASS" endtime="20170907 23:52:25.389" starttime="20170907 23:52:25.388"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks</arg>
</arguments>
<msg timestamp="20170907 23:52:25.390" level="INFO">Executing : Table Must Exist  |  tasks </msg>
<msg timestamp="20170907 23:52:25.390" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='tasks' </msg>
<status status="PASS" endtime="20170907 23:52:25.392" starttime="20170907 23:52:25.390"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks_history</arg>
</arguments>
<msg timestamp="20170907 23:52:25.393" level="INFO">Executing : Table Must Exist  |  tasks_history </msg>
<msg timestamp="20170907 23:52:25.393" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='tasks_history' </msg>
<status status="PASS" endtime="20170907 23:52:25.394" starttime="20170907 23:52:25.392"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces</arg>
</arguments>
<msg timestamp="20170907 23:52:25.394" level="INFO">Executing : Table Must Exist  |  traces </msg>
<msg timestamp="20170907 23:52:25.394" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='traces' </msg>
<status status="PASS" endtime="20170907 23:52:25.395" starttime="20170907 23:52:25.394"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces_history</arg>
</arguments>
<msg timestamp="20170907 23:52:25.395" level="INFO">Executing : Table Must Exist  |  traces_history </msg>
<msg timestamp="20170907 23:52:25.395" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='traces_history' </msg>
<status status="PASS" endtime="20170907 23:52:25.397" starttime="20170907 23:52:25.395"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>userRights</arg>
</arguments>
<msg timestamp="20170907 23:52:25.397" level="INFO">Executing : Table Must Exist  |  userRights </msg>
<msg timestamp="20170907 23:52:25.397" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='userRights' </msg>
<status status="PASS" endtime="20170907 23:52:25.398" starttime="20170907 23:52:25.397"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups</arg>
</arguments>
<msg timestamp="20170907 23:52:25.398" level="INFO">Executing : Table Must Exist  |  usergroups </msg>
<msg timestamp="20170907 23:52:25.398" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='usergroups' </msg>
<status status="PASS" endtime="20170907 23:52:25.399" starttime="20170907 23:52:25.398"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups_history</arg>
</arguments>
<msg timestamp="20170907 23:52:25.400" level="INFO">Executing : Table Must Exist  |  usergroups_history </msg>
<msg timestamp="20170907 23:52:25.400" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='usergroups_history' </msg>
<status status="PASS" endtime="20170907 23:52:25.401" starttime="20170907 23:52:25.399"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users</arg>
</arguments>
<msg timestamp="20170907 23:52:25.402" level="INFO">Executing : Table Must Exist  |  users </msg>
<msg timestamp="20170907 23:52:25.402" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='users' </msg>
<status status="PASS" endtime="20170907 23:52:25.404" starttime="20170907 23:52:25.401"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users_history</arg>
</arguments>
<msg timestamp="20170907 23:52:25.404" level="INFO">Executing : Table Must Exist  |  users_history </msg>
<msg timestamp="20170907 23:52:25.405" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='users_history' </msg>
<status status="PASS" endtime="20170907 23:52:25.407" starttime="20170907 23:52:25.404"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>version</arg>
</arguments>
<msg timestamp="20170907 23:52:25.407" level="INFO">Executing : Table Must Exist  |  version </msg>
<msg timestamp="20170907 23:52:25.408" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='version' </msg>
<status status="PASS" endtime="20170907 23:52:25.409" starttime="20170907 23:52:25.407"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>versions</arg>
</arguments>
<msg timestamp="20170907 23:52:25.410" level="INFO">Executing : Table Must Exist  |  versions </msg>
<msg timestamp="20170907 23:52:25.410" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='versions' </msg>
<status status="PASS" endtime="20170907 23:52:25.411" starttime="20170907 23:52:25.409"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps</arg>
</arguments>
<msg timestamp="20170907 23:52:25.412" level="INFO">Executing : Table Must Exist  |  view_apps </msg>
<msg timestamp="20170907 23:52:25.412" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps' </msg>
<status status="PASS" endtime="20170907 23:52:25.413" starttime="20170907 23:52:25.411"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps_for_offering</arg>
</arguments>
<msg timestamp="20170907 23:52:25.414" level="INFO">Executing : Table Must Exist  |  view_apps_for_offering </msg>
<msg timestamp="20170907 23:52:25.414" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps_for_offering' </msg>
<status status="PASS" endtime="20170907 23:52:25.414" starttime="20170907 23:52:25.413"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps_for_offering_with_file_sizes</arg>
</arguments>
<msg timestamp="20170907 23:52:25.415" level="INFO">Executing : Table Must Exist  |  view_apps_for_offering_with_file_sizes </msg>
<msg timestamp="20170907 23:52:25.415" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps_for_offering_with_file_sizes' </msg>
<status status="PASS" endtime="20170907 23:52:25.416" starttime="20170907 23:52:25.415"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_datas</arg>
</arguments>
<msg timestamp="20170907 23:52:25.416" level="INFO">Executing : Table Must Exist  |  view_datas </msg>
<msg timestamp="20170907 23:52:25.417" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_datas' </msg>
<status status="PASS" endtime="20170907 23:52:25.418" starttime="20170907 23:52:25.416"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_executables</arg>
</arguments>
<msg timestamp="20170907 23:52:25.418" level="INFO">Executing : Table Must Exist  |  view_executables </msg>
<msg timestamp="20170907 23:52:25.418" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_executables' </msg>
<status status="PASS" endtime="20170907 23:52:25.419" starttime="20170907 23:52:25.418"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_groups</arg>
</arguments>
<msg timestamp="20170907 23:52:25.419" level="INFO">Executing : Table Must Exist  |  view_groups </msg>
<msg timestamp="20170907 23:52:25.419" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_groups' </msg>
<status status="PASS" endtime="20170907 23:52:25.420" starttime="20170907 23:52:25.419"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts</arg>
</arguments>
<msg timestamp="20170907 23:52:25.421" level="INFO">Executing : Table Must Exist  |  view_hosts </msg>
<msg timestamp="20170907 23:52:25.421" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts' </msg>
<status status="PASS" endtime="20170907 23:52:25.422" starttime="20170907 23:52:25.421"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_deployable</arg>
</arguments>
<msg timestamp="20170907 23:52:25.422" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_deployable </msg>
<msg timestamp="20170907 23:52:25.422" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_deployable' </msg>
<status status="PASS" endtime="20170907 23:52:25.424" starttime="20170907 23:52:25.422"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_deployable_and_shared</arg>
</arguments>
<msg timestamp="20170907 23:52:25.424" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_deployable_and_shared </msg>
<msg timestamp="20170907 23:52:25.424" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_deployable_and_shared' </msg>
<status status="PASS" endtime="20170907 23:52:25.426" starttime="20170907 23:52:25.424"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_shared</arg>
</arguments>
<msg timestamp="20170907 23:52:25.426" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_shared </msg>
<msg timestamp="20170907 23:52:25.426" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_shared' </msg>
<status status="PASS" endtime="20170907 23:52:25.428" starttime="20170907 23:52:25.426"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_sessions</arg>
</arguments>
<msg timestamp="20170907 23:52:25.428" level="INFO">Executing : Table Must Exist  |  view_sessions </msg>
<msg timestamp="20170907 23:52:25.428" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_sessions' </msg>
<status status="PASS" endtime="20170907 23:52:25.429" starttime="20170907 23:52:25.428"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_tasks</arg>
</arguments>
<msg timestamp="20170907 23:52:25.429" level="INFO">Executing : Table Must Exist  |  view_tasks </msg>
<msg timestamp="20170907 23:52:25.430" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_tasks' </msg>
<status status="PASS" endtime="20170907 23:52:25.431" starttime="20170907 23:52:25.429"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_traces</arg>
</arguments>
<msg timestamp="20170907 23:52:25.432" level="INFO">Executing : Table Must Exist  |  view_traces </msg>
<msg timestamp="20170907 23:52:25.432" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_traces' </msg>
<status status="PASS" endtime="20170907 23:52:25.433" starttime="20170907 23:52:25.432"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_usergroups</arg>
</arguments>
<msg timestamp="20170907 23:52:25.433" level="INFO">Executing : Table Must Exist  |  view_usergroups </msg>
<msg timestamp="20170907 23:52:25.433" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_usergroups' </msg>
<status status="PASS" endtime="20170907 23:52:25.434" starttime="20170907 23:52:25.433"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users</arg>
</arguments>
<msg timestamp="20170907 23:52:25.434" level="INFO">Executing : Table Must Exist  |  view_users </msg>
<msg timestamp="20170907 23:52:25.434" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users' </msg>
<status status="PASS" endtime="20170907 23:52:25.436" starttime="20170907 23:52:25.434"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_apps</arg>
</arguments>
<msg timestamp="20170907 23:52:25.436" level="INFO">Executing : Table Must Exist  |  view_users_apps </msg>
<msg timestamp="20170907 23:52:25.436" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_apps' </msg>
<status status="PASS" endtime="20170907 23:52:25.437" starttime="20170907 23:52:25.436"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_datas</arg>
</arguments>
<msg timestamp="20170907 23:52:25.438" level="INFO">Executing : Table Must Exist  |  view_users_datas </msg>
<msg timestamp="20170907 23:52:25.438" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_datas' </msg>
<status status="PASS" endtime="20170907 23:52:25.439" starttime="20170907 23:52:25.438"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_groups</arg>
</arguments>
<msg timestamp="20170907 23:52:25.439" level="INFO">Executing : Table Must Exist  |  view_users_groups </msg>
<msg timestamp="20170907 23:52:25.440" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_groups' </msg>
<status status="PASS" endtime="20170907 23:52:25.441" starttime="20170907 23:52:25.439"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_hosts</arg>
</arguments>
<msg timestamp="20170907 23:52:25.441" level="INFO">Executing : Table Must Exist  |  view_users_hosts </msg>
<msg timestamp="20170907 23:52:25.441" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_hosts' </msg>
<status status="PASS" endtime="20170907 23:52:25.442" starttime="20170907 23:52:25.441"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_sessions</arg>
</arguments>
<msg timestamp="20170907 23:52:25.442" level="INFO">Executing : Table Must Exist  |  view_users_sessions </msg>
<msg timestamp="20170907 23:52:25.442" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_sessions' </msg>
<status status="PASS" endtime="20170907 23:52:25.443" starttime="20170907 23:52:25.442"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_tasks</arg>
</arguments>
<msg timestamp="20170907 23:52:25.444" level="INFO">Executing : Table Must Exist  |  view_users_tasks </msg>
<msg timestamp="20170907 23:52:25.444" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_tasks' </msg>
<status status="PASS" endtime="20170907 23:52:25.445" starttime="20170907 23:52:25.444"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_traces</arg>
</arguments>
<msg timestamp="20170907 23:52:25.445" level="INFO">Executing : Table Must Exist  |  view_users_traces </msg>
<msg timestamp="20170907 23:52:25.445" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_traces' </msg>
<status status="PASS" endtime="20170907 23:52:25.446" starttime="20170907 23:52:25.445"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_usergroups</arg>
</arguments>
<msg timestamp="20170907 23:52:25.447" level="INFO">Executing : Table Must Exist  |  view_users_usergroups </msg>
<msg timestamp="20170907 23:52:25.447" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_usergroups' </msg>
<status status="PASS" endtime="20170907 23:52:25.448" starttime="20170907 23:52:25.447"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_users</arg>
</arguments>
<msg timestamp="20170907 23:52:25.448" level="INFO">Executing : Table Must Exist  |  view_users_users </msg>
<msg timestamp="20170907 23:52:25.448" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_users' </msg>
<status status="PASS" endtime="20170907 23:52:25.450" starttime="20170907 23:52:25.448"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_works</arg>
</arguments>
<msg timestamp="20170907 23:52:25.450" level="INFO">Executing : Table Must Exist  |  view_users_works </msg>
<msg timestamp="20170907 23:52:25.450" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_works' </msg>
<status status="PASS" endtime="20170907 23:52:25.452" starttime="20170907 23:52:25.450"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works</arg>
</arguments>
<msg timestamp="20170907 23:52:25.453" level="INFO">Executing : Table Must Exist  |  view_works </msg>
<msg timestamp="20170907 23:52:25.453" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works' </msg>
<status status="PASS" endtime="20170907 23:52:25.456" starttime="20170907 23:52:25.452"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works_for_billing</arg>
</arguments>
<msg timestamp="20170907 23:52:25.457" level="INFO">Executing : Table Must Exist  |  view_works_for_billing </msg>
<msg timestamp="20170907 23:52:25.457" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works_for_billing' </msg>
<status status="PASS" endtime="20170907 23:52:25.459" starttime="20170907 23:52:25.456"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works_for_billing_with_file_sizes</arg>
</arguments>
<msg timestamp="20170907 23:52:25.460" level="INFO">Executing : Table Must Exist  |  view_works_for_billing_with_file_sizes </msg>
<msg timestamp="20170907 23:52:25.460" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works_for_billing_with_file_sizes' </msg>
<status status="PASS" endtime="20170907 23:52:25.462" starttime="20170907 23:52:25.460"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works</arg>
</arguments>
<msg timestamp="20170907 23:52:25.463" level="INFO">Executing : Table Must Exist  |  works </msg>
<msg timestamp="20170907 23:52:25.463" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='works' </msg>
<status status="PASS" endtime="20170907 23:52:25.465" starttime="20170907 23:52:25.462"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works_history</arg>
</arguments>
<msg timestamp="20170907 23:52:25.466" level="INFO">Executing : Table Must Exist  |  works_history </msg>
<msg timestamp="20170907 23:52:25.466" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='works_history' </msg>
<status status="PASS" endtime="20170907 23:52:25.468" starttime="20170907 23:52:25.465"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170907 23:52:25.469" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170907 23:52:25.470" starttime="20170907 23:52:25.469"></status>
</kw>
<status status="PASS" endtime="20170907 23:52:25.470" starttime="20170907 23:52:25.468"></status>
</kw>
<status status="PASS" endtime="20170907 23:52:25.471" starttime="20170907 23:52:25.342"></status>
</kw>
<status status="PASS" endtime="20170907 23:52:25.471" starttime="20170907 23:52:25.342"></status>
</kw>
<kw name="Start XtremWeb Server" library="XWServer">
<arguments>
<arg>${DIST_XWHEP_PATH}</arg>
</arguments>
<kw name="File Should Exist" library="OperatingSystem">
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xtremweb.server.conf</arg>
</arguments>
<msg timestamp="20170907 23:52:25.475" html="yes" level="INFO">File '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf&lt;/a&gt;' exists.</msg>
<status status="PASS" endtime="20170907 23:52:25.475" starttime="20170907 23:52:25.472"></status>
</kw>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xtremweb.server.conf</arg>
</arguments>
<assign>
<var>${config_content}</var>
</assign>
<msg timestamp="20170907 23:52:25.476" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf&lt;/a&gt;'.</msg>
<msg timestamp="20170907 23:52:25.477" level="INFO">${config_content} = #
# Copyrights     : CNRS
# Author         : Oleg Lodygensky
# Acknowledgment : XtremWeb-HEP is based on XtremWeb 1.8.0 by inria : http://www.xtremweb.net/
# Web            : http://www.xtremweb-hep.o...</msg>
<status status="PASS" endtime="20170907 23:52:25.477" starttime="20170907 23:52:25.475"></status>
</kw>
<kw name="Remove String Using Regexp" library="String">
<doc>Removes ``patterns`` from the given ``string``.</doc>
<arguments>
<arg>${config_content}</arg>
<arg>LAUNCHERURL=${XWCONFIGURE.VALUES.XWUPGRADEURL}</arg>
</arguments>
<assign>
<var>${config_content_filtered}</var>
</assign>
<msg timestamp="20170907 23:52:25.478" level="INFO">${config_content_filtered} = #
# Copyrights     : CNRS
# Author         : Oleg Lodygensky
# Acknowledgment : XtremWeb-HEP is based on XtremWeb 1.8.0 by inria : http://www.xtremweb.net/
# Web            : http://www.xtremweb-hep.o...</msg>
<status status="PASS" endtime="20170907 23:52:25.478" starttime="20170907 23:52:25.478"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${config_content_filtered}</arg>
<arg>\## HTTPSPORT=443</arg>
<arg>HTTPSPORT=${XWCONFIGURE.VALUES.HTTPSPORT}</arg>
</arguments>
<assign>
<var>${config_content_filtered}</var>
</assign>
<msg timestamp="20170907 23:52:25.479" level="INFO">${config_content_filtered} = #
# Copyrights     : CNRS
# Author         : Oleg Lodygensky
# Acknowledgment : XtremWeb-HEP is based on XtremWeb 1.8.0 by inria : http://www.xtremweb.net/
# Web            : http://www.xtremweb-hep.o...</msg>
<status status="PASS" endtime="20170907 23:52:25.479" starttime="20170907 23:52:25.479"></status>
</kw>
<kw name="Create File" library="OperatingSystem">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xtremweb.server.conf</arg>
<arg>content=${config_content_filtered}</arg>
</arguments>
<msg timestamp="20170907 23:52:25.482" html="yes" level="INFO">Created file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170907 23:52:25.483" starttime="20170907 23:52:25.479"></status>
</kw>
<kw name="Remove File" library="OperatingSystem">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<msg timestamp="20170907 23:52:25.484" html="yes" level="INFO">Removed file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170907 23:52:25.484" starttime="20170907 23:52:25.483"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/bin/xtremweb.server console</arg>
<arg>shell=yes</arg>
<arg>stderr=STDOUT</arg>
<arg>stdout=${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<assign>
<var>${created_process}</var>
</assign>
<msg timestamp="20170907 23:52:25.485" level="INFO">Starting process:
/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/xtremweb.server console</msg>
<msg timestamp="20170907 23:52:25.489" level="INFO">${created_process} = 69</msg>
<status status="PASS" endtime="20170907 23:52:25.490" starttime="20170907 23:52:25.484"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SERVER_PROCESS}</arg>
<arg>${created_process}</arg>
</arguments>
<msg timestamp="20170907 23:52:25.491" level="INFO">${SERVER_PROCESS} = 69</msg>
<status status="PASS" endtime="20170907 23:52:25.492" starttime="20170907 23:52:25.490"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2 min</arg>
<arg>5 sec</arg>
<arg>Check XtremWeb Server Start From Log</arg>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<kw name="Check XtremWeb Server Start From Log" library="XWServer">
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<kw name="Log XtremWeb Process Log File" library="XWServer">
<kw name="Log File" library="OperatingSystem">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<msg timestamp="20170907 23:52:25.495" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170907 23:52:25.496" level="INFO"></msg>
<status status="PASS" endtime="20170907 23:52:25.496" starttime="20170907 23:52:25.494"></status>
</kw>
<status status="PASS" endtime="20170907 23:52:25.496" starttime="20170907 23:52:25.493"></status>
</kw>
<kw name="Grep File" library="OperatingSystem">
<doc>Returns the lines of the specified file that match the ``pattern``.</doc>
<arguments>
<arg>${log}</arg>
<arg>listening on port : ${XWCONFIGURE.VALUES.HTTPSPORT}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20170907 23:52:25.497" html="yes" level="INFO">Reading file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170907 23:52:25.498" level="INFO">0 out of 0 lines matched</msg>
<msg timestamp="20170907 23:52:25.498" level="INFO">${ret} = </msg>
<status status="PASS" endtime="20170907 23:52:25.498" starttime="20170907 23:52:25.497"></status>
</kw>
<kw name="Get Line Count" library="String">
<doc>Returns and logs the number of lines in the given string.</doc>
<arguments>
<arg>${ret}</arg>
</arguments>
<assign>
<var>${line_count}</var>
</assign>
<msg timestamp="20170907 23:52:25.498" level="INFO">0 lines</msg>
<msg timestamp="20170907 23:52:25.498" level="INFO">${line_count} = 0</msg>
<status status="PASS" endtime="20170907 23:52:25.498" starttime="20170907 23:52:25.498"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${line_count}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20170907 23:52:25.499" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20170907 23:52:25.500" level="FAIL">0 != 2</msg>
<status status="FAIL" endtime="20170907 23:52:25.500" starttime="20170907 23:52:25.499"></status>
</kw>
<status status="FAIL" endtime="20170907 23:52:25.501" starttime="20170907 23:52:25.492"></status>
</kw>
<kw name="Check XtremWeb Server Start From Log" library="XWServer">
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<kw name="Log XtremWeb Process Log File" library="XWServer">
<kw name="Log File" library="OperatingSystem">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<msg timestamp="20170907 23:52:30.505" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170907 23:52:30.506" level="INFO">Thu Sep  7 23:52:25 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : checking launch url
Thu Sep  7 23:52:25 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] WARNING : no launcher URL defined
Thu Sep  7 23:52:25 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : launching SmartSockets hub
[07/Sep/2017:23:52:28 +0000] [main_1] ERROR : setRole : role redefined ?! (was SERVER)
[07/Sep/2017:23:52:29 +0000] [xtremweb.database.DBConnPoolThread_main_1] INFO : Connection to database jdbc:mysql://localhost/xtremweb is ok, 70 created
[07/Sep/2017:23:52:29 +0000] [xtremweb.dispatcher.DBInterface_main_1] WARN : Can't retrieve any app
[07/Sep/2017:23:52:29 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't create ProxyValidator
[07/Sep/2017:23:52:29 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.io.FileNotFoundException: /tmp/castore (No such file or directory) (/tmp/castore (No such file or directory))
[07/Sep/2017:23:52:29 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't add CA certificates to keystore
[07/Sep/2017:23:52:29 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.lang.NullPointerException (null)
[07/Sep/2017:23:52:29 +0000] [xtremweb.dispatcher.HashTaskSet_TaskSet_14] INFO : TaskSet started (300000)
[07/Sep/2017:23:52:30 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : still waiting task set...
[07/Sep/2017:23:52:30 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : UDP server not started
[07/Sep/2017:23:52:30 +0000] [xtremweb.communications.TCPServer_TCPServerNIO_15] INFO : started, listening on port : 4321
log4j:WARN No appenders could be found for logger (org.eclipse.jetty.util.log).
log4j:WARN Please initialize the log4j system properly.
log4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.
</msg>
<status status="PASS" endtime="20170907 23:52:30.507" starttime="20170907 23:52:30.504"></status>
</kw>
<status status="PASS" endtime="20170907 23:52:30.507" starttime="20170907 23:52:30.503"></status>
</kw>
<kw name="Grep File" library="OperatingSystem">
<doc>Returns the lines of the specified file that match the ``pattern``.</doc>
<arguments>
<arg>${log}</arg>
<arg>listening on port : ${XWCONFIGURE.VALUES.HTTPSPORT}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20170907 23:52:30.508" html="yes" level="INFO">Reading file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170907 23:52:30.510" level="INFO">0 out of 17 lines matched</msg>
<msg timestamp="20170907 23:52:30.510" level="INFO">${ret} = </msg>
<status status="PASS" endtime="20170907 23:52:30.510" starttime="20170907 23:52:30.507"></status>
</kw>
<kw name="Get Line Count" library="String">
<doc>Returns and logs the number of lines in the given string.</doc>
<arguments>
<arg>${ret}</arg>
</arguments>
<assign>
<var>${line_count}</var>
</assign>
<msg timestamp="20170907 23:52:30.511" level="INFO">0 lines</msg>
<msg timestamp="20170907 23:52:30.511" level="INFO">${line_count} = 0</msg>
<status status="PASS" endtime="20170907 23:52:30.511" starttime="20170907 23:52:30.510"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${line_count}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20170907 23:52:30.512" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20170907 23:52:30.513" level="FAIL">0 != 2</msg>
<status status="FAIL" endtime="20170907 23:52:30.513" starttime="20170907 23:52:30.512"></status>
</kw>
<status status="FAIL" endtime="20170907 23:52:30.513" starttime="20170907 23:52:30.502"></status>
</kw>
<kw name="Check XtremWeb Server Start From Log" library="XWServer">
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<kw name="Log XtremWeb Process Log File" library="XWServer">
<kw name="Log File" library="OperatingSystem">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<msg timestamp="20170907 23:52:35.519" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170907 23:52:35.521" level="INFO">Thu Sep  7 23:52:25 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : checking launch url
Thu Sep  7 23:52:25 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] WARNING : no launcher URL defined
Thu Sep  7 23:52:25 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : launching SmartSockets hub
[07/Sep/2017:23:52:28 +0000] [main_1] ERROR : setRole : role redefined ?! (was SERVER)
[07/Sep/2017:23:52:29 +0000] [xtremweb.database.DBConnPoolThread_main_1] INFO : Connection to database jdbc:mysql://localhost/xtremweb is ok, 70 created
[07/Sep/2017:23:52:29 +0000] [xtremweb.dispatcher.DBInterface_main_1] WARN : Can't retrieve any app
[07/Sep/2017:23:52:29 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't create ProxyValidator
[07/Sep/2017:23:52:29 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.io.FileNotFoundException: /tmp/castore (No such file or directory) (/tmp/castore (No such file or directory))
[07/Sep/2017:23:52:29 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't add CA certificates to keystore
[07/Sep/2017:23:52:29 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.lang.NullPointerException (null)
[07/Sep/2017:23:52:29 +0000] [xtremweb.dispatcher.HashTaskSet_TaskSet_14] INFO : TaskSet started (300000)
[07/Sep/2017:23:52:30 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : still waiting task set...
[07/Sep/2017:23:52:30 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : UDP server not started
[07/Sep/2017:23:52:30 +0000] [xtremweb.communications.TCPServer_TCPServerNIO_15] INFO : started, listening on port : 4321
log4j:WARN No appenders could be found for logger (org.eclipse.jetty.util.log).
log4j:WARN Please initialize the log4j system properly.
log4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.
[07/Sep/2017:23:52:30 +0000] [xtremweb.communications.HTTPServer_main_1] INFO : started, listening on port : 9443
[07/Sep/2017:23:52:30 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : FACEBOOK : java.net.MalformedURLException: no protocol: 
[07/Sep/2017:23:52:30 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : GOOGLE : java.net.MalformedURLException: no protocol: 
[07/Sep/2017:23:52:30 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : TWITTER : java.net.MalformedURLException: no protocol: 
[07/Sep/2017:23:52:30 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : YAHOO : java.net.MalformedURLException: no protocol: 
[07/Sep/2017:23:52:30 +0000] [main_1] ERROR : Can't add new entry to keystore
[07/Sep/2017:23:52:30 +0000] [main_1] WARN : javax.net.ssl.SSLHandshakeException: sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target (sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target)
[07/Sep/2017:23:52:30 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : XWHEP Dispatcher(10.6.0-head) started [Thu Sep 07 23:52:30 UTC 2017]
[07/Sep/2017:23:52:30 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : DB vendor  = mysql
[07/Sep/2017:23:52:30 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : mileStone  = 
[07/Sep/2017:23:52:30 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Time out   = 15000
[07/Sep/2017:23:52:30 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Disk opt'd = true
[07/Sep/2017:23:52:30 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Net  opt'd = true
[07/Sep/2017:23:52:30 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : NIO        = true
XWHEP Dispatcher started  Thu Sep 07 23:52:30 UTC 2017
Name             : vagrant-ubuntu-trusty-64
Version          : 10.6.0-head
Identity         : 
XWRole           : SERVER
Started on       : Thu Sep 07 23:52:28 UTC 2017
Scheduler        : xtremweb.dispatcher.MatchingScheduler
SmartSockets hub : 172.28.128.3/172.17.0.1/10.0.2.15-4329#56.3c.5a.bb.cb.7c.00.00.d6.11.02.42.bc.fb.75.e4~vagrant
Server HTTP      : true
Alive            : 300
Alive time out   : 900
Polling time out : 15000
Optimize zip     : true
Optimize network : true
NIO              : true
Comm layer       : xtremweb.communications.TCPClient
Socket time out  : 60000
Socket retries   : 50
Max connections  : 200
TCP port         : 4321
UDP port         : 4323
HTPP  port       : 80
HTPPS port       : 9443
Sun RPC interposition port : 4328
Sandbox path : /usr/bin/lxc
Sandbox launch args : 
Host &lt;host&gt;&lt;uid&gt;7e7f45e9-00c4-4cb0-a7c6-e85c24e36a6f&lt;/uid&gt;&lt;accessrights&gt;0x755&lt;/accessrights&gt;&lt;name&gt;vagrant-ubuntu-trusty-64&lt;/name&gt;&lt;cpuload&gt;50&lt;/cpuload&gt;&lt;natedipaddr&gt;10.0.2.15&lt;/natedipaddr&gt;&lt;ipaddr&gt;10.0.2.15&lt;/ipaddr&gt;&lt;hwaddr&gt;&lt;/hwaddr&gt;&lt;timezone&gt;Etc/UTC&lt;/timezone&gt;&lt;os&gt;LINUX&lt;/os&gt;&lt;osversion&gt;3.13.0-129-generic&lt;/osversion&gt;&lt;javaversion&gt;1.8.0_141&lt;/javaversion&gt;&lt;javadatamodel&gt;64&lt;/javadatamodel&gt;&lt;cputype&gt;AMD64&lt;/cputype&gt;&lt;cpunb&gt;1&lt;/cpunb&gt;&lt;cpumodel&gt;unknown&lt;/cpumodel&gt;&lt;cpuspeed&gt;0&lt;/cpuspeed&gt;&lt;totalmem&gt;0&lt;/totalmem&gt;&lt;totalswap&gt;0&lt;/totalswap&gt;&lt;totaltmp&gt;40284&lt;/totaltmp&gt;&lt;freetmp&gt;37110&lt;/freetmp&gt;&lt;project&gt;&lt;/project&gt;&lt;active&gt;true&lt;/active&gt;&lt;incomingconnections&gt;false&lt;/incomingconnections&gt;&lt;available&gt;false&lt;/available&gt;&lt;pilotjob&gt;false&lt;/pilotjob&gt;&lt;sgid&gt;&lt;/sgid&gt;&lt;timeout&gt;15000&lt;/timeout&gt;&lt;traces&gt;false&lt;/traces&gt;&lt;acceptbin&gt;false&lt;/acceptbin&gt;&lt;version&gt;10.6.0-head&lt;/version&gt;&lt;/host&gt;
[07/Sep/2017:23:52:30 +0000] [xtremweb.communications.HTTPServer_HTTPServer_218] INFO : started, listening on port : 9443
</msg>
<status status="PASS" endtime="20170907 23:52:35.521" starttime="20170907 23:52:35.518"></status>
</kw>
<status status="PASS" endtime="20170907 23:52:35.522" starttime="20170907 23:52:35.517"></status>
</kw>
<kw name="Grep File" library="OperatingSystem">
<doc>Returns the lines of the specified file that match the ``pattern``.</doc>
<arguments>
<arg>${log}</arg>
<arg>listening on port : ${XWCONFIGURE.VALUES.HTTPSPORT}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20170907 23:52:35.523" html="yes" level="INFO">Reading file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170907 23:52:35.527" level="INFO">2 out of 59 lines matched</msg>
<msg timestamp="20170907 23:52:35.527" level="INFO">${ret} = [07/Sep/2017:23:52:30 +0000] [xtremweb.communications.HTTPServer_main_1] INFO : started, listening on port : 9443
[07/Sep/2017:23:52:30 +0000] [xtremweb.communications.HTTPServer_HTTPServer_218] INFO ...</msg>
<status status="PASS" endtime="20170907 23:52:35.527" starttime="20170907 23:52:35.522"></status>
</kw>
<kw name="Get Line Count" library="String">
<doc>Returns and logs the number of lines in the given string.</doc>
<arguments>
<arg>${ret}</arg>
</arguments>
<assign>
<var>${line_count}</var>
</assign>
<msg timestamp="20170907 23:52:35.528" level="INFO">2 lines</msg>
<msg timestamp="20170907 23:52:35.528" level="INFO">${line_count} = 2</msg>
<status status="PASS" endtime="20170907 23:52:35.528" starttime="20170907 23:52:35.528"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${line_count}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20170907 23:52:35.529" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170907 23:52:35.529" starttime="20170907 23:52:35.528"></status>
</kw>
<status status="PASS" endtime="20170907 23:52:35.529" starttime="20170907 23:52:35.516"></status>
</kw>
<status status="PASS" endtime="20170907 23:52:35.529" starttime="20170907 23:52:25.492"></status>
</kw>
<kw name="Log XtremWeb Process Log File" library="XWServer">
<kw name="Log File" library="OperatingSystem">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<msg timestamp="20170907 23:52:35.530" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170907 23:52:35.530" level="INFO">Thu Sep  7 23:52:25 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : checking launch url
Thu Sep  7 23:52:25 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] WARNING : no launcher URL defined
Thu Sep  7 23:52:25 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : launching SmartSockets hub
[07/Sep/2017:23:52:28 +0000] [main_1] ERROR : setRole : role redefined ?! (was SERVER)
[07/Sep/2017:23:52:29 +0000] [xtremweb.database.DBConnPoolThread_main_1] INFO : Connection to database jdbc:mysql://localhost/xtremweb is ok, 70 created
[07/Sep/2017:23:52:29 +0000] [xtremweb.dispatcher.DBInterface_main_1] WARN : Can't retrieve any app
[07/Sep/2017:23:52:29 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't create ProxyValidator
[07/Sep/2017:23:52:29 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.io.FileNotFoundException: /tmp/castore (No such file or directory) (/tmp/castore (No such file or directory))
[07/Sep/2017:23:52:29 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't add CA certificates to keystore
[07/Sep/2017:23:52:29 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.lang.NullPointerException (null)
[07/Sep/2017:23:52:29 +0000] [xtremweb.dispatcher.HashTaskSet_TaskSet_14] INFO : TaskSet started (300000)
[07/Sep/2017:23:52:30 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : still waiting task set...
[07/Sep/2017:23:52:30 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : UDP server not started
[07/Sep/2017:23:52:30 +0000] [xtremweb.communications.TCPServer_TCPServerNIO_15] INFO : started, listening on port : 4321
log4j:WARN No appenders could be found for logger (org.eclipse.jetty.util.log).
log4j:WARN Please initialize the log4j system properly.
log4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.
[07/Sep/2017:23:52:30 +0000] [xtremweb.communications.HTTPServer_main_1] INFO : started, listening on port : 9443
[07/Sep/2017:23:52:30 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : FACEBOOK : java.net.MalformedURLException: no protocol: 
[07/Sep/2017:23:52:30 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : GOOGLE : java.net.MalformedURLException: no protocol: 
[07/Sep/2017:23:52:30 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : TWITTER : java.net.MalformedURLException: no protocol: 
[07/Sep/2017:23:52:30 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : YAHOO : java.net.MalformedURLException: no protocol: 
[07/Sep/2017:23:52:30 +0000] [main_1] ERROR : Can't add new entry to keystore
[07/Sep/2017:23:52:30 +0000] [main_1] WARN : javax.net.ssl.SSLHandshakeException: sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target (sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target)
[07/Sep/2017:23:52:30 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : XWHEP Dispatcher(10.6.0-head) started [Thu Sep 07 23:52:30 UTC 2017]
[07/Sep/2017:23:52:30 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : DB vendor  = mysql
[07/Sep/2017:23:52:30 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : mileStone  = 
[07/Sep/2017:23:52:30 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Time out   = 15000
[07/Sep/2017:23:52:30 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Disk opt'd = true
[07/Sep/2017:23:52:30 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Net  opt'd = true
[07/Sep/2017:23:52:30 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : NIO        = true
XWHEP Dispatcher started  Thu Sep 07 23:52:30 UTC 2017
Name             : vagrant-ubuntu-trusty-64
Version          : 10.6.0-head
Identity         : 
XWRole           : SERVER
Started on       : Thu Sep 07 23:52:28 UTC 2017
Scheduler        : xtremweb.dispatcher.MatchingScheduler
SmartSockets hub : 172.28.128.3/172.17.0.1/10.0.2.15-4329#56.3c.5a.bb.cb.7c.00.00.d6.11.02.42.bc.fb.75.e4~vagrant
Server HTTP      : true
Alive            : 300
Alive time out   : 900
Polling time out : 15000
Optimize zip     : true
Optimize network : true
NIO              : true
Comm layer       : xtremweb.communications.TCPClient
Socket time out  : 60000
Socket retries   : 50
Max connections  : 200
TCP port         : 4321
UDP port         : 4323
HTPP  port       : 80
HTPPS port       : 9443
Sun RPC interposition port : 4328
Sandbox path : /usr/bin/lxc
Sandbox launch args : 
Host &lt;host&gt;&lt;uid&gt;7e7f45e9-00c4-4cb0-a7c6-e85c24e36a6f&lt;/uid&gt;&lt;accessrights&gt;0x755&lt;/accessrights&gt;&lt;name&gt;vagrant-ubuntu-trusty-64&lt;/name&gt;&lt;cpuload&gt;50&lt;/cpuload&gt;&lt;natedipaddr&gt;10.0.2.15&lt;/natedipaddr&gt;&lt;ipaddr&gt;10.0.2.15&lt;/ipaddr&gt;&lt;hwaddr&gt;&lt;/hwaddr&gt;&lt;timezone&gt;Etc/UTC&lt;/timezone&gt;&lt;os&gt;LINUX&lt;/os&gt;&lt;osversion&gt;3.13.0-129-generic&lt;/osversion&gt;&lt;javaversion&gt;1.8.0_141&lt;/javaversion&gt;&lt;javadatamodel&gt;64&lt;/javadatamodel&gt;&lt;cputype&gt;AMD64&lt;/cputype&gt;&lt;cpunb&gt;1&lt;/cpunb&gt;&lt;cpumodel&gt;unknown&lt;/cpumodel&gt;&lt;cpuspeed&gt;0&lt;/cpuspeed&gt;&lt;totalmem&gt;0&lt;/totalmem&gt;&lt;totalswap&gt;0&lt;/totalswap&gt;&lt;totaltmp&gt;40284&lt;/totaltmp&gt;&lt;freetmp&gt;37110&lt;/freetmp&gt;&lt;project&gt;&lt;/project&gt;&lt;active&gt;true&lt;/active&gt;&lt;incomingconnections&gt;false&lt;/incomingconnections&gt;&lt;available&gt;false&lt;/available&gt;&lt;pilotjob&gt;false&lt;/pilotjob&gt;&lt;sgid&gt;&lt;/sgid&gt;&lt;timeout&gt;15000&lt;/timeout&gt;&lt;traces&gt;false&lt;/traces&gt;&lt;acceptbin&gt;false&lt;/acceptbin&gt;&lt;version&gt;10.6.0-head&lt;/version&gt;&lt;/host&gt;
[07/Sep/2017:23:52:30 +0000] [xtremweb.communications.HTTPServer_HTTPServer_218] INFO : started, listening on port : 9443
</msg>
<status status="PASS" endtime="20170907 23:52:35.530" starttime="20170907 23:52:35.529"></status>
</kw>
<status status="PASS" endtime="20170907 23:52:35.530" starttime="20170907 23:52:35.529"></status>
</kw>
<status status="PASS" endtime="20170907 23:52:35.531" starttime="20170907 23:52:25.471"></status>
</kw>
<kw name="Start XtremWeb Worker" library="XWWorker">
<arguments>
<arg>${DIST_XWHEP_PATH}</arg>
</arguments>
<kw name="File Should Exist" library="OperatingSystem">
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xtremweb.worker.conf</arg>
</arguments>
<msg timestamp="20170907 23:52:35.532" html="yes" level="INFO">File '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf&lt;/a&gt;' exists.</msg>
<status status="PASS" endtime="20170907 23:52:35.532" starttime="20170907 23:52:35.531"></status>
</kw>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xtremweb.worker.conf</arg>
</arguments>
<assign>
<var>${config_content}</var>
</assign>
<msg timestamp="20170907 23:52:35.533" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf&lt;/a&gt;'.</msg>
<msg timestamp="20170907 23:52:35.533" level="INFO">${config_content} = #
# Copyrights     : CNRS
# Author         : Oleg Lodygensky
# Acknowledgment : XtremWeb-HEP is based on XtremWeb 1.8.0 by inria : http://www.xtremweb.net/
# Web            : http://www.xtremweb-hep.o...</msg>
<status status="PASS" endtime="20170907 23:52:35.534" starttime="20170907 23:52:35.532"></status>
</kw>
<kw name="Remove String Using Regexp" library="String">
<doc>Removes ``patterns`` from the given ``string``.</doc>
<arguments>
<arg>${config_content}</arg>
<arg>LAUNCHERURL=${XWCONFIGURE.VALUES.XWUPGRADEURL}</arg>
</arguments>
<assign>
<var>${config_content_filtered}</var>
</assign>
<msg timestamp="20170907 23:52:35.535" level="INFO">${config_content_filtered} = #
# Copyrights     : CNRS
# Author         : Oleg Lodygensky
# Acknowledgment : XtremWeb-HEP is based on XtremWeb 1.8.0 by inria : http://www.xtremweb.net/
# Web            : http://www.xtremweb-hep.o...</msg>
<status status="PASS" endtime="20170907 23:52:35.535" starttime="20170907 23:52:35.534"></status>
</kw>
<kw name="Create File" library="OperatingSystem">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xtremweb.worker.conf</arg>
<arg>content=${config_content_filtered}</arg>
</arguments>
<msg timestamp="20170907 23:52:35.540" html="yes" level="INFO">Created file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170907 23:52:35.540" starttime="20170907 23:52:35.535"></status>
</kw>
<kw name="Remove File" library="OperatingSystem">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.worker.process.log</arg>
</arguments>
<msg timestamp="20170907 23:52:35.541" html="yes" level="INFO">Removed file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.worker.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.worker.process.log&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170907 23:52:35.541" starttime="20170907 23:52:35.540"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/bin/xtremweb.worker console</arg>
<arg>shell=yes</arg>
<arg>stderr=STDOUT</arg>
<arg>stdout=${DIST_XWHEP_PATH}/xwhep.worker.process.log</arg>
</arguments>
<assign>
<var>${created_process}</var>
</assign>
<msg timestamp="20170907 23:52:35.543" level="INFO">Starting process:
/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/xtremweb.worker console</msg>
<msg timestamp="20170907 23:52:35.546" level="INFO">${created_process} = 70</msg>
<status status="PASS" endtime="20170907 23:52:35.547" starttime="20170907 23:52:35.541"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${WORKER_PROCESS}</arg>
<arg>${created_process}</arg>
</arguments>
<msg timestamp="20170907 23:52:35.548" level="INFO">${WORKER_PROCESS} = 70</msg>
<status status="PASS" endtime="20170907 23:52:35.548" starttime="20170907 23:52:35.547"></status>
</kw>
<kw name="Log File" library="OperatingSystem">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.worker.process.log</arg>
</arguments>
<msg timestamp="20170907 23:52:35.549" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.worker.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.worker.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170907 23:52:35.550" level="INFO"></msg>
<status status="PASS" endtime="20170907 23:52:35.550" starttime="20170907 23:52:35.548"></status>
</kw>
<status status="PASS" endtime="20170907 23:52:35.550" starttime="20170907 23:52:35.531"></status>
</kw>
<status status="PASS" endtime="20170907 23:52:35.551" starttime="20170907 23:52:25.342"></status>
</kw>
<status status="PASS" endtime="20170907 23:52:35.551" starttime="20170907 23:52:25.063"></status>
</kw>
<kw name="XWSENDAPPCommand" library="XWClient">
<doc>Usage : SENDAPP appName appType cpuType osName URI | UID : inserts/updates an application; URI or UID points to binary file ; application name must be the first parameter</doc>
<arguments>
<arg>ls</arg>
<arg>DEPLOYABLE</arg>
<arg>LINUX</arg>
<arg>AMD64</arg>
<arg>/bin/ls</arg>
</arguments>
<assign>
<var>${uid}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd ${DIST_XWHEP_PATH}/bin &amp;&amp; ./xwsendapp ${appName} ${appType} ${cpuType} ${osName} ${uri-udi}</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${cmd_result}</var>
</assign>
<msg timestamp="20170907 23:52:35.554" level="INFO">Starting process:
cd /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin &amp;&amp; ./xwsendapp ls DEPLOYABLE LINUX AMD64 /bin/ls</msg>
<msg timestamp="20170907 23:52:35.560" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170907 23:52:37.893" level="INFO">Process completed.</msg>
<msg timestamp="20170907 23:52:37.893" level="INFO">${cmd_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170907 23:52:37.894" starttime="20170907 23:52:35.553"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stderr}</arg>
</arguments>
<msg timestamp="20170907 23:52:37.895" level="INFO"></msg>
<status status="PASS" endtime="20170907 23:52:37.895" starttime="20170907 23:52:37.894"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
</arguments>
<msg timestamp="20170907 23:52:37.895" level="INFO">xw://vagrant-ubuntu-trusty-64/aaf4f257-c733-4f9a-8698-4f447e0350e0</msg>
<status status="PASS" endtime="20170907 23:52:37.895" starttime="20170907 23:52:37.895"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${cmd_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170907 23:52:37.896" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170907 23:52:37.896" starttime="20170907 23:52:37.896"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
<arg>-36</arg>
</arguments>
<assign>
<var>${uid}</var>
</assign>
<msg timestamp="20170907 23:52:37.897" level="INFO">${uid} = aaf4f257-c733-4f9a-8698-4f447e0350e0</msg>
<status status="PASS" endtime="20170907 23:52:37.897" starttime="20170907 23:52:37.896"></status>
</kw>
<msg timestamp="20170907 23:52:37.897" level="INFO">${uid} = aaf4f257-c733-4f9a-8698-4f447e0350e0</msg>
<status status="PASS" endtime="20170907 23:52:37.897" starttime="20170907 23:52:35.551"></status>
</kw>
<kw name="Count From Apps Where Uid" library="XWServer">
<arguments>
<arg>${uid}</arg>
<arg>1</arg>
</arguments>
<kw name="Count From Table Where Uid" library="MySql">
<arguments>
<arg>apps</arg>
<arg>${uid}</arg>
<arg>${countExpected}</arg>
</arguments>
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170907 23:52:37.900" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170907 23:52:37.902" starttime="20170907 23:52:37.899"></status>
</kw>
<status status="PASS" endtime="20170907 23:52:37.902" starttime="20170907 23:52:37.898"></status>
</kw>
<kw name="Row Count Is Equal To X" library="DatabaseLibrary">
<doc>Check if the number of rows returned from `selectStatement` is equal to the value submitted. If not, then this</doc>
<arguments>
<arg>SELECT * FROM ${table} WHERE uid = '${uid}'</arg>
<arg>${countExpected}</arg>
</arguments>
<msg timestamp="20170907 23:52:37.904" level="INFO">Executing : Row Count Is Equal To X  |  SELECT * FROM apps WHERE uid = 'aaf4f257-c733-4f9a-8698-4f447e0350e0'  |  1 </msg>
<msg timestamp="20170907 23:52:37.904" level="INFO">Executing : Row Count  |  SELECT * FROM apps WHERE uid = 'aaf4f257-c733-4f9a-8698-4f447e0350e0' </msg>
<status status="PASS" endtime="20170907 23:52:37.906" starttime="20170907 23:52:37.902"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170907 23:52:37.907" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170907 23:52:37.907" starttime="20170907 23:52:37.907"></status>
</kw>
<status status="PASS" endtime="20170907 23:52:37.907" starttime="20170907 23:52:37.906"></status>
</kw>
<status status="PASS" endtime="20170907 23:52:37.907" starttime="20170907 23:52:37.898"></status>
</kw>
<status status="PASS" endtime="20170907 23:52:37.908" starttime="20170907 23:52:37.897"></status>
</kw>
<kw type="teardown" name="End XWtremWeb Command Test" library="XWCommon">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Nothing to do</arg>
</arguments>
<msg timestamp="20170907 23:52:37.909" level="INFO">Nothing to do</msg>
<status status="PASS" endtime="20170907 23:52:37.909" starttime="20170907 23:52:37.909"></status>
</kw>
<status status="PASS" endtime="20170907 23:52:37.909" starttime="20170907 23:52:37.908"></status>
</kw>
<doc>Testing XWSendapp cmd</doc>
<tags>
<tag>CommandLine Tests</tag>
</tags>
<status status="PASS" endtime="20170907 23:52:37.909" critical="yes" starttime="20170907 23:52:25.062"></status>
</test>
<test id="s1-s5-t3" name="Test XWSubmit and XWResults Command On LS Binary">
<kw type="setup" name="Begin XWtremWeb Command Test" library="XWCommon">
<kw name="Ping XWtremWeb Database" library="XWServer">
<kw name="Xtremweb Tables Must Exist" library="MySql">
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170907 23:52:37.914" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170907 23:52:37.915" starttime="20170907 23:52:37.913"></status>
</kw>
<status status="PASS" endtime="20170907 23:52:37.916" starttime="20170907 23:52:37.913"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>appTypes</arg>
</arguments>
<msg timestamp="20170907 23:52:37.916" level="INFO">Executing : Table Must Exist  |  appTypes </msg>
<msg timestamp="20170907 23:52:37.916" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='appTypes' </msg>
<status status="PASS" endtime="20170907 23:52:37.918" starttime="20170907 23:52:37.916"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps</arg>
</arguments>
<msg timestamp="20170907 23:52:37.919" level="INFO">Executing : Table Must Exist  |  apps </msg>
<msg timestamp="20170907 23:52:37.920" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='apps' </msg>
<status status="PASS" endtime="20170907 23:52:37.921" starttime="20170907 23:52:37.918"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps_history</arg>
</arguments>
<msg timestamp="20170907 23:52:37.921" level="INFO">Executing : Table Must Exist  |  apps_history </msg>
<msg timestamp="20170907 23:52:37.922" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='apps_history' </msg>
<status status="PASS" endtime="20170907 23:52:37.924" starttime="20170907 23:52:37.921"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>cpuTypes</arg>
</arguments>
<msg timestamp="20170907 23:52:37.924" level="INFO">Executing : Table Must Exist  |  cpuTypes </msg>
<msg timestamp="20170907 23:52:37.924" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='cpuTypes' </msg>
<status status="PASS" endtime="20170907 23:52:37.925" starttime="20170907 23:52:37.924"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>dataTypes</arg>
</arguments>
<msg timestamp="20170907 23:52:37.926" level="INFO">Executing : Table Must Exist  |  dataTypes </msg>
<msg timestamp="20170907 23:52:37.926" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='dataTypes' </msg>
<status status="PASS" endtime="20170907 23:52:37.927" starttime="20170907 23:52:37.926"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas</arg>
</arguments>
<msg timestamp="20170907 23:52:37.928" level="INFO">Executing : Table Must Exist  |  datas </msg>
<msg timestamp="20170907 23:52:37.928" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='datas' </msg>
<status status="PASS" endtime="20170907 23:52:37.929" starttime="20170907 23:52:37.927"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas_history</arg>
</arguments>
<msg timestamp="20170907 23:52:37.929" level="INFO">Executing : Table Must Exist  |  datas_history </msg>
<msg timestamp="20170907 23:52:37.929" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='datas_history' </msg>
<status status="PASS" endtime="20170907 23:52:37.930" starttime="20170907 23:52:37.929"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables</arg>
</arguments>
<msg timestamp="20170907 23:52:37.930" level="INFO">Executing : Table Must Exist  |  executables </msg>
<msg timestamp="20170907 23:52:37.930" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='executables' </msg>
<status status="PASS" endtime="20170907 23:52:37.931" starttime="20170907 23:52:37.930"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables_history</arg>
</arguments>
<msg timestamp="20170907 23:52:37.932" level="INFO">Executing : Table Must Exist  |  executables_history </msg>
<msg timestamp="20170907 23:52:37.932" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='executables_history' </msg>
<status status="PASS" endtime="20170907 23:52:37.933" starttime="20170907 23:52:37.932"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups</arg>
</arguments>
<msg timestamp="20170907 23:52:37.933" level="INFO">Executing : Table Must Exist  |  groups </msg>
<msg timestamp="20170907 23:52:37.933" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='groups' </msg>
<status status="PASS" endtime="20170907 23:52:37.934" starttime="20170907 23:52:37.933"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups_history</arg>
</arguments>
<msg timestamp="20170907 23:52:37.935" level="INFO">Executing : Table Must Exist  |  groups_history </msg>
<msg timestamp="20170907 23:52:37.935" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='groups_history' </msg>
<status status="PASS" endtime="20170907 23:52:37.936" starttime="20170907 23:52:37.935"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts</arg>
</arguments>
<msg timestamp="20170907 23:52:37.936" level="INFO">Executing : Table Must Exist  |  hosts </msg>
<msg timestamp="20170907 23:52:37.936" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='hosts' </msg>
<status status="PASS" endtime="20170907 23:52:37.937" starttime="20170907 23:52:37.936"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts_history</arg>
</arguments>
<msg timestamp="20170907 23:52:37.938" level="INFO">Executing : Table Must Exist  |  hosts_history </msg>
<msg timestamp="20170907 23:52:37.938" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='hosts_history' </msg>
<status status="PASS" endtime="20170907 23:52:37.939" starttime="20170907 23:52:37.938"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships</arg>
</arguments>
<msg timestamp="20170907 23:52:37.940" level="INFO">Executing : Table Must Exist  |  memberships </msg>
<msg timestamp="20170907 23:52:37.940" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='memberships' </msg>
<status status="PASS" endtime="20170907 23:52:37.941" starttime="20170907 23:52:37.940"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships_history</arg>
</arguments>
<msg timestamp="20170907 23:52:37.941" level="INFO">Executing : Table Must Exist  |  memberships_history </msg>
<msg timestamp="20170907 23:52:37.942" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='memberships_history' </msg>
<status status="PASS" endtime="20170907 23:52:37.942" starttime="20170907 23:52:37.941"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>oses</arg>
</arguments>
<msg timestamp="20170907 23:52:37.943" level="INFO">Executing : Table Must Exist  |  oses </msg>
<msg timestamp="20170907 23:52:37.943" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='oses' </msg>
<status status="PASS" endtime="20170907 23:52:37.944" starttime="20170907 23:52:37.943"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>packageTypes</arg>
</arguments>
<msg timestamp="20170907 23:52:37.944" level="INFO">Executing : Table Must Exist  |  packageTypes </msg>
<msg timestamp="20170907 23:52:37.944" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='packageTypes' </msg>
<status status="PASS" endtime="20170907 23:52:37.945" starttime="20170907 23:52:37.944"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions</arg>
</arguments>
<msg timestamp="20170907 23:52:37.945" level="INFO">Executing : Table Must Exist  |  sessions </msg>
<msg timestamp="20170907 23:52:37.945" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sessions' </msg>
<status status="PASS" endtime="20170907 23:52:37.946" starttime="20170907 23:52:37.945"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions_history</arg>
</arguments>
<msg timestamp="20170907 23:52:37.946" level="INFO">Executing : Table Must Exist  |  sessions_history </msg>
<msg timestamp="20170907 23:52:37.946" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sessions_history' </msg>
<status status="PASS" endtime="20170907 23:52:37.947" starttime="20170907 23:52:37.946"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes</arg>
</arguments>
<msg timestamp="20170907 23:52:37.948" level="INFO">Executing : Table Must Exist  |  sharedAppTypes </msg>
<msg timestamp="20170907 23:52:37.948" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedAppTypes' </msg>
<status status="PASS" endtime="20170907 23:52:37.949" starttime="20170907 23:52:37.948"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes_history</arg>
</arguments>
<msg timestamp="20170907 23:52:37.950" level="INFO">Executing : Table Must Exist  |  sharedAppTypes_history </msg>
<msg timestamp="20170907 23:52:37.950" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedAppTypes_history' </msg>
<status status="PASS" endtime="20170907 23:52:37.953" starttime="20170907 23:52:37.950"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes</arg>
</arguments>
<msg timestamp="20170907 23:52:37.954" level="INFO">Executing : Table Must Exist  |  sharedPackageTypes </msg>
<msg timestamp="20170907 23:52:37.954" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedPackageTypes' </msg>
<status status="PASS" endtime="20170907 23:52:37.955" starttime="20170907 23:52:37.953"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes_history</arg>
</arguments>
<msg timestamp="20170907 23:52:37.956" level="INFO">Executing : Table Must Exist  |  sharedPackageTypes_history </msg>
<msg timestamp="20170907 23:52:37.956" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedPackageTypes_history' </msg>
<status status="PASS" endtime="20170907 23:52:37.958" starttime="20170907 23:52:37.956"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>statuses</arg>
</arguments>
<msg timestamp="20170907 23:52:37.958" level="INFO">Executing : Table Must Exist  |  statuses </msg>
<msg timestamp="20170907 23:52:37.958" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='statuses' </msg>
<status status="PASS" endtime="20170907 23:52:37.959" starttime="20170907 23:52:37.958"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks</arg>
</arguments>
<msg timestamp="20170907 23:52:37.960" level="INFO">Executing : Table Must Exist  |  tasks </msg>
<msg timestamp="20170907 23:52:37.960" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='tasks' </msg>
<status status="PASS" endtime="20170907 23:52:37.962" starttime="20170907 23:52:37.960"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks_history</arg>
</arguments>
<msg timestamp="20170907 23:52:37.963" level="INFO">Executing : Table Must Exist  |  tasks_history </msg>
<msg timestamp="20170907 23:52:37.964" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='tasks_history' </msg>
<status status="PASS" endtime="20170907 23:52:37.966" starttime="20170907 23:52:37.962"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces</arg>
</arguments>
<msg timestamp="20170907 23:52:37.967" level="INFO">Executing : Table Must Exist  |  traces </msg>
<msg timestamp="20170907 23:52:37.967" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='traces' </msg>
<status status="PASS" endtime="20170907 23:52:37.970" starttime="20170907 23:52:37.967"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces_history</arg>
</arguments>
<msg timestamp="20170907 23:52:37.970" level="INFO">Executing : Table Must Exist  |  traces_history </msg>
<msg timestamp="20170907 23:52:37.971" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='traces_history' </msg>
<status status="PASS" endtime="20170907 23:52:37.973" starttime="20170907 23:52:37.970"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>userRights</arg>
</arguments>
<msg timestamp="20170907 23:52:37.973" level="INFO">Executing : Table Must Exist  |  userRights </msg>
<msg timestamp="20170907 23:52:37.974" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='userRights' </msg>
<status status="PASS" endtime="20170907 23:52:37.975" starttime="20170907 23:52:37.973"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups</arg>
</arguments>
<msg timestamp="20170907 23:52:37.976" level="INFO">Executing : Table Must Exist  |  usergroups </msg>
<msg timestamp="20170907 23:52:37.976" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='usergroups' </msg>
<status status="PASS" endtime="20170907 23:52:37.977" starttime="20170907 23:52:37.976"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups_history</arg>
</arguments>
<msg timestamp="20170907 23:52:37.978" level="INFO">Executing : Table Must Exist  |  usergroups_history </msg>
<msg timestamp="20170907 23:52:37.978" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='usergroups_history' </msg>
<status status="PASS" endtime="20170907 23:52:37.978" starttime="20170907 23:52:37.977"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users</arg>
</arguments>
<msg timestamp="20170907 23:52:37.979" level="INFO">Executing : Table Must Exist  |  users </msg>
<msg timestamp="20170907 23:52:37.979" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='users' </msg>
<status status="PASS" endtime="20170907 23:52:37.980" starttime="20170907 23:52:37.979"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users_history</arg>
</arguments>
<msg timestamp="20170907 23:52:37.980" level="INFO">Executing : Table Must Exist  |  users_history </msg>
<msg timestamp="20170907 23:52:37.980" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='users_history' </msg>
<status status="PASS" endtime="20170907 23:52:37.981" starttime="20170907 23:52:37.980"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>version</arg>
</arguments>
<msg timestamp="20170907 23:52:37.981" level="INFO">Executing : Table Must Exist  |  version </msg>
<msg timestamp="20170907 23:52:37.981" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='version' </msg>
<status status="PASS" endtime="20170907 23:52:37.982" starttime="20170907 23:52:37.981"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>versions</arg>
</arguments>
<msg timestamp="20170907 23:52:37.983" level="INFO">Executing : Table Must Exist  |  versions </msg>
<msg timestamp="20170907 23:52:37.983" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='versions' </msg>
<status status="PASS" endtime="20170907 23:52:37.984" starttime="20170907 23:52:37.983"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps</arg>
</arguments>
<msg timestamp="20170907 23:52:37.984" level="INFO">Executing : Table Must Exist  |  view_apps </msg>
<msg timestamp="20170907 23:52:37.984" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps' </msg>
<status status="PASS" endtime="20170907 23:52:37.985" starttime="20170907 23:52:37.984"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps_for_offering</arg>
</arguments>
<msg timestamp="20170907 23:52:37.985" level="INFO">Executing : Table Must Exist  |  view_apps_for_offering </msg>
<msg timestamp="20170907 23:52:37.985" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps_for_offering' </msg>
<status status="PASS" endtime="20170907 23:52:37.987" starttime="20170907 23:52:37.985"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps_for_offering_with_file_sizes</arg>
</arguments>
<msg timestamp="20170907 23:52:37.988" level="INFO">Executing : Table Must Exist  |  view_apps_for_offering_with_file_sizes </msg>
<msg timestamp="20170907 23:52:37.988" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps_for_offering_with_file_sizes' </msg>
<status status="PASS" endtime="20170907 23:52:37.989" starttime="20170907 23:52:37.987"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_datas</arg>
</arguments>
<msg timestamp="20170907 23:52:37.989" level="INFO">Executing : Table Must Exist  |  view_datas </msg>
<msg timestamp="20170907 23:52:37.989" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_datas' </msg>
<status status="PASS" endtime="20170907 23:52:37.990" starttime="20170907 23:52:37.989"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_executables</arg>
</arguments>
<msg timestamp="20170907 23:52:37.991" level="INFO">Executing : Table Must Exist  |  view_executables </msg>
<msg timestamp="20170907 23:52:37.991" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_executables' </msg>
<status status="PASS" endtime="20170907 23:52:37.992" starttime="20170907 23:52:37.991"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_groups</arg>
</arguments>
<msg timestamp="20170907 23:52:37.992" level="INFO">Executing : Table Must Exist  |  view_groups </msg>
<msg timestamp="20170907 23:52:37.992" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_groups' </msg>
<status status="PASS" endtime="20170907 23:52:37.993" starttime="20170907 23:52:37.992"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts</arg>
</arguments>
<msg timestamp="20170907 23:52:37.994" level="INFO">Executing : Table Must Exist  |  view_hosts </msg>
<msg timestamp="20170907 23:52:37.994" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts' </msg>
<status status="PASS" endtime="20170907 23:52:37.994" starttime="20170907 23:52:37.993"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_deployable</arg>
</arguments>
<msg timestamp="20170907 23:52:37.995" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_deployable </msg>
<msg timestamp="20170907 23:52:37.995" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_deployable' </msg>
<status status="PASS" endtime="20170907 23:52:37.996" starttime="20170907 23:52:37.995"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_deployable_and_shared</arg>
</arguments>
<msg timestamp="20170907 23:52:37.997" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_deployable_and_shared </msg>
<msg timestamp="20170907 23:52:37.997" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_deployable_and_shared' </msg>
<status status="PASS" endtime="20170907 23:52:37.998" starttime="20170907 23:52:37.996"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_shared</arg>
</arguments>
<msg timestamp="20170907 23:52:37.998" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_shared </msg>
<msg timestamp="20170907 23:52:37.998" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_shared' </msg>
<status status="PASS" endtime="20170907 23:52:38.000" starttime="20170907 23:52:37.998"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_sessions</arg>
</arguments>
<msg timestamp="20170907 23:52:38.000" level="INFO">Executing : Table Must Exist  |  view_sessions </msg>
<msg timestamp="20170907 23:52:38.000" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_sessions' </msg>
<status status="PASS" endtime="20170907 23:52:38.002" starttime="20170907 23:52:38.000"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_tasks</arg>
</arguments>
<msg timestamp="20170907 23:52:38.003" level="INFO">Executing : Table Must Exist  |  view_tasks </msg>
<msg timestamp="20170907 23:52:38.003" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_tasks' </msg>
<status status="PASS" endtime="20170907 23:52:38.006" starttime="20170907 23:52:38.002"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_traces</arg>
</arguments>
<msg timestamp="20170907 23:52:38.008" level="INFO">Executing : Table Must Exist  |  view_traces </msg>
<msg timestamp="20170907 23:52:38.008" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_traces' </msg>
<status status="PASS" endtime="20170907 23:52:38.010" starttime="20170907 23:52:38.006"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_usergroups</arg>
</arguments>
<msg timestamp="20170907 23:52:38.011" level="INFO">Executing : Table Must Exist  |  view_usergroups </msg>
<msg timestamp="20170907 23:52:38.011" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_usergroups' </msg>
<status status="PASS" endtime="20170907 23:52:38.013" starttime="20170907 23:52:38.010"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users</arg>
</arguments>
<msg timestamp="20170907 23:52:38.014" level="INFO">Executing : Table Must Exist  |  view_users </msg>
<msg timestamp="20170907 23:52:38.014" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users' </msg>
<status status="PASS" endtime="20170907 23:52:38.016" starttime="20170907 23:52:38.013"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_apps</arg>
</arguments>
<msg timestamp="20170907 23:52:38.017" level="INFO">Executing : Table Must Exist  |  view_users_apps </msg>
<msg timestamp="20170907 23:52:38.017" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_apps' </msg>
<status status="PASS" endtime="20170907 23:52:38.020" starttime="20170907 23:52:38.017"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_datas</arg>
</arguments>
<msg timestamp="20170907 23:52:38.021" level="INFO">Executing : Table Must Exist  |  view_users_datas </msg>
<msg timestamp="20170907 23:52:38.021" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_datas' </msg>
<status status="PASS" endtime="20170907 23:52:38.023" starttime="20170907 23:52:38.020"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_groups</arg>
</arguments>
<msg timestamp="20170907 23:52:38.024" level="INFO">Executing : Table Must Exist  |  view_users_groups </msg>
<msg timestamp="20170907 23:52:38.025" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_groups' </msg>
<status status="PASS" endtime="20170907 23:52:38.027" starttime="20170907 23:52:38.023"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_hosts</arg>
</arguments>
<msg timestamp="20170907 23:52:38.027" level="INFO">Executing : Table Must Exist  |  view_users_hosts </msg>
<msg timestamp="20170907 23:52:38.027" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_hosts' </msg>
<status status="PASS" endtime="20170907 23:52:38.029" starttime="20170907 23:52:38.027"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_sessions</arg>
</arguments>
<msg timestamp="20170907 23:52:38.029" level="INFO">Executing : Table Must Exist  |  view_users_sessions </msg>
<msg timestamp="20170907 23:52:38.029" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_sessions' </msg>
<status status="PASS" endtime="20170907 23:52:38.030" starttime="20170907 23:52:38.029"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_tasks</arg>
</arguments>
<msg timestamp="20170907 23:52:38.030" level="INFO">Executing : Table Must Exist  |  view_users_tasks </msg>
<msg timestamp="20170907 23:52:38.030" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_tasks' </msg>
<status status="PASS" endtime="20170907 23:52:38.032" starttime="20170907 23:52:38.030"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_traces</arg>
</arguments>
<msg timestamp="20170907 23:52:38.032" level="INFO">Executing : Table Must Exist  |  view_users_traces </msg>
<msg timestamp="20170907 23:52:38.032" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_traces' </msg>
<status status="PASS" endtime="20170907 23:52:38.033" starttime="20170907 23:52:38.032"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_usergroups</arg>
</arguments>
<msg timestamp="20170907 23:52:38.034" level="INFO">Executing : Table Must Exist  |  view_users_usergroups </msg>
<msg timestamp="20170907 23:52:38.034" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_usergroups' </msg>
<status status="PASS" endtime="20170907 23:52:38.035" starttime="20170907 23:52:38.033"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_users</arg>
</arguments>
<msg timestamp="20170907 23:52:38.035" level="INFO">Executing : Table Must Exist  |  view_users_users </msg>
<msg timestamp="20170907 23:52:38.035" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_users' </msg>
<status status="PASS" endtime="20170907 23:52:38.037" starttime="20170907 23:52:38.035"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_works</arg>
</arguments>
<msg timestamp="20170907 23:52:38.037" level="INFO">Executing : Table Must Exist  |  view_users_works </msg>
<msg timestamp="20170907 23:52:38.037" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_works' </msg>
<status status="PASS" endtime="20170907 23:52:38.038" starttime="20170907 23:52:38.037"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works</arg>
</arguments>
<msg timestamp="20170907 23:52:38.039" level="INFO">Executing : Table Must Exist  |  view_works </msg>
<msg timestamp="20170907 23:52:38.039" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works' </msg>
<status status="PASS" endtime="20170907 23:52:38.040" starttime="20170907 23:52:38.039"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works_for_billing</arg>
</arguments>
<msg timestamp="20170907 23:52:38.041" level="INFO">Executing : Table Must Exist  |  view_works_for_billing </msg>
<msg timestamp="20170907 23:52:38.041" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works_for_billing' </msg>
<status status="PASS" endtime="20170907 23:52:38.042" starttime="20170907 23:52:38.040"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works_for_billing_with_file_sizes</arg>
</arguments>
<msg timestamp="20170907 23:52:38.042" level="INFO">Executing : Table Must Exist  |  view_works_for_billing_with_file_sizes </msg>
<msg timestamp="20170907 23:52:38.042" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works_for_billing_with_file_sizes' </msg>
<status status="PASS" endtime="20170907 23:52:38.043" starttime="20170907 23:52:38.042"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works</arg>
</arguments>
<msg timestamp="20170907 23:52:38.043" level="INFO">Executing : Table Must Exist  |  works </msg>
<msg timestamp="20170907 23:52:38.043" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='works' </msg>
<status status="PASS" endtime="20170907 23:52:38.044" starttime="20170907 23:52:38.043"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works_history</arg>
</arguments>
<msg timestamp="20170907 23:52:38.045" level="INFO">Executing : Table Must Exist  |  works_history </msg>
<msg timestamp="20170907 23:52:38.045" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='works_history' </msg>
<status status="PASS" endtime="20170907 23:52:38.046" starttime="20170907 23:52:38.045"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170907 23:52:38.047" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170907 23:52:38.047" starttime="20170907 23:52:38.046"></status>
</kw>
<status status="PASS" endtime="20170907 23:52:38.047" starttime="20170907 23:52:38.046"></status>
</kw>
<status status="PASS" endtime="20170907 23:52:38.047" starttime="20170907 23:52:37.913"></status>
</kw>
<status status="PASS" endtime="20170907 23:52:38.047" starttime="20170907 23:52:37.913"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>TODO ping XWtremWeb server up</arg>
</arguments>
<msg timestamp="20170907 23:52:38.047" level="INFO">TODO ping XWtremWeb server up</msg>
<status status="PASS" endtime="20170907 23:52:38.047" starttime="20170907 23:52:38.047"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>TODO ping XWtremWeb worker up before one test</arg>
</arguments>
<msg timestamp="20170907 23:52:38.048" level="INFO">TODO ping XWtremWeb worker up before one test</msg>
<status status="PASS" endtime="20170907 23:52:38.048" starttime="20170907 23:52:38.048"></status>
</kw>
<kw name="Delete Fonctionnal Xtremweb Tables" library="MySql">
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170907 23:52:38.052" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170907 23:52:38.053" starttime="20170907 23:52:38.050"></status>
</kw>
<status status="PASS" endtime="20170907 23:52:38.054" starttime="20170907 23:52:38.048"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps</arg>
</arguments>
<msg timestamp="20170907 23:52:38.054" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM apps; </msg>
<status status="PASS" endtime="20170907 23:52:38.057" starttime="20170907 23:52:38.054"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps_history</arg>
</arguments>
<msg timestamp="20170907 23:52:38.058" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM apps_history; </msg>
<status status="PASS" endtime="20170907 23:52:38.060" starttime="20170907 23:52:38.058"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas</arg>
</arguments>
<msg timestamp="20170907 23:52:38.060" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM datas; </msg>
<status status="PASS" endtime="20170907 23:52:38.063" starttime="20170907 23:52:38.060"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas_history</arg>
</arguments>
<msg timestamp="20170907 23:52:38.063" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM datas_history; </msg>
<status status="PASS" endtime="20170907 23:52:38.064" starttime="20170907 23:52:38.063"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables</arg>
</arguments>
<msg timestamp="20170907 23:52:38.065" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM executables; </msg>
<status status="PASS" endtime="20170907 23:52:38.066" starttime="20170907 23:52:38.065"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables_history</arg>
</arguments>
<msg timestamp="20170907 23:52:38.067" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM executables_history; </msg>
<status status="PASS" endtime="20170907 23:52:38.068" starttime="20170907 23:52:38.066"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups</arg>
</arguments>
<msg timestamp="20170907 23:52:38.068" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM groups; </msg>
<status status="PASS" endtime="20170907 23:52:38.069" starttime="20170907 23:52:38.068"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups_history</arg>
</arguments>
<msg timestamp="20170907 23:52:38.070" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM groups_history; </msg>
<status status="PASS" endtime="20170907 23:52:38.071" starttime="20170907 23:52:38.070"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts</arg>
</arguments>
<msg timestamp="20170907 23:52:38.072" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM hosts; </msg>
<status status="PASS" endtime="20170907 23:52:38.073" starttime="20170907 23:52:38.071"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts_history</arg>
</arguments>
<msg timestamp="20170907 23:52:38.073" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM hosts_history; </msg>
<status status="PASS" endtime="20170907 23:52:38.075" starttime="20170907 23:52:38.073"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships</arg>
</arguments>
<msg timestamp="20170907 23:52:38.076" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM memberships; </msg>
<status status="PASS" endtime="20170907 23:52:38.077" starttime="20170907 23:52:38.076"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships_history</arg>
</arguments>
<msg timestamp="20170907 23:52:38.078" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM memberships_history; </msg>
<status status="PASS" endtime="20170907 23:52:38.078" starttime="20170907 23:52:38.077"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions</arg>
</arguments>
<msg timestamp="20170907 23:52:38.079" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sessions; </msg>
<status status="PASS" endtime="20170907 23:52:38.079" starttime="20170907 23:52:38.079"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions_history</arg>
</arguments>
<msg timestamp="20170907 23:52:38.080" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sessions_history; </msg>
<status status="PASS" endtime="20170907 23:52:38.080" starttime="20170907 23:52:38.079"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes</arg>
</arguments>
<msg timestamp="20170907 23:52:38.081" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedAppTypes; </msg>
<status status="PASS" endtime="20170907 23:52:38.081" starttime="20170907 23:52:38.080"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes_history</arg>
</arguments>
<msg timestamp="20170907 23:52:38.081" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedAppTypes_history; </msg>
<status status="PASS" endtime="20170907 23:52:38.082" starttime="20170907 23:52:38.081"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes</arg>
</arguments>
<msg timestamp="20170907 23:52:38.082" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedPackageTypes; </msg>
<status status="PASS" endtime="20170907 23:52:38.082" starttime="20170907 23:52:38.082"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes_history</arg>
</arguments>
<msg timestamp="20170907 23:52:38.083" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedPackageTypes_history; </msg>
<status status="PASS" endtime="20170907 23:52:38.083" starttime="20170907 23:52:38.083"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks</arg>
</arguments>
<msg timestamp="20170907 23:52:38.084" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM tasks; </msg>
<status status="PASS" endtime="20170907 23:52:38.084" starttime="20170907 23:52:38.083"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks_history</arg>
</arguments>
<msg timestamp="20170907 23:52:38.084" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM tasks_history; </msg>
<status status="PASS" endtime="20170907 23:52:38.085" starttime="20170907 23:52:38.084"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces</arg>
</arguments>
<msg timestamp="20170907 23:52:38.085" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM traces; </msg>
<status status="PASS" endtime="20170907 23:52:38.085" starttime="20170907 23:52:38.085"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces_history</arg>
</arguments>
<msg timestamp="20170907 23:52:38.085" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM traces_history; </msg>
<status status="PASS" endtime="20170907 23:52:38.086" starttime="20170907 23:52:38.085"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups</arg>
</arguments>
<msg timestamp="20170907 23:52:38.086" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM usergroups; </msg>
<status status="PASS" endtime="20170907 23:52:38.086" starttime="20170907 23:52:38.086"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups_history</arg>
</arguments>
<msg timestamp="20170907 23:52:38.087" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM usergroups_history; </msg>
<status status="PASS" endtime="20170907 23:52:38.088" starttime="20170907 23:52:38.086"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users_history</arg>
</arguments>
<msg timestamp="20170907 23:52:38.089" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM users_history; </msg>
<status status="PASS" endtime="20170907 23:52:38.089" starttime="20170907 23:52:38.088"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works</arg>
</arguments>
<msg timestamp="20170907 23:52:38.090" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM works; </msg>
<status status="PASS" endtime="20170907 23:52:38.091" starttime="20170907 23:52:38.090"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works_history</arg>
</arguments>
<msg timestamp="20170907 23:52:38.091" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM works_history; </msg>
<status status="PASS" endtime="20170907 23:52:38.092" starttime="20170907 23:52:38.091"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170907 23:52:38.092" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170907 23:52:38.093" starttime="20170907 23:52:38.092"></status>
</kw>
<status status="PASS" endtime="20170907 23:52:38.093" starttime="20170907 23:52:38.092"></status>
</kw>
<status status="PASS" endtime="20170907 23:52:38.093" starttime="20170907 23:52:38.048"></status>
</kw>
<kw name="Stop XWtremWeb Server And XWtremWeb Worker" library="XWCommon">
<kw name="Stop XtremWeb Server" library="XWServer">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${SERVER_PROCESS}</arg>
</arguments>
<msg timestamp="20170907 23:52:38.094" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20170907 23:52:38.197" level="INFO">Process completed.</msg>
<status status="PASS" endtime="20170907 23:52:38.197" starttime="20170907 23:52:38.094"></status>
</kw>
<status status="PASS" endtime="20170907 23:52:38.198" starttime="20170907 23:52:38.093"></status>
</kw>
<kw name="Log XtremWeb Server" library="XWCommon">
<kw name="Log XtremWeb Process Log File" library="XWServer">
<kw name="Log File" library="OperatingSystem">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<msg timestamp="20170907 23:52:38.218" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170907 23:52:38.219" level="INFO">Thu Sep  7 23:52:25 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : checking launch url
Thu Sep  7 23:52:25 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] WARNING : no launcher URL defined
Thu Sep  7 23:52:25 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : launching SmartSockets hub
[07/Sep/2017:23:52:28 +0000] [main_1] ERROR : setRole : role redefined ?! (was SERVER)
[07/Sep/2017:23:52:29 +0000] [xtremweb.database.DBConnPoolThread_main_1] INFO : Connection to database jdbc:mysql://localhost/xtremweb is ok, 70 created
[07/Sep/2017:23:52:29 +0000] [xtremweb.dispatcher.DBInterface_main_1] WARN : Can't retrieve any app
[07/Sep/2017:23:52:29 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't create ProxyValidator
[07/Sep/2017:23:52:29 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.io.FileNotFoundException: /tmp/castore (No such file or directory) (/tmp/castore (No such file or directory))
[07/Sep/2017:23:52:29 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't add CA certificates to keystore
[07/Sep/2017:23:52:29 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.lang.NullPointerException (null)
[07/Sep/2017:23:52:29 +0000] [xtremweb.dispatcher.HashTaskSet_TaskSet_14] INFO : TaskSet started (300000)
[07/Sep/2017:23:52:30 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : still waiting task set...
[07/Sep/2017:23:52:30 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : UDP server not started
[07/Sep/2017:23:52:30 +0000] [xtremweb.communications.TCPServer_TCPServerNIO_15] INFO : started, listening on port : 4321
log4j:WARN No appenders could be found for logger (org.eclipse.jetty.util.log).
log4j:WARN Please initialize the log4j system properly.
log4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.
[07/Sep/2017:23:52:30 +0000] [xtremweb.communications.HTTPServer_main_1] INFO : started, listening on port : 9443
[07/Sep/2017:23:52:30 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : FACEBOOK : java.net.MalformedURLException: no protocol: 
[07/Sep/2017:23:52:30 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : GOOGLE : java.net.MalformedURLException: no protocol: 
[07/Sep/2017:23:52:30 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : TWITTER : java.net.MalformedURLException: no protocol: 
[07/Sep/2017:23:52:30 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : YAHOO : java.net.MalformedURLException: no protocol: 
[07/Sep/2017:23:52:30 +0000] [main_1] ERROR : Can't add new entry to keystore
[07/Sep/2017:23:52:30 +0000] [main_1] WARN : javax.net.ssl.SSLHandshakeException: sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target (sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target)
[07/Sep/2017:23:52:30 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : XWHEP Dispatcher(10.6.0-head) started [Thu Sep 07 23:52:30 UTC 2017]
[07/Sep/2017:23:52:30 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : DB vendor  = mysql
[07/Sep/2017:23:52:30 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : mileStone  = 
[07/Sep/2017:23:52:30 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Time out   = 15000
[07/Sep/2017:23:52:30 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Disk opt'd = true
[07/Sep/2017:23:52:30 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Net  opt'd = true
[07/Sep/2017:23:52:30 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : NIO        = true
XWHEP Dispatcher started  Thu Sep 07 23:52:30 UTC 2017
Name             : vagrant-ubuntu-trusty-64
Version          : 10.6.0-head
Identity         : 
XWRole           : SERVER
Started on       : Thu Sep 07 23:52:28 UTC 2017
Scheduler        : xtremweb.dispatcher.MatchingScheduler
SmartSockets hub : 172.28.128.3/172.17.0.1/10.0.2.15-4329#56.3c.5a.bb.cb.7c.00.00.d6.11.02.42.bc.fb.75.e4~vagrant
Server HTTP      : true
Alive            : 300
Alive time out   : 900
Polling time out : 15000
Optimize zip     : true
Optimize network : true
NIO              : true
Comm layer       : xtremweb.communications.TCPClient
Socket time out  : 60000
Socket retries   : 50
Max connections  : 200
TCP port         : 4321
UDP port         : 4323
HTPP  port       : 80
HTPPS port       : 9443
Sun RPC interposition port : 4328
Sandbox path : /usr/bin/lxc
Sandbox launch args : 
Host &lt;host&gt;&lt;uid&gt;7e7f45e9-00c4-4cb0-a7c6-e85c24e36a6f&lt;/uid&gt;&lt;accessrights&gt;0x755&lt;/accessrights&gt;&lt;name&gt;vagrant-ubuntu-trusty-64&lt;/name&gt;&lt;cpuload&gt;50&lt;/cpuload&gt;&lt;natedipaddr&gt;10.0.2.15&lt;/natedipaddr&gt;&lt;ipaddr&gt;10.0.2.15&lt;/ipaddr&gt;&lt;hwaddr&gt;&lt;/hwaddr&gt;&lt;timezone&gt;Etc/UTC&lt;/timezone&gt;&lt;os&gt;LINUX&lt;/os&gt;&lt;osversion&gt;3.13.0-129-generic&lt;/osversion&gt;&lt;javaversion&gt;1.8.0_141&lt;/javaversion&gt;&lt;javadatamodel&gt;64&lt;/javadatamodel&gt;&lt;cputype&gt;AMD64&lt;/cputype&gt;&lt;cpunb&gt;1&lt;/cpunb&gt;&lt;cpumodel&gt;unknown&lt;/cpumodel&gt;&lt;cpuspeed&gt;0&lt;/cpuspeed&gt;&lt;totalmem&gt;0&lt;/totalmem&gt;&lt;totalswap&gt;0&lt;/totalswap&gt;&lt;totaltmp&gt;40284&lt;/totaltmp&gt;&lt;freetmp&gt;37110&lt;/freetmp&gt;&lt;project&gt;&lt;/project&gt;&lt;active&gt;true&lt;/active&gt;&lt;incomingconnections&gt;false&lt;/incomingconnections&gt;&lt;available&gt;false&lt;/available&gt;&lt;pilotjob&gt;false&lt;/pilotjob&gt;&lt;sgid&gt;&lt;/sgid&gt;&lt;timeout&gt;15000&lt;/timeout&gt;&lt;traces&gt;false&lt;/traces&gt;&lt;acceptbin&gt;false&lt;/acceptbin&gt;&lt;version&gt;10.6.0-head&lt;/version&gt;&lt;/host&gt;
[07/Sep/2017:23:52:30 +0000] [xtremweb.communications.HTTPServer_HTTPServer_218] INFO : started, listening on port : 9443
[07/Sep/2017:23:52:37 +0000] [xtremweb.common.StreamIO_TCPHandler_18] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[07/Sep/2017:23:52:37 +0000] [xtremweb.common.StreamIO_TCPHandler_17] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[07/Sep/2017:23:52:38 +0000] [xtremweb.communications.TCPServer_TCPServerNIO_15] WARN : java.net.SocketException: Socket closed (Socket closed)
</msg>
<status status="PASS" endtime="20170907 23:52:38.219" starttime="20170907 23:52:38.217"></status>
</kw>
<status status="PASS" endtime="20170907 23:52:38.219" starttime="20170907 23:52:38.216"></status>
</kw>
<status status="PASS" endtime="20170907 23:52:38.219" starttime="20170907 23:52:38.198"></status>
</kw>
<kw name="Stop XtremWeb Worker" library="XWWorker">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Stop XtremWeb Worker</arg>
</arguments>
<msg timestamp="20170907 23:52:38.220" level="INFO">Stop XtremWeb Worker</msg>
<status status="PASS" endtime="20170907 23:52:38.220" starttime="20170907 23:52:38.220"></status>
</kw>
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${WORKER_PROCESS}</arg>
</arguments>
<msg timestamp="20170907 23:52:38.220" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20170907 23:52:38.221" level="INFO">Process completed.</msg>
<status status="PASS" endtime="20170907 23:52:38.221" starttime="20170907 23:52:38.220"></status>
</kw>
<status status="PASS" endtime="20170907 23:52:38.221" starttime="20170907 23:52:38.219"></status>
</kw>
<status status="PASS" endtime="20170907 23:52:38.221" starttime="20170907 23:52:38.093"></status>
</kw>
<kw name="Start XWtremWeb Server And XWtremWeb Worker" library="XWCommon">
<kw name="Ping XWtremWeb Database" library="XWServer">
<kw name="Xtremweb Tables Must Exist" library="MySql">
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170907 23:52:38.223" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170907 23:52:38.225" starttime="20170907 23:52:38.223"></status>
</kw>
<status status="PASS" endtime="20170907 23:52:38.225" starttime="20170907 23:52:38.223"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>appTypes</arg>
</arguments>
<msg timestamp="20170907 23:52:38.225" level="INFO">Executing : Table Must Exist  |  appTypes </msg>
<msg timestamp="20170907 23:52:38.225" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='appTypes' </msg>
<status status="PASS" endtime="20170907 23:52:38.226" starttime="20170907 23:52:38.225"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps</arg>
</arguments>
<msg timestamp="20170907 23:52:38.227" level="INFO">Executing : Table Must Exist  |  apps </msg>
<msg timestamp="20170907 23:52:38.227" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='apps' </msg>
<status status="PASS" endtime="20170907 23:52:38.228" starttime="20170907 23:52:38.227"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps_history</arg>
</arguments>
<msg timestamp="20170907 23:52:38.229" level="INFO">Executing : Table Must Exist  |  apps_history </msg>
<msg timestamp="20170907 23:52:38.229" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='apps_history' </msg>
<status status="PASS" endtime="20170907 23:52:38.230" starttime="20170907 23:52:38.228"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>cpuTypes</arg>
</arguments>
<msg timestamp="20170907 23:52:38.234" level="INFO">Executing : Table Must Exist  |  cpuTypes </msg>
<msg timestamp="20170907 23:52:38.234" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='cpuTypes' </msg>
<status status="PASS" endtime="20170907 23:52:38.236" starttime="20170907 23:52:38.230"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>dataTypes</arg>
</arguments>
<msg timestamp="20170907 23:52:38.236" level="INFO">Executing : Table Must Exist  |  dataTypes </msg>
<msg timestamp="20170907 23:52:38.237" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='dataTypes' </msg>
<status status="PASS" endtime="20170907 23:52:38.238" starttime="20170907 23:52:38.236"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas</arg>
</arguments>
<msg timestamp="20170907 23:52:38.238" level="INFO">Executing : Table Must Exist  |  datas </msg>
<msg timestamp="20170907 23:52:38.238" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='datas' </msg>
<status status="PASS" endtime="20170907 23:52:38.239" starttime="20170907 23:52:38.238"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas_history</arg>
</arguments>
<msg timestamp="20170907 23:52:38.240" level="INFO">Executing : Table Must Exist  |  datas_history </msg>
<msg timestamp="20170907 23:52:38.240" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='datas_history' </msg>
<status status="PASS" endtime="20170907 23:52:38.241" starttime="20170907 23:52:38.240"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables</arg>
</arguments>
<msg timestamp="20170907 23:52:38.241" level="INFO">Executing : Table Must Exist  |  executables </msg>
<msg timestamp="20170907 23:52:38.241" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='executables' </msg>
<status status="PASS" endtime="20170907 23:52:38.242" starttime="20170907 23:52:38.241"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables_history</arg>
</arguments>
<msg timestamp="20170907 23:52:38.242" level="INFO">Executing : Table Must Exist  |  executables_history </msg>
<msg timestamp="20170907 23:52:38.242" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='executables_history' </msg>
<status status="PASS" endtime="20170907 23:52:38.243" starttime="20170907 23:52:38.242"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups</arg>
</arguments>
<msg timestamp="20170907 23:52:38.244" level="INFO">Executing : Table Must Exist  |  groups </msg>
<msg timestamp="20170907 23:52:38.244" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='groups' </msg>
<status status="PASS" endtime="20170907 23:52:38.245" starttime="20170907 23:52:38.243"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups_history</arg>
</arguments>
<msg timestamp="20170907 23:52:38.245" level="INFO">Executing : Table Must Exist  |  groups_history </msg>
<msg timestamp="20170907 23:52:38.245" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='groups_history' </msg>
<status status="PASS" endtime="20170907 23:52:38.246" starttime="20170907 23:52:38.245"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts</arg>
</arguments>
<msg timestamp="20170907 23:52:38.246" level="INFO">Executing : Table Must Exist  |  hosts </msg>
<msg timestamp="20170907 23:52:38.247" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='hosts' </msg>
<status status="PASS" endtime="20170907 23:52:38.248" starttime="20170907 23:52:38.246"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts_history</arg>
</arguments>
<msg timestamp="20170907 23:52:38.248" level="INFO">Executing : Table Must Exist  |  hosts_history </msg>
<msg timestamp="20170907 23:52:38.248" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='hosts_history' </msg>
<status status="PASS" endtime="20170907 23:52:38.250" starttime="20170907 23:52:38.248"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships</arg>
</arguments>
<msg timestamp="20170907 23:52:38.250" level="INFO">Executing : Table Must Exist  |  memberships </msg>
<msg timestamp="20170907 23:52:38.250" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='memberships' </msg>
<status status="PASS" endtime="20170907 23:52:38.252" starttime="20170907 23:52:38.250"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships_history</arg>
</arguments>
<msg timestamp="20170907 23:52:38.252" level="INFO">Executing : Table Must Exist  |  memberships_history </msg>
<msg timestamp="20170907 23:52:38.252" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='memberships_history' </msg>
<status status="PASS" endtime="20170907 23:52:38.253" starttime="20170907 23:52:38.252"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>oses</arg>
</arguments>
<msg timestamp="20170907 23:52:38.254" level="INFO">Executing : Table Must Exist  |  oses </msg>
<msg timestamp="20170907 23:52:38.254" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='oses' </msg>
<status status="PASS" endtime="20170907 23:52:38.256" starttime="20170907 23:52:38.253"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>packageTypes</arg>
</arguments>
<msg timestamp="20170907 23:52:38.256" level="INFO">Executing : Table Must Exist  |  packageTypes </msg>
<msg timestamp="20170907 23:52:38.256" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='packageTypes' </msg>
<status status="PASS" endtime="20170907 23:52:38.257" starttime="20170907 23:52:38.256"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions</arg>
</arguments>
<msg timestamp="20170907 23:52:38.257" level="INFO">Executing : Table Must Exist  |  sessions </msg>
<msg timestamp="20170907 23:52:38.257" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sessions' </msg>
<status status="PASS" endtime="20170907 23:52:38.258" starttime="20170907 23:52:38.257"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions_history</arg>
</arguments>
<msg timestamp="20170907 23:52:38.259" level="INFO">Executing : Table Must Exist  |  sessions_history </msg>
<msg timestamp="20170907 23:52:38.259" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sessions_history' </msg>
<status status="PASS" endtime="20170907 23:52:38.260" starttime="20170907 23:52:38.258"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes</arg>
</arguments>
<msg timestamp="20170907 23:52:38.260" level="INFO">Executing : Table Must Exist  |  sharedAppTypes </msg>
<msg timestamp="20170907 23:52:38.260" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedAppTypes' </msg>
<status status="PASS" endtime="20170907 23:52:38.261" starttime="20170907 23:52:38.260"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes_history</arg>
</arguments>
<msg timestamp="20170907 23:52:38.261" level="INFO">Executing : Table Must Exist  |  sharedAppTypes_history </msg>
<msg timestamp="20170907 23:52:38.261" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedAppTypes_history' </msg>
<status status="PASS" endtime="20170907 23:52:38.262" starttime="20170907 23:52:38.261"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes</arg>
</arguments>
<msg timestamp="20170907 23:52:38.262" level="INFO">Executing : Table Must Exist  |  sharedPackageTypes </msg>
<msg timestamp="20170907 23:52:38.262" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedPackageTypes' </msg>
<status status="PASS" endtime="20170907 23:52:38.263" starttime="20170907 23:52:38.262"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes_history</arg>
</arguments>
<msg timestamp="20170907 23:52:38.264" level="INFO">Executing : Table Must Exist  |  sharedPackageTypes_history </msg>
<msg timestamp="20170907 23:52:38.264" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedPackageTypes_history' </msg>
<status status="PASS" endtime="20170907 23:52:38.265" starttime="20170907 23:52:38.263"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>statuses</arg>
</arguments>
<msg timestamp="20170907 23:52:38.266" level="INFO">Executing : Table Must Exist  |  statuses </msg>
<msg timestamp="20170907 23:52:38.266" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='statuses' </msg>
<status status="PASS" endtime="20170907 23:52:38.267" starttime="20170907 23:52:38.265"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks</arg>
</arguments>
<msg timestamp="20170907 23:52:38.267" level="INFO">Executing : Table Must Exist  |  tasks </msg>
<msg timestamp="20170907 23:52:38.267" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='tasks' </msg>
<status status="PASS" endtime="20170907 23:52:38.268" starttime="20170907 23:52:38.267"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks_history</arg>
</arguments>
<msg timestamp="20170907 23:52:38.269" level="INFO">Executing : Table Must Exist  |  tasks_history </msg>
<msg timestamp="20170907 23:52:38.269" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='tasks_history' </msg>
<status status="PASS" endtime="20170907 23:52:38.270" starttime="20170907 23:52:38.268"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces</arg>
</arguments>
<msg timestamp="20170907 23:52:38.270" level="INFO">Executing : Table Must Exist  |  traces </msg>
<msg timestamp="20170907 23:52:38.270" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='traces' </msg>
<status status="PASS" endtime="20170907 23:52:38.271" starttime="20170907 23:52:38.270"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces_history</arg>
</arguments>
<msg timestamp="20170907 23:52:38.272" level="INFO">Executing : Table Must Exist  |  traces_history </msg>
<msg timestamp="20170907 23:52:38.272" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='traces_history' </msg>
<status status="PASS" endtime="20170907 23:52:38.273" starttime="20170907 23:52:38.272"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>userRights</arg>
</arguments>
<msg timestamp="20170907 23:52:38.273" level="INFO">Executing : Table Must Exist  |  userRights </msg>
<msg timestamp="20170907 23:52:38.273" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='userRights' </msg>
<status status="PASS" endtime="20170907 23:52:38.274" starttime="20170907 23:52:38.273"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups</arg>
</arguments>
<msg timestamp="20170907 23:52:38.275" level="INFO">Executing : Table Must Exist  |  usergroups </msg>
<msg timestamp="20170907 23:52:38.275" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='usergroups' </msg>
<status status="PASS" endtime="20170907 23:52:38.276" starttime="20170907 23:52:38.274"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups_history</arg>
</arguments>
<msg timestamp="20170907 23:52:38.276" level="INFO">Executing : Table Must Exist  |  usergroups_history </msg>
<msg timestamp="20170907 23:52:38.276" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='usergroups_history' </msg>
<status status="PASS" endtime="20170907 23:52:38.277" starttime="20170907 23:52:38.276"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users</arg>
</arguments>
<msg timestamp="20170907 23:52:38.277" level="INFO">Executing : Table Must Exist  |  users </msg>
<msg timestamp="20170907 23:52:38.277" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='users' </msg>
<status status="PASS" endtime="20170907 23:52:38.278" starttime="20170907 23:52:38.277"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users_history</arg>
</arguments>
<msg timestamp="20170907 23:52:38.279" level="INFO">Executing : Table Must Exist  |  users_history </msg>
<msg timestamp="20170907 23:52:38.279" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='users_history' </msg>
<status status="PASS" endtime="20170907 23:52:38.280" starttime="20170907 23:52:38.279"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>version</arg>
</arguments>
<msg timestamp="20170907 23:52:38.280" level="INFO">Executing : Table Must Exist  |  version </msg>
<msg timestamp="20170907 23:52:38.280" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='version' </msg>
<status status="PASS" endtime="20170907 23:52:38.281" starttime="20170907 23:52:38.280"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>versions</arg>
</arguments>
<msg timestamp="20170907 23:52:38.281" level="INFO">Executing : Table Must Exist  |  versions </msg>
<msg timestamp="20170907 23:52:38.281" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='versions' </msg>
<status status="PASS" endtime="20170907 23:52:38.282" starttime="20170907 23:52:38.281"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps</arg>
</arguments>
<msg timestamp="20170907 23:52:38.283" level="INFO">Executing : Table Must Exist  |  view_apps </msg>
<msg timestamp="20170907 23:52:38.283" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps' </msg>
<status status="PASS" endtime="20170907 23:52:38.284" starttime="20170907 23:52:38.283"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps_for_offering</arg>
</arguments>
<msg timestamp="20170907 23:52:38.284" level="INFO">Executing : Table Must Exist  |  view_apps_for_offering </msg>
<msg timestamp="20170907 23:52:38.284" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps_for_offering' </msg>
<status status="PASS" endtime="20170907 23:52:38.285" starttime="20170907 23:52:38.284"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps_for_offering_with_file_sizes</arg>
</arguments>
<msg timestamp="20170907 23:52:38.286" level="INFO">Executing : Table Must Exist  |  view_apps_for_offering_with_file_sizes </msg>
<msg timestamp="20170907 23:52:38.286" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps_for_offering_with_file_sizes' </msg>
<status status="PASS" endtime="20170907 23:52:38.287" starttime="20170907 23:52:38.286"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_datas</arg>
</arguments>
<msg timestamp="20170907 23:52:38.287" level="INFO">Executing : Table Must Exist  |  view_datas </msg>
<msg timestamp="20170907 23:52:38.287" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_datas' </msg>
<status status="PASS" endtime="20170907 23:52:38.288" starttime="20170907 23:52:38.287"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_executables</arg>
</arguments>
<msg timestamp="20170907 23:52:38.289" level="INFO">Executing : Table Must Exist  |  view_executables </msg>
<msg timestamp="20170907 23:52:38.289" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_executables' </msg>
<status status="PASS" endtime="20170907 23:52:38.290" starttime="20170907 23:52:38.289"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_groups</arg>
</arguments>
<msg timestamp="20170907 23:52:38.290" level="INFO">Executing : Table Must Exist  |  view_groups </msg>
<msg timestamp="20170907 23:52:38.291" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_groups' </msg>
<status status="PASS" endtime="20170907 23:52:38.292" starttime="20170907 23:52:38.290"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts</arg>
</arguments>
<msg timestamp="20170907 23:52:38.293" level="INFO">Executing : Table Must Exist  |  view_hosts </msg>
<msg timestamp="20170907 23:52:38.293" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts' </msg>
<status status="PASS" endtime="20170907 23:52:38.294" starttime="20170907 23:52:38.292"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_deployable</arg>
</arguments>
<msg timestamp="20170907 23:52:38.294" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_deployable </msg>
<msg timestamp="20170907 23:52:38.294" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_deployable' </msg>
<status status="PASS" endtime="20170907 23:52:38.295" starttime="20170907 23:52:38.294"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_deployable_and_shared</arg>
</arguments>
<msg timestamp="20170907 23:52:38.296" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_deployable_and_shared </msg>
<msg timestamp="20170907 23:52:38.296" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_deployable_and_shared' </msg>
<status status="PASS" endtime="20170907 23:52:38.297" starttime="20170907 23:52:38.296"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_shared</arg>
</arguments>
<msg timestamp="20170907 23:52:38.297" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_shared </msg>
<msg timestamp="20170907 23:52:38.297" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_shared' </msg>
<status status="PASS" endtime="20170907 23:52:38.298" starttime="20170907 23:52:38.297"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_sessions</arg>
</arguments>
<msg timestamp="20170907 23:52:38.299" level="INFO">Executing : Table Must Exist  |  view_sessions </msg>
<msg timestamp="20170907 23:52:38.299" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_sessions' </msg>
<status status="PASS" endtime="20170907 23:52:38.301" starttime="20170907 23:52:38.299"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_tasks</arg>
</arguments>
<msg timestamp="20170907 23:52:38.301" level="INFO">Executing : Table Must Exist  |  view_tasks </msg>
<msg timestamp="20170907 23:52:38.301" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_tasks' </msg>
<status status="PASS" endtime="20170907 23:52:38.303" starttime="20170907 23:52:38.301"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_traces</arg>
</arguments>
<msg timestamp="20170907 23:52:38.303" level="INFO">Executing : Table Must Exist  |  view_traces </msg>
<msg timestamp="20170907 23:52:38.303" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_traces' </msg>
<status status="PASS" endtime="20170907 23:52:38.304" starttime="20170907 23:52:38.303"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_usergroups</arg>
</arguments>
<msg timestamp="20170907 23:52:38.305" level="INFO">Executing : Table Must Exist  |  view_usergroups </msg>
<msg timestamp="20170907 23:52:38.305" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_usergroups' </msg>
<status status="PASS" endtime="20170907 23:52:38.306" starttime="20170907 23:52:38.304"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users</arg>
</arguments>
<msg timestamp="20170907 23:52:38.306" level="INFO">Executing : Table Must Exist  |  view_users </msg>
<msg timestamp="20170907 23:52:38.306" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users' </msg>
<status status="PASS" endtime="20170907 23:52:38.307" starttime="20170907 23:52:38.306"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_apps</arg>
</arguments>
<msg timestamp="20170907 23:52:38.308" level="INFO">Executing : Table Must Exist  |  view_users_apps </msg>
<msg timestamp="20170907 23:52:38.308" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_apps' </msg>
<status status="PASS" endtime="20170907 23:52:38.309" starttime="20170907 23:52:38.307"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_datas</arg>
</arguments>
<msg timestamp="20170907 23:52:38.309" level="INFO">Executing : Table Must Exist  |  view_users_datas </msg>
<msg timestamp="20170907 23:52:38.309" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_datas' </msg>
<status status="PASS" endtime="20170907 23:52:38.310" starttime="20170907 23:52:38.309"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_groups</arg>
</arguments>
<msg timestamp="20170907 23:52:38.311" level="INFO">Executing : Table Must Exist  |  view_users_groups </msg>
<msg timestamp="20170907 23:52:38.311" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_groups' </msg>
<status status="PASS" endtime="20170907 23:52:38.312" starttime="20170907 23:52:38.310"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_hosts</arg>
</arguments>
<msg timestamp="20170907 23:52:38.312" level="INFO">Executing : Table Must Exist  |  view_users_hosts </msg>
<msg timestamp="20170907 23:52:38.312" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_hosts' </msg>
<status status="PASS" endtime="20170907 23:52:38.313" starttime="20170907 23:52:38.312"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_sessions</arg>
</arguments>
<msg timestamp="20170907 23:52:38.314" level="INFO">Executing : Table Must Exist  |  view_users_sessions </msg>
<msg timestamp="20170907 23:52:38.314" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_sessions' </msg>
<status status="PASS" endtime="20170907 23:52:38.316" starttime="20170907 23:52:38.313"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_tasks</arg>
</arguments>
<msg timestamp="20170907 23:52:38.316" level="INFO">Executing : Table Must Exist  |  view_users_tasks </msg>
<msg timestamp="20170907 23:52:38.316" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_tasks' </msg>
<status status="PASS" endtime="20170907 23:52:38.317" starttime="20170907 23:52:38.316"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_traces</arg>
</arguments>
<msg timestamp="20170907 23:52:38.318" level="INFO">Executing : Table Must Exist  |  view_users_traces </msg>
<msg timestamp="20170907 23:52:38.318" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_traces' </msg>
<status status="PASS" endtime="20170907 23:52:38.319" starttime="20170907 23:52:38.318"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_usergroups</arg>
</arguments>
<msg timestamp="20170907 23:52:38.320" level="INFO">Executing : Table Must Exist  |  view_users_usergroups </msg>
<msg timestamp="20170907 23:52:38.320" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_usergroups' </msg>
<status status="PASS" endtime="20170907 23:52:38.321" starttime="20170907 23:52:38.319"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_users</arg>
</arguments>
<msg timestamp="20170907 23:52:38.321" level="INFO">Executing : Table Must Exist  |  view_users_users </msg>
<msg timestamp="20170907 23:52:38.321" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_users' </msg>
<status status="PASS" endtime="20170907 23:52:38.322" starttime="20170907 23:52:38.321"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_works</arg>
</arguments>
<msg timestamp="20170907 23:52:38.323" level="INFO">Executing : Table Must Exist  |  view_users_works </msg>
<msg timestamp="20170907 23:52:38.323" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_works' </msg>
<status status="PASS" endtime="20170907 23:52:38.324" starttime="20170907 23:52:38.322"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works</arg>
</arguments>
<msg timestamp="20170907 23:52:38.325" level="INFO">Executing : Table Must Exist  |  view_works </msg>
<msg timestamp="20170907 23:52:38.325" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works' </msg>
<status status="PASS" endtime="20170907 23:52:38.326" starttime="20170907 23:52:38.324"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works_for_billing</arg>
</arguments>
<msg timestamp="20170907 23:52:38.326" level="INFO">Executing : Table Must Exist  |  view_works_for_billing </msg>
<msg timestamp="20170907 23:52:38.326" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works_for_billing' </msg>
<status status="PASS" endtime="20170907 23:52:38.328" starttime="20170907 23:52:38.326"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works_for_billing_with_file_sizes</arg>
</arguments>
<msg timestamp="20170907 23:52:38.328" level="INFO">Executing : Table Must Exist  |  view_works_for_billing_with_file_sizes </msg>
<msg timestamp="20170907 23:52:38.328" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works_for_billing_with_file_sizes' </msg>
<status status="PASS" endtime="20170907 23:52:38.329" starttime="20170907 23:52:38.328"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works</arg>
</arguments>
<msg timestamp="20170907 23:52:38.329" level="INFO">Executing : Table Must Exist  |  works </msg>
<msg timestamp="20170907 23:52:38.329" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='works' </msg>
<status status="PASS" endtime="20170907 23:52:38.330" starttime="20170907 23:52:38.329"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works_history</arg>
</arguments>
<msg timestamp="20170907 23:52:38.331" level="INFO">Executing : Table Must Exist  |  works_history </msg>
<msg timestamp="20170907 23:52:38.331" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='works_history' </msg>
<status status="PASS" endtime="20170907 23:52:38.332" starttime="20170907 23:52:38.330"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170907 23:52:38.332" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170907 23:52:38.333" starttime="20170907 23:52:38.332"></status>
</kw>
<status status="PASS" endtime="20170907 23:52:38.333" starttime="20170907 23:52:38.332"></status>
</kw>
<status status="PASS" endtime="20170907 23:52:38.333" starttime="20170907 23:52:38.222"></status>
</kw>
<status status="PASS" endtime="20170907 23:52:38.333" starttime="20170907 23:52:38.222"></status>
</kw>
<kw name="Start XtremWeb Server" library="XWServer">
<arguments>
<arg>${DIST_XWHEP_PATH}</arg>
</arguments>
<kw name="File Should Exist" library="OperatingSystem">
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xtremweb.server.conf</arg>
</arguments>
<msg timestamp="20170907 23:52:38.334" html="yes" level="INFO">File '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf&lt;/a&gt;' exists.</msg>
<status status="PASS" endtime="20170907 23:52:38.334" starttime="20170907 23:52:38.333"></status>
</kw>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xtremweb.server.conf</arg>
</arguments>
<assign>
<var>${config_content}</var>
</assign>
<msg timestamp="20170907 23:52:38.335" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf&lt;/a&gt;'.</msg>
<msg timestamp="20170907 23:52:38.340" level="INFO">${config_content} = #
# Copyrights     : CNRS
# Author         : Oleg Lodygensky
# Acknowledgment : XtremWeb-HEP is based on XtremWeb 1.8.0 by inria : http://www.xtremweb.net/
# Web            : http://www.xtremweb-hep.o...</msg>
<status status="PASS" endtime="20170907 23:52:38.340" starttime="20170907 23:52:38.335"></status>
</kw>
<kw name="Remove String Using Regexp" library="String">
<doc>Removes ``patterns`` from the given ``string``.</doc>
<arguments>
<arg>${config_content}</arg>
<arg>LAUNCHERURL=${XWCONFIGURE.VALUES.XWUPGRADEURL}</arg>
</arguments>
<assign>
<var>${config_content_filtered}</var>
</assign>
<msg timestamp="20170907 23:52:38.341" level="INFO">${config_content_filtered} = #
# Copyrights     : CNRS
# Author         : Oleg Lodygensky
# Acknowledgment : XtremWeb-HEP is based on XtremWeb 1.8.0 by inria : http://www.xtremweb.net/
# Web            : http://www.xtremweb-hep.o...</msg>
<status status="PASS" endtime="20170907 23:52:38.341" starttime="20170907 23:52:38.340"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${config_content_filtered}</arg>
<arg>\## HTTPSPORT=443</arg>
<arg>HTTPSPORT=${XWCONFIGURE.VALUES.HTTPSPORT}</arg>
</arguments>
<assign>
<var>${config_content_filtered}</var>
</assign>
<msg timestamp="20170907 23:52:38.342" level="INFO">${config_content_filtered} = #
# Copyrights     : CNRS
# Author         : Oleg Lodygensky
# Acknowledgment : XtremWeb-HEP is based on XtremWeb 1.8.0 by inria : http://www.xtremweb.net/
# Web            : http://www.xtremweb-hep.o...</msg>
<status status="PASS" endtime="20170907 23:52:38.342" starttime="20170907 23:52:38.341"></status>
</kw>
<kw name="Create File" library="OperatingSystem">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xtremweb.server.conf</arg>
<arg>content=${config_content_filtered}</arg>
</arguments>
<msg timestamp="20170907 23:52:38.344" html="yes" level="INFO">Created file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170907 23:52:38.344" starttime="20170907 23:52:38.342"></status>
</kw>
<kw name="Remove File" library="OperatingSystem">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<msg timestamp="20170907 23:52:38.345" html="yes" level="INFO">Removed file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170907 23:52:38.346" starttime="20170907 23:52:38.344"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/bin/xtremweb.server console</arg>
<arg>shell=yes</arg>
<arg>stderr=STDOUT</arg>
<arg>stdout=${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<assign>
<var>${created_process}</var>
</assign>
<msg timestamp="20170907 23:52:38.347" level="INFO">Starting process:
/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/xtremweb.server console</msg>
<msg timestamp="20170907 23:52:38.351" level="INFO">${created_process} = 72</msg>
<status status="PASS" endtime="20170907 23:52:38.351" starttime="20170907 23:52:38.346"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SERVER_PROCESS}</arg>
<arg>${created_process}</arg>
</arguments>
<msg timestamp="20170907 23:52:38.353" level="INFO">${SERVER_PROCESS} = 72</msg>
<status status="PASS" endtime="20170907 23:52:38.353" starttime="20170907 23:52:38.351"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2 min</arg>
<arg>5 sec</arg>
<arg>Check XtremWeb Server Start From Log</arg>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<kw name="Check XtremWeb Server Start From Log" library="XWServer">
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<kw name="Log XtremWeb Process Log File" library="XWServer">
<kw name="Log File" library="OperatingSystem">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<msg timestamp="20170907 23:52:38.360" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170907 23:52:38.361" level="INFO"></msg>
<status status="PASS" endtime="20170907 23:52:38.361" starttime="20170907 23:52:38.358"></status>
</kw>
<status status="PASS" endtime="20170907 23:52:38.361" starttime="20170907 23:52:38.358"></status>
</kw>
<kw name="Grep File" library="OperatingSystem">
<doc>Returns the lines of the specified file that match the ``pattern``.</doc>
<arguments>
<arg>${log}</arg>
<arg>listening on port : ${XWCONFIGURE.VALUES.HTTPSPORT}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20170907 23:52:38.363" html="yes" level="INFO">Reading file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170907 23:52:38.363" level="INFO">0 out of 0 lines matched</msg>
<msg timestamp="20170907 23:52:38.364" level="INFO">${ret} = </msg>
<status status="PASS" endtime="20170907 23:52:38.364" starttime="20170907 23:52:38.362"></status>
</kw>
<kw name="Get Line Count" library="String">
<doc>Returns and logs the number of lines in the given string.</doc>
<arguments>
<arg>${ret}</arg>
</arguments>
<assign>
<var>${line_count}</var>
</assign>
<msg timestamp="20170907 23:52:38.365" level="INFO">0 lines</msg>
<msg timestamp="20170907 23:52:38.365" level="INFO">${line_count} = 0</msg>
<status status="PASS" endtime="20170907 23:52:38.365" starttime="20170907 23:52:38.364"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${line_count}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20170907 23:52:38.365" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20170907 23:52:38.366" level="FAIL">0 != 2</msg>
<status status="FAIL" endtime="20170907 23:52:38.367" starttime="20170907 23:52:38.365"></status>
</kw>
<status status="FAIL" endtime="20170907 23:52:38.367" starttime="20170907 23:52:38.356"></status>
</kw>
<kw name="Check XtremWeb Server Start From Log" library="XWServer">
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<kw name="Log XtremWeb Process Log File" library="XWServer">
<kw name="Log File" library="OperatingSystem">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<msg timestamp="20170907 23:52:43.371" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170907 23:52:43.378" level="INFO">Thu Sep  7 23:52:38 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : checking launch url
Thu Sep  7 23:52:38 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] WARNING : no launcher URL defined
Thu Sep  7 23:52:38 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : launching SmartSockets hub
[07/Sep/2017:23:52:41 +0000] [main_1] ERROR : setRole : role redefined ?! (was SERVER)
[07/Sep/2017:23:52:41 +0000] [xtremweb.database.DBConnPoolThread_main_1] INFO : Connection to database jdbc:mysql://localhost/xtremweb is ok, 70 created
[07/Sep/2017:23:52:42 +0000] [xtremweb.dispatcher.DBInterface_main_1] WARN : Can't retrieve any app
[07/Sep/2017:23:52:42 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't create ProxyValidator
[07/Sep/2017:23:52:42 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.io.FileNotFoundException: /tmp/castore (No such file or directory) (/tmp/castore (No such file or directory))
[07/Sep/2017:23:52:42 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't add CA certificates to keystore
[07/Sep/2017:23:52:42 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.lang.NullPointerException (null)
[07/Sep/2017:23:52:42 +0000] [xtremweb.dispatcher.HashTaskSet_TaskSet_14] INFO : TaskSet started (300000)
[07/Sep/2017:23:52:43 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : still waiting task set...
[07/Sep/2017:23:52:43 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : UDP server not started
[07/Sep/2017:23:52:43 +0000] [xtremweb.communications.TCPServer_TCPServerNIO_15] INFO : started, listening on port : 4321
log4j:WARN No appenders could be found for logger (org.eclipse.jetty.util.log).
log4j:WARN Please initialize the log4j system properly.
log4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.
</msg>
<status status="PASS" endtime="20170907 23:52:43.378" starttime="20170907 23:52:43.370"></status>
</kw>
<status status="PASS" endtime="20170907 23:52:43.378" starttime="20170907 23:52:43.369"></status>
</kw>
<kw name="Grep File" library="OperatingSystem">
<doc>Returns the lines of the specified file that match the ``pattern``.</doc>
<arguments>
<arg>${log}</arg>
<arg>listening on port : ${XWCONFIGURE.VALUES.HTTPSPORT}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20170907 23:52:43.379" html="yes" level="INFO">Reading file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170907 23:52:43.380" level="INFO">0 out of 17 lines matched</msg>
<msg timestamp="20170907 23:52:43.380" level="INFO">${ret} = </msg>
<status status="PASS" endtime="20170907 23:52:43.380" starttime="20170907 23:52:43.378"></status>
</kw>
<kw name="Get Line Count" library="String">
<doc>Returns and logs the number of lines in the given string.</doc>
<arguments>
<arg>${ret}</arg>
</arguments>
<assign>
<var>${line_count}</var>
</assign>
<msg timestamp="20170907 23:52:43.380" level="INFO">0 lines</msg>
<msg timestamp="20170907 23:52:43.381" level="INFO">${line_count} = 0</msg>
<status status="PASS" endtime="20170907 23:52:43.381" starttime="20170907 23:52:43.380"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${line_count}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20170907 23:52:43.381" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20170907 23:52:43.381" level="FAIL">0 != 2</msg>
<status status="FAIL" endtime="20170907 23:52:43.381" starttime="20170907 23:52:43.381"></status>
</kw>
<status status="FAIL" endtime="20170907 23:52:43.381" starttime="20170907 23:52:43.368"></status>
</kw>
<kw name="Check XtremWeb Server Start From Log" library="XWServer">
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<kw name="Log XtremWeb Process Log File" library="XWServer">
<kw name="Log File" library="OperatingSystem">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<msg timestamp="20170907 23:52:48.388" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170907 23:52:48.390" level="INFO">Thu Sep  7 23:52:38 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : checking launch url
Thu Sep  7 23:52:38 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] WARNING : no launcher URL defined
Thu Sep  7 23:52:38 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : launching SmartSockets hub
[07/Sep/2017:23:52:41 +0000] [main_1] ERROR : setRole : role redefined ?! (was SERVER)
[07/Sep/2017:23:52:41 +0000] [xtremweb.database.DBConnPoolThread_main_1] INFO : Connection to database jdbc:mysql://localhost/xtremweb is ok, 70 created
[07/Sep/2017:23:52:42 +0000] [xtremweb.dispatcher.DBInterface_main_1] WARN : Can't retrieve any app
[07/Sep/2017:23:52:42 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't create ProxyValidator
[07/Sep/2017:23:52:42 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.io.FileNotFoundException: /tmp/castore (No such file or directory) (/tmp/castore (No such file or directory))
[07/Sep/2017:23:52:42 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't add CA certificates to keystore
[07/Sep/2017:23:52:42 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.lang.NullPointerException (null)
[07/Sep/2017:23:52:42 +0000] [xtremweb.dispatcher.HashTaskSet_TaskSet_14] INFO : TaskSet started (300000)
[07/Sep/2017:23:52:43 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : still waiting task set...
[07/Sep/2017:23:52:43 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : UDP server not started
[07/Sep/2017:23:52:43 +0000] [xtremweb.communications.TCPServer_TCPServerNIO_15] INFO : started, listening on port : 4321
log4j:WARN No appenders could be found for logger (org.eclipse.jetty.util.log).
log4j:WARN Please initialize the log4j system properly.
log4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.
[07/Sep/2017:23:52:43 +0000] [xtremweb.communications.HTTPServer_main_1] INFO : started, listening on port : 9443
[07/Sep/2017:23:52:43 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : FACEBOOK : java.net.MalformedURLException: no protocol: 
[07/Sep/2017:23:52:43 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : GOOGLE : java.net.MalformedURLException: no protocol: 
[07/Sep/2017:23:52:43 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : TWITTER : java.net.MalformedURLException: no protocol: 
[07/Sep/2017:23:52:43 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : YAHOO : java.net.MalformedURLException: no protocol: 
[07/Sep/2017:23:52:43 +0000] [main_1] ERROR : Can't add new entry to keystore
[07/Sep/2017:23:52:43 +0000] [main_1] WARN : javax.net.ssl.SSLHandshakeException: sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target (sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target)
[07/Sep/2017:23:52:43 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : XWHEP Dispatcher(10.6.0-head) started [Thu Sep 07 23:52:43 UTC 2017]
[07/Sep/2017:23:52:43 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : DB vendor  = mysql
[07/Sep/2017:23:52:43 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : mileStone  = 
[07/Sep/2017:23:52:43 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Time out   = 15000
[07/Sep/2017:23:52:43 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Disk opt'd = true
[07/Sep/2017:23:52:43 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Net  opt'd = true
[07/Sep/2017:23:52:43 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : NIO        = true
XWHEP Dispatcher started  Thu Sep 07 23:52:43 UTC 2017
Name             : vagrant-ubuntu-trusty-64
Version          : 10.6.0-head
Identity         : 
XWRole           : SERVER
Started on       : Thu Sep 07 23:52:40 UTC 2017
Scheduler        : xtremweb.dispatcher.MatchingScheduler
SmartSockets hub : 172.28.128.3/172.17.0.1/10.0.2.15-4329#e6.31.5c.bb.cb.7c.00.00.e5.59.02.42.bc.fb.75.e4~vagrant
Server HTTP      : true
Alive            : 300
Alive time out   : 900
Polling time out : 15000
Optimize zip     : true
Optimize network : true
NIO              : true
Comm layer       : xtremweb.communications.TCPClient
Socket time out  : 60000
Socket retries   : 50
Max connections  : 200
TCP port         : 4321
UDP port         : 4323
HTPP  port       : 80
HTPPS port       : 9443
Sun RPC interposition port : 4328
Sandbox path : /usr/bin/lxc
Sandbox launch args : 
Host &lt;host&gt;&lt;uid&gt;9b9b0183-cd48-4db3-8137-0ff0220aebc8&lt;/uid&gt;&lt;accessrights&gt;0x755&lt;/accessrights&gt;&lt;name&gt;vagrant-ubuntu-trusty-64&lt;/name&gt;&lt;cpuload&gt;50&lt;/cpuload&gt;&lt;natedipaddr&gt;10.0.2.15&lt;/natedipaddr&gt;&lt;ipaddr&gt;10.0.2.15&lt;/ipaddr&gt;&lt;hwaddr&gt;&lt;/hwaddr&gt;&lt;timezone&gt;Etc/UTC&lt;/timezone&gt;&lt;os&gt;LINUX&lt;/os&gt;&lt;osversion&gt;3.13.0-129-generic&lt;/osversion&gt;&lt;javaversion&gt;1.8.0_141&lt;/javaversion&gt;&lt;javadatamodel&gt;64&lt;/javadatamodel&gt;&lt;cputype&gt;AMD64&lt;/cputype&gt;&lt;cpunb&gt;1&lt;/cpunb&gt;&lt;cpumodel&gt;unknown&lt;/cpumodel&gt;&lt;cpuspeed&gt;0&lt;/cpuspeed&gt;&lt;totalmem&gt;0&lt;/totalmem&gt;&lt;totalswap&gt;0&lt;/totalswap&gt;&lt;totaltmp&gt;40284&lt;/totaltmp&gt;&lt;freetmp&gt;37110&lt;/freetmp&gt;&lt;project&gt;&lt;/project&gt;&lt;active&gt;true&lt;/active&gt;&lt;incomingconnections&gt;false&lt;/incomingconnections&gt;&lt;available&gt;false&lt;/available&gt;&lt;pilotjob&gt;false&lt;/pilotjob&gt;&lt;sgid&gt;&lt;/sgid&gt;&lt;timeout&gt;15000&lt;/timeout&gt;&lt;traces&gt;false&lt;/traces&gt;&lt;acceptbin&gt;false&lt;/acceptbin&gt;&lt;version&gt;10.6.0-head&lt;/version&gt;&lt;/host&gt;
[07/Sep/2017:23:52:43 +0000] [xtremweb.communications.HTTPServer_HTTPServer_218] INFO : started, listening on port : 9443
</msg>
<status status="PASS" endtime="20170907 23:52:48.391" starttime="20170907 23:52:48.388"></status>
</kw>
<status status="PASS" endtime="20170907 23:52:48.391" starttime="20170907 23:52:48.388"></status>
</kw>
<kw name="Grep File" library="OperatingSystem">
<doc>Returns the lines of the specified file that match the ``pattern``.</doc>
<arguments>
<arg>${log}</arg>
<arg>listening on port : ${XWCONFIGURE.VALUES.HTTPSPORT}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20170907 23:52:48.391" html="yes" level="INFO">Reading file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170907 23:52:48.392" level="INFO">2 out of 59 lines matched</msg>
<msg timestamp="20170907 23:52:48.392" level="INFO">${ret} = [07/Sep/2017:23:52:43 +0000] [xtremweb.communications.HTTPServer_main_1] INFO : started, listening on port : 9443
[07/Sep/2017:23:52:43 +0000] [xtremweb.communications.HTTPServer_HTTPServer_218] INFO ...</msg>
<status status="PASS" endtime="20170907 23:52:48.392" starttime="20170907 23:52:48.391"></status>
</kw>
<kw name="Get Line Count" library="String">
<doc>Returns and logs the number of lines in the given string.</doc>
<arguments>
<arg>${ret}</arg>
</arguments>
<assign>
<var>${line_count}</var>
</assign>
<msg timestamp="20170907 23:52:48.393" level="INFO">2 lines</msg>
<msg timestamp="20170907 23:52:48.393" level="INFO">${line_count} = 2</msg>
<status status="PASS" endtime="20170907 23:52:48.393" starttime="20170907 23:52:48.393"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${line_count}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20170907 23:52:48.393" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170907 23:52:48.393" starttime="20170907 23:52:48.393"></status>
</kw>
<status status="PASS" endtime="20170907 23:52:48.394" starttime="20170907 23:52:48.387"></status>
</kw>
<status status="PASS" endtime="20170907 23:52:48.394" starttime="20170907 23:52:38.354"></status>
</kw>
<kw name="Log XtremWeb Process Log File" library="XWServer">
<kw name="Log File" library="OperatingSystem">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<msg timestamp="20170907 23:52:48.394" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170907 23:52:48.395" level="INFO">Thu Sep  7 23:52:38 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : checking launch url
Thu Sep  7 23:52:38 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] WARNING : no launcher URL defined
Thu Sep  7 23:52:38 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : launching SmartSockets hub
[07/Sep/2017:23:52:41 +0000] [main_1] ERROR : setRole : role redefined ?! (was SERVER)
[07/Sep/2017:23:52:41 +0000] [xtremweb.database.DBConnPoolThread_main_1] INFO : Connection to database jdbc:mysql://localhost/xtremweb is ok, 70 created
[07/Sep/2017:23:52:42 +0000] [xtremweb.dispatcher.DBInterface_main_1] WARN : Can't retrieve any app
[07/Sep/2017:23:52:42 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't create ProxyValidator
[07/Sep/2017:23:52:42 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.io.FileNotFoundException: /tmp/castore (No such file or directory) (/tmp/castore (No such file or directory))
[07/Sep/2017:23:52:42 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't add CA certificates to keystore
[07/Sep/2017:23:52:42 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.lang.NullPointerException (null)
[07/Sep/2017:23:52:42 +0000] [xtremweb.dispatcher.HashTaskSet_TaskSet_14] INFO : TaskSet started (300000)
[07/Sep/2017:23:52:43 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : still waiting task set...
[07/Sep/2017:23:52:43 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : UDP server not started
[07/Sep/2017:23:52:43 +0000] [xtremweb.communications.TCPServer_TCPServerNIO_15] INFO : started, listening on port : 4321
log4j:WARN No appenders could be found for logger (org.eclipse.jetty.util.log).
log4j:WARN Please initialize the log4j system properly.
log4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.
[07/Sep/2017:23:52:43 +0000] [xtremweb.communications.HTTPServer_main_1] INFO : started, listening on port : 9443
[07/Sep/2017:23:52:43 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : FACEBOOK : java.net.MalformedURLException: no protocol: 
[07/Sep/2017:23:52:43 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : GOOGLE : java.net.MalformedURLException: no protocol: 
[07/Sep/2017:23:52:43 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : TWITTER : java.net.MalformedURLException: no protocol: 
[07/Sep/2017:23:52:43 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : YAHOO : java.net.MalformedURLException: no protocol: 
[07/Sep/2017:23:52:43 +0000] [main_1] ERROR : Can't add new entry to keystore
[07/Sep/2017:23:52:43 +0000] [main_1] WARN : javax.net.ssl.SSLHandshakeException: sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target (sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target)
[07/Sep/2017:23:52:43 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : XWHEP Dispatcher(10.6.0-head) started [Thu Sep 07 23:52:43 UTC 2017]
[07/Sep/2017:23:52:43 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : DB vendor  = mysql
[07/Sep/2017:23:52:43 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : mileStone  = 
[07/Sep/2017:23:52:43 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Time out   = 15000
[07/Sep/2017:23:52:43 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Disk opt'd = true
[07/Sep/2017:23:52:43 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Net  opt'd = true
[07/Sep/2017:23:52:43 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : NIO        = true
XWHEP Dispatcher started  Thu Sep 07 23:52:43 UTC 2017
Name             : vagrant-ubuntu-trusty-64
Version          : 10.6.0-head
Identity         : 
XWRole           : SERVER
Started on       : Thu Sep 07 23:52:40 UTC 2017
Scheduler        : xtremweb.dispatcher.MatchingScheduler
SmartSockets hub : 172.28.128.3/172.17.0.1/10.0.2.15-4329#e6.31.5c.bb.cb.7c.00.00.e5.59.02.42.bc.fb.75.e4~vagrant
Server HTTP      : true
Alive            : 300
Alive time out   : 900
Polling time out : 15000
Optimize zip     : true
Optimize network : true
NIO              : true
Comm layer       : xtremweb.communications.TCPClient
Socket time out  : 60000
Socket retries   : 50
Max connections  : 200
TCP port         : 4321
UDP port         : 4323
HTPP  port       : 80
HTPPS port       : 9443
Sun RPC interposition port : 4328
Sandbox path : /usr/bin/lxc
Sandbox launch args : 
Host &lt;host&gt;&lt;uid&gt;9b9b0183-cd48-4db3-8137-0ff0220aebc8&lt;/uid&gt;&lt;accessrights&gt;0x755&lt;/accessrights&gt;&lt;name&gt;vagrant-ubuntu-trusty-64&lt;/name&gt;&lt;cpuload&gt;50&lt;/cpuload&gt;&lt;natedipaddr&gt;10.0.2.15&lt;/natedipaddr&gt;&lt;ipaddr&gt;10.0.2.15&lt;/ipaddr&gt;&lt;hwaddr&gt;&lt;/hwaddr&gt;&lt;timezone&gt;Etc/UTC&lt;/timezone&gt;&lt;os&gt;LINUX&lt;/os&gt;&lt;osversion&gt;3.13.0-129-generic&lt;/osversion&gt;&lt;javaversion&gt;1.8.0_141&lt;/javaversion&gt;&lt;javadatamodel&gt;64&lt;/javadatamodel&gt;&lt;cputype&gt;AMD64&lt;/cputype&gt;&lt;cpunb&gt;1&lt;/cpunb&gt;&lt;cpumodel&gt;unknown&lt;/cpumodel&gt;&lt;cpuspeed&gt;0&lt;/cpuspeed&gt;&lt;totalmem&gt;0&lt;/totalmem&gt;&lt;totalswap&gt;0&lt;/totalswap&gt;&lt;totaltmp&gt;40284&lt;/totaltmp&gt;&lt;freetmp&gt;37110&lt;/freetmp&gt;&lt;project&gt;&lt;/project&gt;&lt;active&gt;true&lt;/active&gt;&lt;incomingconnections&gt;false&lt;/incomingconnections&gt;&lt;available&gt;false&lt;/available&gt;&lt;pilotjob&gt;false&lt;/pilotjob&gt;&lt;sgid&gt;&lt;/sgid&gt;&lt;timeout&gt;15000&lt;/timeout&gt;&lt;traces&gt;false&lt;/traces&gt;&lt;acceptbin&gt;false&lt;/acceptbin&gt;&lt;version&gt;10.6.0-head&lt;/version&gt;&lt;/host&gt;
[07/Sep/2017:23:52:43 +0000] [xtremweb.communications.HTTPServer_HTTPServer_218] INFO : started, listening on port : 9443
</msg>
<status status="PASS" endtime="20170907 23:52:48.395" starttime="20170907 23:52:48.394"></status>
</kw>
<status status="PASS" endtime="20170907 23:52:48.395" starttime="20170907 23:52:48.394"></status>
</kw>
<status status="PASS" endtime="20170907 23:52:48.395" starttime="20170907 23:52:38.333"></status>
</kw>
<kw name="Start XtremWeb Worker" library="XWWorker">
<arguments>
<arg>${DIST_XWHEP_PATH}</arg>
</arguments>
<kw name="File Should Exist" library="OperatingSystem">
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xtremweb.worker.conf</arg>
</arguments>
<msg timestamp="20170907 23:52:48.396" html="yes" level="INFO">File '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf&lt;/a&gt;' exists.</msg>
<status status="PASS" endtime="20170907 23:52:48.396" starttime="20170907 23:52:48.396"></status>
</kw>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xtremweb.worker.conf</arg>
</arguments>
<assign>
<var>${config_content}</var>
</assign>
<msg timestamp="20170907 23:52:48.397" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf&lt;/a&gt;'.</msg>
<msg timestamp="20170907 23:52:48.398" level="INFO">${config_content} = #
# Copyrights     : CNRS
# Author         : Oleg Lodygensky
# Acknowledgment : XtremWeb-HEP is based on XtremWeb 1.8.0 by inria : http://www.xtremweb.net/
# Web            : http://www.xtremweb-hep.o...</msg>
<status status="PASS" endtime="20170907 23:52:48.398" starttime="20170907 23:52:48.397"></status>
</kw>
<kw name="Remove String Using Regexp" library="String">
<doc>Removes ``patterns`` from the given ``string``.</doc>
<arguments>
<arg>${config_content}</arg>
<arg>LAUNCHERURL=${XWCONFIGURE.VALUES.XWUPGRADEURL}</arg>
</arguments>
<assign>
<var>${config_content_filtered}</var>
</assign>
<msg timestamp="20170907 23:52:48.398" level="INFO">${config_content_filtered} = #
# Copyrights     : CNRS
# Author         : Oleg Lodygensky
# Acknowledgment : XtremWeb-HEP is based on XtremWeb 1.8.0 by inria : http://www.xtremweb.net/
# Web            : http://www.xtremweb-hep.o...</msg>
<status status="PASS" endtime="20170907 23:52:48.398" starttime="20170907 23:52:48.398"></status>
</kw>
<kw name="Create File" library="OperatingSystem">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xtremweb.worker.conf</arg>
<arg>content=${config_content_filtered}</arg>
</arguments>
<msg timestamp="20170907 23:52:48.401" html="yes" level="INFO">Created file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170907 23:52:48.401" starttime="20170907 23:52:48.399"></status>
</kw>
<kw name="Remove File" library="OperatingSystem">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.worker.process.log</arg>
</arguments>
<msg timestamp="20170907 23:52:48.403" html="yes" level="INFO">Removed file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.worker.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.worker.process.log&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170907 23:52:48.403" starttime="20170907 23:52:48.402"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/bin/xtremweb.worker console</arg>
<arg>shell=yes</arg>
<arg>stderr=STDOUT</arg>
<arg>stdout=${DIST_XWHEP_PATH}/xwhep.worker.process.log</arg>
</arguments>
<assign>
<var>${created_process}</var>
</assign>
<msg timestamp="20170907 23:52:48.405" level="INFO">Starting process:
/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/xtremweb.worker console</msg>
<msg timestamp="20170907 23:52:48.408" level="INFO">${created_process} = 73</msg>
<status status="PASS" endtime="20170907 23:52:48.408" starttime="20170907 23:52:48.403"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${WORKER_PROCESS}</arg>
<arg>${created_process}</arg>
</arguments>
<msg timestamp="20170907 23:52:48.409" level="INFO">${WORKER_PROCESS} = 73</msg>
<status status="PASS" endtime="20170907 23:52:48.409" starttime="20170907 23:52:48.409"></status>
</kw>
<kw name="Log File" library="OperatingSystem">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.worker.process.log</arg>
</arguments>
<msg timestamp="20170907 23:52:48.410" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.worker.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.worker.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170907 23:52:48.411" level="INFO"></msg>
<status status="PASS" endtime="20170907 23:52:48.412" starttime="20170907 23:52:48.409"></status>
</kw>
<status status="PASS" endtime="20170907 23:52:48.412" starttime="20170907 23:52:48.395"></status>
</kw>
<status status="PASS" endtime="20170907 23:52:48.412" starttime="20170907 23:52:38.222"></status>
</kw>
<status status="PASS" endtime="20170907 23:52:48.412" starttime="20170907 23:52:37.912"></status>
</kw>
<kw name="XWSENDAPPCommand" library="XWClient">
<doc>Usage : SENDAPP appName appType cpuType osName URI | UID : inserts/updates an application; URI or UID points to binary file ; application name must be the first parameter</doc>
<arguments>
<arg>ls</arg>
<arg>DEPLOYABLE</arg>
<arg>LINUX</arg>
<arg>AMD64</arg>
<arg>/bin/ls</arg>
</arguments>
<assign>
<var>${uid}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd ${DIST_XWHEP_PATH}/bin &amp;&amp; ./xwsendapp ${appName} ${appType} ${cpuType} ${osName} ${uri-udi}</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${cmd_result}</var>
</assign>
<msg timestamp="20170907 23:52:48.414" level="INFO">Starting process:
cd /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin &amp;&amp; ./xwsendapp ls DEPLOYABLE LINUX AMD64 /bin/ls</msg>
<msg timestamp="20170907 23:52:48.419" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170907 23:52:50.598" level="INFO">Process completed.</msg>
<msg timestamp="20170907 23:52:50.599" level="INFO">${cmd_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170907 23:52:50.599" starttime="20170907 23:52:48.414"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stderr}</arg>
</arguments>
<msg timestamp="20170907 23:52:50.600" level="INFO"></msg>
<status status="PASS" endtime="20170907 23:52:50.600" starttime="20170907 23:52:50.599"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
</arguments>
<msg timestamp="20170907 23:52:50.601" level="INFO">xw://vagrant-ubuntu-trusty-64/0d1251b2-1bb3-474f-aae9-c29a80a53088</msg>
<status status="PASS" endtime="20170907 23:52:50.602" starttime="20170907 23:52:50.601"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${cmd_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170907 23:52:50.602" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170907 23:52:50.603" starttime="20170907 23:52:50.602"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
<arg>-36</arg>
</arguments>
<assign>
<var>${uid}</var>
</assign>
<msg timestamp="20170907 23:52:50.604" level="INFO">${uid} = 0d1251b2-1bb3-474f-aae9-c29a80a53088</msg>
<status status="PASS" endtime="20170907 23:52:50.604" starttime="20170907 23:52:50.603"></status>
</kw>
<msg timestamp="20170907 23:52:50.604" level="INFO">${uid} = 0d1251b2-1bb3-474f-aae9-c29a80a53088</msg>
<status status="PASS" endtime="20170907 23:52:50.604" starttime="20170907 23:52:48.413"></status>
</kw>
<kw name="Count From Apps Where Uid" library="XWServer">
<arguments>
<arg>${uid}</arg>
<arg>1</arg>
</arguments>
<kw name="Count From Table Where Uid" library="MySql">
<arguments>
<arg>apps</arg>
<arg>${uid}</arg>
<arg>${countExpected}</arg>
</arguments>
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170907 23:52:50.608" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170907 23:52:50.610" starttime="20170907 23:52:50.606"></status>
</kw>
<status status="PASS" endtime="20170907 23:52:50.610" starttime="20170907 23:52:50.606"></status>
</kw>
<kw name="Row Count Is Equal To X" library="DatabaseLibrary">
<doc>Check if the number of rows returned from `selectStatement` is equal to the value submitted. If not, then this</doc>
<arguments>
<arg>SELECT * FROM ${table} WHERE uid = '${uid}'</arg>
<arg>${countExpected}</arg>
</arguments>
<msg timestamp="20170907 23:52:50.611" level="INFO">Executing : Row Count Is Equal To X  |  SELECT * FROM apps WHERE uid = '0d1251b2-1bb3-474f-aae9-c29a80a53088'  |  1 </msg>
<msg timestamp="20170907 23:52:50.611" level="INFO">Executing : Row Count  |  SELECT * FROM apps WHERE uid = '0d1251b2-1bb3-474f-aae9-c29a80a53088' </msg>
<status status="PASS" endtime="20170907 23:52:50.614" starttime="20170907 23:52:50.610"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170907 23:52:50.615" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170907 23:52:50.616" starttime="20170907 23:52:50.615"></status>
</kw>
<status status="PASS" endtime="20170907 23:52:50.616" starttime="20170907 23:52:50.614"></status>
</kw>
<status status="PASS" endtime="20170907 23:52:50.616" starttime="20170907 23:52:50.605"></status>
</kw>
<status status="PASS" endtime="20170907 23:52:50.616" starttime="20170907 23:52:50.605"></status>
</kw>
<kw name="XWSUBMITCommand" library="XWClient">
<doc>Usage : XWSUBMIT appName</doc>
<arguments>
<arg>ls</arg>
</arguments>
<assign>
<var>${workuid}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd ${DIST_XWHEP_PATH}/bin &amp;&amp; ./xwsubmit ${appName}</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${cmd_result}</var>
</assign>
<msg timestamp="20170907 23:52:50.619" level="INFO">Starting process:
cd /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin &amp;&amp; ./xwsubmit ls</msg>
<msg timestamp="20170907 23:52:50.623" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170907 23:52:51.791" level="INFO">Process completed.</msg>
<msg timestamp="20170907 23:52:51.792" level="INFO">${cmd_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170907 23:52:51.792" starttime="20170907 23:52:50.618"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stderr}</arg>
</arguments>
<msg timestamp="20170907 23:52:51.793" level="INFO"></msg>
<status status="PASS" endtime="20170907 23:52:51.793" starttime="20170907 23:52:51.792"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
</arguments>
<msg timestamp="20170907 23:52:51.794" level="INFO">xw://vagrant-ubuntu-trusty-64/017396b5-910a-49af-ba04-ef60604d162e</msg>
<status status="PASS" endtime="20170907 23:52:51.794" starttime="20170907 23:52:51.793"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${cmd_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170907 23:52:51.795" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170907 23:52:51.795" starttime="20170907 23:52:51.794"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
<arg>-36</arg>
</arguments>
<assign>
<var>${uid}</var>
</assign>
<msg timestamp="20170907 23:52:51.796" level="INFO">${uid} = 017396b5-910a-49af-ba04-ef60604d162e</msg>
<status status="PASS" endtime="20170907 23:52:51.796" starttime="20170907 23:52:51.795"></status>
</kw>
<msg timestamp="20170907 23:52:51.797" level="INFO">${workuid} = 017396b5-910a-49af-ba04-ef60604d162e</msg>
<status status="PASS" endtime="20170907 23:52:51.797" starttime="20170907 23:52:50.617"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${workuid}</arg>
</arguments>
<msg timestamp="20170907 23:52:51.798" level="INFO">017396b5-910a-49af-ba04-ef60604d162e</msg>
<status status="PASS" endtime="20170907 23:52:51.798" starttime="20170907 23:52:51.798"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3 min</arg>
<arg>5 sec</arg>
<arg>Check XWSTATUS Completed</arg>
<arg>${workuid}</arg>
</arguments>
<kw name="Check XWSTATUS Completed" library="XWClient">
<arguments>
<arg>${workuid}</arg>
</arguments>
<kw name="XWSTATUSCommand" library="XWClient">
<doc>Usage : XWSTATUS uid</doc>
<arguments>
<arg>${uid}</arg>
</arguments>
<assign>
<var>${status_result}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd ${DIST_XWHEP_PATH}/bin &amp;&amp; ./xwstatus ${uid}</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${cmd_result}</var>
</assign>
<msg timestamp="20170907 23:52:51.801" level="INFO">Starting process:
cd /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin &amp;&amp; ./xwstatus 017396b5-910a-49af-ba04-ef60604d162e</msg>
<msg timestamp="20170907 23:52:51.806" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170907 23:52:53.107" level="INFO">Process completed.</msg>
<msg timestamp="20170907 23:52:53.108" level="INFO">${cmd_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170907 23:52:53.108" starttime="20170907 23:52:51.801"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stderr}</arg>
</arguments>
<msg timestamp="20170907 23:52:53.108" level="INFO"></msg>
<status status="PASS" endtime="20170907 23:52:53.109" starttime="20170907 23:52:53.108"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
</arguments>
<msg timestamp="20170907 23:52:53.109" level="INFO"> UID='017396b5-910a-49af-ba04-ef60604d162e', STATUS='PENDING', COMPLETEDDATE=NULL, LABEL=NULL</msg>
<status status="PASS" endtime="20170907 23:52:53.109" starttime="20170907 23:52:53.109"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${cmd_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170907 23:52:53.110" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170907 23:52:53.110" starttime="20170907 23:52:53.110"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
<arg>STATUS='(?P&lt;status&gt;.*)', COMPLETEDDATE</arg>
<arg>status</arg>
</arguments>
<assign>
<var>@{status_result}</var>
</assign>
<msg timestamp="20170907 23:52:53.111" level="INFO">@{status_result} = [ PENDING ]</msg>
<status status="PASS" endtime="20170907 23:52:53.111" starttime="20170907 23:52:53.110"></status>
</kw>
<msg timestamp="20170907 23:52:53.112" level="INFO">${status_result} = PENDING</msg>
<status status="PASS" endtime="20170907 23:52:53.112" starttime="20170907 23:52:51.800"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${status_result}</arg>
<arg>COMPLETED</arg>
</arguments>
<msg timestamp="20170907 23:52:53.113" level="FAIL">PENDING != COMPLETED</msg>
<status status="FAIL" endtime="20170907 23:52:53.114" starttime="20170907 23:52:53.113"></status>
</kw>
<status status="FAIL" endtime="20170907 23:52:53.114" starttime="20170907 23:52:51.800"></status>
</kw>
<kw name="Check XWSTATUS Completed" library="XWClient">
<arguments>
<arg>${workuid}</arg>
</arguments>
<kw name="XWSTATUSCommand" library="XWClient">
<doc>Usage : XWSTATUS uid</doc>
<arguments>
<arg>${uid}</arg>
</arguments>
<assign>
<var>${status_result}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd ${DIST_XWHEP_PATH}/bin &amp;&amp; ./xwstatus ${uid}</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${cmd_result}</var>
</assign>
<msg timestamp="20170907 23:52:58.118" level="INFO">Starting process:
cd /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin &amp;&amp; ./xwstatus 017396b5-910a-49af-ba04-ef60604d162e</msg>
<msg timestamp="20170907 23:52:58.123" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170907 23:52:59.079" level="INFO">Process completed.</msg>
<msg timestamp="20170907 23:52:59.080" level="INFO">${cmd_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170907 23:52:59.080" starttime="20170907 23:52:58.117"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stderr}</arg>
</arguments>
<msg timestamp="20170907 23:52:59.080" level="INFO"></msg>
<status status="PASS" endtime="20170907 23:52:59.080" starttime="20170907 23:52:59.080"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
</arguments>
<msg timestamp="20170907 23:52:59.081" level="INFO"> UID='017396b5-910a-49af-ba04-ef60604d162e', STATUS='PENDING', COMPLETEDDATE=NULL, LABEL=NULL</msg>
<status status="PASS" endtime="20170907 23:52:59.081" starttime="20170907 23:52:59.081"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${cmd_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170907 23:52:59.081" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170907 23:52:59.082" starttime="20170907 23:52:59.081"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
<arg>STATUS='(?P&lt;status&gt;.*)', COMPLETEDDATE</arg>
<arg>status</arg>
</arguments>
<assign>
<var>@{status_result}</var>
</assign>
<msg timestamp="20170907 23:52:59.082" level="INFO">@{status_result} = [ PENDING ]</msg>
<status status="PASS" endtime="20170907 23:52:59.082" starttime="20170907 23:52:59.082"></status>
</kw>
<msg timestamp="20170907 23:52:59.082" level="INFO">${status_result} = PENDING</msg>
<status status="PASS" endtime="20170907 23:52:59.082" starttime="20170907 23:52:58.116"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${status_result}</arg>
<arg>COMPLETED</arg>
</arguments>
<msg timestamp="20170907 23:52:59.083" level="FAIL">PENDING != COMPLETED</msg>
<status status="FAIL" endtime="20170907 23:52:59.083" starttime="20170907 23:52:59.082"></status>
</kw>
<status status="FAIL" endtime="20170907 23:52:59.083" starttime="20170907 23:52:58.115"></status>
</kw>
<kw name="Check XWSTATUS Completed" library="XWClient">
<arguments>
<arg>${workuid}</arg>
</arguments>
<kw name="XWSTATUSCommand" library="XWClient">
<doc>Usage : XWSTATUS uid</doc>
<arguments>
<arg>${uid}</arg>
</arguments>
<assign>
<var>${status_result}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd ${DIST_XWHEP_PATH}/bin &amp;&amp; ./xwstatus ${uid}</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${cmd_result}</var>
</assign>
<msg timestamp="20170907 23:53:04.086" level="INFO">Starting process:
cd /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin &amp;&amp; ./xwstatus 017396b5-910a-49af-ba04-ef60604d162e</msg>
<msg timestamp="20170907 23:53:04.089" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170907 23:53:04.916" level="INFO">Process completed.</msg>
<msg timestamp="20170907 23:53:04.916" level="INFO">${cmd_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170907 23:53:04.916" starttime="20170907 23:53:04.086"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stderr}</arg>
</arguments>
<msg timestamp="20170907 23:53:04.917" level="INFO"></msg>
<status status="PASS" endtime="20170907 23:53:04.917" starttime="20170907 23:53:04.917"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
</arguments>
<msg timestamp="20170907 23:53:04.918" level="INFO"> UID='017396b5-910a-49af-ba04-ef60604d162e', STATUS='PENDING', COMPLETEDDATE=NULL, LABEL=NULL</msg>
<status status="PASS" endtime="20170907 23:53:04.918" starttime="20170907 23:53:04.917"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${cmd_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170907 23:53:04.919" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170907 23:53:04.919" starttime="20170907 23:53:04.918"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
<arg>STATUS='(?P&lt;status&gt;.*)', COMPLETEDDATE</arg>
<arg>status</arg>
</arguments>
<assign>
<var>@{status_result}</var>
</assign>
<msg timestamp="20170907 23:53:04.920" level="INFO">@{status_result} = [ PENDING ]</msg>
<status status="PASS" endtime="20170907 23:53:04.920" starttime="20170907 23:53:04.919"></status>
</kw>
<msg timestamp="20170907 23:53:04.920" level="INFO">${status_result} = PENDING</msg>
<status status="PASS" endtime="20170907 23:53:04.920" starttime="20170907 23:53:04.085"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${status_result}</arg>
<arg>COMPLETED</arg>
</arguments>
<msg timestamp="20170907 23:53:04.921" level="FAIL">PENDING != COMPLETED</msg>
<status status="FAIL" endtime="20170907 23:53:04.921" starttime="20170907 23:53:04.920"></status>
</kw>
<status status="FAIL" endtime="20170907 23:53:04.921" starttime="20170907 23:53:04.084"></status>
</kw>
<kw name="Check XWSTATUS Completed" library="XWClient">
<arguments>
<arg>${workuid}</arg>
</arguments>
<kw name="XWSTATUSCommand" library="XWClient">
<doc>Usage : XWSTATUS uid</doc>
<arguments>
<arg>${uid}</arg>
</arguments>
<assign>
<var>${status_result}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd ${DIST_XWHEP_PATH}/bin &amp;&amp; ./xwstatus ${uid}</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${cmd_result}</var>
</assign>
<msg timestamp="20170907 23:53:09.932" level="INFO">Starting process:
cd /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin &amp;&amp; ./xwstatus 017396b5-910a-49af-ba04-ef60604d162e</msg>
<msg timestamp="20170907 23:53:09.935" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170907 23:53:11.040" level="INFO">Process completed.</msg>
<msg timestamp="20170907 23:53:11.040" level="INFO">${cmd_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170907 23:53:11.040" starttime="20170907 23:53:09.931"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stderr}</arg>
</arguments>
<msg timestamp="20170907 23:53:11.041" level="INFO"></msg>
<status status="PASS" endtime="20170907 23:53:11.041" starttime="20170907 23:53:11.041"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
</arguments>
<msg timestamp="20170907 23:53:11.042" level="INFO"> UID='017396b5-910a-49af-ba04-ef60604d162e', STATUS='RUNNING', COMPLETEDDATE=NULL, LABEL=NULL</msg>
<status status="PASS" endtime="20170907 23:53:11.042" starttime="20170907 23:53:11.042"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${cmd_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170907 23:53:11.043" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170907 23:53:11.043" starttime="20170907 23:53:11.042"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
<arg>STATUS='(?P&lt;status&gt;.*)', COMPLETEDDATE</arg>
<arg>status</arg>
</arguments>
<assign>
<var>@{status_result}</var>
</assign>
<msg timestamp="20170907 23:53:11.043" level="INFO">@{status_result} = [ RUNNING ]</msg>
<status status="PASS" endtime="20170907 23:53:11.043" starttime="20170907 23:53:11.043"></status>
</kw>
<msg timestamp="20170907 23:53:11.044" level="INFO">${status_result} = RUNNING</msg>
<status status="PASS" endtime="20170907 23:53:11.044" starttime="20170907 23:53:09.930"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${status_result}</arg>
<arg>COMPLETED</arg>
</arguments>
<msg timestamp="20170907 23:53:11.044" level="FAIL">RUNNING != COMPLETED</msg>
<status status="FAIL" endtime="20170907 23:53:11.044" starttime="20170907 23:53:11.044"></status>
</kw>
<status status="FAIL" endtime="20170907 23:53:11.045" starttime="20170907 23:53:09.930"></status>
</kw>
<kw name="Check XWSTATUS Completed" library="XWClient">
<arguments>
<arg>${workuid}</arg>
</arguments>
<kw name="XWSTATUSCommand" library="XWClient">
<doc>Usage : XWSTATUS uid</doc>
<arguments>
<arg>${uid}</arg>
</arguments>
<assign>
<var>${status_result}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd ${DIST_XWHEP_PATH}/bin &amp;&amp; ./xwstatus ${uid}</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${cmd_result}</var>
</assign>
<msg timestamp="20170907 23:53:16.049" level="INFO">Starting process:
cd /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin &amp;&amp; ./xwstatus 017396b5-910a-49af-ba04-ef60604d162e</msg>
<msg timestamp="20170907 23:53:16.063" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170907 23:53:17.083" level="INFO">Process completed.</msg>
<msg timestamp="20170907 23:53:17.083" level="INFO">${cmd_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170907 23:53:17.083" starttime="20170907 23:53:16.047"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stderr}</arg>
</arguments>
<msg timestamp="20170907 23:53:17.084" level="INFO"></msg>
<status status="PASS" endtime="20170907 23:53:17.084" starttime="20170907 23:53:17.084"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
</arguments>
<msg timestamp="20170907 23:53:17.085" level="INFO"> UID='017396b5-910a-49af-ba04-ef60604d162e', STATUS='RUNNING', COMPLETEDDATE=NULL, LABEL=NULL</msg>
<status status="PASS" endtime="20170907 23:53:17.085" starttime="20170907 23:53:17.084"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${cmd_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170907 23:53:17.085" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170907 23:53:17.085" starttime="20170907 23:53:17.085"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
<arg>STATUS='(?P&lt;status&gt;.*)', COMPLETEDDATE</arg>
<arg>status</arg>
</arguments>
<assign>
<var>@{status_result}</var>
</assign>
<msg timestamp="20170907 23:53:17.086" level="INFO">@{status_result} = [ RUNNING ]</msg>
<status status="PASS" endtime="20170907 23:53:17.086" starttime="20170907 23:53:17.085"></status>
</kw>
<msg timestamp="20170907 23:53:17.086" level="INFO">${status_result} = RUNNING</msg>
<status status="PASS" endtime="20170907 23:53:17.086" starttime="20170907 23:53:16.047"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${status_result}</arg>
<arg>COMPLETED</arg>
</arguments>
<msg timestamp="20170907 23:53:17.087" level="FAIL">RUNNING != COMPLETED</msg>
<status status="FAIL" endtime="20170907 23:53:17.087" starttime="20170907 23:53:17.086"></status>
</kw>
<status status="FAIL" endtime="20170907 23:53:17.087" starttime="20170907 23:53:16.046"></status>
</kw>
<kw name="Check XWSTATUS Completed" library="XWClient">
<arguments>
<arg>${workuid}</arg>
</arguments>
<kw name="XWSTATUSCommand" library="XWClient">
<doc>Usage : XWSTATUS uid</doc>
<arguments>
<arg>${uid}</arg>
</arguments>
<assign>
<var>${status_result}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd ${DIST_XWHEP_PATH}/bin &amp;&amp; ./xwstatus ${uid}</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${cmd_result}</var>
</assign>
<msg timestamp="20170907 23:53:22.091" level="INFO">Starting process:
cd /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin &amp;&amp; ./xwstatus 017396b5-910a-49af-ba04-ef60604d162e</msg>
<msg timestamp="20170907 23:53:22.095" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170907 23:53:23.069" level="INFO">Process completed.</msg>
<msg timestamp="20170907 23:53:23.070" level="INFO">${cmd_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170907 23:53:23.070" starttime="20170907 23:53:22.091"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stderr}</arg>
</arguments>
<msg timestamp="20170907 23:53:23.072" level="INFO"></msg>
<status status="PASS" endtime="20170907 23:53:23.072" starttime="20170907 23:53:23.071"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
</arguments>
<msg timestamp="20170907 23:53:23.074" level="INFO"> UID='017396b5-910a-49af-ba04-ef60604d162e', STATUS='RUNNING', COMPLETEDDATE=NULL, LABEL=NULL</msg>
<status status="PASS" endtime="20170907 23:53:23.074" starttime="20170907 23:53:23.073"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${cmd_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170907 23:53:23.074" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170907 23:53:23.075" starttime="20170907 23:53:23.074"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
<arg>STATUS='(?P&lt;status&gt;.*)', COMPLETEDDATE</arg>
<arg>status</arg>
</arguments>
<assign>
<var>@{status_result}</var>
</assign>
<msg timestamp="20170907 23:53:23.076" level="INFO">@{status_result} = [ RUNNING ]</msg>
<status status="PASS" endtime="20170907 23:53:23.076" starttime="20170907 23:53:23.075"></status>
</kw>
<msg timestamp="20170907 23:53:23.077" level="INFO">${status_result} = RUNNING</msg>
<status status="PASS" endtime="20170907 23:53:23.077" starttime="20170907 23:53:22.090"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${status_result}</arg>
<arg>COMPLETED</arg>
</arguments>
<msg timestamp="20170907 23:53:23.078" level="FAIL">RUNNING != COMPLETED</msg>
<status status="FAIL" endtime="20170907 23:53:23.078" starttime="20170907 23:53:23.077"></status>
</kw>
<status status="FAIL" endtime="20170907 23:53:23.079" starttime="20170907 23:53:22.087"></status>
</kw>
<kw name="Check XWSTATUS Completed" library="XWClient">
<arguments>
<arg>${workuid}</arg>
</arguments>
<kw name="XWSTATUSCommand" library="XWClient">
<doc>Usage : XWSTATUS uid</doc>
<arguments>
<arg>${uid}</arg>
</arguments>
<assign>
<var>${status_result}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd ${DIST_XWHEP_PATH}/bin &amp;&amp; ./xwstatus ${uid}</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${cmd_result}</var>
</assign>
<msg timestamp="20170907 23:53:28.082" level="INFO">Starting process:
cd /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin &amp;&amp; ./xwstatus 017396b5-910a-49af-ba04-ef60604d162e</msg>
<msg timestamp="20170907 23:53:28.085" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170907 23:53:29.118" level="INFO">Process completed.</msg>
<msg timestamp="20170907 23:53:29.118" level="INFO">${cmd_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170907 23:53:29.118" starttime="20170907 23:53:28.082"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stderr}</arg>
</arguments>
<msg timestamp="20170907 23:53:29.120" level="INFO"></msg>
<status status="PASS" endtime="20170907 23:53:29.120" starttime="20170907 23:53:29.119"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
</arguments>
<msg timestamp="20170907 23:53:29.121" level="INFO"> UID='017396b5-910a-49af-ba04-ef60604d162e', STATUS='COMPLETED', COMPLETEDDATE='2017-09-07 23:53:24', LABEL=NULL</msg>
<status status="PASS" endtime="20170907 23:53:29.121" starttime="20170907 23:53:29.121"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${cmd_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170907 23:53:29.122" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170907 23:53:29.122" starttime="20170907 23:53:29.121"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
<arg>STATUS='(?P&lt;status&gt;.*)', COMPLETEDDATE</arg>
<arg>status</arg>
</arguments>
<assign>
<var>@{status_result}</var>
</assign>
<msg timestamp="20170907 23:53:29.123" level="INFO">@{status_result} = [ COMPLETED ]</msg>
<status status="PASS" endtime="20170907 23:53:29.123" starttime="20170907 23:53:29.122"></status>
</kw>
<msg timestamp="20170907 23:53:29.124" level="INFO">${status_result} = COMPLETED</msg>
<status status="PASS" endtime="20170907 23:53:29.124" starttime="20170907 23:53:28.081"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${status_result}</arg>
<arg>COMPLETED</arg>
</arguments>
<status status="PASS" endtime="20170907 23:53:29.124" starttime="20170907 23:53:29.124"></status>
</kw>
<status status="PASS" endtime="20170907 23:53:29.124" starttime="20170907 23:53:28.080"></status>
</kw>
<status status="PASS" endtime="20170907 23:53:29.124" starttime="20170907 23:52:51.799"></status>
</kw>
<kw name="XWRESULTSCommand" library="XWClient">
<doc>Usage : XWRESULT uid</doc>
<arguments>
<arg>${workuid}</arg>
</arguments>
<assign>
<var>${results_file}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd ${DIST_XWHEP_PATH}/bin &amp;&amp; ./xwresults ${uid}</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${cmd_result}</var>
</assign>
<msg timestamp="20170907 23:53:29.126" level="INFO">Starting process:
cd /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin &amp;&amp; ./xwresults 017396b5-910a-49af-ba04-ef60604d162e</msg>
<msg timestamp="20170907 23:53:29.130" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170907 23:53:30.222" level="INFO">Process completed.</msg>
<msg timestamp="20170907 23:53:30.222" level="INFO">${cmd_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170907 23:53:30.222" starttime="20170907 23:53:29.126"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stderr}</arg>
</arguments>
<msg timestamp="20170907 23:53:30.223" level="INFO"></msg>
<status status="PASS" endtime="20170907 23:53:30.224" starttime="20170907 23:53:30.223"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
</arguments>
<msg timestamp="20170907 23:53:30.224" level="INFO"> UID='017396b5-910a-49af-ba04-ef60604d162e', STATUS='COMPLETED', COMPLETEDDATE='2017-09-07 23:53:24', LABEL=NULL
[07/Sep/2017:23:53:30 +0000] [xtremweb.client.Client_main_1] INFO : Downloaded to : /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/8eef9834-98e5-4e6b-a00c-48673d37c2eb_stdout.txt.txt</msg>
<status status="PASS" endtime="20170907 23:53:30.224" starttime="20170907 23:53:30.224"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${cmd_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170907 23:53:30.225" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170907 23:53:30.225" starttime="20170907 23:53:30.224"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
<arg>INFO : Downloaded to : (?P&lt;file&gt;.*)</arg>
<arg>file</arg>
</arguments>
<assign>
<var>@{results_file}</var>
</assign>
<msg timestamp="20170907 23:53:30.226" level="INFO">@{results_file} = [ /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/8eef9834-98e5-4e6b-a00c-48673d37c2eb_stdout.txt.txt ]</msg>
<status status="PASS" endtime="20170907 23:53:30.226" starttime="20170907 23:53:30.225"></status>
</kw>
<msg timestamp="20170907 23:53:30.227" level="INFO">${results_file} = /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/8eef9834-98e5-4e6b-a00c-48673d37c2eb_stdout.txt.txt</msg>
<status status="PASS" endtime="20170907 23:53:30.227" starttime="20170907 23:53:29.125"></status>
</kw>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${results_file}</arg>
</arguments>
<assign>
<var>${results_file_content}</var>
</assign>
<msg timestamp="20170907 23:53:30.228" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/8eef9834-98e5-4e6b-a00c-48673d37c2eb_stdout.txt.txt"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/8eef9834-98e5-4e6b-a00c-48673d37c2eb_stdout.txt.txt&lt;/a&gt;'.</msg>
<msg timestamp="20170907 23:53:30.229" level="INFO">${results_file_content} = stderr.txt
stdout.txt
</msg>
<status status="PASS" endtime="20170907 23:53:30.229" starttime="20170907 23:53:30.228"></status>
</kw>
<kw name="Get Line Count" library="String">
<doc>Returns and logs the number of lines in the given string.</doc>
<arguments>
<arg>${results_file_content}</arg>
</arguments>
<assign>
<var>${results_file_content_lines_count}</var>
</assign>
<msg timestamp="20170907 23:53:30.230" level="INFO">2 lines</msg>
<msg timestamp="20170907 23:53:30.230" level="INFO">${results_file_content_lines_count} = 2</msg>
<status status="PASS" endtime="20170907 23:53:30.230" starttime="20170907 23:53:30.230"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${results_file_content_lines_count}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20170907 23:53:30.231" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170907 23:53:30.232" starttime="20170907 23:53:30.231"></status>
</kw>
<kw name="Split To Lines" library="String">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${results_file_content}</arg>
</arguments>
<assign>
<var>@{results_file_lines}</var>
</assign>
<msg timestamp="20170907 23:53:30.232" level="INFO">2 lines returned</msg>
<msg timestamp="20170907 23:53:30.232" level="INFO">@{results_file_lines} = [ stderr.txt | stdout.txt ]</msg>
<status status="PASS" endtime="20170907 23:53:30.232" starttime="20170907 23:53:30.232"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>@{results_file_lines}[0]</arg>
<arg>stderr.txt</arg>
</arguments>
<status status="PASS" endtime="20170907 23:53:30.233" starttime="20170907 23:53:30.233"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>@{results_file_lines}[1]</arg>
<arg>stdout.txt</arg>
</arguments>
<status status="PASS" endtime="20170907 23:53:30.234" starttime="20170907 23:53:30.234"></status>
</kw>
<kw type="teardown" name="End XWtremWeb Command Test" library="XWCommon">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Nothing to do</arg>
</arguments>
<msg timestamp="20170907 23:53:30.235" level="INFO">Nothing to do</msg>
<status status="PASS" endtime="20170907 23:53:30.235" starttime="20170907 23:53:30.235"></status>
</kw>
<status status="PASS" endtime="20170907 23:53:30.235" starttime="20170907 23:53:30.235"></status>
</kw>
<doc>Testing XWSubmit and XWResults cmd</doc>
<tags>
<tag>CommandLine Tests</tag>
</tags>
<status status="PASS" endtime="20170907 23:53:30.236" critical="yes" starttime="20170907 23:52:37.911"></status>
</test>
<test id="s1-s5-t4" name="Test XWSubmit and XWResults Command On LS Binary With Param">
<kw type="setup" name="Begin XWtremWeb Command Test" library="XWCommon">
<kw name="Ping XWtremWeb Database" library="XWServer">
<kw name="Xtremweb Tables Must Exist" library="MySql">
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170907 23:53:30.241" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170907 23:53:30.242" starttime="20170907 23:53:30.241"></status>
</kw>
<status status="PASS" endtime="20170907 23:53:30.243" starttime="20170907 23:53:30.240"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>appTypes</arg>
</arguments>
<msg timestamp="20170907 23:53:30.243" level="INFO">Executing : Table Must Exist  |  appTypes </msg>
<msg timestamp="20170907 23:53:30.243" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='appTypes' </msg>
<status status="PASS" endtime="20170907 23:53:30.244" starttime="20170907 23:53:30.243"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps</arg>
</arguments>
<msg timestamp="20170907 23:53:30.244" level="INFO">Executing : Table Must Exist  |  apps </msg>
<msg timestamp="20170907 23:53:30.244" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='apps' </msg>
<status status="PASS" endtime="20170907 23:53:30.245" starttime="20170907 23:53:30.244"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps_history</arg>
</arguments>
<msg timestamp="20170907 23:53:30.246" level="INFO">Executing : Table Must Exist  |  apps_history </msg>
<msg timestamp="20170907 23:53:30.246" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='apps_history' </msg>
<status status="PASS" endtime="20170907 23:53:30.246" starttime="20170907 23:53:30.245"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>cpuTypes</arg>
</arguments>
<msg timestamp="20170907 23:53:30.247" level="INFO">Executing : Table Must Exist  |  cpuTypes </msg>
<msg timestamp="20170907 23:53:30.247" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='cpuTypes' </msg>
<status status="PASS" endtime="20170907 23:53:30.248" starttime="20170907 23:53:30.247"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>dataTypes</arg>
</arguments>
<msg timestamp="20170907 23:53:30.249" level="INFO">Executing : Table Must Exist  |  dataTypes </msg>
<msg timestamp="20170907 23:53:30.249" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='dataTypes' </msg>
<status status="PASS" endtime="20170907 23:53:30.250" starttime="20170907 23:53:30.248"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas</arg>
</arguments>
<msg timestamp="20170907 23:53:30.250" level="INFO">Executing : Table Must Exist  |  datas </msg>
<msg timestamp="20170907 23:53:30.250" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='datas' </msg>
<status status="PASS" endtime="20170907 23:53:30.251" starttime="20170907 23:53:30.250"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas_history</arg>
</arguments>
<msg timestamp="20170907 23:53:30.251" level="INFO">Executing : Table Must Exist  |  datas_history </msg>
<msg timestamp="20170907 23:53:30.251" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='datas_history' </msg>
<status status="PASS" endtime="20170907 23:53:30.253" starttime="20170907 23:53:30.251"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables</arg>
</arguments>
<msg timestamp="20170907 23:53:30.253" level="INFO">Executing : Table Must Exist  |  executables </msg>
<msg timestamp="20170907 23:53:30.253" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='executables' </msg>
<status status="PASS" endtime="20170907 23:53:30.254" starttime="20170907 23:53:30.253"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables_history</arg>
</arguments>
<msg timestamp="20170907 23:53:30.255" level="INFO">Executing : Table Must Exist  |  executables_history </msg>
<msg timestamp="20170907 23:53:30.255" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='executables_history' </msg>
<status status="PASS" endtime="20170907 23:53:30.256" starttime="20170907 23:53:30.255"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups</arg>
</arguments>
<msg timestamp="20170907 23:53:30.257" level="INFO">Executing : Table Must Exist  |  groups </msg>
<msg timestamp="20170907 23:53:30.257" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='groups' </msg>
<status status="PASS" endtime="20170907 23:53:30.258" starttime="20170907 23:53:30.256"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups_history</arg>
</arguments>
<msg timestamp="20170907 23:53:30.259" level="INFO">Executing : Table Must Exist  |  groups_history </msg>
<msg timestamp="20170907 23:53:30.259" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='groups_history' </msg>
<status status="PASS" endtime="20170907 23:53:30.260" starttime="20170907 23:53:30.259"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts</arg>
</arguments>
<msg timestamp="20170907 23:53:30.261" level="INFO">Executing : Table Must Exist  |  hosts </msg>
<msg timestamp="20170907 23:53:30.261" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='hosts' </msg>
<status status="PASS" endtime="20170907 23:53:30.262" starttime="20170907 23:53:30.260"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts_history</arg>
</arguments>
<msg timestamp="20170907 23:53:30.262" level="INFO">Executing : Table Must Exist  |  hosts_history </msg>
<msg timestamp="20170907 23:53:30.263" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='hosts_history' </msg>
<status status="PASS" endtime="20170907 23:53:30.264" starttime="20170907 23:53:30.262"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships</arg>
</arguments>
<msg timestamp="20170907 23:53:30.264" level="INFO">Executing : Table Must Exist  |  memberships </msg>
<msg timestamp="20170907 23:53:30.264" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='memberships' </msg>
<status status="PASS" endtime="20170907 23:53:30.266" starttime="20170907 23:53:30.264"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships_history</arg>
</arguments>
<msg timestamp="20170907 23:53:30.266" level="INFO">Executing : Table Must Exist  |  memberships_history </msg>
<msg timestamp="20170907 23:53:30.266" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='memberships_history' </msg>
<status status="PASS" endtime="20170907 23:53:30.267" starttime="20170907 23:53:30.266"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>oses</arg>
</arguments>
<msg timestamp="20170907 23:53:30.268" level="INFO">Executing : Table Must Exist  |  oses </msg>
<msg timestamp="20170907 23:53:30.268" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='oses' </msg>
<status status="PASS" endtime="20170907 23:53:30.269" starttime="20170907 23:53:30.268"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>packageTypes</arg>
</arguments>
<msg timestamp="20170907 23:53:30.270" level="INFO">Executing : Table Must Exist  |  packageTypes </msg>
<msg timestamp="20170907 23:53:30.270" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='packageTypes' </msg>
<status status="PASS" endtime="20170907 23:53:30.271" starttime="20170907 23:53:30.269"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions</arg>
</arguments>
<msg timestamp="20170907 23:53:30.272" level="INFO">Executing : Table Must Exist  |  sessions </msg>
<msg timestamp="20170907 23:53:30.272" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sessions' </msg>
<status status="PASS" endtime="20170907 23:53:30.273" starttime="20170907 23:53:30.272"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions_history</arg>
</arguments>
<msg timestamp="20170907 23:53:30.274" level="INFO">Executing : Table Must Exist  |  sessions_history </msg>
<msg timestamp="20170907 23:53:30.274" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sessions_history' </msg>
<status status="PASS" endtime="20170907 23:53:30.276" starttime="20170907 23:53:30.273"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes</arg>
</arguments>
<msg timestamp="20170907 23:53:30.277" level="INFO">Executing : Table Must Exist  |  sharedAppTypes </msg>
<msg timestamp="20170907 23:53:30.277" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedAppTypes' </msg>
<status status="PASS" endtime="20170907 23:53:30.278" starttime="20170907 23:53:30.276"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes_history</arg>
</arguments>
<msg timestamp="20170907 23:53:30.278" level="INFO">Executing : Table Must Exist  |  sharedAppTypes_history </msg>
<msg timestamp="20170907 23:53:30.278" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedAppTypes_history' </msg>
<status status="PASS" endtime="20170907 23:53:30.280" starttime="20170907 23:53:30.278"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes</arg>
</arguments>
<msg timestamp="20170907 23:53:30.280" level="INFO">Executing : Table Must Exist  |  sharedPackageTypes </msg>
<msg timestamp="20170907 23:53:30.280" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedPackageTypes' </msg>
<status status="PASS" endtime="20170907 23:53:30.281" starttime="20170907 23:53:30.280"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes_history</arg>
</arguments>
<msg timestamp="20170907 23:53:30.282" level="INFO">Executing : Table Must Exist  |  sharedPackageTypes_history </msg>
<msg timestamp="20170907 23:53:30.282" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedPackageTypes_history' </msg>
<status status="PASS" endtime="20170907 23:53:30.282" starttime="20170907 23:53:30.281"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>statuses</arg>
</arguments>
<msg timestamp="20170907 23:53:30.283" level="INFO">Executing : Table Must Exist  |  statuses </msg>
<msg timestamp="20170907 23:53:30.283" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='statuses' </msg>
<status status="PASS" endtime="20170907 23:53:30.284" starttime="20170907 23:53:30.283"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks</arg>
</arguments>
<msg timestamp="20170907 23:53:30.284" level="INFO">Executing : Table Must Exist  |  tasks </msg>
<msg timestamp="20170907 23:53:30.284" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='tasks' </msg>
<status status="PASS" endtime="20170907 23:53:30.285" starttime="20170907 23:53:30.284"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks_history</arg>
</arguments>
<msg timestamp="20170907 23:53:30.285" level="INFO">Executing : Table Must Exist  |  tasks_history </msg>
<msg timestamp="20170907 23:53:30.285" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='tasks_history' </msg>
<status status="PASS" endtime="20170907 23:53:30.286" starttime="20170907 23:53:30.285"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces</arg>
</arguments>
<msg timestamp="20170907 23:53:30.287" level="INFO">Executing : Table Must Exist  |  traces </msg>
<msg timestamp="20170907 23:53:30.287" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='traces' </msg>
<status status="PASS" endtime="20170907 23:53:30.288" starttime="20170907 23:53:30.287"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces_history</arg>
</arguments>
<msg timestamp="20170907 23:53:30.288" level="INFO">Executing : Table Must Exist  |  traces_history </msg>
<msg timestamp="20170907 23:53:30.288" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='traces_history' </msg>
<status status="PASS" endtime="20170907 23:53:30.289" starttime="20170907 23:53:30.288"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>userRights</arg>
</arguments>
<msg timestamp="20170907 23:53:30.290" level="INFO">Executing : Table Must Exist  |  userRights </msg>
<msg timestamp="20170907 23:53:30.290" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='userRights' </msg>
<status status="PASS" endtime="20170907 23:53:30.291" starttime="20170907 23:53:30.289"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups</arg>
</arguments>
<msg timestamp="20170907 23:53:30.292" level="INFO">Executing : Table Must Exist  |  usergroups </msg>
<msg timestamp="20170907 23:53:30.292" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='usergroups' </msg>
<status status="PASS" endtime="20170907 23:53:30.293" starttime="20170907 23:53:30.291"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups_history</arg>
</arguments>
<msg timestamp="20170907 23:53:30.293" level="INFO">Executing : Table Must Exist  |  usergroups_history </msg>
<msg timestamp="20170907 23:53:30.293" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='usergroups_history' </msg>
<status status="PASS" endtime="20170907 23:53:30.294" starttime="20170907 23:53:30.293"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users</arg>
</arguments>
<msg timestamp="20170907 23:53:30.294" level="INFO">Executing : Table Must Exist  |  users </msg>
<msg timestamp="20170907 23:53:30.294" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='users' </msg>
<status status="PASS" endtime="20170907 23:53:30.295" starttime="20170907 23:53:30.294"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users_history</arg>
</arguments>
<msg timestamp="20170907 23:53:30.296" level="INFO">Executing : Table Must Exist  |  users_history </msg>
<msg timestamp="20170907 23:53:30.296" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='users_history' </msg>
<status status="PASS" endtime="20170907 23:53:30.297" starttime="20170907 23:53:30.295"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>version</arg>
</arguments>
<msg timestamp="20170907 23:53:30.297" level="INFO">Executing : Table Must Exist  |  version </msg>
<msg timestamp="20170907 23:53:30.297" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='version' </msg>
<status status="PASS" endtime="20170907 23:53:30.298" starttime="20170907 23:53:30.297"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>versions</arg>
</arguments>
<msg timestamp="20170907 23:53:30.298" level="INFO">Executing : Table Must Exist  |  versions </msg>
<msg timestamp="20170907 23:53:30.298" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='versions' </msg>
<status status="PASS" endtime="20170907 23:53:30.299" starttime="20170907 23:53:30.298"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps</arg>
</arguments>
<msg timestamp="20170907 23:53:30.299" level="INFO">Executing : Table Must Exist  |  view_apps </msg>
<msg timestamp="20170907 23:53:30.300" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps' </msg>
<status status="PASS" endtime="20170907 23:53:30.301" starttime="20170907 23:53:30.299"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps_for_offering</arg>
</arguments>
<msg timestamp="20170907 23:53:30.301" level="INFO">Executing : Table Must Exist  |  view_apps_for_offering </msg>
<msg timestamp="20170907 23:53:30.301" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps_for_offering' </msg>
<status status="PASS" endtime="20170907 23:53:30.302" starttime="20170907 23:53:30.301"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps_for_offering_with_file_sizes</arg>
</arguments>
<msg timestamp="20170907 23:53:30.302" level="INFO">Executing : Table Must Exist  |  view_apps_for_offering_with_file_sizes </msg>
<msg timestamp="20170907 23:53:30.303" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps_for_offering_with_file_sizes' </msg>
<status status="PASS" endtime="20170907 23:53:30.304" starttime="20170907 23:53:30.302"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_datas</arg>
</arguments>
<msg timestamp="20170907 23:53:30.305" level="INFO">Executing : Table Must Exist  |  view_datas </msg>
<msg timestamp="20170907 23:53:30.305" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_datas' </msg>
<status status="PASS" endtime="20170907 23:53:30.306" starttime="20170907 23:53:30.305"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_executables</arg>
</arguments>
<msg timestamp="20170907 23:53:30.308" level="INFO">Executing : Table Must Exist  |  view_executables </msg>
<msg timestamp="20170907 23:53:30.308" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_executables' </msg>
<status status="PASS" endtime="20170907 23:53:30.310" starttime="20170907 23:53:30.307"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_groups</arg>
</arguments>
<msg timestamp="20170907 23:53:30.311" level="INFO">Executing : Table Must Exist  |  view_groups </msg>
<msg timestamp="20170907 23:53:30.312" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_groups' </msg>
<status status="PASS" endtime="20170907 23:53:30.314" starttime="20170907 23:53:30.311"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts</arg>
</arguments>
<msg timestamp="20170907 23:53:30.315" level="INFO">Executing : Table Must Exist  |  view_hosts </msg>
<msg timestamp="20170907 23:53:30.315" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts' </msg>
<status status="PASS" endtime="20170907 23:53:30.317" starttime="20170907 23:53:30.315"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_deployable</arg>
</arguments>
<msg timestamp="20170907 23:53:30.318" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_deployable </msg>
<msg timestamp="20170907 23:53:30.318" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_deployable' </msg>
<status status="PASS" endtime="20170907 23:53:30.319" starttime="20170907 23:53:30.317"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_deployable_and_shared</arg>
</arguments>
<msg timestamp="20170907 23:53:30.319" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_deployable_and_shared </msg>
<msg timestamp="20170907 23:53:30.320" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_deployable_and_shared' </msg>
<status status="PASS" endtime="20170907 23:53:30.321" starttime="20170907 23:53:30.319"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_shared</arg>
</arguments>
<msg timestamp="20170907 23:53:30.321" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_shared </msg>
<msg timestamp="20170907 23:53:30.322" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_shared' </msg>
<status status="PASS" endtime="20170907 23:53:30.323" starttime="20170907 23:53:30.321"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_sessions</arg>
</arguments>
<msg timestamp="20170907 23:53:30.324" level="INFO">Executing : Table Must Exist  |  view_sessions </msg>
<msg timestamp="20170907 23:53:30.324" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_sessions' </msg>
<status status="PASS" endtime="20170907 23:53:30.325" starttime="20170907 23:53:30.323"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_tasks</arg>
</arguments>
<msg timestamp="20170907 23:53:30.325" level="INFO">Executing : Table Must Exist  |  view_tasks </msg>
<msg timestamp="20170907 23:53:30.326" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_tasks' </msg>
<status status="PASS" endtime="20170907 23:53:30.327" starttime="20170907 23:53:30.325"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_traces</arg>
</arguments>
<msg timestamp="20170907 23:53:30.327" level="INFO">Executing : Table Must Exist  |  view_traces </msg>
<msg timestamp="20170907 23:53:30.328" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_traces' </msg>
<status status="PASS" endtime="20170907 23:53:30.329" starttime="20170907 23:53:30.327"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_usergroups</arg>
</arguments>
<msg timestamp="20170907 23:53:30.330" level="INFO">Executing : Table Must Exist  |  view_usergroups </msg>
<msg timestamp="20170907 23:53:30.330" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_usergroups' </msg>
<status status="PASS" endtime="20170907 23:53:30.331" starttime="20170907 23:53:30.330"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users</arg>
</arguments>
<msg timestamp="20170907 23:53:30.332" level="INFO">Executing : Table Must Exist  |  view_users </msg>
<msg timestamp="20170907 23:53:30.332" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users' </msg>
<status status="PASS" endtime="20170907 23:53:30.333" starttime="20170907 23:53:30.331"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_apps</arg>
</arguments>
<msg timestamp="20170907 23:53:30.333" level="INFO">Executing : Table Must Exist  |  view_users_apps </msg>
<msg timestamp="20170907 23:53:30.334" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_apps' </msg>
<status status="PASS" endtime="20170907 23:53:30.335" starttime="20170907 23:53:30.333"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_datas</arg>
</arguments>
<msg timestamp="20170907 23:53:30.336" level="INFO">Executing : Table Must Exist  |  view_users_datas </msg>
<msg timestamp="20170907 23:53:30.336" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_datas' </msg>
<status status="PASS" endtime="20170907 23:53:30.337" starttime="20170907 23:53:30.336"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_groups</arg>
</arguments>
<msg timestamp="20170907 23:53:30.338" level="INFO">Executing : Table Must Exist  |  view_users_groups </msg>
<msg timestamp="20170907 23:53:30.338" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_groups' </msg>
<status status="PASS" endtime="20170907 23:53:30.339" starttime="20170907 23:53:30.337"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_hosts</arg>
</arguments>
<msg timestamp="20170907 23:53:30.339" level="INFO">Executing : Table Must Exist  |  view_users_hosts </msg>
<msg timestamp="20170907 23:53:30.339" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_hosts' </msg>
<status status="PASS" endtime="20170907 23:53:30.340" starttime="20170907 23:53:30.339"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_sessions</arg>
</arguments>
<msg timestamp="20170907 23:53:30.341" level="INFO">Executing : Table Must Exist  |  view_users_sessions </msg>
<msg timestamp="20170907 23:53:30.341" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_sessions' </msg>
<status status="PASS" endtime="20170907 23:53:30.342" starttime="20170907 23:53:30.341"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_tasks</arg>
</arguments>
<msg timestamp="20170907 23:53:30.342" level="INFO">Executing : Table Must Exist  |  view_users_tasks </msg>
<msg timestamp="20170907 23:53:30.342" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_tasks' </msg>
<status status="PASS" endtime="20170907 23:53:30.343" starttime="20170907 23:53:30.342"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_traces</arg>
</arguments>
<msg timestamp="20170907 23:53:30.344" level="INFO">Executing : Table Must Exist  |  view_users_traces </msg>
<msg timestamp="20170907 23:53:30.344" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_traces' </msg>
<status status="PASS" endtime="20170907 23:53:30.345" starttime="20170907 23:53:30.344"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_usergroups</arg>
</arguments>
<msg timestamp="20170907 23:53:30.345" level="INFO">Executing : Table Must Exist  |  view_users_usergroups </msg>
<msg timestamp="20170907 23:53:30.345" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_usergroups' </msg>
<status status="PASS" endtime="20170907 23:53:30.346" starttime="20170907 23:53:30.345"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_users</arg>
</arguments>
<msg timestamp="20170907 23:53:30.347" level="INFO">Executing : Table Must Exist  |  view_users_users </msg>
<msg timestamp="20170907 23:53:30.347" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_users' </msg>
<status status="PASS" endtime="20170907 23:53:30.348" starttime="20170907 23:53:30.346"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_works</arg>
</arguments>
<msg timestamp="20170907 23:53:30.349" level="INFO">Executing : Table Must Exist  |  view_users_works </msg>
<msg timestamp="20170907 23:53:30.349" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_works' </msg>
<status status="PASS" endtime="20170907 23:53:30.351" starttime="20170907 23:53:30.348"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works</arg>
</arguments>
<msg timestamp="20170907 23:53:30.351" level="INFO">Executing : Table Must Exist  |  view_works </msg>
<msg timestamp="20170907 23:53:30.352" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works' </msg>
<status status="PASS" endtime="20170907 23:53:30.354" starttime="20170907 23:53:30.351"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works_for_billing</arg>
</arguments>
<msg timestamp="20170907 23:53:30.355" level="INFO">Executing : Table Must Exist  |  view_works_for_billing </msg>
<msg timestamp="20170907 23:53:30.355" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works_for_billing' </msg>
<status status="PASS" endtime="20170907 23:53:30.358" starttime="20170907 23:53:30.354"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works_for_billing_with_file_sizes</arg>
</arguments>
<msg timestamp="20170907 23:53:30.359" level="INFO">Executing : Table Must Exist  |  view_works_for_billing_with_file_sizes </msg>
<msg timestamp="20170907 23:53:30.359" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works_for_billing_with_file_sizes' </msg>
<status status="PASS" endtime="20170907 23:53:30.361" starttime="20170907 23:53:30.358"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works</arg>
</arguments>
<msg timestamp="20170907 23:53:30.362" level="INFO">Executing : Table Must Exist  |  works </msg>
<msg timestamp="20170907 23:53:30.363" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='works' </msg>
<status status="PASS" endtime="20170907 23:53:30.365" starttime="20170907 23:53:30.362"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works_history</arg>
</arguments>
<msg timestamp="20170907 23:53:30.366" level="INFO">Executing : Table Must Exist  |  works_history </msg>
<msg timestamp="20170907 23:53:30.366" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='works_history' </msg>
<status status="PASS" endtime="20170907 23:53:30.369" starttime="20170907 23:53:30.365"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170907 23:53:30.371" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170907 23:53:30.372" starttime="20170907 23:53:30.371"></status>
</kw>
<status status="PASS" endtime="20170907 23:53:30.372" starttime="20170907 23:53:30.370"></status>
</kw>
<status status="PASS" endtime="20170907 23:53:30.372" starttime="20170907 23:53:30.240"></status>
</kw>
<status status="PASS" endtime="20170907 23:53:30.372" starttime="20170907 23:53:30.239"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>TODO ping XWtremWeb server up</arg>
</arguments>
<msg timestamp="20170907 23:53:30.373" level="INFO">TODO ping XWtremWeb server up</msg>
<status status="PASS" endtime="20170907 23:53:30.373" starttime="20170907 23:53:30.373"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>TODO ping XWtremWeb worker up before one test</arg>
</arguments>
<msg timestamp="20170907 23:53:30.373" level="INFO">TODO ping XWtremWeb worker up before one test</msg>
<status status="PASS" endtime="20170907 23:53:30.373" starttime="20170907 23:53:30.373"></status>
</kw>
<kw name="Delete Fonctionnal Xtremweb Tables" library="MySql">
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170907 23:53:30.376" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170907 23:53:30.378" starttime="20170907 23:53:30.375"></status>
</kw>
<status status="PASS" endtime="20170907 23:53:30.378" starttime="20170907 23:53:30.374"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps</arg>
</arguments>
<msg timestamp="20170907 23:53:30.379" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM apps; </msg>
<status status="PASS" endtime="20170907 23:53:30.381" starttime="20170907 23:53:30.379"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps_history</arg>
</arguments>
<msg timestamp="20170907 23:53:30.382" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM apps_history; </msg>
<status status="PASS" endtime="20170907 23:53:30.383" starttime="20170907 23:53:30.382"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas</arg>
</arguments>
<msg timestamp="20170907 23:53:30.383" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM datas; </msg>
<status status="PASS" endtime="20170907 23:53:30.384" starttime="20170907 23:53:30.383"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas_history</arg>
</arguments>
<msg timestamp="20170907 23:53:30.385" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM datas_history; </msg>
<status status="PASS" endtime="20170907 23:53:30.385" starttime="20170907 23:53:30.384"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables</arg>
</arguments>
<msg timestamp="20170907 23:53:30.386" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM executables; </msg>
<status status="PASS" endtime="20170907 23:53:30.386" starttime="20170907 23:53:30.385"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables_history</arg>
</arguments>
<msg timestamp="20170907 23:53:30.387" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM executables_history; </msg>
<status status="PASS" endtime="20170907 23:53:30.388" starttime="20170907 23:53:30.387"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups</arg>
</arguments>
<msg timestamp="20170907 23:53:30.388" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM groups; </msg>
<status status="PASS" endtime="20170907 23:53:30.388" starttime="20170907 23:53:30.388"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups_history</arg>
</arguments>
<msg timestamp="20170907 23:53:30.388" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM groups_history; </msg>
<status status="PASS" endtime="20170907 23:53:30.389" starttime="20170907 23:53:30.388"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts</arg>
</arguments>
<msg timestamp="20170907 23:53:30.390" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM hosts; </msg>
<status status="PASS" endtime="20170907 23:53:30.391" starttime="20170907 23:53:30.390"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts_history</arg>
</arguments>
<msg timestamp="20170907 23:53:30.391" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM hosts_history; </msg>
<status status="PASS" endtime="20170907 23:53:30.392" starttime="20170907 23:53:30.391"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships</arg>
</arguments>
<msg timestamp="20170907 23:53:30.392" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM memberships; </msg>
<status status="PASS" endtime="20170907 23:53:30.393" starttime="20170907 23:53:30.392"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships_history</arg>
</arguments>
<msg timestamp="20170907 23:53:30.393" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM memberships_history; </msg>
<status status="PASS" endtime="20170907 23:53:30.394" starttime="20170907 23:53:30.393"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions</arg>
</arguments>
<msg timestamp="20170907 23:53:30.394" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sessions; </msg>
<status status="PASS" endtime="20170907 23:53:30.394" starttime="20170907 23:53:30.394"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions_history</arg>
</arguments>
<msg timestamp="20170907 23:53:30.395" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sessions_history; </msg>
<status status="PASS" endtime="20170907 23:53:30.395" starttime="20170907 23:53:30.395"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes</arg>
</arguments>
<msg timestamp="20170907 23:53:30.395" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedAppTypes; </msg>
<status status="PASS" endtime="20170907 23:53:30.396" starttime="20170907 23:53:30.395"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes_history</arg>
</arguments>
<msg timestamp="20170907 23:53:30.396" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedAppTypes_history; </msg>
<status status="PASS" endtime="20170907 23:53:30.396" starttime="20170907 23:53:30.396"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes</arg>
</arguments>
<msg timestamp="20170907 23:53:30.397" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedPackageTypes; </msg>
<status status="PASS" endtime="20170907 23:53:30.397" starttime="20170907 23:53:30.397"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes_history</arg>
</arguments>
<msg timestamp="20170907 23:53:30.397" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedPackageTypes_history; </msg>
<status status="PASS" endtime="20170907 23:53:30.398" starttime="20170907 23:53:30.397"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks</arg>
</arguments>
<msg timestamp="20170907 23:53:30.398" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM tasks; </msg>
<status status="PASS" endtime="20170907 23:53:30.399" starttime="20170907 23:53:30.398"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks_history</arg>
</arguments>
<msg timestamp="20170907 23:53:30.399" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM tasks_history; </msg>
<status status="PASS" endtime="20170907 23:53:30.400" starttime="20170907 23:53:30.399"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces</arg>
</arguments>
<msg timestamp="20170907 23:53:30.400" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM traces; </msg>
<status status="PASS" endtime="20170907 23:53:30.401" starttime="20170907 23:53:30.400"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces_history</arg>
</arguments>
<msg timestamp="20170907 23:53:30.401" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM traces_history; </msg>
<status status="PASS" endtime="20170907 23:53:30.402" starttime="20170907 23:53:30.401"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups</arg>
</arguments>
<msg timestamp="20170907 23:53:30.402" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM usergroups; </msg>
<status status="PASS" endtime="20170907 23:53:30.403" starttime="20170907 23:53:30.402"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups_history</arg>
</arguments>
<msg timestamp="20170907 23:53:30.404" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM usergroups_history; </msg>
<status status="PASS" endtime="20170907 23:53:30.405" starttime="20170907 23:53:30.403"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users_history</arg>
</arguments>
<msg timestamp="20170907 23:53:30.406" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM users_history; </msg>
<status status="PASS" endtime="20170907 23:53:30.407" starttime="20170907 23:53:30.405"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works</arg>
</arguments>
<msg timestamp="20170907 23:53:30.408" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM works; </msg>
<status status="PASS" endtime="20170907 23:53:30.409" starttime="20170907 23:53:30.407"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works_history</arg>
</arguments>
<msg timestamp="20170907 23:53:30.410" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM works_history; </msg>
<status status="PASS" endtime="20170907 23:53:30.412" starttime="20170907 23:53:30.409"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170907 23:53:30.413" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170907 23:53:30.414" starttime="20170907 23:53:30.413"></status>
</kw>
<status status="PASS" endtime="20170907 23:53:30.414" starttime="20170907 23:53:30.412"></status>
</kw>
<status status="PASS" endtime="20170907 23:53:30.414" starttime="20170907 23:53:30.374"></status>
</kw>
<kw name="Stop XWtremWeb Server And XWtremWeb Worker" library="XWCommon">
<kw name="Stop XtremWeb Server" library="XWServer">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${SERVER_PROCESS}</arg>
</arguments>
<msg timestamp="20170907 23:53:30.417" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20170907 23:53:30.520" level="INFO">Process completed.</msg>
<status status="PASS" endtime="20170907 23:53:30.520" starttime="20170907 23:53:30.416"></status>
</kw>
<status status="PASS" endtime="20170907 23:53:30.520" starttime="20170907 23:53:30.415"></status>
</kw>
<kw name="Log XtremWeb Server" library="XWCommon">
<kw name="Log XtremWeb Process Log File" library="XWServer">
<kw name="Log File" library="OperatingSystem">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<msg timestamp="20170907 23:53:30.521" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170907 23:53:30.522" level="INFO">Thu Sep  7 23:52:38 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : checking launch url
Thu Sep  7 23:52:38 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] WARNING : no launcher URL defined
Thu Sep  7 23:52:38 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : launching SmartSockets hub
[07/Sep/2017:23:52:41 +0000] [main_1] ERROR : setRole : role redefined ?! (was SERVER)
[07/Sep/2017:23:52:41 +0000] [xtremweb.database.DBConnPoolThread_main_1] INFO : Connection to database jdbc:mysql://localhost/xtremweb is ok, 70 created
[07/Sep/2017:23:52:42 +0000] [xtremweb.dispatcher.DBInterface_main_1] WARN : Can't retrieve any app
[07/Sep/2017:23:52:42 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't create ProxyValidator
[07/Sep/2017:23:52:42 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.io.FileNotFoundException: /tmp/castore (No such file or directory) (/tmp/castore (No such file or directory))
[07/Sep/2017:23:52:42 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't add CA certificates to keystore
[07/Sep/2017:23:52:42 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.lang.NullPointerException (null)
[07/Sep/2017:23:52:42 +0000] [xtremweb.dispatcher.HashTaskSet_TaskSet_14] INFO : TaskSet started (300000)
[07/Sep/2017:23:52:43 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : still waiting task set...
[07/Sep/2017:23:52:43 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : UDP server not started
[07/Sep/2017:23:52:43 +0000] [xtremweb.communications.TCPServer_TCPServerNIO_15] INFO : started, listening on port : 4321
log4j:WARN No appenders could be found for logger (org.eclipse.jetty.util.log).
log4j:WARN Please initialize the log4j system properly.
log4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.
[07/Sep/2017:23:52:43 +0000] [xtremweb.communications.HTTPServer_main_1] INFO : started, listening on port : 9443
[07/Sep/2017:23:52:43 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : FACEBOOK : java.net.MalformedURLException: no protocol: 
[07/Sep/2017:23:52:43 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : GOOGLE : java.net.MalformedURLException: no protocol: 
[07/Sep/2017:23:52:43 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : TWITTER : java.net.MalformedURLException: no protocol: 
[07/Sep/2017:23:52:43 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : YAHOO : java.net.MalformedURLException: no protocol: 
[07/Sep/2017:23:52:43 +0000] [main_1] ERROR : Can't add new entry to keystore
[07/Sep/2017:23:52:43 +0000] [main_1] WARN : javax.net.ssl.SSLHandshakeException: sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target (sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target)
[07/Sep/2017:23:52:43 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : XWHEP Dispatcher(10.6.0-head) started [Thu Sep 07 23:52:43 UTC 2017]
[07/Sep/2017:23:52:43 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : DB vendor  = mysql
[07/Sep/2017:23:52:43 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : mileStone  = 
[07/Sep/2017:23:52:43 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Time out   = 15000
[07/Sep/2017:23:52:43 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Disk opt'd = true
[07/Sep/2017:23:52:43 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Net  opt'd = true
[07/Sep/2017:23:52:43 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : NIO        = true
XWHEP Dispatcher started  Thu Sep 07 23:52:43 UTC 2017
Name             : vagrant-ubuntu-trusty-64
Version          : 10.6.0-head
Identity         : 
XWRole           : SERVER
Started on       : Thu Sep 07 23:52:40 UTC 2017
Scheduler        : xtremweb.dispatcher.MatchingScheduler
SmartSockets hub : 172.28.128.3/172.17.0.1/10.0.2.15-4329#e6.31.5c.bb.cb.7c.00.00.e5.59.02.42.bc.fb.75.e4~vagrant
Server HTTP      : true
Alive            : 300
Alive time out   : 900
Polling time out : 15000
Optimize zip     : true
Optimize network : true
NIO              : true
Comm layer       : xtremweb.communications.TCPClient
Socket time out  : 60000
Socket retries   : 50
Max connections  : 200
TCP port         : 4321
UDP port         : 4323
HTPP  port       : 80
HTPPS port       : 9443
Sun RPC interposition port : 4328
Sandbox path : /usr/bin/lxc
Sandbox launch args : 
Host &lt;host&gt;&lt;uid&gt;9b9b0183-cd48-4db3-8137-0ff0220aebc8&lt;/uid&gt;&lt;accessrights&gt;0x755&lt;/accessrights&gt;&lt;name&gt;vagrant-ubuntu-trusty-64&lt;/name&gt;&lt;cpuload&gt;50&lt;/cpuload&gt;&lt;natedipaddr&gt;10.0.2.15&lt;/natedipaddr&gt;&lt;ipaddr&gt;10.0.2.15&lt;/ipaddr&gt;&lt;hwaddr&gt;&lt;/hwaddr&gt;&lt;timezone&gt;Etc/UTC&lt;/timezone&gt;&lt;os&gt;LINUX&lt;/os&gt;&lt;osversion&gt;3.13.0-129-generic&lt;/osversion&gt;&lt;javaversion&gt;1.8.0_141&lt;/javaversion&gt;&lt;javadatamodel&gt;64&lt;/javadatamodel&gt;&lt;cputype&gt;AMD64&lt;/cputype&gt;&lt;cpunb&gt;1&lt;/cpunb&gt;&lt;cpumodel&gt;unknown&lt;/cpumodel&gt;&lt;cpuspeed&gt;0&lt;/cpuspeed&gt;&lt;totalmem&gt;0&lt;/totalmem&gt;&lt;totalswap&gt;0&lt;/totalswap&gt;&lt;totaltmp&gt;40284&lt;/totaltmp&gt;&lt;freetmp&gt;37110&lt;/freetmp&gt;&lt;project&gt;&lt;/project&gt;&lt;active&gt;true&lt;/active&gt;&lt;incomingconnections&gt;false&lt;/incomingconnections&gt;&lt;available&gt;false&lt;/available&gt;&lt;pilotjob&gt;false&lt;/pilotjob&gt;&lt;sgid&gt;&lt;/sgid&gt;&lt;timeout&gt;15000&lt;/timeout&gt;&lt;traces&gt;false&lt;/traces&gt;&lt;acceptbin&gt;false&lt;/acceptbin&gt;&lt;version&gt;10.6.0-head&lt;/version&gt;&lt;/host&gt;
[07/Sep/2017:23:52:43 +0000] [xtremweb.communications.HTTPServer_HTTPServer_218] INFO : started, listening on port : 9443
[07/Sep/2017:23:52:50 +0000] [xtremweb.common.StreamIO_TCPHandler_18] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[07/Sep/2017:23:52:50 +0000] [xtremweb.common.StreamIO_TCPHandler_17] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[07/Sep/2017:23:52:51 +0000] [xtremweb.common.StreamIO_TCPHandler_19] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[07/Sep/2017:23:52:53 +0000] [xtremweb.common.StreamIO_TCPHandler_20] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[07/Sep/2017:23:52:53 +0000] [xtremweb.common.StreamIO_TCPHandler_21] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[07/Sep/2017:23:52:53 +0000] [xtremweb.common.StreamIO_TCPHandler_22] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[07/Sep/2017:23:52:54 +0000] [xtremweb.dispatcher.DBInterface_TCPHandler_23] INFO : vagrant-ubuntu-trusty-64 not in DB; inserting 5b4db46c-6194-435f-ba0c-0776d989383b
[07/Sep/2017:23:52:54 +0000] [xtremweb.common.StreamIO_TCPHandler_23] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[07/Sep/2017:23:52:59 +0000] [xtremweb.common.StreamIO_TCPHandler_24] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[07/Sep/2017:23:53:04 +0000] [xtremweb.common.StreamIO_TCPHandler_25] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[07/Sep/2017:23:53:08 +0000] [xtremweb.common.StreamIO_TCPHandler_26] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[07/Sep/2017:23:53:09 +0000] [xtremweb.common.StreamIO_TCPHandler_27] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[07/Sep/2017:23:53:09 +0000] [xtremweb.common.StreamIO_TCPHandler_28] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[07/Sep/2017:23:53:09 +0000] [xtremweb.common.StreamIO_TCPHandler_29] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[07/Sep/2017:23:53:09 +0000] [xtremweb.common.StreamIO_TCPHandler_30] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[07/Sep/2017:23:53:11 +0000] [xtremweb.common.StreamIO_TCPHandler_31] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[07/Sep/2017:23:53:17 +0000] [xtremweb.common.StreamIO_TCPHandler_32] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[07/Sep/2017:23:53:23 +0000] [xtremweb.common.StreamIO_TCPHandler_33] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[07/Sep/2017:23:53:24 +0000] [xtremweb.common.StreamIO_TCPHandler_34] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[07/Sep/2017:23:53:24 +0000] [xtremweb.common.StreamIO_TCPHandler_35] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[07/Sep/2017:23:53:24 +0000] [xtremweb.common.StreamIO_TCPHandler_36] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[07/Sep/2017:23:53:24 +0000] [xtremweb.dispatcher.DBInterface_TCPHandler_37] WARN : javax.mail.internet.AddressException: Missing local name in string ``@DBADMINEMAIL@'' (Missing local name)
[07/Sep/2017:23:53:24 +0000] [xtremweb.common.StreamIO_TCPHandler_37] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[07/Sep/2017:23:53:24 +0000] [xtremweb.dispatcher.DBInterface_TCPHandler_38] WARN : javax.mail.internet.AddressException: Missing local name in string ``@DBADMINEMAIL@'' (Missing local name)
[07/Sep/2017:23:53:24 +0000] [xtremweb.common.StreamIO_TCPHandler_38] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[07/Sep/2017:23:53:24 +0000] [xtremweb.dispatcher.TCPHandler_TCPHandler_39] ERROR : Can't write result
[07/Sep/2017:23:53:24 +0000] [xtremweb.dispatcher.TCPHandler_TCPHandler_39] WARN : java.io.IOException: java.net.SocketException: Broken pipe (Write failed) (java.net.SocketException: Broken pipe (Write failed))
[07/Sep/2017:23:53:24 +0000] [xtremweb.common.StreamIO_TCPHandler_39] WARN : javax.net.ssl.SSLException: Connection has been shutdown: javax.net.ssl.SSLException: java.net.SocketException: Broken pipe (Write failed) (javax.net.ssl.SSLException: java.net.SocketException: Broken pipe (Write failed))
[07/Sep/2017:23:53:29 +0000] [xtremweb.common.StreamIO_TCPHandler_40] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[07/Sep/2017:23:53:30 +0000] [xtremweb.common.StreamIO_TCPHandler_41] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[07/Sep/2017:23:53:30 +0000] [xtremweb.communications.TCPServer_TCPServerNIO_15] WARN : java.net.SocketException: Socket closed (Socket closed)
</msg>
<status status="PASS" endtime="20170907 23:53:30.523" starttime="20170907 23:53:30.521"></status>
</kw>
<status status="PASS" endtime="20170907 23:53:30.523" starttime="20170907 23:53:30.521"></status>
</kw>
<status status="PASS" endtime="20170907 23:53:30.523" starttime="20170907 23:53:30.520"></status>
</kw>
<kw name="Stop XtremWeb Worker" library="XWWorker">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Stop XtremWeb Worker</arg>
</arguments>
<msg timestamp="20170907 23:53:30.524" level="INFO">Stop XtremWeb Worker</msg>
<status status="PASS" endtime="20170907 23:53:30.524" starttime="20170907 23:53:30.523"></status>
</kw>
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${WORKER_PROCESS}</arg>
</arguments>
<msg timestamp="20170907 23:53:30.524" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20170907 23:53:30.525" level="INFO">Process completed.</msg>
<status status="PASS" endtime="20170907 23:53:30.525" starttime="20170907 23:53:30.524"></status>
</kw>
<status status="PASS" endtime="20170907 23:53:30.525" starttime="20170907 23:53:30.523"></status>
</kw>
<status status="PASS" endtime="20170907 23:53:30.525" starttime="20170907 23:53:30.415"></status>
</kw>
<kw name="Start XWtremWeb Server And XWtremWeb Worker" library="XWCommon">
<kw name="Ping XWtremWeb Database" library="XWServer">
<kw name="Xtremweb Tables Must Exist" library="MySql">
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170907 23:53:30.531" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170907 23:53:30.532" starttime="20170907 23:53:30.530"></status>
</kw>
<status status="PASS" endtime="20170907 23:53:30.532" starttime="20170907 23:53:30.530"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>appTypes</arg>
</arguments>
<msg timestamp="20170907 23:53:30.533" level="INFO">Executing : Table Must Exist  |  appTypes </msg>
<msg timestamp="20170907 23:53:30.533" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='appTypes' </msg>
<status status="PASS" endtime="20170907 23:53:30.534" starttime="20170907 23:53:30.532"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps</arg>
</arguments>
<msg timestamp="20170907 23:53:30.534" level="INFO">Executing : Table Must Exist  |  apps </msg>
<msg timestamp="20170907 23:53:30.535" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='apps' </msg>
<status status="PASS" endtime="20170907 23:53:30.536" starttime="20170907 23:53:30.534"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps_history</arg>
</arguments>
<msg timestamp="20170907 23:53:30.536" level="INFO">Executing : Table Must Exist  |  apps_history </msg>
<msg timestamp="20170907 23:53:30.536" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='apps_history' </msg>
<status status="PASS" endtime="20170907 23:53:30.537" starttime="20170907 23:53:30.536"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>cpuTypes</arg>
</arguments>
<msg timestamp="20170907 23:53:30.538" level="INFO">Executing : Table Must Exist  |  cpuTypes </msg>
<msg timestamp="20170907 23:53:30.538" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='cpuTypes' </msg>
<status status="PASS" endtime="20170907 23:53:30.539" starttime="20170907 23:53:30.537"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>dataTypes</arg>
</arguments>
<msg timestamp="20170907 23:53:30.539" level="INFO">Executing : Table Must Exist  |  dataTypes </msg>
<msg timestamp="20170907 23:53:30.540" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='dataTypes' </msg>
<status status="PASS" endtime="20170907 23:53:30.540" starttime="20170907 23:53:30.539"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas</arg>
</arguments>
<msg timestamp="20170907 23:53:30.541" level="INFO">Executing : Table Must Exist  |  datas </msg>
<msg timestamp="20170907 23:53:30.541" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='datas' </msg>
<status status="PASS" endtime="20170907 23:53:30.542" starttime="20170907 23:53:30.541"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas_history</arg>
</arguments>
<msg timestamp="20170907 23:53:30.542" level="INFO">Executing : Table Must Exist  |  datas_history </msg>
<msg timestamp="20170907 23:53:30.542" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='datas_history' </msg>
<status status="PASS" endtime="20170907 23:53:30.543" starttime="20170907 23:53:30.542"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables</arg>
</arguments>
<msg timestamp="20170907 23:53:30.544" level="INFO">Executing : Table Must Exist  |  executables </msg>
<msg timestamp="20170907 23:53:30.544" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='executables' </msg>
<status status="PASS" endtime="20170907 23:53:30.545" starttime="20170907 23:53:30.543"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables_history</arg>
</arguments>
<msg timestamp="20170907 23:53:30.546" level="INFO">Executing : Table Must Exist  |  executables_history </msg>
<msg timestamp="20170907 23:53:30.546" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='executables_history' </msg>
<status status="PASS" endtime="20170907 23:53:30.547" starttime="20170907 23:53:30.545"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups</arg>
</arguments>
<msg timestamp="20170907 23:53:30.547" level="INFO">Executing : Table Must Exist  |  groups </msg>
<msg timestamp="20170907 23:53:30.547" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='groups' </msg>
<status status="PASS" endtime="20170907 23:53:30.549" starttime="20170907 23:53:30.547"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups_history</arg>
</arguments>
<msg timestamp="20170907 23:53:30.549" level="INFO">Executing : Table Must Exist  |  groups_history </msg>
<msg timestamp="20170907 23:53:30.549" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='groups_history' </msg>
<status status="PASS" endtime="20170907 23:53:30.550" starttime="20170907 23:53:30.549"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts</arg>
</arguments>
<msg timestamp="20170907 23:53:30.551" level="INFO">Executing : Table Must Exist  |  hosts </msg>
<msg timestamp="20170907 23:53:30.551" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='hosts' </msg>
<status status="PASS" endtime="20170907 23:53:30.552" starttime="20170907 23:53:30.551"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts_history</arg>
</arguments>
<msg timestamp="20170907 23:53:30.552" level="INFO">Executing : Table Must Exist  |  hosts_history </msg>
<msg timestamp="20170907 23:53:30.553" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='hosts_history' </msg>
<status status="PASS" endtime="20170907 23:53:30.554" starttime="20170907 23:53:30.552"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships</arg>
</arguments>
<msg timestamp="20170907 23:53:30.555" level="INFO">Executing : Table Must Exist  |  memberships </msg>
<msg timestamp="20170907 23:53:30.555" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='memberships' </msg>
<status status="PASS" endtime="20170907 23:53:30.556" starttime="20170907 23:53:30.554"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships_history</arg>
</arguments>
<msg timestamp="20170907 23:53:30.556" level="INFO">Executing : Table Must Exist  |  memberships_history </msg>
<msg timestamp="20170907 23:53:30.556" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='memberships_history' </msg>
<status status="PASS" endtime="20170907 23:53:30.558" starttime="20170907 23:53:30.556"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>oses</arg>
</arguments>
<msg timestamp="20170907 23:53:30.558" level="INFO">Executing : Table Must Exist  |  oses </msg>
<msg timestamp="20170907 23:53:30.558" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='oses' </msg>
<status status="PASS" endtime="20170907 23:53:30.560" starttime="20170907 23:53:30.558"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>packageTypes</arg>
</arguments>
<msg timestamp="20170907 23:53:30.560" level="INFO">Executing : Table Must Exist  |  packageTypes </msg>
<msg timestamp="20170907 23:53:30.560" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='packageTypes' </msg>
<status status="PASS" endtime="20170907 23:53:30.561" starttime="20170907 23:53:30.560"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions</arg>
</arguments>
<msg timestamp="20170907 23:53:30.562" level="INFO">Executing : Table Must Exist  |  sessions </msg>
<msg timestamp="20170907 23:53:30.562" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sessions' </msg>
<status status="PASS" endtime="20170907 23:53:30.562" starttime="20170907 23:53:30.561"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions_history</arg>
</arguments>
<msg timestamp="20170907 23:53:30.563" level="INFO">Executing : Table Must Exist  |  sessions_history </msg>
<msg timestamp="20170907 23:53:30.563" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sessions_history' </msg>
<status status="PASS" endtime="20170907 23:53:30.564" starttime="20170907 23:53:30.563"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes</arg>
</arguments>
<msg timestamp="20170907 23:53:30.564" level="INFO">Executing : Table Must Exist  |  sharedAppTypes </msg>
<msg timestamp="20170907 23:53:30.564" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedAppTypes' </msg>
<status status="PASS" endtime="20170907 23:53:30.565" starttime="20170907 23:53:30.564"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes_history</arg>
</arguments>
<msg timestamp="20170907 23:53:30.565" level="INFO">Executing : Table Must Exist  |  sharedAppTypes_history </msg>
<msg timestamp="20170907 23:53:30.565" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedAppTypes_history' </msg>
<status status="PASS" endtime="20170907 23:53:30.566" starttime="20170907 23:53:30.565"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes</arg>
</arguments>
<msg timestamp="20170907 23:53:30.567" level="INFO">Executing : Table Must Exist  |  sharedPackageTypes </msg>
<msg timestamp="20170907 23:53:30.567" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedPackageTypes' </msg>
<status status="PASS" endtime="20170907 23:53:30.568" starttime="20170907 23:53:30.567"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes_history</arg>
</arguments>
<msg timestamp="20170907 23:53:30.568" level="INFO">Executing : Table Must Exist  |  sharedPackageTypes_history </msg>
<msg timestamp="20170907 23:53:30.568" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedPackageTypes_history' </msg>
<status status="PASS" endtime="20170907 23:53:30.570" starttime="20170907 23:53:30.568"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>statuses</arg>
</arguments>
<msg timestamp="20170907 23:53:30.570" level="INFO">Executing : Table Must Exist  |  statuses </msg>
<msg timestamp="20170907 23:53:30.570" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='statuses' </msg>
<status status="PASS" endtime="20170907 23:53:30.571" starttime="20170907 23:53:30.570"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks</arg>
</arguments>
<msg timestamp="20170907 23:53:30.572" level="INFO">Executing : Table Must Exist  |  tasks </msg>
<msg timestamp="20170907 23:53:30.572" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='tasks' </msg>
<status status="PASS" endtime="20170907 23:53:30.572" starttime="20170907 23:53:30.571"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks_history</arg>
</arguments>
<msg timestamp="20170907 23:53:30.573" level="INFO">Executing : Table Must Exist  |  tasks_history </msg>
<msg timestamp="20170907 23:53:30.573" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='tasks_history' </msg>
<status status="PASS" endtime="20170907 23:53:30.574" starttime="20170907 23:53:30.573"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces</arg>
</arguments>
<msg timestamp="20170907 23:53:30.574" level="INFO">Executing : Table Must Exist  |  traces </msg>
<msg timestamp="20170907 23:53:30.574" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='traces' </msg>
<status status="PASS" endtime="20170907 23:53:30.575" starttime="20170907 23:53:30.574"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces_history</arg>
</arguments>
<msg timestamp="20170907 23:53:30.576" level="INFO">Executing : Table Must Exist  |  traces_history </msg>
<msg timestamp="20170907 23:53:30.576" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='traces_history' </msg>
<status status="PASS" endtime="20170907 23:53:30.577" starttime="20170907 23:53:30.576"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>userRights</arg>
</arguments>
<msg timestamp="20170907 23:53:30.577" level="INFO">Executing : Table Must Exist  |  userRights </msg>
<msg timestamp="20170907 23:53:30.577" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='userRights' </msg>
<status status="PASS" endtime="20170907 23:53:30.578" starttime="20170907 23:53:30.577"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups</arg>
</arguments>
<msg timestamp="20170907 23:53:30.579" level="INFO">Executing : Table Must Exist  |  usergroups </msg>
<msg timestamp="20170907 23:53:30.579" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='usergroups' </msg>
<status status="PASS" endtime="20170907 23:53:30.580" starttime="20170907 23:53:30.579"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups_history</arg>
</arguments>
<msg timestamp="20170907 23:53:30.580" level="INFO">Executing : Table Must Exist  |  usergroups_history </msg>
<msg timestamp="20170907 23:53:30.580" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='usergroups_history' </msg>
<status status="PASS" endtime="20170907 23:53:30.581" starttime="20170907 23:53:30.580"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users</arg>
</arguments>
<msg timestamp="20170907 23:53:30.582" level="INFO">Executing : Table Must Exist  |  users </msg>
<msg timestamp="20170907 23:53:30.582" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='users' </msg>
<status status="PASS" endtime="20170907 23:53:30.583" starttime="20170907 23:53:30.582"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users_history</arg>
</arguments>
<msg timestamp="20170907 23:53:30.584" level="INFO">Executing : Table Must Exist  |  users_history </msg>
<msg timestamp="20170907 23:53:30.584" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='users_history' </msg>
<status status="PASS" endtime="20170907 23:53:30.585" starttime="20170907 23:53:30.583"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>version</arg>
</arguments>
<msg timestamp="20170907 23:53:30.585" level="INFO">Executing : Table Must Exist  |  version </msg>
<msg timestamp="20170907 23:53:30.585" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='version' </msg>
<status status="PASS" endtime="20170907 23:53:30.586" starttime="20170907 23:53:30.585"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>versions</arg>
</arguments>
<msg timestamp="20170907 23:53:30.586" level="INFO">Executing : Table Must Exist  |  versions </msg>
<msg timestamp="20170907 23:53:30.586" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='versions' </msg>
<status status="PASS" endtime="20170907 23:53:30.587" starttime="20170907 23:53:30.586"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps</arg>
</arguments>
<msg timestamp="20170907 23:53:30.587" level="INFO">Executing : Table Must Exist  |  view_apps </msg>
<msg timestamp="20170907 23:53:30.588" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps' </msg>
<status status="PASS" endtime="20170907 23:53:30.588" starttime="20170907 23:53:30.587"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps_for_offering</arg>
</arguments>
<msg timestamp="20170907 23:53:30.589" level="INFO">Executing : Table Must Exist  |  view_apps_for_offering </msg>
<msg timestamp="20170907 23:53:30.589" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps_for_offering' </msg>
<status status="PASS" endtime="20170907 23:53:30.591" starttime="20170907 23:53:30.589"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps_for_offering_with_file_sizes</arg>
</arguments>
<msg timestamp="20170907 23:53:30.591" level="INFO">Executing : Table Must Exist  |  view_apps_for_offering_with_file_sizes </msg>
<msg timestamp="20170907 23:53:30.591" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps_for_offering_with_file_sizes' </msg>
<status status="PASS" endtime="20170907 23:53:30.592" starttime="20170907 23:53:30.591"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_datas</arg>
</arguments>
<msg timestamp="20170907 23:53:30.593" level="INFO">Executing : Table Must Exist  |  view_datas </msg>
<msg timestamp="20170907 23:53:30.593" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_datas' </msg>
<status status="PASS" endtime="20170907 23:53:30.594" starttime="20170907 23:53:30.593"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_executables</arg>
</arguments>
<msg timestamp="20170907 23:53:30.594" level="INFO">Executing : Table Must Exist  |  view_executables </msg>
<msg timestamp="20170907 23:53:30.594" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_executables' </msg>
<status status="PASS" endtime="20170907 23:53:30.595" starttime="20170907 23:53:30.594"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_groups</arg>
</arguments>
<msg timestamp="20170907 23:53:30.596" level="INFO">Executing : Table Must Exist  |  view_groups </msg>
<msg timestamp="20170907 23:53:30.596" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_groups' </msg>
<status status="PASS" endtime="20170907 23:53:30.597" starttime="20170907 23:53:30.596"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts</arg>
</arguments>
<msg timestamp="20170907 23:53:30.597" level="INFO">Executing : Table Must Exist  |  view_hosts </msg>
<msg timestamp="20170907 23:53:30.597" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts' </msg>
<status status="PASS" endtime="20170907 23:53:30.598" starttime="20170907 23:53:30.597"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_deployable</arg>
</arguments>
<msg timestamp="20170907 23:53:30.599" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_deployable </msg>
<msg timestamp="20170907 23:53:30.599" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_deployable' </msg>
<status status="PASS" endtime="20170907 23:53:30.600" starttime="20170907 23:53:30.598"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_deployable_and_shared</arg>
</arguments>
<msg timestamp="20170907 23:53:30.600" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_deployable_and_shared </msg>
<msg timestamp="20170907 23:53:30.600" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_deployable_and_shared' </msg>
<status status="PASS" endtime="20170907 23:53:30.601" starttime="20170907 23:53:30.600"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_shared</arg>
</arguments>
<msg timestamp="20170907 23:53:30.601" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_shared </msg>
<msg timestamp="20170907 23:53:30.602" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_shared' </msg>
<status status="PASS" endtime="20170907 23:53:30.604" starttime="20170907 23:53:30.601"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_sessions</arg>
</arguments>
<msg timestamp="20170907 23:53:30.605" level="INFO">Executing : Table Must Exist  |  view_sessions </msg>
<msg timestamp="20170907 23:53:30.605" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_sessions' </msg>
<status status="PASS" endtime="20170907 23:53:30.608" starttime="20170907 23:53:30.604"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_tasks</arg>
</arguments>
<msg timestamp="20170907 23:53:30.608" level="INFO">Executing : Table Must Exist  |  view_tasks </msg>
<msg timestamp="20170907 23:53:30.608" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_tasks' </msg>
<status status="PASS" endtime="20170907 23:53:30.610" starttime="20170907 23:53:30.608"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_traces</arg>
</arguments>
<msg timestamp="20170907 23:53:30.611" level="INFO">Executing : Table Must Exist  |  view_traces </msg>
<msg timestamp="20170907 23:53:30.611" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_traces' </msg>
<status status="PASS" endtime="20170907 23:53:30.612" starttime="20170907 23:53:30.611"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_usergroups</arg>
</arguments>
<msg timestamp="20170907 23:53:30.613" level="INFO">Executing : Table Must Exist  |  view_usergroups </msg>
<msg timestamp="20170907 23:53:30.613" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_usergroups' </msg>
<status status="PASS" endtime="20170907 23:53:30.614" starttime="20170907 23:53:30.613"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users</arg>
</arguments>
<msg timestamp="20170907 23:53:30.614" level="INFO">Executing : Table Must Exist  |  view_users </msg>
<msg timestamp="20170907 23:53:30.614" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users' </msg>
<status status="PASS" endtime="20170907 23:53:30.616" starttime="20170907 23:53:30.614"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_apps</arg>
</arguments>
<msg timestamp="20170907 23:53:30.616" level="INFO">Executing : Table Must Exist  |  view_users_apps </msg>
<msg timestamp="20170907 23:53:30.616" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_apps' </msg>
<status status="PASS" endtime="20170907 23:53:30.617" starttime="20170907 23:53:30.616"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_datas</arg>
</arguments>
<msg timestamp="20170907 23:53:30.618" level="INFO">Executing : Table Must Exist  |  view_users_datas </msg>
<msg timestamp="20170907 23:53:30.618" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_datas' </msg>
<status status="PASS" endtime="20170907 23:53:30.619" starttime="20170907 23:53:30.617"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_groups</arg>
</arguments>
<msg timestamp="20170907 23:53:30.619" level="INFO">Executing : Table Must Exist  |  view_users_groups </msg>
<msg timestamp="20170907 23:53:30.619" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_groups' </msg>
<status status="PASS" endtime="20170907 23:53:30.620" starttime="20170907 23:53:30.619"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_hosts</arg>
</arguments>
<msg timestamp="20170907 23:53:30.621" level="INFO">Executing : Table Must Exist  |  view_users_hosts </msg>
<msg timestamp="20170907 23:53:30.621" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_hosts' </msg>
<status status="PASS" endtime="20170907 23:53:30.624" starttime="20170907 23:53:30.621"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_sessions</arg>
</arguments>
<msg timestamp="20170907 23:53:30.625" level="INFO">Executing : Table Must Exist  |  view_users_sessions </msg>
<msg timestamp="20170907 23:53:30.625" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_sessions' </msg>
<status status="PASS" endtime="20170907 23:53:30.628" starttime="20170907 23:53:30.625"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_tasks</arg>
</arguments>
<msg timestamp="20170907 23:53:30.629" level="INFO">Executing : Table Must Exist  |  view_users_tasks </msg>
<msg timestamp="20170907 23:53:30.629" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_tasks' </msg>
<status status="PASS" endtime="20170907 23:53:30.631" starttime="20170907 23:53:30.628"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_traces</arg>
</arguments>
<msg timestamp="20170907 23:53:30.631" level="INFO">Executing : Table Must Exist  |  view_users_traces </msg>
<msg timestamp="20170907 23:53:30.631" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_traces' </msg>
<status status="PASS" endtime="20170907 23:53:30.632" starttime="20170907 23:53:30.631"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_usergroups</arg>
</arguments>
<msg timestamp="20170907 23:53:30.633" level="INFO">Executing : Table Must Exist  |  view_users_usergroups </msg>
<msg timestamp="20170907 23:53:30.633" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_usergroups' </msg>
<status status="PASS" endtime="20170907 23:53:30.634" starttime="20170907 23:53:30.632"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_users</arg>
</arguments>
<msg timestamp="20170907 23:53:30.634" level="INFO">Executing : Table Must Exist  |  view_users_users </msg>
<msg timestamp="20170907 23:53:30.634" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_users' </msg>
<status status="PASS" endtime="20170907 23:53:30.636" starttime="20170907 23:53:30.634"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_works</arg>
</arguments>
<msg timestamp="20170907 23:53:30.636" level="INFO">Executing : Table Must Exist  |  view_users_works </msg>
<msg timestamp="20170907 23:53:30.636" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_works' </msg>
<status status="PASS" endtime="20170907 23:53:30.638" starttime="20170907 23:53:30.636"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works</arg>
</arguments>
<msg timestamp="20170907 23:53:30.638" level="INFO">Executing : Table Must Exist  |  view_works </msg>
<msg timestamp="20170907 23:53:30.638" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works' </msg>
<status status="PASS" endtime="20170907 23:53:30.640" starttime="20170907 23:53:30.638"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works_for_billing</arg>
</arguments>
<msg timestamp="20170907 23:53:30.640" level="INFO">Executing : Table Must Exist  |  view_works_for_billing </msg>
<msg timestamp="20170907 23:53:30.640" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works_for_billing' </msg>
<status status="PASS" endtime="20170907 23:53:30.641" starttime="20170907 23:53:30.640"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works_for_billing_with_file_sizes</arg>
</arguments>
<msg timestamp="20170907 23:53:30.642" level="INFO">Executing : Table Must Exist  |  view_works_for_billing_with_file_sizes </msg>
<msg timestamp="20170907 23:53:30.642" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works_for_billing_with_file_sizes' </msg>
<status status="PASS" endtime="20170907 23:53:30.643" starttime="20170907 23:53:30.641"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works</arg>
</arguments>
<msg timestamp="20170907 23:53:30.644" level="INFO">Executing : Table Must Exist  |  works </msg>
<msg timestamp="20170907 23:53:30.644" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='works' </msg>
<status status="PASS" endtime="20170907 23:53:30.645" starttime="20170907 23:53:30.644"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works_history</arg>
</arguments>
<msg timestamp="20170907 23:53:30.645" level="INFO">Executing : Table Must Exist  |  works_history </msg>
<msg timestamp="20170907 23:53:30.645" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='works_history' </msg>
<status status="PASS" endtime="20170907 23:53:30.646" starttime="20170907 23:53:30.645"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170907 23:53:30.647" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170907 23:53:30.648" starttime="20170907 23:53:30.647"></status>
</kw>
<status status="PASS" endtime="20170907 23:53:30.648" starttime="20170907 23:53:30.647"></status>
</kw>
<status status="PASS" endtime="20170907 23:53:30.648" starttime="20170907 23:53:30.528"></status>
</kw>
<status status="PASS" endtime="20170907 23:53:30.648" starttime="20170907 23:53:30.526"></status>
</kw>
<kw name="Start XtremWeb Server" library="XWServer">
<arguments>
<arg>${DIST_XWHEP_PATH}</arg>
</arguments>
<kw name="File Should Exist" library="OperatingSystem">
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xtremweb.server.conf</arg>
</arguments>
<msg timestamp="20170907 23:53:30.650" html="yes" level="INFO">File '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf&lt;/a&gt;' exists.</msg>
<status status="PASS" endtime="20170907 23:53:30.650" starttime="20170907 23:53:30.649"></status>
</kw>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xtremweb.server.conf</arg>
</arguments>
<assign>
<var>${config_content}</var>
</assign>
<msg timestamp="20170907 23:53:30.650" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf&lt;/a&gt;'.</msg>
<msg timestamp="20170907 23:53:30.651" level="INFO">${config_content} = #
# Copyrights     : CNRS
# Author         : Oleg Lodygensky
# Acknowledgment : XtremWeb-HEP is based on XtremWeb 1.8.0 by inria : http://www.xtremweb.net/
# Web            : http://www.xtremweb-hep.o...</msg>
<status status="PASS" endtime="20170907 23:53:30.651" starttime="20170907 23:53:30.650"></status>
</kw>
<kw name="Remove String Using Regexp" library="String">
<doc>Removes ``patterns`` from the given ``string``.</doc>
<arguments>
<arg>${config_content}</arg>
<arg>LAUNCHERURL=${XWCONFIGURE.VALUES.XWUPGRADEURL}</arg>
</arguments>
<assign>
<var>${config_content_filtered}</var>
</assign>
<msg timestamp="20170907 23:53:30.652" level="INFO">${config_content_filtered} = #
# Copyrights     : CNRS
# Author         : Oleg Lodygensky
# Acknowledgment : XtremWeb-HEP is based on XtremWeb 1.8.0 by inria : http://www.xtremweb.net/
# Web            : http://www.xtremweb-hep.o...</msg>
<status status="PASS" endtime="20170907 23:53:30.652" starttime="20170907 23:53:30.651"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${config_content_filtered}</arg>
<arg>\## HTTPSPORT=443</arg>
<arg>HTTPSPORT=${XWCONFIGURE.VALUES.HTTPSPORT}</arg>
</arguments>
<assign>
<var>${config_content_filtered}</var>
</assign>
<msg timestamp="20170907 23:53:30.653" level="INFO">${config_content_filtered} = #
# Copyrights     : CNRS
# Author         : Oleg Lodygensky
# Acknowledgment : XtremWeb-HEP is based on XtremWeb 1.8.0 by inria : http://www.xtremweb.net/
# Web            : http://www.xtremweb-hep.o...</msg>
<status status="PASS" endtime="20170907 23:53:30.653" starttime="20170907 23:53:30.652"></status>
</kw>
<kw name="Create File" library="OperatingSystem">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xtremweb.server.conf</arg>
<arg>content=${config_content_filtered}</arg>
</arguments>
<msg timestamp="20170907 23:53:30.656" html="yes" level="INFO">Created file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170907 23:53:30.657" starttime="20170907 23:53:30.653"></status>
</kw>
<kw name="Remove File" library="OperatingSystem">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<msg timestamp="20170907 23:53:30.660" html="yes" level="INFO">Removed file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170907 23:53:30.661" starttime="20170907 23:53:30.657"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/bin/xtremweb.server console</arg>
<arg>shell=yes</arg>
<arg>stderr=STDOUT</arg>
<arg>stdout=${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<assign>
<var>${created_process}</var>
</assign>
<msg timestamp="20170907 23:53:30.663" level="INFO">Starting process:
/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/xtremweb.server console</msg>
<msg timestamp="20170907 23:53:30.667" level="INFO">${created_process} = 84</msg>
<status status="PASS" endtime="20170907 23:53:30.667" starttime="20170907 23:53:30.661"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SERVER_PROCESS}</arg>
<arg>${created_process}</arg>
</arguments>
<msg timestamp="20170907 23:53:30.669" level="INFO">${SERVER_PROCESS} = 84</msg>
<status status="PASS" endtime="20170907 23:53:30.669" starttime="20170907 23:53:30.668"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2 min</arg>
<arg>5 sec</arg>
<arg>Check XtremWeb Server Start From Log</arg>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<kw name="Check XtremWeb Server Start From Log" library="XWServer">
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<kw name="Log XtremWeb Process Log File" library="XWServer">
<kw name="Log File" library="OperatingSystem">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<msg timestamp="20170907 23:53:30.672" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170907 23:53:30.674" level="INFO"></msg>
<status status="PASS" endtime="20170907 23:53:30.674" starttime="20170907 23:53:30.671"></status>
</kw>
<status status="PASS" endtime="20170907 23:53:30.675" starttime="20170907 23:53:30.670"></status>
</kw>
<kw name="Grep File" library="OperatingSystem">
<doc>Returns the lines of the specified file that match the ``pattern``.</doc>
<arguments>
<arg>${log}</arg>
<arg>listening on port : ${XWCONFIGURE.VALUES.HTTPSPORT}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20170907 23:53:30.675" html="yes" level="INFO">Reading file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170907 23:53:30.676" level="INFO">0 out of 0 lines matched</msg>
<msg timestamp="20170907 23:53:30.677" level="INFO">${ret} = </msg>
<status status="PASS" endtime="20170907 23:53:30.677" starttime="20170907 23:53:30.675"></status>
</kw>
<kw name="Get Line Count" library="String">
<doc>Returns and logs the number of lines in the given string.</doc>
<arguments>
<arg>${ret}</arg>
</arguments>
<assign>
<var>${line_count}</var>
</assign>
<msg timestamp="20170907 23:53:30.678" level="INFO">0 lines</msg>
<msg timestamp="20170907 23:53:30.678" level="INFO">${line_count} = 0</msg>
<status status="PASS" endtime="20170907 23:53:30.678" starttime="20170907 23:53:30.677"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${line_count}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20170907 23:53:30.678" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20170907 23:53:30.679" level="FAIL">0 != 2</msg>
<status status="FAIL" endtime="20170907 23:53:30.680" starttime="20170907 23:53:30.678"></status>
</kw>
<status status="FAIL" endtime="20170907 23:53:30.680" starttime="20170907 23:53:30.670"></status>
</kw>
<kw name="Check XtremWeb Server Start From Log" library="XWServer">
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<kw name="Log XtremWeb Process Log File" library="XWServer">
<kw name="Log File" library="OperatingSystem">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<msg timestamp="20170907 23:53:35.684" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170907 23:53:35.685" level="INFO">Thu Sep  7 23:53:30 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : checking launch url
Thu Sep  7 23:53:30 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] WARNING : no launcher URL defined
Thu Sep  7 23:53:30 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : launching SmartSockets hub
[07/Sep/2017:23:53:33 +0000] [main_1] ERROR : setRole : role redefined ?! (was SERVER)
[07/Sep/2017:23:53:34 +0000] [xtremweb.database.DBConnPoolThread_main_1] INFO : Connection to database jdbc:mysql://localhost/xtremweb is ok, 70 created
[07/Sep/2017:23:53:34 +0000] [xtremweb.dispatcher.DBInterface_main_1] WARN : Can't retrieve any app
[07/Sep/2017:23:53:34 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't create ProxyValidator
[07/Sep/2017:23:53:34 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.io.FileNotFoundException: /tmp/castore (No such file or directory) (/tmp/castore (No such file or directory))
[07/Sep/2017:23:53:34 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't add CA certificates to keystore
[07/Sep/2017:23:53:34 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.lang.NullPointerException (null)
[07/Sep/2017:23:53:34 +0000] [xtremweb.dispatcher.HashTaskSet_TaskSet_14] INFO : TaskSet started (300000)
[07/Sep/2017:23:53:35 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : still waiting task set...
[07/Sep/2017:23:53:35 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : UDP server not started
[07/Sep/2017:23:53:35 +0000] [xtremweb.communications.TCPServer_TCPServerNIO_15] INFO : started, listening on port : 4321
log4j:WARN No appenders could be found for logger (org.eclipse.jetty.util.log).
log4j:WARN Please initialize the log4j system properly.
log4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.
[07/Sep/2017:23:53:35 +0000] [xtremweb.communications.HTTPServer_main_1] INFO : started, listening on port : 9443
[07/Sep/2017:23:53:35 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : FACEBOOK : java.net.MalformedURLException: no protocol: 
[07/Sep/2017:23:53:35 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : GOOGLE : java.net.MalformedURLException: no protocol: 
[07/Sep/2017:23:53:35 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : TWITTER : java.net.MalformedURLException: no protocol: 
[07/Sep/2017:23:53:35 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : YAHOO : java.net.MalformedURLException: no protocol: 
</msg>
<status status="PASS" endtime="20170907 23:53:35.685" starttime="20170907 23:53:35.683"></status>
</kw>
<status status="PASS" endtime="20170907 23:53:35.685" starttime="20170907 23:53:35.683"></status>
</kw>
<kw name="Grep File" library="OperatingSystem">
<doc>Returns the lines of the specified file that match the ``pattern``.</doc>
<arguments>
<arg>${log}</arg>
<arg>listening on port : ${XWCONFIGURE.VALUES.HTTPSPORT}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20170907 23:53:35.686" html="yes" level="INFO">Reading file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170907 23:53:35.692" level="INFO">1 out of 22 lines matched</msg>
<msg timestamp="20170907 23:53:35.692" level="INFO">${ret} = [07/Sep/2017:23:53:35 +0000] [xtremweb.communications.HTTPServer_main_1] INFO : started, listening on port : 9443</msg>
<status status="PASS" endtime="20170907 23:53:35.692" starttime="20170907 23:53:35.685"></status>
</kw>
<kw name="Get Line Count" library="String">
<doc>Returns and logs the number of lines in the given string.</doc>
<arguments>
<arg>${ret}</arg>
</arguments>
<assign>
<var>${line_count}</var>
</assign>
<msg timestamp="20170907 23:53:35.693" level="INFO">1 lines</msg>
<msg timestamp="20170907 23:53:35.693" level="INFO">${line_count} = 1</msg>
<status status="PASS" endtime="20170907 23:53:35.693" starttime="20170907 23:53:35.693"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${line_count}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20170907 23:53:35.694" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20170907 23:53:35.694" level="FAIL">1 != 2</msg>
<status status="FAIL" endtime="20170907 23:53:35.694" starttime="20170907 23:53:35.693"></status>
</kw>
<status status="FAIL" endtime="20170907 23:53:35.694" starttime="20170907 23:53:35.682"></status>
</kw>
<kw name="Check XtremWeb Server Start From Log" library="XWServer">
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<kw name="Log XtremWeb Process Log File" library="XWServer">
<kw name="Log File" library="OperatingSystem">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<msg timestamp="20170907 23:53:40.699" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170907 23:53:40.701" level="INFO">Thu Sep  7 23:53:30 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : checking launch url
Thu Sep  7 23:53:30 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] WARNING : no launcher URL defined
Thu Sep  7 23:53:30 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : launching SmartSockets hub
[07/Sep/2017:23:53:33 +0000] [main_1] ERROR : setRole : role redefined ?! (was SERVER)
[07/Sep/2017:23:53:34 +0000] [xtremweb.database.DBConnPoolThread_main_1] INFO : Connection to database jdbc:mysql://localhost/xtremweb is ok, 70 created
[07/Sep/2017:23:53:34 +0000] [xtremweb.dispatcher.DBInterface_main_1] WARN : Can't retrieve any app
[07/Sep/2017:23:53:34 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't create ProxyValidator
[07/Sep/2017:23:53:34 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.io.FileNotFoundException: /tmp/castore (No such file or directory) (/tmp/castore (No such file or directory))
[07/Sep/2017:23:53:34 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't add CA certificates to keystore
[07/Sep/2017:23:53:34 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.lang.NullPointerException (null)
[07/Sep/2017:23:53:34 +0000] [xtremweb.dispatcher.HashTaskSet_TaskSet_14] INFO : TaskSet started (300000)
[07/Sep/2017:23:53:35 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : still waiting task set...
[07/Sep/2017:23:53:35 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : UDP server not started
[07/Sep/2017:23:53:35 +0000] [xtremweb.communications.TCPServer_TCPServerNIO_15] INFO : started, listening on port : 4321
log4j:WARN No appenders could be found for logger (org.eclipse.jetty.util.log).
log4j:WARN Please initialize the log4j system properly.
log4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.
[07/Sep/2017:23:53:35 +0000] [xtremweb.communications.HTTPServer_main_1] INFO : started, listening on port : 9443
[07/Sep/2017:23:53:35 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : FACEBOOK : java.net.MalformedURLException: no protocol: 
[07/Sep/2017:23:53:35 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : GOOGLE : java.net.MalformedURLException: no protocol: 
[07/Sep/2017:23:53:35 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : TWITTER : java.net.MalformedURLException: no protocol: 
[07/Sep/2017:23:53:35 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : YAHOO : java.net.MalformedURLException: no protocol: 
[07/Sep/2017:23:53:35 +0000] [main_1] ERROR : Can't add new entry to keystore
[07/Sep/2017:23:53:35 +0000] [main_1] WARN : javax.net.ssl.SSLHandshakeException: sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target (sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target)
[07/Sep/2017:23:53:35 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : XWHEP Dispatcher(10.6.0-head) started [Thu Sep 07 23:53:35 UTC 2017]
[07/Sep/2017:23:53:35 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : DB vendor  = mysql
[07/Sep/2017:23:53:35 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : mileStone  = 
[07/Sep/2017:23:53:35 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Time out   = 15000
[07/Sep/2017:23:53:35 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Disk opt'd = true
[07/Sep/2017:23:53:35 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Net  opt'd = true
[07/Sep/2017:23:53:35 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : NIO        = true
XWHEP Dispatcher started  Thu Sep 07 23:53:35 UTC 2017
Name             : vagrant-ubuntu-trusty-64
Version          : 10.6.0-head
Identity         : 
XWRole           : SERVER
Started on       : Thu Sep 07 23:53:33 UTC 2017
Scheduler        : xtremweb.dispatcher.MatchingScheduler
SmartSockets hub : 172.28.128.3/172.17.0.1/10.0.2.15-4329#fe.2c.64.bb.cb.7c.00.00.14.02.02.42.bc.fb.75.e4~vagrant
Server HTTP      : true
Alive            : 300
Alive time out   : 900
Polling time out : 15000
Optimize zip     : true
Optimize network : true
NIO              : true
Comm layer       : xtremweb.communications.TCPClient
Socket time out  : 60000
Socket retries   : 50
Max connections  : 200
TCP port         : 4321
UDP port         : 4323
HTPP  port       : 80
HTPPS port       : 9443
Sun RPC interposition port : 4328
Sandbox path : /usr/bin/lxc
Sandbox launch args : 
Host &lt;host&gt;&lt;uid&gt;8106e881-63a3-45e7-9d6b-d1b72d26189d&lt;/uid&gt;&lt;accessrights&gt;0x755&lt;/accessrights&gt;&lt;name&gt;vagrant-ubuntu-trusty-64&lt;/name&gt;&lt;cpuload&gt;50&lt;/cpuload&gt;&lt;natedipaddr&gt;10.0.2.15&lt;/natedipaddr&gt;&lt;ipaddr&gt;10.0.2.15&lt;/ipaddr&gt;&lt;hwaddr&gt;&lt;/hwaddr&gt;&lt;timezone&gt;Etc/UTC&lt;/timezone&gt;&lt;os&gt;LINUX&lt;/os&gt;&lt;osversion&gt;3.13.0-129-generic&lt;/osversion&gt;&lt;javaversion&gt;1.8.0_141&lt;/javaversion&gt;&lt;javadatamodel&gt;64&lt;/javadatamodel&gt;&lt;cputype&gt;AMD64&lt;/cputype&gt;&lt;cpunb&gt;1&lt;/cpunb&gt;&lt;cpumodel&gt;unknown&lt;/cpumodel&gt;&lt;cpuspeed&gt;0&lt;/cpuspeed&gt;&lt;totalmem&gt;0&lt;/totalmem&gt;&lt;totalswap&gt;0&lt;/totalswap&gt;&lt;totaltmp&gt;40284&lt;/totaltmp&gt;&lt;freetmp&gt;37110&lt;/freetmp&gt;&lt;project&gt;&lt;/project&gt;&lt;active&gt;true&lt;/active&gt;&lt;incomingconnections&gt;false&lt;/incomingconnections&gt;&lt;available&gt;false&lt;/available&gt;&lt;pilotjob&gt;false&lt;/pilotjob&gt;&lt;sgid&gt;&lt;/sgid&gt;&lt;timeout&gt;15000&lt;/timeout&gt;&lt;traces&gt;false&lt;/traces&gt;&lt;acceptbin&gt;false&lt;/acceptbin&gt;&lt;version&gt;10.6.0-head&lt;/version&gt;&lt;/host&gt;
[07/Sep/2017:23:53:35 +0000] [xtremweb.communications.HTTPServer_HTTPServer_218] INFO : started, listening on port : 9443
</msg>
<status status="PASS" endtime="20170907 23:53:40.701" starttime="20170907 23:53:40.698"></status>
</kw>
<status status="PASS" endtime="20170907 23:53:40.701" starttime="20170907 23:53:40.697"></status>
</kw>
<kw name="Grep File" library="OperatingSystem">
<doc>Returns the lines of the specified file that match the ``pattern``.</doc>
<arguments>
<arg>${log}</arg>
<arg>listening on port : ${XWCONFIGURE.VALUES.HTTPSPORT}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20170907 23:53:40.702" html="yes" level="INFO">Reading file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170907 23:53:40.702" level="INFO">2 out of 59 lines matched</msg>
<msg timestamp="20170907 23:53:40.703" level="INFO">${ret} = [07/Sep/2017:23:53:35 +0000] [xtremweb.communications.HTTPServer_main_1] INFO : started, listening on port : 9443
[07/Sep/2017:23:53:35 +0000] [xtremweb.communications.HTTPServer_HTTPServer_218] INFO ...</msg>
<status status="PASS" endtime="20170907 23:53:40.703" starttime="20170907 23:53:40.701"></status>
</kw>
<kw name="Get Line Count" library="String">
<doc>Returns and logs the number of lines in the given string.</doc>
<arguments>
<arg>${ret}</arg>
</arguments>
<assign>
<var>${line_count}</var>
</assign>
<msg timestamp="20170907 23:53:40.703" level="INFO">2 lines</msg>
<msg timestamp="20170907 23:53:40.704" level="INFO">${line_count} = 2</msg>
<status status="PASS" endtime="20170907 23:53:40.704" starttime="20170907 23:53:40.703"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${line_count}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20170907 23:53:40.704" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170907 23:53:40.704" starttime="20170907 23:53:40.704"></status>
</kw>
<status status="PASS" endtime="20170907 23:53:40.704" starttime="20170907 23:53:40.696"></status>
</kw>
<status status="PASS" endtime="20170907 23:53:40.704" starttime="20170907 23:53:30.669"></status>
</kw>
<kw name="Log XtremWeb Process Log File" library="XWServer">
<kw name="Log File" library="OperatingSystem">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<msg timestamp="20170907 23:53:40.705" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170907 23:53:40.706" level="INFO">Thu Sep  7 23:53:30 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : checking launch url
Thu Sep  7 23:53:30 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] WARNING : no launcher URL defined
Thu Sep  7 23:53:30 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : launching SmartSockets hub
[07/Sep/2017:23:53:33 +0000] [main_1] ERROR : setRole : role redefined ?! (was SERVER)
[07/Sep/2017:23:53:34 +0000] [xtremweb.database.DBConnPoolThread_main_1] INFO : Connection to database jdbc:mysql://localhost/xtremweb is ok, 70 created
[07/Sep/2017:23:53:34 +0000] [xtremweb.dispatcher.DBInterface_main_1] WARN : Can't retrieve any app
[07/Sep/2017:23:53:34 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't create ProxyValidator
[07/Sep/2017:23:53:34 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.io.FileNotFoundException: /tmp/castore (No such file or directory) (/tmp/castore (No such file or directory))
[07/Sep/2017:23:53:34 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't add CA certificates to keystore
[07/Sep/2017:23:53:34 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.lang.NullPointerException (null)
[07/Sep/2017:23:53:34 +0000] [xtremweb.dispatcher.HashTaskSet_TaskSet_14] INFO : TaskSet started (300000)
[07/Sep/2017:23:53:35 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : still waiting task set...
[07/Sep/2017:23:53:35 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : UDP server not started
[07/Sep/2017:23:53:35 +0000] [xtremweb.communications.TCPServer_TCPServerNIO_15] INFO : started, listening on port : 4321
log4j:WARN No appenders could be found for logger (org.eclipse.jetty.util.log).
log4j:WARN Please initialize the log4j system properly.
log4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.
[07/Sep/2017:23:53:35 +0000] [xtremweb.communications.HTTPServer_main_1] INFO : started, listening on port : 9443
[07/Sep/2017:23:53:35 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : FACEBOOK : java.net.MalformedURLException: no protocol: 
[07/Sep/2017:23:53:35 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : GOOGLE : java.net.MalformedURLException: no protocol: 
[07/Sep/2017:23:53:35 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : TWITTER : java.net.MalformedURLException: no protocol: 
[07/Sep/2017:23:53:35 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : YAHOO : java.net.MalformedURLException: no protocol: 
[07/Sep/2017:23:53:35 +0000] [main_1] ERROR : Can't add new entry to keystore
[07/Sep/2017:23:53:35 +0000] [main_1] WARN : javax.net.ssl.SSLHandshakeException: sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target (sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target)
[07/Sep/2017:23:53:35 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : XWHEP Dispatcher(10.6.0-head) started [Thu Sep 07 23:53:35 UTC 2017]
[07/Sep/2017:23:53:35 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : DB vendor  = mysql
[07/Sep/2017:23:53:35 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : mileStone  = 
[07/Sep/2017:23:53:35 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Time out   = 15000
[07/Sep/2017:23:53:35 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Disk opt'd = true
[07/Sep/2017:23:53:35 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Net  opt'd = true
[07/Sep/2017:23:53:35 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : NIO        = true
XWHEP Dispatcher started  Thu Sep 07 23:53:35 UTC 2017
Name             : vagrant-ubuntu-trusty-64
Version          : 10.6.0-head
Identity         : 
XWRole           : SERVER
Started on       : Thu Sep 07 23:53:33 UTC 2017
Scheduler        : xtremweb.dispatcher.MatchingScheduler
SmartSockets hub : 172.28.128.3/172.17.0.1/10.0.2.15-4329#fe.2c.64.bb.cb.7c.00.00.14.02.02.42.bc.fb.75.e4~vagrant
Server HTTP      : true
Alive            : 300
Alive time out   : 900
Polling time out : 15000
Optimize zip     : true
Optimize network : true
NIO              : true
Comm layer       : xtremweb.communications.TCPClient
Socket time out  : 60000
Socket retries   : 50
Max connections  : 200
TCP port         : 4321
UDP port         : 4323
HTPP  port       : 80
HTPPS port       : 9443
Sun RPC interposition port : 4328
Sandbox path : /usr/bin/lxc
Sandbox launch args : 
Host &lt;host&gt;&lt;uid&gt;8106e881-63a3-45e7-9d6b-d1b72d26189d&lt;/uid&gt;&lt;accessrights&gt;0x755&lt;/accessrights&gt;&lt;name&gt;vagrant-ubuntu-trusty-64&lt;/name&gt;&lt;cpuload&gt;50&lt;/cpuload&gt;&lt;natedipaddr&gt;10.0.2.15&lt;/natedipaddr&gt;&lt;ipaddr&gt;10.0.2.15&lt;/ipaddr&gt;&lt;hwaddr&gt;&lt;/hwaddr&gt;&lt;timezone&gt;Etc/UTC&lt;/timezone&gt;&lt;os&gt;LINUX&lt;/os&gt;&lt;osversion&gt;3.13.0-129-generic&lt;/osversion&gt;&lt;javaversion&gt;1.8.0_141&lt;/javaversion&gt;&lt;javadatamodel&gt;64&lt;/javadatamodel&gt;&lt;cputype&gt;AMD64&lt;/cputype&gt;&lt;cpunb&gt;1&lt;/cpunb&gt;&lt;cpumodel&gt;unknown&lt;/cpumodel&gt;&lt;cpuspeed&gt;0&lt;/cpuspeed&gt;&lt;totalmem&gt;0&lt;/totalmem&gt;&lt;totalswap&gt;0&lt;/totalswap&gt;&lt;totaltmp&gt;40284&lt;/totaltmp&gt;&lt;freetmp&gt;37110&lt;/freetmp&gt;&lt;project&gt;&lt;/project&gt;&lt;active&gt;true&lt;/active&gt;&lt;incomingconnections&gt;false&lt;/incomingconnections&gt;&lt;available&gt;false&lt;/available&gt;&lt;pilotjob&gt;false&lt;/pilotjob&gt;&lt;sgid&gt;&lt;/sgid&gt;&lt;timeout&gt;15000&lt;/timeout&gt;&lt;traces&gt;false&lt;/traces&gt;&lt;acceptbin&gt;false&lt;/acceptbin&gt;&lt;version&gt;10.6.0-head&lt;/version&gt;&lt;/host&gt;
[07/Sep/2017:23:53:35 +0000] [xtremweb.communications.HTTPServer_HTTPServer_218] INFO : started, listening on port : 9443
</msg>
<status status="PASS" endtime="20170907 23:53:40.706" starttime="20170907 23:53:40.705"></status>
</kw>
<status status="PASS" endtime="20170907 23:53:40.706" starttime="20170907 23:53:40.704"></status>
</kw>
<status status="PASS" endtime="20170907 23:53:40.706" starttime="20170907 23:53:30.648"></status>
</kw>
<kw name="Start XtremWeb Worker" library="XWWorker">
<arguments>
<arg>${DIST_XWHEP_PATH}</arg>
</arguments>
<kw name="File Should Exist" library="OperatingSystem">
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xtremweb.worker.conf</arg>
</arguments>
<msg timestamp="20170907 23:53:40.708" html="yes" level="INFO">File '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf&lt;/a&gt;' exists.</msg>
<status status="PASS" endtime="20170907 23:53:40.708" starttime="20170907 23:53:40.707"></status>
</kw>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xtremweb.worker.conf</arg>
</arguments>
<assign>
<var>${config_content}</var>
</assign>
<msg timestamp="20170907 23:53:40.709" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf&lt;/a&gt;'.</msg>
<msg timestamp="20170907 23:53:40.710" level="INFO">${config_content} = ## XWHEP configuration file
# XWHEP version : 10.6.0-head
# Saved on Thu Sep 07 23:52:53 UTC 2017
#Thu Sep 07 23:52:53 UTC 2017
X509USERPROXY=
SHAREDDATAS=
COMMHANDLERS=attic\:xtremweb.communications....</msg>
<status status="PASS" endtime="20170907 23:53:40.710" starttime="20170907 23:53:40.708"></status>
</kw>
<kw name="Remove String Using Regexp" library="String">
<doc>Removes ``patterns`` from the given ``string``.</doc>
<arguments>
<arg>${config_content}</arg>
<arg>LAUNCHERURL=${XWCONFIGURE.VALUES.XWUPGRADEURL}</arg>
</arguments>
<assign>
<var>${config_content_filtered}</var>
</assign>
<msg timestamp="20170907 23:53:40.710" level="INFO">${config_content_filtered} = ## XWHEP configuration file
# XWHEP version : 10.6.0-head
# Saved on Thu Sep 07 23:52:53 UTC 2017
#Thu Sep 07 23:52:53 UTC 2017
X509USERPROXY=
SHAREDDATAS=
COMMHANDLERS=attic\:xtremweb.communications....</msg>
<status status="PASS" endtime="20170907 23:53:40.710" starttime="20170907 23:53:40.710"></status>
</kw>
<kw name="Create File" library="OperatingSystem">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xtremweb.worker.conf</arg>
<arg>content=${config_content_filtered}</arg>
</arguments>
<msg timestamp="20170907 23:53:40.712" html="yes" level="INFO">Created file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170907 23:53:40.712" starttime="20170907 23:53:40.710"></status>
</kw>
<kw name="Remove File" library="OperatingSystem">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.worker.process.log</arg>
</arguments>
<msg timestamp="20170907 23:53:40.713" html="yes" level="INFO">Removed file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.worker.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.worker.process.log&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170907 23:53:40.713" starttime="20170907 23:53:40.712"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/bin/xtremweb.worker console</arg>
<arg>shell=yes</arg>
<arg>stderr=STDOUT</arg>
<arg>stdout=${DIST_XWHEP_PATH}/xwhep.worker.process.log</arg>
</arguments>
<assign>
<var>${created_process}</var>
</assign>
<msg timestamp="20170907 23:53:40.715" level="INFO">Starting process:
/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/xtremweb.worker console</msg>
<msg timestamp="20170907 23:53:40.719" level="INFO">${created_process} = 85</msg>
<status status="PASS" endtime="20170907 23:53:40.719" starttime="20170907 23:53:40.714"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${WORKER_PROCESS}</arg>
<arg>${created_process}</arg>
</arguments>
<msg timestamp="20170907 23:53:40.720" level="INFO">${WORKER_PROCESS} = 85</msg>
<status status="PASS" endtime="20170907 23:53:40.720" starttime="20170907 23:53:40.719"></status>
</kw>
<kw name="Log File" library="OperatingSystem">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.worker.process.log</arg>
</arguments>
<msg timestamp="20170907 23:53:40.720" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.worker.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.worker.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170907 23:53:40.722" level="INFO"></msg>
<status status="PASS" endtime="20170907 23:53:40.722" starttime="20170907 23:53:40.720"></status>
</kw>
<status status="PASS" endtime="20170907 23:53:40.722" starttime="20170907 23:53:40.707"></status>
</kw>
<status status="PASS" endtime="20170907 23:53:40.722" starttime="20170907 23:53:30.525"></status>
</kw>
<status status="PASS" endtime="20170907 23:53:40.723" starttime="20170907 23:53:30.239"></status>
</kw>
<kw name="XWSENDAPPCommand" library="XWClient">
<doc>Usage : SENDAPP appName appType cpuType osName URI | UID : inserts/updates an application; URI or UID points to binary file ; application name must be the first parameter</doc>
<arguments>
<arg>ls</arg>
<arg>DEPLOYABLE</arg>
<arg>LINUX</arg>
<arg>AMD64</arg>
<arg>/bin/ls</arg>
</arguments>
<assign>
<var>${uid}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd ${DIST_XWHEP_PATH}/bin &amp;&amp; ./xwsendapp ${appName} ${appType} ${cpuType} ${osName} ${uri-udi}</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${cmd_result}</var>
</assign>
<msg timestamp="20170907 23:53:40.727" level="INFO">Starting process:
cd /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin &amp;&amp; ./xwsendapp ls DEPLOYABLE LINUX AMD64 /bin/ls</msg>
<msg timestamp="20170907 23:53:40.731" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170907 23:53:42.757" level="INFO">Process completed.</msg>
<msg timestamp="20170907 23:53:42.757" level="INFO">${cmd_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170907 23:53:42.757" starttime="20170907 23:53:40.726"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stderr}</arg>
</arguments>
<msg timestamp="20170907 23:53:42.758" level="INFO"></msg>
<status status="PASS" endtime="20170907 23:53:42.759" starttime="20170907 23:53:42.758"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
</arguments>
<msg timestamp="20170907 23:53:42.760" level="INFO">xw://vagrant-ubuntu-trusty-64/7f3f6e2e-4317-48b7-9710-a78a9e11d463</msg>
<status status="PASS" endtime="20170907 23:53:42.760" starttime="20170907 23:53:42.759"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${cmd_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170907 23:53:42.761" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170907 23:53:42.761" starttime="20170907 23:53:42.760"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
<arg>-36</arg>
</arguments>
<assign>
<var>${uid}</var>
</assign>
<msg timestamp="20170907 23:53:42.762" level="INFO">${uid} = 7f3f6e2e-4317-48b7-9710-a78a9e11d463</msg>
<status status="PASS" endtime="20170907 23:53:42.762" starttime="20170907 23:53:42.761"></status>
</kw>
<msg timestamp="20170907 23:53:42.762" level="INFO">${uid} = 7f3f6e2e-4317-48b7-9710-a78a9e11d463</msg>
<status status="PASS" endtime="20170907 23:53:42.762" starttime="20170907 23:53:40.724"></status>
</kw>
<kw name="Count From Apps Where Uid" library="XWServer">
<arguments>
<arg>${uid}</arg>
<arg>1</arg>
</arguments>
<kw name="Count From Table Where Uid" library="MySql">
<arguments>
<arg>apps</arg>
<arg>${uid}</arg>
<arg>${countExpected}</arg>
</arguments>
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170907 23:53:42.764" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170907 23:53:42.766" starttime="20170907 23:53:42.764"></status>
</kw>
<status status="PASS" endtime="20170907 23:53:42.766" starttime="20170907 23:53:42.764"></status>
</kw>
<kw name="Row Count Is Equal To X" library="DatabaseLibrary">
<doc>Check if the number of rows returned from `selectStatement` is equal to the value submitted. If not, then this</doc>
<arguments>
<arg>SELECT * FROM ${table} WHERE uid = '${uid}'</arg>
<arg>${countExpected}</arg>
</arguments>
<msg timestamp="20170907 23:53:42.766" level="INFO">Executing : Row Count Is Equal To X  |  SELECT * FROM apps WHERE uid = '7f3f6e2e-4317-48b7-9710-a78a9e11d463'  |  1 </msg>
<msg timestamp="20170907 23:53:42.766" level="INFO">Executing : Row Count  |  SELECT * FROM apps WHERE uid = '7f3f6e2e-4317-48b7-9710-a78a9e11d463' </msg>
<status status="PASS" endtime="20170907 23:53:42.768" starttime="20170907 23:53:42.766"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170907 23:53:42.769" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170907 23:53:42.769" starttime="20170907 23:53:42.769"></status>
</kw>
<status status="PASS" endtime="20170907 23:53:42.769" starttime="20170907 23:53:42.768"></status>
</kw>
<status status="PASS" endtime="20170907 23:53:42.769" starttime="20170907 23:53:42.763"></status>
</kw>
<status status="PASS" endtime="20170907 23:53:42.770" starttime="20170907 23:53:42.763"></status>
</kw>
<kw name="XWSUBMITCommand" library="XWClient">
<doc>Usage : XWSUBMIT appName</doc>
<arguments>
<arg>ls -atr</arg>
</arguments>
<assign>
<var>${workuid}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd ${DIST_XWHEP_PATH}/bin &amp;&amp; ./xwsubmit ${appName}</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${cmd_result}</var>
</assign>
<msg timestamp="20170907 23:53:42.772" level="INFO">Starting process:
cd /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin &amp;&amp; ./xwsubmit ls -atr</msg>
<msg timestamp="20170907 23:53:42.775" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170907 23:53:43.931" level="INFO">Process completed.</msg>
<msg timestamp="20170907 23:53:43.931" level="INFO">${cmd_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170907 23:53:43.931" starttime="20170907 23:53:42.771"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stderr}</arg>
</arguments>
<msg timestamp="20170907 23:53:43.932" level="INFO"></msg>
<status status="PASS" endtime="20170907 23:53:43.932" starttime="20170907 23:53:43.932"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
</arguments>
<msg timestamp="20170907 23:53:43.933" level="INFO">xw://vagrant-ubuntu-trusty-64/021a46ac-b7ba-482a-b266-8ba836664722</msg>
<status status="PASS" endtime="20170907 23:53:43.934" starttime="20170907 23:53:43.933"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${cmd_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170907 23:53:43.934" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170907 23:53:43.934" starttime="20170907 23:53:43.934"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
<arg>-36</arg>
</arguments>
<assign>
<var>${uid}</var>
</assign>
<msg timestamp="20170907 23:53:43.935" level="INFO">${uid} = 021a46ac-b7ba-482a-b266-8ba836664722</msg>
<status status="PASS" endtime="20170907 23:53:43.935" starttime="20170907 23:53:43.934"></status>
</kw>
<msg timestamp="20170907 23:53:43.935" level="INFO">${workuid} = 021a46ac-b7ba-482a-b266-8ba836664722</msg>
<status status="PASS" endtime="20170907 23:53:43.935" starttime="20170907 23:53:42.770"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${workuid}</arg>
</arguments>
<msg timestamp="20170907 23:53:43.936" level="INFO">021a46ac-b7ba-482a-b266-8ba836664722</msg>
<status status="PASS" endtime="20170907 23:53:43.936" starttime="20170907 23:53:43.935"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3 min</arg>
<arg>5 sec</arg>
<arg>XWClient.Check XWSTATUS Completed</arg>
<arg>${workuid}</arg>
</arguments>
<kw name="Check XWSTATUS Completed" library="XWClient">
<arguments>
<arg>${workuid}</arg>
</arguments>
<kw name="XWSTATUSCommand" library="XWClient">
<doc>Usage : XWSTATUS uid</doc>
<arguments>
<arg>${uid}</arg>
</arguments>
<assign>
<var>${status_result}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd ${DIST_XWHEP_PATH}/bin &amp;&amp; ./xwstatus ${uid}</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${cmd_result}</var>
</assign>
<msg timestamp="20170907 23:53:43.938" level="INFO">Starting process:
cd /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin &amp;&amp; ./xwstatus 021a46ac-b7ba-482a-b266-8ba836664722</msg>
<msg timestamp="20170907 23:53:43.943" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170907 23:53:44.883" level="INFO">Process completed.</msg>
<msg timestamp="20170907 23:53:44.884" level="INFO">${cmd_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170907 23:53:44.884" starttime="20170907 23:53:43.938"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stderr}</arg>
</arguments>
<msg timestamp="20170907 23:53:44.884" level="INFO"></msg>
<status status="PASS" endtime="20170907 23:53:44.885" starttime="20170907 23:53:44.884"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
</arguments>
<msg timestamp="20170907 23:53:44.885" level="INFO"> UID='021a46ac-b7ba-482a-b266-8ba836664722', STATUS='PENDING', COMPLETEDDATE=NULL, LABEL=NULL</msg>
<status status="PASS" endtime="20170907 23:53:44.885" starttime="20170907 23:53:44.885"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${cmd_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170907 23:53:44.886" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170907 23:53:44.886" starttime="20170907 23:53:44.885"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
<arg>STATUS='(?P&lt;status&gt;.*)', COMPLETEDDATE</arg>
<arg>status</arg>
</arguments>
<assign>
<var>@{status_result}</var>
</assign>
<msg timestamp="20170907 23:53:44.886" level="INFO">@{status_result} = [ PENDING ]</msg>
<status status="PASS" endtime="20170907 23:53:44.886" starttime="20170907 23:53:44.886"></status>
</kw>
<msg timestamp="20170907 23:53:44.887" level="INFO">${status_result} = PENDING</msg>
<status status="PASS" endtime="20170907 23:53:44.887" starttime="20170907 23:53:43.937"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${status_result}</arg>
<arg>COMPLETED</arg>
</arguments>
<msg timestamp="20170907 23:53:44.887" level="FAIL">PENDING != COMPLETED</msg>
<status status="FAIL" endtime="20170907 23:53:44.887" starttime="20170907 23:53:44.887"></status>
</kw>
<status status="FAIL" endtime="20170907 23:53:44.888" starttime="20170907 23:53:43.937"></status>
</kw>
<kw name="Check XWSTATUS Completed" library="XWClient">
<arguments>
<arg>${workuid}</arg>
</arguments>
<kw name="XWSTATUSCommand" library="XWClient">
<doc>Usage : XWSTATUS uid</doc>
<arguments>
<arg>${uid}</arg>
</arguments>
<assign>
<var>${status_result}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd ${DIST_XWHEP_PATH}/bin &amp;&amp; ./xwstatus ${uid}</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${cmd_result}</var>
</assign>
<msg timestamp="20170907 23:53:49.892" level="INFO">Starting process:
cd /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin &amp;&amp; ./xwstatus 021a46ac-b7ba-482a-b266-8ba836664722</msg>
<msg timestamp="20170907 23:53:49.895" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170907 23:53:50.856" level="INFO">Process completed.</msg>
<msg timestamp="20170907 23:53:50.856" level="INFO">${cmd_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170907 23:53:50.856" starttime="20170907 23:53:49.891"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stderr}</arg>
</arguments>
<msg timestamp="20170907 23:53:50.858" level="INFO"></msg>
<status status="PASS" endtime="20170907 23:53:50.858" starttime="20170907 23:53:50.857"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
</arguments>
<msg timestamp="20170907 23:53:50.859" level="INFO"> UID='021a46ac-b7ba-482a-b266-8ba836664722', STATUS='PENDING', COMPLETEDDATE=NULL, LABEL=NULL</msg>
<status status="PASS" endtime="20170907 23:53:50.859" starttime="20170907 23:53:50.858"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${cmd_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170907 23:53:50.860" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170907 23:53:50.860" starttime="20170907 23:53:50.859"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
<arg>STATUS='(?P&lt;status&gt;.*)', COMPLETEDDATE</arg>
<arg>status</arg>
</arguments>
<assign>
<var>@{status_result}</var>
</assign>
<msg timestamp="20170907 23:53:50.861" level="INFO">@{status_result} = [ PENDING ]</msg>
<status status="PASS" endtime="20170907 23:53:50.862" starttime="20170907 23:53:50.860"></status>
</kw>
<msg timestamp="20170907 23:53:50.862" level="INFO">${status_result} = PENDING</msg>
<status status="PASS" endtime="20170907 23:53:50.862" starttime="20170907 23:53:49.891"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${status_result}</arg>
<arg>COMPLETED</arg>
</arguments>
<msg timestamp="20170907 23:53:50.863" level="FAIL">PENDING != COMPLETED</msg>
<status status="FAIL" endtime="20170907 23:53:50.864" starttime="20170907 23:53:50.862"></status>
</kw>
<status status="FAIL" endtime="20170907 23:53:50.864" starttime="20170907 23:53:49.890"></status>
</kw>
<kw name="Check XWSTATUS Completed" library="XWClient">
<arguments>
<arg>${workuid}</arg>
</arguments>
<kw name="XWSTATUSCommand" library="XWClient">
<doc>Usage : XWSTATUS uid</doc>
<arguments>
<arg>${uid}</arg>
</arguments>
<assign>
<var>${status_result}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd ${DIST_XWHEP_PATH}/bin &amp;&amp; ./xwstatus ${uid}</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${cmd_result}</var>
</assign>
<msg timestamp="20170907 23:53:55.869" level="INFO">Starting process:
cd /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin &amp;&amp; ./xwstatus 021a46ac-b7ba-482a-b266-8ba836664722</msg>
<msg timestamp="20170907 23:53:55.875" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170907 23:53:56.828" level="INFO">Process completed.</msg>
<msg timestamp="20170907 23:53:56.828" level="INFO">${cmd_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170907 23:53:56.829" starttime="20170907 23:53:55.868"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stderr}</arg>
</arguments>
<msg timestamp="20170907 23:53:56.830" level="INFO"></msg>
<status status="PASS" endtime="20170907 23:53:56.830" starttime="20170907 23:53:56.829"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
</arguments>
<msg timestamp="20170907 23:53:56.831" level="INFO"> UID='021a46ac-b7ba-482a-b266-8ba836664722', STATUS='PENDING', COMPLETEDDATE=NULL, LABEL=NULL</msg>
<status status="PASS" endtime="20170907 23:53:56.832" starttime="20170907 23:53:56.831"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${cmd_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170907 23:53:56.832" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170907 23:53:56.833" starttime="20170907 23:53:56.832"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
<arg>STATUS='(?P&lt;status&gt;.*)', COMPLETEDDATE</arg>
<arg>status</arg>
</arguments>
<assign>
<var>@{status_result}</var>
</assign>
<msg timestamp="20170907 23:53:56.833" level="INFO">@{status_result} = [ PENDING ]</msg>
<status status="PASS" endtime="20170907 23:53:56.833" starttime="20170907 23:53:56.833"></status>
</kw>
<msg timestamp="20170907 23:53:56.834" level="INFO">${status_result} = PENDING</msg>
<status status="PASS" endtime="20170907 23:53:56.834" starttime="20170907 23:53:55.867"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${status_result}</arg>
<arg>COMPLETED</arg>
</arguments>
<msg timestamp="20170907 23:53:56.834" level="FAIL">PENDING != COMPLETED</msg>
<status status="FAIL" endtime="20170907 23:53:56.834" starttime="20170907 23:53:56.834"></status>
</kw>
<status status="FAIL" endtime="20170907 23:53:56.835" starttime="20170907 23:53:55.866"></status>
</kw>
<kw name="Check XWSTATUS Completed" library="XWClient">
<arguments>
<arg>${workuid}</arg>
</arguments>
<kw name="XWSTATUSCommand" library="XWClient">
<doc>Usage : XWSTATUS uid</doc>
<arguments>
<arg>${uid}</arg>
</arguments>
<assign>
<var>${status_result}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd ${DIST_XWHEP_PATH}/bin &amp;&amp; ./xwstatus ${uid}</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${cmd_result}</var>
</assign>
<msg timestamp="20170907 23:54:01.839" level="INFO">Starting process:
cd /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin &amp;&amp; ./xwstatus 021a46ac-b7ba-482a-b266-8ba836664722</msg>
<msg timestamp="20170907 23:54:01.842" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170907 23:54:02.815" level="INFO">Process completed.</msg>
<msg timestamp="20170907 23:54:02.816" level="INFO">${cmd_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170907 23:54:02.816" starttime="20170907 23:54:01.838"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stderr}</arg>
</arguments>
<msg timestamp="20170907 23:54:02.817" level="INFO"></msg>
<status status="PASS" endtime="20170907 23:54:02.817" starttime="20170907 23:54:02.817"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
</arguments>
<msg timestamp="20170907 23:54:02.818" level="INFO"> UID='021a46ac-b7ba-482a-b266-8ba836664722', STATUS='RUNNING', COMPLETEDDATE=NULL, LABEL=NULL</msg>
<status status="PASS" endtime="20170907 23:54:02.818" starttime="20170907 23:54:02.817"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${cmd_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170907 23:54:02.818" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170907 23:54:02.818" starttime="20170907 23:54:02.818"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
<arg>STATUS='(?P&lt;status&gt;.*)', COMPLETEDDATE</arg>
<arg>status</arg>
</arguments>
<assign>
<var>@{status_result}</var>
</assign>
<msg timestamp="20170907 23:54:02.819" level="INFO">@{status_result} = [ RUNNING ]</msg>
<status status="PASS" endtime="20170907 23:54:02.819" starttime="20170907 23:54:02.818"></status>
</kw>
<msg timestamp="20170907 23:54:02.820" level="INFO">${status_result} = RUNNING</msg>
<status status="PASS" endtime="20170907 23:54:02.820" starttime="20170907 23:54:01.838"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${status_result}</arg>
<arg>COMPLETED</arg>
</arguments>
<msg timestamp="20170907 23:54:02.820" level="FAIL">RUNNING != COMPLETED</msg>
<status status="FAIL" endtime="20170907 23:54:02.820" starttime="20170907 23:54:02.820"></status>
</kw>
<status status="FAIL" endtime="20170907 23:54:02.821" starttime="20170907 23:54:01.837"></status>
</kw>
<kw name="Check XWSTATUS Completed" library="XWClient">
<arguments>
<arg>${workuid}</arg>
</arguments>
<kw name="XWSTATUSCommand" library="XWClient">
<doc>Usage : XWSTATUS uid</doc>
<arguments>
<arg>${uid}</arg>
</arguments>
<assign>
<var>${status_result}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd ${DIST_XWHEP_PATH}/bin &amp;&amp; ./xwstatus ${uid}</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${cmd_result}</var>
</assign>
<msg timestamp="20170907 23:54:07.833" level="INFO">Starting process:
cd /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin &amp;&amp; ./xwstatus 021a46ac-b7ba-482a-b266-8ba836664722</msg>
<msg timestamp="20170907 23:54:07.837" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170907 23:54:08.783" level="INFO">Process completed.</msg>
<msg timestamp="20170907 23:54:08.783" level="INFO">${cmd_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170907 23:54:08.783" starttime="20170907 23:54:07.833"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stderr}</arg>
</arguments>
<msg timestamp="20170907 23:54:08.784" level="INFO"></msg>
<status status="PASS" endtime="20170907 23:54:08.784" starttime="20170907 23:54:08.784"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
</arguments>
<msg timestamp="20170907 23:54:08.785" level="INFO"> UID='021a46ac-b7ba-482a-b266-8ba836664722', STATUS='RUNNING', COMPLETEDDATE=NULL, LABEL=NULL</msg>
<status status="PASS" endtime="20170907 23:54:08.785" starttime="20170907 23:54:08.785"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${cmd_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170907 23:54:08.785" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170907 23:54:08.785" starttime="20170907 23:54:08.785"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
<arg>STATUS='(?P&lt;status&gt;.*)', COMPLETEDDATE</arg>
<arg>status</arg>
</arguments>
<assign>
<var>@{status_result}</var>
</assign>
<msg timestamp="20170907 23:54:08.786" level="INFO">@{status_result} = [ RUNNING ]</msg>
<status status="PASS" endtime="20170907 23:54:08.786" starttime="20170907 23:54:08.786"></status>
</kw>
<msg timestamp="20170907 23:54:08.786" level="INFO">${status_result} = RUNNING</msg>
<status status="PASS" endtime="20170907 23:54:08.786" starttime="20170907 23:54:07.832"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${status_result}</arg>
<arg>COMPLETED</arg>
</arguments>
<msg timestamp="20170907 23:54:08.787" level="FAIL">RUNNING != COMPLETED</msg>
<status status="FAIL" endtime="20170907 23:54:08.787" starttime="20170907 23:54:08.786"></status>
</kw>
<status status="FAIL" endtime="20170907 23:54:08.787" starttime="20170907 23:54:07.830"></status>
</kw>
<kw name="Check XWSTATUS Completed" library="XWClient">
<arguments>
<arg>${workuid}</arg>
</arguments>
<kw name="XWSTATUSCommand" library="XWClient">
<doc>Usage : XWSTATUS uid</doc>
<arguments>
<arg>${uid}</arg>
</arguments>
<assign>
<var>${status_result}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd ${DIST_XWHEP_PATH}/bin &amp;&amp; ./xwstatus ${uid}</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${cmd_result}</var>
</assign>
<msg timestamp="20170907 23:54:13.790" level="INFO">Starting process:
cd /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin &amp;&amp; ./xwstatus 021a46ac-b7ba-482a-b266-8ba836664722</msg>
<msg timestamp="20170907 23:54:13.793" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170907 23:54:14.835" level="INFO">Process completed.</msg>
<msg timestamp="20170907 23:54:14.836" level="INFO">${cmd_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170907 23:54:14.836" starttime="20170907 23:54:13.789"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stderr}</arg>
</arguments>
<msg timestamp="20170907 23:54:14.837" level="INFO"></msg>
<status status="PASS" endtime="20170907 23:54:14.837" starttime="20170907 23:54:14.836"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
</arguments>
<msg timestamp="20170907 23:54:14.837" level="INFO"> UID='021a46ac-b7ba-482a-b266-8ba836664722', STATUS='RUNNING', COMPLETEDDATE=NULL, LABEL=NULL</msg>
<status status="PASS" endtime="20170907 23:54:14.837" starttime="20170907 23:54:14.837"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${cmd_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170907 23:54:14.838" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170907 23:54:14.838" starttime="20170907 23:54:14.837"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
<arg>STATUS='(?P&lt;status&gt;.*)', COMPLETEDDATE</arg>
<arg>status</arg>
</arguments>
<assign>
<var>@{status_result}</var>
</assign>
<msg timestamp="20170907 23:54:14.839" level="INFO">@{status_result} = [ RUNNING ]</msg>
<status status="PASS" endtime="20170907 23:54:14.839" starttime="20170907 23:54:14.838"></status>
</kw>
<msg timestamp="20170907 23:54:14.839" level="INFO">${status_result} = RUNNING</msg>
<status status="PASS" endtime="20170907 23:54:14.839" starttime="20170907 23:54:13.789"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${status_result}</arg>
<arg>COMPLETED</arg>
</arguments>
<msg timestamp="20170907 23:54:14.840" level="FAIL">RUNNING != COMPLETED</msg>
<status status="FAIL" endtime="20170907 23:54:14.840" starttime="20170907 23:54:14.840"></status>
</kw>
<status status="FAIL" endtime="20170907 23:54:14.840" starttime="20170907 23:54:13.788"></status>
</kw>
<kw name="Check XWSTATUS Completed" library="XWClient">
<arguments>
<arg>${workuid}</arg>
</arguments>
<kw name="XWSTATUSCommand" library="XWClient">
<doc>Usage : XWSTATUS uid</doc>
<arguments>
<arg>${uid}</arg>
</arguments>
<assign>
<var>${status_result}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd ${DIST_XWHEP_PATH}/bin &amp;&amp; ./xwstatus ${uid}</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${cmd_result}</var>
</assign>
<msg timestamp="20170907 23:54:19.843" level="INFO">Starting process:
cd /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin &amp;&amp; ./xwstatus 021a46ac-b7ba-482a-b266-8ba836664722</msg>
<msg timestamp="20170907 23:54:19.846" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170907 23:54:20.735" level="INFO">Process completed.</msg>
<msg timestamp="20170907 23:54:20.736" level="INFO">${cmd_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170907 23:54:20.736" starttime="20170907 23:54:19.842"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stderr}</arg>
</arguments>
<msg timestamp="20170907 23:54:20.737" level="INFO"></msg>
<status status="PASS" endtime="20170907 23:54:20.737" starttime="20170907 23:54:20.736"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
</arguments>
<msg timestamp="20170907 23:54:20.737" level="INFO"> UID='021a46ac-b7ba-482a-b266-8ba836664722', STATUS='COMPLETED', COMPLETEDDATE='2017-09-07 23:54:17', LABEL=NULL</msg>
<status status="PASS" endtime="20170907 23:54:20.738" starttime="20170907 23:54:20.737"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${cmd_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170907 23:54:20.738" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170907 23:54:20.738" starttime="20170907 23:54:20.738"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
<arg>STATUS='(?P&lt;status&gt;.*)', COMPLETEDDATE</arg>
<arg>status</arg>
</arguments>
<assign>
<var>@{status_result}</var>
</assign>
<msg timestamp="20170907 23:54:20.739" level="INFO">@{status_result} = [ COMPLETED ]</msg>
<status status="PASS" endtime="20170907 23:54:20.739" starttime="20170907 23:54:20.738"></status>
</kw>
<msg timestamp="20170907 23:54:20.739" level="INFO">${status_result} = COMPLETED</msg>
<status status="PASS" endtime="20170907 23:54:20.739" starttime="20170907 23:54:19.842"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${status_result}</arg>
<arg>COMPLETED</arg>
</arguments>
<status status="PASS" endtime="20170907 23:54:20.740" starttime="20170907 23:54:20.740"></status>
</kw>
<status status="PASS" endtime="20170907 23:54:20.740" starttime="20170907 23:54:19.841"></status>
</kw>
<status status="PASS" endtime="20170907 23:54:20.740" starttime="20170907 23:53:43.936"></status>
</kw>
<kw name="XWRESULTSCommand" library="XWClient">
<doc>Usage : XWRESULT uid</doc>
<arguments>
<arg>${workuid}</arg>
</arguments>
<assign>
<var>${results_file}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd ${DIST_XWHEP_PATH}/bin &amp;&amp; ./xwresults ${uid}</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${cmd_result}</var>
</assign>
<msg timestamp="20170907 23:54:20.742" level="INFO">Starting process:
cd /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin &amp;&amp; ./xwresults 021a46ac-b7ba-482a-b266-8ba836664722</msg>
<msg timestamp="20170907 23:54:20.745" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170907 23:54:21.759" level="INFO">Process completed.</msg>
<msg timestamp="20170907 23:54:21.760" level="INFO">${cmd_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170907 23:54:21.760" starttime="20170907 23:54:20.741"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stderr}</arg>
</arguments>
<msg timestamp="20170907 23:54:21.761" level="INFO"></msg>
<status status="PASS" endtime="20170907 23:54:21.761" starttime="20170907 23:54:21.760"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
</arguments>
<msg timestamp="20170907 23:54:21.761" level="INFO"> UID='021a46ac-b7ba-482a-b266-8ba836664722', STATUS='COMPLETED', COMPLETEDDATE='2017-09-07 23:54:17', LABEL=NULL
[07/Sep/2017:23:54:21 +0000] [xtremweb.client.Client_main_1] INFO : Downloaded to : /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/76f33e4f-7379-4365-ae56-10c516902575_stdout.txt.txt</msg>
<status status="PASS" endtime="20170907 23:54:21.761" starttime="20170907 23:54:21.761"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${cmd_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170907 23:54:21.762" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170907 23:54:21.762" starttime="20170907 23:54:21.761"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
<arg>INFO : Downloaded to : (?P&lt;file&gt;.*)</arg>
<arg>file</arg>
</arguments>
<assign>
<var>@{results_file}</var>
</assign>
<msg timestamp="20170907 23:54:21.762" level="INFO">@{results_file} = [ /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/76f33e4f-7379-4365-ae56-10c516902575_stdout.txt.txt ]</msg>
<status status="PASS" endtime="20170907 23:54:21.763" starttime="20170907 23:54:21.762"></status>
</kw>
<msg timestamp="20170907 23:54:21.763" level="INFO">${results_file} = /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/76f33e4f-7379-4365-ae56-10c516902575_stdout.txt.txt</msg>
<status status="PASS" endtime="20170907 23:54:21.763" starttime="20170907 23:54:20.740"></status>
</kw>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${results_file}</arg>
</arguments>
<assign>
<var>${results_file_content}</var>
</assign>
<msg timestamp="20170907 23:54:21.764" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/76f33e4f-7379-4365-ae56-10c516902575_stdout.txt.txt"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/76f33e4f-7379-4365-ae56-10c516902575_stdout.txt.txt&lt;/a&gt;'.</msg>
<msg timestamp="20170907 23:54:21.764" level="INFO">${results_file_content} = ..
stdout.txt
stderr.txt
.
</msg>
<status status="PASS" endtime="20170907 23:54:21.765" starttime="20170907 23:54:21.763"></status>
</kw>
<kw name="Get Line Count" library="String">
<doc>Returns and logs the number of lines in the given string.</doc>
<arguments>
<arg>${results_file_content}</arg>
</arguments>
<assign>
<var>${results_file_content_lines_count}</var>
</assign>
<msg timestamp="20170907 23:54:21.765" level="INFO">4 lines</msg>
<msg timestamp="20170907 23:54:21.766" level="INFO">${results_file_content_lines_count} = 4</msg>
<status status="PASS" endtime="20170907 23:54:21.766" starttime="20170907 23:54:21.765"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${results_file_content_lines_count}</arg>
<arg>4</arg>
</arguments>
<msg timestamp="20170907 23:54:21.766" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170907 23:54:21.766" starttime="20170907 23:54:21.766"></status>
</kw>
<kw name="Split To Lines" library="String">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${results_file_content}</arg>
</arguments>
<assign>
<var>@{results_file_lines}</var>
</assign>
<msg timestamp="20170907 23:54:21.767" level="INFO">4 lines returned</msg>
<msg timestamp="20170907 23:54:21.768" level="INFO">@{results_file_lines} = [ .. | stdout.txt | stderr.txt | . ]</msg>
<status status="PASS" endtime="20170907 23:54:21.768" starttime="20170907 23:54:21.767"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>@{results_file_lines}[0]</arg>
<arg>..</arg>
</arguments>
<status status="PASS" endtime="20170907 23:54:21.769" starttime="20170907 23:54:21.768"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>@{results_file_lines}[1]</arg>
<arg>stdout.txt</arg>
</arguments>
<status status="PASS" endtime="20170907 23:54:21.770" starttime="20170907 23:54:21.769"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>@{results_file_lines}[2]</arg>
<arg>stderr.txt</arg>
</arguments>
<status status="PASS" endtime="20170907 23:54:21.770" starttime="20170907 23:54:21.770"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>@{results_file_lines}[3]</arg>
<arg>.</arg>
</arguments>
<status status="PASS" endtime="20170907 23:54:21.771" starttime="20170907 23:54:21.771"></status>
</kw>
<kw type="teardown" name="End XWtremWeb Command Test" library="XWCommon">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Nothing to do</arg>
</arguments>
<msg timestamp="20170907 23:54:21.772" level="INFO">Nothing to do</msg>
<status status="PASS" endtime="20170907 23:54:21.772" starttime="20170907 23:54:21.772"></status>
</kw>
<status status="PASS" endtime="20170907 23:54:21.773" starttime="20170907 23:54:21.772"></status>
</kw>
<doc>Testing XWSubmit and XWResults cmd with param</doc>
<tags>
<tag>CommandLine Tests</tag>
</tags>
<status status="PASS" endtime="20170907 23:54:21.773" critical="yes" starttime="20170907 23:53:30.237"></status>
</test>
<kw type="teardown" name="Stop XWtremWeb Server And XWtremWeb Worker" library="XWCommon">
<kw name="Stop XtremWeb Server" library="XWServer">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${SERVER_PROCESS}</arg>
</arguments>
<msg timestamp="20170907 23:54:21.775" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20170907 23:54:21.776" level="INFO">Process completed.</msg>
<status status="PASS" endtime="20170907 23:54:21.776" starttime="20170907 23:54:21.775"></status>
</kw>
<status status="PASS" endtime="20170907 23:54:21.776" starttime="20170907 23:54:21.775"></status>
</kw>
<kw name="Log XtremWeb Server" library="XWCommon">
<kw name="Log XtremWeb Process Log File" library="XWServer">
<kw name="Log File" library="OperatingSystem">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<msg timestamp="20170907 23:54:21.778" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170907 23:54:21.778" level="INFO">Thu Sep  7 23:53:30 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : checking launch url
Thu Sep  7 23:53:30 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] WARNING : no launcher URL defined
Thu Sep  7 23:53:30 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : launching SmartSockets hub
[07/Sep/2017:23:53:33 +0000] [main_1] ERROR : setRole : role redefined ?! (was SERVER)
[07/Sep/2017:23:53:34 +0000] [xtremweb.database.DBConnPoolThread_main_1] INFO : Connection to database jdbc:mysql://localhost/xtremweb is ok, 70 created
[07/Sep/2017:23:53:34 +0000] [xtremweb.dispatcher.DBInterface_main_1] WARN : Can't retrieve any app
[07/Sep/2017:23:53:34 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't create ProxyValidator
[07/Sep/2017:23:53:34 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.io.FileNotFoundException: /tmp/castore (No such file or directory) (/tmp/castore (No such file or directory))
[07/Sep/2017:23:53:34 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't add CA certificates to keystore
[07/Sep/2017:23:53:34 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.lang.NullPointerException (null)
[07/Sep/2017:23:53:34 +0000] [xtremweb.dispatcher.HashTaskSet_TaskSet_14] INFO : TaskSet started (300000)
[07/Sep/2017:23:53:35 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : still waiting task set...
[07/Sep/2017:23:53:35 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : UDP server not started
[07/Sep/2017:23:53:35 +0000] [xtremweb.communications.TCPServer_TCPServerNIO_15] INFO : started, listening on port : 4321
log4j:WARN No appenders could be found for logger (org.eclipse.jetty.util.log).
log4j:WARN Please initialize the log4j system properly.
log4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.
[07/Sep/2017:23:53:35 +0000] [xtremweb.communications.HTTPServer_main_1] INFO : started, listening on port : 9443
[07/Sep/2017:23:53:35 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : FACEBOOK : java.net.MalformedURLException: no protocol: 
[07/Sep/2017:23:53:35 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : GOOGLE : java.net.MalformedURLException: no protocol: 
[07/Sep/2017:23:53:35 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : TWITTER : java.net.MalformedURLException: no protocol: 
[07/Sep/2017:23:53:35 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : YAHOO : java.net.MalformedURLException: no protocol: 
[07/Sep/2017:23:53:35 +0000] [main_1] ERROR : Can't add new entry to keystore
[07/Sep/2017:23:53:35 +0000] [main_1] WARN : javax.net.ssl.SSLHandshakeException: sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target (sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target)
[07/Sep/2017:23:53:35 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : XWHEP Dispatcher(10.6.0-head) started [Thu Sep 07 23:53:35 UTC 2017]
[07/Sep/2017:23:53:35 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : DB vendor  = mysql
[07/Sep/2017:23:53:35 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : mileStone  = 
[07/Sep/2017:23:53:35 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Time out   = 15000
[07/Sep/2017:23:53:35 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Disk opt'd = true
[07/Sep/2017:23:53:35 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Net  opt'd = true
[07/Sep/2017:23:53:35 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : NIO        = true
XWHEP Dispatcher started  Thu Sep 07 23:53:35 UTC 2017
Name             : vagrant-ubuntu-trusty-64
Version          : 10.6.0-head
Identity         : 
XWRole           : SERVER
Started on       : Thu Sep 07 23:53:33 UTC 2017
Scheduler        : xtremweb.dispatcher.MatchingScheduler
SmartSockets hub : 172.28.128.3/172.17.0.1/10.0.2.15-4329#fe.2c.64.bb.cb.7c.00.00.14.02.02.42.bc.fb.75.e4~vagrant
Server HTTP      : true
Alive            : 300
Alive time out   : 900
Polling time out : 15000
Optimize zip     : true
Optimize network : true
NIO              : true
Comm layer       : xtremweb.communications.TCPClient
Socket time out  : 60000
Socket retries   : 50
Max connections  : 200
TCP port         : 4321
UDP port         : 4323
HTPP  port       : 80
HTPPS port       : 9443
Sun RPC interposition port : 4328
Sandbox path : /usr/bin/lxc
Sandbox launch args : 
Host &lt;host&gt;&lt;uid&gt;8106e881-63a3-45e7-9d6b-d1b72d26189d&lt;/uid&gt;&lt;accessrights&gt;0x755&lt;/accessrights&gt;&lt;name&gt;vagrant-ubuntu-trusty-64&lt;/name&gt;&lt;cpuload&gt;50&lt;/cpuload&gt;&lt;natedipaddr&gt;10.0.2.15&lt;/natedipaddr&gt;&lt;ipaddr&gt;10.0.2.15&lt;/ipaddr&gt;&lt;hwaddr&gt;&lt;/hwaddr&gt;&lt;timezone&gt;Etc/UTC&lt;/timezone&gt;&lt;os&gt;LINUX&lt;/os&gt;&lt;osversion&gt;3.13.0-129-generic&lt;/osversion&gt;&lt;javaversion&gt;1.8.0_141&lt;/javaversion&gt;&lt;javadatamodel&gt;64&lt;/javadatamodel&gt;&lt;cputype&gt;AMD64&lt;/cputype&gt;&lt;cpunb&gt;1&lt;/cpunb&gt;&lt;cpumodel&gt;unknown&lt;/cpumodel&gt;&lt;cpuspeed&gt;0&lt;/cpuspeed&gt;&lt;totalmem&gt;0&lt;/totalmem&gt;&lt;totalswap&gt;0&lt;/totalswap&gt;&lt;totaltmp&gt;40284&lt;/totaltmp&gt;&lt;freetmp&gt;37110&lt;/freetmp&gt;&lt;project&gt;&lt;/project&gt;&lt;active&gt;true&lt;/active&gt;&lt;incomingconnections&gt;false&lt;/incomingconnections&gt;&lt;available&gt;false&lt;/available&gt;&lt;pilotjob&gt;false&lt;/pilotjob&gt;&lt;sgid&gt;&lt;/sgid&gt;&lt;timeout&gt;15000&lt;/timeout&gt;&lt;traces&gt;false&lt;/traces&gt;&lt;acceptbin&gt;false&lt;/acceptbin&gt;&lt;version&gt;10.6.0-head&lt;/version&gt;&lt;/host&gt;
[07/Sep/2017:23:53:35 +0000] [xtremweb.communications.HTTPServer_HTTPServer_218] INFO : started, listening on port : 9443
[07/Sep/2017:23:53:42 +0000] [xtremweb.common.StreamIO_TCPHandler_18] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[07/Sep/2017:23:53:42 +0000] [xtremweb.common.StreamIO_TCPHandler_17] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[07/Sep/2017:23:53:43 +0000] [xtremweb.common.StreamIO_TCPHandler_19] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[07/Sep/2017:23:53:44 +0000] [xtremweb.common.StreamIO_TCPHandler_20] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[07/Sep/2017:23:53:45 +0000] [xtremweb.common.StreamIO_TCPHandler_21] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[07/Sep/2017:23:53:45 +0000] [xtremweb.common.StreamIO_TCPHandler_22] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[07/Sep/2017:23:53:46 +0000] [xtremweb.dispatcher.DBInterface_TCPHandler_23] INFO : vagrant-ubuntu-trusty-64 not in DB; inserting 5b4db46c-6194-435f-ba0c-0776d989383b
[07/Sep/2017:23:53:46 +0000] [xtremweb.common.StreamIO_TCPHandler_23] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[07/Sep/2017:23:53:50 +0000] [xtremweb.common.StreamIO_TCPHandler_24] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[07/Sep/2017:23:53:56 +0000] [xtremweb.common.StreamIO_TCPHandler_25] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[07/Sep/2017:23:54:01 +0000] [xtremweb.common.StreamIO_TCPHandler_26] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[07/Sep/2017:23:54:01 +0000] [xtremweb.common.StreamIO_TCPHandler_27] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[07/Sep/2017:23:54:01 +0000] [xtremweb.common.StreamIO_TCPHandler_28] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[07/Sep/2017:23:54:01 +0000] [xtremweb.common.StreamIO_TCPHandler_29] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[07/Sep/2017:23:54:01 +0000] [xtremweb.dispatcher.TCPHandler_TCPHandler_30] ERROR : Can't write result
[07/Sep/2017:23:54:01 +0000] [xtremweb.dispatcher.TCPHandler_TCPHandler_30] WARN : java.io.IOException: java.net.SocketException: Broken pipe (Write failed) (java.net.SocketException: Broken pipe (Write failed))
[07/Sep/2017:23:54:01 +0000] [xtremweb.common.StreamIO_TCPHandler_30] WARN : javax.net.ssl.SSLException: Connection has been shutdown: javax.net.ssl.SSLException: java.net.SocketException: Broken pipe (Write failed) (javax.net.ssl.SSLException: java.net.SocketException: Broken pipe (Write failed))
[07/Sep/2017:23:54:02 +0000] [xtremweb.common.StreamIO_TCPHandler_31] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[07/Sep/2017:23:54:08 +0000] [xtremweb.common.StreamIO_TCPHandler_32] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[07/Sep/2017:23:54:14 +0000] [xtremweb.common.StreamIO_TCPHandler_33] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[07/Sep/2017:23:54:16 +0000] [xtremweb.common.StreamIO_TCPHandler_34] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[07/Sep/2017:23:54:16 +0000] [xtremweb.common.StreamIO_TCPHandler_35] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[07/Sep/2017:23:54:16 +0000] [xtremweb.common.StreamIO_TCPHandler_36] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[07/Sep/2017:23:54:16 +0000] [xtremweb.dispatcher.DBInterface_TCPHandler_37] WARN : javax.mail.internet.AddressException: Missing local name in string ``@DBADMINEMAIL@'' (Missing local name)
[07/Sep/2017:23:54:16 +0000] [xtremweb.common.StreamIO_TCPHandler_37] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[07/Sep/2017:23:54:17 +0000] [xtremweb.dispatcher.DBInterface_TCPHandler_38] WARN : javax.mail.internet.AddressException: Missing local name in string ``@DBADMINEMAIL@'' (Missing local name)
[07/Sep/2017:23:54:17 +0000] [xtremweb.common.StreamIO_TCPHandler_38] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[07/Sep/2017:23:54:17 +0000] [xtremweb.common.StreamIO_TCPHandler_39] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[07/Sep/2017:23:54:20 +0000] [xtremweb.common.StreamIO_TCPHandler_40] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[07/Sep/2017:23:54:21 +0000] [xtremweb.common.StreamIO_TCPHandler_41] WARN : java.net.SocketException: Socket is closed (Socket is closed)
</msg>
<status status="PASS" endtime="20170907 23:54:21.779" starttime="20170907 23:54:21.777"></status>
</kw>
<status status="PASS" endtime="20170907 23:54:21.779" starttime="20170907 23:54:21.777"></status>
</kw>
<status status="PASS" endtime="20170907 23:54:21.779" starttime="20170907 23:54:21.776"></status>
</kw>
<kw name="Stop XtremWeb Worker" library="XWWorker">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Stop XtremWeb Worker</arg>
</arguments>
<msg timestamp="20170907 23:54:21.783" level="INFO">Stop XtremWeb Worker</msg>
<status status="PASS" endtime="20170907 23:54:21.783" starttime="20170907 23:54:21.779"></status>
</kw>
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${WORKER_PROCESS}</arg>
</arguments>
<msg timestamp="20170907 23:54:21.784" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20170907 23:54:21.785" level="INFO">Process completed.</msg>
<status status="PASS" endtime="20170907 23:54:21.785" starttime="20170907 23:54:21.783"></status>
</kw>
<status status="PASS" endtime="20170907 23:54:21.785" starttime="20170907 23:54:21.779"></status>
</kw>
<status status="PASS" endtime="20170907 23:54:21.785" starttime="20170907 23:54:21.774"></status>
</kw>
<doc>All XtremWeb commands line tests</doc>
<status status="PASS" endtime="20170907 23:54:21.785" starttime="20170907 23:48:12.918"></status>
</suite>
<status status="PASS" endtime="20170907 23:54:21.788" starttime="20170907 23:22:10.873"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="8">Critical Tests</stat>
<stat fail="0" pass="8">All Tests</stat>
</total>
<tag>
<stat fail="0" pass="4">CommandLine Tests</stat>
<stat fail="0" pass="1">HelloWorld Tests</stat>
<stat fail="0" pass="2">Smart contract Tests</stat>
<stat fail="0" pass="1">Web Tests</stat>
</tag>
<suite>
<stat fail="0" id="s1" name="Tests" pass="8">Tests</stat>
<stat fail="0" id="s1-s1" name="helloWorldSuiteOnTestRpc" pass="1">Tests.helloWorldSuiteOnTestRpc</stat>
<stat fail="0" id="s1-s2" name="interfaceSuite" pass="1">Tests.interfaceSuite</stat>
<stat fail="0" id="s1-s3" name="truffleTestsOnLocalGeth" pass="1">Tests.truffleTestsOnLocalGeth</stat>
<stat fail="0" id="s1-s4" name="truffleTestsOnTestrpc" pass="1">Tests.truffleTestsOnTestrpc</stat>
<stat fail="0" id="s1-s5" name="xwcommandsSuite" pass="4">Tests.xwcommandsSuite</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
