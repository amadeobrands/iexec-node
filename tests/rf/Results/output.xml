<?xml version="1.0" encoding="UTF-8"?>
<robot generated="20170915 10:00:18.775" generator="Robot 3.0.2 (Python 2.7.6 on linux2)">
<suite source="/home/vagrant/iexecdev/iexec-node/tests/rf/Tests" id="s1" name="Tests">
<suite source="/home/vagrant/iexecdev/iexec-node/tests/rf/Tests/helloWorldSuiteOnLocalGeth.robot" id="s1-s1" name="helloWorldSuiteOnLocalGeth">
<kw type="setup" name="Start Oracle Bridge And Xtremweb">
<kw name="Prepare And Start XWtremWeb Server And XWtremWeb Worker" library="XWCommon">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${XW_FORCE_GIT_CLONE}' == 'true'</arg>
<arg>Git Clone XWtremWeb</arg>
</arguments>
<status status="PASS" endtime="20170915 10:00:18.929" starttime="20170915 10:00:18.929"></status>
</kw>
<kw name="Compile XWtremWeb" library="XWCommon">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd ${BUILD_PATH} &amp;&amp; make clean &amp;&amp; make</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${compile_result}</var>
</assign>
<msg timestamp="20170915 10:00:18.930" level="INFO">Starting process:
cd ./xtremweb-hep/build &amp;&amp; make clean &amp;&amp; make</msg>
<msg timestamp="20170915 10:00:18.933" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170915 10:00:59.254" level="INFO">Process completed.</msg>
<msg timestamp="20170915 10:00:59.254" level="INFO">${compile_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170915 10:00:59.254" starttime="20170915 10:00:18.930"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${compile_result.stderr}</arg>
</arguments>
<msg timestamp="20170915 10:00:59.255" level="INFO"></msg>
<status status="PASS" endtime="20170915 10:00:59.255" starttime="20170915 10:00:59.254"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${compile_result.stdout}</arg>
</arguments>
<msg timestamp="20170915 10:00:59.256" level="INFO">./build.sh -f build.xml clean 
Buildfile: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/build.xml

tstamp:
[echoproperties] #Ant properties
[echoproperties] #Fri Sep 15 10:00:19 UTC 2017
[echoproperties] v.branch=head
[echoproperties] v.build=201709151000
[echoproperties] v.major=10
[echoproperties] v.micro=0
[echoproperties] v.minor=6

version:

clean:
   [delete] Deleting: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/.build
   [delete] Deleting directory /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes
     [exec] mkdir: cannot create directory ‘../../build/classes/obj/’: No such file or directory
     [exec] make[1]: Entering directory `/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/natif'
     [exec] rm -f XWInterruptsImpl.h PortMapper.h XWUtilImpl.h XWTracerImpl.h
     [exec] make[1]: Leaving directory `/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/natif'

BUILD SUCCESSFUL
Total time: 2 seconds
./build.sh distrib 
Buildfile: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/build.xml

tstamp:
[echoproperties] #Ant properties
[echoproperties] #Fri Sep 15 10:00:22 UTC 2017
[echoproperties] v.branch=head
[echoproperties] v.build=201709151000
[echoproperties] v.major=10
[echoproperties] v.micro=0
[echoproperties] v.minor=6

version:

configure:
     [echo] 
     [echo]       ant version = Apache Ant(TM) version 1.8.4 compiled on May 22 2012
     [echo] 
     [echo]       os         = Linux
     [echo]       os.arch    = amd64
     [echo]       target     = Linux
     [echo]       xwarch     = amd64
     [echo]       xwsuffix   = linux-amd64
     [echo]       debug      = true
     [echo]       debuglevel = source,lines
     [echo] 
     [echo]         cross=${cross.prefix}
     [echo]         target java home =${cross.java.home}
     [echo]     	target           =Linux
     [echo]     	xwversion=10.6.0

templates:
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common

prepare:
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes/obj
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes/obj/linux-amd64
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes/jni
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes/xwclasses
     [echo] 
     [echo]       classpath=/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/test:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/JOpenId-1.08.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/JSON-java.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/MinML.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/activation.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/antlr.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/attic-all-0.3.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/bcpkix-jdk15on-151.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/bcprov-jdk15on-151.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/bcprov-jdk16-140.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/commons-codec-1.3.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/commons-fileupload-1.2.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/commons-httpclient-3.0.1.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/commons-io-1.3.2.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/commons-logging-1.1.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/ibis-util-2.1.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/jcert.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/jetty-http-9.3.8.v20160314.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/jetty-io-9.3.8.v20160314.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/jetty-server-9.3.8.v20160314.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/jetty-util-9.3.8.v20160314.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/jose4j-0.5.5.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/junit-4.10.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/log4j-1.2.17.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/mail.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/mysql-connector-java-5.1.6-bin.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/scribejava-apis-3.3.1-SNAPSHOT.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/scribejava-core-3.3.1-SNAPSHOT.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/servlet-api-3.1.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/slf4j-api-1.7.2.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/slf4j-log4j12-1.7.2.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/smartsockets-1.4.jar
     [echo]     

common:
    [javac] Compiling 277 source files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/XWTools.java:61: warning: [deprecation] HTTPOpenIdHandler in xtremweb.dispatcher has been deprecated
    [javac] import xtremweb.dispatcher.HTTPOpenIdHandler;
    [javac]                           ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/security/ACLConnect.java:36: warning: AclEntryImpl is internal proprietary API and may be removed in a future release
    [javac] import sun.security.acl.AclEntryImpl;
    [javac]                        ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/security/ACLConnect.java:37: warning: AclImpl is internal proprietary API and may be removed in a future release
    [javac] import sun.security.acl.AclImpl;
    [javac]                        ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/security/ACLConnect.java:38: warning: PermissionImpl is internal proprietary API and may be removed in a future release
    [javac] import sun.security.acl.PermissionImpl;
    [javac]                        ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/security/ACLConnect.java:39: warning: PrincipalImpl is internal proprietary API and may be removed in a future release
    [javac] import sun.security.acl.PrincipalImpl;
    [javac]                        ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/communications/CommClient.java:870: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] 		return version(new XMLRPCCommandVersion(newURI()));
    [javac] 		                   ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/communications/CommClient.java:881: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] 	public Version version(final XMLRPCCommandVersion command)
    [javac] 	                             ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/DataInterface.java:625: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/communications/IdRpc.java:89: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] 		public XMLRPCCommandVersion newCommand(final URI uri, final UserInterface client, final Table obj)
    [javac] 		       ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/communications/IdRpc.java:91: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] 			return new XMLRPCCommandVersion(uri, client);
    [javac] 			           ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/communications/XMLRPCCommand.java:614: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] 			return new XMLRPCCommandVersion(input);
    [javac] 			           ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/AppInterface.java:1446: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/UserInterface.java:577: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/GroupInterface.java:319: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/HostInterface.java:1212: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/SessionInterface.java:264: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/TaskInterface.java:441: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/TraceInterface.java:348: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/UserGroupInterface.java:365: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/WorkInterface.java:933: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/AppType.java:263: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/CPUType.java:223: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/DataType.java:265: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/Executable.java:294: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/JobInterface.java:409: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/OSType.java:243: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/Status.java:245: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/UserRightsType.java:243: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/XWTools.java:805: warning: [deprecation] HTTPOpenIdHandler in xtremweb.dispatcher has been deprecated
    [javac] 		final Logger logger = new Logger(HTTPOpenIdHandler.class);
    [javac] 		                                 ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/XWTools.java:817: warning: BASE64Encoder is internal proprietary API and may be removed in a future release
    [javac] 			out.println(new sun.misc.BASE64Encoder().encode(cert.getEncoded()));
    [javac] 			                        ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/communications/HTTPClient.java:238: warning: [deprecation] Protocol(String,SecureProtocolSocketFactory,int) in Protocol has been deprecated
    [javac] 				xwssl = new Protocol(uri.getScheme(), new AuthSSLProtocolSocketFactory(uri.getScheme(), keyStore,
    [javac] 				        ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/dispatcher/Dispatcher.java:216: warning: [deprecation] HTTPOpenIdHandler in xtremweb.dispatcher has been deprecated
    [javac] 				HTTPOpenIdHandler.setCACertificateEntries(getConfig().getKeyStore());
    [javac] 				^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/security/ACLConnect.java:65: warning: PermissionImpl is internal proprietary API and may be removed in a future release
    [javac] 	private final Permission _connect = new PermissionImpl("CONNECT");
    [javac] 	                                        ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/security/ACLConnect.java:66: warning: PrincipalImpl is internal proprietary API and may be removed in a future release
    [javac] 	private final Principal _owner = new PrincipalImpl("localhost");
    [javac] 	                                     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/security/ACLConnect.java:67: warning: AclImpl is internal proprietary API and may be removed in a future release
    [javac] 	private Acl _acl = new AclImpl(_owner, "ConnectACL");
    [javac] 	                       ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/security/ACLConnect.java:80: warning: AclImpl is internal proprietary API and may be removed in a future release
    [javac] 		_acl = new AclImpl(_owner, "ConnectACL");
    [javac] 		           ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/security/ACLConnect.java:81: warning: AclEntryImpl is internal proprietary API and may be removed in a future release
    [javac] 		final AclEntry allowConnections = new AclEntryImpl(_owner);
    [javac] 		                                      ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/security/ACLConnect.java:104: warning: PrincipalImpl is internal proprietary API and may be removed in a future release
    [javac] 			final Principal prince = new PrincipalImpl(regexp);
    [javac] 			                             ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/security/ACLConnect.java:105: warning: AclEntryImpl is internal proprietary API and may be removed in a future release
    [javac] 			final AclEntry entry = new AclEntryImpl(prince);
    [javac] 			                           ^
    [javac] Note: Some input files use unchecked or unsafe operations.
    [javac] Note: Recompile with -Xlint:unchecked for details.
    [javac] 39 warnings
    [javac] Creating empty /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes/database/package-info.class

obj:

iface:

communications:
    [javac] Compiling 60 source files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/communications/IdRpc.java:89: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] 		public XMLRPCCommandVersion newCommand(final URI uri, final UserInterface client, final Table obj)
    [javac] 		       ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/communications/IdRpc.java:91: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] 			return new XMLRPCCommandVersion(uri, client);
    [javac] 			           ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/communications/XMLRPCCommand.java:614: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] 			return new XMLRPCCommandVersion(input);
    [javac] 			           ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/communications/CommClient.java:870: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] 		return version(new XMLRPCCommandVersion(newURI()));
    [javac] 		                   ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/communications/CommClient.java:881: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] 	public Version version(final XMLRPCCommandVersion command)
    [javac] 	                             ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/communications/HTTPClient.java:238: warning: [deprecation] Protocol(String,SecureProtocolSocketFactory,int) in Protocol has been deprecated
    [javac] 				xwssl = new Protocol(uri.getScheme(), new AuthSSLProtocolSocketFactory(uri.getScheme(), keyStore,
    [javac] 				        ^
    [javac] Note: Some input files use unchecked or unsafe operations.
    [javac] Note: Recompile with -Xlint:unchecked for details.
    [javac] 6 warnings

services:
    [javac] Compiling 7 source files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes

archdep:
    [javac] Compiling 20 source files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes

upgrade:

worker:
    [javac] Compiling 42 source files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes
    [javac] Note: Some input files use unchecked or unsafe operations.
    [javac] Note: Recompile with -Xlint:unchecked for details.

dispatcher:
    [javac] Compiling 14 source files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/dispatcher/Dispatcher.java:216: warning: [deprecation] HTTPOpenIdHandler in xtremweb.dispatcher has been deprecated
    [javac] 				HTTPOpenIdHandler.setCACertificateEntries(getConfig().getKeyStore());
    [javac] 				^
    [javac] Note: Some input files use unchecked or unsafe operations.
    [javac] Note: Recompile with -Xlint:unchecked for details.
    [javac] 1 warning

worker.manifest:

jni:
     [copy] Copying 10 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/natif
     [exec] make[1]: Entering directory `/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/natif'
     [exec] gcc -c  -fPIC -g -Wall -I'/usr/lib/jvm/java-8-openjdk-amd64/include/linux' -fPIC -I'/usr/lib/jvm/java-8-openjdk-amd64/include' -o ../../build/classes/obj/linux-amd64/XWUtilUnix.o XWUtilUnix.c
     [exec] gcc -shared  -fPIC  -L'/usr/lib/jvm/java-8-openjdk-amd64/lib' -o ../../build/classes/obj/linux-amd64/XWUtil.jni ../../build/classes/obj/linux-amd64/XWUtilUnix.o 
     [exec] cp ../../build/classes/obj/linux-amd64/XWUtil.jni ../../build/classes/jni/XWUtil.jni.10.6.0.linux-amd64
     [exec] mkdir: cannot create directory ‘../../build/classes/obj/linux-amd64’: File exists
     [exec] gcc -c  -fPIC -g -Wall -I'/usr/lib/jvm/java-8-openjdk-amd64/include/linux' -fPIC -I'/usr/lib/jvm/java-8-openjdk-amd64/include' -o ../../build/classes/obj/linux-amd64/XWTracerUnixlib.o XWTracerUnixlib.c
     [exec] XWTracerUnixlib.c: In function ‘processCpustate’:
     [exec] XWTracerUnixlib.c:194:19: warning: variable ‘relative_jiffies’ set but not used [-Wunused-but-set-variable]
     [exec]      idle_jiffies, relative_jiffies, absolute_jiffies;
     [exec]                    ^
     [exec] XWTracerUnixlib.c:191:49: warning: variable ‘cpu_idle’ set but not used [-Wunused-but-set-variable]
     [exec]    static double cpu_user, cpu_nice, cpu_system, cpu_idle;
     [exec]                                                  ^
     [exec] XWTracerUnixlib.c:191:37: warning: variable ‘cpu_system’ set but not used [-Wunused-but-set-variable]
     [exec]    static double cpu_user, cpu_nice, cpu_system, cpu_idle;
     [exec]                                      ^
     [exec] XWTracerUnixlib.c:191:27: warning: variable ‘cpu_nice’ set but not used [-Wunused-but-set-variable]
     [exec]    static double cpu_user, cpu_nice, cpu_system, cpu_idle;
     [exec]                            ^
     [exec] XWTracerUnixlib.c:191:17: warning: variable ‘cpu_user’ set but not used [-Wunused-but-set-variable]
     [exec]    static double cpu_user, cpu_nice, cpu_system, cpu_idle;
     [exec]                  ^
     [exec] XWTracerUnixlib.c: In function ‘writeState’:
     [exec] XWTracerUnixlib.c:589:7: warning: variable ‘test’ set but not used [-Wunused-but-set-variable]
     [exec]    int test;
     [exec]        ^
     [exec] XWTracerUnixlib.c:587:8: warning: variable ‘k’ set but not used [-Wunused-but-set-variable]
     [exec]    char k[1];
     [exec]         ^
     [exec] XWTracerUnixlib.c:584:9: warning: variable ‘c’ set but not used [-Wunused-but-set-variable]
     [exec]    char* c;
     [exec]          ^
     [exec] gcc -c  -fPIC -g -Wall -I'/usr/lib/jvm/java-8-openjdk-amd64/include/linux' -fPIC -I'/usr/lib/jvm/java-8-openjdk-amd64/include' -o ../../build/classes/obj/linux-amd64/XWTracerUnixImpl.o XWTracerUnixImpl.c
     [exec] gcc -shared  -fPIC  -L'/usr/lib/jvm/java-8-openjdk-amd64/lib' -o ../../build/classes/obj/linux-amd64/XwTracer.jni ../../build/classes/obj/linux-amd64/XWTracerUnixlib.o ../../build/classes/obj/linux-amd64/XWTracerUnixImpl.o 
     [exec] cp ../../build/classes/obj/linux-amd64/XwTracer.jni ../../build/classes/jni/XwTracer.jni.10.6.0.linux-amd64
     [exec] gcc -c  -fPIC -g -Wall -I'/usr/lib/jvm/java-8-openjdk-amd64/include/linux' -fPIC -I'/usr/lib/jvm/java-8-openjdk-amd64/include' -o ../../build/classes/obj/linux-amd64/PortMapper.o PortMapper.c
     [exec] gcc -shared  -fPIC  -L'/usr/lib/jvm/java-8-openjdk-amd64/lib' -o ../../build/classes/obj/linux-amd64/PortMapper.jni ../../build/classes/obj/linux-amd64/PortMapper.o 
     [exec] cp ../../build/classes/obj/linux-amd64/PortMapper.jni ../../build/classes/jni/PortMapper.jni.10.6.0.linux-amd64
     [exec] make[1]: Leaving directory `/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/natif'
     [exec] PortMapper.c: In function ‘getport’:
     [exec] PortMapper.c:29:2: warning: implicit declaration of function ‘pmap_getport’ [-Wimplicit-function-declaration]
     [exec]   return pmap_getport (&amp;addr, prog, version, protocol);
     [exec]   ^

Worker:
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes/data
     [copy] Copying 23 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes/data

tests:
    [javac] Compiling 50 source files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/test/xtremweb/communications/XMLRPCCommandVersionTest.java:29: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] import xtremweb.communications.XMLRPCCommandVersion;
    [javac]                               ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/test/xtremweb/communications/XMLRPCCommandVersionTest.java:47: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] 			setCmd(new XMLRPCCommandVersion());
    [javac] 			           ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/test/xtremweb/communications/XMLRPCCommandVersionTest.java:48: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] 			setCmd2(new XMLRPCCommandVersion());
    [javac] 			            ^
    [javac] Note: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/test/xtremweb/common/XMLHashtableTest.java uses unchecked or unsafe operations.
    [javac] Note: Recompile with -Xlint:unchecked for details.
    [javac] 3 warnings

client:

allservices:

Dispatcher:
     [echo]  
     [echo] 	JAR JAR JAR
     [echo] 	basedir="/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes"
     [echo] 	jarfile="/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/lib/xtremweb.jar"
     [echo] 	manifest="/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/misc/worker.manifest"
     [echo]       
      [jar] Building jar: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/lib/xtremweb.jar

rpcv:

all:

copylibs:

distrib:

BUILD SUCCESSFUL
Total time: 28 seconds
./build.sh -f install.xml install 
Buildfile: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/install.xml

tstamp:

version:

prepare:

configure:
     [echo] 
     [echo] user  login : ${xtremweb.admin.login} ${xtremweb.admin.password}
     [echo] admin login : ${xtremweb.admin.login} ${xtremweb.admin.password}
     [echo] DB su login :  
     [echo] ENGINE : ""
     [echo] launcher.url = http://nohost/
     [echo] system.user  = xwhep
     [echo] xwsuffix=LINUX-AMD64
     [echo] xwarch=AMD64
     [echo] target.os=Linux
     [echo] cross.prefix=${cross.prefix}
     [echo] cross.java.home=${cross.java.home}
     [echo] version=10.6.0

installConfig:
     [echo] 
     [echo]        ==&gt; version    = 10.6.0
     [echo]        ==&gt; dist.dir   = /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0
     [echo]        ==&gt; installDir = /opt/xwhep-10.6.0
     [echo]     

installFiles:
     [copy] Copying 98 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/doc
     [copy] Copying 17 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/docker
     [copy] Copying 31 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/lib
     [copy] Copying 31 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.server/installer/PckRoot/private/etc/xwhep.server/lib
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf
     [echo] 
     [echo]       xtremweb.admin.login=${xtremweb.admin.login}
     [echo]       xtremweb.admin.password=${xtremweb.admin.password}
     [echo]     
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf
     [echo] 
     [echo]       xtremweb.worker.login=${xtremweb.worker.login}
     [echo]       xtremweb.worker.password=${xtremweb.worker.password}
     [echo]     
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.worker/installer/PckRoot/private/etc/xwhep.worker/conf
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.worker/installer/PckRoot/Applications/xwhep.worker
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.worker/installer/PckRoot/private/etc/xwhep.worker/conf
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.vworker/installer/PckRoot/Applications/xwhep.vworker
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.vworker/installer/PckRoot/private/etc/xwhep.vworker/bin
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.client/installer/PckRoot/Applications/xwhep.client/conf
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.server/installer/PckRoot/private/etc/xwhep.server/conf
     [copy] Copying 98 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.server/installer/PckRoot/Applications/xwhep.server/doc
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.client/conf
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.client/innoSetup/client/conf
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/conf
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/innoSetup/worker/conf
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/conf
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/innoSetup/worker/conf
     [copy] Copying 2 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/lib
     [copy] Copying 2 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/innoSetup/worker/lib
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/innoSetup/worker/lib
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/innoSetup/worker/lib
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/innoSetup/worker/misc
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/innoSetup/worker/doc
     [copy] Copying 8 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/bin
     [copy] Copying 5 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/innoSetup/worker/bin
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/doc
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.server/conf
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.server/innoSetup/server/conf
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.server/conf
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.server/innoSetup/server/conf
     [copy] Copying 2 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.server/lib
     [copy] Copying 2 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.server/innoSetup/server/lib
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.server/innoSetup/server/misc
     [copy] Copying 2 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.server/innoSetup/server/bin

setupScripts:
     [copy] Copying 266 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/db-maintenance

installScripts:

createDownload:
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.worker/installer/PckRoot/private/etc/xwhep.worker/keystore
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.client/installer/PckRoot/Applications/xwhep.client/lib
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.client/installer/PckRoot/Applications/xwhep.client/lib
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.client/installer/PckRoot/Applications/xwhep.client/keystore
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.server/installer/PckRoot/private/etc/xwhep.server/keystore
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/db-maintenance
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/db-maintenance
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin
     [copy] Copying 98 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/doc/xwhep.client/doc
[jarbundler] Creating application bundle: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/xwhep.client.app
     [copy] Copying 5 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/xwhep.client.app
     [copy] Copying 20 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.worker
     [copy] Copying 17 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.vworker
     [copy] Copying 12 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.client
     [copy] Copying 19 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.server
     [copy] Copying 3 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/innoSetup
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker
     [copy] Copying 3 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.server/innoSetup
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.server
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.server.conf
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.server/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.server/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.server/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.server/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.server/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.server/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.server.conf/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.server.conf/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.server.conf/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.server.conf/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.server.conf/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.server.conf/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.bridgedgsg
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.bridgedgsg/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.bridgedgsg/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.bridgedgsg/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.bridgedgsg/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.bridgedgsg/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.bridgedgsg/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.client
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.client/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.client/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.client/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.client/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.client/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.client/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.worker
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.worker/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.worker/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.worker/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.worker/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.worker/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.worker/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.client/innoSetup/client/lib
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.client/innoSetup/client/lib
     [copy] Copying 11 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0
     [copy] Copying 6 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/apptest

ganglia:

install:
     [echo] 
     [echo]       Installation done
     [echo]     

BUILD SUCCESSFUL
Total time: 9 seconds</msg>
<status status="PASS" endtime="20170915 10:00:59.256" starttime="20170915 10:00:59.255"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${compile_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170915 10:00:59.257" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170915 10:00:59.257" starttime="20170915 10:00:59.256"></status>
</kw>
<kw name="Get Lines Containing String" library="String">
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<arguments>
<arg>${compile_result.stdout}</arg>
<arg>BUILD SUCCESSFUL</arg>
</arguments>
<assign>
<var>${extract_build_successful}</var>
</assign>
<msg timestamp="20170915 10:00:59.258" level="INFO">3 out of 486 lines matched</msg>
<msg timestamp="20170915 10:00:59.258" level="INFO">${extract_build_successful} = BUILD SUCCESSFUL
BUILD SUCCESSFUL
BUILD SUCCESSFUL</msg>
<status status="PASS" endtime="20170915 10:00:59.258" starttime="20170915 10:00:59.257"></status>
</kw>
<kw name="Get Line Count" library="String">
<doc>Returns and logs the number of lines in the given string.</doc>
<arguments>
<arg>${extract_build_successful}</arg>
</arguments>
<assign>
<var>${line_count_build_successful}</var>
</assign>
<msg timestamp="20170915 10:00:59.259" level="INFO">3 lines</msg>
<msg timestamp="20170915 10:00:59.259" level="INFO">${line_count_build_successful} = 3</msg>
<status status="PASS" endtime="20170915 10:00:59.259" starttime="20170915 10:00:59.258"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${line_count_build_successful}</arg>
<arg>3</arg>
</arguments>
<msg timestamp="20170915 10:00:59.259" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170915 10:00:59.259" starttime="20170915 10:00:59.259"></status>
</kw>
<status status="PASS" endtime="20170915 10:00:59.259" starttime="20170915 10:00:18.929"></status>
</kw>
<kw name="Install XWtremWeb" library="XWCommon">
<kw name="List Directories In Directory" library="OperatingSystem">
<doc>Wrapper for `List Directory` that returns only directories.</doc>
<arguments>
<arg>${DIST_PATH}</arg>
<arg>xwhep-*</arg>
<arg>absolute</arg>
</arguments>
<assign>
<var>@{list_directories_dist_path}</var>
</assign>
<msg timestamp="20170915 10:00:59.260" html="yes" level="INFO">Listing contents of directory '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist&lt;/a&gt;'.</msg>
<msg timestamp="20170915 10:00:59.261" level="INFO">1 directory:
/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0</msg>
<msg timestamp="20170915 10:00:59.261" level="INFO">@{list_directories_dist_path} = [ /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0 ]</msg>
<status status="PASS" endtime="20170915 10:00:59.261" starttime="20170915 10:00:59.260"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>@{list_directories_dist_path}[0]</arg>
</arguments>
<msg timestamp="20170915 10:00:59.262" level="INFO">/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0</msg>
<status status="PASS" endtime="20170915 10:00:59.262" starttime="20170915 10:00:59.261"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}</arg>
<arg>@{list_directories_dist_path}[0]</arg>
</arguments>
<msg timestamp="20170915 10:00:59.262" level="INFO">${DIST_XWHEP_PATH} = /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0</msg>
<status status="PASS" endtime="20170915 10:00:59.262" starttime="20170915 10:00:59.262"></status>
</kw>
<kw name="Directory Should Exist" library="OperatingSystem">
<doc>Fails unless the given path points to an existing directory.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}</arg>
</arguments>
<msg timestamp="20170915 10:00:59.263" html="yes" level="INFO">Directory '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0&lt;/a&gt;' exists.</msg>
<status status="PASS" endtime="20170915 10:00:59.263" starttime="20170915 10:00:59.263"></status>
</kw>
<kw name="Create XWCONFIGURE.VALUES FILE" library="XWCommon">
<arguments>
<arg>${DIST_XWHEP_PATH}</arg>
</arguments>
<kw name="Directory Should Exist" library="OperatingSystem">
<doc>Fails unless the given path points to an existing directory.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf</arg>
</arguments>
<msg timestamp="20170915 10:00:59.264" html="yes" level="INFO">Directory '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf&lt;/a&gt;' exists.</msg>
<status status="PASS" endtime="20170915 10:00:59.264" starttime="20170915 10:00:59.264"></status>
</kw>
<kw name="Remove File" library="OperatingSystem">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
</arguments>
<msg timestamp="20170915 10:00:59.267" html="yes" level="INFO">Removed file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170915 10:00:59.267" starttime="20170915 10:00:59.264"></status>
</kw>
<kw name="Create File" library="OperatingSystem">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
</arguments>
<msg timestamp="20170915 10:00:59.268" html="yes" level="INFO">Created file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170915 10:00:59.268" starttime="20170915 10:00:59.267"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>XWUSER='${XWCONFIGURE.VALUES.XWUSER}'\n</arg>
</arguments>
<msg timestamp="20170915 10:00:59.275" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170915 10:00:59.275" starttime="20170915 10:00:59.268"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>DBVENDOR='${XWCONFIGURE.VALUES.DBVENDOR}'\n</arg>
</arguments>
<msg timestamp="20170915 10:00:59.277" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170915 10:00:59.277" starttime="20170915 10:00:59.275"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>DBENGINE='${XWCONFIGURE.VALUES.DBENGINE}'\n</arg>
</arguments>
<msg timestamp="20170915 10:00:59.282" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170915 10:00:59.282" starttime="20170915 10:00:59.277"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>DBHOST='${XWCONFIGURE.VALUES.DBHOST}'\n</arg>
</arguments>
<msg timestamp="20170915 10:00:59.284" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170915 10:00:59.284" starttime="20170915 10:00:59.282"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>DBADMINLOGIN='${XWCONFIGURE.VALUES.DBADMINLOGIN}'\n</arg>
</arguments>
<msg timestamp="20170915 10:00:59.285" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170915 10:00:59.285" starttime="20170915 10:00:59.284"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>DBADMINPASSWORD='${XWCONFIGURE.VALUES.DBADMINPASSWORD}'\n</arg>
</arguments>
<msg timestamp="20170915 10:00:59.287" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170915 10:00:59.287" starttime="20170915 10:00:59.285"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>DBNAME='${XWCONFIGURE.VALUES.DBNAME}'\n</arg>
</arguments>
<msg timestamp="20170915 10:00:59.288" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170915 10:00:59.289" starttime="20170915 10:00:59.287"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>DBUSERLOGIN='${XWCONFIGURE.VALUES.DBUSERLOGIN}'\n</arg>
</arguments>
<msg timestamp="20170915 10:00:59.290" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170915 10:00:59.290" starttime="20170915 10:00:59.289"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>DBUSERPASSWORD='${XWCONFIGURE.VALUES.DBUSERPASSWORD}'\n</arg>
</arguments>
<msg timestamp="20170915 10:00:59.291" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170915 10:00:59.292" starttime="20170915 10:00:59.290"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>XWADMINLOGIN='${XWCONFIGURE.VALUES.XWADMINLOGIN}'\n</arg>
</arguments>
<msg timestamp="20170915 10:00:59.293" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170915 10:00:59.293" starttime="20170915 10:00:59.292"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>XWADMINPASSWORD='${XWCONFIGURE.VALUES.XWADMINPASSWORD}'\n</arg>
</arguments>
<msg timestamp="20170915 10:00:59.295" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170915 10:00:59.295" starttime="20170915 10:00:59.293"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>XWWORKERLOGIN='${XWCONFIGURE.VALUES.XWWORKERLOGIN}'\n</arg>
</arguments>
<msg timestamp="20170915 10:00:59.296" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170915 10:00:59.296" starttime="20170915 10:00:59.295"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>XWWORKERPASSWORD='${XWCONFIGURE.VALUES.XWWORKERPASSWORD}'\n</arg>
</arguments>
<msg timestamp="20170915 10:00:59.298" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170915 10:00:59.298" starttime="20170915 10:00:59.296"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>XWSERVER='${XWCONFIGURE.VALUES.XWSERVER}'\n</arg>
</arguments>
<msg timestamp="20170915 10:00:59.300" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170915 10:00:59.300" starttime="20170915 10:00:59.298"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>CERTCN='${XWCONFIGURE.VALUES.CERTCN}'\n</arg>
</arguments>
<msg timestamp="20170915 10:00:59.301" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170915 10:00:59.301" starttime="20170915 10:00:59.300"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>CERTOU='${XWCONFIGURE.VALUES.CERTOU}'\n</arg>
</arguments>
<msg timestamp="20170915 10:00:59.303" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170915 10:00:59.303" starttime="20170915 10:00:59.302"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>CERTO='${XWCONFIGURE.VALUES.CERTO}'\n</arg>
</arguments>
<msg timestamp="20170915 10:00:59.304" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170915 10:00:59.304" starttime="20170915 10:00:59.303"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>CERTL='${XWCONFIGURE.VALUES.CERTL}'\n</arg>
</arguments>
<msg timestamp="20170915 10:00:59.306" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170915 10:00:59.306" starttime="20170915 10:00:59.304"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>CERTC='${XWCONFIGURE.VALUES.CERTC}'\n</arg>
</arguments>
<msg timestamp="20170915 10:00:59.307" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170915 10:00:59.307" starttime="20170915 10:00:59.306"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>CERTC='${XWCONFIGURE.VALUES.CERTC}'\n</arg>
</arguments>
<msg timestamp="20170915 10:00:59.309" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170915 10:00:59.309" starttime="20170915 10:00:59.307"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>SSLKEYPASSPHRASE='${XWCONFIGURE.VALUES.SSLKEYPASSPHRASE}'\n</arg>
</arguments>
<msg timestamp="20170915 10:00:59.310" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170915 10:00:59.310" starttime="20170915 10:00:59.309"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>SSLKEYSERVERPASSWORD='${XWCONFIGURE.VALUES.SSLKEYSERVERPASSWORD}'\n</arg>
</arguments>
<msg timestamp="20170915 10:00:59.312" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170915 10:00:59.312" starttime="20170915 10:00:59.310"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>SSLKEYWORKERPASSWORD='${XWCONFIGURE.VALUES.SSLKEYWORKERPASSWORD}'\n</arg>
</arguments>
<msg timestamp="20170915 10:00:59.313" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170915 10:00:59.313" starttime="20170915 10:00:59.312"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>SSLKEYCLIENTPASSWORD='${XWCONFIGURE.VALUES.SSLKEYCLIENTPASSWORD}'\n</arg>
</arguments>
<msg timestamp="20170915 10:00:59.315" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170915 10:00:59.315" starttime="20170915 10:00:59.313"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>X509CERTDIR='${XWCONFIGURE.VALUES.X509CERTDIR}'\n</arg>
</arguments>
<msg timestamp="20170915 10:00:59.316" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170915 10:00:59.316" starttime="20170915 10:00:59.315"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>USERCERTDIR='${XWCONFIGURE.VALUES.USERCERTDIR}'\n</arg>
</arguments>
<msg timestamp="20170915 10:00:59.317" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170915 10:00:59.318" starttime="20170915 10:00:59.316"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>XWUPGRADEURL='${XWCONFIGURE.VALUES.XWUPGRADEURL}'\n</arg>
</arguments>
<msg timestamp="20170915 10:00:59.319" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170915 10:00:59.319" starttime="20170915 10:00:59.318"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>HTTPSPORT='${XWCONFIGURE.VALUES.HTTPSPORT}'\n</arg>
</arguments>
<msg timestamp="20170915 10:00:59.320" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170915 10:00:59.320" starttime="20170915 10:00:59.319"></status>
</kw>
<kw name="Log File" library="OperatingSystem">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
</arguments>
<msg timestamp="20170915 10:00:59.321" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<msg timestamp="20170915 10:00:59.321" level="INFO">XWUSER='root'
DBVENDOR='mysql'
DBENGINE='InnoDB'
DBHOST='localhost'
DBADMINLOGIN='root'
DBADMINPASSWORD='root'
DBNAME='xtremweb'
DBUSERLOGIN='xwuser'
DBUSERPASSWORD='xwuser'
XWADMINLOGIN='admin'
XWADMINPASSWORD='admin'
XWWORKERLOGIN='worker'
XWWORKERPASSWORD='worker'
XWSERVER='localhost'
CERTCN='localhost'
CERTOU='MrRobotFramework'
CERTO='MrRobotFramework'
CERTL='MrRobotFramework'
CERTC='fr'
CERTC='fr'
SSLKEYPASSPHRASE='MrRobotFramework'
SSLKEYSERVERPASSWORD='MrRobotFramework'
SSLKEYWORKERPASSWORD='MrRobotFramework'
SSLKEYCLIENTPASSWORD='MrRobotFramework'
X509CERTDIR='/tmp/castore'
USERCERTDIR=''
XWUPGRADEURL='http://localhost:8080/somewhere/xtremweb.jar'
HTTPSPORT='9443'
</msg>
<status status="PASS" endtime="20170915 10:00:59.321" starttime="20170915 10:00:59.321"></status>
</kw>
<status status="PASS" endtime="20170915 10:00:59.322" starttime="20170915 10:00:59.263"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd ${DIST_XWHEP_PATH} &amp;&amp; ./bin/xwconfigure --yes --nopkg --rmdb</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${install_result}</var>
</assign>
<msg timestamp="20170915 10:00:59.322" level="INFO">Starting process:
cd /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0 &amp;&amp; ./bin/xwconfigure --yes --nopkg --rmdb</msg>
<msg timestamp="20170915 10:00:59.324" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170915 10:01:12.753" level="INFO">Process completed.</msg>
<msg timestamp="20170915 10:01:12.753" level="INFO">${install_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170915 10:01:12.753" starttime="20170915 10:00:59.322"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${install_result.stdout}</arg>
</arguments>
<msg timestamp="20170915 10:01:12.754" level="INFO">
--------------------------------------------------
         XtremWeb-HEP 10.6.0 
         XWConfigurator

This script helps to configure an XtremWeb-HEP deployment 
--------------------------------------------------

This script aims to :
 - install a new database: Since 9.1. MySQL (http://www.mysql.com/) only is supported
 - creates electronic keys : 
   * server private key
   * client key store including server public key
   * worker key store including server public key
 - prepare installers
   * Win32 InnoSetup project (http://www.jrsoftware.org/isinfo.php)
   * Mac OS X Package Maker projects (http:/www.apple.com)
   * Linux RPM (http://www.rpm.org)
   * Linux Debian package (http://www.debian.org)

In order to complete configuration, several informations are needed :
 -1- MySQL administrator account (login and password)
     =&gt; If you don't know it, please ask your system administrator
 -1.1- Database server, if using MySQL
     =&gt; The name or IP address of your MySQL server
 -1.2- Database name
     =&gt; If you don't have a valid MySQL administrator account, you won't be able to perform this
     =&gt; In such a case, please ask your system administrator to create one new empty database for us
 -1.3- Database user (login and password), if using MySQL
     =&gt; This account must have insert/update/delete privileges to the previous database
     =&gt; This account will be used by the XW server to access database
     =&gt; If you don't have a valid MySQL administrator account, you won't be able to perform this
     =&gt; In such a case, please ask your system administrator to create one for you
 -2- Electronic key passphrase
     =&gt; This is free and up to you
 -3- Electronic key password for the server
     =&gt; This is free and up to you
 -4- Electronic key password for the worker
     =&gt; This is free and up to you
 -5- Electronic key password for the client
     =&gt; This is free and up to you

All informations are stored in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values
So that, you can stop this script when you want, and don't have to re-enter all informations

To reset any variable, edit or erase /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values

You should be aware that /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values stores some critical informations!!!

-----------------------------

DB vendor set to 'mysql'
DB engine set to 'InnoDB'
***********************
 Electronic keys found 
***********************
Upgrade URL is localhost : I guess this is for testing only...
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Can't download xtremweb.jar from 'http://localhost:8080/somewhere/xtremweb.jar'
You will have to ensure that xtremweb.jar can be downloaded from 'http://localhost:8080/somewhere/xtremweb.jar'
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

You entered :
**** Account to run the middleware : 
     USER                 = 'root'
**** Database configuration : 
     DBVENDOR             = 'mysql'
     DBENGINE             = 'InnoDB'
     DBHOST               = 'localhost'
     DBNAME               = 'xtremweb'
     DBADMINLOGIN         = 'root'
     DBADMINPASSWORD      = 'root'
     DBUSERLOGIN          = 'xwuser'
     DBUSERPASSWORD       = 'xwuser'
**** XtremWeb-HEP administrator client configuration : 
     XWADMINLOGIN         = 'admin'
     XWADMINPASSWORD      = 'admin'
**** XtremWeb-HEP public worker configuration : 
     XWWORKERLOGIN        = 'worker'
     XWWORKERPASSWORD     = 'worker'
**** XtremWeb-HEP server configuration : 
     XWSERVER             = 'localhost'
     XWUPGRADEURL         = 'http://localhost:8080/somewhere/xtremweb.jar'
**** CA certificates path : 
     X509CERTDIR          = '/tmp/castore'
**** Certificate configuration : 
     Keys found           = ''
     SSLKEYPASSPHRASE     = 'MrRobotFramework'
     SSLKEYCLIENTPASSWORD = 'MrRobotFramework'
     SSLKEYSERVERPASSWORD = 'MrRobotFramework'
     SSLKEYWORKERPASSWORD = 'MrRobotFramework'
     Common Name          = 'localhost'
     Organisation Unit    = 'MrRobotFramework'
     Organization Name    = 'MrRobotFramework'
     Locality Name        = 'MrRobotFramework'
     Country              = 'fr'

Database schema 'xtremweb' exists : DB reset forced
Resetting database schema 'xtremweb'
Preparing database script............Done
Preparing database schema 'xtremweb'
DB engine for 'xtremweb' is InnoDB :  Creating foreign keys for live tables ...
Creating DB triggers using xwhep-core-tables-create-triggers-for-data-coming-from-8.sql ...

Table "users"

Table "hosts"

Table "datas"

Table "works"

Table "tasks"

Table "apps"
Creating DB triggers using xwhep-core-tables-create-triggers-for-history-coming-from-8.sql ...

Table "users_history"

Table "hosts_history"

Table "datas_history"

Table "works_history"

Table "tasks_history"

Table "apps_history"
Create the SQL script for the creation of DB views in the current schema ...
Create the SQL script for the creation of DB users views in the current schema ...
Creating DB views using xwhep-core-tables-create-views-for-tables.sql ...
Creating DB views using xwhep-core-tables-create-users-views.sql ...
Creating DB views using xwhep-core-tables-create-views-for-sessions-and-groups.sql ...
Creating DB views using xwhep-core-tables-create-views-for-relationships.sql ...
Creating DB views using xwhep-core-tables-create-views-for-offering-and-billing.sql ...
Creating DB views using xwhep-core-tables-create-views-hosts-matching-works.sql ...
Granting access to DB schema 'xtremweb' ...
Database schema 'xtremweb' : checking compliance to '05.7.3'
Database schema 'xtremweb' : is compliant to 05.7.3
Database schema 'xtremweb' : checking compliance to '05.8.0'
Database schema 'xtremweb' : is compliant to 05.8.0
Database schema 'xtremweb' : checking compliance to '06.0.1'
Database schema 'xtremweb' : is compliant to 06.0.1
Database schema 'xtremweb' : checking compliance to '07.0.0'
Database schema 'xtremweb' : is compliant to 07.0.0
Database schema 'xtremweb' : checking compliance to '07.2.0'
Database schema 'xtremweb' : is compliant to 07.2.0
Database schema 'xtremweb' : checking compliance to '07.4.1'
Database schema 'xtremweb' : is compliant to 07.4.1
Database schema 'xtremweb' : checking compliance to '07.5.0'
Database schema 'xtremweb' : is compliant to 07.5.0
Database schema 'xtremweb' : checking compliance to '08.0.0'
Database schema 'xtremweb' : is compliant to 08.0.0
Database schema 'xtremweb' : checking compliance to '08.2.0'
Database schema 'xtremweb' : is compliant to 08.2.0
Database schema 'xtremweb' : checking compliance to '08.3.1'
Database schema 'xtremweb' : is compliant to 08.3.1
Database schema 'xtremweb' : checking compliance to '09.1.0'
Database schema 'xtremweb' : is compliant to 09.1.0
Database schema 'xtremweb' : checking compliance to '10.0.0'
Database schema 'xtremweb' : is compliant to 10.0.0
Database schema 'xtremweb' : checking compliance to '10.2.0'
Database schema 'xtremweb' : is compliant to 10.2.0
Database schema 'xtremweb' : checking compliance to '10.6.0'
Database schema 'xtremweb' : is not compliant to '10.6.0'; updating
10.6.0 is compliant, dont worry
10.6.0 is compliant, dont worry
Database schema 'xtremweb' : updated to '10.6.0'
Set current version to '10.6.0'
Setting the account to run the middleware to 'root'..........................Done
Preparing server configuration file '/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf'................. Done
Preparing xtremweb.ganglia...Done
Generating script to manage keystores (/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/xwhepgenkeys)  Done
Generating script to manage OpenId server certificates (/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/xwhepupdateopenidcerts) Done
Preparing worker configuration file '/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf'.... Done
Copying worker configuration file /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.worker/installer/PckRoot/private/etc/xwhep.worker/conf/xtremweb.worker.conf
Copying worker configuration file /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/innoSetup/worker/conf/xtremweb.worker.conf
Done
Preparing client configuration file '/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.client.conf'...Done
Copying client configuration file /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.client.conf to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.client/innoSetup/client/conf/xtremweb.client.conf
****************************************************************************************
Done
*******************
Keystores unmodified
*******************

Preparing  client package to '/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/xwhep.client'.....Done
Copying client configuration file /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/xwhep.client/10.6.0/conf/xtremweb.client.conf.template to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.client/installer/PckRoot/Applications/xwhep.client/conf/xtremweb.client.conf
 Done

Preparing server RPM package to '/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.server'.... Done

Preparing server configuration RPM package to '/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.server.conf'.... Done

Preparing server Debian package
Server Debian package ready

Preparing server configuration Debian package
Server Configuration Debian package ready
Preparing DG to SG bridge RPM package to '/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.bridgedgsg'............ Done

Preparing bridgedgsg Debian package
Bridgedgsg Debian package ready
Preparing SG to DG bridge RPM package to '/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.bridgesgdg'........ Done

Preparing bridgesgdg Debian package
Bridgesgdg Debian package ready
Preparing client RPM package to '/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.client'.... Done

Preparing client Debian package
Client Debian package ready

Preparing worker RPM package to '/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.worker'.... Done

Preparing worker Debian package
Worker Debian package ready

&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;
! Everything is now prepared !
&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;

Available packages :
  * server
   - RedHat RPM  in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.server
   - Debian DPKG in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.server
   - Apple  PKG  in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.server

  * Desktop Grid to Service Grid bridge
   - RedHat RPM  in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.bridgedgsg
   - Debian DPKG in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.bridgedgsg

  * Service Grid to Desktop Grid bridge
   - RedHat RPM  in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.bridgesgdg
   - Debian DPKG in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.bridgesgdg

  * client
   - RedHat RPM  in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.client
   - Debian DPKG in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.client
   - Apple  PKG  in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.client
   - Windows installer  in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.client/innoSetup
                        (http://www.innosetup.com/isinfo.php)

  * worker
   - RedHat  RPM        in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.worker
   - Debian  DPKG       in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.worker
   - Apple   PKG        in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.worker
   - Windows installer  in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/innoSetup
                        (http://www.innosetup.com/isinfo.php)

  * client
   - Zip file (platform independant)  in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/xwhep-client-10.6.0.zip


You can manually :
  * start the server
   - /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/xwhep.server console
  * start a worker
   - /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/xwhep.worker console
  * as soon as your server is started you can use the client
   - /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/xwworkers : if you have started a worker, it is in the list
   - /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/xwusers
   - /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/xwapps
   - etc.

As soon as everything is ok you should :
  * install you server using its packages
  * deploy worker over your own volunteer PCs using its packages
  * install your worker packages on any of your web sites
    if you wish to enable anonymous volunteer power
  * install your client ZIP file on any of your web sites
    to allow registered users to use the platform

That's all folks
</msg>
<status status="PASS" endtime="20170915 10:01:12.754" starttime="20170915 10:01:12.753"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${install_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170915 10:01:12.755" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170915 10:01:12.755" starttime="20170915 10:01:12.754"></status>
</kw>
<kw name="Get Lines Containing String" library="String">
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<arguments>
<arg>${install_result.stdout}</arg>
<arg>That's all folks</arg>
</arguments>
<assign>
<var>${install_result_successful}</var>
</assign>
<msg timestamp="20170915 10:01:12.755" level="INFO">1 out of 273 lines matched</msg>
<msg timestamp="20170915 10:01:12.756" level="INFO">${install_result_successful} = That's all folks</msg>
<status status="PASS" endtime="20170915 10:01:12.756" starttime="20170915 10:01:12.755"></status>
</kw>
<kw name="Get Line Count" library="String">
<doc>Returns and logs the number of lines in the given string.</doc>
<arguments>
<arg>${install_result_successful}</arg>
</arguments>
<assign>
<var>${line_install_result_successful}</var>
</assign>
<msg timestamp="20170915 10:01:12.756" level="INFO">1 lines</msg>
<msg timestamp="20170915 10:01:12.756" level="INFO">${line_install_result_successful} = 1</msg>
<status status="PASS" endtime="20170915 10:01:12.756" starttime="20170915 10:01:12.756"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${line_install_result_successful}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20170915 10:01:12.757" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170915 10:01:12.757" starttime="20170915 10:01:12.756"></status>
</kw>
<status status="PASS" endtime="20170915 10:01:12.757" starttime="20170915 10:00:59.260"></status>
</kw>
<kw name="Start XWtremWeb Server And XWtremWeb Worker" library="XWCommon">
<kw name="Ping XWtremWeb Database" library="XWServer">
<kw name="Xtremweb Tables Must Exist" library="MySql">
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170915 10:01:12.778" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170915 10:01:12.781" starttime="20170915 10:01:12.758"></status>
</kw>
<status status="PASS" endtime="20170915 10:01:12.781" starttime="20170915 10:01:12.758"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>appTypes</arg>
</arguments>
<msg timestamp="20170915 10:01:12.781" level="INFO">Executing : Table Must Exist  |  appTypes </msg>
<msg timestamp="20170915 10:01:12.781" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='appTypes' </msg>
<status status="PASS" endtime="20170915 10:01:12.783" starttime="20170915 10:01:12.781"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps</arg>
</arguments>
<msg timestamp="20170915 10:01:12.783" level="INFO">Executing : Table Must Exist  |  apps </msg>
<msg timestamp="20170915 10:01:12.783" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='apps' </msg>
<status status="PASS" endtime="20170915 10:01:12.784" starttime="20170915 10:01:12.783"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps_history</arg>
</arguments>
<msg timestamp="20170915 10:01:12.784" level="INFO">Executing : Table Must Exist  |  apps_history </msg>
<msg timestamp="20170915 10:01:12.785" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='apps_history' </msg>
<status status="PASS" endtime="20170915 10:01:12.786" starttime="20170915 10:01:12.784"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>cpuTypes</arg>
</arguments>
<msg timestamp="20170915 10:01:12.786" level="INFO">Executing : Table Must Exist  |  cpuTypes </msg>
<msg timestamp="20170915 10:01:12.786" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='cpuTypes' </msg>
<status status="PASS" endtime="20170915 10:01:12.789" starttime="20170915 10:01:12.786"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>dataTypes</arg>
</arguments>
<msg timestamp="20170915 10:01:12.790" level="INFO">Executing : Table Must Exist  |  dataTypes </msg>
<msg timestamp="20170915 10:01:12.790" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='dataTypes' </msg>
<status status="PASS" endtime="20170915 10:01:12.791" starttime="20170915 10:01:12.789"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas</arg>
</arguments>
<msg timestamp="20170915 10:01:12.791" level="INFO">Executing : Table Must Exist  |  datas </msg>
<msg timestamp="20170915 10:01:12.791" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='datas' </msg>
<status status="PASS" endtime="20170915 10:01:12.792" starttime="20170915 10:01:12.791"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas_history</arg>
</arguments>
<msg timestamp="20170915 10:01:12.793" level="INFO">Executing : Table Must Exist  |  datas_history </msg>
<msg timestamp="20170915 10:01:12.793" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='datas_history' </msg>
<status status="PASS" endtime="20170915 10:01:12.794" starttime="20170915 10:01:12.792"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables</arg>
</arguments>
<msg timestamp="20170915 10:01:12.794" level="INFO">Executing : Table Must Exist  |  executables </msg>
<msg timestamp="20170915 10:01:12.794" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='executables' </msg>
<status status="PASS" endtime="20170915 10:01:12.795" starttime="20170915 10:01:12.794"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables_history</arg>
</arguments>
<msg timestamp="20170915 10:01:12.796" level="INFO">Executing : Table Must Exist  |  executables_history </msg>
<msg timestamp="20170915 10:01:12.796" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='executables_history' </msg>
<status status="PASS" endtime="20170915 10:01:12.797" starttime="20170915 10:01:12.796"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups</arg>
</arguments>
<msg timestamp="20170915 10:01:12.797" level="INFO">Executing : Table Must Exist  |  groups </msg>
<msg timestamp="20170915 10:01:12.797" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='groups' </msg>
<status status="PASS" endtime="20170915 10:01:12.802" starttime="20170915 10:01:12.797"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups_history</arg>
</arguments>
<msg timestamp="20170915 10:01:12.802" level="INFO">Executing : Table Must Exist  |  groups_history </msg>
<msg timestamp="20170915 10:01:12.802" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='groups_history' </msg>
<status status="PASS" endtime="20170915 10:01:12.803" starttime="20170915 10:01:12.802"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts</arg>
</arguments>
<msg timestamp="20170915 10:01:12.804" level="INFO">Executing : Table Must Exist  |  hosts </msg>
<msg timestamp="20170915 10:01:12.804" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='hosts' </msg>
<status status="PASS" endtime="20170915 10:01:12.805" starttime="20170915 10:01:12.803"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts_history</arg>
</arguments>
<msg timestamp="20170915 10:01:12.805" level="INFO">Executing : Table Must Exist  |  hosts_history </msg>
<msg timestamp="20170915 10:01:12.805" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='hosts_history' </msg>
<status status="PASS" endtime="20170915 10:01:12.807" starttime="20170915 10:01:12.805"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships</arg>
</arguments>
<msg timestamp="20170915 10:01:12.807" level="INFO">Executing : Table Must Exist  |  memberships </msg>
<msg timestamp="20170915 10:01:12.807" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='memberships' </msg>
<status status="PASS" endtime="20170915 10:01:12.808" starttime="20170915 10:01:12.807"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships_history</arg>
</arguments>
<msg timestamp="20170915 10:01:12.809" level="INFO">Executing : Table Must Exist  |  memberships_history </msg>
<msg timestamp="20170915 10:01:12.809" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='memberships_history' </msg>
<status status="PASS" endtime="20170915 10:01:12.810" starttime="20170915 10:01:12.808"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>oses</arg>
</arguments>
<msg timestamp="20170915 10:01:12.810" level="INFO">Executing : Table Must Exist  |  oses </msg>
<msg timestamp="20170915 10:01:12.810" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='oses' </msg>
<status status="PASS" endtime="20170915 10:01:12.811" starttime="20170915 10:01:12.810"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>packageTypes</arg>
</arguments>
<msg timestamp="20170915 10:01:12.812" level="INFO">Executing : Table Must Exist  |  packageTypes </msg>
<msg timestamp="20170915 10:01:12.812" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='packageTypes' </msg>
<status status="PASS" endtime="20170915 10:01:12.817" starttime="20170915 10:01:12.811"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions</arg>
</arguments>
<msg timestamp="20170915 10:01:12.818" level="INFO">Executing : Table Must Exist  |  sessions </msg>
<msg timestamp="20170915 10:01:12.818" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sessions' </msg>
<status status="PASS" endtime="20170915 10:01:12.819" starttime="20170915 10:01:12.818"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions_history</arg>
</arguments>
<msg timestamp="20170915 10:01:12.819" level="INFO">Executing : Table Must Exist  |  sessions_history </msg>
<msg timestamp="20170915 10:01:12.819" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sessions_history' </msg>
<status status="PASS" endtime="20170915 10:01:12.820" starttime="20170915 10:01:12.819"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes</arg>
</arguments>
<msg timestamp="20170915 10:01:12.821" level="INFO">Executing : Table Must Exist  |  sharedAppTypes </msg>
<msg timestamp="20170915 10:01:12.821" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedAppTypes' </msg>
<status status="PASS" endtime="20170915 10:01:12.822" starttime="20170915 10:01:12.821"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes_history</arg>
</arguments>
<msg timestamp="20170915 10:01:12.822" level="INFO">Executing : Table Must Exist  |  sharedAppTypes_history </msg>
<msg timestamp="20170915 10:01:12.822" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedAppTypes_history' </msg>
<status status="PASS" endtime="20170915 10:01:12.823" starttime="20170915 10:01:12.822"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes</arg>
</arguments>
<msg timestamp="20170915 10:01:12.824" level="INFO">Executing : Table Must Exist  |  sharedPackageTypes </msg>
<msg timestamp="20170915 10:01:12.824" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedPackageTypes' </msg>
<status status="PASS" endtime="20170915 10:01:12.825" starttime="20170915 10:01:12.823"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes_history</arg>
</arguments>
<msg timestamp="20170915 10:01:12.825" level="INFO">Executing : Table Must Exist  |  sharedPackageTypes_history </msg>
<msg timestamp="20170915 10:01:12.825" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedPackageTypes_history' </msg>
<status status="PASS" endtime="20170915 10:01:12.826" starttime="20170915 10:01:12.825"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>statuses</arg>
</arguments>
<msg timestamp="20170915 10:01:12.826" level="INFO">Executing : Table Must Exist  |  statuses </msg>
<msg timestamp="20170915 10:01:12.826" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='statuses' </msg>
<status status="PASS" endtime="20170915 10:01:12.827" starttime="20170915 10:01:12.826"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks</arg>
</arguments>
<msg timestamp="20170915 10:01:12.828" level="INFO">Executing : Table Must Exist  |  tasks </msg>
<msg timestamp="20170915 10:01:12.828" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='tasks' </msg>
<status status="PASS" endtime="20170915 10:01:12.829" starttime="20170915 10:01:12.828"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks_history</arg>
</arguments>
<msg timestamp="20170915 10:01:12.829" level="INFO">Executing : Table Must Exist  |  tasks_history </msg>
<msg timestamp="20170915 10:01:12.829" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='tasks_history' </msg>
<status status="PASS" endtime="20170915 10:01:12.834" starttime="20170915 10:01:12.829"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces</arg>
</arguments>
<msg timestamp="20170915 10:01:12.834" level="INFO">Executing : Table Must Exist  |  traces </msg>
<msg timestamp="20170915 10:01:12.834" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='traces' </msg>
<status status="PASS" endtime="20170915 10:01:12.835" starttime="20170915 10:01:12.834"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces_history</arg>
</arguments>
<msg timestamp="20170915 10:01:12.836" level="INFO">Executing : Table Must Exist  |  traces_history </msg>
<msg timestamp="20170915 10:01:12.836" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='traces_history' </msg>
<status status="PASS" endtime="20170915 10:01:12.837" starttime="20170915 10:01:12.835"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>userRights</arg>
</arguments>
<msg timestamp="20170915 10:01:12.837" level="INFO">Executing : Table Must Exist  |  userRights </msg>
<msg timestamp="20170915 10:01:12.837" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='userRights' </msg>
<status status="PASS" endtime="20170915 10:01:12.838" starttime="20170915 10:01:12.837"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups</arg>
</arguments>
<msg timestamp="20170915 10:01:12.838" level="INFO">Executing : Table Must Exist  |  usergroups </msg>
<msg timestamp="20170915 10:01:12.838" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='usergroups' </msg>
<status status="PASS" endtime="20170915 10:01:12.839" starttime="20170915 10:01:12.838"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups_history</arg>
</arguments>
<msg timestamp="20170915 10:01:12.840" level="INFO">Executing : Table Must Exist  |  usergroups_history </msg>
<msg timestamp="20170915 10:01:12.840" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='usergroups_history' </msg>
<status status="PASS" endtime="20170915 10:01:12.841" starttime="20170915 10:01:12.840"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users</arg>
</arguments>
<msg timestamp="20170915 10:01:12.841" level="INFO">Executing : Table Must Exist  |  users </msg>
<msg timestamp="20170915 10:01:12.841" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='users' </msg>
<status status="PASS" endtime="20170915 10:01:12.842" starttime="20170915 10:01:12.841"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users_history</arg>
</arguments>
<msg timestamp="20170915 10:01:12.843" level="INFO">Executing : Table Must Exist  |  users_history </msg>
<msg timestamp="20170915 10:01:12.843" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='users_history' </msg>
<status status="PASS" endtime="20170915 10:01:12.844" starttime="20170915 10:01:12.843"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>version</arg>
</arguments>
<msg timestamp="20170915 10:01:12.844" level="INFO">Executing : Table Must Exist  |  version </msg>
<msg timestamp="20170915 10:01:12.845" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='version' </msg>
<status status="PASS" endtime="20170915 10:01:12.846" starttime="20170915 10:01:12.844"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>versions</arg>
</arguments>
<msg timestamp="20170915 10:01:12.846" level="INFO">Executing : Table Must Exist  |  versions </msg>
<msg timestamp="20170915 10:01:12.846" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='versions' </msg>
<status status="PASS" endtime="20170915 10:01:12.847" starttime="20170915 10:01:12.846"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps</arg>
</arguments>
<msg timestamp="20170915 10:01:12.847" level="INFO">Executing : Table Must Exist  |  view_apps </msg>
<msg timestamp="20170915 10:01:12.847" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps' </msg>
<status status="PASS" endtime="20170915 10:01:12.848" starttime="20170915 10:01:12.847"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps_for_offering</arg>
</arguments>
<msg timestamp="20170915 10:01:12.849" level="INFO">Executing : Table Must Exist  |  view_apps_for_offering </msg>
<msg timestamp="20170915 10:01:12.849" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps_for_offering' </msg>
<status status="PASS" endtime="20170915 10:01:12.850" starttime="20170915 10:01:12.849"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps_for_offering_with_file_sizes</arg>
</arguments>
<msg timestamp="20170915 10:01:12.850" level="INFO">Executing : Table Must Exist  |  view_apps_for_offering_with_file_sizes </msg>
<msg timestamp="20170915 10:01:12.850" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps_for_offering_with_file_sizes' </msg>
<status status="PASS" endtime="20170915 10:01:12.851" starttime="20170915 10:01:12.850"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_datas</arg>
</arguments>
<msg timestamp="20170915 10:01:12.852" level="INFO">Executing : Table Must Exist  |  view_datas </msg>
<msg timestamp="20170915 10:01:12.852" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_datas' </msg>
<status status="PASS" endtime="20170915 10:01:12.853" starttime="20170915 10:01:12.851"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_executables</arg>
</arguments>
<msg timestamp="20170915 10:01:12.853" level="INFO">Executing : Table Must Exist  |  view_executables </msg>
<msg timestamp="20170915 10:01:12.853" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_executables' </msg>
<status status="PASS" endtime="20170915 10:01:12.854" starttime="20170915 10:01:12.853"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_groups</arg>
</arguments>
<msg timestamp="20170915 10:01:12.855" level="INFO">Executing : Table Must Exist  |  view_groups </msg>
<msg timestamp="20170915 10:01:12.855" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_groups' </msg>
<status status="PASS" endtime="20170915 10:01:12.856" starttime="20170915 10:01:12.854"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts</arg>
</arguments>
<msg timestamp="20170915 10:01:12.856" level="INFO">Executing : Table Must Exist  |  view_hosts </msg>
<msg timestamp="20170915 10:01:12.856" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts' </msg>
<status status="PASS" endtime="20170915 10:01:12.857" starttime="20170915 10:01:12.856"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_deployable</arg>
</arguments>
<msg timestamp="20170915 10:01:12.858" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_deployable </msg>
<msg timestamp="20170915 10:01:12.858" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_deployable' </msg>
<status status="PASS" endtime="20170915 10:01:12.859" starttime="20170915 10:01:12.857"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_deployable_and_shared</arg>
</arguments>
<msg timestamp="20170915 10:01:12.859" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_deployable_and_shared </msg>
<msg timestamp="20170915 10:01:12.859" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_deployable_and_shared' </msg>
<status status="PASS" endtime="20170915 10:01:12.860" starttime="20170915 10:01:12.859"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_shared</arg>
</arguments>
<msg timestamp="20170915 10:01:12.861" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_shared </msg>
<msg timestamp="20170915 10:01:12.861" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_shared' </msg>
<status status="PASS" endtime="20170915 10:01:12.863" starttime="20170915 10:01:12.860"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_sessions</arg>
</arguments>
<msg timestamp="20170915 10:01:12.863" level="INFO">Executing : Table Must Exist  |  view_sessions </msg>
<msg timestamp="20170915 10:01:12.863" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_sessions' </msg>
<status status="PASS" endtime="20170915 10:01:12.864" starttime="20170915 10:01:12.863"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_tasks</arg>
</arguments>
<msg timestamp="20170915 10:01:12.864" level="INFO">Executing : Table Must Exist  |  view_tasks </msg>
<msg timestamp="20170915 10:01:12.864" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_tasks' </msg>
<status status="PASS" endtime="20170915 10:01:12.865" starttime="20170915 10:01:12.864"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_traces</arg>
</arguments>
<msg timestamp="20170915 10:01:12.866" level="INFO">Executing : Table Must Exist  |  view_traces </msg>
<msg timestamp="20170915 10:01:12.866" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_traces' </msg>
<status status="PASS" endtime="20170915 10:01:12.867" starttime="20170915 10:01:12.865"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_usergroups</arg>
</arguments>
<msg timestamp="20170915 10:01:12.867" level="INFO">Executing : Table Must Exist  |  view_usergroups </msg>
<msg timestamp="20170915 10:01:12.867" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_usergroups' </msg>
<status status="PASS" endtime="20170915 10:01:12.868" starttime="20170915 10:01:12.867"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users</arg>
</arguments>
<msg timestamp="20170915 10:01:12.868" level="INFO">Executing : Table Must Exist  |  view_users </msg>
<msg timestamp="20170915 10:01:12.868" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users' </msg>
<status status="PASS" endtime="20170915 10:01:12.869" starttime="20170915 10:01:12.868"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_apps</arg>
</arguments>
<msg timestamp="20170915 10:01:12.870" level="INFO">Executing : Table Must Exist  |  view_users_apps </msg>
<msg timestamp="20170915 10:01:12.870" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_apps' </msg>
<status status="PASS" endtime="20170915 10:01:12.871" starttime="20170915 10:01:12.869"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_datas</arg>
</arguments>
<msg timestamp="20170915 10:01:12.871" level="INFO">Executing : Table Must Exist  |  view_users_datas </msg>
<msg timestamp="20170915 10:01:12.871" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_datas' </msg>
<status status="PASS" endtime="20170915 10:01:12.873" starttime="20170915 10:01:12.871"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_groups</arg>
</arguments>
<msg timestamp="20170915 10:01:12.873" level="INFO">Executing : Table Must Exist  |  view_users_groups </msg>
<msg timestamp="20170915 10:01:12.873" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_groups' </msg>
<status status="PASS" endtime="20170915 10:01:12.874" starttime="20170915 10:01:12.873"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_hosts</arg>
</arguments>
<msg timestamp="20170915 10:01:12.874" level="INFO">Executing : Table Must Exist  |  view_users_hosts </msg>
<msg timestamp="20170915 10:01:12.874" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_hosts' </msg>
<status status="PASS" endtime="20170915 10:01:12.875" starttime="20170915 10:01:12.874"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_sessions</arg>
</arguments>
<msg timestamp="20170915 10:01:12.876" level="INFO">Executing : Table Must Exist  |  view_users_sessions </msg>
<msg timestamp="20170915 10:01:12.876" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_sessions' </msg>
<status status="PASS" endtime="20170915 10:01:12.877" starttime="20170915 10:01:12.876"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_tasks</arg>
</arguments>
<msg timestamp="20170915 10:01:12.877" level="INFO">Executing : Table Must Exist  |  view_users_tasks </msg>
<msg timestamp="20170915 10:01:12.877" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_tasks' </msg>
<status status="PASS" endtime="20170915 10:01:12.878" starttime="20170915 10:01:12.877"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_traces</arg>
</arguments>
<msg timestamp="20170915 10:01:12.879" level="INFO">Executing : Table Must Exist  |  view_users_traces </msg>
<msg timestamp="20170915 10:01:12.879" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_traces' </msg>
<status status="PASS" endtime="20170915 10:01:12.880" starttime="20170915 10:01:12.879"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_usergroups</arg>
</arguments>
<msg timestamp="20170915 10:01:12.880" level="INFO">Executing : Table Must Exist  |  view_users_usergroups </msg>
<msg timestamp="20170915 10:01:12.880" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_usergroups' </msg>
<status status="PASS" endtime="20170915 10:01:12.881" starttime="20170915 10:01:12.880"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_users</arg>
</arguments>
<msg timestamp="20170915 10:01:12.882" level="INFO">Executing : Table Must Exist  |  view_users_users </msg>
<msg timestamp="20170915 10:01:12.882" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_users' </msg>
<status status="PASS" endtime="20170915 10:01:12.883" starttime="20170915 10:01:12.881"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_works</arg>
</arguments>
<msg timestamp="20170915 10:01:12.883" level="INFO">Executing : Table Must Exist  |  view_users_works </msg>
<msg timestamp="20170915 10:01:12.883" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_works' </msg>
<status status="PASS" endtime="20170915 10:01:12.885" starttime="20170915 10:01:12.883"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works</arg>
</arguments>
<msg timestamp="20170915 10:01:12.885" level="INFO">Executing : Table Must Exist  |  view_works </msg>
<msg timestamp="20170915 10:01:12.885" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works' </msg>
<status status="PASS" endtime="20170915 10:01:12.887" starttime="20170915 10:01:12.885"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works_for_billing</arg>
</arguments>
<msg timestamp="20170915 10:01:12.887" level="INFO">Executing : Table Must Exist  |  view_works_for_billing </msg>
<msg timestamp="20170915 10:01:12.887" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works_for_billing' </msg>
<status status="PASS" endtime="20170915 10:01:12.888" starttime="20170915 10:01:12.887"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works_for_billing_with_file_sizes</arg>
</arguments>
<msg timestamp="20170915 10:01:12.888" level="INFO">Executing : Table Must Exist  |  view_works_for_billing_with_file_sizes </msg>
<msg timestamp="20170915 10:01:12.888" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works_for_billing_with_file_sizes' </msg>
<status status="PASS" endtime="20170915 10:01:12.889" starttime="20170915 10:01:12.888"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works</arg>
</arguments>
<msg timestamp="20170915 10:01:12.890" level="INFO">Executing : Table Must Exist  |  works </msg>
<msg timestamp="20170915 10:01:12.890" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='works' </msg>
<status status="PASS" endtime="20170915 10:01:12.891" starttime="20170915 10:01:12.890"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works_history</arg>
</arguments>
<msg timestamp="20170915 10:01:12.891" level="INFO">Executing : Table Must Exist  |  works_history </msg>
<msg timestamp="20170915 10:01:12.891" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='works_history' </msg>
<status status="PASS" endtime="20170915 10:01:12.893" starttime="20170915 10:01:12.891"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170915 10:01:12.894" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170915 10:01:12.894" starttime="20170915 10:01:12.893"></status>
</kw>
<status status="PASS" endtime="20170915 10:01:12.894" starttime="20170915 10:01:12.893"></status>
</kw>
<status status="PASS" endtime="20170915 10:01:12.894" starttime="20170915 10:01:12.758"></status>
</kw>
<status status="PASS" endtime="20170915 10:01:12.894" starttime="20170915 10:01:12.757"></status>
</kw>
<kw name="Start XtremWeb Server" library="XWServer">
<arguments>
<arg>${DIST_XWHEP_PATH}</arg>
</arguments>
<kw name="File Should Exist" library="OperatingSystem">
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xtremweb.server.conf</arg>
</arguments>
<msg timestamp="20170915 10:01:12.895" html="yes" level="INFO">File '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf&lt;/a&gt;' exists.</msg>
<status status="PASS" endtime="20170915 10:01:12.896" starttime="20170915 10:01:12.895"></status>
</kw>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xtremweb.server.conf</arg>
</arguments>
<assign>
<var>${config_content}</var>
</assign>
<msg timestamp="20170915 10:01:12.896" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf&lt;/a&gt;'.</msg>
<msg timestamp="20170915 10:01:12.897" level="INFO">${config_content} = #
# Copyrights     : CNRS
# Author         : Oleg Lodygensky
# Acknowledgment : XtremWeb-HEP is based on XtremWeb 1.8.0 by inria : http://www.xtremweb.net/
# Web            : http://www.xtremweb-hep.o...</msg>
<status status="PASS" endtime="20170915 10:01:12.897" starttime="20170915 10:01:12.896"></status>
</kw>
<kw name="Remove String Using Regexp" library="String">
<doc>Removes ``patterns`` from the given ``string``.</doc>
<arguments>
<arg>${config_content}</arg>
<arg>LAUNCHERURL=${XWCONFIGURE.VALUES.XWUPGRADEURL}</arg>
</arguments>
<assign>
<var>${config_content_filtered}</var>
</assign>
<msg timestamp="20170915 10:01:12.899" level="INFO">${config_content_filtered} = #
# Copyrights     : CNRS
# Author         : Oleg Lodygensky
# Acknowledgment : XtremWeb-HEP is based on XtremWeb 1.8.0 by inria : http://www.xtremweb.net/
# Web            : http://www.xtremweb-hep.o...</msg>
<status status="PASS" endtime="20170915 10:01:12.899" starttime="20170915 10:01:12.898"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${config_content_filtered}</arg>
<arg>\## HTTPSPORT=443</arg>
<arg>HTTPSPORT=${XWCONFIGURE.VALUES.HTTPSPORT}</arg>
</arguments>
<assign>
<var>${config_content_filtered}</var>
</assign>
<msg timestamp="20170915 10:01:12.900" level="INFO">${config_content_filtered} = #
# Copyrights     : CNRS
# Author         : Oleg Lodygensky
# Acknowledgment : XtremWeb-HEP is based on XtremWeb 1.8.0 by inria : http://www.xtremweb.net/
# Web            : http://www.xtremweb-hep.o...</msg>
<status status="PASS" endtime="20170915 10:01:12.900" starttime="20170915 10:01:12.899"></status>
</kw>
<kw name="Create File" library="OperatingSystem">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xtremweb.server.conf</arg>
<arg>content=${config_content_filtered}</arg>
</arguments>
<msg timestamp="20170915 10:01:12.901" html="yes" level="INFO">Created file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170915 10:01:12.902" starttime="20170915 10:01:12.900"></status>
</kw>
<kw name="Remove File" library="OperatingSystem">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<msg timestamp="20170915 10:01:12.904" html="yes" level="INFO">Removed file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170915 10:01:12.904" starttime="20170915 10:01:12.902"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/bin/xtremweb.server console</arg>
<arg>shell=yes</arg>
<arg>stderr=STDOUT</arg>
<arg>stdout=${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<assign>
<var>${created_process}</var>
</assign>
<msg timestamp="20170915 10:01:12.905" level="INFO">Starting process:
/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/xtremweb.server console</msg>
<msg timestamp="20170915 10:01:12.910" level="INFO">${created_process} = 3</msg>
<status status="PASS" endtime="20170915 10:01:12.910" starttime="20170915 10:01:12.904"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SERVER_PROCESS}</arg>
<arg>${created_process}</arg>
</arguments>
<msg timestamp="20170915 10:01:12.911" level="INFO">${SERVER_PROCESS} = 3</msg>
<status status="PASS" endtime="20170915 10:01:12.911" starttime="20170915 10:01:12.910"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2 min</arg>
<arg>5 sec</arg>
<arg>Check XtremWeb Server Start From Log</arg>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<kw name="Check XtremWeb Server Start From Log" library="XWServer">
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<kw name="Log XtremWeb Process Log File" library="XWServer">
<kw name="Log File" library="OperatingSystem">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<msg timestamp="20170915 10:01:12.913" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170915 10:01:12.915" level="INFO"></msg>
<status status="PASS" endtime="20170915 10:01:12.916" starttime="20170915 10:01:12.913"></status>
</kw>
<status status="PASS" endtime="20170915 10:01:12.916" starttime="20170915 10:01:12.912"></status>
</kw>
<kw name="Grep File" library="OperatingSystem">
<doc>Returns the lines of the specified file that match the ``pattern``.</doc>
<arguments>
<arg>${log}</arg>
<arg>listening on port : ${XWCONFIGURE.VALUES.HTTPSPORT}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20170915 10:01:12.916" html="yes" level="INFO">Reading file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170915 10:01:12.917" level="INFO">0 out of 0 lines matched</msg>
<msg timestamp="20170915 10:01:12.918" level="INFO">${ret} = </msg>
<status status="PASS" endtime="20170915 10:01:12.918" starttime="20170915 10:01:12.916"></status>
</kw>
<kw name="Get Line Count" library="String">
<doc>Returns and logs the number of lines in the given string.</doc>
<arguments>
<arg>${ret}</arg>
</arguments>
<assign>
<var>${line_count}</var>
</assign>
<msg timestamp="20170915 10:01:12.919" level="INFO">0 lines</msg>
<msg timestamp="20170915 10:01:12.919" level="INFO">${line_count} = 0</msg>
<status status="PASS" endtime="20170915 10:01:12.919" starttime="20170915 10:01:12.918"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${line_count}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20170915 10:01:12.919" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20170915 10:01:12.920" level="FAIL">0 != 2</msg>
<status status="FAIL" endtime="20170915 10:01:12.920" starttime="20170915 10:01:12.919"></status>
</kw>
<status status="FAIL" endtime="20170915 10:01:12.920" starttime="20170915 10:01:12.912"></status>
</kw>
<kw name="Check XtremWeb Server Start From Log" library="XWServer">
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<kw name="Log XtremWeb Process Log File" library="XWServer">
<kw name="Log File" library="OperatingSystem">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<msg timestamp="20170915 10:01:17.922" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170915 10:01:17.924" level="INFO">touch: cannot touch ‘/var/log/xwhep-ibishub.log’: Permission denied
Fri Sep 15 10:01:13 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : checking launch url
Fri Sep 15 10:01:13 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] WARNING : no launcher URL defined
Fri Sep 15 10:01:13 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : launching SmartSockets hub
[15/Sep/2017:10:01:15 +0000] [main_1] ERROR : setRole : role redefined ?! (was SERVER)
[15/Sep/2017:10:01:16 +0000] [xtremweb.database.DBConnPoolThread_main_1] INFO : Connection to database jdbc:mysql://localhost/xtremweb is ok, 70 created
[15/Sep/2017:10:01:16 +0000] [xtremweb.dispatcher.DBInterface_main_1] WARN : Can't retrieve any app
[15/Sep/2017:10:01:16 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't create ProxyValidator
[15/Sep/2017:10:01:16 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.io.FileNotFoundException: /tmp/castore (No such file or directory) (/tmp/castore (No such file or directory))
[15/Sep/2017:10:01:16 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't add CA certificates to keystore
[15/Sep/2017:10:01:16 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.lang.NullPointerException (null)
[15/Sep/2017:10:01:17 +0000] [xtremweb.dispatcher.HashTaskSet_TaskSet_14] INFO : TaskSet started (300000)
</msg>
<status status="PASS" endtime="20170915 10:01:17.925" starttime="20170915 10:01:17.922"></status>
</kw>
<status status="PASS" endtime="20170915 10:01:17.925" starttime="20170915 10:01:17.921"></status>
</kw>
<kw name="Grep File" library="OperatingSystem">
<doc>Returns the lines of the specified file that match the ``pattern``.</doc>
<arguments>
<arg>${log}</arg>
<arg>listening on port : ${XWCONFIGURE.VALUES.HTTPSPORT}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20170915 10:01:17.925" html="yes" level="INFO">Reading file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170915 10:01:17.926" level="INFO">0 out of 12 lines matched</msg>
<msg timestamp="20170915 10:01:17.927" level="INFO">${ret} = </msg>
<status status="PASS" endtime="20170915 10:01:17.927" starttime="20170915 10:01:17.925"></status>
</kw>
<kw name="Get Line Count" library="String">
<doc>Returns and logs the number of lines in the given string.</doc>
<arguments>
<arg>${ret}</arg>
</arguments>
<assign>
<var>${line_count}</var>
</assign>
<msg timestamp="20170915 10:01:17.927" level="INFO">0 lines</msg>
<msg timestamp="20170915 10:01:17.927" level="INFO">${line_count} = 0</msg>
<status status="PASS" endtime="20170915 10:01:17.927" starttime="20170915 10:01:17.927"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${line_count}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20170915 10:01:17.928" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20170915 10:01:17.928" level="FAIL">0 != 2</msg>
<status status="FAIL" endtime="20170915 10:01:17.928" starttime="20170915 10:01:17.928"></status>
</kw>
<status status="FAIL" endtime="20170915 10:01:17.929" starttime="20170915 10:01:17.921"></status>
</kw>
<kw name="Check XtremWeb Server Start From Log" library="XWServer">
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<kw name="Log XtremWeb Process Log File" library="XWServer">
<kw name="Log File" library="OperatingSystem">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<msg timestamp="20170915 10:01:22.931" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170915 10:01:22.940" level="INFO">touch: cannot touch ‘/var/log/xwhep-ibishub.log’: Permission denied
Fri Sep 15 10:01:13 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : checking launch url
Fri Sep 15 10:01:13 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] WARNING : no launcher URL defined
Fri Sep 15 10:01:13 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : launching SmartSockets hub
[15/Sep/2017:10:01:15 +0000] [main_1] ERROR : setRole : role redefined ?! (was SERVER)
[15/Sep/2017:10:01:16 +0000] [xtremweb.database.DBConnPoolThread_main_1] INFO : Connection to database jdbc:mysql://localhost/xtremweb is ok, 70 created
[15/Sep/2017:10:01:16 +0000] [xtremweb.dispatcher.DBInterface_main_1] WARN : Can't retrieve any app
[15/Sep/2017:10:01:16 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't create ProxyValidator
[15/Sep/2017:10:01:16 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.io.FileNotFoundException: /tmp/castore (No such file or directory) (/tmp/castore (No such file or directory))
[15/Sep/2017:10:01:16 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't add CA certificates to keystore
[15/Sep/2017:10:01:16 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.lang.NullPointerException (null)
[15/Sep/2017:10:01:17 +0000] [xtremweb.dispatcher.HashTaskSet_TaskSet_14] INFO : TaskSet started (300000)
[15/Sep/2017:10:01:18 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : still waiting task set...
[15/Sep/2017:10:01:18 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : UDP server not started
[15/Sep/2017:10:01:18 +0000] [xtremweb.communications.TCPServer_TCPServerNIO_15] INFO : started, listening on port : 4321
log4j:WARN No appenders could be found for logger (org.eclipse.jetty.util.log).
log4j:WARN Please initialize the log4j system properly.
log4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.
[15/Sep/2017:10:01:18 +0000] [xtremweb.communications.HTTPServer_main_1] INFO : started, listening on port : 9443
[15/Sep/2017:10:01:18 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : FACEBOOK : java.net.MalformedURLException: no protocol: 
[15/Sep/2017:10:01:18 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : GOOGLE : java.net.MalformedURLException: no protocol: 
[15/Sep/2017:10:01:18 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : TWITTER : java.net.MalformedURLException: no protocol: 
[15/Sep/2017:10:01:18 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : YAHOO : java.net.MalformedURLException: no protocol: 
[15/Sep/2017:10:01:19 +0000] [main_1] ERROR : Can't add new entry to keystore
[15/Sep/2017:10:01:19 +0000] [main_1] WARN : javax.net.ssl.SSLHandshakeException: sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target (sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target)
[15/Sep/2017:10:01:19 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : XWHEP Dispatcher(10.6.0-head) started [Fri Sep 15 10:01:19 UTC 2017]
[15/Sep/2017:10:01:19 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : DB vendor  = mysql
[15/Sep/2017:10:01:19 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : mileStone  = 
[15/Sep/2017:10:01:19 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Time out   = 15000
[15/Sep/2017:10:01:19 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Disk opt'd = true
[15/Sep/2017:10:01:19 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Net  opt'd = true
[15/Sep/2017:10:01:19 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : NIO        = true
XWHEP Dispatcher started  Fri Sep 15 10:01:19 UTC 2017
Name             : vagrant-ubuntu-trusty-64
Version          : 10.6.0-head
Identity         : 
XWRole           : SERVER
Started on       : Fri Sep 15 10:01:15 UTC 2017
Scheduler        : xtremweb.dispatcher.MatchingScheduler
SmartSockets hub : 172.28.128.3/172.17.0.1/10.0.2.15-4329#ce.0d.9d.39.cd.7c.00.00.3c.21.02.42.02.6c.0f.e2~vagrant
Server HTTP      : true
Alive            : 300
Alive time out   : 900
Polling time out : 15000
Optimize zip     : true
Optimize network : true
NIO              : true
Comm layer       : xtremweb.communications.TCPClient
Socket time out  : 60000
Socket retries   : 50
Max connections  : 200
TCP port         : 4321
UDP port         : 4323
HTPP  port       : 80
HTPPS port       : 9443
Sun RPC interposition port : 4328
Sandbox path : /usr/bin/lxc
Sandbox launch args : 
Host &lt;host&gt;&lt;uid&gt;964bb437-e752-4cc5-a8a5-e058c5d1d318&lt;/uid&gt;&lt;accessrights&gt;0x755&lt;/accessrights&gt;&lt;name&gt;vagrant-ubuntu-trusty-64&lt;/name&gt;&lt;cpuload&gt;50&lt;/cpuload&gt;&lt;natedipaddr&gt;10.0.2.15&lt;/natedipaddr&gt;&lt;ipaddr&gt;10.0.2.15&lt;/ipaddr&gt;&lt;hwaddr&gt;&lt;/hwaddr&gt;&lt;timezone&gt;Etc/UTC&lt;/timezone&gt;&lt;os&gt;LINUX&lt;/os&gt;&lt;osversion&gt;3.13.0-129-generic&lt;/osversion&gt;&lt;javaversion&gt;1.8.0_141&lt;/javaversion&gt;&lt;javadatamodel&gt;64&lt;/javadatamodel&gt;&lt;cputype&gt;AMD64&lt;/cputype&gt;&lt;cpunb&gt;1&lt;/cpunb&gt;&lt;cpumodel&gt;unknown&lt;/cpumodel&gt;&lt;cpuspeed&gt;0&lt;/cpuspeed&gt;&lt;totalmem&gt;0&lt;/totalmem&gt;&lt;totalswap&gt;0&lt;/totalswap&gt;&lt;totaltmp&gt;40284&lt;/totaltmp&gt;&lt;freetmp&gt;37314&lt;/freetmp&gt;&lt;project&gt;&lt;/project&gt;&lt;active&gt;true&lt;/active&gt;&lt;incomingconnections&gt;false&lt;/incomingconnections&gt;&lt;available&gt;false&lt;/available&gt;&lt;pilotjob&gt;false&lt;/pilotjob&gt;&lt;sgid&gt;&lt;/sgid&gt;&lt;timeout&gt;15000&lt;/timeout&gt;&lt;traces&gt;false&lt;/traces&gt;&lt;acceptbin&gt;false&lt;/acceptbin&gt;&lt;version&gt;10.6.0-head&lt;/version&gt;&lt;/host&gt;
[15/Sep/2017:10:01:19 +0000] [xtremweb.communications.HTTPServer_HTTPServer_218] INFO : started, listening on port : 9443
</msg>
<status status="PASS" endtime="20170915 10:01:22.940" starttime="20170915 10:01:22.930"></status>
</kw>
<status status="PASS" endtime="20170915 10:01:22.940" starttime="20170915 10:01:22.930"></status>
</kw>
<kw name="Grep File" library="OperatingSystem">
<doc>Returns the lines of the specified file that match the ``pattern``.</doc>
<arguments>
<arg>${log}</arg>
<arg>listening on port : ${XWCONFIGURE.VALUES.HTTPSPORT}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20170915 10:01:22.941" html="yes" level="INFO">Reading file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170915 10:01:22.942" level="INFO">2 out of 60 lines matched</msg>
<msg timestamp="20170915 10:01:22.942" level="INFO">${ret} = [15/Sep/2017:10:01:18 +0000] [xtremweb.communications.HTTPServer_main_1] INFO : started, listening on port : 9443
[15/Sep/2017:10:01:19 +0000] [xtremweb.communications.HTTPServer_HTTPServer_218] INFO ...</msg>
<status status="PASS" endtime="20170915 10:01:22.942" starttime="20170915 10:01:22.941"></status>
</kw>
<kw name="Get Line Count" library="String">
<doc>Returns and logs the number of lines in the given string.</doc>
<arguments>
<arg>${ret}</arg>
</arguments>
<assign>
<var>${line_count}</var>
</assign>
<msg timestamp="20170915 10:01:22.943" level="INFO">2 lines</msg>
<msg timestamp="20170915 10:01:22.943" level="INFO">${line_count} = 2</msg>
<status status="PASS" endtime="20170915 10:01:22.943" starttime="20170915 10:01:22.943"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${line_count}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20170915 10:01:22.944" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170915 10:01:22.944" starttime="20170915 10:01:22.943"></status>
</kw>
<status status="PASS" endtime="20170915 10:01:22.944" starttime="20170915 10:01:22.929"></status>
</kw>
<status status="PASS" endtime="20170915 10:01:22.944" starttime="20170915 10:01:12.911"></status>
</kw>
<kw name="Log XtremWeb Process Log File" library="XWServer">
<kw name="Log File" library="OperatingSystem">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<msg timestamp="20170915 10:01:22.945" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170915 10:01:22.949" level="INFO">touch: cannot touch ‘/var/log/xwhep-ibishub.log’: Permission denied
Fri Sep 15 10:01:13 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : checking launch url
Fri Sep 15 10:01:13 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] WARNING : no launcher URL defined
Fri Sep 15 10:01:13 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : launching SmartSockets hub
[15/Sep/2017:10:01:15 +0000] [main_1] ERROR : setRole : role redefined ?! (was SERVER)
[15/Sep/2017:10:01:16 +0000] [xtremweb.database.DBConnPoolThread_main_1] INFO : Connection to database jdbc:mysql://localhost/xtremweb is ok, 70 created
[15/Sep/2017:10:01:16 +0000] [xtremweb.dispatcher.DBInterface_main_1] WARN : Can't retrieve any app
[15/Sep/2017:10:01:16 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't create ProxyValidator
[15/Sep/2017:10:01:16 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.io.FileNotFoundException: /tmp/castore (No such file or directory) (/tmp/castore (No such file or directory))
[15/Sep/2017:10:01:16 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't add CA certificates to keystore
[15/Sep/2017:10:01:16 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.lang.NullPointerException (null)
[15/Sep/2017:10:01:17 +0000] [xtremweb.dispatcher.HashTaskSet_TaskSet_14] INFO : TaskSet started (300000)
[15/Sep/2017:10:01:18 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : still waiting task set...
[15/Sep/2017:10:01:18 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : UDP server not started
[15/Sep/2017:10:01:18 +0000] [xtremweb.communications.TCPServer_TCPServerNIO_15] INFO : started, listening on port : 4321
log4j:WARN No appenders could be found for logger (org.eclipse.jetty.util.log).
log4j:WARN Please initialize the log4j system properly.
log4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.
[15/Sep/2017:10:01:18 +0000] [xtremweb.communications.HTTPServer_main_1] INFO : started, listening on port : 9443
[15/Sep/2017:10:01:18 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : FACEBOOK : java.net.MalformedURLException: no protocol: 
[15/Sep/2017:10:01:18 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : GOOGLE : java.net.MalformedURLException: no protocol: 
[15/Sep/2017:10:01:18 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : TWITTER : java.net.MalformedURLException: no protocol: 
[15/Sep/2017:10:01:18 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : YAHOO : java.net.MalformedURLException: no protocol: 
[15/Sep/2017:10:01:19 +0000] [main_1] ERROR : Can't add new entry to keystore
[15/Sep/2017:10:01:19 +0000] [main_1] WARN : javax.net.ssl.SSLHandshakeException: sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target (sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target)
[15/Sep/2017:10:01:19 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : XWHEP Dispatcher(10.6.0-head) started [Fri Sep 15 10:01:19 UTC 2017]
[15/Sep/2017:10:01:19 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : DB vendor  = mysql
[15/Sep/2017:10:01:19 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : mileStone  = 
[15/Sep/2017:10:01:19 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Time out   = 15000
[15/Sep/2017:10:01:19 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Disk opt'd = true
[15/Sep/2017:10:01:19 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Net  opt'd = true
[15/Sep/2017:10:01:19 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : NIO        = true
XWHEP Dispatcher started  Fri Sep 15 10:01:19 UTC 2017
Name             : vagrant-ubuntu-trusty-64
Version          : 10.6.0-head
Identity         : 
XWRole           : SERVER
Started on       : Fri Sep 15 10:01:15 UTC 2017
Scheduler        : xtremweb.dispatcher.MatchingScheduler
SmartSockets hub : 172.28.128.3/172.17.0.1/10.0.2.15-4329#ce.0d.9d.39.cd.7c.00.00.3c.21.02.42.02.6c.0f.e2~vagrant
Server HTTP      : true
Alive            : 300
Alive time out   : 900
Polling time out : 15000
Optimize zip     : true
Optimize network : true
NIO              : true
Comm layer       : xtremweb.communications.TCPClient
Socket time out  : 60000
Socket retries   : 50
Max connections  : 200
TCP port         : 4321
UDP port         : 4323
HTPP  port       : 80
HTPPS port       : 9443
Sun RPC interposition port : 4328
Sandbox path : /usr/bin/lxc
Sandbox launch args : 
Host &lt;host&gt;&lt;uid&gt;964bb437-e752-4cc5-a8a5-e058c5d1d318&lt;/uid&gt;&lt;accessrights&gt;0x755&lt;/accessrights&gt;&lt;name&gt;vagrant-ubuntu-trusty-64&lt;/name&gt;&lt;cpuload&gt;50&lt;/cpuload&gt;&lt;natedipaddr&gt;10.0.2.15&lt;/natedipaddr&gt;&lt;ipaddr&gt;10.0.2.15&lt;/ipaddr&gt;&lt;hwaddr&gt;&lt;/hwaddr&gt;&lt;timezone&gt;Etc/UTC&lt;/timezone&gt;&lt;os&gt;LINUX&lt;/os&gt;&lt;osversion&gt;3.13.0-129-generic&lt;/osversion&gt;&lt;javaversion&gt;1.8.0_141&lt;/javaversion&gt;&lt;javadatamodel&gt;64&lt;/javadatamodel&gt;&lt;cputype&gt;AMD64&lt;/cputype&gt;&lt;cpunb&gt;1&lt;/cpunb&gt;&lt;cpumodel&gt;unknown&lt;/cpumodel&gt;&lt;cpuspeed&gt;0&lt;/cpuspeed&gt;&lt;totalmem&gt;0&lt;/totalmem&gt;&lt;totalswap&gt;0&lt;/totalswap&gt;&lt;totaltmp&gt;40284&lt;/totaltmp&gt;&lt;freetmp&gt;37314&lt;/freetmp&gt;&lt;project&gt;&lt;/project&gt;&lt;active&gt;true&lt;/active&gt;&lt;incomingconnections&gt;false&lt;/incomingconnections&gt;&lt;available&gt;false&lt;/available&gt;&lt;pilotjob&gt;false&lt;/pilotjob&gt;&lt;sgid&gt;&lt;/sgid&gt;&lt;timeout&gt;15000&lt;/timeout&gt;&lt;traces&gt;false&lt;/traces&gt;&lt;acceptbin&gt;false&lt;/acceptbin&gt;&lt;version&gt;10.6.0-head&lt;/version&gt;&lt;/host&gt;
[15/Sep/2017:10:01:19 +0000] [xtremweb.communications.HTTPServer_HTTPServer_218] INFO : started, listening on port : 9443
</msg>
<status status="PASS" endtime="20170915 10:01:22.949" starttime="20170915 10:01:22.945"></status>
</kw>
<status status="PASS" endtime="20170915 10:01:22.950" starttime="20170915 10:01:22.944"></status>
</kw>
<status status="PASS" endtime="20170915 10:01:22.950" starttime="20170915 10:01:12.894"></status>
</kw>
<kw name="Start XtremWeb Worker" library="XWWorker">
<arguments>
<arg>${DIST_XWHEP_PATH}</arg>
</arguments>
<kw name="File Should Exist" library="OperatingSystem">
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xtremweb.worker.conf</arg>
</arguments>
<msg timestamp="20170915 10:01:22.951" html="yes" level="INFO">File '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf&lt;/a&gt;' exists.</msg>
<status status="PASS" endtime="20170915 10:01:22.952" starttime="20170915 10:01:22.950"></status>
</kw>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xtremweb.worker.conf</arg>
</arguments>
<assign>
<var>${config_content}</var>
</assign>
<msg timestamp="20170915 10:01:22.952" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf&lt;/a&gt;'.</msg>
<msg timestamp="20170915 10:01:22.953" level="INFO">${config_content} = #
# Copyrights     : CNRS
# Author         : Oleg Lodygensky
# Acknowledgment : XtremWeb-HEP is based on XtremWeb 1.8.0 by inria : http://www.xtremweb.net/
# Web            : http://www.xtremweb-hep.o...</msg>
<status status="PASS" endtime="20170915 10:01:22.953" starttime="20170915 10:01:22.952"></status>
</kw>
<kw name="Remove String Using Regexp" library="String">
<doc>Removes ``patterns`` from the given ``string``.</doc>
<arguments>
<arg>${config_content}</arg>
<arg>LAUNCHERURL=${XWCONFIGURE.VALUES.XWUPGRADEURL}</arg>
</arguments>
<assign>
<var>${config_content_filtered}</var>
</assign>
<msg timestamp="20170915 10:01:22.954" level="INFO">${config_content_filtered} = #
# Copyrights     : CNRS
# Author         : Oleg Lodygensky
# Acknowledgment : XtremWeb-HEP is based on XtremWeb 1.8.0 by inria : http://www.xtremweb.net/
# Web            : http://www.xtremweb-hep.o...</msg>
<status status="PASS" endtime="20170915 10:01:22.954" starttime="20170915 10:01:22.953"></status>
</kw>
<kw name="Create File" library="OperatingSystem">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xtremweb.worker.conf</arg>
<arg>content=${config_content_filtered}</arg>
</arguments>
<msg timestamp="20170915 10:01:22.956" html="yes" level="INFO">Created file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170915 10:01:22.957" starttime="20170915 10:01:22.954"></status>
</kw>
<kw name="Remove File" library="OperatingSystem">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.worker.process.log</arg>
</arguments>
<msg timestamp="20170915 10:01:22.961" html="yes" level="INFO">Removed file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.worker.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.worker.process.log&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170915 10:01:22.961" starttime="20170915 10:01:22.957"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/bin/xtremweb.worker console</arg>
<arg>shell=yes</arg>
<arg>stderr=STDOUT</arg>
<arg>stdout=${DIST_XWHEP_PATH}/xwhep.worker.process.log</arg>
</arguments>
<assign>
<var>${created_process}</var>
</assign>
<msg timestamp="20170915 10:01:22.963" level="INFO">Starting process:
/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/xtremweb.worker console</msg>
<msg timestamp="20170915 10:01:22.967" level="INFO">${created_process} = 4</msg>
<status status="PASS" endtime="20170915 10:01:22.968" starttime="20170915 10:01:22.962"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${WORKER_PROCESS}</arg>
<arg>${created_process}</arg>
</arguments>
<msg timestamp="20170915 10:01:22.969" level="INFO">${WORKER_PROCESS} = 4</msg>
<status status="PASS" endtime="20170915 10:01:22.969" starttime="20170915 10:01:22.968"></status>
</kw>
<kw name="Log File" library="OperatingSystem">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.worker.process.log</arg>
</arguments>
<msg timestamp="20170915 10:01:22.970" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.worker.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.worker.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170915 10:01:22.973" level="INFO"></msg>
<status status="PASS" endtime="20170915 10:01:22.973" starttime="20170915 10:01:22.969"></status>
</kw>
<status status="PASS" endtime="20170915 10:01:22.974" starttime="20170915 10:01:22.950"></status>
</kw>
<status status="PASS" endtime="20170915 10:01:22.974" starttime="20170915 10:01:12.757"></status>
</kw>
<status status="PASS" endtime="20170915 10:01:22.974" starttime="20170915 10:00:18.928"></status>
</kw>
<kw name="Start Geth42" library="ETHGeth">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd ~/gethUtils &amp;&amp; ./resetANewChain42AndMine.sh</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${geth_result}</var>
</assign>
<msg timestamp="20170915 10:01:22.975" level="INFO">Starting process:
cd ~/gethUtils &amp;&amp; ./resetANewChain42AndMine.sh</msg>
<msg timestamp="20170915 10:01:22.977" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170915 10:12:10.186" level="INFO">Process completed.</msg>
<msg timestamp="20170915 10:12:10.186" level="INFO">${geth_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170915 10:12:10.186" starttime="20170915 10:01:22.975"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${geth_result.stderr}</arg>
</arguments>
<msg timestamp="20170915 10:12:10.187" level="INFO">WARN [09-15|10:01:28] No etherbase set and no accounts found as default 
INFO [09-15|10:01:28] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
INFO [09-15|10:01:28] Writing custom genesis block 
INFO [09-15|10:01:28] Successfully wrote genesis state         database=chaindata                                             hash=afad92…166fe3
INFO [09-15|10:01:28] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/lightchaindata cache=16 handles=16
INFO [09-15|10:01:28] Writing custom genesis block 
INFO [09-15|10:01:28] Successfully wrote genesis state         database=lightchaindata                                             hash=afad92…166fe3
WARN [09-15|10:01:28] No etherbase set and no accounts found as default 
INFO [09-15|10:01:35] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
INFO [09-15|10:01:35] Successfully wrote genesis state         database=chaindata                                             hash=afad92…166fe3
INFO [09-15|10:01:35] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/lightchaindata cache=16 handles=16
INFO [09-15|10:01:35] Successfully wrote genesis state         database=lightchaindata                                             hash=afad92…166fe3
INFO [09-15|10:01:38] Generating DAG in progress               epoch=1 percentage=0 elapsed=2.017s
INFO [09-15|10:01:40] Generating DAG in progress               epoch=1 percentage=1 elapsed=4.363s
INFO [09-15|10:01:43] Generating DAG in progress               epoch=1 percentage=2 elapsed=6.889s
INFO [09-15|10:01:45] Generating DAG in progress               epoch=1 percentage=3 elapsed=9.344s
INFO [09-15|10:01:48] Generating DAG in progress               epoch=1 percentage=4 elapsed=11.766s
INFO [09-15|10:01:50] Generating DAG in progress               epoch=1 percentage=5 elapsed=14.197s
INFO [09-15|10:01:52] Generating DAG in progress               epoch=1 percentage=6 elapsed=16.588s
INFO [09-15|10:01:55] Generating DAG in progress               epoch=1 percentage=7 elapsed=18.987s
INFO [09-15|10:01:57] Generating DAG in progress               epoch=1 percentage=8 elapsed=21.400s
INFO [09-15|10:02:00] Generating DAG in progress               epoch=1 percentage=9 elapsed=23.826s
INFO [09-15|10:02:02] Generating DAG in progress               epoch=1 percentage=10 elapsed=26.190s
INFO [09-15|10:02:04] Generating DAG in progress               epoch=1 percentage=11 elapsed=28.543s
INFO [09-15|10:02:07] Generating DAG in progress               epoch=1 percentage=12 elapsed=30.981s
INFO [09-15|10:02:09] Generating DAG in progress               epoch=1 percentage=13 elapsed=33.402s
INFO [09-15|10:02:13] Generating DAG in progress               epoch=1 percentage=14 elapsed=36.872s
INFO [09-15|10:02:15] Generating DAG in progress               epoch=1 percentage=15 elapsed=39.318s
INFO [09-15|10:02:18] Generating DAG in progress               epoch=1 percentage=16 elapsed=41.867s
INFO [09-15|10:02:20] Generating DAG in progress               epoch=1 percentage=17 elapsed=44.251s
INFO [09-15|10:02:23] Generating DAG in progress               epoch=1 percentage=18 elapsed=46.814s
INFO [09-15|10:02:25] Generating DAG in progress               epoch=1 percentage=19 elapsed=49.255s
INFO [09-15|10:02:28] Generating DAG in progress               epoch=1 percentage=20 elapsed=51.712s
INFO [09-15|10:02:30] Generating DAG in progress               epoch=1 percentage=21 elapsed=54.303s
INFO [09-15|10:02:32] Generating DAG in progress               epoch=1 percentage=22 elapsed=56.584s
INFO [09-15|10:02:34] Generating DAG in progress               epoch=1 percentage=23 elapsed=58.553s
INFO [09-15|10:02:36] Generating DAG in progress               epoch=1 percentage=24 elapsed=1m0.534s
INFO [09-15|10:02:38] Generating DAG in progress               epoch=1 percentage=25 elapsed=1m2.524s
INFO [09-15|10:02:40] Generating DAG in progress               epoch=1 percentage=26 elapsed=1m4.507s
INFO [09-15|10:02:42] Generating DAG in progress               epoch=1 percentage=27 elapsed=1m6.478s
INFO [09-15|10:02:44] Generating DAG in progress               epoch=1 percentage=28 elapsed=1m8.476s
INFO [09-15|10:02:46] Generating DAG in progress               epoch=1 percentage=29 elapsed=1m10.449s
INFO [09-15|10:02:49] Generating DAG in progress               epoch=1 percentage=30 elapsed=1m12.726s
INFO [09-15|10:02:51] Generating DAG in progress               epoch=1 percentage=31 elapsed=1m15.150s
INFO [09-15|10:02:53] Generating DAG in progress               epoch=1 percentage=32 elapsed=1m17.536s
INFO [09-15|10:02:56] Generating DAG in progress               epoch=1 percentage=33 elapsed=1m19.976s
INFO [09-15|10:02:59] Generating DAG in progress               epoch=1 percentage=34 elapsed=1m23.103s
INFO [09-15|10:03:01] Generating DAG in progress               epoch=1 percentage=35 elapsed=1m25.502s
INFO [09-15|10:03:04] Generating DAG in progress               epoch=1 percentage=36 elapsed=1m28.100s
INFO [09-15|10:03:06] Generating DAG in progress               epoch=1 percentage=37 elapsed=1m30.533s
INFO [09-15|10:03:09] Generating DAG in progress               epoch=1 percentage=38 elapsed=1m33.018s
INFO [09-15|10:03:11] Generating DAG in progress               epoch=1 percentage=39 elapsed=1m35.452s
INFO [09-15|10:03:14] Generating DAG in progress               epoch=1 percentage=40 elapsed=1m37.929s
INFO [09-15|10:03:16] Generating DAG in progress               epoch=1 percentage=41 elapsed=1m40.369s
INFO [09-15|10:03:19] Generating DAG in progress               epoch=1 percentage=42 elapsed=1m42.847s
INFO [09-15|10:03:21] Generating DAG in progress               epoch=1 percentage=43 elapsed=1m45.330s
INFO [09-15|10:03:24] Generating DAG in progress               epoch=1 percentage=44 elapsed=1m47.876s
INFO [09-15|10:03:26] Generating DAG in progress               epoch=1 percentage=45 elapsed=1m50.405s
INFO [09-15|10:03:29] Generating DAG in progress               epoch=1 percentage=46 elapsed=1m53.316s
INFO [09-15|10:03:35] Generating DAG in progress               epoch=1 percentage=47 elapsed=1m58.683s
INFO [09-15|10:03:38] Generating DAG in progress               epoch=1 percentage=48 elapsed=2m1.702s
INFO [09-15|10:03:41] Generating DAG in progress               epoch=1 percentage=49 elapsed=2m5.055s
INFO [09-15|10:03:44] Generating DAG in progress               epoch=1 percentage=50 elapsed=2m7.861s
INFO [09-15|10:03:47] Generating DAG in progress               epoch=1 percentage=51 elapsed=2m10.884s
INFO [09-15|10:03:50] Generating DAG in progress               epoch=1 percentage=52 elapsed=2m13.981s
INFO [09-15|10:03:53] Generating DAG in progress               epoch=1 percentage=53 elapsed=2m16.922s
INFO [09-15|10:03:56] Generating DAG in progress               epoch=1 percentage=54 elapsed=2m19.735s
INFO [09-15|10:03:59] Generating DAG in progress               epoch=1 percentage=55 elapsed=2m23.053s
INFO [09-15|10:04:02] Generating DAG in progress               epoch=1 percentage=56 elapsed=2m26.228s
INFO [09-15|10:04:06] Generating DAG in progress               epoch=1 percentage=57 elapsed=2m30.167s
INFO [09-15|10:04:09] Generating DAG in progress               epoch=1 percentage=58 elapsed=2m33.221s
INFO [09-15|10:04:12] Generating DAG in progress               epoch=1 percentage=59 elapsed=2m36.315s
INFO [09-15|10:04:15] Generating DAG in progress               epoch=1 percentage=60 elapsed=2m39.615s
INFO [09-15|10:04:19] Generating DAG in progress               epoch=1 percentage=61 elapsed=2m42.769s
INFO [09-15|10:04:22] Generating DAG in progress               epoch=1 percentage=62 elapsed=2m45.941s
INFO [09-15|10:04:25] Generating DAG in progress               epoch=1 percentage=63 elapsed=2m48.850s
INFO [09-15|10:04:28] Generating DAG in progress               epoch=1 percentage=64 elapsed=2m51.789s
INFO [09-15|10:04:31] Generating DAG in progress               epoch=1 percentage=65 elapsed=2m54.884s
INFO [09-15|10:04:34] Generating DAG in progress               epoch=1 percentage=66 elapsed=2m57.805s
INFO [09-15|10:04:37] Generating DAG in progress               epoch=1 percentage=67 elapsed=3m1.518s
INFO [09-15|10:04:40] Generating DAG in progress               epoch=1 percentage=68 elapsed=3m4.589s
INFO [09-15|10:04:44] Generating DAG in progress               epoch=1 percentage=69 elapsed=3m7.834s
INFO [09-15|10:04:47] Generating DAG in progress               epoch=1 percentage=70 elapsed=3m10.994s
INFO [09-15|10:04:50] Generating DAG in progress               epoch=1 percentage=71 elapsed=3m14.274s
INFO [09-15|10:04:53] Generating DAG in progress               epoch=1 percentage=72 elapsed=3m16.832s
INFO [09-15|10:04:56] Generating DAG in progress               epoch=1 percentage=73 elapsed=3m19.685s
INFO [09-15|10:04:58] Generating DAG in progress               epoch=1 percentage=74 elapsed=3m22.417s
INFO [09-15|10:05:01] Generating DAG in progress               epoch=1 percentage=75 elapsed=3m25.484s
INFO [09-15|10:05:04] Generating DAG in progress               epoch=1 percentage=76 elapsed=3m28.228s
INFO [09-15|10:05:07] Generating DAG in progress               epoch=1 percentage=77 elapsed=3m31.132s
INFO [09-15|10:05:10] Generating DAG in progress               epoch=1 percentage=78 elapsed=3m34.220s
INFO [09-15|10:05:13] Generating DAG in progress               epoch=1 percentage=79 elapsed=3m36.934s
INFO [09-15|10:05:16] Generating DAG in progress               epoch=1 percentage=80 elapsed=3m40.461s
INFO [09-15|10:05:20] Generating DAG in progress               epoch=1 percentage=81 elapsed=3m43.856s
INFO [09-15|10:05:23] Generating DAG in progress               epoch=1 percentage=82 elapsed=3m46.711s
INFO [09-15|10:05:26] Generating DAG in progress               epoch=1 percentage=83 elapsed=3m49.919s
INFO [09-15|10:05:28] Generating DAG in progress               epoch=1 percentage=84 elapsed=3m52.675s
INFO [09-15|10:05:31] Generating DAG in progress               epoch=1 percentage=85 elapsed=3m55.423s
INFO [09-15|10:05:34] Generating DAG in progress               epoch=1 percentage=86 elapsed=3m58.019s
INFO [09-15|10:05:36] Generating DAG in progress               epoch=1 percentage=87 elapsed=4m0.553s
INFO [09-15|10:05:39] Generating DAG in progress               epoch=1 percentage=88 elapsed=4m3.159s
INFO [09-15|10:05:42] Generating DAG in progress               epoch=1 percentage=89 elapsed=4m6.074s
INFO [09-15|10:05:45] Generating DAG in progress               epoch=1 percentage=90 elapsed=4m8.807s
INFO [09-15|10:05:47] Generating DAG in progress               epoch=1 percentage=91 elapsed=4m11.552s
INFO [09-15|10:05:50] Generating DAG in progress               epoch=1 percentage=92 elapsed=4m14.400s
INFO [09-15|10:05:53] Generating DAG in progress               epoch=1 percentage=93 elapsed=4m17.039s
INFO [09-15|10:05:55] Generating DAG in progress               epoch=1 percentage=94 elapsed=4m19.485s
INFO [09-15|10:05:58] Generating DAG in progress               epoch=1 percentage=95 elapsed=4m21.913s
INFO [09-15|10:06:00] Generating DAG in progress               epoch=1 percentage=96 elapsed=4m24.377s
INFO [09-15|10:06:03] Generating DAG in progress               epoch=1 percentage=97 elapsed=4m27.286s
INFO [09-15|10:06:06] Generating DAG in progress               epoch=1 percentage=98 elapsed=4m29.724s
INFO [09-15|10:06:08] Generating DAG in progress               epoch=1 percentage=99 elapsed=4m32.357s
INFO [09-15|10:06:08] Generated ethash verification cache      epoch=1 elapsed=4m32.360s
INFO [09-15|10:06:08] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
INFO [09-15|10:06:08] Successfully wrote genesis state         database=chaindata                                             hash=afad92…166fe3
INFO [09-15|10:06:08] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/lightchaindata cache=16 handles=16
INFO [09-15|10:06:08] Successfully wrote genesis state         database=lightchaindata                                             hash=afad92…166fe3
INFO [09-15|10:06:14] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-15|10:06:24] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-15|10:06:34] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-15|10:06:45] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-15|10:06:55] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-15|10:07:05] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-15|10:07:16] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-15|10:07:26] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-15|10:07:37] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-15|10:07:47] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-15|10:07:58] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-15|10:08:08] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-15|10:08:19] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-15|10:08:29] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-15|10:08:40] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-15|10:08:50] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-15|10:09:01] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-15|10:09:11] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-15|10:09:22] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-15|10:09:32] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-15|10:09:43] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-15|10:09:53] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-15|10:10:04] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-15|10:10:14] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-15|10:10:24] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-15|10:10:35] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-15|10:10:45] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-15|10:10:56] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-15|10:11:06] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-15|10:11:17] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-15|10:11:27] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-15|10:11:37] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-15|10:11:48] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-15|10:11:48] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable</msg>
<status status="PASS" endtime="20170915 10:12:10.188" starttime="20170915 10:12:10.187"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${geth_result.stdout}</arg>
</arguments>
<msg timestamp="20170915 10:12:10.188" level="INFO">kill existing geth process
clear ~/iexecdev/.ethereum/net42/ content
clear ~/.ethash content
creating 10 accounts
create account 1
Address: {8cafc3f2a86aef2a5a261467ea4231cf1239f0d5}
create account 2
Address: {68767016cb0b623b8555f3eaa0480cb0a7bd3f20}
create account 3
Address: {cea29878afc25b5fa49364b223bf6bfcf6c5f66c}
create account 4
Address: {eed0e02473c7549744b8b5a69026fd29d6fc96e9}
create account 5
Address: {a999a69e90205108c9bcfcddf3786a2e82b11de7}
create account 6
Address: {f5d0125843db5864fcfc617c5bd40f99e438d873}
create account 7
Address: {633ce5776669e91e33cb5cc117a304eef2eb5103}
create account 8
Address: {3f4f17973c5ee3a18236e9be029a867d235c496a}
create account 9
Address: {5b6a18fd90aa0af8322577b83549ae00b2c12a4a}
create account 10
Address: {fafadb075ce25cdd49c3b3af2c8db053a9219443}
create DAG epoch 1
clear ~/.ethash content
start a coinbase miner in background
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
5 blocks mined in geth 42 !
unlocked 9 accounts
Fatal: Failed to open database: resource temporarily unavailable
unlock account 1
true
unlock account 2
true
unlock account 3
true
unlock account 4
true
unlock account 5
true
unlock account 6
true
unlock account 7
true
unlock account 8
true
unlock account 9
true
local geth 42 ready to go for testing</msg>
<status status="PASS" endtime="20170915 10:12:10.189" starttime="20170915 10:12:10.188"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${geth_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170915 10:12:10.189" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170915 10:12:10.189" starttime="20170915 10:12:10.189"></status>
</kw>
<status status="PASS" endtime="20170915 10:12:10.190" starttime="20170915 10:01:22.974"></status>
</kw>
<kw name="Init Oracle" library="IexecOracle">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${IEXEC_ORACLE_FORCE_GIT_CLONE}' == 'true'</arg>
<arg>Git Clone Iexec Oracle</arg>
</arguments>
<status status="PASS" endtime="20170915 10:12:10.191" starttime="20170915 10:12:10.190"></status>
</kw>
<kw name="Npm Install Iexec Oracle" library="IexecOracle">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd iexec-oracle &amp;&amp; npm install</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${npm_result}</var>
</assign>
<msg timestamp="20170915 10:12:10.192" level="INFO">Starting process:
cd iexec-oracle &amp;&amp; npm install</msg>
<msg timestamp="20170915 10:12:10.200" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170915 10:12:27.359" level="INFO">Process completed.</msg>
<msg timestamp="20170915 10:12:27.360" level="INFO">${npm_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170915 10:12:27.360" starttime="20170915 10:12:10.191"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${npm_result.stderr}</arg>
</arguments>
<msg timestamp="20170915 10:12:27.361" level="INFO">npm WARN xtremwebinterface@1.0.0 No repository field.</msg>
<status status="PASS" endtime="20170915 10:12:27.361" starttime="20170915 10:12:27.360"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${npm_result.stdout}</arg>
</arguments>
<msg timestamp="20170915 10:12:27.362" level="INFO">xtremwebinterface@1.0.0 /home/vagrant/iexecdev/iexec-node/tests/rf/iexec-oracle
├── bluebird@3.5.0 
├── lodash@4.17.4 
├─┬ truffle@3.4.7 
│ ├─┬ mocha@3.5.3 
│ │ ├── browser-stdout@1.3.0 
│ │ ├─┬ commander@2.9.0 
│ │ │ └── graceful-readlink@1.0.1 
│ │ ├─┬ debug@2.6.8 
│ │ │ └── ms@2.0.0 
│ │ ├── diff@3.2.0 
│ │ ├── escape-string-regexp@1.0.5 
│ │ ├─┬ glob@7.1.1 
│ │ │ ├── fs.realpath@1.0.0 
│ │ │ ├─┬ inflight@1.0.6 
│ │ │ │ └── wrappy@1.0.2 
│ │ │ ├── inherits@2.0.3 
│ │ │ ├─┬ minimatch@3.0.4 
│ │ │ │ └─┬ brace-expansion@1.1.8 
│ │ │ │   ├── balanced-match@1.0.0 
│ │ │ │   └── concat-map@0.0.1 
│ │ │ ├── once@1.4.0 
│ │ │ └── path-is-absolute@1.0.1 
│ │ ├── growl@1.9.2 
│ │ ├── he@1.1.1 
│ │ ├── json3@3.3.2 
│ │ ├─┬ lodash.create@3.1.1 
│ │ │ ├─┬ lodash._baseassign@3.2.0 
│ │ │ │ ├── lodash._basecopy@3.0.1 
│ │ │ │ └─┬ lodash.keys@3.1.2 
│ │ │ │   ├── lodash._getnative@3.9.1 
│ │ │ │   ├── lodash.isarguments@3.1.0 
│ │ │ │   └── lodash.isarray@3.0.4 
│ │ │ ├── lodash._basecreate@3.0.3 
│ │ │ └── lodash._isiterateecall@3.0.9 
│ │ ├─┬ mkdirp@0.5.1 
│ │ │ └── minimist@0.0.8 
│ │ └─┬ supports-color@3.1.2 
│ │   └── has-flag@1.0.0 
│ ├── original-require@1.0.1 
│ └─┬ solc@0.4.13 
│   ├─┬ fs-extra@0.30.0 
│   │ ├── graceful-fs@4.1.11 
│   │ ├── jsonfile@2.4.0 
│   │ ├── klaw@1.3.1 
│   │ └── rimraf@2.6.2 
│   ├── memorystream@0.3.1 
│   ├── require-from-string@1.2.1 
│   ├── semver@5.4.1 
│   └─┬ yargs@4.8.1 
│     ├─┬ cliui@3.2.0 
│     │ ├─┬ strip-ansi@3.0.1 
│     │ │ └── ansi-regex@2.1.1 
│     │ └── wrap-ansi@2.1.0 
│     ├── decamelize@1.2.0 
│     ├── get-caller-file@1.0.2 
│     ├── lodash.assign@4.2.0 
│     ├─┬ os-locale@1.4.0 
│     │ └─┬ lcid@1.0.0 
│     │   └── invert-kv@1.0.0 
│     ├─┬ read-pkg-up@1.0.1 
│     │ ├─┬ find-up@1.1.2 
│     │ │ ├── path-exists@2.1.0 
│     │ │ └─┬ pinkie-promise@2.0.1 
│     │ │   └── pinkie@2.0.4 
│     │ └─┬ read-pkg@1.1.0 
│     │   ├─┬ load-json-file@1.1.0 
│     │   │ ├─┬ parse-json@2.2.0 
│     │   │ │ └─┬ error-ex@1.3.1 
│     │   │ │   └── is-arrayish@0.2.1 
│     │   │ ├── pify@2.3.0 
│     │   │ └─┬ strip-bom@2.0.0 
│     │   │   └── is-utf8@0.2.1 
│     │   ├─┬ normalize-package-data@2.4.0 
│     │   │ ├── hosted-git-info@2.5.0 
│     │   │ ├─┬ is-builtin-module@1.0.0 
│     │   │ │ └── builtin-modules@1.1.1 
│     │   │ └─┬ validate-npm-package-license@3.0.1 
│     │   │   ├─┬ spdx-correct@1.0.2 
│     │   │   │ └── spdx-license-ids@1.2.2 
│     │   │   └── spdx-expression-parse@1.0.4 
│     │   └── path-type@1.1.0 
│     ├── require-directory@2.1.1 
│     ├── require-main-filename@1.0.1 
│     ├── set-blocking@2.0.0 
│     ├─┬ string-width@1.0.2 
│     │ ├── code-point-at@1.1.0 
│     │ └─┬ is-fullwidth-code-point@1.0.0 
│     │   └── number-is-nan@1.0.1 
│     ├── which-module@1.0.0 
│     ├── window-size@0.2.0 
│     ├── y18n@3.2.1 
│     └─┬ yargs-parser@2.4.1 
│       └── camelcase@3.0.0 
├─┬ truffle-contract@2.0.0 
│ ├─┬ ethjs-abi@0.1.8 
│ │ ├── bn.js@4.11.6 
│ │ ├── js-sha3@0.5.5 
│ │ └─┬ number-to-bn@1.7.0 
│ │   └─┬ strip-hex-prefix@1.0.0 
│ │     └── is-hex-prefixed@1.0.0 
│ ├── truffle-blockchain-utils@0.0.1 
│ └─┬ truffle-contract-schema@0.0.5 
│   └── crypto-js@3.1.9-1 
└─┬ web3@0.18.4 
  ├── bignumber.js@2.0.7  (git+https://github.com/debris/bignumber.js.git#94d7146671b9719e00a09c29b01a691bc85048c2)
  ├── crypto-js@3.1.8 
  ├── utf8@2.1.2 
  ├── xhr2@0.1.4 
  └── xmlhttprequest@1.8.0 
</msg>
<status status="PASS" endtime="20170915 10:12:27.363" starttime="20170915 10:12:27.362"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${npm_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170915 10:12:27.364" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170915 10:12:27.364" starttime="20170915 10:12:27.363"></status>
</kw>
<status status="PASS" endtime="20170915 10:12:27.364" starttime="20170915 10:12:10.191"></status>
</kw>
<kw name="Iexec Oracle Truffle Migrate" library="IexecOracle">
<tags>
<tag>Smart contract Tests</tag>
</tags>
<doc>call truffle migrate</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>rm -rf iexec-oracle/build</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${rm_result}</var>
</assign>
<msg timestamp="20170915 10:12:27.366" level="INFO">Starting process:
rm -rf iexec-oracle/build</msg>
<msg timestamp="20170915 10:12:27.373" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170915 10:12:27.379" level="INFO">Process completed.</msg>
<msg timestamp="20170915 10:12:27.380" level="INFO">${rm_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170915 10:12:27.380" starttime="20170915 10:12:27.365"></status>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<doc>Verifies that the given item is empty.</doc>
<arguments>
<arg>${rm_result.stderr}</arg>
</arguments>
<msg timestamp="20170915 10:12:27.382" level="INFO">Length is 0</msg>
<status status="PASS" endtime="20170915 10:12:27.382" starttime="20170915 10:12:27.380"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rm_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170915 10:12:27.383" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170915 10:12:27.383" starttime="20170915 10:12:27.383"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd iexec-oracle &amp;&amp; ./node_modules/.bin/truffle migrate</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${truffletest_result}</var>
</assign>
<msg timestamp="20170915 10:12:27.384" level="INFO">Starting process:
cd iexec-oracle &amp;&amp; ./node_modules/.bin/truffle migrate</msg>
<msg timestamp="20170915 10:12:27.387" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170915 10:13:00.628" level="INFO">Process completed.</msg>
<msg timestamp="20170915 10:13:00.629" level="INFO">${truffletest_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170915 10:13:00.629" starttime="20170915 10:12:27.383"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stderr}</arg>
</arguments>
<msg timestamp="20170915 10:13:00.630" level="INFO"></msg>
<status status="PASS" endtime="20170915 10:13:00.630" starttime="20170915 10:13:00.629"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
</arguments>
<msg timestamp="20170915 10:13:00.630" level="INFO">Compiling ./contracts/IexecLib.sol...
Compiling ./contracts/IexecOracle.sol...
Compiling ./contracts/IexecOracleAPI.sol...
Compiling ./contracts/IexecOracleAPITest.sol...
Compiling ./contracts/IexecOracleAPIimpl.sol...
Compiling ./contracts/Migrations.sol...
Compiling ./contracts/SafeMath.sol...

Compilation warnings encountered:

/home/vagrant/iexecdev/iexec-node/tests/rf/iexec-oracle/contracts/IexecOracle.sol:24:7: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
      string workUid;
      ^------------^
,/home/vagrant/iexecdev/iexec-node/tests/rf/iexec-oracle/contracts/IexecOracle.sol:25:7: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
      string  name;
      ^----------^
,/home/vagrant/iexecdev/iexec-node/tests/rf/iexec-oracle/contracts/IexecOracle.sol:28:7: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
      string stdout;
      ^-----------^
,/home/vagrant/iexecdev/iexec-node/tests/rf/iexec-oracle/contracts/IexecOracle.sol:29:7: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
      string stderr;
      ^-----------^

Writing artifacts to ./build/contracts

Using network 'development'.

Running migration: 1_initial_migration.js
  Deploying Migrations...
  ... 0x1a68b765586945fc3775216098050e212138c035a0ab7a049da47461dab5908e
  Migrations: 0xd20a835938f9db05871233dad4b9a06512520a48
Saving successful migration to network...
  ... 0x6d96bad9920649f59e0adea52e0b46c9fc7113cfd22ca27d2018b8c7b17651d2
Saving artifacts...
Running migration: 2_deploy_contracts.js
  Deploying IexecOracle...
  ... 0x0f9cc74f2f5060b53bb66f0c1090e443d30c4d75592ee442f2d69817de68f558
  IexecOracle: 0x489efe815c86a1b5de6c1179768c5838e4c9edcf
IexecOracle deployed at address :0x489efe815c86a1b5de6c1179768c5838e4c9edcf
  Deploying IexecOracleAPIimpl...
  ... 0x1c17fdaaf0a54fce79c341ea7dadc664699a2a7c1c14ca96c45dc00ab2009785
  IexecOracleAPIimpl: 0x461d7c4bdec1203fef1ea55bdd72a25f9b4d1825
IexecOracleAPIimpl deployed at address :0x461d7c4bdec1203fef1ea55bdd72a25f9b4d1825
Saving successful migration to network...
  ... 0x84f9c302398c8d72bba539a4a7ac89cf35a55ed68954ba00035f974c20c539b2
Saving artifacts...</msg>
<status status="PASS" endtime="20170915 10:13:00.630" starttime="20170915 10:13:00.630"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${truffletest_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170915 10:13:00.631" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170915 10:13:00.631" starttime="20170915 10:13:00.631"></status>
</kw>
<status status="PASS" endtime="20170915 10:13:00.631" starttime="20170915 10:12:27.364"></status>
</kw>
<kw name="Iexec Oracle Set Contract Address In Test" library="IexecOracle">
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>iexec-oracle/build/contracts/IexecOracle.json</arg>
</arguments>
<assign>
<var>${iexecOracle_json_content}</var>
</assign>
<msg timestamp="20170915 10:13:00.632" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/iexec-oracle/build/contracts/IexecOracle.json"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/iexec-oracle/build/contracts/IexecOracle.json&lt;/a&gt;'.</msg>
<msg timestamp="20170915 10:13:00.634" level="INFO">${iexecOracle_json_content} = {
  "contract_name": "IexecOracle",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "user",
          "type": "address"
        },
        {
          "name": "p...</msg>
<status status="PASS" endtime="20170915 10:13:00.634" starttime="20170915 10:13:00.632"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${iexecOracle_json_content}</arg>
<arg>"address": "(?P&lt;smartContractAddress&gt;.*)",</arg>
<arg>smartContractAddress</arg>
</arguments>
<assign>
<var>@{smartContractAddress}</var>
</assign>
<msg timestamp="20170915 10:13:00.635" level="INFO">@{smartContractAddress} = [ 0x489efe815c86a1b5de6c1179768c5838e4c9edcf ]</msg>
<status status="PASS" endtime="20170915 10:13:00.635" starttime="20170915 10:13:00.634"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>@{smartContractAddress}</arg>
</arguments>
<msg timestamp="20170915 10:13:00.635" level="INFO">0x489efe815c86a1b5de6c1179768c5838e4c9edcf</msg>
<status status="PASS" endtime="20170915 10:13:00.635" starttime="20170915 10:13:00.635"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>@{smartContractAddress}[0]</arg>
</arguments>
<msg timestamp="20170915 10:13:00.636" level="INFO">0x489efe815c86a1b5de6c1179768c5838e4c9edcf</msg>
<status status="PASS" endtime="20170915 10:13:00.636" starttime="20170915 10:13:00.636"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${IEXEC_ORACLE_SM_ADDRESS}</arg>
<arg>@{smartContractAddress}[0]</arg>
</arguments>
<msg timestamp="20170915 10:13:00.636" level="INFO">${IEXEC_ORACLE_SM_ADDRESS} = 0x489efe815c86a1b5de6c1179768c5838e4c9edcf</msg>
<status status="PASS" endtime="20170915 10:13:00.637" starttime="20170915 10:13:00.636"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>sed -i 's/.*return IexecOracle.at(.*/return IexecOracle.at(\"${IEXEC_ORACLE_SM_ADDRESS}\")/g' iexec-oracle/test/rf/*</arg>
</arguments>
<msg timestamp="20170915 10:13:00.638" level="INFO">Running command 'sed -i 's/.*return IexecOracle.at(.*/return IexecOracle.at("0x489efe815c86a1b5de6c1179768c5838e4c9edcf")/g' iexec-oracle/test/rf/* 2&gt;&amp;1'.</msg>
<status status="PASS" endtime="20170915 10:13:00.701" starttime="20170915 10:13:00.637"></status>
</kw>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>iexec-oracle/build/contracts/IexecOracleAPIimpl.json</arg>
</arguments>
<assign>
<var>${iexecoracleapiimpl_json_content}</var>
</assign>
<msg timestamp="20170915 10:13:00.702" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/iexec-oracle/build/contracts/IexecOracleAPIimpl.json"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/iexec-oracle/build/contracts/IexecOracleAPIimpl.json&lt;/a&gt;'.</msg>
<msg timestamp="20170915 10:13:00.702" level="INFO">${iexecoracleapiimpl_json_content} = {
  "contract_name": "IexecOracleAPIimpl",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "appName",
          "type": "string"
        },
        {
          ...</msg>
<status status="PASS" endtime="20170915 10:13:00.702" starttime="20170915 10:13:00.701"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${iexecoracleapiimpl_json_content}</arg>
<arg>"address": "(?P&lt;smartContractAddress&gt;.*)",</arg>
<arg>smartContractAddress</arg>
</arguments>
<assign>
<var>@{smartContractAddress}</var>
</assign>
<msg timestamp="20170915 10:13:00.703" level="INFO">@{smartContractAddress} = [ 0x461d7c4bdec1203fef1ea55bdd72a25f9b4d1825 ]</msg>
<status status="PASS" endtime="20170915 10:13:00.703" starttime="20170915 10:13:00.703"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>@{smartContractAddress}</arg>
</arguments>
<msg timestamp="20170915 10:13:00.703" level="INFO">0x461d7c4bdec1203fef1ea55bdd72a25f9b4d1825</msg>
<status status="PASS" endtime="20170915 10:13:00.703" starttime="20170915 10:13:00.703"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>@{smartContractAddress}[0]</arg>
</arguments>
<msg timestamp="20170915 10:13:00.704" level="INFO">0x461d7c4bdec1203fef1ea55bdd72a25f9b4d1825</msg>
<status status="PASS" endtime="20170915 10:13:00.704" starttime="20170915 10:13:00.703"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${HELLO_WORLD_SM_ADDRESS}</arg>
<arg>@{smartContractAddress}[0]</arg>
</arguments>
<msg timestamp="20170915 10:13:00.704" level="INFO">${HELLO_WORLD_SM_ADDRESS} = 0x461d7c4bdec1203fef1ea55bdd72a25f9b4d1825</msg>
<status status="PASS" endtime="20170915 10:13:00.704" starttime="20170915 10:13:00.704"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>sed -i 's/.*return IexecOracleAPIimpl.at(.*/return IexecOracleAPIimpl.at(\"${HELLO_WORLD_SM_ADDRESS}\")/g' iexec-oracle/test/rf/*</arg>
</arguments>
<msg timestamp="20170915 10:13:00.705" level="INFO">Running command 'sed -i 's/.*return IexecOracleAPIimpl.at(.*/return IexecOracleAPIimpl.at("0x461d7c4bdec1203fef1ea55bdd72a25f9b4d1825")/g' iexec-oracle/test/rf/* 2&gt;&amp;1'.</msg>
<status status="PASS" endtime="20170915 10:13:00.743" starttime="20170915 10:13:00.704"></status>
</kw>
<status status="PASS" endtime="20170915 10:13:00.744" starttime="20170915 10:13:00.631"></status>
</kw>
<status status="PASS" endtime="20170915 10:13:00.744" starttime="20170915 10:12:10.190"></status>
</kw>
<kw name="Init Bridge" library="IexecBridge">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${IEXEC_BRIDGE_FORCE_GIT_CLONE}' == 'true'</arg>
<arg>Git Clone Iexec Bridge</arg>
</arguments>
<status status="PASS" endtime="20170915 10:13:00.745" starttime="20170915 10:13:00.745"></status>
</kw>
<kw name="Npm Install Bridge" library="IexecBridge">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd iexec-bridge &amp;&amp; npm install</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${npm_result}</var>
</assign>
<msg timestamp="20170915 10:13:00.746" level="INFO">Starting process:
cd iexec-bridge &amp;&amp; npm install</msg>
<msg timestamp="20170915 10:13:00.750" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170915 10:14:38.593" level="INFO">Process completed.</msg>
<msg timestamp="20170915 10:14:38.593" level="INFO">${npm_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170915 10:14:38.593" starttime="20170915 10:13:00.745"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${npm_result.stderr}</arg>
</arguments>
<msg timestamp="20170915 10:14:38.594" level="INFO">npm WARN deprecated babel-preset-latest@6.24.1: 💥  preset-latest accomplishes the same task as babel-preset-env. 🙏  Please install it with 'npm install babel-preset-env --save-dev'. '{ "presets": ["latest"] }' to '{ "presets": ["env"] }'. For more info, please check the docs: http://babeljs.io/docs/plugins/preset-env 👌. And let us know how you're liking Babel at @babeljs on 🐦 
npm WARN deprecated babel-preset-es2017@6.24.1: We're really excited that you're trying to use ES2017 syntax, but instead of making more yearly presets, Babel has a better preset that we recommend you use instead: npm install babel-preset-env --save-dev. Give us a follow @babeljs to get more updates
npm WARN deprecated babel-preset-es2016@6.24.1: We're really excited that you're trying to use ES2016 syntax, but instead of making more yearly presets, Babel has a better preset that we recommend you use instead: npm install babel-preset-env --save-dev. Give us a follow @babeljs to get more updates
npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@^1.0.0 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@1.1.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})
npm WARN babel-loader@7.1.2 requires a peer of webpack@2 || 3 but none was installed.</msg>
<status status="PASS" endtime="20170915 10:14:38.594" starttime="20170915 10:14:38.594"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${npm_result.stdout}</arg>
</arguments>
<msg timestamp="20170915 10:14:38.595" level="INFO">bridge@1.0.0 /home/vagrant/iexecdev/iexec-node/tests/rf/iexec-bridge
├─┬ async@2.5.0 
│ └── lodash@4.17.4 
├─┬ babel-cli@6.26.0 
│ ├─┬ babel-polyfill@6.26.0 
│ │ ├── core-js@2.5.1 
│ │ └── regenerator-runtime@0.10.5 
│ ├─┬ babel-register@6.26.0 
│ │ ├─┬ home-or-tmp@2.0.0 
│ │ │ └── os-tmpdir@1.0.2 
│ │ └── source-map-support@0.4.18 
│ ├─┬ babel-runtime@6.26.0 
│ │ └── regenerator-runtime@0.11.0 
│ ├─┬ chokidar@1.7.0 
│ │ ├─┬ anymatch@1.3.2 
│ │ │ ├─┬ micromatch@2.3.11 
│ │ │ │ ├─┬ arr-diff@2.0.0 
│ │ │ │ │ └── arr-flatten@1.1.0 
│ │ │ │ ├── array-unique@0.2.1 
│ │ │ │ ├─┬ braces@1.8.5 
│ │ │ │ │ ├─┬ expand-range@1.8.2 
│ │ │ │ │ │ └─┬ fill-range@2.2.3 
│ │ │ │ │ │   ├── is-number@2.1.0 
│ │ │ │ │ │   ├── isobject@2.1.0 
│ │ │ │ │ │   ├─┬ randomatic@1.1.7 
│ │ │ │ │ │   │ ├─┬ is-number@3.0.0 
│ │ │ │ │ │   │ │ └── kind-of@3.2.2 
│ │ │ │ │ │   │ └── kind-of@4.0.0 
│ │ │ │ │ │   └── repeat-string@1.6.1 
│ │ │ │ │ ├── preserve@0.2.0 
│ │ │ │ │ └── repeat-element@1.1.2 
│ │ │ │ ├─┬ expand-brackets@0.1.5 
│ │ │ │ │ └── is-posix-bracket@0.1.1 
│ │ │ │ ├── extglob@0.3.2 
│ │ │ │ ├── filename-regex@2.0.1 
│ │ │ │ ├─┬ kind-of@3.2.2 
│ │ │ │ │ └── is-buffer@1.1.5 
│ │ │ │ ├─┬ object.omit@2.0.1 
│ │ │ │ │ ├─┬ for-own@0.1.5 
│ │ │ │ │ │ └── for-in@1.0.2 
│ │ │ │ │ └── is-extendable@0.1.1 
│ │ │ │ ├─┬ parse-glob@3.0.4 
│ │ │ │ │ ├── glob-base@0.3.0 
│ │ │ │ │ └── is-dotfile@1.0.3 
│ │ │ │ └─┬ regex-cache@0.4.4 
│ │ │ │   └─┬ is-equal-shallow@0.1.3 
│ │ │ │     └── is-primitive@2.0.0 
│ │ │ └─┬ normalize-path@2.1.1 
│ │ │   └── remove-trailing-separator@1.1.0 
│ │ ├── async-each@1.0.1 
│ │ ├── glob-parent@2.0.0 
│ │ ├── inherits@2.0.3 
│ │ ├─┬ is-binary-path@1.0.1 
│ │ │ └── binary-extensions@1.10.0 
│ │ ├─┬ is-glob@2.0.1 
│ │ │ └── is-extglob@1.0.0 
│ │ └─┬ readdirp@2.1.0 
│ │   └── set-immediate-shim@1.0.1 
│ ├── commander@2.11.0 
│ ├── convert-source-map@1.5.0 
│ ├── fs-readdir-recursive@1.0.0 
│ ├─┬ glob@7.1.2 
│ │ ├── fs.realpath@1.0.0 
│ │ ├─┬ inflight@1.0.6 
│ │ │ └── wrappy@1.0.2 
│ │ └── once@1.4.0 
│ ├─┬ output-file-sync@1.1.2 
│ │ └── graceful-fs@4.1.11 
│ ├── path-is-absolute@1.0.1 
│ ├── slash@1.0.0 
│ ├── source-map@0.5.7 
│ └─┬ v8flags@2.1.1 
│   └── user-home@1.1.1 
├─┬ babel-core@6.26.0 
│ ├─┬ babel-code-frame@6.26.0 
│ │ └── js-tokens@3.0.2 
│ ├─┬ babel-generator@6.26.0 
│ │ ├─┬ detect-indent@4.0.0 
│ │ │ └─┬ repeating@2.0.1 
│ │ │   └── is-finite@1.0.2 
│ │ ├── jsesc@1.3.0 
│ │ └── trim-right@1.0.1 
│ ├── babel-helpers@6.24.1 
│ ├── babel-messages@6.23.0 
│ ├── babel-template@6.26.0 
│ ├── babel-traverse@6.26.0 
│ ├─┬ babel-types@6.26.0 
│ │ └── to-fast-properties@1.0.3 
│ ├── babylon@6.18.0 
│ ├─┬ debug@2.6.8 
│ │ └── ms@2.0.0 
│ ├── json5@0.5.1 
│ ├─┬ minimatch@3.0.4 
│ │ └─┬ brace-expansion@1.1.8 
│ │   ├── balanced-match@1.0.0 
│ │   └── concat-map@0.0.1 
│ └── private@0.1.7 
├── babel-eslint@7.2.3 
├─┬ babel-loader@7.1.2 
│ ├─┬ find-cache-dir@1.0.0 
│ │ ├── commondir@1.0.1 
│ │ ├─┬ make-dir@1.0.0 
│ │ │ └── pify@2.3.0 
│ │ └── pkg-dir@2.0.0 
│ ├─┬ loader-utils@1.1.0 
│ │ ├── big.js@3.2.0 
│ │ └── emojis-list@2.1.0 
│ └─┬ mkdirp@0.5.1 
│   └── minimist@0.0.8 
├─┬ babel-preset-env@1.6.0 
│ ├── babel-plugin-check-es2015-constants@6.22.0 
│ ├── babel-plugin-syntax-trailing-function-commas@6.22.0 
│ ├─┬ babel-plugin-transform-async-to-generator@6.24.1 
│ │ ├── babel-helper-remap-async-to-generator@6.24.1 
│ │ └── babel-plugin-syntax-async-functions@6.13.0 
│ ├── babel-plugin-transform-es2015-arrow-functions@6.22.0 
│ ├── babel-plugin-transform-es2015-block-scoped-functions@6.22.0 
│ ├── babel-plugin-transform-es2015-block-scoping@6.26.0 
│ ├─┬ babel-plugin-transform-es2015-classes@6.24.1 
│ │ ├── babel-helper-define-map@6.26.0 
│ │ ├── babel-helper-function-name@6.24.1 
│ │ ├── babel-helper-optimise-call-expression@6.24.1 
│ │ └── babel-helper-replace-supers@6.24.1 
│ ├── babel-plugin-transform-es2015-computed-properties@6.24.1 
│ ├── babel-plugin-transform-es2015-destructuring@6.23.0 
│ ├── babel-plugin-transform-es2015-duplicate-keys@6.24.1 
│ ├── babel-plugin-transform-es2015-for-of@6.23.0 
│ ├── babel-plugin-transform-es2015-function-name@6.24.1 
│ ├── babel-plugin-transform-es2015-literals@6.22.0 
│ ├── babel-plugin-transform-es2015-modules-amd@6.24.1 
│ ├─┬ babel-plugin-transform-es2015-modules-commonjs@6.26.0 
│ │ └── babel-plugin-transform-strict-mode@6.24.1 
│ ├─┬ babel-plugin-transform-es2015-modules-systemjs@6.24.1 
│ │ └── babel-helper-hoist-variables@6.24.1 
│ ├── babel-plugin-transform-es2015-modules-umd@6.24.1 
│ ├── babel-plugin-transform-es2015-object-super@6.24.1 
│ ├─┬ babel-plugin-transform-es2015-parameters@6.24.1 
│ │ ├── babel-helper-call-delegate@6.24.1 
│ │ └── babel-helper-get-function-arity@6.24.1 
│ ├── babel-plugin-transform-es2015-shorthand-properties@6.24.1 
│ ├── babel-plugin-transform-es2015-spread@6.22.0 
│ ├─┬ babel-plugin-transform-es2015-sticky-regex@6.24.1 
│ │ └── babel-helper-regex@6.26.0 
│ ├── babel-plugin-transform-es2015-template-literals@6.22.0 
│ ├── babel-plugin-transform-es2015-typeof-symbol@6.23.0 
│ ├─┬ babel-plugin-transform-es2015-unicode-regex@6.24.1 
│ │ └─┬ regexpu-core@2.0.0 
│ │   ├── regenerate@1.3.2 
│ │   ├── regjsgen@0.2.0 
│ │   └─┬ regjsparser@0.1.5 
│ │     └── jsesc@0.5.0 
│ ├─┬ babel-plugin-transform-exponentiation-operator@6.24.1 
│ │ ├─┬ babel-helper-builder-binary-assignment-operator-visitor@6.24.1 
│ │ │ └── babel-helper-explode-assignable-expression@6.24.1 
│ │ └── babel-plugin-syntax-exponentiation-operator@6.13.0 
│ ├─┬ babel-plugin-transform-regenerator@6.26.0 
│ │ └── regenerator-transform@0.10.1 
│ ├─┬ browserslist@2.4.0 
│ │ ├── caniuse-lite@1.0.30000730 
│ │ └── electron-to-chromium@1.3.21 
│ ├─┬ invariant@2.2.2 
│ │ └── loose-envify@1.3.1 
│ └── semver@5.4.1 
├─┬ babel-preset-latest@6.24.1 
│ ├── babel-preset-es2015@6.24.1 
│ ├── babel-preset-es2016@6.24.1 
│ └── babel-preset-es2017@6.24.1 
├─┬ babel-preset-stage-0@6.24.1 
│ ├─┬ babel-plugin-transform-do-expressions@6.22.0 
│ │ └── babel-plugin-syntax-do-expressions@6.13.0 
│ ├─┬ babel-plugin-transform-function-bind@6.22.0 
│ │ └── babel-plugin-syntax-function-bind@6.13.0 
│ └─┬ babel-preset-stage-1@6.24.1 
│   ├─┬ babel-plugin-transform-class-constructor-call@6.24.1 
│   │ └── babel-plugin-syntax-class-constructor-call@6.18.0 
│   ├─┬ babel-plugin-transform-export-extensions@6.22.0 
│   │ └── babel-plugin-syntax-export-extensions@6.13.0 
│   └─┬ babel-preset-stage-2@6.24.1 
│     ├── babel-plugin-syntax-dynamic-import@6.18.0 
│     ├─┬ babel-plugin-transform-class-properties@6.24.1 
│     │ └── babel-plugin-syntax-class-properties@6.13.0 
│     ├─┬ babel-plugin-transform-decorators@6.24.1 
│     │ ├─┬ babel-helper-explode-class@6.24.1 
│     │ │ └── babel-helper-bindify-decorators@6.24.1 
│     │ └── babel-plugin-syntax-decorators@6.13.0 
│     └─┬ babel-preset-stage-3@6.24.1 
│       ├─┬ babel-plugin-transform-async-generator-functions@6.24.1 
│       │ └── babel-plugin-syntax-async-generators@6.13.0 
│       └─┬ babel-plugin-transform-object-rest-spread@6.26.0 
│         └── babel-plugin-syntax-object-rest-spread@6.13.0 
├─┬ body-parser@1.18.1 
│ ├── bytes@3.0.0 
│ ├── content-type@1.0.4 
│ ├── depd@1.1.1 
│ ├─┬ http-errors@1.6.2 
│ │ ├── setprototypeof@1.0.3 
│ │ └── statuses@1.3.1 
│ ├── iconv-lite@0.4.19 
│ ├─┬ on-finished@2.3.0 
│ │ └── ee-first@1.1.1 
│ ├── qs@6.5.1 
│ ├─┬ raw-body@2.3.2 
│ │ └── unpipe@1.0.0 
│ └─┬ type-is@1.6.15 
│   └── media-typer@0.3.0 
├── child_process@1.0.2 
├─┬ cors@2.8.4 
│ ├── object-assign@4.1.1 
│ └── vary@1.1.1 
├─┬ eslint@3.19.0 
│ ├─┬ chalk@1.1.3 
│ │ ├── ansi-styles@2.2.1 
│ │ ├── escape-string-regexp@1.0.5 
│ │ ├─┬ has-ansi@2.0.0 
│ │ │ └── ansi-regex@2.1.1 
│ │ ├─┬ strip-ansi@3.0.1 
│ │ │ └── ansi-regex@2.1.1 
│ │ └── supports-color@2.0.0 
│ ├─┬ concat-stream@1.6.0 
│ │ ├─┬ readable-stream@2.3.3 
│ │ │ ├── core-util-is@1.0.2 
│ │ │ ├── process-nextick-args@1.0.7 
│ │ │ ├── string_decoder@1.0.3 
│ │ │ └── util-deprecate@1.0.2 
│ │ └── typedarray@0.0.6 
│ ├─┬ doctrine@2.0.0 
│ │ └── isarray@1.0.0 
│ ├─┬ escope@3.6.0 
│ │ ├─┬ es6-map@0.1.5 
│ │ │ ├── d@1.0.0 
│ │ │ ├── es5-ext@0.10.30 
│ │ │ ├── es6-iterator@2.0.1 
│ │ │ ├── es6-set@0.1.5 
│ │ │ ├── es6-symbol@3.1.1 
│ │ │ └── event-emitter@0.3.5 
│ │ ├── es6-weak-map@2.0.2 
│ │ └── esrecurse@4.2.0 
│ ├─┬ espree@3.5.0 
│ │ ├── acorn@5.1.2 
│ │ └─┬ acorn-jsx@3.0.1 
│ │   └── acorn@3.3.0 
│ ├── esquery@1.0.0 
│ ├── estraverse@4.2.0 
│ ├── esutils@2.0.2 
│ ├─┬ file-entry-cache@2.0.0 
│ │ └─┬ flat-cache@1.2.2 
│ │   ├── circular-json@0.3.3 
│ │   ├─┬ del@2.2.2 
│ │   │ ├─┬ globby@5.0.0 
│ │   │ │ ├─┬ array-union@1.0.2 
│ │   │ │ │ └── array-uniq@1.0.3 
│ │   │ │ └── arrify@1.0.1 
│ │   │ ├── is-path-cwd@1.0.0 
│ │   │ ├─┬ is-path-in-cwd@1.0.0 
│ │   │ │ └── is-path-inside@1.0.0 
│ │   │ └─┬ pinkie-promise@2.0.1 
│ │   │   └── pinkie@2.0.4 
│ │   └── write@0.2.1 
│ ├── globals@9.18.0 
│ ├── ignore@3.3.5 
│ ├── imurmurhash@0.1.4 
│ ├─┬ inquirer@0.12.0 
│ │ ├── ansi-escapes@1.4.0 
│ │ ├── ansi-regex@2.1.1 
│ │ ├─┬ cli-cursor@1.0.2 
│ │ │ └─┬ restore-cursor@1.0.1 
│ │ │   ├── exit-hook@1.1.1 
│ │ │   └── onetime@1.1.0 
│ │ ├── cli-width@2.2.0 
│ │ ├── figures@1.7.0 
│ │ ├─┬ readline2@1.0.1 
│ │ │ ├── is-fullwidth-code-point@1.0.0 
│ │ │ └── mute-stream@0.0.5 
│ │ ├── run-async@0.1.0 
│ │ ├── rx-lite@3.1.2 
│ │ ├─┬ string-width@1.0.2 
│ │ │ ├── code-point-at@1.1.0 
│ │ │ └─┬ is-fullwidth-code-point@1.0.0 
│ │ │   └── number-is-nan@1.0.1 
│ │ ├── strip-ansi@3.0.1 
│ │ └── through@2.3.8 
│ ├─┬ is-my-json-valid@2.16.1 
│ │ ├── generate-function@2.0.0 
│ │ ├─┬ generate-object-property@1.2.0 
│ │ │ └── is-property@1.0.2 
│ │ ├── jsonpointer@4.0.1 
│ │ └── xtend@4.0.1 
│ ├─┬ is-resolvable@1.0.0 
│ │ └── tryit@1.0.3 
│ ├─┬ js-yaml@3.10.0 
│ │ ├─┬ argparse@1.0.9 
│ │ │ └── sprintf-js@1.0.3 
│ │ └── esprima@4.0.0 
│ ├─┬ json-stable-stringify@1.0.1 
│ │ └── jsonify@0.0.0 
│ ├─┬ levn@0.3.0 
│ │ ├── prelude-ls@1.1.2 
│ │ └── type-check@0.3.2 
│ ├── natural-compare@1.4.0 
│ ├─┬ optionator@0.8.2 
│ │ ├── deep-is@0.1.3 
│ │ ├── fast-levenshtein@2.0.6 
│ │ └── wordwrap@1.0.0 
│ ├── path-is-inside@1.0.2 
│ ├── pluralize@1.2.1 
│ ├── progress@1.1.8 
│ ├─┬ require-uncached@1.0.3 
│ │ ├─┬ caller-path@0.1.0 
│ │ │ └── callsites@0.2.0 
│ │ └── resolve-from@1.0.1 
│ ├─┬ shelljs@0.7.8 
│ │ ├── interpret@1.0.4 
│ │ └── rechoir@0.6.2 
│ ├── strip-bom@3.0.0 
│ ├── strip-json-comments@2.0.1 
│ ├─┬ table@3.8.3 
│ │ ├─┬ ajv@4.11.8 
│ │ │ └── co@4.6.0 
│ │ ├── ajv-keywords@1.5.1 
│ │ ├── slice-ansi@0.0.4 
│ │ └─┬ string-width@2.1.1 
│ │   └── is-fullwidth-code-point@2.0.0 
│ ├── text-table@0.2.0 
│ └─┬ user-home@2.0.0 
│   └── os-homedir@1.0.2 
├─┬ eslint-config-airbnb-base@11.3.2 
│ └── eslint-restricted-globals@0.1.1 
├─┬ eslint-plugin-import@2.7.0 
│ ├── builtin-modules@1.1.1 
│ ├── contains-path@0.1.0 
│ ├── doctrine@1.5.0 
│ ├─┬ eslint-import-resolver-node@0.3.1 
│ │ └─┬ resolve@1.4.0 
│ │   └── path-parse@1.0.5 
│ ├─┬ eslint-module-utils@2.1.1 
│ │ └─┬ pkg-dir@1.0.0 
│ │   └─┬ find-up@1.1.2 
│ │     └── path-exists@2.1.0 
│ ├─┬ has@1.0.1 
│ │ └── function-bind@1.1.1 
│ ├── lodash.cond@4.5.2 
│ └─┬ read-pkg-up@2.0.0 
│   ├─┬ find-up@2.1.0 
│   │ └─┬ locate-path@2.0.0 
│   │   ├─┬ p-locate@2.0.0 
│   │   │ └── p-limit@1.1.0 
│   │   └── path-exists@3.0.0 
│   └─┬ read-pkg@2.0.0 
│     ├─┬ load-json-file@2.0.0 
│     │ └─┬ parse-json@2.2.0 
│     │   └─┬ error-ex@1.3.1 
│     │     └── is-arrayish@0.2.1 
│     ├─┬ normalize-package-data@2.4.0 
│     │ └── hosted-git-info@2.5.0 
│     └── path-type@2.0.0 
├── install@0.10.1 
├── json2xml@0.1.3 
├─┬ nodemon@1.12.1 
│ ├── es6-promise@3.3.1 
│ ├── ignore-by-default@1.0.1 
│ ├─┬ lodash.defaults@3.1.2 
│ │ ├─┬ lodash.assign@3.2.0 
│ │ │ ├─┬ lodash._baseassign@3.2.0 
│ │ │ │ └── lodash._basecopy@3.0.1 
│ │ │ ├─┬ lodash._createassigner@3.1.1 
│ │ │ │ ├── lodash._bindcallback@3.0.1 
│ │ │ │ └── lodash._isiterateecall@3.0.9 
│ │ │ └─┬ lodash.keys@3.1.2 
│ │ │   ├── lodash._getnative@3.9.1 
│ │ │   ├── lodash.isarguments@3.1.0 
│ │ │   └── lodash.isarray@3.0.4 
│ │ └── lodash.restparam@3.6.1 
│ ├─┬ ps-tree@1.1.0 
│ │ └─┬ event-stream@3.3.4 
│ │   ├── duplexer@0.1.1 
│ │   ├── from@0.1.7 
│ │   ├── map-stream@0.1.0 
│ │   ├── pause-stream@0.0.11 
│ │   ├── split@0.3.3 
│ │   └── stream-combiner@0.0.4 
│ ├─┬ touch@3.1.0 
│ │ └─┬ nopt@1.0.10 
│ │   └── abbrev@1.1.0 
│ ├── undefsafe@0.0.3 
│ └─┬ update-notifier@2.2.0 
│   ├─┬ boxen@1.2.1 
│   │ ├── ansi-align@2.0.0 
│   │ ├── chalk@2.1.0 
│   │ ├── cli-boxes@1.0.0 
│   │ ├─┬ term-size@1.2.0 
│   │ │ └─┬ execa@0.7.0 
│   │ │   ├─┬ cross-spawn@5.1.0 
│   │ │   │ ├─┬ lru-cache@4.1.1 
│   │ │   │ │ ├── pseudomap@1.0.2 
│   │ │   │ │ └── yallist@2.1.2 
│   │ │   │ ├─┬ shebang-command@1.2.0 
│   │ │   │ │ └── shebang-regex@1.0.0 
│   │ │   │ └─┬ which@1.3.0 
│   │ │   │   └── isexe@2.0.0 
│   │ │   ├── get-stream@3.0.0 
│   │ │   ├── is-stream@1.1.0 
│   │ │   ├─┬ npm-run-path@2.0.2 
│   │ │   │ └── path-key@2.0.1 
│   │ │   ├── p-finally@1.0.0 
│   │ │   └── strip-eof@1.0.0 
│   │ └─┬ widest-line@1.0.0 
│   │   └─┬ string-width@1.0.2 
│   │     ├── is-fullwidth-code-point@1.0.0 
│   │     └─┬ strip-ansi@3.0.1 
│   │       └── ansi-regex@2.1.1 
│   ├─┬ configstore@3.1.1 
│   │ ├─┬ dot-prop@4.2.0 
│   │ │ └── is-obj@1.0.1 
│   │ ├─┬ unique-string@1.0.0 
│   │ │ └── crypto-random-string@1.0.0 
│   │ └── write-file-atomic@2.3.0 
│   ├── import-lazy@2.1.0 
│   ├── is-npm@1.0.0 
│   ├─┬ latest-version@3.1.0 
│   │ └─┬ package-json@4.0.1 
│   │   ├─┬ got@6.7.1 
│   │   │ ├─┬ create-error-class@3.0.2 
│   │   │ │ └── capture-stack-trace@1.0.0 
│   │   │ ├── duplexer3@0.1.4 
│   │   │ ├── is-redirect@1.0.0 
│   │   │ ├── is-retry-allowed@1.1.0 
│   │   │ ├── lowercase-keys@1.0.0 
│   │   │ ├── timed-out@4.0.1 
│   │   │ ├── unzip-response@2.0.1 
│   │   │ └─┬ url-parse-lax@1.0.0 
│   │   │   └── prepend-http@1.0.4 
│   │   ├─┬ registry-auth-token@3.3.1 
│   │   │ └─┬ rc@1.2.1 
│   │   │   ├── deep-extend@0.4.2 
│   │   │   └── minimist@1.2.0 
│   │   └── registry-url@3.1.0 
│   ├── semver-diff@2.1.0 
│   └── xdg-basedir@3.0.0 
├─┬ npm@5.4.2 
│ ├── abbrev@1.1.0 
│ ├── ansi-regex@3.0.0 
│ ├── ansicolors@0.3.2 
│ ├── ansistyles@0.1.3 
│ ├── aproba@1.1.2 
│ ├── archy@1.0.0 
│ ├── bluebird@3.5.0 
│ ├─┬ cacache@9.2.9 
│ │ ├─┬ lru-cache@4.1.1 
│ │ │ ├── pseudomap@1.0.2 
│ │ │ └── yallist@2.1.2 
│ │ └── y18n@3.2.1 
│ ├── call-limit@1.1.0 
│ ├── chownr@1.0.1 
│ ├── cmd-shim@2.0.2 
│ ├─┬ columnify@1.5.4 
│ │ ├─┬ strip-ansi@3.0.1 
│ │ │ └── ansi-regex@2.1.1 
│ │ └─┬ wcwidth@1.0.1 
│ │   └─┬ defaults@1.0.3 
│ │     └── clone@1.0.2 
│ ├─┬ config-chain@1.1.11 
│ │ └── proto-list@1.2.4 
│ ├── debuglog@1.0.1 
│ ├── detect-indent@5.0.0 
│ ├─┬ dezalgo@1.0.3 
│ │ └── asap@2.0.5 
│ ├── editor@1.0.0 
│ ├── fs-vacuum@1.2.10 
│ ├── fs-write-stream-atomic@1.0.10 
│ ├─┬ glob@7.1.2 
│ │ ├── fs.realpath@1.0.0 
│ │ ├─┬ minimatch@3.0.4 
│ │ │ └─┬ brace-expansion@1.1.8 
│ │ │   ├── balanced-match@1.0.0 
│ │ │   └── concat-map@0.0.1 
│ │ └── path-is-absolute@1.0.1 
│ ├── graceful-fs@4.1.11 
│ ├── has-unicode@2.0.1 
│ ├── hosted-git-info@2.5.0 
│ ├── iferr@0.1.5 
│ ├── imurmurhash@0.1.4 
│ ├── inflight@1.0.6 
│ ├── inherits@2.0.3 
│ ├── ini@1.3.4 
│ ├─┬ init-package-json@1.10.1 
│ │ └── promzard@0.3.0 
│ ├─┬ JSONStream@1.3.1 
│ │ ├── jsonparse@1.3.1 
│ │ └── through@2.3.8 
│ ├── lazy-property@1.0.0 
│ ├─┬ libnpx@9.6.0 
│ │ ├── dotenv@4.0.0 
│ │ ├── y18n@3.2.1 
│ │ └─┬ yargs@8.0.2 
│ │   ├── camelcase@4.1.0 
│ │   ├─┬ cliui@3.2.0 
│ │   │ ├─┬ string-width@1.0.2 
│ │   │ │ ├── code-point-at@1.1.0 
│ │   │ │ └─┬ is-fullwidth-code-point@1.0.0 
│ │   │ │   └── number-is-nan@1.0.1 
│ │   │ ├─┬ strip-ansi@3.0.1 
│ │   │ │ └── ansi-regex@2.1.1 
│ │   │ └── wrap-ansi@2.1.0 
│ │   ├── decamelize@1.2.0 
│ │   ├── get-caller-file@1.0.2 
│ │   ├─┬ os-locale@2.1.0 
│ │   │ ├─┬ execa@0.7.0 
│ │   │ │ ├─┬ cross-spawn@5.1.0 
│ │   │ │ │ └─┬ shebang-command@1.2.0 
│ │   │ │ │   └── shebang-regex@1.0.0 
│ │   │ │ ├── get-stream@3.0.0 
│ │   │ │ ├── is-stream@1.1.0 
│ │   │ │ ├─┬ npm-run-path@2.0.2 
│ │   │ │ │ └── path-key@2.0.1 
│ │   │ │ ├── p-finally@1.0.0 
│ │   │ │ ├── signal-exit@3.0.2 
│ │   │ │ └── strip-eof@1.0.0 
│ │   │ ├─┬ lcid@1.0.0 
│ │   │ │ └── invert-kv@1.0.0 
│ │   │ └─┬ mem@1.1.0 
│ │   │   └── mimic-fn@1.1.0 
│ │   ├─┬ read-pkg-up@2.0.0 
│ │   │ ├─┬ find-up@2.1.0 
│ │   │ │ └─┬ locate-path@2.0.0 
│ │   │ │   ├─┬ p-locate@2.0.0 
│ │   │ │   │ └── p-limit@1.1.0 
│ │   │ │   └── path-exists@3.0.0 
│ │   │ └─┬ read-pkg@2.0.0 
│ │   │   ├─┬ load-json-file@2.0.0 
│ │   │   │ ├─┬ parse-json@2.2.0 
│ │   │   │ │ └─┬ error-ex@1.3.1 
│ │   │   │ │   └── is-arrayish@0.2.1 
│ │   │   │ ├── pify@2.3.0 
│ │   │   │ └── strip-bom@3.0.0 
│ │   │   └─┬ path-type@2.0.0 
│ │   │     └── pify@2.3.0 
│ │   ├── require-directory@2.1.1 
│ │   ├── require-main-filename@1.0.1 
│ │   ├── set-blocking@2.0.0 
│ │   ├─┬ string-width@2.1.1 
│ │   │ └── is-fullwidth-code-point@2.0.0 
│ │   ├── which-module@2.0.0 
│ │   └── yargs-parser@7.0.0 
│ ├── lockfile@1.0.3 
│ ├── lodash._baseindexof@3.1.0 
│ ├─┬ lodash._baseuniq@4.6.0 
│ │ ├── lodash._createset@4.0.3 
│ │ └── lodash._root@3.0.1 
│ ├── lodash._bindcallback@3.0.1 
│ ├── lodash._cacheindexof@3.0.2 
│ ├── lodash._createcache@3.1.2 
│ ├── lodash._getnative@3.9.1 
│ ├── lodash.clonedeep@4.5.0 
│ ├── lodash.restparam@3.6.1 
│ ├── lodash.union@4.6.0 
│ ├── lodash.uniq@4.5.0 
│ ├── lodash.without@4.4.0 
│ ├─┬ lru-cache@4.1.1 
│ │ ├── pseudomap@1.0.2 
│ │ └── yallist@2.1.2 
│ ├── meant@1.0.0 
│ ├─┬ mississippi@1.3.0 
│ │ ├─┬ concat-stream@1.6.0 
│ │ │ └── typedarray@0.0.6 
│ │ ├─┬ duplexify@3.5.0 
│ │ │ ├─┬ end-of-stream@1.0.0 
│ │ │ │ └── once@1.3.3 
│ │ │ └── stream-shift@1.0.0 
│ │ ├── end-of-stream@1.4.0 
│ │ ├── flush-write-stream@1.0.2 
│ │ ├── from2@2.3.0 
│ │ ├─┬ parallel-transform@1.1.0 
│ │ │ └── cyclist@0.2.2 
│ │ ├── pump@1.0.2 
│ │ ├── pumpify@1.3.5 
│ │ ├─┬ stream-each@1.2.0 
│ │ │ └── stream-shift@1.0.0 
│ │ └─┬ through2@2.0.3 
│ │   └── xtend@4.0.1 
│ ├─┬ mkdirp@0.5.1 
│ │ └── minimist@0.0.8 
│ ├─┬ move-concurrently@1.0.1 
│ │ ├── copy-concurrently@1.0.3 
│ │ └── run-queue@1.0.3 
│ ├─┬ node-gyp@3.6.2 
│ │ ├── fstream@1.0.11 
│ │ ├─┬ minimatch@3.0.4 
│ │ │ └─┬ brace-expansion@1.1.8 
│ │ │   ├── balanced-match@1.0.0 
│ │ │   └── concat-map@0.0.1 
│ │ ├── nopt@3.0.6 
│ │ ├── semver@5.3.0 
│ │ └─┬ tar@2.2.1 
│ │   └── block-stream@0.0.9 
│ ├── nopt@4.0.1 
│ ├─┬ normalize-package-data@2.4.0 
│ │ └─┬ is-builtin-module@1.0.0 
│ │   └── builtin-modules@1.1.1 
│ ├── npm-cache-filename@1.0.2 
│ ├── npm-install-checks@3.0.0 
│ ├── npm-lifecycle@1.0.2 
│ ├── npm-package-arg@5.1.2 
│ ├─┬ npm-packlist@1.1.8 
│ │ ├─┬ ignore-walk@3.0.0 
│ │ │ └─┬ minimatch@3.0.4 
│ │ │   └─┬ brace-expansion@1.1.8 
│ │ │     ├── balanced-match@1.0.0 
│ │ │     └── concat-map@0.0.1 
│ │ └── npm-bundled@1.0.3 
│ ├─┬ npm-registry-client@8.4.0 
│ │ └─┬ concat-stream@1.6.0 
│ │   └── typedarray@0.0.6 
│ ├── npm-user-validate@1.0.0 
│ ├─┬ npmlog@4.1.2 
│ │ ├─┬ are-we-there-yet@1.1.4 
│ │ │ └── delegates@1.0.0 
│ │ ├── console-control-strings@1.1.0 
│ │ ├─┬ gauge@2.7.4 
│ │ │ ├── object-assign@4.1.1 
│ │ │ ├── signal-exit@3.0.2 
│ │ │ ├─┬ string-width@1.0.2 
│ │ │ │ ├── code-point-at@1.1.0 
│ │ │ │ └─┬ is-fullwidth-code-point@1.0.0 
│ │ │ │   └── number-is-nan@1.0.1 
│ │ │ ├─┬ strip-ansi@3.0.1 
│ │ │ │ └── ansi-regex@2.1.1 
│ │ │ └── wide-align@1.1.2 
│ │ └── set-blocking@2.0.0 
│ ├── once@1.4.0 
│ ├── opener@1.4.3 
│ ├─┬ osenv@0.1.4 
│ │ ├── os-homedir@1.0.2 
│ │ └── os-tmpdir@1.0.2 
│ ├─┬ pacote@6.0.2 
│ │ ├─┬ make-fetch-happen@2.5.0 
│ │ │ ├─┬ agentkeepalive@3.3.0 
│ │ │ │ └─┬ humanize-ms@1.2.1 
│ │ │ │   └── ms@2.0.0 
│ │ │ ├── http-cache-semantics@3.7.3 
│ │ │ ├─┬ http-proxy-agent@2.0.0 
│ │ │ │ ├─┬ agent-base@4.1.1 
│ │ │ │ │ └─┬ es6-promisify@5.0.0 
│ │ │ │ │   └── es6-promise@4.1.1 
│ │ │ │ └─┬ debug@2.6.8 
│ │ │ │   └── ms@2.0.0 
│ │ │ ├─┬ https-proxy-agent@2.1.0 
│ │ │ │ ├─┬ agent-base@4.1.1 
│ │ │ │ │ └─┬ es6-promisify@5.0.0 
│ │ │ │ │   └── es6-promise@4.1.1 
│ │ │ │ └─┬ debug@2.6.8 
│ │ │ │   └── ms@2.0.0 
│ │ │ ├─┬ node-fetch-npm@2.0.2 
│ │ │ │ ├─┬ encoding@0.1.12 
│ │ │ │ │ └── iconv-lite@0.4.18 
│ │ │ │ └── json-parse-better-errors@1.0.1 
│ │ │ └─┬ socks-proxy-agent@3.0.0 
│ │ │   ├─┬ agent-base@4.1.1 
│ │ │   │ └─┬ es6-promisify@5.0.0 
│ │ │   │   └── es6-promise@4.1.1 
│ │ │   └─┬ socks@1.1.10 
│ │ │     ├── ip@1.1.5 
│ │ │     └── smart-buffer@1.1.15 
│ │ ├─┬ minimatch@3.0.4 
│ │ │ └─┬ brace-expansion@1.1.8 
│ │ │   ├── balanced-match@1.0.0 
│ │ │   └── concat-map@0.0.1 
│ │ ├── npm-pick-manifest@1.0.4 
│ │ ├─┬ promise-retry@1.1.1 
│ │ │ └── err-code@1.1.2 
│ │ └─┬ protoduck@4.0.0 
│ │   └── genfun@4.0.1 
│ ├── path-is-inside@1.0.2 
│ ├── promise-inflight@1.0.1 
│ ├─┬ read@1.0.7 
│ │ └── mute-stream@0.0.7 
│ ├── read-cmd-shim@1.0.1 
│ ├─┬ read-installed@4.0.3 
│ │ └── util-extend@1.0.3 
│ ├─┬ read-package-json@2.0.12 
│ │ ├── json-parse-better-errors@1.0.1 
│ │ └── slash@1.0.0 
│ ├── read-package-tree@5.1.6 
│ ├─┬ readable-stream@2.3.3 
│ │ ├── core-util-is@1.0.2 
│ │ ├── isarray@1.0.0 
│ │ ├── process-nextick-args@1.0.7 
│ │ ├── string_decoder@1.0.3 
│ │ └── util-deprecate@1.0.2 
│ ├── readdir-scoped-modules@1.0.2 
│ ├─┬ request@2.81.0 
│ │ ├── aws-sign2@0.6.0 
│ │ ├── aws4@1.6.0 
│ │ ├── caseless@0.12.0 
│ │ ├─┬ combined-stream@1.0.5 
│ │ │ └── delayed-stream@1.0.0 
│ │ ├── extend@3.0.1 
│ │ ├── forever-agent@0.6.1 
│ │ ├─┬ form-data@2.1.4 
│ │ │ └── asynckit@0.4.0 
│ │ ├─┬ har-validator@4.2.1 
│ │ │ ├─┬ ajv@4.11.8 
│ │ │ │ ├── co@4.6.0 
│ │ │ │ └─┬ json-stable-stringify@1.0.1 
│ │ │ │   └── jsonify@0.0.0 
│ │ │ └── har-schema@1.0.5 
│ │ ├─┬ hawk@3.1.3 
│ │ │ ├── boom@2.10.1 
│ │ │ ├── cryptiles@2.0.5 
│ │ │ ├── hoek@2.16.3 
│ │ │ └── sntp@1.0.9 
│ │ ├─┬ http-signature@1.1.1 
│ │ │ ├── assert-plus@0.2.0 
│ │ │ ├─┬ jsprim@1.4.0 
│ │ │ │ ├── assert-plus@1.0.0 
│ │ │ │ ├── extsprintf@1.0.2 
│ │ │ │ ├── json-schema@0.2.3 
│ │ │ │ └── verror@1.3.6 
│ │ │ └─┬ sshpk@1.13.1 
│ │ │   ├── asn1@0.2.3 
│ │ │   ├── assert-plus@1.0.0 
│ │ │   ├── bcrypt-pbkdf@1.0.1 
│ │ │   ├── dashdash@1.14.1 
│ │ │   ├── ecc-jsbn@0.1.1 
│ │ │   ├── getpass@0.1.7 
│ │ │   ├── jsbn@0.1.1 
│ │ │   └── tweetnacl@0.14.5 
│ │ ├── is-typedarray@1.0.0 
│ │ ├── isstream@0.1.2 
│ │ ├── json-stringify-safe@5.0.1 
│ │ ├─┬ mime-types@2.1.15 
│ │ │ └── mime-db@1.27.0 
│ │ ├── oauth-sign@0.8.2 
│ │ ├── performance-now@0.2.0 
│ │ ├── qs@6.4.0 
│ │ ├── stringstream@0.0.5 
│ │ ├─┬ tough-cookie@2.3.2 
│ │ │ └── punycode@1.4.1 
│ │ └── tunnel-agent@0.6.0 
│ ├── retry@0.10.1 
│ ├── rimraf@2.6.1 
│ ├── safe-buffer@5.1.1 
│ ├── semver@5.4.1 
│ ├── sha@2.0.1 
│ ├── slide@1.1.6 
│ ├── sorted-object@2.0.1 
│ ├─┬ sorted-union-stream@2.1.3 
│ │ ├─┬ from2@1.3.0 
│ │ │ └─┬ readable-stream@1.1.14 
│ │ │   ├── core-util-is@1.0.2 
│ │ │   ├── isarray@0.0.1 
│ │ │   └── string_decoder@0.10.31 
│ │ └─┬ stream-iterate@1.2.0 
│ │   └── stream-shift@1.0.0 
│ ├── ssri@4.1.6 
│ ├─┬ strip-ansi@4.0.0 
│ │ └── ansi-regex@3.0.0 
│ ├─┬ tar@4.0.1 
│ │ ├── minipass@2.2.1 
│ │ ├── minizlib@1.0.3 
│ │ └── yallist@3.0.2 
│ ├── text-table@0.2.0 
│ ├── uid-number@0.0.6 
│ ├── umask@1.1.0 
│ ├─┬ unique-filename@1.1.0 
│ │ └── unique-slug@2.0.0 
│ ├── unpipe@1.0.0 
│ ├─┬ update-notifier@2.2.0 
│ │ ├─┬ boxen@1.1.0 
│ │ │ ├── ansi-align@2.0.0 
│ │ │ ├── camelcase@4.1.0 
│ │ │ ├── cli-boxes@1.0.0 
│ │ │ ├─┬ string-width@2.1.0 
│ │ │ │ ├── is-fullwidth-code-point@2.0.0 
│ │ │ │ └── strip-ansi@4.0.0 
│ │ │ ├─┬ term-size@0.1.1 
│ │ │ │ └─┬ execa@0.4.0 
│ │ │ │   ├── cross-spawn-async@2.2.5 
│ │ │ │   ├── is-stream@1.1.0 
│ │ │ │   ├── npm-run-path@1.0.0 
│ │ │ │   ├── object-assign@4.1.1 
│ │ │ │   ├── path-key@1.0.0 
│ │ │ │   └── strip-eof@1.0.0 
│ │ │ └─┬ widest-line@1.0.0 
│ │ │   └─┬ string-width@1.0.2 
│ │ │     ├── code-point-at@1.1.0 
│ │ │     ├─┬ is-fullwidth-code-point@1.0.0 
│ │ │     │ └── number-is-nan@1.0.1 
│ │ │     └─┬ strip-ansi@3.0.1 
│ │ │       └── ansi-regex@2.1.1 
│ │ ├─┬ chalk@1.1.3 
│ │ │ ├── ansi-styles@2.2.1 
│ │ │ ├── escape-string-regexp@1.0.5 
│ │ │ ├─┬ has-ansi@2.0.0 
│ │ │ │ └── ansi-regex@2.1.1 
│ │ │ ├─┬ strip-ansi@3.0.1 
│ │ │ │ └── ansi-regex@2.1.1 
│ │ │ └── supports-color@2.0.0 
│ │ ├─┬ configstore@3.1.0 
│ │ │ ├─┬ dot-prop@4.1.1 
│ │ │ │ └── is-obj@1.0.1 
│ │ │ ├─┬ make-dir@1.0.0 
│ │ │ │ └── pify@2.3.0 
│ │ │ └─┬ unique-string@1.0.0 
│ │ │   └── crypto-random-string@1.0.0 
│ │ ├── import-lazy@2.1.0 
│ │ ├── is-npm@1.0.0 
│ │ ├─┬ latest-version@3.1.0 
│ │ │ └─┬ package-json@4.0.1 
│ │ │   ├─┬ got@6.7.1 
│ │ │   │ ├─┬ create-error-class@3.0.2 
│ │ │   │ │ └── capture-stack-trace@1.0.0 
│ │ │   │ ├── duplexer3@0.1.4 
│ │ │   │ ├── get-stream@3.0.0 
│ │ │   │ ├── is-redirect@1.0.0 
│ │ │   │ ├── is-retry-allowed@1.1.0 
│ │ │   │ ├── is-stream@1.1.0 
│ │ │   │ ├── lowercase-keys@1.0.0 
│ │ │   │ ├── timed-out@4.0.1 
│ │ │   │ ├── unzip-response@2.0.1 
│ │ │   │ └─┬ url-parse-lax@1.0.0 
│ │ │   │   └── prepend-http@1.0.4 
│ │ │   ├─┬ registry-auth-token@3.3.1 
│ │ │   │ └─┬ rc@1.2.1 
│ │ │   │   ├── deep-extend@0.4.2 
│ │ │   │   ├── minimist@1.2.0 
│ │ │   │   └── strip-json-comments@2.0.1 
│ │ │   └─┬ registry-url@3.1.0 
│ │ │     └─┬ rc@1.2.1 
│ │ │       ├── deep-extend@0.4.2 
│ │ │       ├── minimist@1.2.0 
│ │ │       └── strip-json-comments@2.0.1 
│ │ ├── semver-diff@2.1.0 
│ │ └── xdg-basedir@3.0.0 
│ ├── uuid@3.1.0 
│ ├─┬ validate-npm-package-license@3.0.1 
│ │ ├─┬ spdx-correct@1.0.2 
│ │ │ └── spdx-license-ids@1.2.2 
│ │ └── spdx-expression-parse@1.0.4 
│ ├─┬ validate-npm-package-name@3.0.0 
│ │ └── builtins@1.0.3 
│ ├─┬ which@1.3.0 
│ │ └── isexe@2.0.0 
│ ├─┬ worker-farm@1.5.0 
│ │ ├─┬ errno@0.1.4 
│ │ │ └── prr@0.0.0 
│ │ └── xtend@4.0.1 
│ ├── wrappy@1.0.2 
│ └── write-file-atomic@2.1.0 
├─┬ promise@7.3.1 
│ └── asap@2.0.6 
├── q@1.5.0 
├─┬ request@2.81.0 
│ ├── aws-sign2@0.6.0 
│ ├── aws4@1.6.0 
│ ├── caseless@0.12.0 
│ ├─┬ combined-stream@1.0.5 
│ │ └── delayed-stream@1.0.0 
│ ├── extend@3.0.1 
│ ├── forever-agent@0.6.1 
│ ├─┬ form-data@2.1.4 
│ │ └── asynckit@0.4.0 
│ ├─┬ har-validator@4.2.1 
│ │ └── har-schema@1.0.5 
│ ├─┬ hawk@3.1.3 
│ │ ├── boom@2.10.1 
│ │ ├── cryptiles@2.0.5 
│ │ ├── hoek@2.16.3 
│ │ └── sntp@1.0.9 
│ ├─┬ http-signature@1.1.1 
│ │ ├── assert-plus@0.2.0 
│ │ ├─┬ jsprim@1.4.1 
│ │ │ ├── assert-plus@1.0.0 
│ │ │ ├── extsprintf@1.3.0 
│ │ │ ├── json-schema@0.2.3 
│ │ │ └─┬ verror@1.10.0 
│ │ │   └── assert-plus@1.0.0 
│ │ └─┬ sshpk@1.13.1 
│ │   ├── asn1@0.2.3 
│ │   ├── assert-plus@1.0.0 
│ │   ├── bcrypt-pbkdf@1.0.1 
│ │   ├─┬ dashdash@1.14.1 
│ │   │ └── assert-plus@1.0.0 
│ │   ├── ecc-jsbn@0.1.1 
│ │   ├─┬ getpass@0.1.7 
│ │   │ └── assert-plus@1.0.0 
│ │   ├── jsbn@0.1.1 
│ │   └── tweetnacl@0.14.5 
│ ├── is-typedarray@1.0.0 
│ ├── isstream@0.1.2 
│ ├── json-stringify-safe@5.0.1 
│ ├─┬ mime-types@2.1.17 
│ │ └── mime-db@1.30.0 
│ ├── oauth-sign@0.8.2 
│ ├── performance-now@0.2.0 
│ ├── qs@6.4.0 
│ ├── safe-buffer@5.1.1 
│ ├── stringstream@0.0.5 
│ ├─┬ tough-cookie@2.3.2 
│ │ └── punycode@1.4.1 
│ └── tunnel-agent@0.6.0 
├── sequence@3.0.0 
├─┬ truffle-contract@2.0.5 
│ ├─┬ ethjs-abi@0.1.8 
│ │ ├── bn.js@4.11.6 
│ │ ├── js-sha3@0.5.5 
│ │ └─┬ number-to-bn@1.7.0 
│ │   └─┬ strip-hex-prefix@1.0.0 
│ │     └── is-hex-prefixed@1.0.0 
│ ├─┬ truffle-blockchain-utils@0.0.3 
│ │ └── web3@0.20.1 
│ ├─┬ truffle-contract-schema@0.0.5 
│ │ └── crypto-js@3.1.9-1 
│ └─┬ web3@0.20.1 
│   └── bignumber.js@2.0.7  (git+https://github.com/frozeman/bignumber.js-nolookahead.git#57692b3ecfc98bbdd6b3a516cb2353652ea49934)
├── uuid@3.1.0 
├── wait-promise@0.4.1 
├─┬ web3@0.19.1 
│ ├── bignumber.js@4.0.4 
│ ├── crypto-js@3.1.8 
│ ├── utf8@2.1.2 
│ ├── xhr2@0.1.4 
│ └── xmlhttprequest@1.8.0 
├── UNMET PEER DEPENDENCY webpack@2 || 3
├─┬ xml2js@0.4.19 
│ ├── sax@1.2.4 
│ └── xmlbuilder@9.0.4 
└─┬ yarn@0.24.6 
  ├── bytes@2.5.0 
  ├── camelcase@4.1.0 
  ├── cmd-shim@2.0.2 
  ├── death@1.1.0 
  ├── detect-indent@5.0.0 
  ├─┬ gunzip-maybe@1.4.1 
  │ ├─┬ browserify-zlib@0.1.4 
  │ │ └── pako@0.2.9 
  │ ├── is-deflate@1.0.0 
  │ ├── is-gzip@1.0.0 
  │ ├─┬ peek-stream@1.1.2 
  │ │ └─┬ duplexify@3.5.1 
  │ │   └── stream-shift@1.0.0 
  │ ├── pumpify@1.3.5 
  │ └── through2@2.0.3 
  ├── ini@1.3.4 
  ├─┬ inquirer@3.2.3 
  │ ├── ansi-escapes@2.0.0 
  │ ├─┬ chalk@2.1.0 
  │ │ ├─┬ ansi-styles@3.2.0 
  │ │ │ └─┬ color-convert@1.9.0 
  │ │ │   └── color-name@1.1.3 
  │ │ └─┬ supports-color@4.4.0 
  │ │   └── has-flag@2.0.0 
  │ ├─┬ cli-cursor@2.1.0 
  │ │ └─┬ restore-cursor@2.0.0 
  │ │   └─┬ onetime@2.0.1 
  │ │     └── mimic-fn@1.1.0 
  │ ├─┬ external-editor@2.0.4 
  │ │ ├── jschardet@1.5.1 
  │ │ └── tmp@0.0.31 
  │ ├── figures@2.0.0 
  │ ├── mute-stream@0.0.7 
  │ ├─┬ run-async@2.3.0 
  │ │ └── is-promise@2.1.0 
  │ ├── rx-lite@4.0.8 
  │ ├── rx-lite-aggregates@4.0.8 
  │ └─┬ strip-ansi@4.0.0 
  │   └── ansi-regex@3.0.0 
  ├── is-builtin-module@1.0.0 
  ├─┬ is-ci@1.0.10 
  │ └── ci-info@1.1.1 
  ├── leven@2.1.0 
  ├─┬ loud-rejection@1.6.0 
  │ ├─┬ currently-unhandled@0.4.1 
  │ │ └── array-find-index@1.0.2 
  │ └── signal-exit@3.0.2 
  ├─┬ node-emoji@1.8.1 
  │ └── lodash.toarray@4.4.0 
  ├── object-path@0.11.4 
  ├─┬ proper-lockfile@2.0.1 
  │ └── retry@0.10.1 
  ├── read@1.0.7 
  ├── request-capture-har@1.2.2 
  ├── rimraf@2.6.2 
  ├─┬ tar-fs@1.15.3 
  │ ├── chownr@1.0.1 
  │ └── pump@1.0.2 
  ├─┬ tar-stream@1.5.4 
  │ ├── bl@1.2.1 
  │ └── end-of-stream@1.4.0 
  ├── v8-compile-cache@1.1.0 
  └─┬ validate-npm-package-license@3.0.1 
    ├─┬ spdx-correct@1.0.2 
    │ └── spdx-license-ids@1.2.2 
    └── spdx-expression-parse@1.0.4 
</msg>
<status status="PASS" endtime="20170915 10:14:38.595" starttime="20170915 10:14:38.594"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${npm_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170915 10:14:38.596" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170915 10:14:38.596" starttime="20170915 10:14:38.596"></status>
</kw>
<status status="PASS" endtime="20170915 10:14:38.596" starttime="20170915 10:13:00.745"></status>
</kw>
<kw name="Set Oracle Address In Bridge" library="IexecBridge">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>sed -i 's/.*"ContractAddress":.*/"ContractAddress":\"${IEXEC_ORACLE_SM_ADDRESS}\"/g' iexec-bridge/config.json</arg>
</arguments>
<msg timestamp="20170915 10:14:38.598" level="INFO">Running command 'sed -i 's/.*"ContractAddress":.*/"ContractAddress":"0x489efe815c86a1b5de6c1179768c5838e4c9edcf"/g' iexec-bridge/config.json 2&gt;&amp;1'.</msg>
<status status="PASS" endtime="20170915 10:14:38.610" starttime="20170915 10:14:38.597"></status>
</kw>
<status status="PASS" endtime="20170915 10:14:38.610" starttime="20170915 10:14:38.596"></status>
</kw>
<kw name="Set XtremWeb Config In Bridge" library="IexecBridge">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${XWCONFIGURE.VALUES.XWSERVER}</arg>
</arguments>
<msg timestamp="20170915 10:14:38.612" level="INFO">localhost</msg>
<status status="PASS" endtime="20170915 10:14:38.612" starttime="20170915 10:14:38.611"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>sed -i "s/.*const LOCALHOSTNAME = .*/const LOCALHOSTNAME = '${XWCONFIGURE.VALUES.XWSERVER}';/g" iexec-bridge/xwhep.js</arg>
</arguments>
<msg timestamp="20170915 10:14:38.615" level="INFO">Running command 'sed -i "s/.*const LOCALHOSTNAME = .*/const LOCALHOSTNAME = 'localhost';/g" iexec-bridge/xwhep.js 2&gt;&amp;1'.</msg>
<status status="PASS" endtime="20170915 10:14:38.633" starttime="20170915 10:14:38.612"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${XWCONFIGURE.VALUES.HTTPSPORT}</arg>
</arguments>
<msg timestamp="20170915 10:14:38.634" level="INFO">9443</msg>
<status status="PASS" endtime="20170915 10:14:38.634" starttime="20170915 10:14:38.633"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>sed -i "s/.*const LOCALHOSTPORT = .*/const LOCALHOSTPORT = ${XWCONFIGURE.VALUES.HTTPSPORT};/g" iexec-bridge/xwhep.js</arg>
</arguments>
<msg timestamp="20170915 10:14:38.636" level="INFO">Running command 'sed -i "s/.*const LOCALHOSTPORT = .*/const LOCALHOSTPORT = 9443;/g" iexec-bridge/xwhep.js 2&gt;&amp;1'.</msg>
<status status="PASS" endtime="20170915 10:14:38.654" starttime="20170915 10:14:38.634"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${XWCONFIGURE.VALUES.XWADMINLOGIN}</arg>
</arguments>
<msg timestamp="20170915 10:14:38.655" level="INFO">admin</msg>
<status status="PASS" endtime="20170915 10:14:38.655" starttime="20170915 10:14:38.655"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>sed -i "s/.*const LOGIN = .*/const LOGIN = '${XWCONFIGURE.VALUES.XWADMINLOGIN}';/g" iexec-bridge/xwhep.js</arg>
</arguments>
<msg timestamp="20170915 10:14:38.661" level="INFO">Running command 'sed -i "s/.*const LOGIN = .*/const LOGIN = 'admin';/g" iexec-bridge/xwhep.js 2&gt;&amp;1'.</msg>
<status status="PASS" endtime="20170915 10:14:38.675" starttime="20170915 10:14:38.656"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${XWCONFIGURE.VALUES.XWADMINPASSWORD}</arg>
</arguments>
<msg timestamp="20170915 10:14:38.678" level="INFO">admin</msg>
<status status="PASS" endtime="20170915 10:14:38.679" starttime="20170915 10:14:38.676"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>sed -i "s/.*const PASSWD = .*/const PASSWD = '${XWCONFIGURE.VALUES.XWADMINPASSWORD}';/g" iexec-bridge/xwhep.js</arg>
</arguments>
<msg timestamp="20170915 10:14:38.683" level="INFO">Running command 'sed -i "s/.*const PASSWD = .*/const PASSWD = 'admin';/g" iexec-bridge/xwhep.js 2&gt;&amp;1'.</msg>
<status status="PASS" endtime="20170915 10:14:38.706" starttime="20170915 10:14:38.679"></status>
</kw>
<status status="PASS" endtime="20170915 10:14:38.706" starttime="20170915 10:14:38.611"></status>
</kw>
<status status="PASS" endtime="20170915 10:14:38.707" starttime="20170915 10:13:00.744"></status>
</kw>
<kw name="Start Bridge" library="IexecBridge">
<kw name="Remove File" library="OperatingSystem">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>iexec-bridge/bridge.log</arg>
</arguments>
<msg timestamp="20170915 10:14:38.708" html="yes" level="INFO">File '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/iexec-bridge/bridge.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/iexec-bridge/bridge.log&lt;/a&gt;' does not exist.</msg>
<status status="PASS" endtime="20170915 10:14:38.708" starttime="20170915 10:14:38.708"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>cd iexec-bridge &amp;&amp; npm run devbridgelog</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${created_process}</var>
</assign>
<msg timestamp="20170915 10:14:38.709" level="INFO">Starting process:
cd iexec-bridge &amp;&amp; npm run devbridgelog</msg>
<msg timestamp="20170915 10:14:38.722" level="INFO">${created_process} = 10</msg>
<status status="PASS" endtime="20170915 10:14:38.722" starttime="20170915 10:14:38.709"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${BRIDGE_PROCESS}</arg>
<arg>${created_process}</arg>
</arguments>
<msg timestamp="20170915 10:14:38.723" level="INFO">${BRIDGE_PROCESS} = 10</msg>
<status status="PASS" endtime="20170915 10:14:38.723" starttime="20170915 10:14:38.722"></status>
</kw>
<status status="PASS" endtime="20170915 10:14:38.723" starttime="20170915 10:14:38.707"></status>
</kw>
<status status="PASS" endtime="20170915 10:14:38.723" starttime="20170915 10:00:18.928"></status>
</kw>
<test id="s1-s1-t1" name="Test HelloWorld Submit Iexec On Local Geth">
<kw name="Get User Address" library="IexceOracleSmartContract">
<assign>
<var>${user}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd iexec-oracle &amp;&amp; ./node_modules/.bin/truffle test test/rf/getUserAddress.js</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${truffletest_result}</var>
</assign>
<msg timestamp="20170915 10:14:38.728" level="INFO">Starting process:
cd iexec-oracle &amp;&amp; ./node_modules/.bin/truffle test test/rf/getUserAddress.js</msg>
<msg timestamp="20170915 10:14:38.732" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170915 10:15:21.709" level="INFO">Process completed.</msg>
<msg timestamp="20170915 10:15:21.710" level="INFO">${truffletest_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170915 10:15:21.710" starttime="20170915 10:14:38.727"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stderr}</arg>
</arguments>
<msg timestamp="20170915 10:15:21.711" level="INFO"></msg>
<status status="PASS" endtime="20170915 10:15:21.711" starttime="20170915 10:15:21.710"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
</arguments>
<msg timestamp="20170915 10:15:21.711" level="INFO">Using network 'development'.

IexecOracle deployed at address :0xfea8323670299487ae5f600541c156f4d5f7db16
IexecOracleAPIimpl deployed at address :0xda59f0a47e5d6a75d4d14f1ef89b2a5fabdf6c38

[0m[0m
[0m  Contract: IexecOracle[0m
BEGIN_LOG0xcea29878afc25b5fa49364b223bf6bfcf6c5f66cEND_LOG
  [32m  ✓[0m[90m get a creator[0m


[92m [0m[32m 1 passing[0m[90m (203ms)[0m
</msg>
<status status="PASS" endtime="20170915 10:15:21.711" starttime="20170915 10:15:21.711"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${truffletest_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170915 10:15:21.712" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170915 10:15:21.712" starttime="20170915 10:15:21.711"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
<arg>BEGIN_LOG(?P&lt;address&gt;.*)END_LOG</arg>
<arg>address</arg>
</arguments>
<assign>
<var>@{address}</var>
</assign>
<msg timestamp="20170915 10:15:21.713" level="INFO">@{address} = [ 0xcea29878afc25b5fa49364b223bf6bfcf6c5f66c ]</msg>
<status status="PASS" endtime="20170915 10:15:21.713" starttime="20170915 10:15:21.712"></status>
</kw>
<msg timestamp="20170915 10:15:21.713" level="INFO">${user} = 0xcea29878afc25b5fa49364b223bf6bfcf6c5f66c</msg>
<status status="PASS" endtime="20170915 10:15:21.713" starttime="20170915 10:14:38.725"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${USER}</arg>
<arg>${user}</arg>
</arguments>
<msg timestamp="20170915 10:15:21.714" level="INFO">${USER} = 0xcea29878afc25b5fa49364b223bf6bfcf6c5f66c</msg>
<status status="PASS" endtime="20170915 10:15:21.714" starttime="20170915 10:15:21.714"></status>
</kw>
<kw name="Get Creator Address" library="IexceOracleSmartContract">
<assign>
<var>${creator}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd iexec-oracle &amp;&amp; ./node_modules/.bin/truffle test test/rf/getCreatorAddress.js</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${truffletest_result}</var>
</assign>
<msg timestamp="20170915 10:15:21.715" level="INFO">Starting process:
cd iexec-oracle &amp;&amp; ./node_modules/.bin/truffle test test/rf/getCreatorAddress.js</msg>
<msg timestamp="20170915 10:15:21.729" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170915 10:15:36.585" level="INFO">Process completed.</msg>
<msg timestamp="20170915 10:15:36.586" level="INFO">${truffletest_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170915 10:15:36.586" starttime="20170915 10:15:21.715"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stderr}</arg>
</arguments>
<msg timestamp="20170915 10:15:36.588" level="INFO"></msg>
<status status="PASS" endtime="20170915 10:15:36.588" starttime="20170915 10:15:36.587"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
</arguments>
<msg timestamp="20170915 10:15:36.589" level="INFO">Using network 'development'.

IexecOracle deployed at address :0x93baf053e30764fb7d4841840bac62c0d74bbb93
IexecOracleAPIimpl deployed at address :0xb5aca8981b10db68e05d4ae53d3e875bf802646f

[0m[0m
[0m  Contract: IexecOracle[0m
BEGIN_LOG0x8cafc3f2a86aef2a5a261467ea4231cf1239f0d5END_LOG
  [32m  ✓[0m[90m get a creator[0m


[92m [0m[32m 1 passing[0m[90m (232ms)[0m
</msg>
<status status="PASS" endtime="20170915 10:15:36.589" starttime="20170915 10:15:36.589"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${truffletest_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170915 10:15:36.591" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170915 10:15:36.591" starttime="20170915 10:15:36.590"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
<arg>BEGIN_LOG(?P&lt;address&gt;.*)END_LOG</arg>
<arg>address</arg>
</arguments>
<assign>
<var>@{address}</var>
</assign>
<msg timestamp="20170915 10:15:36.592" level="INFO">@{address} = [ 0x8cafc3f2a86aef2a5a261467ea4231cf1239f0d5 ]</msg>
<status status="PASS" endtime="20170915 10:15:36.592" starttime="20170915 10:15:36.591"></status>
</kw>
<msg timestamp="20170915 10:15:36.593" level="INFO">${creator} = 0x8cafc3f2a86aef2a5a261467ea4231cf1239f0d5</msg>
<status status="PASS" endtime="20170915 10:15:36.593" starttime="20170915 10:15:21.714"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${CREATOR}</arg>
<arg>${creator}</arg>
</arguments>
<msg timestamp="20170915 10:15:36.598" level="INFO">${CREATOR} = 0x8cafc3f2a86aef2a5a261467ea4231cf1239f0d5</msg>
<status status="PASS" endtime="20170915 10:15:36.598" starttime="20170915 10:15:36.597"></status>
</kw>
<kw name="XWSENDAPPCommand" library="XWClient">
<doc>Usage : SENDAPP appName appType cpuType osName URI | UID : inserts/updates an application; URI or UID points to binary file ; application name must be the first parameter</doc>
<arguments>
<arg>echo</arg>
<arg>DEPLOYABLE</arg>
<arg>LINUX</arg>
<arg>AMD64</arg>
<arg>/bin/echo</arg>
</arguments>
<assign>
<var>${app_uid}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd ${DIST_XWHEP_PATH}/bin &amp;&amp; ./xwsendapp ${appName} ${appType} ${cpuType} ${osName} ${uri-udi}</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${cmd_result}</var>
</assign>
<msg timestamp="20170915 10:15:36.601" level="INFO">Starting process:
cd /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin &amp;&amp; ./xwsendapp echo DEPLOYABLE LINUX AMD64 /bin/echo</msg>
<msg timestamp="20170915 10:15:36.605" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170915 10:15:37.853" level="INFO">Process completed.</msg>
<msg timestamp="20170915 10:15:37.853" level="INFO">${cmd_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170915 10:15:37.853" starttime="20170915 10:15:36.600"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stderr}</arg>
</arguments>
<msg timestamp="20170915 10:15:37.854" level="INFO"></msg>
<status status="PASS" endtime="20170915 10:15:37.855" starttime="20170915 10:15:37.854"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
</arguments>
<msg timestamp="20170915 10:15:37.855" level="INFO">xw://vagrant-ubuntu-trusty-64/3b96c9a9-eea4-4fd4-aa31-02953655e7c8</msg>
<status status="PASS" endtime="20170915 10:15:37.855" starttime="20170915 10:15:37.855"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${cmd_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170915 10:15:37.856" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170915 10:15:37.856" starttime="20170915 10:15:37.855"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
<arg>-36</arg>
</arguments>
<assign>
<var>${uid}</var>
</assign>
<msg timestamp="20170915 10:15:37.856" level="INFO">${uid} = 3b96c9a9-eea4-4fd4-aa31-02953655e7c8</msg>
<status status="PASS" endtime="20170915 10:15:37.857" starttime="20170915 10:15:37.856"></status>
</kw>
<msg timestamp="20170915 10:15:37.857" level="INFO">${app_uid} = 3b96c9a9-eea4-4fd4-aa31-02953655e7c8</msg>
<status status="PASS" endtime="20170915 10:15:37.857" starttime="20170915 10:15:36.599"></status>
</kw>
<kw name="Count From Apps Where Uid" library="XWServer">
<arguments>
<arg>${app_uid}</arg>
<arg>1</arg>
</arguments>
<kw name="Count From Table Where Uid" library="MySql">
<arguments>
<arg>apps</arg>
<arg>${uid}</arg>
<arg>${countExpected}</arg>
</arguments>
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170915 10:15:37.860" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170915 10:15:37.866" starttime="20170915 10:15:37.859"></status>
</kw>
<status status="PASS" endtime="20170915 10:15:37.866" starttime="20170915 10:15:37.859"></status>
</kw>
<kw name="Row Count Is Equal To X" library="DatabaseLibrary">
<doc>Check if the number of rows returned from `selectStatement` is equal to the value submitted. If not, then this</doc>
<arguments>
<arg>SELECT * FROM ${table} WHERE uid = '${uid}'</arg>
<arg>${countExpected}</arg>
</arguments>
<msg timestamp="20170915 10:15:37.867" level="INFO">Executing : Row Count Is Equal To X  |  SELECT * FROM apps WHERE uid = '3b96c9a9-eea4-4fd4-aa31-02953655e7c8'  |  1 </msg>
<msg timestamp="20170915 10:15:37.867" level="INFO">Executing : Row Count  |  SELECT * FROM apps WHERE uid = '3b96c9a9-eea4-4fd4-aa31-02953655e7c8' </msg>
<status status="PASS" endtime="20170915 10:15:37.870" starttime="20170915 10:15:37.866"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170915 10:15:37.870" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170915 10:15:37.871" starttime="20170915 10:15:37.870"></status>
</kw>
<status status="PASS" endtime="20170915 10:15:37.871" starttime="20170915 10:15:37.870"></status>
</kw>
<status status="PASS" endtime="20170915 10:15:37.871" starttime="20170915 10:15:37.858"></status>
</kw>
<status status="PASS" endtime="20170915 10:15:37.871" starttime="20170915 10:15:37.857"></status>
</kw>
<kw name="Count From Works" library="XWServer">
<arguments>
<arg>0</arg>
</arguments>
<kw name="Count From Table" library="MySql">
<arguments>
<arg>works</arg>
<arg>${countExpected}</arg>
</arguments>
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170915 10:15:37.879" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170915 10:15:37.880" starttime="20170915 10:15:37.878"></status>
</kw>
<status status="PASS" endtime="20170915 10:15:37.880" starttime="20170915 10:15:37.878"></status>
</kw>
<kw name="Row Count Is Equal To X" library="DatabaseLibrary">
<doc>Check if the number of rows returned from `selectStatement` is equal to the value submitted. If not, then this</doc>
<arguments>
<arg>SELECT * FROM ${table}</arg>
<arg>${countExpected}</arg>
</arguments>
<msg timestamp="20170915 10:15:37.881" level="INFO">Executing : Row Count Is Equal To X  |  SELECT * FROM works  |  0 </msg>
<msg timestamp="20170915 10:15:37.881" level="INFO">Executing : Row Count  |  SELECT * FROM works </msg>
<status status="PASS" endtime="20170915 10:15:37.882" starttime="20170915 10:15:37.880"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170915 10:15:37.883" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170915 10:15:37.883" starttime="20170915 10:15:37.883"></status>
</kw>
<status status="PASS" endtime="20170915 10:15:37.883" starttime="20170915 10:15:37.882"></status>
</kw>
<status status="PASS" endtime="20170915 10:15:37.883" starttime="20170915 10:15:37.877"></status>
</kw>
<status status="PASS" endtime="20170915 10:15:37.883" starttime="20170915 10:15:37.872"></status>
</kw>
<kw name="Submit" library="IexecOracleAPIimplSmartContract">
<arguments>
<arg>echo</arg>
<arg>HelloWorld!!!</arg>
</arguments>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>sed -i "s/.*return aIexecOracleAPIimplInstance.iexecSubmit(.*/return aIexecOracleAPIimplInstance.iexecSubmit(\\"${appName}\\",\\"${param}\\",{/g" iexec-oracle/test/rf/submitTest.js</arg>
</arguments>
<msg timestamp="20170915 10:15:37.886" level="INFO">Running command 'sed -i "s/.*return aIexecOracleAPIimplInstance.iexecSubmit(.*/return aIexecOracleAPIimplInstance.iexecSubmit(\"echo\",\"HelloWorld!!!\",{/g" iexec-oracle/test/rf/submitTest.js 2&gt;&amp;1'.</msg>
<status status="PASS" endtime="20170915 10:15:37.893" starttime="20170915 10:15:37.884"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd iexec-oracle &amp;&amp; ./node_modules/.bin/truffle test test/rf/submitTest.js</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${truffletest_result}</var>
</assign>
<msg timestamp="20170915 10:15:37.894" level="INFO">Starting process:
cd iexec-oracle &amp;&amp; ./node_modules/.bin/truffle test test/rf/submitTest.js</msg>
<msg timestamp="20170915 10:15:37.897" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170915 10:16:06.607" level="INFO">Process completed.</msg>
<msg timestamp="20170915 10:16:06.607" level="INFO">${truffletest_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170915 10:16:06.607" starttime="20170915 10:15:37.894"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stderr}</arg>
</arguments>
<msg timestamp="20170915 10:16:06.608" level="INFO"></msg>
<status status="PASS" endtime="20170915 10:16:06.608" starttime="20170915 10:16:06.608"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
</arguments>
<msg timestamp="20170915 10:16:06.609" level="INFO">Using network 'development'.

IexecOracle deployed at address :0x5971944d37793a4c4d8ad8311fee4eea879d54dc
IexecOracleAPIimpl deployed at address :0xc9781d201e29b568280160af5eed3fc548d97e12

[0m[0m
[0m  Contract: IexecOracleAPIimpl[0m
refill 20 ether to 0xcea29878afc25b5fa49364b223bf6bfcf6c5f66c
BEGIN_LOG
{ tx: '0xaa0a8ed196065111c87710904a1495390eef7819970d635e4fd2d28115682f7f',
  receipt: 
   { blockHash: '0xdbf1562bcbeee544128aeca2e9d6f5654a76e2be360bdf16bf9e008bcc910bde',
     blockNumber: 98,
     contractAddress: null,
     cumulativeGasUsed: 33243,
     from: '0xcea29878afc25b5fa49364b223bf6bfcf6c5f66c',
     gasUsed: 33243,
     logs: [ [Object] ],
     logsBloom: '0x
     root: '0xa69846cbf3cc5bb06c0c14f020ec2dcf345f707ca5257496751d2fb8cd1ce879',
     to: '0x461d7c4bdec1203fef1ea55bdd72a25f9b4d1825',
     transactionHash: '0xaa0a8ed196065111c87710904a1495390eef7819970d635e4fd2d28115682f7f',
     transactionIndex: 0 },
  logs: [] }
END_LOG
  [32m  ✓[0m[90m should register a work[0m[31m (3190ms)[0m


[92m [0m[32m 1 passing[0m[90m (5s)[0m
</msg>
<status status="PASS" endtime="20170915 10:16:06.609" starttime="20170915 10:16:06.609"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${truffletest_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170915 10:16:06.610" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170915 10:16:06.610" starttime="20170915 10:16:06.609"></status>
</kw>
<status status="PASS" endtime="20170915 10:16:06.610" starttime="20170915 10:15:37.884"></status>
</kw>
<kw name="Check Submit Launch Event In IexceOracleSmartContract" library="IexceOracleSmartContract">
<arguments>
<arg>${HELLO_WORLD_SM_ADDRESS}</arg>
</arguments>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>1 min</arg>
<arg>1 min</arg>
<arg>Watch LaunchEvent</arg>
</arguments>
<assign>
<var>${watch_callback_events}</var>
</assign>
<kw name="Watch LaunchEvent" library="IexceOracleSmartContract">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd iexec-oracle &amp;&amp; ./node_modules/.bin/truffle test test/rf/watchLaunchEventInIexecOracle.js</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${truffletest_result}</var>
</assign>
<msg timestamp="20170915 10:16:06.612" level="INFO">Starting process:
cd iexec-oracle &amp;&amp; ./node_modules/.bin/truffle test test/rf/watchLaunchEventInIexecOracle.js</msg>
<msg timestamp="20170915 10:16:06.620" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170915 10:16:20.634" level="INFO">Process completed.</msg>
<msg timestamp="20170915 10:16:20.635" level="INFO">${truffletest_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170915 10:16:20.635" starttime="20170915 10:16:06.612"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stderr}</arg>
</arguments>
<msg timestamp="20170915 10:16:20.636" level="INFO"></msg>
<status status="PASS" endtime="20170915 10:16:20.636" starttime="20170915 10:16:20.635"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
</arguments>
<msg timestamp="20170915 10:16:20.637" level="INFO">Using network 'development'.

IexecOracle deployed at address :0xa8c6c9ab24fb9f96eda204d9a524ca93f5e67d37
IexecOracleAPIimpl deployed at address :0xa20ee79156fe74134f285b6a879264d4a40069a4

[0m[0m
[0m  Contract: IexecOracle[0m
BEGIN_LOG
[{"address":"0x489efe815c86a1b5de6c1179768c5838e4c9edcf","blockNumber":98,"transactionHash":"0xaa0a8ed196065111c87710904a1495390eef7819970d635e4fd2d28115682f7f","transactionIndex":0,"blockHash":"0xdbf1562bcbeee544128aeca2e9d6f5654a76e2be360bdf16bf9e008bcc910bde","logIndex":0,"removed":false,"event":"Launch","args":{"user":"0xcea29878afc25b5fa49364b223bf6bfcf6c5f66c","provider":"0x461d7c4bdec1203fef1ea55bdd72a25f9b4d1825","creator":"0x8cafc3f2a86aef2a5a261467ea4231cf1239f0d5","functionName":"submit","param1":"echo","param2":"HelloWorld!!!","workUid":""}}]
END_LOG
  [32m  ✓[0m[90m watch CallbackEvent[0m[31m (446ms)[0m


[92m [0m[32m 1 passing[0m[90m (648ms)[0m
</msg>
<status status="PASS" endtime="20170915 10:16:20.637" starttime="20170915 10:16:20.636"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${truffletest_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170915 10:16:20.637" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170915 10:16:20.638" starttime="20170915 10:16:20.637"></status>
</kw>
<kw name="Fetch From Right" library="String">
<doc>Returns contents of the ``string`` after the last occurrence of ``marker``.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
<arg>BEGIN_LOG</arg>
</arguments>
<assign>
<var>${after_begin_log}</var>
</assign>
<msg timestamp="20170915 10:16:20.639" level="INFO">${after_begin_log} = 
[{"address":"0x489efe815c86a1b5de6c1179768c5838e4c9edcf","blockNumber":98,"transactionHash":"0xaa0a8ed196065111c87710904a1495390eef7819970d635e4fd2d28115682f7f","transactionIndex":0,"blockHash":"0xdb...</msg>
<status status="PASS" endtime="20170915 10:16:20.639" starttime="20170915 10:16:20.638"></status>
</kw>
<kw name="Fetch From Left" library="String">
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<arguments>
<arg>${after_begin_log}</arg>
<arg>END_LOG</arg>
</arguments>
<assign>
<var>${before_end_log}</var>
</assign>
<msg timestamp="20170915 10:16:20.640" level="INFO">${before_end_log} = 
[{"address":"0x489efe815c86a1b5de6c1179768c5838e4c9edcf","blockNumber":98,"transactionHash":"0xaa0a8ed196065111c87710904a1495390eef7819970d635e4fd2d28115682f7f","transactionIndex":0,"blockHash":"0xdb...</msg>
<status status="PASS" endtime="20170915 10:16:20.640" starttime="20170915 10:16:20.639"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads('''${before_end_log}''')</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${events}</var>
</assign>
<msg timestamp="20170915 10:16:20.648" level="INFO">${events} = [{u'blockHash': u'0xdbf1562bcbeee544128aeca2e9d6f5654a76e2be360bdf16bf9e008bcc910bde', u'transactionHash': u'0xaa0a8ed196065111c87710904a1495390eef7819970d635e4fd2d28115682f7f', u'args': {u'workUid': ...</msg>
<status status="PASS" endtime="20170915 10:16:20.648" starttime="20170915 10:16:20.640"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${events}</arg>
</arguments>
<msg timestamp="20170915 10:16:20.649" level="INFO">[{u'blockHash': u'0xdbf1562bcbeee544128aeca2e9d6f5654a76e2be360bdf16bf9e008bcc910bde', u'transactionHash': u'0xaa0a8ed196065111c87710904a1495390eef7819970d635e4fd2d28115682f7f', u'args': {u'workUid': u'', u'functionName': u'submit', u'creator': u'0x8cafc3f2a86aef2a5a261467ea4231cf1239f0d5', u'param2': u'HelloWorld!!!', u'param1': u'echo', u'provider': u'0x461d7c4bdec1203fef1ea55bdd72a25f9b4d1825', u'user': u'0xcea29878afc25b5fa49364b223bf6bfcf6c5f66c'}, u'blockNumber': 98, u'address': u'0x489efe815c86a1b5de6c1179768c5838e4c9edcf', u'logIndex': 0, u'removed': False, u'transactionIndex': 0, u'event': u'Launch'}]</msg>
<status status="PASS" endtime="20170915 10:16:20.649" starttime="20170915 10:16:20.648"></status>
</kw>
<status status="PASS" endtime="20170915 10:16:20.649" starttime="20170915 10:16:06.611"></status>
</kw>
<msg timestamp="20170915 10:16:20.649" level="INFO">${watch_callback_events} = [{u'blockHash': u'0xdbf1562bcbeee544128aeca2e9d6f5654a76e2be360bdf16bf9e008bcc910bde', u'transactionHash': u'0xaa0a8ed196065111c87710904a1495390eef7819970d635e4fd2d28115682f7f', u'args': {u'workUid': ...</msg>
<status status="PASS" endtime="20170915 10:16:20.649" starttime="20170915 10:16:06.611"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${watch_callback_events[0]["event"]}</arg>
<arg>Launch</arg>
</arguments>
<status status="PASS" endtime="20170915 10:16:20.650" starttime="20170915 10:16:20.650"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${watch_callback_events[0]["args"]["functionName"]}</arg>
<arg>submit</arg>
</arguments>
<status status="PASS" endtime="20170915 10:16:20.651" starttime="20170915 10:16:20.650"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${watch_callback_events[0]["args"]["param1"]}</arg>
<arg>echo</arg>
</arguments>
<status status="PASS" endtime="20170915 10:16:20.651" starttime="20170915 10:16:20.651"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${watch_callback_events[0]["args"]["user"]}</arg>
<arg>${USER}</arg>
</arguments>
<status status="PASS" endtime="20170915 10:16:20.652" starttime="20170915 10:16:20.651"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${watch_callback_events[0]["args"]["creator"]}</arg>
<arg>${CREATOR}</arg>
</arguments>
<status status="PASS" endtime="20170915 10:16:20.653" starttime="20170915 10:16:20.652"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${watch_callback_events[0]["args"]["provider"]}</arg>
<arg>${provider}</arg>
</arguments>
<status status="PASS" endtime="20170915 10:16:20.657" starttime="20170915 10:16:20.653"></status>
</kw>
<status status="PASS" endtime="20170915 10:16:20.658" starttime="20170915 10:16:06.610"></status>
</kw>
<kw name="Check Submit CallbackEvent Event In IexceOracleSmartContract" library="IexceOracleSmartContract">
<arguments>
<arg>${HELLO_WORLD_SM_ADDRESS}</arg>
</arguments>
<assign>
<var>${index}</var>
</assign>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3 min</arg>
<arg>1 min</arg>
<arg>Watch CallbackEvent</arg>
</arguments>
<assign>
<var>${watch_callback_events}</var>
</assign>
<kw name="Watch CallbackEvent" library="IexceOracleSmartContract">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd iexec-oracle &amp;&amp; ./node_modules/.bin/truffle test test/rf/watchCallbackEventInIexecOracle.js</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${truffletest_result}</var>
</assign>
<msg timestamp="20170915 10:16:20.660" level="INFO">Starting process:
cd iexec-oracle &amp;&amp; ./node_modules/.bin/truffle test test/rf/watchCallbackEventInIexecOracle.js</msg>
<msg timestamp="20170915 10:16:20.664" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170915 10:17:10.692" level="INFO">Process completed.</msg>
<msg timestamp="20170915 10:17:10.692" level="INFO">${truffletest_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170915 10:17:10.692" starttime="20170915 10:16:20.660"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stderr}</arg>
</arguments>
<msg timestamp="20170915 10:17:10.693" level="INFO"></msg>
<status status="PASS" endtime="20170915 10:17:10.693" starttime="20170915 10:17:10.693"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
</arguments>
<msg timestamp="20170915 10:17:10.694" level="INFO">Using network 'development'.

IexecOracle deployed at address :0x23dbc0a34b2832640b2882c5954565c2b8057993
IexecOracleAPIimpl deployed at address :0x1371d5e6dae9e17b96c867d42c251d2d029b642a

[0m[0m
[0m  Contract: IexecOracle[0m
BEGIN_LOG
[{"address":"0x489efe815c86a1b5de6c1179768c5838e4c9edcf","blockNumber":135,"transactionHash":"0xa52dfe0da4b23a58dd41a69c53b8b72ff3f57c2aa5194105ac7246776922ea5e","transactionIndex":0,"blockHash":"0xc7ab6ccb6e09d76f368a216c18d0254965f9f20dbd7020f7cb24434db42d29cb","logIndex":0,"removed":false,"event":"CallbackEvent","args":{"callbackType":"SubmitCallback","user":"0xcea29878afc25b5fa49364b223bf6bfcf6c5f66c","provider":"0x461d7c4bdec1203fef1ea55bdd72a25f9b4d1825","creator":"0x8cafc3f2a86aef2a5a261467ea4231cf1239f0d5","appName":"echo","index":"1"}}]
END_LOG
  [32m  ✓[0m[90m watch CallbackEvent[0m[31m (36880ms)[0m


[92m [0m[32m 1 passing[0m[90m (37s)[0m
</msg>
<status status="PASS" endtime="20170915 10:17:10.694" starttime="20170915 10:17:10.693"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${truffletest_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170915 10:17:10.694" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170915 10:17:10.694" starttime="20170915 10:17:10.694"></status>
</kw>
<kw name="Fetch From Right" library="String">
<doc>Returns contents of the ``string`` after the last occurrence of ``marker``.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
<arg>BEGIN_LOG</arg>
</arguments>
<assign>
<var>${after_begin_log}</var>
</assign>
<msg timestamp="20170915 10:17:10.695" level="INFO">${after_begin_log} = 
[{"address":"0x489efe815c86a1b5de6c1179768c5838e4c9edcf","blockNumber":135,"transactionHash":"0xa52dfe0da4b23a58dd41a69c53b8b72ff3f57c2aa5194105ac7246776922ea5e","transactionIndex":0,"blockHash":"0xc...</msg>
<status status="PASS" endtime="20170915 10:17:10.695" starttime="20170915 10:17:10.695"></status>
</kw>
<kw name="Fetch From Left" library="String">
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<arguments>
<arg>${after_begin_log}</arg>
<arg>END_LOG</arg>
</arguments>
<assign>
<var>${before_end_log}</var>
</assign>
<msg timestamp="20170915 10:17:10.696" level="INFO">${before_end_log} = 
[{"address":"0x489efe815c86a1b5de6c1179768c5838e4c9edcf","blockNumber":135,"transactionHash":"0xa52dfe0da4b23a58dd41a69c53b8b72ff3f57c2aa5194105ac7246776922ea5e","transactionIndex":0,"blockHash":"0xc...</msg>
<status status="PASS" endtime="20170915 10:17:10.696" starttime="20170915 10:17:10.695"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads('''${before_end_log}''')</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${events}</var>
</assign>
<msg timestamp="20170915 10:17:10.697" level="INFO">${events} = [{u'blockHash': u'0xc7ab6ccb6e09d76f368a216c18d0254965f9f20dbd7020f7cb24434db42d29cb', u'transactionHash': u'0xa52dfe0da4b23a58dd41a69c53b8b72ff3f57c2aa5194105ac7246776922ea5e', u'args': {u'index': u'...</msg>
<status status="PASS" endtime="20170915 10:17:10.697" starttime="20170915 10:17:10.696"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${events}</arg>
</arguments>
<msg timestamp="20170915 10:17:10.697" level="INFO">[{u'blockHash': u'0xc7ab6ccb6e09d76f368a216c18d0254965f9f20dbd7020f7cb24434db42d29cb', u'transactionHash': u'0xa52dfe0da4b23a58dd41a69c53b8b72ff3f57c2aa5194105ac7246776922ea5e', u'args': {u'index': u'1', u'appName': u'echo', u'creator': u'0x8cafc3f2a86aef2a5a261467ea4231cf1239f0d5', u'user': u'0xcea29878afc25b5fa49364b223bf6bfcf6c5f66c', u'provider': u'0x461d7c4bdec1203fef1ea55bdd72a25f9b4d1825', u'callbackType': u'SubmitCallback'}, u'blockNumber': 135, u'address': u'0x489efe815c86a1b5de6c1179768c5838e4c9edcf', u'logIndex': 0, u'removed': False, u'transactionIndex': 0, u'event': u'CallbackEvent'}]</msg>
<status status="PASS" endtime="20170915 10:17:10.697" starttime="20170915 10:17:10.697"></status>
</kw>
<status status="PASS" endtime="20170915 10:17:10.697" starttime="20170915 10:16:20.659"></status>
</kw>
<msg timestamp="20170915 10:17:10.698" level="INFO">${watch_callback_events} = [{u'blockHash': u'0xc7ab6ccb6e09d76f368a216c18d0254965f9f20dbd7020f7cb24434db42d29cb', u'transactionHash': u'0xa52dfe0da4b23a58dd41a69c53b8b72ff3f57c2aa5194105ac7246776922ea5e', u'args': {u'index': u'...</msg>
<status status="PASS" endtime="20170915 10:17:10.698" starttime="20170915 10:16:20.659"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${watch_callback_events[0]["event"]}</arg>
<arg>CallbackEvent</arg>
</arguments>
<status status="PASS" endtime="20170915 10:17:10.698" starttime="20170915 10:17:10.698"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${watch_callback_events[0]["args"]["callbackType"]}</arg>
<arg>SubmitCallback</arg>
</arguments>
<status status="PASS" endtime="20170915 10:17:10.699" starttime="20170915 10:17:10.699"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${watch_callback_events[0]["args"]["appName"]}</arg>
<arg>echo</arg>
</arguments>
<status status="PASS" endtime="20170915 10:17:10.700" starttime="20170915 10:17:10.699"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${watch_callback_events[0]["args"]["user"]}</arg>
<arg>${USER}</arg>
</arguments>
<status status="PASS" endtime="20170915 10:17:10.700" starttime="20170915 10:17:10.700"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${watch_callback_events[0]["args"]["creator"]}</arg>
<arg>${CREATOR}</arg>
</arguments>
<status status="PASS" endtime="20170915 10:17:10.700" starttime="20170915 10:17:10.700"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${watch_callback_events[0]["args"]["provider"]}</arg>
<arg>${provider}</arg>
</arguments>
<status status="PASS" endtime="20170915 10:17:10.701" starttime="20170915 10:17:10.700"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${watch_callback_events[0]["args"]["index"]}</arg>
</arguments>
<msg timestamp="20170915 10:17:10.701" level="INFO">1</msg>
<status status="PASS" endtime="20170915 10:17:10.701" starttime="20170915 10:17:10.701"></status>
</kw>
<msg timestamp="20170915 10:17:10.701" level="INFO">${index} = 1</msg>
<status status="PASS" endtime="20170915 10:17:10.701" starttime="20170915 10:16:20.658"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${index}</arg>
</arguments>
<msg timestamp="20170915 10:17:10.702" level="INFO">1</msg>
<status status="PASS" endtime="20170915 10:17:10.702" starttime="20170915 10:17:10.702"></status>
</kw>
<kw name="Check Submit CallbackEvent Event In IexecOracleAPIimplSmartContract" library="IexecOracleAPIimplSmartContract">
<arguments>
<arg>${index}</arg>
<arg>${HELLO_WORLD_SM_ADDRESS}</arg>
</arguments>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3 min</arg>
<arg>1 min</arg>
<arg>Watch IExecCallbackEvent</arg>
</arguments>
<assign>
<var>${watch_callback_events}</var>
</assign>
<kw name="Watch IExecCallbackEvent" library="IexecOracleAPIimplSmartContract">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd iexec-oracle &amp;&amp; ./node_modules/.bin/truffle test test/rf/watchIExecCallbackEventTest.js</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${truffletest_result}</var>
</assign>
<msg timestamp="20170915 10:17:10.705" level="INFO">Starting process:
cd iexec-oracle &amp;&amp; ./node_modules/.bin/truffle test test/rf/watchIExecCallbackEventTest.js</msg>
<msg timestamp="20170915 10:17:10.708" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170915 10:17:31.500" level="INFO">Process completed.</msg>
<msg timestamp="20170915 10:17:31.501" level="INFO">${truffletest_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170915 10:17:31.501" starttime="20170915 10:17:10.704"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stderr}</arg>
</arguments>
<msg timestamp="20170915 10:17:31.501" level="INFO"></msg>
<status status="PASS" endtime="20170915 10:17:31.502" starttime="20170915 10:17:31.501"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
</arguments>
<msg timestamp="20170915 10:17:31.502" level="INFO">Using network 'development'.

IexecOracle deployed at address :0x3e8aedc9d750f92ce396a635c6bbabf160a773a8
IexecOracleAPIimpl deployed at address :0xf501a25071412608191e59b9109c9f5a4255541f

[0m[0m
[0m  Contract: IexecOracleAPIimpl[0m
BEGIN_LOG
[{"address":"0x461d7c4bdec1203fef1ea55bdd72a25f9b4d1825","blockNumber":135,"transactionHash":"0xa52dfe0da4b23a58dd41a69c53b8b72ff3f57c2aa5194105ac7246776922ea5e","transactionIndex":0,"blockHash":"0xc7ab6ccb6e09d76f368a216c18d0254965f9f20dbd7020f7cb24434db42d29cb","logIndex":1,"removed":false,"event":"IexecCallbackEvent","args":{"callbackType":"SubmitCallback","user":"0xcea29878afc25b5fa49364b223bf6bfcf6c5f66c","provider":"0x461d7c4bdec1203fef1ea55bdd72a25f9b4d1825","creator":"0x8cafc3f2a86aef2a5a261467ea4231cf1239f0d5","appName":"echo","index":"1"}}]
END_LOG
  [32m  ✓[0m[90m watch CallbackEvent[0m[31m (591ms)[0m


[92m [0m[32m 1 passing[0m[90m (794ms)[0m
</msg>
<status status="PASS" endtime="20170915 10:17:31.502" starttime="20170915 10:17:31.502"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${truffletest_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170915 10:17:31.503" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170915 10:17:31.503" starttime="20170915 10:17:31.502"></status>
</kw>
<kw name="Fetch From Right" library="String">
<doc>Returns contents of the ``string`` after the last occurrence of ``marker``.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
<arg>BEGIN_LOG</arg>
</arguments>
<assign>
<var>${after_begin_log}</var>
</assign>
<msg timestamp="20170915 10:17:31.503" level="INFO">${after_begin_log} = 
[{"address":"0x461d7c4bdec1203fef1ea55bdd72a25f9b4d1825","blockNumber":135,"transactionHash":"0xa52dfe0da4b23a58dd41a69c53b8b72ff3f57c2aa5194105ac7246776922ea5e","transactionIndex":0,"blockHash":"0xc...</msg>
<status status="PASS" endtime="20170915 10:17:31.504" starttime="20170915 10:17:31.503"></status>
</kw>
<kw name="Fetch From Left" library="String">
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<arguments>
<arg>${after_begin_log}</arg>
<arg>END_LOG</arg>
</arguments>
<assign>
<var>${before_end_log}</var>
</assign>
<msg timestamp="20170915 10:17:31.504" level="INFO">${before_end_log} = 
[{"address":"0x461d7c4bdec1203fef1ea55bdd72a25f9b4d1825","blockNumber":135,"transactionHash":"0xa52dfe0da4b23a58dd41a69c53b8b72ff3f57c2aa5194105ac7246776922ea5e","transactionIndex":0,"blockHash":"0xc...</msg>
<status status="PASS" endtime="20170915 10:17:31.504" starttime="20170915 10:17:31.504"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads('''${before_end_log}''')</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${events}</var>
</assign>
<msg timestamp="20170915 10:17:31.505" level="INFO">${events} = [{u'blockHash': u'0xc7ab6ccb6e09d76f368a216c18d0254965f9f20dbd7020f7cb24434db42d29cb', u'transactionHash': u'0xa52dfe0da4b23a58dd41a69c53b8b72ff3f57c2aa5194105ac7246776922ea5e', u'args': {u'index': u'...</msg>
<status status="PASS" endtime="20170915 10:17:31.505" starttime="20170915 10:17:31.504"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${events}</arg>
</arguments>
<msg timestamp="20170915 10:17:31.505" level="INFO">[{u'blockHash': u'0xc7ab6ccb6e09d76f368a216c18d0254965f9f20dbd7020f7cb24434db42d29cb', u'transactionHash': u'0xa52dfe0da4b23a58dd41a69c53b8b72ff3f57c2aa5194105ac7246776922ea5e', u'args': {u'index': u'1', u'appName': u'echo', u'creator': u'0x8cafc3f2a86aef2a5a261467ea4231cf1239f0d5', u'user': u'0xcea29878afc25b5fa49364b223bf6bfcf6c5f66c', u'provider': u'0x461d7c4bdec1203fef1ea55bdd72a25f9b4d1825', u'callbackType': u'SubmitCallback'}, u'blockNumber': 135, u'address': u'0x461d7c4bdec1203fef1ea55bdd72a25f9b4d1825', u'logIndex': 1, u'removed': False, u'transactionIndex': 0, u'event': u'IexecCallbackEvent'}]</msg>
<status status="PASS" endtime="20170915 10:17:31.505" starttime="20170915 10:17:31.505"></status>
</kw>
<status status="PASS" endtime="20170915 10:17:31.506" starttime="20170915 10:17:10.704"></status>
</kw>
<msg timestamp="20170915 10:17:31.506" level="INFO">${watch_callback_events} = [{u'blockHash': u'0xc7ab6ccb6e09d76f368a216c18d0254965f9f20dbd7020f7cb24434db42d29cb', u'transactionHash': u'0xa52dfe0da4b23a58dd41a69c53b8b72ff3f57c2aa5194105ac7246776922ea5e', u'args': {u'index': u'...</msg>
<status status="PASS" endtime="20170915 10:17:31.506" starttime="20170915 10:17:10.703"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${watch_callback_events[0]["event"]}</arg>
<arg>IexecCallbackEvent</arg>
</arguments>
<status status="PASS" endtime="20170915 10:17:31.506" starttime="20170915 10:17:31.506"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${watch_callback_events[0]["args"]["callbackType"]}</arg>
<arg>SubmitCallback</arg>
</arguments>
<status status="PASS" endtime="20170915 10:17:31.507" starttime="20170915 10:17:31.507"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${watch_callback_events[0]["args"]["appName"]}</arg>
<arg>echo</arg>
</arguments>
<status status="PASS" endtime="20170915 10:17:31.508" starttime="20170915 10:17:31.507"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${watch_callback_events[0]["args"]["user"]}</arg>
<arg>${USER}</arg>
</arguments>
<status status="PASS" endtime="20170915 10:17:31.508" starttime="20170915 10:17:31.508"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${watch_callback_events[0]["args"]["creator"]}</arg>
<arg>${CREATOR}</arg>
</arguments>
<status status="PASS" endtime="20170915 10:17:31.509" starttime="20170915 10:17:31.509"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${watch_callback_events[0]["args"]["provider"]}</arg>
<arg>${provider}</arg>
</arguments>
<status status="PASS" endtime="20170915 10:17:31.510" starttime="20170915 10:17:31.509"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${watch_callback_events[0]["args"]["index"]}</arg>
<arg>${index}</arg>
</arguments>
<status status="PASS" endtime="20170915 10:17:31.510" starttime="20170915 10:17:31.510"></status>
</kw>
<status status="PASS" endtime="20170915 10:17:31.511" starttime="20170915 10:17:10.703"></status>
</kw>
<kw name="Check Work Is Recorded in IexceOracleSmartContract After Submit" library="IexceOracleSmartContract">
<arguments>
<arg>${index}</arg>
<arg>${HELLO_WORLD_SM_ADDRESS}</arg>
</arguments>
<kw name="Get Work" library="IexceOracleSmartContract">
<arguments>
<arg>${USER}</arg>
<arg>${provider}</arg>
<arg>${index}</arg>
</arguments>
<assign>
<var>@{work_result}</var>
</assign>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>sed -i "s/.*getWork.call(.*/return aIexecOracleInstance.getWork.call('${user}','${provider}',\\"${index}\\");/g" iexec-oracle/test/rf/getWorkInIexecOracle.js</arg>
</arguments>
<msg timestamp="20170915 10:17:31.515" level="INFO">Running command 'sed -i "s/.*getWork.call(.*/return aIexecOracleInstance.getWork.call('0xcea29878afc25b5fa49364b223bf6bfcf6c5f66c','0x461d7c4bdec1203fef1ea55bdd72a25f9b4d1825',\"1\");/g" iexec-oracle/test/rf/getWorkInIexecOracle.js 2&gt;&amp;1'.</msg>
<status status="PASS" endtime="20170915 10:17:31.528" starttime="20170915 10:17:31.513"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd iexec-oracle &amp;&amp; ./node_modules/.bin/truffle test test/rf/getWorkInIexecOracle.js</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${truffletest_result}</var>
</assign>
<msg timestamp="20170915 10:17:31.529" level="INFO">Starting process:
cd iexec-oracle &amp;&amp; ./node_modules/.bin/truffle test test/rf/getWorkInIexecOracle.js</msg>
<msg timestamp="20170915 10:17:31.532" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170915 10:17:53.151" level="INFO">Process completed.</msg>
<msg timestamp="20170915 10:17:53.151" level="INFO">${truffletest_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170915 10:17:53.151" starttime="20170915 10:17:31.529"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stderr}</arg>
</arguments>
<msg timestamp="20170915 10:17:53.153" level="INFO"></msg>
<status status="PASS" endtime="20170915 10:17:53.153" starttime="20170915 10:17:53.151"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
</arguments>
<msg timestamp="20170915 10:17:53.153" level="INFO">Using network 'development'.

IexecOracle deployed at address :0xcd0fae77e3ca6cc86af2810d043abfac20f755ff
IexecOracleAPIimpl deployed at address :0xba9f5910d90203593883f6aee34f5c024e853c47

[0m[0m
[0m  Contract: IexecOracle[0m
BEGIN_LOG
workuid:d4b90365-a1ca-412b-a38b-231423143f1b
name:echo
timestamp:1505470628
status:4
stdout:HelloWorld!!!

stderr:
END_LOG
  [32m  ✓[0m[90m get a work[0m[31m (123ms)[0m


[92m [0m[32m 1 passing[0m[90m (355ms)[0m
</msg>
<status status="PASS" endtime="20170915 10:17:53.153" starttime="20170915 10:17:53.153"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${truffletest_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170915 10:17:53.154" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170915 10:17:53.154" starttime="20170915 10:17:53.154"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
<arg>workuid:(?P&lt;workuid&gt;.*)</arg>
<arg>workuid</arg>
</arguments>
<assign>
<var>@{workuid}</var>
</assign>
<msg timestamp="20170915 10:17:53.155" level="INFO">@{workuid} = [ d4b90365-a1ca-412b-a38b-231423143f1b ]</msg>
<status status="PASS" endtime="20170915 10:17:53.155" starttime="20170915 10:17:53.154"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
<arg>name:(?P&lt;name&gt;.*)</arg>
<arg>name</arg>
</arguments>
<assign>
<var>@{name}</var>
</assign>
<msg timestamp="20170915 10:17:53.156" level="INFO">@{name} = [ echo ]</msg>
<status status="PASS" endtime="20170915 10:17:53.156" starttime="20170915 10:17:53.156"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
<arg>timestamp:(?P&lt;timestamp&gt;.*)</arg>
<arg>timestamp</arg>
</arguments>
<assign>
<var>@{timestamp}</var>
</assign>
<msg timestamp="20170915 10:17:53.160" level="INFO">@{timestamp} = [ 1505470628 ]</msg>
<status status="PASS" endtime="20170915 10:17:53.160" starttime="20170915 10:17:53.156"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
<arg>status:(?P&lt;status&gt;.*)</arg>
<arg>status</arg>
</arguments>
<assign>
<var>@{status}</var>
</assign>
<msg timestamp="20170915 10:17:53.161" level="INFO">@{status} = [ 4 ]</msg>
<status status="PASS" endtime="20170915 10:17:53.161" starttime="20170915 10:17:53.160"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
<arg>stdout:(?P&lt;stdout&gt;.*)</arg>
<arg>stdout</arg>
</arguments>
<assign>
<var>@{stdout}</var>
</assign>
<msg timestamp="20170915 10:17:53.162" level="INFO">@{stdout} = [ HelloWorld!!! ]</msg>
<status status="PASS" endtime="20170915 10:17:53.162" starttime="20170915 10:17:53.161"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
<arg>stderr:(?P&lt;stderr&gt;.*)</arg>
<arg>stderr</arg>
</arguments>
<assign>
<var>@{stderr}</var>
</assign>
<msg timestamp="20170915 10:17:53.162" level="INFO">@{stderr} = [  ]</msg>
<status status="PASS" endtime="20170915 10:17:53.162" starttime="20170915 10:17:53.162"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>@{workuid}[0]</arg>
<arg>@{name}[0]</arg>
<arg>@{timestamp}[0]</arg>
<arg>@{status}[0]</arg>
<arg>@{stdout}[0]</arg>
<arg>@{stderr}[0]</arg>
</arguments>
<assign>
<var>@{work_result}</var>
</assign>
<msg timestamp="20170915 10:17:53.163" level="INFO">@{work_result} = [ d4b90365-a1ca-412b-a38b-231423143f1b | echo | 1505470628 | 4 | HelloWorld!!! |  ]</msg>
<status status="PASS" endtime="20170915 10:17:53.163" starttime="20170915 10:17:53.162"></status>
</kw>
<msg timestamp="20170915 10:17:53.163" level="INFO">@{work_result} = [ d4b90365-a1ca-412b-a38b-231423143f1b | echo | 1505470628 | 4 | HelloWorld!!! |  ]</msg>
<status status="PASS" endtime="20170915 10:17:53.163" starttime="20170915 10:17:31.512"></status>
</kw>
<kw name="Get Work Uid" library="IexceOracleSmartContract">
<arguments>
<arg>${USER}</arg>
<arg>${provider}</arg>
<arg>${index}</arg>
</arguments>
<assign>
<var>${workuid}</var>
</assign>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>sed -i "s/.*getWorkUid.call(.*/return aIexecOracleInstance.getWorkUid.call('${user}','${provider}',\\"${index}\\");/g" iexec-oracle/test/rf/getWorkUidInIexecOracle.js</arg>
</arguments>
<msg timestamp="20170915 10:17:53.170" level="INFO">Running command 'sed -i "s/.*getWorkUid.call(.*/return aIexecOracleInstance.getWorkUid.call('0xcea29878afc25b5fa49364b223bf6bfcf6c5f66c','0x461d7c4bdec1203fef1ea55bdd72a25f9b4d1825',\"1\");/g" iexec-oracle/test/rf/getWorkUidInIexecOracle.js 2&gt;&amp;1'.</msg>
<status status="PASS" endtime="20170915 10:17:53.179" starttime="20170915 10:17:53.164"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd iexec-oracle &amp;&amp; ./node_modules/.bin/truffle test test/rf/getWorkUidInIexecOracle.js</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${truffletest_result}</var>
</assign>
<msg timestamp="20170915 10:17:53.181" level="INFO">Starting process:
cd iexec-oracle &amp;&amp; ./node_modules/.bin/truffle test test/rf/getWorkUidInIexecOracle.js</msg>
<msg timestamp="20170915 10:17:53.185" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170915 10:18:21.854" level="INFO">Process completed.</msg>
<msg timestamp="20170915 10:18:21.855" level="INFO">${truffletest_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170915 10:18:21.855" starttime="20170915 10:17:53.180"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stderr}</arg>
</arguments>
<msg timestamp="20170915 10:18:21.856" level="INFO"></msg>
<status status="PASS" endtime="20170915 10:18:21.856" starttime="20170915 10:18:21.855"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
</arguments>
<msg timestamp="20170915 10:18:21.856" level="INFO">Using network 'development'.

IexecOracle deployed at address :0x0200799624c629e129302a125b4a6b1780e8cef8
IexecOracleAPIimpl deployed at address :0xd481ed3d83aa9b746dd754659906a88c271cad43

[0m[0m
[0m  Contract: IexecOracle[0m
BEGIN_LOG
workuid:d4b90365-a1ca-412b-a38b-231423143f1b
END_LOG
  [32m  ✓[0m[90m get a work[0m[33m (55ms)[0m


[92m [0m[32m 1 passing[0m[90m (227ms)[0m
</msg>
<status status="PASS" endtime="20170915 10:18:21.856" starttime="20170915 10:18:21.856"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${truffletest_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170915 10:18:21.857" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170915 10:18:21.857" starttime="20170915 10:18:21.857"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
<arg>workuid:(?P&lt;workuid&gt;.*)</arg>
<arg>workuid</arg>
</arguments>
<assign>
<var>@{workuid}</var>
</assign>
<msg timestamp="20170915 10:18:21.858" level="INFO">@{workuid} = [ d4b90365-a1ca-412b-a38b-231423143f1b ]</msg>
<status status="PASS" endtime="20170915 10:18:21.858" starttime="20170915 10:18:21.857"></status>
</kw>
<msg timestamp="20170915 10:18:21.858" level="INFO">${workuid} = d4b90365-a1ca-412b-a38b-231423143f1b</msg>
<status status="PASS" endtime="20170915 10:18:21.858" starttime="20170915 10:17:53.163"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${workuid}</arg>
<arg>@{work_result}[0]</arg>
</arguments>
<status status="PASS" endtime="20170915 10:18:21.859" starttime="20170915 10:18:21.859"></status>
</kw>
<kw name="Get Work Name" library="IexceOracleSmartContract">
<arguments>
<arg>${USER}</arg>
<arg>${provider}</arg>
<arg>${index}</arg>
</arguments>
<assign>
<var>${work_name}</var>
</assign>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>sed -i "s/.*getWorkName.call(.*/return aIexecOracleInstance.getWorkName.call('${user}','${provider}',\\"${index}\\");/g" iexec-oracle/test/rf/getWorkNameInIexecOracle.js</arg>
</arguments>
<msg timestamp="20170915 10:18:21.861" level="INFO">Running command 'sed -i "s/.*getWorkName.call(.*/return aIexecOracleInstance.getWorkName.call('0xcea29878afc25b5fa49364b223bf6bfcf6c5f66c','0x461d7c4bdec1203fef1ea55bdd72a25f9b4d1825',\"1\");/g" iexec-oracle/test/rf/getWorkNameInIexecOracle.js 2&gt;&amp;1'.</msg>
<status status="PASS" endtime="20170915 10:18:21.873" starttime="20170915 10:18:21.859"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd iexec-oracle &amp;&amp; ./node_modules/.bin/truffle test test/rf/getWorkNameInIexecOracle.js</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${truffletest_result}</var>
</assign>
<msg timestamp="20170915 10:18:21.874" level="INFO">Starting process:
cd iexec-oracle &amp;&amp; ./node_modules/.bin/truffle test test/rf/getWorkNameInIexecOracle.js</msg>
<msg timestamp="20170915 10:18:21.881" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170915 10:19:06.029" level="INFO">Process completed.</msg>
<msg timestamp="20170915 10:19:06.030" level="INFO">${truffletest_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170915 10:19:06.030" starttime="20170915 10:18:21.874"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stderr}</arg>
</arguments>
<msg timestamp="20170915 10:19:06.031" level="INFO"></msg>
<status status="PASS" endtime="20170915 10:19:06.031" starttime="20170915 10:19:06.030"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
</arguments>
<msg timestamp="20170915 10:19:06.031" level="INFO">Using network 'development'.

IexecOracle deployed at address :0x147b9bd22fbc8506382a511a685dcd3f0691ea4a
IexecOracleAPIimpl deployed at address :0xb8f74704a0c21b4e76bb20178217c4deaf8bcfd9

[0m[0m
[0m  Contract: IexecOracle[0m
BEGIN_LOG
name:echo
END_LOG
  [32m  ✓[0m[90m get a work[0m


[92m [0m[32m 1 passing[0m[90m (163ms)[0m
</msg>
<status status="PASS" endtime="20170915 10:19:06.031" starttime="20170915 10:19:06.031"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${truffletest_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170915 10:19:06.032" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170915 10:19:06.032" starttime="20170915 10:19:06.031"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
<arg>name:(?P&lt;name&gt;.*)</arg>
<arg>name</arg>
</arguments>
<assign>
<var>@{name}</var>
</assign>
<msg timestamp="20170915 10:19:06.034" level="INFO">@{name} = [ echo ]</msg>
<status status="PASS" endtime="20170915 10:19:06.034" starttime="20170915 10:19:06.032"></status>
</kw>
<msg timestamp="20170915 10:19:06.034" level="INFO">${work_name} = echo</msg>
<status status="PASS" endtime="20170915 10:19:06.034" starttime="20170915 10:18:21.859"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${work_name}</arg>
<arg>@{work_result}[1]</arg>
</arguments>
<status status="PASS" endtime="20170915 10:19:06.035" starttime="20170915 10:19:06.034"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${work_name}</arg>
<arg>echo</arg>
</arguments>
<status status="PASS" endtime="20170915 10:19:06.035" starttime="20170915 10:19:06.035"></status>
</kw>
<kw name="Get Work Timestamp" library="IexceOracleSmartContract">
<arguments>
<arg>${USER}</arg>
<arg>${provider}</arg>
<arg>${index}</arg>
</arguments>
<assign>
<var>${work_timestamp}</var>
</assign>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>sed -i "s/.*getWorkTimestamp.call(.*/return aIexecOracleInstance.getWorkTimestamp.call('${user}','${provider}',\\"${index}\\");/g" iexec-oracle/test/rf/getWorkTimestampInIexecOracle.js</arg>
</arguments>
<msg timestamp="20170915 10:19:06.037" level="INFO">Running command 'sed -i "s/.*getWorkTimestamp.call(.*/return aIexecOracleInstance.getWorkTimestamp.call('0xcea29878afc25b5fa49364b223bf6bfcf6c5f66c','0x461d7c4bdec1203fef1ea55bdd72a25f9b4d1825',\"1\");/g" iexec-oracle/test/rf/getWorkTimestampInIexecOracle.js 2&gt;&amp;1'.</msg>
<status status="PASS" endtime="20170915 10:19:06.050" starttime="20170915 10:19:06.036"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd iexec-oracle &amp;&amp; ./node_modules/.bin/truffle test test/rf/getWorkTimestampInIexecOracle.js</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${truffletest_result}</var>
</assign>
<msg timestamp="20170915 10:19:06.051" level="INFO">Starting process:
cd iexec-oracle &amp;&amp; ./node_modules/.bin/truffle test test/rf/getWorkTimestampInIexecOracle.js</msg>
<msg timestamp="20170915 10:19:06.055" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170915 10:19:23.689" level="INFO">Process completed.</msg>
<msg timestamp="20170915 10:19:23.690" level="INFO">${truffletest_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170915 10:19:23.690" starttime="20170915 10:19:06.050"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stderr}</arg>
</arguments>
<msg timestamp="20170915 10:19:23.691" level="INFO"></msg>
<status status="PASS" endtime="20170915 10:19:23.691" starttime="20170915 10:19:23.690"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
</arguments>
<msg timestamp="20170915 10:19:23.691" level="INFO">Using network 'development'.

IexecOracle deployed at address :0xde163cb76d07c76b8fb6df9b7bc79dd858064ca0
IexecOracleAPIimpl deployed at address :0xa41d72bc166d06fd8b684a467a6b61dfc648dacd

[0m[0m
[0m  Contract: IexecOracle[0m
BEGIN_LOG
timestamp:1505470628
END_LOG
  [32m  ✓[0m[90m get a work[0m[31m (84ms)[0m


[92m [0m[32m 1 passing[0m[90m (310ms)[0m
</msg>
<status status="PASS" endtime="20170915 10:19:23.691" starttime="20170915 10:19:23.691"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${truffletest_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170915 10:19:23.691" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170915 10:19:23.692" starttime="20170915 10:19:23.691"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
<arg>timestamp:(?P&lt;timestamp&gt;.*)</arg>
<arg>timestamp</arg>
</arguments>
<assign>
<var>@{timestamp}</var>
</assign>
<msg timestamp="20170915 10:19:23.692" level="INFO">@{timestamp} = [ 1505470628 ]</msg>
<status status="PASS" endtime="20170915 10:19:23.692" starttime="20170915 10:19:23.692"></status>
</kw>
<msg timestamp="20170915 10:19:23.693" level="INFO">${work_timestamp} = 1505470628</msg>
<status status="PASS" endtime="20170915 10:19:23.693" starttime="20170915 10:19:06.035"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${work_timestamp}</arg>
<arg>@{work_result}[2]</arg>
</arguments>
<status status="PASS" endtime="20170915 10:19:23.694" starttime="20170915 10:19:23.693"></status>
</kw>
<kw name="Get Work Status" library="IexceOracleSmartContract">
<arguments>
<arg>${USER}</arg>
<arg>${provider}</arg>
<arg>${index}</arg>
</arguments>
<assign>
<var>${work_status}</var>
</assign>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>sed -i "s/.*getWorkStatus.call(.*/return aIexecOracleInstance.getWorkStatus.call('${user}','${provider}',\\"${index}\\");/g" iexec-oracle/test/rf/getWorkStatusInIexecOracle.js</arg>
</arguments>
<msg timestamp="20170915 10:19:23.696" level="INFO">Running command 'sed -i "s/.*getWorkStatus.call(.*/return aIexecOracleInstance.getWorkStatus.call('0xcea29878afc25b5fa49364b223bf6bfcf6c5f66c','0x461d7c4bdec1203fef1ea55bdd72a25f9b4d1825',\"1\");/g" iexec-oracle/test/rf/getWorkStatusInIexecOracle.js 2&gt;&amp;1'.</msg>
<status status="PASS" endtime="20170915 10:19:23.702" starttime="20170915 10:19:23.694"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd iexec-oracle &amp;&amp; ./node_modules/.bin/truffle test test/rf/getWorkStatusInIexecOracle.js</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${truffletest_result}</var>
</assign>
<msg timestamp="20170915 10:19:23.703" level="INFO">Starting process:
cd iexec-oracle &amp;&amp; ./node_modules/.bin/truffle test test/rf/getWorkStatusInIexecOracle.js</msg>
<msg timestamp="20170915 10:19:23.707" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170915 10:19:43.850" level="INFO">Process completed.</msg>
<msg timestamp="20170915 10:19:43.851" level="INFO">${truffletest_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170915 10:19:43.851" starttime="20170915 10:19:23.702"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stderr}</arg>
</arguments>
<msg timestamp="20170915 10:19:43.852" level="INFO"></msg>
<status status="PASS" endtime="20170915 10:19:43.852" starttime="20170915 10:19:43.851"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
</arguments>
<msg timestamp="20170915 10:19:43.852" level="INFO">Using network 'development'.

IexecOracle deployed at address :0xc0d04f46100a35edde9cf3a00dbb97b9edad7bda
IexecOracleAPIimpl deployed at address :0xb4842ac72b2f7b7cd4f62f1df2c4de4dca2c392b

[0m[0m
[0m  Contract: IexecOracle[0m
BEGIN_LOG
status:4
END_LOG
  [32m  ✓[0m[90m get a work[0m[33m (70ms)[0m


[92m [0m[32m 1 passing[0m[90m (256ms)[0m
</msg>
<status status="PASS" endtime="20170915 10:19:43.853" starttime="20170915 10:19:43.852"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${truffletest_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170915 10:19:43.853" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170915 10:19:43.853" starttime="20170915 10:19:43.853"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
<arg>status:(?P&lt;status&gt;.*)</arg>
<arg>status</arg>
</arguments>
<assign>
<var>@{status}</var>
</assign>
<msg timestamp="20170915 10:19:43.854" level="INFO">@{status} = [ 4 ]</msg>
<status status="PASS" endtime="20170915 10:19:43.854" starttime="20170915 10:19:43.853"></status>
</kw>
<msg timestamp="20170915 10:19:43.854" level="INFO">${work_status} = 4</msg>
<status status="PASS" endtime="20170915 10:19:43.854" starttime="20170915 10:19:23.694"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${work_status}</arg>
<arg>@{work_result}[3]</arg>
</arguments>
<status status="PASS" endtime="20170915 10:19:43.855" starttime="20170915 10:19:43.854"></status>
</kw>
<kw name="Get Work Stdout" library="IexceOracleSmartContract">
<arguments>
<arg>${USER}</arg>
<arg>${provider}</arg>
<arg>${index}</arg>
</arguments>
<assign>
<var>${work_stdout}</var>
</assign>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>sed -i "s/.*getWorkStdout.call(.*/return aIexecOracleInstance.getWorkStdout.call('${user}','${provider}',\\"${index}\\");/g" iexec-oracle/test/rf/getWorkStdoutInIexecOracle.js</arg>
</arguments>
<msg timestamp="20170915 10:19:43.857" level="INFO">Running command 'sed -i "s/.*getWorkStdout.call(.*/return aIexecOracleInstance.getWorkStdout.call('0xcea29878afc25b5fa49364b223bf6bfcf6c5f66c','0x461d7c4bdec1203fef1ea55bdd72a25f9b4d1825',\"1\");/g" iexec-oracle/test/rf/getWorkStdoutInIexecOracle.js 2&gt;&amp;1'.</msg>
<status status="PASS" endtime="20170915 10:19:43.869" starttime="20170915 10:19:43.856"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd iexec-oracle &amp;&amp; ./node_modules/.bin/truffle test test/rf/getWorkStdoutInIexecOracle.js</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${truffletest_result}</var>
</assign>
<msg timestamp="20170915 10:19:43.870" level="INFO">Starting process:
cd iexec-oracle &amp;&amp; ./node_modules/.bin/truffle test test/rf/getWorkStdoutInIexecOracle.js</msg>
<msg timestamp="20170915 10:19:43.874" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170915 10:20:04.740" level="INFO">Process completed.</msg>
<msg timestamp="20170915 10:20:04.740" level="INFO">${truffletest_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170915 10:20:04.740" starttime="20170915 10:19:43.870"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stderr}</arg>
</arguments>
<msg timestamp="20170915 10:20:04.742" level="INFO"></msg>
<status status="PASS" endtime="20170915 10:20:04.742" starttime="20170915 10:20:04.741"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
</arguments>
<msg timestamp="20170915 10:20:04.743" level="INFO">Using network 'development'.

IexecOracle deployed at address :0xf006f6b476eb1f5164e98991afbfce20f7b393b2
IexecOracleAPIimpl deployed at address :0xf5351aa7ac20b6bc1fc9bc22423ee10796590fc3

[0m[0m
[0m  Contract: IexecOracle[0m
BEGIN_LOG
stdout:HelloWorld!!!

END_LOG
  [32m  ✓[0m[90m get a work[0m[31m (83ms)[0m


[92m [0m[32m 1 passing[0m[90m (298ms)[0m
</msg>
<status status="PASS" endtime="20170915 10:20:04.743" starttime="20170915 10:20:04.742"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${truffletest_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170915 10:20:04.743" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170915 10:20:04.744" starttime="20170915 10:20:04.743"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
<arg>stdout:(?P&lt;stdout&gt;.*)</arg>
<arg>stdout</arg>
</arguments>
<assign>
<var>@{stdout}</var>
</assign>
<msg timestamp="20170915 10:20:04.744" level="INFO">@{stdout} = [ HelloWorld!!! ]</msg>
<status status="PASS" endtime="20170915 10:20:04.744" starttime="20170915 10:20:04.744"></status>
</kw>
<msg timestamp="20170915 10:20:04.745" level="INFO">${work_stdout} = HelloWorld!!!</msg>
<status status="PASS" endtime="20170915 10:20:04.745" starttime="20170915 10:19:43.855"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${work_stdout}</arg>
<arg>@{work_result}[4]</arg>
</arguments>
<status status="PASS" endtime="20170915 10:20:04.749" starttime="20170915 10:20:04.745"></status>
</kw>
<kw name="Get Work Stderr" library="IexceOracleSmartContract">
<arguments>
<arg>${USER}</arg>
<arg>${provider}</arg>
<arg>${index}</arg>
</arguments>
<assign>
<var>${work_stderr}</var>
</assign>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>sed -i "s/.*getWorkStderr.call(.*/return aIexecOracleInstance.getWorkStderr.call('${user}','${provider}',\\"${index}\\");/g" iexec-oracle/test/rf/getWorkStderrInIexecOracle.js</arg>
</arguments>
<msg timestamp="20170915 10:20:04.752" level="INFO">Running command 'sed -i "s/.*getWorkStderr.call(.*/return aIexecOracleInstance.getWorkStderr.call('0xcea29878afc25b5fa49364b223bf6bfcf6c5f66c','0x461d7c4bdec1203fef1ea55bdd72a25f9b4d1825',\"1\");/g" iexec-oracle/test/rf/getWorkStderrInIexecOracle.js 2&gt;&amp;1'.</msg>
<status status="PASS" endtime="20170915 10:20:04.758" starttime="20170915 10:20:04.750"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd iexec-oracle &amp;&amp; ./node_modules/.bin/truffle test test/rf/getWorkStderrInIexecOracle.js</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${truffletest_result}</var>
</assign>
<msg timestamp="20170915 10:20:04.759" level="INFO">Starting process:
cd iexec-oracle &amp;&amp; ./node_modules/.bin/truffle test test/rf/getWorkStderrInIexecOracle.js</msg>
<msg timestamp="20170915 10:20:04.764" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170915 10:20:35.913" level="INFO">Process completed.</msg>
<msg timestamp="20170915 10:20:35.914" level="INFO">${truffletest_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170915 10:20:35.914" starttime="20170915 10:20:04.758"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stderr}</arg>
</arguments>
<msg timestamp="20170915 10:20:35.915" level="INFO"></msg>
<status status="PASS" endtime="20170915 10:20:35.915" starttime="20170915 10:20:35.914"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
</arguments>
<msg timestamp="20170915 10:20:35.915" level="INFO">Using network 'development'.

IexecOracle deployed at address :0xb8d198785772d2b10cf22bc7a719ecd9421cab65
IexecOracleAPIimpl deployed at address :0x012ff04370b4522a94d4d79925f097eb79e0f946

[0m[0m
[0m  Contract: IexecOracle[0m
BEGIN_LOG
stderr:
END_LOG
  [32m  ✓[0m[90m get a work[0m[31m (112ms)[0m


[92m [0m[32m 1 passing[0m[90m (331ms)[0m
</msg>
<status status="PASS" endtime="20170915 10:20:35.915" starttime="20170915 10:20:35.915"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${truffletest_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170915 10:20:35.916" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170915 10:20:35.916" starttime="20170915 10:20:35.916"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
<arg>stderr:(?P&lt;stderr&gt;.*)</arg>
<arg>stderr</arg>
</arguments>
<assign>
<var>@{stderr}</var>
</assign>
<msg timestamp="20170915 10:20:35.917" level="INFO">@{stderr} = [  ]</msg>
<status status="PASS" endtime="20170915 10:20:35.917" starttime="20170915 10:20:35.917"></status>
</kw>
<msg timestamp="20170915 10:20:35.918" level="INFO">${work_stderr} = </msg>
<status status="PASS" endtime="20170915 10:20:35.918" starttime="20170915 10:20:04.749"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${work_stderr}</arg>
<arg>@{work_result}[5]</arg>
</arguments>
<status status="PASS" endtime="20170915 10:20:35.918" starttime="20170915 10:20:35.918"></status>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<doc>Verifies that the given item is empty.</doc>
<arguments>
<arg>${work_stderr}</arg>
</arguments>
<msg timestamp="20170915 10:20:35.919" level="INFO">Length is 0</msg>
<status status="PASS" endtime="20170915 10:20:35.919" starttime="20170915 10:20:35.918"></status>
</kw>
<status status="PASS" endtime="20170915 10:20:35.919" starttime="20170915 10:17:31.511"></status>
</kw>
<kw name="Get Work Status" library="IexceOracleSmartContract">
<arguments>
<arg>${USER}</arg>
<arg>${HELLO_WORLD_SM_ADDRESS}</arg>
<arg>${index}</arg>
</arguments>
<assign>
<var>${work_status}</var>
</assign>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>sed -i "s/.*getWorkStatus.call(.*/return aIexecOracleInstance.getWorkStatus.call('${user}','${provider}',\\"${index}\\");/g" iexec-oracle/test/rf/getWorkStatusInIexecOracle.js</arg>
</arguments>
<msg timestamp="20170915 10:20:35.922" level="INFO">Running command 'sed -i "s/.*getWorkStatus.call(.*/return aIexecOracleInstance.getWorkStatus.call('0xcea29878afc25b5fa49364b223bf6bfcf6c5f66c','0x461d7c4bdec1203fef1ea55bdd72a25f9b4d1825',\"1\");/g" iexec-oracle/test/rf/getWorkStatusInIexecOracle.js 2&gt;&amp;1'.</msg>
<status status="PASS" endtime="20170915 10:20:35.938" starttime="20170915 10:20:35.920"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd iexec-oracle &amp;&amp; ./node_modules/.bin/truffle test test/rf/getWorkStatusInIexecOracle.js</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${truffletest_result}</var>
</assign>
<msg timestamp="20170915 10:20:35.939" level="INFO">Starting process:
cd iexec-oracle &amp;&amp; ./node_modules/.bin/truffle test test/rf/getWorkStatusInIexecOracle.js</msg>
<msg timestamp="20170915 10:20:35.944" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170915 10:20:57.649" level="INFO">Process completed.</msg>
<msg timestamp="20170915 10:20:57.649" level="INFO">${truffletest_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170915 10:20:57.649" starttime="20170915 10:20:35.939"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stderr}</arg>
</arguments>
<msg timestamp="20170915 10:20:57.650" level="INFO"></msg>
<status status="PASS" endtime="20170915 10:20:57.650" starttime="20170915 10:20:57.650"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
</arguments>
<msg timestamp="20170915 10:20:57.651" level="INFO">Using network 'development'.

IexecOracle deployed at address :0xfbf31665f1a1cd019545252c381cdccdea971c87
IexecOracleAPIimpl deployed at address :0xbed7aa810becf163750c84efd97b2024c02f1ab6

[0m[0m
[0m  Contract: IexecOracle[0m
BEGIN_LOG
status:4
END_LOG
  [32m  ✓[0m[90m get a work[0m[33m (62ms)[0m


[92m [0m[32m 1 passing[0m[90m (226ms)[0m
</msg>
<status status="PASS" endtime="20170915 10:20:57.651" starttime="20170915 10:20:57.651"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${truffletest_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170915 10:20:57.652" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170915 10:20:57.652" starttime="20170915 10:20:57.651"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
<arg>status:(?P&lt;status&gt;.*)</arg>
<arg>status</arg>
</arguments>
<assign>
<var>@{status}</var>
</assign>
<msg timestamp="20170915 10:20:57.652" level="INFO">@{status} = [ 4 ]</msg>
<status status="PASS" endtime="20170915 10:20:57.652" starttime="20170915 10:20:57.652"></status>
</kw>
<msg timestamp="20170915 10:20:57.653" level="INFO">${work_status} = 4</msg>
<status status="PASS" endtime="20170915 10:20:57.653" starttime="20170915 10:20:35.920"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${work_status}</arg>
<arg>4</arg>
</arguments>
<status status="PASS" endtime="20170915 10:20:57.654" starttime="20170915 10:20:57.653"></status>
</kw>
<kw name="Get Work Uid" library="IexceOracleSmartContract">
<arguments>
<arg>${USER}</arg>
<arg>${HELLO_WORLD_SM_ADDRESS}</arg>
<arg>${index}</arg>
</arguments>
<assign>
<var>${workuid}</var>
</assign>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>sed -i "s/.*getWorkUid.call(.*/return aIexecOracleInstance.getWorkUid.call('${user}','${provider}',\\"${index}\\");/g" iexec-oracle/test/rf/getWorkUidInIexecOracle.js</arg>
</arguments>
<msg timestamp="20170915 10:20:57.661" level="INFO">Running command 'sed -i "s/.*getWorkUid.call(.*/return aIexecOracleInstance.getWorkUid.call('0xcea29878afc25b5fa49364b223bf6bfcf6c5f66c','0x461d7c4bdec1203fef1ea55bdd72a25f9b4d1825',\"1\");/g" iexec-oracle/test/rf/getWorkUidInIexecOracle.js 2&gt;&amp;1'.</msg>
<status status="PASS" endtime="20170915 10:20:57.669" starttime="20170915 10:20:57.656"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd iexec-oracle &amp;&amp; ./node_modules/.bin/truffle test test/rf/getWorkUidInIexecOracle.js</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${truffletest_result}</var>
</assign>
<msg timestamp="20170915 10:20:57.669" level="INFO">Starting process:
cd iexec-oracle &amp;&amp; ./node_modules/.bin/truffle test test/rf/getWorkUidInIexecOracle.js</msg>
<msg timestamp="20170915 10:20:57.673" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170915 10:21:33.529" level="INFO">Process completed.</msg>
<msg timestamp="20170915 10:21:33.530" level="INFO">${truffletest_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170915 10:21:33.530" starttime="20170915 10:20:57.669"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stderr}</arg>
</arguments>
<msg timestamp="20170915 10:21:33.531" level="INFO"></msg>
<status status="PASS" endtime="20170915 10:21:33.531" starttime="20170915 10:21:33.530"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
</arguments>
<msg timestamp="20170915 10:21:33.531" level="INFO">Using network 'development'.

IexecOracle deployed at address :0xb4273c7f3ff931a763c18cbe54d2f918f43e4178
IexecOracleAPIimpl deployed at address :0x89708776ec1f205adc319dbe11e1b0d8d508e8e3

[0m[0m
[0m  Contract: IexecOracle[0m
BEGIN_LOG
workuid:d4b90365-a1ca-412b-a38b-231423143f1b
END_LOG
  [32m  ✓[0m[90m get a work[0m[33m (63ms)[0m


[92m [0m[32m 1 passing[0m[90m (254ms)[0m
</msg>
<status status="PASS" endtime="20170915 10:21:33.531" starttime="20170915 10:21:33.531"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${truffletest_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170915 10:21:33.532" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170915 10:21:33.532" starttime="20170915 10:21:33.532"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
<arg>workuid:(?P&lt;workuid&gt;.*)</arg>
<arg>workuid</arg>
</arguments>
<assign>
<var>@{workuid}</var>
</assign>
<msg timestamp="20170915 10:21:33.532" level="INFO">@{workuid} = [ d4b90365-a1ca-412b-a38b-231423143f1b ]</msg>
<status status="PASS" endtime="20170915 10:21:33.532" starttime="20170915 10:21:33.532"></status>
</kw>
<msg timestamp="20170915 10:21:33.533" level="INFO">${workuid} = d4b90365-a1ca-412b-a38b-231423143f1b</msg>
<status status="PASS" endtime="20170915 10:21:33.533" starttime="20170915 10:20:57.655"></status>
</kw>
<kw name="Count From Works Where Uid" library="XWServer">
<arguments>
<arg>${workuid}</arg>
<arg>1</arg>
</arguments>
<kw name="Count From Table Where Uid" library="MySql">
<arguments>
<arg>works</arg>
<arg>${uid}</arg>
<arg>${countExpected}</arg>
</arguments>
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170915 10:21:33.536" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170915 10:21:33.541" starttime="20170915 10:21:33.535"></status>
</kw>
<status status="PASS" endtime="20170915 10:21:33.542" starttime="20170915 10:21:33.534"></status>
</kw>
<kw name="Row Count Is Equal To X" library="DatabaseLibrary">
<doc>Check if the number of rows returned from `selectStatement` is equal to the value submitted. If not, then this</doc>
<arguments>
<arg>SELECT * FROM ${table} WHERE uid = '${uid}'</arg>
<arg>${countExpected}</arg>
</arguments>
<msg timestamp="20170915 10:21:33.542" level="INFO">Executing : Row Count Is Equal To X  |  SELECT * FROM works WHERE uid = 'd4b90365-a1ca-412b-a38b-231423143f1b'  |  1 </msg>
<msg timestamp="20170915 10:21:33.542" level="INFO">Executing : Row Count  |  SELECT * FROM works WHERE uid = 'd4b90365-a1ca-412b-a38b-231423143f1b' </msg>
<status status="PASS" endtime="20170915 10:21:33.543" starttime="20170915 10:21:33.542"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170915 10:21:33.544" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170915 10:21:33.544" starttime="20170915 10:21:33.544"></status>
</kw>
<status status="PASS" endtime="20170915 10:21:33.544" starttime="20170915 10:21:33.543"></status>
</kw>
<status status="PASS" endtime="20170915 10:21:33.544" starttime="20170915 10:21:33.534"></status>
</kw>
<status status="PASS" endtime="20170915 10:21:33.544" starttime="20170915 10:21:33.533"></status>
</kw>
<doc>Test HelloWorld Submit Iexec</doc>
<tags>
<tag>HelloWorld Tests</tag>
</tags>
<status status="PASS" endtime="20170915 10:21:33.545" critical="yes" starttime="20170915 10:14:38.723"></status>
</test>
<kw type="teardown" name="Stop Oracle Bridge And Xtremweb">
<kw name="Stop Bridge" library="IexecBridge">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${BRIDGE_PROCESS}</arg>
</arguments>
<msg timestamp="20170915 10:21:33.549" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20170915 10:21:33.651" level="INFO">Process completed.</msg>
<status status="PASS" endtime="20170915 10:21:33.652" starttime="20170915 10:21:33.549"></status>
</kw>
<status status="PASS" endtime="20170915 10:21:33.652" starttime="20170915 10:21:33.549"></status>
</kw>
<kw name="Stop Geth42" library="ETHGeth">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd ~/gethUtils &amp;&amp; ./killGeth.sh</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${geth_result}</var>
</assign>
<msg timestamp="20170915 10:21:33.653" level="INFO">Starting process:
cd ~/gethUtils &amp;&amp; ./killGeth.sh</msg>
<msg timestamp="20170915 10:21:33.656" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170915 10:21:33.669" level="INFO">Process completed.</msg>
<msg timestamp="20170915 10:21:33.670" level="INFO">${geth_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170915 10:21:33.670" starttime="20170915 10:21:33.653"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${geth_result.stderr}</arg>
</arguments>
<msg timestamp="20170915 10:21:33.671" level="INFO"></msg>
<status status="PASS" endtime="20170915 10:21:33.671" starttime="20170915 10:21:33.670"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${geth_result.stdout}</arg>
</arguments>
<msg timestamp="20170915 10:21:33.671" level="INFO"></msg>
<status status="PASS" endtime="20170915 10:21:33.672" starttime="20170915 10:21:33.671"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${geth_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170915 10:21:33.672" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170915 10:21:33.672" starttime="20170915 10:21:33.672"></status>
</kw>
<status status="PASS" endtime="20170915 10:21:33.672" starttime="20170915 10:21:33.652"></status>
</kw>
<kw name="Stop XWtremWeb Server And XWtremWeb Worker" library="XWCommon">
<kw name="Stop XtremWeb Server" library="XWServer">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${SERVER_PROCESS}</arg>
</arguments>
<msg timestamp="20170915 10:21:33.674" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20170915 10:21:33.685" level="INFO">Process completed.</msg>
<status status="PASS" endtime="20170915 10:21:33.685" starttime="20170915 10:21:33.673"></status>
</kw>
<status status="PASS" endtime="20170915 10:21:33.685" starttime="20170915 10:21:33.673"></status>
</kw>
<kw name="Log XtremWeb Server" library="XWCommon">
<kw name="Log XtremWeb Process Log File" library="XWServer">
<kw name="Log File" library="OperatingSystem">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<msg timestamp="20170915 10:21:33.687" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170915 10:21:33.691" level="INFO">touch: cannot touch ‘/var/log/xwhep-ibishub.log’: Permission denied
Fri Sep 15 10:01:13 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : checking launch url
Fri Sep 15 10:01:13 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] WARNING : no launcher URL defined
Fri Sep 15 10:01:13 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : launching SmartSockets hub
[15/Sep/2017:10:01:15 +0000] [main_1] ERROR : setRole : role redefined ?! (was SERVER)
[15/Sep/2017:10:01:16 +0000] [xtremweb.database.DBConnPoolThread_main_1] INFO : Connection to database jdbc:mysql://localhost/xtremweb is ok, 70 created
[15/Sep/2017:10:01:16 +0000] [xtremweb.dispatcher.DBInterface_main_1] WARN : Can't retrieve any app
[15/Sep/2017:10:01:16 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't create ProxyValidator
[15/Sep/2017:10:01:16 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.io.FileNotFoundException: /tmp/castore (No such file or directory) (/tmp/castore (No such file or directory))
[15/Sep/2017:10:01:16 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't add CA certificates to keystore
[15/Sep/2017:10:01:16 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.lang.NullPointerException (null)
[15/Sep/2017:10:01:17 +0000] [xtremweb.dispatcher.HashTaskSet_TaskSet_14] INFO : TaskSet started (300000)
[15/Sep/2017:10:01:18 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : still waiting task set...
[15/Sep/2017:10:01:18 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : UDP server not started
[15/Sep/2017:10:01:18 +0000] [xtremweb.communications.TCPServer_TCPServerNIO_15] INFO : started, listening on port : 4321
log4j:WARN No appenders could be found for logger (org.eclipse.jetty.util.log).
log4j:WARN Please initialize the log4j system properly.
log4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.
[15/Sep/2017:10:01:18 +0000] [xtremweb.communications.HTTPServer_main_1] INFO : started, listening on port : 9443
[15/Sep/2017:10:01:18 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : FACEBOOK : java.net.MalformedURLException: no protocol: 
[15/Sep/2017:10:01:18 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : GOOGLE : java.net.MalformedURLException: no protocol: 
[15/Sep/2017:10:01:18 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : TWITTER : java.net.MalformedURLException: no protocol: 
[15/Sep/2017:10:01:18 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : YAHOO : java.net.MalformedURLException: no protocol: 
[15/Sep/2017:10:01:19 +0000] [main_1] ERROR : Can't add new entry to keystore
[15/Sep/2017:10:01:19 +0000] [main_1] WARN : javax.net.ssl.SSLHandshakeException: sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target (sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target)
[15/Sep/2017:10:01:19 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : XWHEP Dispatcher(10.6.0-head) started [Fri Sep 15 10:01:19 UTC 2017]
[15/Sep/2017:10:01:19 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : DB vendor  = mysql
[15/Sep/2017:10:01:19 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : mileStone  = 
[15/Sep/2017:10:01:19 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Time out   = 15000
[15/Sep/2017:10:01:19 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Disk opt'd = true
[15/Sep/2017:10:01:19 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Net  opt'd = true
[15/Sep/2017:10:01:19 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : NIO        = true
XWHEP Dispatcher started  Fri Sep 15 10:01:19 UTC 2017
Name             : vagrant-ubuntu-trusty-64
Version          : 10.6.0-head
Identity         : 
XWRole           : SERVER
Started on       : Fri Sep 15 10:01:15 UTC 2017
Scheduler        : xtremweb.dispatcher.MatchingScheduler
SmartSockets hub : 172.28.128.3/172.17.0.1/10.0.2.15-4329#ce.0d.9d.39.cd.7c.00.00.3c.21.02.42.02.6c.0f.e2~vagrant
Server HTTP      : true
Alive            : 300
Alive time out   : 900
Polling time out : 15000
Optimize zip     : true
Optimize network : true
NIO              : true
Comm layer       : xtremweb.communications.TCPClient
Socket time out  : 60000
Socket retries   : 50
Max connections  : 200
TCP port         : 4321
UDP port         : 4323
HTPP  port       : 80
HTPPS port       : 9443
Sun RPC interposition port : 4328
Sandbox path : /usr/bin/lxc
Sandbox launch args : 
Host &lt;host&gt;&lt;uid&gt;964bb437-e752-4cc5-a8a5-e058c5d1d318&lt;/uid&gt;&lt;accessrights&gt;0x755&lt;/accessrights&gt;&lt;name&gt;vagrant-ubuntu-trusty-64&lt;/name&gt;&lt;cpuload&gt;50&lt;/cpuload&gt;&lt;natedipaddr&gt;10.0.2.15&lt;/natedipaddr&gt;&lt;ipaddr&gt;10.0.2.15&lt;/ipaddr&gt;&lt;hwaddr&gt;&lt;/hwaddr&gt;&lt;timezone&gt;Etc/UTC&lt;/timezone&gt;&lt;os&gt;LINUX&lt;/os&gt;&lt;osversion&gt;3.13.0-129-generic&lt;/osversion&gt;&lt;javaversion&gt;1.8.0_141&lt;/javaversion&gt;&lt;javadatamodel&gt;64&lt;/javadatamodel&gt;&lt;cputype&gt;AMD64&lt;/cputype&gt;&lt;cpunb&gt;1&lt;/cpunb&gt;&lt;cpumodel&gt;unknown&lt;/cpumodel&gt;&lt;cpuspeed&gt;0&lt;/cpuspeed&gt;&lt;totalmem&gt;0&lt;/totalmem&gt;&lt;totalswap&gt;0&lt;/totalswap&gt;&lt;totaltmp&gt;40284&lt;/totaltmp&gt;&lt;freetmp&gt;37314&lt;/freetmp&gt;&lt;project&gt;&lt;/project&gt;&lt;active&gt;true&lt;/active&gt;&lt;incomingconnections&gt;false&lt;/incomingconnections&gt;&lt;available&gt;false&lt;/available&gt;&lt;pilotjob&gt;false&lt;/pilotjob&gt;&lt;sgid&gt;&lt;/sgid&gt;&lt;timeout&gt;15000&lt;/timeout&gt;&lt;traces&gt;false&lt;/traces&gt;&lt;acceptbin&gt;false&lt;/acceptbin&gt;&lt;version&gt;10.6.0-head&lt;/version&gt;&lt;/host&gt;
[15/Sep/2017:10:01:19 +0000] [xtremweb.communications.HTTPServer_HTTPServer_218] INFO : started, listening on port : 9443
[15/Sep/2017:10:01:23 +0000] [xtremweb.common.StreamIO_TCPHandler_17] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[15/Sep/2017:10:01:26 +0000] [xtremweb.common.StreamIO_TCPHandler_18] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[15/Sep/2017:10:01:26 +0000] [xtremweb.common.StreamIO_TCPHandler_19] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[15/Sep/2017:10:01:26 +0000] [xtremweb.dispatcher.DBInterface_TCPHandler_20] INFO : vagrant-ubuntu-trusty-64 not in DB; inserting 19257d32-e27b-42f0-afe2-11ba0b9e9d46
[15/Sep/2017:10:01:26 +0000] [xtremweb.common.StreamIO_TCPHandler_20] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[15/Sep/2017:10:01:41 +0000] [xtremweb.common.StreamIO_TCPHandler_21] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[15/Sep/2017:10:02:26 +0000] [xtremweb.common.StreamIO_TCPHandler_22] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[15/Sep/2017:10:03:12 +0000] [xtremweb.common.StreamIO_TCPHandler_23] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[15/Sep/2017:10:03:57 +0000] [xtremweb.dispatcher.TCPHandler_TCPHandler_24] ERROR : Can't write result
[15/Sep/2017:10:03:57 +0000] [xtremweb.dispatcher.TCPHandler_TCPHandler_24] WARN : java.io.IOException: java.net.SocketException: Broken pipe (Write failed) (java.net.SocketException: Broken pipe (Write failed))
[15/Sep/2017:10:03:57 +0000] [xtremweb.common.StreamIO_TCPHandler_24] WARN : javax.net.ssl.SSLException: Connection has been shutdown: javax.net.ssl.SSLException: java.net.SocketException: Broken pipe (Write failed) (javax.net.ssl.SSLException: java.net.SocketException: Broken pipe (Write failed))
[15/Sep/2017:10:04:42 +0000] [xtremweb.common.StreamIO_TCPHandler_25] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[15/Sep/2017:10:05:27 +0000] [xtremweb.common.StreamIO_TCPHandler_26] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[15/Sep/2017:10:06:12 +0000] [xtremweb.dispatcher.TCPHandler_TCPHandler_27] ERROR : Can't write result
[15/Sep/2017:10:06:12 +0000] [xtremweb.dispatcher.TCPHandler_TCPHandler_27] WARN : java.io.IOException: java.net.SocketException: Broken pipe (Write failed) (java.net.SocketException: Broken pipe (Write failed))
[15/Sep/2017:10:06:12 +0000] [xtremweb.common.StreamIO_TCPHandler_27] WARN : javax.net.ssl.SSLException: Connection has been shutdown: javax.net.ssl.SSLException: java.net.SocketException: Broken pipe (Write failed) (javax.net.ssl.SSLException: java.net.SocketException: Broken pipe (Write failed))
[15/Sep/2017:10:06:26 +0000] [xtremweb.common.StreamIO_TCPHandler_28] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[15/Sep/2017:10:06:27 +0000] [xtremweb.common.StreamIO_TCPHandler_29] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[15/Sep/2017:10:06:57 +0000] [xtremweb.dispatcher.TCPHandler_TCPHandler_30] ERROR : Can't write result
[15/Sep/2017:10:06:57 +0000] [xtremweb.dispatcher.TCPHandler_TCPHandler_30] WARN : java.io.IOException: java.net.SocketException: Broken pipe (Write failed) (java.net.SocketException: Broken pipe (Write failed))
[15/Sep/2017:10:06:57 +0000] [xtremweb.common.StreamIO_TCPHandler_30] WARN : javax.net.ssl.SSLException: Connection has been shutdown: javax.net.ssl.SSLException: java.net.SocketException: Broken pipe (Write failed) (javax.net.ssl.SSLException: java.net.SocketException: Broken pipe (Write failed))
[15/Sep/2017:10:07:42 +0000] [xtremweb.dispatcher.TCPHandler_TCPHandler_31] ERROR : Can't write result
[15/Sep/2017:10:07:42 +0000] [xtremweb.dispatcher.TCPHandler_TCPHandler_31] WARN : java.io.IOException: java.net.SocketException: Broken pipe (Write failed) (java.net.SocketException: Broken pipe (Write failed))
[15/Sep/2017:10:07:42 +0000] [xtremweb.common.StreamIO_TCPHandler_31] WARN : javax.net.ssl.SSLException: Connection has been shutdown: javax.net.ssl.SSLException: java.net.SocketException: Broken pipe (Write failed) (javax.net.ssl.SSLException: java.net.SocketException: Broken pipe (Write failed))
[15/Sep/2017:10:08:28 +0000] [xtremweb.common.StreamIO_TCPHandler_32] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[15/Sep/2017:10:09:13 +0000] [xtremweb.dispatcher.TCPHandler_TCPHandler_33] ERROR : Can't write result
[15/Sep/2017:10:09:13 +0000] [xtremweb.dispatcher.TCPHandler_TCPHandler_33] WARN : java.io.IOException: java.net.SocketException: Broken pipe (Write failed) (java.net.SocketException: Broken pipe (Write failed))
[15/Sep/2017:10:09:13 +0000] [xtremweb.common.StreamIO_TCPHandler_33] WARN : javax.net.ssl.SSLException: Connection has been shutdown: javax.net.ssl.SSLException: java.net.SocketException: Broken pipe (Write failed) (javax.net.ssl.SSLException: java.net.SocketException: Broken pipe (Write failed))
[15/Sep/2017:10:09:58 +0000] [xtremweb.dispatcher.TCPHandler_TCPHandler_34] ERROR : Can't write result
[15/Sep/2017:10:09:58 +0000] [xtremweb.dispatcher.TCPHandler_TCPHandler_34] WARN : java.io.IOException: java.net.SocketException: Broken pipe (Write failed) (java.net.SocketException: Broken pipe (Write failed))
[15/Sep/2017:10:09:58 +0000] [xtremweb.common.StreamIO_TCPHandler_34] WARN : javax.net.ssl.SSLException: Connection has been shutdown: javax.net.ssl.SSLException: java.net.SocketException: Broken pipe (Write failed) (javax.net.ssl.SSLException: java.net.SocketException: Broken pipe (Write failed))
[15/Sep/2017:10:10:43 +0000] [xtremweb.common.StreamIO_TCPHandler_35] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[15/Sep/2017:10:11:27 +0000] [xtremweb.common.StreamIO_TCPHandler_36] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[15/Sep/2017:10:11:27 +0000] [xtremweb.common.StreamIO_TCPHandler_37] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[15/Sep/2017:10:11:28 +0000] [xtremweb.dispatcher.TCPHandler_TCPHandler_38] ERROR : Can't write result
[15/Sep/2017:10:11:28 +0000] [xtremweb.dispatcher.TCPHandler_TCPHandler_38] WARN : java.io.IOException: java.net.SocketException: Connection reset (java.net.SocketException: Connection reset)
[15/Sep/2017:10:11:28 +0000] [xtremweb.common.StreamIO_TCPHandler_38] WARN : javax.net.ssl.SSLException: Connection has been shutdown: javax.net.ssl.SSLException: java.net.SocketException: Connection reset (javax.net.ssl.SSLException: java.net.SocketException: Connection reset)
[15/Sep/2017:10:12:13 +0000] [xtremweb.common.StreamIO_TCPHandler_39] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[15/Sep/2017:10:12:58 +0000] [xtremweb.dispatcher.TCPHandler_TCPHandler_40] ERROR : Can't write result
[15/Sep/2017:10:12:58 +0000] [xtremweb.dispatcher.TCPHandler_TCPHandler_40] WARN : java.io.IOException: java.net.SocketException: Broken pipe (Write failed) (java.net.SocketException: Broken pipe (Write failed))
[15/Sep/2017:10:12:58 +0000] [xtremweb.common.StreamIO_TCPHandler_40] WARN : javax.net.ssl.SSLException: Connection has been shutdown: javax.net.ssl.SSLException: java.net.SocketException: Broken pipe (Write failed) (javax.net.ssl.SSLException: java.net.SocketException: Broken pipe (Write failed))
[15/Sep/2017:10:13:43 +0000] [xtremweb.common.StreamIO_TCPHandler_41] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[15/Sep/2017:10:14:29 +0000] [xtremweb.common.StreamIO_TCPHandler_42] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[15/Sep/2017:10:15:14 +0000] [xtremweb.common.StreamIO_TCPHandler_43] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[15/Sep/2017:10:15:37 +0000] [xtremweb.common.StreamIO_TCPHandler_44] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[15/Sep/2017:10:15:59 +0000] [xtremweb.common.StreamIO_TCPHandler_45] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[15/Sep/2017:10:16:05 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-226_226] WARN : 226 : getIdRpc a ete synchronise ! null
[15/Sep/2017:10:16:05 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-226_226] WARN : 226 : getIdRpc a ete synchronise ! GETAPPS
[15/Sep/2017:10:16:05 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-226_226] WARN : 226 : getIdRpc a ete synchronise ! GETAPPS
[15/Sep/2017:10:16:06 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-230_230] WARN : 230 : getIdRpc a ete synchronise ! null
[15/Sep/2017:10:16:06 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-230_230] WARN : 230 : getIdRpc a ete synchronise ! GET
[15/Sep/2017:10:16:06 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-230_230] WARN : 230 : getIdRpc a ete synchronise ! GET
[15/Sep/2017:10:16:06 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-224_224] WARN : 224 : getIdRpc a ete synchronise ! null
[15/Sep/2017:10:16:06 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-224_224] WARN : 224 : getIdRpc a ete synchronise ! SENDWORK
[15/Sep/2017:10:16:06 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-224_224] WARN : 224 : getIdRpc a ete synchronise ! SENDWORK
[15/Sep/2017:10:16:06 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-226_226] WARN : 226 : getIdRpc a ete synchronise ! null
[15/Sep/2017:10:16:06 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-226_226] WARN : 226 : getIdRpc a ete synchronise ! SENDWORK
[15/Sep/2017:10:16:06 +0000] [xtremweb.dispatcher.DBInterface_qtp2008966511-226_226] WARN : javax.mail.internet.AddressException: Missing local name in string ``@DBADMINEMAIL@'' (Missing local name)
[15/Sep/2017:10:16:06 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-226_226] WARN : 226 : getIdRpc a ete synchronise ! SENDWORK
[15/Sep/2017:10:16:06 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-228_228] WARN : 228 : getIdRpc a ete synchronise ! null
[15/Sep/2017:10:16:06 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-228_228] WARN : 228 : getIdRpc a ete synchronise ! GET
[15/Sep/2017:10:16:06 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-228_228] WARN : 228 : getIdRpc a ete synchronise ! GET
[15/Sep/2017:10:16:06 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-231_231] WARN : 231 : getIdRpc a ete synchronise ! null
[15/Sep/2017:10:16:06 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-231_231] WARN : 231 : getIdRpc a ete synchronise ! SENDWORK
[15/Sep/2017:10:16:06 +0000] [xtremweb.dispatcher.DBInterface_qtp2008966511-231_231] WARN : javax.mail.internet.AddressException: Missing local name in string ``@DBADMINEMAIL@'' (Missing local name)
[15/Sep/2017:10:16:06 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-231_231] WARN : 231 : getIdRpc a ete synchronise ! SENDWORK
[15/Sep/2017:10:16:06 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-227_227] WARN : 227 : getIdRpc a ete synchronise ! null
[15/Sep/2017:10:16:06 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-227_227] WARN : 227 : getIdRpc a ete synchronise ! GET
[15/Sep/2017:10:16:06 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-227_227] WARN : 227 : getIdRpc a ete synchronise ! GET
[15/Sep/2017:10:16:06 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-228_228] WARN : 228 : getIdRpc a ete synchronise ! null
[15/Sep/2017:10:16:06 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-228_228] WARN : 228 : getIdRpc a ete synchronise ! SENDWORK
[15/Sep/2017:10:16:06 +0000] [xtremweb.dispatcher.DBInterface_qtp2008966511-228_228] WARN : javax.mail.internet.AddressException: Missing local name in string ``@DBADMINEMAIL@'' (Missing local name)
[15/Sep/2017:10:16:06 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-228_228] WARN : 228 : getIdRpc a ete synchronise ! SENDWORK
[15/Sep/2017:10:16:16 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-227_227] WARN : 227 : getIdRpc a ete synchronise ! null
[15/Sep/2017:10:16:16 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-227_227] WARN : 227 : getIdRpc a ete synchronise ! GET
[15/Sep/2017:10:16:16 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-227_227] WARN : 227 : getIdRpc a ete synchronise ! GET
[15/Sep/2017:10:16:26 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-228_228] WARN : 228 : getIdRpc a ete synchronise ! null
[15/Sep/2017:10:16:26 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-228_228] WARN : 228 : getIdRpc a ete synchronise ! GET
[15/Sep/2017:10:16:26 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-228_228] WARN : 228 : getIdRpc a ete synchronise ! GET
[15/Sep/2017:10:16:27 +0000] [xtremweb.common.StreamIO_TCPHandler_46] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[15/Sep/2017:10:16:27 +0000] [xtremweb.common.StreamIO_TCPHandler_47] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[15/Sep/2017:10:16:36 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-227_227] WARN : 227 : getIdRpc a ete synchronise ! null
[15/Sep/2017:10:16:36 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-227_227] WARN : 227 : getIdRpc a ete synchronise ! GET
[15/Sep/2017:10:16:36 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-227_227] WARN : 227 : getIdRpc a ete synchronise ! GET
[15/Sep/2017:10:16:44 +0000] [xtremweb.common.StreamIO_TCPHandler_48] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[15/Sep/2017:10:16:44 +0000] [xtremweb.common.StreamIO_TCPHandler_49] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[15/Sep/2017:10:16:44 +0000] [xtremweb.common.StreamIO_TCPHandler_50] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[15/Sep/2017:10:16:44 +0000] [xtremweb.common.StreamIO_TCPHandler_51] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[15/Sep/2017:10:16:44 +0000] [xtremweb.dispatcher.TCPHandler_TCPHandler_52] ERROR : Can't write result
[15/Sep/2017:10:16:44 +0000] [xtremweb.dispatcher.TCPHandler_TCPHandler_52] WARN : java.io.IOException: java.net.SocketException: Broken pipe (Write failed) (java.net.SocketException: Broken pipe (Write failed))
[15/Sep/2017:10:16:44 +0000] [xtremweb.common.StreamIO_TCPHandler_52] WARN : javax.net.ssl.SSLException: Connection has been shutdown: javax.net.ssl.SSLException: java.net.SocketException: Broken pipe (Write failed) (javax.net.ssl.SSLException: java.net.SocketException: Broken pipe (Write failed))
[15/Sep/2017:10:16:46 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-224_224] WARN : 224 : getIdRpc a ete synchronise ! null
[15/Sep/2017:10:16:46 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-224_224] WARN : 224 : getIdRpc a ete synchronise ! GET
[15/Sep/2017:10:16:46 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-224_224] WARN : 224 : getIdRpc a ete synchronise ! GET
[15/Sep/2017:10:16:56 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-228_228] WARN : 228 : getIdRpc a ete synchronise ! null
[15/Sep/2017:10:16:56 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-228_228] WARN : 228 : getIdRpc a ete synchronise ! GET
[15/Sep/2017:10:16:56 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-228_228] WARN : 228 : getIdRpc a ete synchronise ! GET
[15/Sep/2017:10:16:59 +0000] [xtremweb.common.StreamIO_TCPHandler_53] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[15/Sep/2017:10:17:00 +0000] [xtremweb.common.StreamIO_TCPHandler_54] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[15/Sep/2017:10:17:00 +0000] [xtremweb.common.StreamIO_TCPHandler_55] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[15/Sep/2017:10:17:00 +0000] [xtremweb.dispatcher.DBInterface_TCPHandler_56] WARN : javax.mail.internet.AddressException: Missing local name in string ``@DBADMINEMAIL@'' (Missing local name)
[15/Sep/2017:10:17:00 +0000] [xtremweb.common.StreamIO_TCPHandler_56] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[15/Sep/2017:10:17:00 +0000] [xtremweb.dispatcher.DBInterface_TCPHandler_57] WARN : javax.mail.internet.AddressException: Missing local name in string ``@DBADMINEMAIL@'' (Missing local name)
[15/Sep/2017:10:17:00 +0000] [xtremweb.common.StreamIO_TCPHandler_57] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[15/Sep/2017:10:17:00 +0000] [xtremweb.dispatcher.TCPHandler_TCPHandler_58] ERROR : Can't write result
[15/Sep/2017:10:17:00 +0000] [xtremweb.dispatcher.TCPHandler_TCPHandler_58] WARN : java.io.IOException: java.net.SocketException: Broken pipe (Write failed) (java.net.SocketException: Broken pipe (Write failed))
[15/Sep/2017:10:17:00 +0000] [xtremweb.common.StreamIO_TCPHandler_58] WARN : javax.net.ssl.SSLException: Connection has been shutdown: javax.net.ssl.SSLException: java.net.SocketException: Broken pipe (Write failed) (javax.net.ssl.SSLException: java.net.SocketException: Broken pipe (Write failed))
[15/Sep/2017:10:17:06 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-224_224] WARN : 224 : getIdRpc a ete synchronise ! null
[15/Sep/2017:10:17:06 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-224_224] WARN : 224 : getIdRpc a ete synchronise ! GET
[15/Sep/2017:10:17:06 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-224_224] WARN : 224 : getIdRpc a ete synchronise ! GET
[15/Sep/2017:10:17:06 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-231_231] WARN : 231 : getIdRpc a ete synchronise ! null
[15/Sep/2017:10:17:06 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-231_231] WARN : 231 : getIdRpc a ete synchronise ! GET
[15/Sep/2017:10:17:06 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-231_231] WARN : 231 : getIdRpc a ete synchronise ! GET
[15/Sep/2017:10:17:06 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-228_228] WARN : 228 : getIdRpc a ete synchronise ! null
[15/Sep/2017:10:17:06 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-228_228] WARN : 228 : getIdRpc a ete synchronise ! GET
[15/Sep/2017:10:17:06 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-228_228] WARN : 228 : getIdRpc a ete synchronise ! GET
[15/Sep/2017:10:17:06 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-230_230] WARN : 230 : getIdRpc a ete synchronise ! null
[15/Sep/2017:10:17:06 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-230_230] WARN : 230 : getIdRpc a ete synchronise ! DOWNLOADDATA
[15/Sep/2017:10:17:06 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-230_230] WARN : 230 : getIdRpc a ete synchronise ! DOWNLOADDATA
[15/Sep/2017:10:17:45 +0000] [xtremweb.dispatcher.TCPHandler_TCPHandler_59] ERROR : Can't write result
[15/Sep/2017:10:17:45 +0000] [xtremweb.dispatcher.TCPHandler_TCPHandler_59] WARN : java.io.IOException: java.net.SocketException: Broken pipe (Write failed) (java.net.SocketException: Broken pipe (Write failed))
[15/Sep/2017:10:17:45 +0000] [xtremweb.common.StreamIO_TCPHandler_59] WARN : javax.net.ssl.SSLException: Connection has been shutdown: javax.net.ssl.SSLException: java.net.SocketException: Broken pipe (Write failed) (javax.net.ssl.SSLException: java.net.SocketException: Broken pipe (Write failed))
[15/Sep/2017:10:18:30 +0000] [xtremweb.dispatcher.TCPHandler_TCPHandler_60] ERROR : Can't write result
[15/Sep/2017:10:18:30 +0000] [xtremweb.dispatcher.TCPHandler_TCPHandler_60] WARN : java.io.IOException: java.net.SocketException: Broken pipe (Write failed) (java.net.SocketException: Broken pipe (Write failed))
[15/Sep/2017:10:18:30 +0000] [xtremweb.common.StreamIO_TCPHandler_60] WARN : javax.net.ssl.SSLException: Connection has been shutdown: javax.net.ssl.SSLException: java.net.SocketException: Broken pipe (Write failed) (javax.net.ssl.SSLException: java.net.SocketException: Broken pipe (Write failed))
[15/Sep/2017:10:19:15 +0000] [xtremweb.dispatcher.TCPHandler_TCPHandler_61] ERROR : Can't write result
[15/Sep/2017:10:19:15 +0000] [xtremweb.dispatcher.TCPHandler_TCPHandler_61] WARN : java.io.IOException: java.net.SocketException: Broken pipe (Write failed) (java.net.SocketException: Broken pipe (Write failed))
[15/Sep/2017:10:19:15 +0000] [xtremweb.common.StreamIO_TCPHandler_61] WARN : javax.net.ssl.SSLException: Connection has been shutdown: javax.net.ssl.SSLException: java.net.SocketException: Broken pipe (Write failed) (javax.net.ssl.SSLException: java.net.SocketException: Broken pipe (Write failed))
[15/Sep/2017:10:20:00 +0000] [xtremweb.common.StreamIO_TCPHandler_62] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[15/Sep/2017:10:20:45 +0000] [xtremweb.common.StreamIO_TCPHandler_63] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[15/Sep/2017:10:21:27 +0000] [xtremweb.common.StreamIO_TCPHandler_64] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[15/Sep/2017:10:21:27 +0000] [xtremweb.common.StreamIO_TCPHandler_65] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[15/Sep/2017:10:21:30 +0000] [xtremweb.common.StreamIO_TCPHandler_66] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[15/Sep/2017:10:21:33 +0000] [xtremweb.communications.TCPServer_TCPServerNIO_15] WARN : java.net.SocketException: Socket closed (Socket closed)
</msg>
<status status="PASS" endtime="20170915 10:21:33.692" starttime="20170915 10:21:33.686"></status>
</kw>
<status status="PASS" endtime="20170915 10:21:33.692" starttime="20170915 10:21:33.686"></status>
</kw>
<status status="PASS" endtime="20170915 10:21:33.692" starttime="20170915 10:21:33.686"></status>
</kw>
<kw name="Stop XtremWeb Worker" library="XWWorker">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Stop XtremWeb Worker</arg>
</arguments>
<msg timestamp="20170915 10:21:33.693" level="INFO">Stop XtremWeb Worker</msg>
<status status="PASS" endtime="20170915 10:21:33.693" starttime="20170915 10:21:33.692"></status>
</kw>
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${WORKER_PROCESS}</arg>
</arguments>
<msg timestamp="20170915 10:21:33.694" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20170915 10:21:33.795" level="INFO">Process completed.</msg>
<status status="PASS" endtime="20170915 10:21:33.795" starttime="20170915 10:21:33.693"></status>
</kw>
<status status="PASS" endtime="20170915 10:21:33.795" starttime="20170915 10:21:33.692"></status>
</kw>
<status status="PASS" endtime="20170915 10:21:33.795" starttime="20170915 10:21:33.673"></status>
</kw>
<status status="PASS" endtime="20170915 10:21:33.796" starttime="20170915 10:21:33.548"></status>
</kw>
<doc>End-to-End test HelloWorld usecase Oracle+bridge+xtremweb</doc>
<status status="PASS" endtime="20170915 10:21:33.796" starttime="20170915 10:00:18.805"></status>
</suite>
<suite source="/home/vagrant/iexecdev/iexec-node/tests/rf/Tests/helloWorldSuiteOnTestRpc.robot" id="s1-s2" name="helloWorldSuiteOnTestRpc">
<kw type="setup" name="Start Oracle Bridge And Xtremweb">
<kw name="Prepare And Start XWtremWeb Server And XWtremWeb Worker" library="XWCommon">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${XW_FORCE_GIT_CLONE}' == 'true'</arg>
<arg>Git Clone XWtremWeb</arg>
</arguments>
<status status="PASS" endtime="20170915 10:21:33.830" starttime="20170915 10:21:33.830"></status>
</kw>
<kw name="Compile XWtremWeb" library="XWCommon">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd ${BUILD_PATH} &amp;&amp; make clean &amp;&amp; make</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${compile_result}</var>
</assign>
<msg timestamp="20170915 10:21:33.831" level="INFO">Starting process:
cd ./xtremweb-hep/build &amp;&amp; make clean &amp;&amp; make</msg>
<msg timestamp="20170915 10:21:33.835" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170915 10:22:01.490" level="INFO">Process completed.</msg>
<msg timestamp="20170915 10:22:01.491" level="INFO">${compile_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170915 10:22:01.491" starttime="20170915 10:21:33.831"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${compile_result.stderr}</arg>
</arguments>
<msg timestamp="20170915 10:22:01.492" level="INFO"></msg>
<status status="PASS" endtime="20170915 10:22:01.492" starttime="20170915 10:22:01.491"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${compile_result.stdout}</arg>
</arguments>
<msg timestamp="20170915 10:22:01.492" level="INFO">./build.sh -f build.xml clean 
Buildfile: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/build.xml

tstamp:
[echoproperties] #Ant properties
[echoproperties] #Fri Sep 15 10:21:34 UTC 2017
[echoproperties] v.branch=head
[echoproperties] v.build=201709151021
[echoproperties] v.major=10
[echoproperties] v.micro=0
[echoproperties] v.minor=6

version:

clean:
   [delete] Deleting: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/.build
   [delete] Deleting directory /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes
     [exec] make[1]: Entering directory `/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/natif'
     [exec] rm -f XWInterruptsImpl.h PortMapper.h XWUtilImpl.h XWTracerImpl.h
     [exec] make[1]: Leaving directory `/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/natif'
     [exec] mkdir: cannot create directory ‘../../build/classes/obj/’: No such file or directory

BUILD SUCCESSFUL
Total time: 1 second
./build.sh distrib 
Buildfile: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/build.xml

tstamp:
[echoproperties] #Ant properties
[echoproperties] #Fri Sep 15 10:21:35 UTC 2017
[echoproperties] v.branch=head
[echoproperties] v.build=201709151021
[echoproperties] v.major=10
[echoproperties] v.micro=0
[echoproperties] v.minor=6

version:

configure:
     [echo] 
     [echo]       ant version = Apache Ant(TM) version 1.8.4 compiled on May 22 2012
     [echo] 
     [echo]       os         = Linux
     [echo]       os.arch    = amd64
     [echo]       target     = Linux
     [echo]       xwarch     = amd64
     [echo]       xwsuffix   = linux-amd64
     [echo]       debug      = true
     [echo]       debuglevel = source,lines
     [echo] 
     [echo]         cross=${cross.prefix}
     [echo]         target java home =${cross.java.home}
     [echo]     	target           =Linux
     [echo]     	xwversion=10.6.0

templates:
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common

prepare:
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes/obj
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes/obj/linux-amd64
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes/jni
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes/xwclasses
     [echo] 
     [echo]       classpath=/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/test:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/JOpenId-1.08.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/JSON-java.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/MinML.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/activation.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/antlr.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/attic-all-0.3.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/bcpkix-jdk15on-151.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/bcprov-jdk15on-151.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/bcprov-jdk16-140.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/commons-codec-1.3.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/commons-fileupload-1.2.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/commons-httpclient-3.0.1.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/commons-io-1.3.2.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/commons-logging-1.1.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/ibis-util-2.1.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/jcert.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/jetty-http-9.3.8.v20160314.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/jetty-io-9.3.8.v20160314.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/jetty-server-9.3.8.v20160314.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/jetty-util-9.3.8.v20160314.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/jose4j-0.5.5.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/junit-4.10.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/log4j-1.2.17.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/mail.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/mysql-connector-java-5.1.6-bin.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/scribejava-apis-3.3.1-SNAPSHOT.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/scribejava-core-3.3.1-SNAPSHOT.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/servlet-api-3.1.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/slf4j-api-1.7.2.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/slf4j-log4j12-1.7.2.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/smartsockets-1.4.jar
     [echo]     

common:
    [javac] Compiling 277 source files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/XWTools.java:61: warning: [deprecation] HTTPOpenIdHandler in xtremweb.dispatcher has been deprecated
    [javac] import xtremweb.dispatcher.HTTPOpenIdHandler;
    [javac]                           ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/security/ACLConnect.java:36: warning: AclEntryImpl is internal proprietary API and may be removed in a future release
    [javac] import sun.security.acl.AclEntryImpl;
    [javac]                        ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/security/ACLConnect.java:37: warning: AclImpl is internal proprietary API and may be removed in a future release
    [javac] import sun.security.acl.AclImpl;
    [javac]                        ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/security/ACLConnect.java:38: warning: PermissionImpl is internal proprietary API and may be removed in a future release
    [javac] import sun.security.acl.PermissionImpl;
    [javac]                        ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/security/ACLConnect.java:39: warning: PrincipalImpl is internal proprietary API and may be removed in a future release
    [javac] import sun.security.acl.PrincipalImpl;
    [javac]                        ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/communications/CommClient.java:870: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] 		return version(new XMLRPCCommandVersion(newURI()));
    [javac] 		                   ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/communications/CommClient.java:881: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] 	public Version version(final XMLRPCCommandVersion command)
    [javac] 	                             ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/DataInterface.java:625: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/communications/IdRpc.java:89: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] 		public XMLRPCCommandVersion newCommand(final URI uri, final UserInterface client, final Table obj)
    [javac] 		       ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/communications/IdRpc.java:91: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] 			return new XMLRPCCommandVersion(uri, client);
    [javac] 			           ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/communications/XMLRPCCommand.java:614: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] 			return new XMLRPCCommandVersion(input);
    [javac] 			           ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/AppInterface.java:1446: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/UserInterface.java:577: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/GroupInterface.java:319: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/HostInterface.java:1212: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/SessionInterface.java:264: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/TaskInterface.java:441: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/TraceInterface.java:348: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/UserGroupInterface.java:365: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/WorkInterface.java:933: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/AppType.java:263: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/CPUType.java:223: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/DataType.java:265: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/Executable.java:294: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/JobInterface.java:409: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/OSType.java:243: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/Status.java:245: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/UserRightsType.java:243: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/XWTools.java:805: warning: [deprecation] HTTPOpenIdHandler in xtremweb.dispatcher has been deprecated
    [javac] 		final Logger logger = new Logger(HTTPOpenIdHandler.class);
    [javac] 		                                 ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/XWTools.java:817: warning: BASE64Encoder is internal proprietary API and may be removed in a future release
    [javac] 			out.println(new sun.misc.BASE64Encoder().encode(cert.getEncoded()));
    [javac] 			                        ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/communications/HTTPClient.java:238: warning: [deprecation] Protocol(String,SecureProtocolSocketFactory,int) in Protocol has been deprecated
    [javac] 				xwssl = new Protocol(uri.getScheme(), new AuthSSLProtocolSocketFactory(uri.getScheme(), keyStore,
    [javac] 				        ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/dispatcher/Dispatcher.java:216: warning: [deprecation] HTTPOpenIdHandler in xtremweb.dispatcher has been deprecated
    [javac] 				HTTPOpenIdHandler.setCACertificateEntries(getConfig().getKeyStore());
    [javac] 				^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/security/ACLConnect.java:65: warning: PermissionImpl is internal proprietary API and may be removed in a future release
    [javac] 	private final Permission _connect = new PermissionImpl("CONNECT");
    [javac] 	                                        ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/security/ACLConnect.java:66: warning: PrincipalImpl is internal proprietary API and may be removed in a future release
    [javac] 	private final Principal _owner = new PrincipalImpl("localhost");
    [javac] 	                                     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/security/ACLConnect.java:67: warning: AclImpl is internal proprietary API and may be removed in a future release
    [javac] 	private Acl _acl = new AclImpl(_owner, "ConnectACL");
    [javac] 	                       ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/security/ACLConnect.java:80: warning: AclImpl is internal proprietary API and may be removed in a future release
    [javac] 		_acl = new AclImpl(_owner, "ConnectACL");
    [javac] 		           ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/security/ACLConnect.java:81: warning: AclEntryImpl is internal proprietary API and may be removed in a future release
    [javac] 		final AclEntry allowConnections = new AclEntryImpl(_owner);
    [javac] 		                                      ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/security/ACLConnect.java:104: warning: PrincipalImpl is internal proprietary API and may be removed in a future release
    [javac] 			final Principal prince = new PrincipalImpl(regexp);
    [javac] 			                             ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/security/ACLConnect.java:105: warning: AclEntryImpl is internal proprietary API and may be removed in a future release
    [javac] 			final AclEntry entry = new AclEntryImpl(prince);
    [javac] 			                           ^
    [javac] Note: Some input files use unchecked or unsafe operations.
    [javac] Note: Recompile with -Xlint:unchecked for details.
    [javac] 39 warnings
    [javac] Creating empty /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes/database/package-info.class

obj:

iface:

communications:
    [javac] Compiling 60 source files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/communications/IdRpc.java:89: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] 		public XMLRPCCommandVersion newCommand(final URI uri, final UserInterface client, final Table obj)
    [javac] 		       ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/communications/IdRpc.java:91: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] 			return new XMLRPCCommandVersion(uri, client);
    [javac] 			           ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/communications/XMLRPCCommand.java:614: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] 			return new XMLRPCCommandVersion(input);
    [javac] 			           ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/communications/CommClient.java:870: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] 		return version(new XMLRPCCommandVersion(newURI()));
    [javac] 		                   ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/communications/CommClient.java:881: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] 	public Version version(final XMLRPCCommandVersion command)
    [javac] 	                             ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/communications/HTTPClient.java:238: warning: [deprecation] Protocol(String,SecureProtocolSocketFactory,int) in Protocol has been deprecated
    [javac] 				xwssl = new Protocol(uri.getScheme(), new AuthSSLProtocolSocketFactory(uri.getScheme(), keyStore,
    [javac] 				        ^
    [javac] Note: Some input files use unchecked or unsafe operations.
    [javac] Note: Recompile with -Xlint:unchecked for details.
    [javac] 6 warnings

services:
    [javac] Compiling 7 source files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes

archdep:
    [javac] Compiling 20 source files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes

upgrade:

worker:
    [javac] Compiling 42 source files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes
    [javac] Note: Some input files use unchecked or unsafe operations.
    [javac] Note: Recompile with -Xlint:unchecked for details.

dispatcher:
    [javac] Compiling 14 source files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/dispatcher/Dispatcher.java:216: warning: [deprecation] HTTPOpenIdHandler in xtremweb.dispatcher has been deprecated
    [javac] 				HTTPOpenIdHandler.setCACertificateEntries(getConfig().getKeyStore());
    [javac] 				^
    [javac] Note: Some input files use unchecked or unsafe operations.
    [javac] Note: Recompile with -Xlint:unchecked for details.
    [javac] 1 warning

worker.manifest:

jni:
     [copy] Copying 10 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/natif
     [exec] mkdir: cannot create directory ‘../../build/classes/obj/linux-amd64’: File exists
     [exec] make[1]: Entering directory `/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/natif'
     [exec] gcc -c  -fPIC -g -Wall -I'/usr/lib/jvm/java-8-openjdk-amd64/include/linux' -fPIC -I'/usr/lib/jvm/java-8-openjdk-amd64/include' -o ../../build/classes/obj/linux-amd64/XWUtilUnix.o XWUtilUnix.c
     [exec] gcc -shared  -fPIC  -L'/usr/lib/jvm/java-8-openjdk-amd64/lib' -o ../../build/classes/obj/linux-amd64/XWUtil.jni ../../build/classes/obj/linux-amd64/XWUtilUnix.o 
     [exec] cp ../../build/classes/obj/linux-amd64/XWUtil.jni ../../build/classes/jni/XWUtil.jni.10.6.0.linux-amd64
     [exec] gcc -c  -fPIC -g -Wall -I'/usr/lib/jvm/java-8-openjdk-amd64/include/linux' -fPIC -I'/usr/lib/jvm/java-8-openjdk-amd64/include' -o ../../build/classes/obj/linux-amd64/XWTracerUnixlib.o XWTracerUnixlib.c
     [exec] XWTracerUnixlib.c: In function ‘processCpustate’:
     [exec] XWTracerUnixlib.c:194:19: warning: variable ‘relative_jiffies’ set but not used [-Wunused-but-set-variable]
     [exec]      idle_jiffies, relative_jiffies, absolute_jiffies;
     [exec]                    ^
     [exec] XWTracerUnixlib.c:191:49: warning: variable ‘cpu_idle’ set but not used [-Wunused-but-set-variable]
     [exec]    static double cpu_user, cpu_nice, cpu_system, cpu_idle;
     [exec]                                                  ^
     [exec] XWTracerUnixlib.c:191:37: warning: variable ‘cpu_system’ set but not used [-Wunused-but-set-variable]
     [exec]    static double cpu_user, cpu_nice, cpu_system, cpu_idle;
     [exec]                                      ^
     [exec] XWTracerUnixlib.c:191:27: warning: variable ‘cpu_nice’ set but not used [-Wunused-but-set-variable]
     [exec]    static double cpu_user, cpu_nice, cpu_system, cpu_idle;
     [exec]                            ^
     [exec] XWTracerUnixlib.c:191:17: warning: variable ‘cpu_user’ set but not used [-Wunused-but-set-variable]
     [exec]    static double cpu_user, cpu_nice, cpu_system, cpu_idle;
     [exec]                  ^
     [exec] XWTracerUnixlib.c: In function ‘writeState’:
     [exec] XWTracerUnixlib.c:589:7: warning: variable ‘test’ set but not used [-Wunused-but-set-variable]
     [exec]    int test;
     [exec]        ^
     [exec] XWTracerUnixlib.c:587:8: warning: variable ‘k’ set but not used [-Wunused-but-set-variable]
     [exec]    char k[1];
     [exec]         ^
     [exec] XWTracerUnixlib.c:584:9: warning: variable ‘c’ set but not used [-Wunused-but-set-variable]
     [exec]    char* c;
     [exec]          ^
     [exec] gcc -c  -fPIC -g -Wall -I'/usr/lib/jvm/java-8-openjdk-amd64/include/linux' -fPIC -I'/usr/lib/jvm/java-8-openjdk-amd64/include' -o ../../build/classes/obj/linux-amd64/XWTracerUnixImpl.o XWTracerUnixImpl.c
     [exec] gcc -shared  -fPIC  -L'/usr/lib/jvm/java-8-openjdk-amd64/lib' -o ../../build/classes/obj/linux-amd64/XwTracer.jni ../../build/classes/obj/linux-amd64/XWTracerUnixlib.o ../../build/classes/obj/linux-amd64/XWTracerUnixImpl.o 
     [exec] cp ../../build/classes/obj/linux-amd64/XwTracer.jni ../../build/classes/jni/XwTracer.jni.10.6.0.linux-amd64
     [exec] gcc -c  -fPIC -g -Wall -I'/usr/lib/jvm/java-8-openjdk-amd64/include/linux' -fPIC -I'/usr/lib/jvm/java-8-openjdk-amd64/include' -o ../../build/classes/obj/linux-amd64/PortMapper.o PortMapper.c
     [exec] PortMapper.c: In function ‘getport’:
     [exec] PortMapper.c:29:2: warning: implicit declaration of function ‘pmap_getport’ [-Wimplicit-function-declaration]
     [exec]   return pmap_getport (&amp;addr, prog, version, protocol);
     [exec]   ^
     [exec] gcc -shared  -fPIC  -L'/usr/lib/jvm/java-8-openjdk-amd64/lib' -o ../../build/classes/obj/linux-amd64/PortMapper.jni ../../build/classes/obj/linux-amd64/PortMapper.o 
     [exec] cp ../../build/classes/obj/linux-amd64/PortMapper.jni ../../build/classes/jni/PortMapper.jni.10.6.0.linux-amd64
     [exec] make[1]: Leaving directory `/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/natif'

Worker:
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes/data
     [copy] Copying 23 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes/data

tests:
    [javac] Compiling 50 source files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/test/xtremweb/communications/XMLRPCCommandVersionTest.java:29: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] import xtremweb.communications.XMLRPCCommandVersion;
    [javac]                               ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/test/xtremweb/communications/XMLRPCCommandVersionTest.java:47: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] 			setCmd(new XMLRPCCommandVersion());
    [javac] 			           ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/test/xtremweb/communications/XMLRPCCommandVersionTest.java:48: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] 			setCmd2(new XMLRPCCommandVersion());
    [javac] 			            ^
    [javac] Note: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/test/xtremweb/common/XMLHashtableTest.java uses unchecked or unsafe operations.
    [javac] Note: Recompile with -Xlint:unchecked for details.
    [javac] 3 warnings

client:

allservices:

Dispatcher:
     [echo]  
     [echo] 	JAR JAR JAR
     [echo] 	basedir="/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes"
     [echo] 	jarfile="/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/lib/xtremweb.jar"
     [echo] 	manifest="/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/misc/worker.manifest"
     [echo]       
      [jar] Building jar: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/lib/xtremweb.jar

rpcv:

all:

copylibs:

distrib:

BUILD SUCCESSFUL
Total time: 17 seconds
./build.sh -f install.xml install 
Buildfile: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/install.xml

tstamp:

version:

prepare:

configure:
     [echo] 
     [echo] user  login : ${xtremweb.admin.login} ${xtremweb.admin.password}
     [echo] admin login : ${xtremweb.admin.login} ${xtremweb.admin.password}
     [echo] DB su login :  
     [echo] ENGINE : ""
     [echo] launcher.url = http://nohost/
     [echo] system.user  = xwhep
     [echo] xwsuffix=LINUX-AMD64
     [echo] xwarch=AMD64
     [echo] target.os=Linux
     [echo] cross.prefix=${cross.prefix}
     [echo] cross.java.home=${cross.java.home}
     [echo] version=10.6.0

installConfig:
     [echo] 
     [echo]        ==&gt; version    = 10.6.0
     [echo]        ==&gt; dist.dir   = /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0
     [echo]        ==&gt; installDir = /opt/xwhep-10.6.0
     [echo]     

installFiles:
     [copy] Copying 98 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/doc
     [copy] Copying 17 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/docker
     [copy] Copying 31 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/lib
     [copy] Copying 31 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.server/installer/PckRoot/private/etc/xwhep.server/lib
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf
     [echo] 
     [echo]       xtremweb.admin.login=${xtremweb.admin.login}
     [echo]       xtremweb.admin.password=${xtremweb.admin.password}
     [echo]     
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf
     [echo] 
     [echo]       xtremweb.worker.login=${xtremweb.worker.login}
     [echo]       xtremweb.worker.password=${xtremweb.worker.password}
     [echo]     
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.worker/installer/PckRoot/private/etc/xwhep.worker/conf
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.worker/installer/PckRoot/Applications/xwhep.worker
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.worker/installer/PckRoot/private/etc/xwhep.worker/conf
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.vworker/installer/PckRoot/Applications/xwhep.vworker
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.vworker/installer/PckRoot/private/etc/xwhep.vworker/bin
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.client/installer/PckRoot/Applications/xwhep.client/conf
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.server/installer/PckRoot/private/etc/xwhep.server/conf
     [copy] Copying 98 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.server/installer/PckRoot/Applications/xwhep.server/doc
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.client/conf
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.client/innoSetup/client/conf
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/conf
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/innoSetup/worker/conf
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/conf
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/innoSetup/worker/conf
     [copy] Copying 2 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/lib
     [copy] Copying 2 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/innoSetup/worker/lib
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/innoSetup/worker/lib
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/innoSetup/worker/lib
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/innoSetup/worker/misc
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/innoSetup/worker/doc
     [copy] Copying 8 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/bin
     [copy] Copying 5 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/innoSetup/worker/bin
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/doc
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.server/conf
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.server/innoSetup/server/conf
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.server/conf
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.server/innoSetup/server/conf
     [copy] Copying 2 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.server/lib
     [copy] Copying 2 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.server/innoSetup/server/lib
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.server/innoSetup/server/misc
     [copy] Copying 2 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.server/innoSetup/server/bin

setupScripts:
     [copy] Copying 266 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/db-maintenance

installScripts:

createDownload:
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.worker/installer/PckRoot/private/etc/xwhep.worker/keystore
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.client/installer/PckRoot/Applications/xwhep.client/lib
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.client/installer/PckRoot/Applications/xwhep.client/lib
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.client/installer/PckRoot/Applications/xwhep.client/keystore
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.server/installer/PckRoot/private/etc/xwhep.server/keystore
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/db-maintenance
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/db-maintenance
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin
     [copy] Copying 98 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/doc/xwhep.client/doc
[jarbundler] Creating application bundle: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/xwhep.client.app
     [copy] Copying 5 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/xwhep.client.app
     [copy] Copying 20 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.worker
     [copy] Copying 17 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.vworker
     [copy] Copying 12 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.client
     [copy] Copying 19 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.server
     [copy] Copying 3 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/innoSetup
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker
     [copy] Copying 3 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.server/innoSetup
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.server
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.server.conf
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.server/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.server/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.server/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.server/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.server/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.server/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.server.conf/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.server.conf/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.server.conf/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.server.conf/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.server.conf/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.server.conf/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.bridgedgsg
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.bridgedgsg/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.bridgedgsg/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.bridgedgsg/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.bridgedgsg/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.bridgedgsg/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.bridgedgsg/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.client
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.client/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.client/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.client/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.client/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.client/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.client/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.worker
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.worker/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.worker/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.worker/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.worker/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.worker/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.worker/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.client/innoSetup/client/lib
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.client/innoSetup/client/lib
     [copy] Copying 11 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0
     [copy] Copying 6 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/apptest

ganglia:

install:
     [echo] 
     [echo]       Installation done
     [echo]     

BUILD SUCCESSFUL
Total time: 8 seconds</msg>
<status status="PASS" endtime="20170915 10:22:01.493" starttime="20170915 10:22:01.492"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${compile_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170915 10:22:01.493" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170915 10:22:01.493" starttime="20170915 10:22:01.493"></status>
</kw>
<kw name="Get Lines Containing String" library="String">
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<arguments>
<arg>${compile_result.stdout}</arg>
<arg>BUILD SUCCESSFUL</arg>
</arguments>
<assign>
<var>${extract_build_successful}</var>
</assign>
<msg timestamp="20170915 10:22:01.494" level="INFO">3 out of 486 lines matched</msg>
<msg timestamp="20170915 10:22:01.494" level="INFO">${extract_build_successful} = BUILD SUCCESSFUL
BUILD SUCCESSFUL
BUILD SUCCESSFUL</msg>
<status status="PASS" endtime="20170915 10:22:01.494" starttime="20170915 10:22:01.494"></status>
</kw>
<kw name="Get Line Count" library="String">
<doc>Returns and logs the number of lines in the given string.</doc>
<arguments>
<arg>${extract_build_successful}</arg>
</arguments>
<assign>
<var>${line_count_build_successful}</var>
</assign>
<msg timestamp="20170915 10:22:01.495" level="INFO">3 lines</msg>
<msg timestamp="20170915 10:22:01.495" level="INFO">${line_count_build_successful} = 3</msg>
<status status="PASS" endtime="20170915 10:22:01.495" starttime="20170915 10:22:01.494"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${line_count_build_successful}</arg>
<arg>3</arg>
</arguments>
<msg timestamp="20170915 10:22:01.495" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170915 10:22:01.495" starttime="20170915 10:22:01.495"></status>
</kw>
<status status="PASS" endtime="20170915 10:22:01.495" starttime="20170915 10:21:33.831"></status>
</kw>
<kw name="Install XWtremWeb" library="XWCommon">
<kw name="List Directories In Directory" library="OperatingSystem">
<doc>Wrapper for `List Directory` that returns only directories.</doc>
<arguments>
<arg>${DIST_PATH}</arg>
<arg>xwhep-*</arg>
<arg>absolute</arg>
</arguments>
<assign>
<var>@{list_directories_dist_path}</var>
</assign>
<msg timestamp="20170915 10:22:01.496" html="yes" level="INFO">Listing contents of directory '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist&lt;/a&gt;'.</msg>
<msg timestamp="20170915 10:22:01.496" level="INFO">1 directory:
/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0</msg>
<msg timestamp="20170915 10:22:01.496" level="INFO">@{list_directories_dist_path} = [ /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0 ]</msg>
<status status="PASS" endtime="20170915 10:22:01.496" starttime="20170915 10:22:01.496"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>@{list_directories_dist_path}[0]</arg>
</arguments>
<msg timestamp="20170915 10:22:01.497" level="INFO">/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0</msg>
<status status="PASS" endtime="20170915 10:22:01.497" starttime="20170915 10:22:01.497"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}</arg>
<arg>@{list_directories_dist_path}[0]</arg>
</arguments>
<msg timestamp="20170915 10:22:01.497" level="INFO">${DIST_XWHEP_PATH} = /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0</msg>
<status status="PASS" endtime="20170915 10:22:01.497" starttime="20170915 10:22:01.497"></status>
</kw>
<kw name="Directory Should Exist" library="OperatingSystem">
<doc>Fails unless the given path points to an existing directory.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}</arg>
</arguments>
<msg timestamp="20170915 10:22:01.498" html="yes" level="INFO">Directory '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0&lt;/a&gt;' exists.</msg>
<status status="PASS" endtime="20170915 10:22:01.498" starttime="20170915 10:22:01.497"></status>
</kw>
<kw name="Create XWCONFIGURE.VALUES FILE" library="XWCommon">
<arguments>
<arg>${DIST_XWHEP_PATH}</arg>
</arguments>
<kw name="Directory Should Exist" library="OperatingSystem">
<doc>Fails unless the given path points to an existing directory.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf</arg>
</arguments>
<msg timestamp="20170915 10:22:01.498" html="yes" level="INFO">Directory '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf&lt;/a&gt;' exists.</msg>
<status status="PASS" endtime="20170915 10:22:01.499" starttime="20170915 10:22:01.498"></status>
</kw>
<kw name="Remove File" library="OperatingSystem">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
</arguments>
<msg timestamp="20170915 10:22:01.499" html="yes" level="INFO">Removed file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170915 10:22:01.500" starttime="20170915 10:22:01.499"></status>
</kw>
<kw name="Create File" library="OperatingSystem">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
</arguments>
<msg timestamp="20170915 10:22:01.500" html="yes" level="INFO">Created file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170915 10:22:01.500" starttime="20170915 10:22:01.500"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>XWUSER='${XWCONFIGURE.VALUES.XWUSER}'\n</arg>
</arguments>
<msg timestamp="20170915 10:22:01.514" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170915 10:22:01.514" starttime="20170915 10:22:01.501"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>DBVENDOR='${XWCONFIGURE.VALUES.DBVENDOR}'\n</arg>
</arguments>
<msg timestamp="20170915 10:22:01.516" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170915 10:22:01.516" starttime="20170915 10:22:01.514"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>DBENGINE='${XWCONFIGURE.VALUES.DBENGINE}'\n</arg>
</arguments>
<msg timestamp="20170915 10:22:01.521" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170915 10:22:01.521" starttime="20170915 10:22:01.516"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>DBHOST='${XWCONFIGURE.VALUES.DBHOST}'\n</arg>
</arguments>
<msg timestamp="20170915 10:22:01.523" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170915 10:22:01.523" starttime="20170915 10:22:01.522"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>DBADMINLOGIN='${XWCONFIGURE.VALUES.DBADMINLOGIN}'\n</arg>
</arguments>
<msg timestamp="20170915 10:22:01.525" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170915 10:22:01.525" starttime="20170915 10:22:01.524"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>DBADMINPASSWORD='${XWCONFIGURE.VALUES.DBADMINPASSWORD}'\n</arg>
</arguments>
<msg timestamp="20170915 10:22:01.526" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170915 10:22:01.526" starttime="20170915 10:22:01.525"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>DBNAME='${XWCONFIGURE.VALUES.DBNAME}'\n</arg>
</arguments>
<msg timestamp="20170915 10:22:01.528" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170915 10:22:01.528" starttime="20170915 10:22:01.527"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>DBUSERLOGIN='${XWCONFIGURE.VALUES.DBUSERLOGIN}'\n</arg>
</arguments>
<msg timestamp="20170915 10:22:01.529" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170915 10:22:01.530" starttime="20170915 10:22:01.528"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>DBUSERPASSWORD='${XWCONFIGURE.VALUES.DBUSERPASSWORD}'\n</arg>
</arguments>
<msg timestamp="20170915 10:22:01.531" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170915 10:22:01.531" starttime="20170915 10:22:01.530"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>XWADMINLOGIN='${XWCONFIGURE.VALUES.XWADMINLOGIN}'\n</arg>
</arguments>
<msg timestamp="20170915 10:22:01.533" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170915 10:22:01.533" starttime="20170915 10:22:01.531"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>XWADMINPASSWORD='${XWCONFIGURE.VALUES.XWADMINPASSWORD}'\n</arg>
</arguments>
<msg timestamp="20170915 10:22:01.535" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170915 10:22:01.535" starttime="20170915 10:22:01.533"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>XWWORKERLOGIN='${XWCONFIGURE.VALUES.XWWORKERLOGIN}'\n</arg>
</arguments>
<msg timestamp="20170915 10:22:01.537" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170915 10:22:01.537" starttime="20170915 10:22:01.535"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>XWWORKERPASSWORD='${XWCONFIGURE.VALUES.XWWORKERPASSWORD}'\n</arg>
</arguments>
<msg timestamp="20170915 10:22:01.538" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170915 10:22:01.538" starttime="20170915 10:22:01.537"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>XWSERVER='${XWCONFIGURE.VALUES.XWSERVER}'\n</arg>
</arguments>
<msg timestamp="20170915 10:22:01.539" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170915 10:22:01.539" starttime="20170915 10:22:01.538"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>CERTCN='${XWCONFIGURE.VALUES.CERTCN}'\n</arg>
</arguments>
<msg timestamp="20170915 10:22:01.541" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170915 10:22:01.541" starttime="20170915 10:22:01.539"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>CERTOU='${XWCONFIGURE.VALUES.CERTOU}'\n</arg>
</arguments>
<msg timestamp="20170915 10:22:01.542" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170915 10:22:01.543" starttime="20170915 10:22:01.541"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>CERTO='${XWCONFIGURE.VALUES.CERTO}'\n</arg>
</arguments>
<msg timestamp="20170915 10:22:01.544" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170915 10:22:01.544" starttime="20170915 10:22:01.543"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>CERTL='${XWCONFIGURE.VALUES.CERTL}'\n</arg>
</arguments>
<msg timestamp="20170915 10:22:01.546" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170915 10:22:01.546" starttime="20170915 10:22:01.544"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>CERTC='${XWCONFIGURE.VALUES.CERTC}'\n</arg>
</arguments>
<msg timestamp="20170915 10:22:01.547" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170915 10:22:01.547" starttime="20170915 10:22:01.546"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>CERTC='${XWCONFIGURE.VALUES.CERTC}'\n</arg>
</arguments>
<msg timestamp="20170915 10:22:01.549" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170915 10:22:01.549" starttime="20170915 10:22:01.548"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>SSLKEYPASSPHRASE='${XWCONFIGURE.VALUES.SSLKEYPASSPHRASE}'\n</arg>
</arguments>
<msg timestamp="20170915 10:22:01.550" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170915 10:22:01.551" starttime="20170915 10:22:01.549"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>SSLKEYSERVERPASSWORD='${XWCONFIGURE.VALUES.SSLKEYSERVERPASSWORD}'\n</arg>
</arguments>
<msg timestamp="20170915 10:22:01.555" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170915 10:22:01.555" starttime="20170915 10:22:01.551"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>SSLKEYWORKERPASSWORD='${XWCONFIGURE.VALUES.SSLKEYWORKERPASSWORD}'\n</arg>
</arguments>
<msg timestamp="20170915 10:22:01.557" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170915 10:22:01.557" starttime="20170915 10:22:01.555"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>SSLKEYCLIENTPASSWORD='${XWCONFIGURE.VALUES.SSLKEYCLIENTPASSWORD}'\n</arg>
</arguments>
<msg timestamp="20170915 10:22:01.558" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170915 10:22:01.558" starttime="20170915 10:22:01.557"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>X509CERTDIR='${XWCONFIGURE.VALUES.X509CERTDIR}'\n</arg>
</arguments>
<msg timestamp="20170915 10:22:01.559" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170915 10:22:01.560" starttime="20170915 10:22:01.558"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>USERCERTDIR='${XWCONFIGURE.VALUES.USERCERTDIR}'\n</arg>
</arguments>
<msg timestamp="20170915 10:22:01.565" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170915 10:22:01.565" starttime="20170915 10:22:01.560"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>XWUPGRADEURL='${XWCONFIGURE.VALUES.XWUPGRADEURL}'\n</arg>
</arguments>
<msg timestamp="20170915 10:22:01.566" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170915 10:22:01.567" starttime="20170915 10:22:01.565"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>HTTPSPORT='${XWCONFIGURE.VALUES.HTTPSPORT}'\n</arg>
</arguments>
<msg timestamp="20170915 10:22:01.568" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170915 10:22:01.568" starttime="20170915 10:22:01.567"></status>
</kw>
<kw name="Log File" library="OperatingSystem">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
</arguments>
<msg timestamp="20170915 10:22:01.569" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<msg timestamp="20170915 10:22:01.569" level="INFO">XWUSER='root'
DBVENDOR='mysql'
DBENGINE='InnoDB'
DBHOST='localhost'
DBADMINLOGIN='root'
DBADMINPASSWORD='root'
DBNAME='xtremweb'
DBUSERLOGIN='xwuser'
DBUSERPASSWORD='xwuser'
XWADMINLOGIN='admin'
XWADMINPASSWORD='admin'
XWWORKERLOGIN='worker'
XWWORKERPASSWORD='worker'
XWSERVER='localhost'
CERTCN='localhost'
CERTOU='MrRobotFramework'
CERTO='MrRobotFramework'
CERTL='MrRobotFramework'
CERTC='fr'
CERTC='fr'
SSLKEYPASSPHRASE='MrRobotFramework'
SSLKEYSERVERPASSWORD='MrRobotFramework'
SSLKEYWORKERPASSWORD='MrRobotFramework'
SSLKEYCLIENTPASSWORD='MrRobotFramework'
X509CERTDIR='/tmp/castore'
USERCERTDIR=''
XWUPGRADEURL='http://localhost:8080/somewhere/xtremweb.jar'
HTTPSPORT='9443'
</msg>
<status status="PASS" endtime="20170915 10:22:01.569" starttime="20170915 10:22:01.568"></status>
</kw>
<status status="PASS" endtime="20170915 10:22:01.569" starttime="20170915 10:22:01.498"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd ${DIST_XWHEP_PATH} &amp;&amp; ./bin/xwconfigure --yes --nopkg --rmdb</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${install_result}</var>
</assign>
<msg timestamp="20170915 10:22:01.570" level="INFO">Starting process:
cd /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0 &amp;&amp; ./bin/xwconfigure --yes --nopkg --rmdb</msg>
<msg timestamp="20170915 10:22:01.573" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170915 10:22:23.232" level="INFO">Process completed.</msg>
<msg timestamp="20170915 10:22:23.232" level="INFO">${install_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170915 10:22:23.232" starttime="20170915 10:22:01.569"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${install_result.stdout}</arg>
</arguments>
<msg timestamp="20170915 10:22:23.233" level="INFO">
--------------------------------------------------
         XtremWeb-HEP 10.6.0 
         XWConfigurator

This script helps to configure an XtremWeb-HEP deployment 
--------------------------------------------------

This script aims to :
 - install a new database: Since 9.1. MySQL (http://www.mysql.com/) only is supported
 - creates electronic keys : 
   * server private key
   * client key store including server public key
   * worker key store including server public key
 - prepare installers
   * Win32 InnoSetup project (http://www.jrsoftware.org/isinfo.php)
   * Mac OS X Package Maker projects (http:/www.apple.com)
   * Linux RPM (http://www.rpm.org)
   * Linux Debian package (http://www.debian.org)

In order to complete configuration, several informations are needed :
 -1- MySQL administrator account (login and password)
     =&gt; If you don't know it, please ask your system administrator
 -1.1- Database server, if using MySQL
     =&gt; The name or IP address of your MySQL server
 -1.2- Database name
     =&gt; If you don't have a valid MySQL administrator account, you won't be able to perform this
     =&gt; In such a case, please ask your system administrator to create one new empty database for us
 -1.3- Database user (login and password), if using MySQL
     =&gt; This account must have insert/update/delete privileges to the previous database
     =&gt; This account will be used by the XW server to access database
     =&gt; If you don't have a valid MySQL administrator account, you won't be able to perform this
     =&gt; In such a case, please ask your system administrator to create one for you
 -2- Electronic key passphrase
     =&gt; This is free and up to you
 -3- Electronic key password for the server
     =&gt; This is free and up to you
 -4- Electronic key password for the worker
     =&gt; This is free and up to you
 -5- Electronic key password for the client
     =&gt; This is free and up to you

All informations are stored in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values
So that, you can stop this script when you want, and don't have to re-enter all informations

To reset any variable, edit or erase /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values

You should be aware that /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values stores some critical informations!!!

-----------------------------

DB vendor set to 'mysql'
DB engine set to 'InnoDB'
***********************
 Electronic keys found 
***********************
Upgrade URL is localhost : I guess this is for testing only...
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Can't download xtremweb.jar from 'http://localhost:8080/somewhere/xtremweb.jar'
You will have to ensure that xtremweb.jar can be downloaded from 'http://localhost:8080/somewhere/xtremweb.jar'
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

You entered :
**** Account to run the middleware : 
     USER                 = 'root'
**** Database configuration : 
     DBVENDOR             = 'mysql'
     DBENGINE             = 'InnoDB'
     DBHOST               = 'localhost'
     DBNAME               = 'xtremweb'
     DBADMINLOGIN         = 'root'
     DBADMINPASSWORD      = 'root'
     DBUSERLOGIN          = 'xwuser'
     DBUSERPASSWORD       = 'xwuser'
**** XtremWeb-HEP administrator client configuration : 
     XWADMINLOGIN         = 'admin'
     XWADMINPASSWORD      = 'admin'
**** XtremWeb-HEP public worker configuration : 
     XWWORKERLOGIN        = 'worker'
     XWWORKERPASSWORD     = 'worker'
**** XtremWeb-HEP server configuration : 
     XWSERVER             = 'localhost'
     XWUPGRADEURL         = 'http://localhost:8080/somewhere/xtremweb.jar'
**** CA certificates path : 
     X509CERTDIR          = '/tmp/castore'
**** Certificate configuration : 
     Keys found           = ''
     SSLKEYPASSPHRASE     = 'MrRobotFramework'
     SSLKEYCLIENTPASSWORD = 'MrRobotFramework'
     SSLKEYSERVERPASSWORD = 'MrRobotFramework'
     SSLKEYWORKERPASSWORD = 'MrRobotFramework'
     Common Name          = 'localhost'
     Organisation Unit    = 'MrRobotFramework'
     Organization Name    = 'MrRobotFramework'
     Locality Name        = 'MrRobotFramework'
     Country              = 'fr'

Database schema 'xtremweb' exists : DB reset forced
Resetting database schema 'xtremweb'
Preparing database script............Done
Preparing database schema 'xtremweb'
DB engine for 'xtremweb' is InnoDB :  Creating foreign keys for live tables ...
Creating DB triggers using xwhep-core-tables-create-triggers-for-data-coming-from-8.sql ...

Table "users"

Table "hosts"

Table "datas"

Table "works"

Table "tasks"

Table "apps"
Creating DB triggers using xwhep-core-tables-create-triggers-for-history-coming-from-8.sql ...

Table "users_history"

Table "hosts_history"

Table "datas_history"

Table "works_history"

Table "tasks_history"

Table "apps_history"
Create the SQL script for the creation of DB views in the current schema ...
Create the SQL script for the creation of DB users views in the current schema ...
Creating DB views using xwhep-core-tables-create-views-for-tables.sql ...
Creating DB views using xwhep-core-tables-create-users-views.sql ...
Creating DB views using xwhep-core-tables-create-views-for-sessions-and-groups.sql ...
Creating DB views using xwhep-core-tables-create-views-for-relationships.sql ...
Creating DB views using xwhep-core-tables-create-views-for-offering-and-billing.sql ...
Creating DB views using xwhep-core-tables-create-views-hosts-matching-works.sql ...
Granting access to DB schema 'xtremweb' ...
Database schema 'xtremweb' : checking compliance to '05.7.3'
Database schema 'xtremweb' : is compliant to 05.7.3
Database schema 'xtremweb' : checking compliance to '05.8.0'
Database schema 'xtremweb' : is compliant to 05.8.0
Database schema 'xtremweb' : checking compliance to '06.0.1'
Database schema 'xtremweb' : is compliant to 06.0.1
Database schema 'xtremweb' : checking compliance to '07.0.0'
Database schema 'xtremweb' : is compliant to 07.0.0
Database schema 'xtremweb' : checking compliance to '07.2.0'
Database schema 'xtremweb' : is compliant to 07.2.0
Database schema 'xtremweb' : checking compliance to '07.4.1'
Database schema 'xtremweb' : is compliant to 07.4.1
Database schema 'xtremweb' : checking compliance to '07.5.0'
Database schema 'xtremweb' : is compliant to 07.5.0
Database schema 'xtremweb' : checking compliance to '08.0.0'
Database schema 'xtremweb' : is compliant to 08.0.0
Database schema 'xtremweb' : checking compliance to '08.2.0'
Database schema 'xtremweb' : is compliant to 08.2.0
Database schema 'xtremweb' : checking compliance to '08.3.1'
Database schema 'xtremweb' : is compliant to 08.3.1
Database schema 'xtremweb' : checking compliance to '09.1.0'
Database schema 'xtremweb' : is compliant to 09.1.0
Database schema 'xtremweb' : checking compliance to '10.0.0'
Database schema 'xtremweb' : is compliant to 10.0.0
Database schema 'xtremweb' : checking compliance to '10.2.0'
Database schema 'xtremweb' : is compliant to 10.2.0
Database schema 'xtremweb' : checking compliance to '10.6.0'
Database schema 'xtremweb' : is not compliant to '10.6.0'; updating
10.6.0 is compliant, dont worry
10.6.0 is compliant, dont worry
Database schema 'xtremweb' : updated to '10.6.0'
Set current version to '10.6.0'
Setting the account to run the middleware to 'root'..........................Done
Preparing server configuration file '/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf'................. Done
Preparing xtremweb.ganglia...Done
Generating script to manage keystores (/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/xwhepgenkeys)  Done
Generating script to manage OpenId server certificates (/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/xwhepupdateopenidcerts) Done
Preparing worker configuration file '/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf'.... Done
Copying worker configuration file /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.worker/installer/PckRoot/private/etc/xwhep.worker/conf/xtremweb.worker.conf
Copying worker configuration file /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/innoSetup/worker/conf/xtremweb.worker.conf
Done
Preparing client configuration file '/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.client.conf'...Done
Copying client configuration file /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.client.conf to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.client/innoSetup/client/conf/xtremweb.client.conf
****************************************************************************************
Done
*******************
Keystores unmodified
*******************

Preparing  client package to '/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/xwhep.client'.....Done
Copying client configuration file /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/xwhep.client/10.6.0/conf/xtremweb.client.conf.template to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.client/installer/PckRoot/Applications/xwhep.client/conf/xtremweb.client.conf
 Done

Preparing server RPM package to '/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.server'.... Done

Preparing server configuration RPM package to '/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.server.conf'.... Done

Preparing server Debian package
Server Debian package ready

Preparing server configuration Debian package
Server Configuration Debian package ready
Preparing DG to SG bridge RPM package to '/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.bridgedgsg'............ Done

Preparing bridgedgsg Debian package
Bridgedgsg Debian package ready
Preparing SG to DG bridge RPM package to '/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.bridgesgdg'........ Done

Preparing bridgesgdg Debian package
Bridgesgdg Debian package ready
Preparing client RPM package to '/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.client'.... Done

Preparing client Debian package
Client Debian package ready

Preparing worker RPM package to '/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.worker'.... Done

Preparing worker Debian package
Worker Debian package ready

&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;
! Everything is now prepared !
&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;

Available packages :
  * server
   - RedHat RPM  in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.server
   - Debian DPKG in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.server
   - Apple  PKG  in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.server

  * Desktop Grid to Service Grid bridge
   - RedHat RPM  in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.bridgedgsg
   - Debian DPKG in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.bridgedgsg

  * Service Grid to Desktop Grid bridge
   - RedHat RPM  in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.bridgesgdg
   - Debian DPKG in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.bridgesgdg

  * client
   - RedHat RPM  in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.client
   - Debian DPKG in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.client
   - Apple  PKG  in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.client
   - Windows installer  in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.client/innoSetup
                        (http://www.innosetup.com/isinfo.php)

  * worker
   - RedHat  RPM        in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.worker
   - Debian  DPKG       in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.worker
   - Apple   PKG        in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.worker
   - Windows installer  in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/innoSetup
                        (http://www.innosetup.com/isinfo.php)

  * client
   - Zip file (platform independant)  in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/xwhep-client-10.6.0.zip


You can manually :
  * start the server
   - /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/xwhep.server console
  * start a worker
   - /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/xwhep.worker console
  * as soon as your server is started you can use the client
   - /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/xwworkers : if you have started a worker, it is in the list
   - /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/xwusers
   - /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/xwapps
   - etc.

As soon as everything is ok you should :
  * install you server using its packages
  * deploy worker over your own volunteer PCs using its packages
  * install your worker packages on any of your web sites
    if you wish to enable anonymous volunteer power
  * install your client ZIP file on any of your web sites
    to allow registered users to use the platform

That's all folks
</msg>
<status status="PASS" endtime="20170915 10:22:23.234" starttime="20170915 10:22:23.233"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${install_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170915 10:22:23.234" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170915 10:22:23.234" starttime="20170915 10:22:23.234"></status>
</kw>
<kw name="Get Lines Containing String" library="String">
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<arguments>
<arg>${install_result.stdout}</arg>
<arg>That's all folks</arg>
</arguments>
<assign>
<var>${install_result_successful}</var>
</assign>
<msg timestamp="20170915 10:22:23.235" level="INFO">1 out of 273 lines matched</msg>
<msg timestamp="20170915 10:22:23.235" level="INFO">${install_result_successful} = That's all folks</msg>
<status status="PASS" endtime="20170915 10:22:23.235" starttime="20170915 10:22:23.235"></status>
</kw>
<kw name="Get Line Count" library="String">
<doc>Returns and logs the number of lines in the given string.</doc>
<arguments>
<arg>${install_result_successful}</arg>
</arguments>
<assign>
<var>${line_install_result_successful}</var>
</assign>
<msg timestamp="20170915 10:22:23.235" level="INFO">1 lines</msg>
<msg timestamp="20170915 10:22:23.236" level="INFO">${line_install_result_successful} = 1</msg>
<status status="PASS" endtime="20170915 10:22:23.236" starttime="20170915 10:22:23.235"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${line_install_result_successful}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20170915 10:22:23.236" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170915 10:22:23.236" starttime="20170915 10:22:23.236"></status>
</kw>
<status status="PASS" endtime="20170915 10:22:23.236" starttime="20170915 10:22:01.495"></status>
</kw>
<kw name="Start XWtremWeb Server And XWtremWeb Worker" library="XWCommon">
<kw name="Ping XWtremWeb Database" library="XWServer">
<kw name="Xtremweb Tables Must Exist" library="MySql">
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170915 10:22:23.238" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170915 10:22:23.239" starttime="20170915 10:22:23.237"></status>
</kw>
<status status="PASS" endtime="20170915 10:22:23.239" starttime="20170915 10:22:23.237"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>appTypes</arg>
</arguments>
<msg timestamp="20170915 10:22:23.239" level="INFO">Executing : Table Must Exist  |  appTypes </msg>
<msg timestamp="20170915 10:22:23.240" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='appTypes' </msg>
<status status="PASS" endtime="20170915 10:22:23.241" starttime="20170915 10:22:23.239"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps</arg>
</arguments>
<msg timestamp="20170915 10:22:23.241" level="INFO">Executing : Table Must Exist  |  apps </msg>
<msg timestamp="20170915 10:22:23.241" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='apps' </msg>
<status status="PASS" endtime="20170915 10:22:23.242" starttime="20170915 10:22:23.241"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps_history</arg>
</arguments>
<msg timestamp="20170915 10:22:23.243" level="INFO">Executing : Table Must Exist  |  apps_history </msg>
<msg timestamp="20170915 10:22:23.243" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='apps_history' </msg>
<status status="PASS" endtime="20170915 10:22:23.243" starttime="20170915 10:22:23.242"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>cpuTypes</arg>
</arguments>
<msg timestamp="20170915 10:22:23.244" level="INFO">Executing : Table Must Exist  |  cpuTypes </msg>
<msg timestamp="20170915 10:22:23.244" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='cpuTypes' </msg>
<status status="PASS" endtime="20170915 10:22:23.245" starttime="20170915 10:22:23.244"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>dataTypes</arg>
</arguments>
<msg timestamp="20170915 10:22:23.245" level="INFO">Executing : Table Must Exist  |  dataTypes </msg>
<msg timestamp="20170915 10:22:23.245" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='dataTypes' </msg>
<status status="PASS" endtime="20170915 10:22:23.246" starttime="20170915 10:22:23.245"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas</arg>
</arguments>
<msg timestamp="20170915 10:22:23.246" level="INFO">Executing : Table Must Exist  |  datas </msg>
<msg timestamp="20170915 10:22:23.246" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='datas' </msg>
<status status="PASS" endtime="20170915 10:22:23.247" starttime="20170915 10:22:23.246"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas_history</arg>
</arguments>
<msg timestamp="20170915 10:22:23.247" level="INFO">Executing : Table Must Exist  |  datas_history </msg>
<msg timestamp="20170915 10:22:23.247" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='datas_history' </msg>
<status status="PASS" endtime="20170915 10:22:23.249" starttime="20170915 10:22:23.247"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables</arg>
</arguments>
<msg timestamp="20170915 10:22:23.249" level="INFO">Executing : Table Must Exist  |  executables </msg>
<msg timestamp="20170915 10:22:23.249" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='executables' </msg>
<status status="PASS" endtime="20170915 10:22:23.250" starttime="20170915 10:22:23.249"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables_history</arg>
</arguments>
<msg timestamp="20170915 10:22:23.250" level="INFO">Executing : Table Must Exist  |  executables_history </msg>
<msg timestamp="20170915 10:22:23.250" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='executables_history' </msg>
<status status="PASS" endtime="20170915 10:22:23.251" starttime="20170915 10:22:23.250"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups</arg>
</arguments>
<msg timestamp="20170915 10:22:23.251" level="INFO">Executing : Table Must Exist  |  groups </msg>
<msg timestamp="20170915 10:22:23.251" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='groups' </msg>
<status status="PASS" endtime="20170915 10:22:23.252" starttime="20170915 10:22:23.251"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups_history</arg>
</arguments>
<msg timestamp="20170915 10:22:23.252" level="INFO">Executing : Table Must Exist  |  groups_history </msg>
<msg timestamp="20170915 10:22:23.252" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='groups_history' </msg>
<status status="PASS" endtime="20170915 10:22:23.253" starttime="20170915 10:22:23.252"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts</arg>
</arguments>
<msg timestamp="20170915 10:22:23.253" level="INFO">Executing : Table Must Exist  |  hosts </msg>
<msg timestamp="20170915 10:22:23.253" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='hosts' </msg>
<status status="PASS" endtime="20170915 10:22:23.254" starttime="20170915 10:22:23.253"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts_history</arg>
</arguments>
<msg timestamp="20170915 10:22:23.254" level="INFO">Executing : Table Must Exist  |  hosts_history </msg>
<msg timestamp="20170915 10:22:23.254" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='hosts_history' </msg>
<status status="PASS" endtime="20170915 10:22:23.255" starttime="20170915 10:22:23.254"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships</arg>
</arguments>
<msg timestamp="20170915 10:22:23.255" level="INFO">Executing : Table Must Exist  |  memberships </msg>
<msg timestamp="20170915 10:22:23.255" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='memberships' </msg>
<status status="PASS" endtime="20170915 10:22:23.256" starttime="20170915 10:22:23.255"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships_history</arg>
</arguments>
<msg timestamp="20170915 10:22:23.256" level="INFO">Executing : Table Must Exist  |  memberships_history </msg>
<msg timestamp="20170915 10:22:23.256" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='memberships_history' </msg>
<status status="PASS" endtime="20170915 10:22:23.257" starttime="20170915 10:22:23.256"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>oses</arg>
</arguments>
<msg timestamp="20170915 10:22:23.257" level="INFO">Executing : Table Must Exist  |  oses </msg>
<msg timestamp="20170915 10:22:23.257" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='oses' </msg>
<status status="PASS" endtime="20170915 10:22:23.258" starttime="20170915 10:22:23.257"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>packageTypes</arg>
</arguments>
<msg timestamp="20170915 10:22:23.258" level="INFO">Executing : Table Must Exist  |  packageTypes </msg>
<msg timestamp="20170915 10:22:23.258" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='packageTypes' </msg>
<status status="PASS" endtime="20170915 10:22:23.259" starttime="20170915 10:22:23.258"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions</arg>
</arguments>
<msg timestamp="20170915 10:22:23.259" level="INFO">Executing : Table Must Exist  |  sessions </msg>
<msg timestamp="20170915 10:22:23.259" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sessions' </msg>
<status status="PASS" endtime="20170915 10:22:23.260" starttime="20170915 10:22:23.259"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions_history</arg>
</arguments>
<msg timestamp="20170915 10:22:23.260" level="INFO">Executing : Table Must Exist  |  sessions_history </msg>
<msg timestamp="20170915 10:22:23.260" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sessions_history' </msg>
<status status="PASS" endtime="20170915 10:22:23.261" starttime="20170915 10:22:23.260"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes</arg>
</arguments>
<msg timestamp="20170915 10:22:23.261" level="INFO">Executing : Table Must Exist  |  sharedAppTypes </msg>
<msg timestamp="20170915 10:22:23.261" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedAppTypes' </msg>
<status status="PASS" endtime="20170915 10:22:23.262" starttime="20170915 10:22:23.261"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes_history</arg>
</arguments>
<msg timestamp="20170915 10:22:23.262" level="INFO">Executing : Table Must Exist  |  sharedAppTypes_history </msg>
<msg timestamp="20170915 10:22:23.262" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedAppTypes_history' </msg>
<status status="PASS" endtime="20170915 10:22:23.263" starttime="20170915 10:22:23.262"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes</arg>
</arguments>
<msg timestamp="20170915 10:22:23.263" level="INFO">Executing : Table Must Exist  |  sharedPackageTypes </msg>
<msg timestamp="20170915 10:22:23.263" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedPackageTypes' </msg>
<status status="PASS" endtime="20170915 10:22:23.264" starttime="20170915 10:22:23.263"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes_history</arg>
</arguments>
<msg timestamp="20170915 10:22:23.264" level="INFO">Executing : Table Must Exist  |  sharedPackageTypes_history </msg>
<msg timestamp="20170915 10:22:23.264" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedPackageTypes_history' </msg>
<status status="PASS" endtime="20170915 10:22:23.265" starttime="20170915 10:22:23.264"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>statuses</arg>
</arguments>
<msg timestamp="20170915 10:22:23.265" level="INFO">Executing : Table Must Exist  |  statuses </msg>
<msg timestamp="20170915 10:22:23.265" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='statuses' </msg>
<status status="PASS" endtime="20170915 10:22:23.266" starttime="20170915 10:22:23.265"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks</arg>
</arguments>
<msg timestamp="20170915 10:22:23.266" level="INFO">Executing : Table Must Exist  |  tasks </msg>
<msg timestamp="20170915 10:22:23.266" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='tasks' </msg>
<status status="PASS" endtime="20170915 10:22:23.267" starttime="20170915 10:22:23.266"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks_history</arg>
</arguments>
<msg timestamp="20170915 10:22:23.267" level="INFO">Executing : Table Must Exist  |  tasks_history </msg>
<msg timestamp="20170915 10:22:23.267" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='tasks_history' </msg>
<status status="PASS" endtime="20170915 10:22:23.268" starttime="20170915 10:22:23.267"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces</arg>
</arguments>
<msg timestamp="20170915 10:22:23.268" level="INFO">Executing : Table Must Exist  |  traces </msg>
<msg timestamp="20170915 10:22:23.268" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='traces' </msg>
<status status="PASS" endtime="20170915 10:22:23.269" starttime="20170915 10:22:23.268"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces_history</arg>
</arguments>
<msg timestamp="20170915 10:22:23.269" level="INFO">Executing : Table Must Exist  |  traces_history </msg>
<msg timestamp="20170915 10:22:23.269" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='traces_history' </msg>
<status status="PASS" endtime="20170915 10:22:23.270" starttime="20170915 10:22:23.269"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>userRights</arg>
</arguments>
<msg timestamp="20170915 10:22:23.270" level="INFO">Executing : Table Must Exist  |  userRights </msg>
<msg timestamp="20170915 10:22:23.270" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='userRights' </msg>
<status status="PASS" endtime="20170915 10:22:23.271" starttime="20170915 10:22:23.270"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups</arg>
</arguments>
<msg timestamp="20170915 10:22:23.271" level="INFO">Executing : Table Must Exist  |  usergroups </msg>
<msg timestamp="20170915 10:22:23.271" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='usergroups' </msg>
<status status="PASS" endtime="20170915 10:22:23.272" starttime="20170915 10:22:23.271"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups_history</arg>
</arguments>
<msg timestamp="20170915 10:22:23.272" level="INFO">Executing : Table Must Exist  |  usergroups_history </msg>
<msg timestamp="20170915 10:22:23.272" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='usergroups_history' </msg>
<status status="PASS" endtime="20170915 10:22:23.273" starttime="20170915 10:22:23.272"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users</arg>
</arguments>
<msg timestamp="20170915 10:22:23.273" level="INFO">Executing : Table Must Exist  |  users </msg>
<msg timestamp="20170915 10:22:23.273" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='users' </msg>
<status status="PASS" endtime="20170915 10:22:23.274" starttime="20170915 10:22:23.273"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users_history</arg>
</arguments>
<msg timestamp="20170915 10:22:23.274" level="INFO">Executing : Table Must Exist  |  users_history </msg>
<msg timestamp="20170915 10:22:23.274" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='users_history' </msg>
<status status="PASS" endtime="20170915 10:22:23.275" starttime="20170915 10:22:23.274"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>version</arg>
</arguments>
<msg timestamp="20170915 10:22:23.275" level="INFO">Executing : Table Must Exist  |  version </msg>
<msg timestamp="20170915 10:22:23.275" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='version' </msg>
<status status="PASS" endtime="20170915 10:22:23.276" starttime="20170915 10:22:23.275"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>versions</arg>
</arguments>
<msg timestamp="20170915 10:22:23.276" level="INFO">Executing : Table Must Exist  |  versions </msg>
<msg timestamp="20170915 10:22:23.276" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='versions' </msg>
<status status="PASS" endtime="20170915 10:22:23.277" starttime="20170915 10:22:23.276"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps</arg>
</arguments>
<msg timestamp="20170915 10:22:23.278" level="INFO">Executing : Table Must Exist  |  view_apps </msg>
<msg timestamp="20170915 10:22:23.278" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps' </msg>
<status status="PASS" endtime="20170915 10:22:23.279" starttime="20170915 10:22:23.277"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps_for_offering</arg>
</arguments>
<msg timestamp="20170915 10:22:23.279" level="INFO">Executing : Table Must Exist  |  view_apps_for_offering </msg>
<msg timestamp="20170915 10:22:23.279" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps_for_offering' </msg>
<status status="PASS" endtime="20170915 10:22:23.280" starttime="20170915 10:22:23.279"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps_for_offering_with_file_sizes</arg>
</arguments>
<msg timestamp="20170915 10:22:23.280" level="INFO">Executing : Table Must Exist  |  view_apps_for_offering_with_file_sizes </msg>
<msg timestamp="20170915 10:22:23.280" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps_for_offering_with_file_sizes' </msg>
<status status="PASS" endtime="20170915 10:22:23.281" starttime="20170915 10:22:23.280"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_datas</arg>
</arguments>
<msg timestamp="20170915 10:22:23.281" level="INFO">Executing : Table Must Exist  |  view_datas </msg>
<msg timestamp="20170915 10:22:23.281" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_datas' </msg>
<status status="PASS" endtime="20170915 10:22:23.282" starttime="20170915 10:22:23.281"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_executables</arg>
</arguments>
<msg timestamp="20170915 10:22:23.282" level="INFO">Executing : Table Must Exist  |  view_executables </msg>
<msg timestamp="20170915 10:22:23.282" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_executables' </msg>
<status status="PASS" endtime="20170915 10:22:23.283" starttime="20170915 10:22:23.282"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_groups</arg>
</arguments>
<msg timestamp="20170915 10:22:23.283" level="INFO">Executing : Table Must Exist  |  view_groups </msg>
<msg timestamp="20170915 10:22:23.283" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_groups' </msg>
<status status="PASS" endtime="20170915 10:22:23.284" starttime="20170915 10:22:23.283"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts</arg>
</arguments>
<msg timestamp="20170915 10:22:23.285" level="INFO">Executing : Table Must Exist  |  view_hosts </msg>
<msg timestamp="20170915 10:22:23.285" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts' </msg>
<status status="PASS" endtime="20170915 10:22:23.285" starttime="20170915 10:22:23.284"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_deployable</arg>
</arguments>
<msg timestamp="20170915 10:22:23.285" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_deployable </msg>
<msg timestamp="20170915 10:22:23.285" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_deployable' </msg>
<status status="PASS" endtime="20170915 10:22:23.286" starttime="20170915 10:22:23.285"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_deployable_and_shared</arg>
</arguments>
<msg timestamp="20170915 10:22:23.286" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_deployable_and_shared </msg>
<msg timestamp="20170915 10:22:23.287" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_deployable_and_shared' </msg>
<status status="PASS" endtime="20170915 10:22:23.287" starttime="20170915 10:22:23.286"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_shared</arg>
</arguments>
<msg timestamp="20170915 10:22:23.288" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_shared </msg>
<msg timestamp="20170915 10:22:23.288" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_shared' </msg>
<status status="PASS" endtime="20170915 10:22:23.289" starttime="20170915 10:22:23.288"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_sessions</arg>
</arguments>
<msg timestamp="20170915 10:22:23.289" level="INFO">Executing : Table Must Exist  |  view_sessions </msg>
<msg timestamp="20170915 10:22:23.289" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_sessions' </msg>
<status status="PASS" endtime="20170915 10:22:23.290" starttime="20170915 10:22:23.289"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_tasks</arg>
</arguments>
<msg timestamp="20170915 10:22:23.290" level="INFO">Executing : Table Must Exist  |  view_tasks </msg>
<msg timestamp="20170915 10:22:23.290" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_tasks' </msg>
<status status="PASS" endtime="20170915 10:22:23.291" starttime="20170915 10:22:23.290"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_traces</arg>
</arguments>
<msg timestamp="20170915 10:22:23.291" level="INFO">Executing : Table Must Exist  |  view_traces </msg>
<msg timestamp="20170915 10:22:23.291" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_traces' </msg>
<status status="PASS" endtime="20170915 10:22:23.292" starttime="20170915 10:22:23.291"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_usergroups</arg>
</arguments>
<msg timestamp="20170915 10:22:23.292" level="INFO">Executing : Table Must Exist  |  view_usergroups </msg>
<msg timestamp="20170915 10:22:23.292" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_usergroups' </msg>
<status status="PASS" endtime="20170915 10:22:23.293" starttime="20170915 10:22:23.292"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users</arg>
</arguments>
<msg timestamp="20170915 10:22:23.293" level="INFO">Executing : Table Must Exist  |  view_users </msg>
<msg timestamp="20170915 10:22:23.293" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users' </msg>
<status status="PASS" endtime="20170915 10:22:23.294" starttime="20170915 10:22:23.293"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_apps</arg>
</arguments>
<msg timestamp="20170915 10:22:23.294" level="INFO">Executing : Table Must Exist  |  view_users_apps </msg>
<msg timestamp="20170915 10:22:23.294" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_apps' </msg>
<status status="PASS" endtime="20170915 10:22:23.295" starttime="20170915 10:22:23.294"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_datas</arg>
</arguments>
<msg timestamp="20170915 10:22:23.295" level="INFO">Executing : Table Must Exist  |  view_users_datas </msg>
<msg timestamp="20170915 10:22:23.295" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_datas' </msg>
<status status="PASS" endtime="20170915 10:22:23.296" starttime="20170915 10:22:23.295"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_groups</arg>
</arguments>
<msg timestamp="20170915 10:22:23.296" level="INFO">Executing : Table Must Exist  |  view_users_groups </msg>
<msg timestamp="20170915 10:22:23.296" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_groups' </msg>
<status status="PASS" endtime="20170915 10:22:23.297" starttime="20170915 10:22:23.296"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_hosts</arg>
</arguments>
<msg timestamp="20170915 10:22:23.297" level="INFO">Executing : Table Must Exist  |  view_users_hosts </msg>
<msg timestamp="20170915 10:22:23.297" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_hosts' </msg>
<status status="PASS" endtime="20170915 10:22:23.298" starttime="20170915 10:22:23.297"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_sessions</arg>
</arguments>
<msg timestamp="20170915 10:22:23.298" level="INFO">Executing : Table Must Exist  |  view_users_sessions </msg>
<msg timestamp="20170915 10:22:23.298" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_sessions' </msg>
<status status="PASS" endtime="20170915 10:22:23.299" starttime="20170915 10:22:23.298"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_tasks</arg>
</arguments>
<msg timestamp="20170915 10:22:23.299" level="INFO">Executing : Table Must Exist  |  view_users_tasks </msg>
<msg timestamp="20170915 10:22:23.299" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_tasks' </msg>
<status status="PASS" endtime="20170915 10:22:23.300" starttime="20170915 10:22:23.299"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_traces</arg>
</arguments>
<msg timestamp="20170915 10:22:23.300" level="INFO">Executing : Table Must Exist  |  view_users_traces </msg>
<msg timestamp="20170915 10:22:23.300" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_traces' </msg>
<status status="PASS" endtime="20170915 10:22:23.301" starttime="20170915 10:22:23.300"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_usergroups</arg>
</arguments>
<msg timestamp="20170915 10:22:23.301" level="INFO">Executing : Table Must Exist  |  view_users_usergroups </msg>
<msg timestamp="20170915 10:22:23.301" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_usergroups' </msg>
<status status="PASS" endtime="20170915 10:22:23.302" starttime="20170915 10:22:23.301"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_users</arg>
</arguments>
<msg timestamp="20170915 10:22:23.302" level="INFO">Executing : Table Must Exist  |  view_users_users </msg>
<msg timestamp="20170915 10:22:23.302" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_users' </msg>
<status status="PASS" endtime="20170915 10:22:23.303" starttime="20170915 10:22:23.302"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_works</arg>
</arguments>
<msg timestamp="20170915 10:22:23.303" level="INFO">Executing : Table Must Exist  |  view_users_works </msg>
<msg timestamp="20170915 10:22:23.303" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_works' </msg>
<status status="PASS" endtime="20170915 10:22:23.304" starttime="20170915 10:22:23.303"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works</arg>
</arguments>
<msg timestamp="20170915 10:22:23.304" level="INFO">Executing : Table Must Exist  |  view_works </msg>
<msg timestamp="20170915 10:22:23.304" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works' </msg>
<status status="PASS" endtime="20170915 10:22:23.305" starttime="20170915 10:22:23.304"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works_for_billing</arg>
</arguments>
<msg timestamp="20170915 10:22:23.305" level="INFO">Executing : Table Must Exist  |  view_works_for_billing </msg>
<msg timestamp="20170915 10:22:23.305" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works_for_billing' </msg>
<status status="PASS" endtime="20170915 10:22:23.306" starttime="20170915 10:22:23.305"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works_for_billing_with_file_sizes</arg>
</arguments>
<msg timestamp="20170915 10:22:23.306" level="INFO">Executing : Table Must Exist  |  view_works_for_billing_with_file_sizes </msg>
<msg timestamp="20170915 10:22:23.306" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works_for_billing_with_file_sizes' </msg>
<status status="PASS" endtime="20170915 10:22:23.307" starttime="20170915 10:22:23.306"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works</arg>
</arguments>
<msg timestamp="20170915 10:22:23.307" level="INFO">Executing : Table Must Exist  |  works </msg>
<msg timestamp="20170915 10:22:23.307" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='works' </msg>
<status status="PASS" endtime="20170915 10:22:23.308" starttime="20170915 10:22:23.307"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works_history</arg>
</arguments>
<msg timestamp="20170915 10:22:23.308" level="INFO">Executing : Table Must Exist  |  works_history </msg>
<msg timestamp="20170915 10:22:23.308" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='works_history' </msg>
<status status="PASS" endtime="20170915 10:22:23.309" starttime="20170915 10:22:23.308"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170915 10:22:23.309" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170915 10:22:23.309" starttime="20170915 10:22:23.309"></status>
</kw>
<status status="PASS" endtime="20170915 10:22:23.310" starttime="20170915 10:22:23.309"></status>
</kw>
<status status="PASS" endtime="20170915 10:22:23.310" starttime="20170915 10:22:23.237"></status>
</kw>
<status status="PASS" endtime="20170915 10:22:23.310" starttime="20170915 10:22:23.237"></status>
</kw>
<kw name="Start XtremWeb Server" library="XWServer">
<arguments>
<arg>${DIST_XWHEP_PATH}</arg>
</arguments>
<kw name="File Should Exist" library="OperatingSystem">
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xtremweb.server.conf</arg>
</arguments>
<msg timestamp="20170915 10:22:23.311" html="yes" level="INFO">File '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf&lt;/a&gt;' exists.</msg>
<status status="PASS" endtime="20170915 10:22:23.311" starttime="20170915 10:22:23.310"></status>
</kw>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xtremweb.server.conf</arg>
</arguments>
<assign>
<var>${config_content}</var>
</assign>
<msg timestamp="20170915 10:22:23.311" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf&lt;/a&gt;'.</msg>
<msg timestamp="20170915 10:22:23.312" level="INFO">${config_content} = #
# Copyrights     : CNRS
# Author         : Oleg Lodygensky
# Acknowledgment : XtremWeb-HEP is based on XtremWeb 1.8.0 by inria : http://www.xtremweb.net/
# Web            : http://www.xtremweb-hep.o...</msg>
<status status="PASS" endtime="20170915 10:22:23.312" starttime="20170915 10:22:23.311"></status>
</kw>
<kw name="Remove String Using Regexp" library="String">
<doc>Removes ``patterns`` from the given ``string``.</doc>
<arguments>
<arg>${config_content}</arg>
<arg>LAUNCHERURL=${XWCONFIGURE.VALUES.XWUPGRADEURL}</arg>
</arguments>
<assign>
<var>${config_content_filtered}</var>
</assign>
<msg timestamp="20170915 10:22:23.313" level="INFO">${config_content_filtered} = #
# Copyrights     : CNRS
# Author         : Oleg Lodygensky
# Acknowledgment : XtremWeb-HEP is based on XtremWeb 1.8.0 by inria : http://www.xtremweb.net/
# Web            : http://www.xtremweb-hep.o...</msg>
<status status="PASS" endtime="20170915 10:22:23.313" starttime="20170915 10:22:23.312"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${config_content_filtered}</arg>
<arg>\## HTTPSPORT=443</arg>
<arg>HTTPSPORT=${XWCONFIGURE.VALUES.HTTPSPORT}</arg>
</arguments>
<assign>
<var>${config_content_filtered}</var>
</assign>
<msg timestamp="20170915 10:22:23.314" level="INFO">${config_content_filtered} = #
# Copyrights     : CNRS
# Author         : Oleg Lodygensky
# Acknowledgment : XtremWeb-HEP is based on XtremWeb 1.8.0 by inria : http://www.xtremweb.net/
# Web            : http://www.xtremweb-hep.o...</msg>
<status status="PASS" endtime="20170915 10:22:23.314" starttime="20170915 10:22:23.313"></status>
</kw>
<kw name="Create File" library="OperatingSystem">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xtremweb.server.conf</arg>
<arg>content=${config_content_filtered}</arg>
</arguments>
<msg timestamp="20170915 10:22:23.316" html="yes" level="INFO">Created file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170915 10:22:23.316" starttime="20170915 10:22:23.314"></status>
</kw>
<kw name="Remove File" library="OperatingSystem">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<msg timestamp="20170915 10:22:23.318" html="yes" level="INFO">Removed file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170915 10:22:23.318" starttime="20170915 10:22:23.316"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/bin/xtremweb.server console</arg>
<arg>shell=yes</arg>
<arg>stderr=STDOUT</arg>
<arg>stdout=${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<assign>
<var>${created_process}</var>
</assign>
<msg timestamp="20170915 10:22:23.319" level="INFO">Starting process:
/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/xtremweb.server console</msg>
<msg timestamp="20170915 10:22:23.322" level="INFO">${created_process} = 30</msg>
<status status="PASS" endtime="20170915 10:22:23.322" starttime="20170915 10:22:23.318"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SERVER_PROCESS}</arg>
<arg>${created_process}</arg>
</arguments>
<msg timestamp="20170915 10:22:23.323" level="INFO">${SERVER_PROCESS} = 30</msg>
<status status="PASS" endtime="20170915 10:22:23.323" starttime="20170915 10:22:23.322"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2 min</arg>
<arg>5 sec</arg>
<arg>Check XtremWeb Server Start From Log</arg>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<kw name="Check XtremWeb Server Start From Log" library="XWServer">
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<kw name="Log XtremWeb Process Log File" library="XWServer">
<kw name="Log File" library="OperatingSystem">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<msg timestamp="20170915 10:22:23.325" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170915 10:22:23.325" level="INFO"></msg>
<status status="PASS" endtime="20170915 10:22:23.325" starttime="20170915 10:22:23.324"></status>
</kw>
<status status="PASS" endtime="20170915 10:22:23.326" starttime="20170915 10:22:23.324"></status>
</kw>
<kw name="Grep File" library="OperatingSystem">
<doc>Returns the lines of the specified file that match the ``pattern``.</doc>
<arguments>
<arg>${log}</arg>
<arg>listening on port : ${XWCONFIGURE.VALUES.HTTPSPORT}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20170915 10:22:23.326" html="yes" level="INFO">Reading file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170915 10:22:23.327" level="INFO">0 out of 0 lines matched</msg>
<msg timestamp="20170915 10:22:23.327" level="INFO">${ret} = </msg>
<status status="PASS" endtime="20170915 10:22:23.327" starttime="20170915 10:22:23.326"></status>
</kw>
<kw name="Get Line Count" library="String">
<doc>Returns and logs the number of lines in the given string.</doc>
<arguments>
<arg>${ret}</arg>
</arguments>
<assign>
<var>${line_count}</var>
</assign>
<msg timestamp="20170915 10:22:23.327" level="INFO">0 lines</msg>
<msg timestamp="20170915 10:22:23.327" level="INFO">${line_count} = 0</msg>
<status status="PASS" endtime="20170915 10:22:23.327" starttime="20170915 10:22:23.327"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${line_count}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20170915 10:22:23.328" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20170915 10:22:23.328" level="FAIL">0 != 2</msg>
<status status="FAIL" endtime="20170915 10:22:23.328" starttime="20170915 10:22:23.328"></status>
</kw>
<status status="FAIL" endtime="20170915 10:22:23.328" starttime="20170915 10:22:23.324"></status>
</kw>
<kw name="Check XtremWeb Server Start From Log" library="XWServer">
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<kw name="Log XtremWeb Process Log File" library="XWServer">
<kw name="Log File" library="OperatingSystem">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<msg timestamp="20170915 10:22:28.330" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170915 10:22:28.340" level="INFO">Fri Sep 15 10:22:23 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : checking launch url
Fri Sep 15 10:22:23 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] WARNING : no launcher URL defined
Fri Sep 15 10:22:23 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : launching SmartSockets hub
[15/Sep/2017:10:22:25 +0000] [main_1] ERROR : setRole : role redefined ?! (was SERVER)
[15/Sep/2017:10:22:26 +0000] [xtremweb.database.DBConnPoolThread_main_1] INFO : Connection to database jdbc:mysql://localhost/xtremweb is ok, 70 created
[15/Sep/2017:10:22:26 +0000] [xtremweb.dispatcher.DBInterface_main_1] WARN : Can't retrieve any app
[15/Sep/2017:10:22:26 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't create ProxyValidator
[15/Sep/2017:10:22:26 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.io.FileNotFoundException: /tmp/castore (No such file or directory) (/tmp/castore (No such file or directory))
[15/Sep/2017:10:22:26 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't add CA certificates to keystore
[15/Sep/2017:10:22:26 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.lang.NullPointerException (null)
[15/Sep/2017:10:22:26 +0000] [xtremweb.dispatcher.HashTaskSet_TaskSet_14] INFO : TaskSet started (300000)
[15/Sep/2017:10:22:27 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : still waiting task set...
[15/Sep/2017:10:22:27 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : UDP server not started
[15/Sep/2017:10:22:27 +0000] [xtremweb.communications.TCPServer_TCPServerNIO_15] INFO : started, listening on port : 4321
log4j:WARN No appenders could be found for logger (org.eclipse.jetty.util.log).
log4j:WARN Please initialize the log4j system properly.
log4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.
[15/Sep/2017:10:22:27 +0000] [xtremweb.communications.HTTPServer_main_1] INFO : started, listening on port : 9443
[15/Sep/2017:10:22:27 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : FACEBOOK : java.net.MalformedURLException: no protocol: 
[15/Sep/2017:10:22:27 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : GOOGLE : java.net.MalformedURLException: no protocol: 
[15/Sep/2017:10:22:27 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : TWITTER : java.net.MalformedURLException: no protocol: 
[15/Sep/2017:10:22:27 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : YAHOO : java.net.MalformedURLException: no protocol: 
[15/Sep/2017:10:22:27 +0000] [main_1] ERROR : Can't add new entry to keystore
[15/Sep/2017:10:22:27 +0000] [main_1] WARN : javax.net.ssl.SSLHandshakeException: sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target (sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target)
[15/Sep/2017:10:22:27 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : XWHEP Dispatcher(10.6.0-head) started [Fri Sep 15 10:22:27 UTC 2017]
[15/Sep/2017:10:22:27 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : DB vendor  = mysql
[15/Sep/2017:10:22:27 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : mileStone  = 
[15/Sep/2017:10:22:27 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Time out   = 15000
[15/Sep/2017:10:22:27 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Disk opt'd = true
[15/Sep/2017:10:22:27 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Net  opt'd = true
[15/Sep/2017:10:22:27 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : NIO        = true
XWHEP Dispatcher started  Fri Sep 15 10:22:27 UTC 2017
Name             : vagrant-ubuntu-trusty-64
Version          : 10.6.0-head
Identity         : 
XWRole           : SERVER
Started on       : Fri Sep 15 10:22:25 UTC 2017
Scheduler        : xtremweb.dispatcher.MatchingScheduler
SmartSockets hub : 172.28.128.3/172.17.0.1/10.0.2.15-4329#32.dd.5e.3a.cd.7c.00.00.a4.54.02.42.02.6c.0f.e2~vagrant
Server HTTP      : true
Alive            : 300
Alive time out   : 900
Polling time out : 15000
Optimize zip     : true
Optimize network : true
NIO              : true
Comm layer       : xtremweb.communications.TCPClient
Socket time out  : 60000
Socket retries   : 50
Max connections  : 200
TCP port         : 4321
UDP port         : 4323
HTPP  port       : 80
HTPPS port       : 9443
Sun RPC interposition port : 4328
Sandbox path : /usr/bin/lxc
Sandbox launch args : 
Host &lt;host&gt;&lt;uid&gt;6b82fefe-1f63-4bbe-b4f3-08d7f5c194fd&lt;/uid&gt;&lt;accessrights&gt;0x755&lt;/accessrights&gt;&lt;name&gt;vagrant-ubuntu-trusty-64&lt;/name&gt;&lt;cpuload&gt;50&lt;/cpuload&gt;&lt;natedipaddr&gt;10.0.2.15&lt;/natedipaddr&gt;&lt;ipaddr&gt;10.0.2.15&lt;/ipaddr&gt;&lt;hwaddr&gt;&lt;/hwaddr&gt;&lt;timezone&gt;Etc/UTC&lt;/timezone&gt;&lt;os&gt;LINUX&lt;/os&gt;&lt;osversion&gt;3.13.0-129-generic&lt;/osversion&gt;&lt;javaversion&gt;1.8.0_141&lt;/javaversion&gt;&lt;javadatamodel&gt;64&lt;/javadatamodel&gt;&lt;cputype&gt;AMD64&lt;/cputype&gt;&lt;cpunb&gt;1&lt;/cpunb&gt;&lt;cpumodel&gt;unknown&lt;/cpumodel&gt;&lt;cpuspeed&gt;0&lt;/cpuspeed&gt;&lt;totalmem&gt;0&lt;/totalmem&gt;&lt;totalswap&gt;0&lt;/totalswap&gt;&lt;totaltmp&gt;40284&lt;/totaltmp&gt;&lt;freetmp&gt;37258&lt;/freetmp&gt;&lt;project&gt;&lt;/project&gt;&lt;active&gt;true&lt;/active&gt;&lt;incomingconnections&gt;false&lt;/incomingconnections&gt;&lt;available&gt;false&lt;/available&gt;&lt;pilotjob&gt;false&lt;/pilotjob&gt;&lt;sgid&gt;&lt;/sgid&gt;&lt;timeout&gt;15000&lt;/timeout&gt;&lt;traces&gt;false&lt;/traces&gt;&lt;acceptbin&gt;false&lt;/acceptbin&gt;&lt;version&gt;10.6.0-head&lt;/version&gt;&lt;/host&gt;
[15/Sep/2017:10:22:27 +0000] [xtremweb.communications.HTTPServer_HTTPServer_218] INFO : started, listening on port : 9443
</msg>
<status status="PASS" endtime="20170915 10:22:28.340" starttime="20170915 10:22:28.330"></status>
</kw>
<status status="PASS" endtime="20170915 10:22:28.340" starttime="20170915 10:22:28.330"></status>
</kw>
<kw name="Grep File" library="OperatingSystem">
<doc>Returns the lines of the specified file that match the ``pattern``.</doc>
<arguments>
<arg>${log}</arg>
<arg>listening on port : ${XWCONFIGURE.VALUES.HTTPSPORT}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20170915 10:22:28.341" html="yes" level="INFO">Reading file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170915 10:22:28.342" level="INFO">2 out of 59 lines matched</msg>
<msg timestamp="20170915 10:22:28.342" level="INFO">${ret} = [15/Sep/2017:10:22:27 +0000] [xtremweb.communications.HTTPServer_main_1] INFO : started, listening on port : 9443
[15/Sep/2017:10:22:27 +0000] [xtremweb.communications.HTTPServer_HTTPServer_218] INFO ...</msg>
<status status="PASS" endtime="20170915 10:22:28.342" starttime="20170915 10:22:28.340"></status>
</kw>
<kw name="Get Line Count" library="String">
<doc>Returns and logs the number of lines in the given string.</doc>
<arguments>
<arg>${ret}</arg>
</arguments>
<assign>
<var>${line_count}</var>
</assign>
<msg timestamp="20170915 10:22:28.342" level="INFO">2 lines</msg>
<msg timestamp="20170915 10:22:28.343" level="INFO">${line_count} = 2</msg>
<status status="PASS" endtime="20170915 10:22:28.343" starttime="20170915 10:22:28.342"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${line_count}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20170915 10:22:28.343" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170915 10:22:28.343" starttime="20170915 10:22:28.343"></status>
</kw>
<status status="PASS" endtime="20170915 10:22:28.343" starttime="20170915 10:22:28.329"></status>
</kw>
<status status="PASS" endtime="20170915 10:22:28.343" starttime="20170915 10:22:23.323"></status>
</kw>
<kw name="Log XtremWeb Process Log File" library="XWServer">
<kw name="Log File" library="OperatingSystem">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<msg timestamp="20170915 10:22:28.344" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170915 10:22:28.344" level="INFO">Fri Sep 15 10:22:23 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : checking launch url
Fri Sep 15 10:22:23 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] WARNING : no launcher URL defined
Fri Sep 15 10:22:23 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : launching SmartSockets hub
[15/Sep/2017:10:22:25 +0000] [main_1] ERROR : setRole : role redefined ?! (was SERVER)
[15/Sep/2017:10:22:26 +0000] [xtremweb.database.DBConnPoolThread_main_1] INFO : Connection to database jdbc:mysql://localhost/xtremweb is ok, 70 created
[15/Sep/2017:10:22:26 +0000] [xtremweb.dispatcher.DBInterface_main_1] WARN : Can't retrieve any app
[15/Sep/2017:10:22:26 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't create ProxyValidator
[15/Sep/2017:10:22:26 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.io.FileNotFoundException: /tmp/castore (No such file or directory) (/tmp/castore (No such file or directory))
[15/Sep/2017:10:22:26 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't add CA certificates to keystore
[15/Sep/2017:10:22:26 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.lang.NullPointerException (null)
[15/Sep/2017:10:22:26 +0000] [xtremweb.dispatcher.HashTaskSet_TaskSet_14] INFO : TaskSet started (300000)
[15/Sep/2017:10:22:27 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : still waiting task set...
[15/Sep/2017:10:22:27 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : UDP server not started
[15/Sep/2017:10:22:27 +0000] [xtremweb.communications.TCPServer_TCPServerNIO_15] INFO : started, listening on port : 4321
log4j:WARN No appenders could be found for logger (org.eclipse.jetty.util.log).
log4j:WARN Please initialize the log4j system properly.
log4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.
[15/Sep/2017:10:22:27 +0000] [xtremweb.communications.HTTPServer_main_1] INFO : started, listening on port : 9443
[15/Sep/2017:10:22:27 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : FACEBOOK : java.net.MalformedURLException: no protocol: 
[15/Sep/2017:10:22:27 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : GOOGLE : java.net.MalformedURLException: no protocol: 
[15/Sep/2017:10:22:27 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : TWITTER : java.net.MalformedURLException: no protocol: 
[15/Sep/2017:10:22:27 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : YAHOO : java.net.MalformedURLException: no protocol: 
[15/Sep/2017:10:22:27 +0000] [main_1] ERROR : Can't add new entry to keystore
[15/Sep/2017:10:22:27 +0000] [main_1] WARN : javax.net.ssl.SSLHandshakeException: sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target (sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target)
[15/Sep/2017:10:22:27 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : XWHEP Dispatcher(10.6.0-head) started [Fri Sep 15 10:22:27 UTC 2017]
[15/Sep/2017:10:22:27 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : DB vendor  = mysql
[15/Sep/2017:10:22:27 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : mileStone  = 
[15/Sep/2017:10:22:27 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Time out   = 15000
[15/Sep/2017:10:22:27 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Disk opt'd = true
[15/Sep/2017:10:22:27 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Net  opt'd = true
[15/Sep/2017:10:22:27 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : NIO        = true
XWHEP Dispatcher started  Fri Sep 15 10:22:27 UTC 2017
Name             : vagrant-ubuntu-trusty-64
Version          : 10.6.0-head
Identity         : 
XWRole           : SERVER
Started on       : Fri Sep 15 10:22:25 UTC 2017
Scheduler        : xtremweb.dispatcher.MatchingScheduler
SmartSockets hub : 172.28.128.3/172.17.0.1/10.0.2.15-4329#32.dd.5e.3a.cd.7c.00.00.a4.54.02.42.02.6c.0f.e2~vagrant
Server HTTP      : true
Alive            : 300
Alive time out   : 900
Polling time out : 15000
Optimize zip     : true
Optimize network : true
NIO              : true
Comm layer       : xtremweb.communications.TCPClient
Socket time out  : 60000
Socket retries   : 50
Max connections  : 200
TCP port         : 4321
UDP port         : 4323
HTPP  port       : 80
HTPPS port       : 9443
Sun RPC interposition port : 4328
Sandbox path : /usr/bin/lxc
Sandbox launch args : 
Host &lt;host&gt;&lt;uid&gt;6b82fefe-1f63-4bbe-b4f3-08d7f5c194fd&lt;/uid&gt;&lt;accessrights&gt;0x755&lt;/accessrights&gt;&lt;name&gt;vagrant-ubuntu-trusty-64&lt;/name&gt;&lt;cpuload&gt;50&lt;/cpuload&gt;&lt;natedipaddr&gt;10.0.2.15&lt;/natedipaddr&gt;&lt;ipaddr&gt;10.0.2.15&lt;/ipaddr&gt;&lt;hwaddr&gt;&lt;/hwaddr&gt;&lt;timezone&gt;Etc/UTC&lt;/timezone&gt;&lt;os&gt;LINUX&lt;/os&gt;&lt;osversion&gt;3.13.0-129-generic&lt;/osversion&gt;&lt;javaversion&gt;1.8.0_141&lt;/javaversion&gt;&lt;javadatamodel&gt;64&lt;/javadatamodel&gt;&lt;cputype&gt;AMD64&lt;/cputype&gt;&lt;cpunb&gt;1&lt;/cpunb&gt;&lt;cpumodel&gt;unknown&lt;/cpumodel&gt;&lt;cpuspeed&gt;0&lt;/cpuspeed&gt;&lt;totalmem&gt;0&lt;/totalmem&gt;&lt;totalswap&gt;0&lt;/totalswap&gt;&lt;totaltmp&gt;40284&lt;/totaltmp&gt;&lt;freetmp&gt;37258&lt;/freetmp&gt;&lt;project&gt;&lt;/project&gt;&lt;active&gt;true&lt;/active&gt;&lt;incomingconnections&gt;false&lt;/incomingconnections&gt;&lt;available&gt;false&lt;/available&gt;&lt;pilotjob&gt;false&lt;/pilotjob&gt;&lt;sgid&gt;&lt;/sgid&gt;&lt;timeout&gt;15000&lt;/timeout&gt;&lt;traces&gt;false&lt;/traces&gt;&lt;acceptbin&gt;false&lt;/acceptbin&gt;&lt;version&gt;10.6.0-head&lt;/version&gt;&lt;/host&gt;
[15/Sep/2017:10:22:27 +0000] [xtremweb.communications.HTTPServer_HTTPServer_218] INFO : started, listening on port : 9443
</msg>
<status status="PASS" endtime="20170915 10:22:28.345" starttime="20170915 10:22:28.344"></status>
</kw>
<status status="PASS" endtime="20170915 10:22:28.345" starttime="20170915 10:22:28.343"></status>
</kw>
<status status="PASS" endtime="20170915 10:22:28.345" starttime="20170915 10:22:23.310"></status>
</kw>
<kw name="Start XtremWeb Worker" library="XWWorker">
<arguments>
<arg>${DIST_XWHEP_PATH}</arg>
</arguments>
<kw name="File Should Exist" library="OperatingSystem">
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xtremweb.worker.conf</arg>
</arguments>
<msg timestamp="20170915 10:22:28.346" html="yes" level="INFO">File '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf&lt;/a&gt;' exists.</msg>
<status status="PASS" endtime="20170915 10:22:28.346" starttime="20170915 10:22:28.346"></status>
</kw>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xtremweb.worker.conf</arg>
</arguments>
<assign>
<var>${config_content}</var>
</assign>
<msg timestamp="20170915 10:22:28.347" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf&lt;/a&gt;'.</msg>
<msg timestamp="20170915 10:22:28.347" level="INFO">${config_content} = #
# Copyrights     : CNRS
# Author         : Oleg Lodygensky
# Acknowledgment : XtremWeb-HEP is based on XtremWeb 1.8.0 by inria : http://www.xtremweb.net/
# Web            : http://www.xtremweb-hep.o...</msg>
<status status="PASS" endtime="20170915 10:22:28.347" starttime="20170915 10:22:28.346"></status>
</kw>
<kw name="Remove String Using Regexp" library="String">
<doc>Removes ``patterns`` from the given ``string``.</doc>
<arguments>
<arg>${config_content}</arg>
<arg>LAUNCHERURL=${XWCONFIGURE.VALUES.XWUPGRADEURL}</arg>
</arguments>
<assign>
<var>${config_content_filtered}</var>
</assign>
<msg timestamp="20170915 10:22:28.348" level="INFO">${config_content_filtered} = #
# Copyrights     : CNRS
# Author         : Oleg Lodygensky
# Acknowledgment : XtremWeb-HEP is based on XtremWeb 1.8.0 by inria : http://www.xtremweb.net/
# Web            : http://www.xtremweb-hep.o...</msg>
<status status="PASS" endtime="20170915 10:22:28.348" starttime="20170915 10:22:28.347"></status>
</kw>
<kw name="Create File" library="OperatingSystem">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xtremweb.worker.conf</arg>
<arg>content=${config_content_filtered}</arg>
</arguments>
<msg timestamp="20170915 10:22:28.355" html="yes" level="INFO">Created file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170915 10:22:28.355" starttime="20170915 10:22:28.348"></status>
</kw>
<kw name="Remove File" library="OperatingSystem">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.worker.process.log</arg>
</arguments>
<msg timestamp="20170915 10:22:28.357" html="yes" level="INFO">Removed file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.worker.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.worker.process.log&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170915 10:22:28.357" starttime="20170915 10:22:28.355"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/bin/xtremweb.worker console</arg>
<arg>shell=yes</arg>
<arg>stderr=STDOUT</arg>
<arg>stdout=${DIST_XWHEP_PATH}/xwhep.worker.process.log</arg>
</arguments>
<assign>
<var>${created_process}</var>
</assign>
<msg timestamp="20170915 10:22:28.358" level="INFO">Starting process:
/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/xtremweb.worker console</msg>
<msg timestamp="20170915 10:22:28.362" level="INFO">${created_process} = 31</msg>
<status status="PASS" endtime="20170915 10:22:28.362" starttime="20170915 10:22:28.357"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${WORKER_PROCESS}</arg>
<arg>${created_process}</arg>
</arguments>
<msg timestamp="20170915 10:22:28.363" level="INFO">${WORKER_PROCESS} = 31</msg>
<status status="PASS" endtime="20170915 10:22:28.363" starttime="20170915 10:22:28.362"></status>
</kw>
<kw name="Log File" library="OperatingSystem">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.worker.process.log</arg>
</arguments>
<msg timestamp="20170915 10:22:28.364" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.worker.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.worker.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170915 10:22:28.365" level="INFO"></msg>
<status status="PASS" endtime="20170915 10:22:28.366" starttime="20170915 10:22:28.364"></status>
</kw>
<status status="PASS" endtime="20170915 10:22:28.366" starttime="20170915 10:22:28.345"></status>
</kw>
<status status="PASS" endtime="20170915 10:22:28.366" starttime="20170915 10:22:23.236"></status>
</kw>
<status status="PASS" endtime="20170915 10:22:28.366" starttime="20170915 10:21:33.830"></status>
</kw>
<kw name="Start Testrpc" library="ETHTestrpc">
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>testrpc</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${created_process}</var>
</assign>
<msg timestamp="20170915 10:22:28.368" level="INFO">Starting process:
testrpc</msg>
<msg timestamp="20170915 10:22:28.372" level="INFO">${created_process} = 32</msg>
<status status="PASS" endtime="20170915 10:22:28.372" starttime="20170915 10:22:28.367"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TESTRPC_PROCESS}</arg>
<arg>${created_process}</arg>
</arguments>
<msg timestamp="20170915 10:22:28.374" level="INFO">${TESTRPC_PROCESS} = 32</msg>
<status status="PASS" endtime="20170915 10:22:28.374" starttime="20170915 10:22:28.373"></status>
</kw>
<status status="PASS" endtime="20170915 10:22:28.374" starttime="20170915 10:22:28.367"></status>
</kw>
<kw name="Init Oracle" library="IexecOracle">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${IEXEC_ORACLE_FORCE_GIT_CLONE}' == 'true'</arg>
<arg>Git Clone Iexec Oracle</arg>
</arguments>
<status status="PASS" endtime="20170915 10:22:28.375" starttime="20170915 10:22:28.375"></status>
</kw>
<kw name="Npm Install Iexec Oracle" library="IexecOracle">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd iexec-oracle &amp;&amp; npm install</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${npm_result}</var>
</assign>
<msg timestamp="20170915 10:22:28.376" level="INFO">Starting process:
cd iexec-oracle &amp;&amp; npm install</msg>
<msg timestamp="20170915 10:22:28.385" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170915 10:22:29.491" level="INFO">Process completed.</msg>
<msg timestamp="20170915 10:22:29.491" level="INFO">${npm_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170915 10:22:29.491" starttime="20170915 10:22:28.376"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${npm_result.stderr}</arg>
</arguments>
<msg timestamp="20170915 10:22:29.492" level="INFO">npm WARN xtremwebinterface@1.0.0 No repository field.</msg>
<status status="PASS" endtime="20170915 10:22:29.492" starttime="20170915 10:22:29.492"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${npm_result.stdout}</arg>
</arguments>
<msg timestamp="20170915 10:22:29.493" level="INFO"></msg>
<status status="PASS" endtime="20170915 10:22:29.493" starttime="20170915 10:22:29.492"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${npm_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170915 10:22:29.493" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170915 10:22:29.493" starttime="20170915 10:22:29.493"></status>
</kw>
<status status="PASS" endtime="20170915 10:22:29.493" starttime="20170915 10:22:28.376"></status>
</kw>
<kw name="Iexec Oracle Truffle Migrate" library="IexecOracle">
<tags>
<tag>Smart contract Tests</tag>
</tags>
<doc>call truffle migrate</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>rm -rf iexec-oracle/build</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${rm_result}</var>
</assign>
<msg timestamp="20170915 10:22:29.494" level="INFO">Starting process:
rm -rf iexec-oracle/build</msg>
<msg timestamp="20170915 10:22:29.497" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170915 10:22:29.501" level="INFO">Process completed.</msg>
<msg timestamp="20170915 10:22:29.501" level="INFO">${rm_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170915 10:22:29.501" starttime="20170915 10:22:29.494"></status>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<doc>Verifies that the given item is empty.</doc>
<arguments>
<arg>${rm_result.stderr}</arg>
</arguments>
<msg timestamp="20170915 10:22:29.502" level="INFO">Length is 0</msg>
<status status="PASS" endtime="20170915 10:22:29.502" starttime="20170915 10:22:29.502"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rm_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170915 10:22:29.503" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170915 10:22:29.503" starttime="20170915 10:22:29.502"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd iexec-oracle &amp;&amp; ./node_modules/.bin/truffle migrate</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${truffletest_result}</var>
</assign>
<msg timestamp="20170915 10:22:29.503" level="INFO">Starting process:
cd iexec-oracle &amp;&amp; ./node_modules/.bin/truffle migrate</msg>
<msg timestamp="20170915 10:22:29.506" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170915 10:22:37.430" level="INFO">Process completed.</msg>
<msg timestamp="20170915 10:22:37.430" level="INFO">${truffletest_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170915 10:22:37.430" starttime="20170915 10:22:29.503"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stderr}</arg>
</arguments>
<msg timestamp="20170915 10:22:37.431" level="INFO"></msg>
<status status="PASS" endtime="20170915 10:22:37.431" starttime="20170915 10:22:37.431"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
</arguments>
<msg timestamp="20170915 10:22:37.432" level="INFO">Compiling ./contracts/IexecLib.sol...
Compiling ./contracts/IexecOracle.sol...
Compiling ./contracts/IexecOracleAPI.sol...
Compiling ./contracts/IexecOracleAPITest.sol...
Compiling ./contracts/IexecOracleAPIimpl.sol...
Compiling ./contracts/Migrations.sol...
Compiling ./contracts/SafeMath.sol...

Compilation warnings encountered:

/home/vagrant/iexecdev/iexec-node/tests/rf/iexec-oracle/contracts/IexecOracle.sol:24:7: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
      string workUid;
      ^------------^
,/home/vagrant/iexecdev/iexec-node/tests/rf/iexec-oracle/contracts/IexecOracle.sol:25:7: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
      string  name;
      ^----------^
,/home/vagrant/iexecdev/iexec-node/tests/rf/iexec-oracle/contracts/IexecOracle.sol:28:7: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
      string stdout;
      ^-----------^
,/home/vagrant/iexecdev/iexec-node/tests/rf/iexec-oracle/contracts/IexecOracle.sol:29:7: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
      string stderr;
      ^-----------^

Writing artifacts to ./build/contracts

Using network 'development'.

Running migration: 1_initial_migration.js
  Deploying Migrations...
  ... 0x866cf1ddac6c5a52f125bad0fcb16f43f3d0f04605be74111ad07220687aa820
  Migrations: 0x573cd205f88fff2a148ef8eb7b1453ee5f921977
Saving successful migration to network...
  ... 0x973ac94a17985a7ac8da8f789a617895b88720fe29da413fdcc14885850aee52
Saving artifacts...
Running migration: 2_deploy_contracts.js
  Deploying IexecOracle...
  ... 0xd5894002e331cfef18a824aea6600e2ce46f7690572f90b21f7a9c74238183d8
  IexecOracle: 0xc69664c69468679e5ccf01dbe524f10116c6ce64
IexecOracle deployed at address :0xc69664c69468679e5ccf01dbe524f10116c6ce64
  Deploying IexecOracleAPIimpl...
  ... 0x16cb5d2522eac1feb1ece2ea78771804ef8ed2d5131bad70614107f0d6c79866
  IexecOracleAPIimpl: 0xffc17d45c6d65d65f85ae6e25fdd21b84d27ade9
IexecOracleAPIimpl deployed at address :0xffc17d45c6d65d65f85ae6e25fdd21b84d27ade9
Saving successful migration to network...
  ... 0xc86c113d514a3a1eb6963554da0cccf1ae0a8e5043a70ae61421f5965fec7cf1
Saving artifacts...</msg>
<status status="PASS" endtime="20170915 10:22:37.432" starttime="20170915 10:22:37.431"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${truffletest_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170915 10:22:37.432" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170915 10:22:37.432" starttime="20170915 10:22:37.432"></status>
</kw>
<status status="PASS" endtime="20170915 10:22:37.432" starttime="20170915 10:22:29.493"></status>
</kw>
<kw name="Iexec Oracle Set Contract Address In Test" library="IexecOracle">
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>iexec-oracle/build/contracts/IexecOracle.json</arg>
</arguments>
<assign>
<var>${iexecOracle_json_content}</var>
</assign>
<msg timestamp="20170915 10:22:37.433" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/iexec-oracle/build/contracts/IexecOracle.json"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/iexec-oracle/build/contracts/IexecOracle.json&lt;/a&gt;'.</msg>
<msg timestamp="20170915 10:22:37.434" level="INFO">${iexecOracle_json_content} = {
  "contract_name": "IexecOracle",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "user",
          "type": "address"
        },
        {
          "name": "p...</msg>
<status status="PASS" endtime="20170915 10:22:37.434" starttime="20170915 10:22:37.433"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${iexecOracle_json_content}</arg>
<arg>"address": "(?P&lt;smartContractAddress&gt;.*)",</arg>
<arg>smartContractAddress</arg>
</arguments>
<assign>
<var>@{smartContractAddress}</var>
</assign>
<msg timestamp="20170915 10:22:37.434" level="INFO">@{smartContractAddress} = [ 0xc69664c69468679e5ccf01dbe524f10116c6ce64 ]</msg>
<status status="PASS" endtime="20170915 10:22:37.434" starttime="20170915 10:22:37.434"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>@{smartContractAddress}</arg>
</arguments>
<msg timestamp="20170915 10:22:37.435" level="INFO">0xc69664c69468679e5ccf01dbe524f10116c6ce64</msg>
<status status="PASS" endtime="20170915 10:22:37.435" starttime="20170915 10:22:37.434"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>@{smartContractAddress}[0]</arg>
</arguments>
<msg timestamp="20170915 10:22:37.435" level="INFO">0xc69664c69468679e5ccf01dbe524f10116c6ce64</msg>
<status status="PASS" endtime="20170915 10:22:37.435" starttime="20170915 10:22:37.435"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${IEXEC_ORACLE_SM_ADDRESS}</arg>
<arg>@{smartContractAddress}[0]</arg>
</arguments>
<msg timestamp="20170915 10:22:37.435" level="INFO">${IEXEC_ORACLE_SM_ADDRESS} = 0xc69664c69468679e5ccf01dbe524f10116c6ce64</msg>
<status status="PASS" endtime="20170915 10:22:37.435" starttime="20170915 10:22:37.435"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>sed -i 's/.*return IexecOracle.at(.*/return IexecOracle.at(\"${IEXEC_ORACLE_SM_ADDRESS}\")/g' iexec-oracle/test/rf/*</arg>
</arguments>
<msg timestamp="20170915 10:22:37.437" level="INFO">Running command 'sed -i 's/.*return IexecOracle.at(.*/return IexecOracle.at("0xc69664c69468679e5ccf01dbe524f10116c6ce64")/g' iexec-oracle/test/rf/* 2&gt;&amp;1'.</msg>
<status status="PASS" endtime="20170915 10:22:37.576" starttime="20170915 10:22:37.436"></status>
</kw>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>iexec-oracle/build/contracts/IexecOracleAPIimpl.json</arg>
</arguments>
<assign>
<var>${iexecoracleapiimpl_json_content}</var>
</assign>
<msg timestamp="20170915 10:22:37.577" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/iexec-oracle/build/contracts/IexecOracleAPIimpl.json"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/iexec-oracle/build/contracts/IexecOracleAPIimpl.json&lt;/a&gt;'.</msg>
<msg timestamp="20170915 10:22:37.577" level="INFO">${iexecoracleapiimpl_json_content} = {
  "contract_name": "IexecOracleAPIimpl",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "appName",
          "type": "string"
        },
        {
          ...</msg>
<status status="PASS" endtime="20170915 10:22:37.577" starttime="20170915 10:22:37.576"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${iexecoracleapiimpl_json_content}</arg>
<arg>"address": "(?P&lt;smartContractAddress&gt;.*)",</arg>
<arg>smartContractAddress</arg>
</arguments>
<assign>
<var>@{smartContractAddress}</var>
</assign>
<msg timestamp="20170915 10:22:37.578" level="INFO">@{smartContractAddress} = [ 0xffc17d45c6d65d65f85ae6e25fdd21b84d27ade9 ]</msg>
<status status="PASS" endtime="20170915 10:22:37.578" starttime="20170915 10:22:37.578"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>@{smartContractAddress}</arg>
</arguments>
<msg timestamp="20170915 10:22:37.579" level="INFO">0xffc17d45c6d65d65f85ae6e25fdd21b84d27ade9</msg>
<status status="PASS" endtime="20170915 10:22:37.579" starttime="20170915 10:22:37.578"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>@{smartContractAddress}[0]</arg>
</arguments>
<msg timestamp="20170915 10:22:37.579" level="INFO">0xffc17d45c6d65d65f85ae6e25fdd21b84d27ade9</msg>
<status status="PASS" endtime="20170915 10:22:37.579" starttime="20170915 10:22:37.579"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${HELLO_WORLD_SM_ADDRESS}</arg>
<arg>@{smartContractAddress}[0]</arg>
</arguments>
<msg timestamp="20170915 10:22:37.580" level="INFO">${HELLO_WORLD_SM_ADDRESS} = 0xffc17d45c6d65d65f85ae6e25fdd21b84d27ade9</msg>
<status status="PASS" endtime="20170915 10:22:37.580" starttime="20170915 10:22:37.579"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>sed -i 's/.*return IexecOracleAPIimpl.at(.*/return IexecOracleAPIimpl.at(\"${HELLO_WORLD_SM_ADDRESS}\")/g' iexec-oracle/test/rf/*</arg>
</arguments>
<msg timestamp="20170915 10:22:37.581" level="INFO">Running command 'sed -i 's/.*return IexecOracleAPIimpl.at(.*/return IexecOracleAPIimpl.at("0xffc17d45c6d65d65f85ae6e25fdd21b84d27ade9")/g' iexec-oracle/test/rf/* 2&gt;&amp;1'.</msg>
<status status="PASS" endtime="20170915 10:22:37.819" starttime="20170915 10:22:37.580"></status>
</kw>
<status status="PASS" endtime="20170915 10:22:37.819" starttime="20170915 10:22:37.432"></status>
</kw>
<status status="PASS" endtime="20170915 10:22:37.820" starttime="20170915 10:22:28.375"></status>
</kw>
<kw name="Init Bridge" library="IexecBridge">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${IEXEC_BRIDGE_FORCE_GIT_CLONE}' == 'true'</arg>
<arg>Git Clone Iexec Bridge</arg>
</arguments>
<status status="PASS" endtime="20170915 10:22:37.822" starttime="20170915 10:22:37.822"></status>
</kw>
<kw name="Npm Install Bridge" library="IexecBridge">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd iexec-bridge &amp;&amp; npm install</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${npm_result}</var>
</assign>
<msg timestamp="20170915 10:22:37.824" level="INFO">Starting process:
cd iexec-bridge &amp;&amp; npm install</msg>
<msg timestamp="20170915 10:22:37.828" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170915 10:22:42.060" level="INFO">Process completed.</msg>
<msg timestamp="20170915 10:22:42.060" level="INFO">${npm_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170915 10:22:42.060" starttime="20170915 10:22:37.824"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${npm_result.stderr}</arg>
</arguments>
<msg timestamp="20170915 10:22:42.061" level="INFO">npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@^1.0.0 (node_modules/chokidar/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@1.1.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})
npm WARN babel-loader@7.1.2 requires a peer of webpack@2 || 3 but none was installed.</msg>
<status status="PASS" endtime="20170915 10:22:42.061" starttime="20170915 10:22:42.060"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${npm_result.stdout}</arg>
</arguments>
<msg timestamp="20170915 10:22:42.061" level="INFO"></msg>
<status status="PASS" endtime="20170915 10:22:42.061" starttime="20170915 10:22:42.061"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${npm_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170915 10:22:42.062" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170915 10:22:42.062" starttime="20170915 10:22:42.062"></status>
</kw>
<status status="PASS" endtime="20170915 10:22:42.062" starttime="20170915 10:22:37.823"></status>
</kw>
<kw name="Set Oracle Address In Bridge" library="IexecBridge">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>sed -i 's/.*"ContractAddress":.*/"ContractAddress":\"${IEXEC_ORACLE_SM_ADDRESS}\"/g' iexec-bridge/config.json</arg>
</arguments>
<msg timestamp="20170915 10:22:42.064" level="INFO">Running command 'sed -i 's/.*"ContractAddress":.*/"ContractAddress":"0xc69664c69468679e5ccf01dbe524f10116c6ce64"/g' iexec-bridge/config.json 2&gt;&amp;1'.</msg>
<status status="PASS" endtime="20170915 10:22:42.075" starttime="20170915 10:22:42.063"></status>
</kw>
<status status="PASS" endtime="20170915 10:22:42.075" starttime="20170915 10:22:42.062"></status>
</kw>
<kw name="Set XtremWeb Config In Bridge" library="IexecBridge">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${XWCONFIGURE.VALUES.XWSERVER}</arg>
</arguments>
<msg timestamp="20170915 10:22:42.076" level="INFO">localhost</msg>
<status status="PASS" endtime="20170915 10:22:42.076" starttime="20170915 10:22:42.076"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>sed -i "s/.*const LOCALHOSTNAME = .*/const LOCALHOSTNAME = '${XWCONFIGURE.VALUES.XWSERVER}';/g" iexec-bridge/xwhep.js</arg>
</arguments>
<msg timestamp="20170915 10:22:42.078" level="INFO">Running command 'sed -i "s/.*const LOCALHOSTNAME = .*/const LOCALHOSTNAME = 'localhost';/g" iexec-bridge/xwhep.js 2&gt;&amp;1'.</msg>
<status status="PASS" endtime="20170915 10:22:42.087" starttime="20170915 10:22:42.076"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${XWCONFIGURE.VALUES.HTTPSPORT}</arg>
</arguments>
<msg timestamp="20170915 10:22:42.088" level="INFO">9443</msg>
<status status="PASS" endtime="20170915 10:22:42.088" starttime="20170915 10:22:42.087"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>sed -i "s/.*const LOCALHOSTPORT = .*/const LOCALHOSTPORT = ${XWCONFIGURE.VALUES.HTTPSPORT};/g" iexec-bridge/xwhep.js</arg>
</arguments>
<msg timestamp="20170915 10:22:42.090" level="INFO">Running command 'sed -i "s/.*const LOCALHOSTPORT = .*/const LOCALHOSTPORT = 9443;/g" iexec-bridge/xwhep.js 2&gt;&amp;1'.</msg>
<status status="PASS" endtime="20170915 10:22:42.099" starttime="20170915 10:22:42.088"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${XWCONFIGURE.VALUES.XWADMINLOGIN}</arg>
</arguments>
<msg timestamp="20170915 10:22:42.100" level="INFO">admin</msg>
<status status="PASS" endtime="20170915 10:22:42.100" starttime="20170915 10:22:42.100"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>sed -i "s/.*const LOGIN = .*/const LOGIN = '${XWCONFIGURE.VALUES.XWADMINLOGIN}';/g" iexec-bridge/xwhep.js</arg>
</arguments>
<msg timestamp="20170915 10:22:42.101" level="INFO">Running command 'sed -i "s/.*const LOGIN = .*/const LOGIN = 'admin';/g" iexec-bridge/xwhep.js 2&gt;&amp;1'.</msg>
<status status="PASS" endtime="20170915 10:22:42.111" starttime="20170915 10:22:42.100"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${XWCONFIGURE.VALUES.XWADMINPASSWORD}</arg>
</arguments>
<msg timestamp="20170915 10:22:42.112" level="INFO">admin</msg>
<status status="PASS" endtime="20170915 10:22:42.112" starttime="20170915 10:22:42.112"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>sed -i "s/.*const PASSWD = .*/const PASSWD = '${XWCONFIGURE.VALUES.XWADMINPASSWORD}';/g" iexec-bridge/xwhep.js</arg>
</arguments>
<msg timestamp="20170915 10:22:42.114" level="INFO">Running command 'sed -i "s/.*const PASSWD = .*/const PASSWD = 'admin';/g" iexec-bridge/xwhep.js 2&gt;&amp;1'.</msg>
<status status="PASS" endtime="20170915 10:22:42.122" starttime="20170915 10:22:42.112"></status>
</kw>
<status status="PASS" endtime="20170915 10:22:42.122" starttime="20170915 10:22:42.076"></status>
</kw>
<status status="PASS" endtime="20170915 10:22:42.123" starttime="20170915 10:22:37.820"></status>
</kw>
<kw name="Start Bridge" library="IexecBridge">
<kw name="Remove File" library="OperatingSystem">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>iexec-bridge/bridge.log</arg>
</arguments>
<msg timestamp="20170915 10:22:42.124" html="yes" level="INFO">Removed file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/iexec-bridge/bridge.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/iexec-bridge/bridge.log&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170915 10:22:42.125" starttime="20170915 10:22:42.123"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>cd iexec-bridge &amp;&amp; npm run devbridgelog</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${created_process}</var>
</assign>
<msg timestamp="20170915 10:22:42.125" level="INFO">Starting process:
cd iexec-bridge &amp;&amp; npm run devbridgelog</msg>
<msg timestamp="20170915 10:22:42.128" level="INFO">${created_process} = 37</msg>
<status status="PASS" endtime="20170915 10:22:42.128" starttime="20170915 10:22:42.125"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${BRIDGE_PROCESS}</arg>
<arg>${created_process}</arg>
</arguments>
<msg timestamp="20170915 10:22:42.129" level="INFO">${BRIDGE_PROCESS} = 37</msg>
<status status="PASS" endtime="20170915 10:22:42.129" starttime="20170915 10:22:42.129"></status>
</kw>
<status status="PASS" endtime="20170915 10:22:42.129" starttime="20170915 10:22:42.123"></status>
</kw>
<status status="PASS" endtime="20170915 10:22:42.129" starttime="20170915 10:21:33.829"></status>
</kw>
<test id="s1-s2-t1" name="Test HelloWorld Submit Iexec On Testrpc">
<kw name="Get User Address" library="IexceOracleSmartContract">
<assign>
<var>${user}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd iexec-oracle &amp;&amp; ./node_modules/.bin/truffle test test/rf/getUserAddress.js</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${truffletest_result}</var>
</assign>
<msg timestamp="20170915 10:22:42.131" level="INFO">Starting process:
cd iexec-oracle &amp;&amp; ./node_modules/.bin/truffle test test/rf/getUserAddress.js</msg>
<msg timestamp="20170915 10:22:42.134" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170915 10:22:44.594" level="INFO">Process completed.</msg>
<msg timestamp="20170915 10:22:44.595" level="INFO">${truffletest_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170915 10:22:44.595" starttime="20170915 10:22:42.131"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stderr}</arg>
</arguments>
<msg timestamp="20170915 10:22:44.595" level="INFO"></msg>
<status status="PASS" endtime="20170915 10:22:44.596" starttime="20170915 10:22:44.595"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
</arguments>
<msg timestamp="20170915 10:22:44.596" level="INFO">Using network 'development'.

IexecOracle deployed at address :0xfdb135aedc5e148cc31d5167a663ab97ed09b910
IexecOracleAPIimpl deployed at address :0x82a990c52923c1f217ab63958cb96fc167b9f829

[0m[0m
[0m  Contract: IexecOracle[0m
BEGIN_LOG0x78a119765d76eefd41ba9a7e4393e029b5c59c48END_LOG
  [32m  ✓[0m[90m get a creator[0m


[92m [0m[32m 1 passing[0m[90m (64ms)[0m
</msg>
<status status="PASS" endtime="20170915 10:22:44.596" starttime="20170915 10:22:44.596"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${truffletest_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170915 10:22:44.597" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170915 10:22:44.597" starttime="20170915 10:22:44.596"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
<arg>BEGIN_LOG(?P&lt;address&gt;.*)END_LOG</arg>
<arg>address</arg>
</arguments>
<assign>
<var>@{address}</var>
</assign>
<msg timestamp="20170915 10:22:44.598" level="INFO">@{address} = [ 0x78a119765d76eefd41ba9a7e4393e029b5c59c48 ]</msg>
<status status="PASS" endtime="20170915 10:22:44.598" starttime="20170915 10:22:44.597"></status>
</kw>
<msg timestamp="20170915 10:22:44.598" level="INFO">${user} = 0x78a119765d76eefd41ba9a7e4393e029b5c59c48</msg>
<status status="PASS" endtime="20170915 10:22:44.598" starttime="20170915 10:22:42.130"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${USER}</arg>
<arg>${user}</arg>
</arguments>
<msg timestamp="20170915 10:22:44.599" level="INFO">${USER} = 0x78a119765d76eefd41ba9a7e4393e029b5c59c48</msg>
<status status="PASS" endtime="20170915 10:22:44.599" starttime="20170915 10:22:44.598"></status>
</kw>
<kw name="Get Creator Address" library="IexceOracleSmartContract">
<assign>
<var>${creator}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd iexec-oracle &amp;&amp; ./node_modules/.bin/truffle test test/rf/getCreatorAddress.js</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${truffletest_result}</var>
</assign>
<msg timestamp="20170915 10:22:44.600" level="INFO">Starting process:
cd iexec-oracle &amp;&amp; ./node_modules/.bin/truffle test test/rf/getCreatorAddress.js</msg>
<msg timestamp="20170915 10:22:44.603" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170915 10:22:47.170" level="INFO">Process completed.</msg>
<msg timestamp="20170915 10:22:47.170" level="INFO">${truffletest_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170915 10:22:47.170" starttime="20170915 10:22:44.599"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stderr}</arg>
</arguments>
<msg timestamp="20170915 10:22:47.171" level="INFO"></msg>
<status status="PASS" endtime="20170915 10:22:47.171" starttime="20170915 10:22:47.170"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
</arguments>
<msg timestamp="20170915 10:22:47.172" level="INFO">Using network 'development'.

IexecOracle deployed at address :0x7a2a7316d0c946a15bddb8a6340b66d9612f5f6b
IexecOracleAPIimpl deployed at address :0xca9a6c8fb618ddd9ce004b875717be4784e452e5

[0m[0m
[0m  Contract: IexecOracle[0m
BEGIN_LOG0xb85a37090868149a32d76e641f6f97e6541c82f4END_LOG
  [32m  ✓[0m[90m get a creator[0m


[92m [0m[32m 1 passing[0m[90m (68ms)[0m
</msg>
<status status="PASS" endtime="20170915 10:22:47.172" starttime="20170915 10:22:47.171"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${truffletest_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170915 10:22:47.173" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170915 10:22:47.173" starttime="20170915 10:22:47.172"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
<arg>BEGIN_LOG(?P&lt;address&gt;.*)END_LOG</arg>
<arg>address</arg>
</arguments>
<assign>
<var>@{address}</var>
</assign>
<msg timestamp="20170915 10:22:47.173" level="INFO">@{address} = [ 0xb85a37090868149a32d76e641f6f97e6541c82f4 ]</msg>
<status status="PASS" endtime="20170915 10:22:47.174" starttime="20170915 10:22:47.173"></status>
</kw>
<msg timestamp="20170915 10:22:47.174" level="INFO">${creator} = 0xb85a37090868149a32d76e641f6f97e6541c82f4</msg>
<status status="PASS" endtime="20170915 10:22:47.174" starttime="20170915 10:22:44.599"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${CREATOR}</arg>
<arg>${creator}</arg>
</arguments>
<msg timestamp="20170915 10:22:47.175" level="INFO">${CREATOR} = 0xb85a37090868149a32d76e641f6f97e6541c82f4</msg>
<status status="PASS" endtime="20170915 10:22:47.175" starttime="20170915 10:22:47.174"></status>
</kw>
<kw name="XWSENDAPPCommand" library="XWClient">
<doc>Usage : SENDAPP appName appType cpuType osName URI | UID : inserts/updates an application; URI or UID points to binary file ; application name must be the first parameter</doc>
<arguments>
<arg>echo</arg>
<arg>DEPLOYABLE</arg>
<arg>LINUX</arg>
<arg>AMD64</arg>
<arg>/bin/echo</arg>
</arguments>
<assign>
<var>${app_uid}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd ${DIST_XWHEP_PATH}/bin &amp;&amp; ./xwsendapp ${appName} ${appType} ${cpuType} ${osName} ${uri-udi}</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${cmd_result}</var>
</assign>
<msg timestamp="20170915 10:22:47.176" level="INFO">Starting process:
cd /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin &amp;&amp; ./xwsendapp echo DEPLOYABLE LINUX AMD64 /bin/echo</msg>
<msg timestamp="20170915 10:22:47.180" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170915 10:22:47.907" level="INFO">Process completed.</msg>
<msg timestamp="20170915 10:22:47.908" level="INFO">${cmd_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170915 10:22:47.908" starttime="20170915 10:22:47.176"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stderr}</arg>
</arguments>
<msg timestamp="20170915 10:22:47.909" level="INFO"></msg>
<status status="PASS" endtime="20170915 10:22:47.909" starttime="20170915 10:22:47.908"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
</arguments>
<msg timestamp="20170915 10:22:47.909" level="INFO">xw://vagrant-ubuntu-trusty-64/ef8e5352-dc99-4af8-b39c-959d7b34c6d1</msg>
<status status="PASS" endtime="20170915 10:22:47.909" starttime="20170915 10:22:47.909"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${cmd_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170915 10:22:47.909" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170915 10:22:47.910" starttime="20170915 10:22:47.909"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
<arg>-36</arg>
</arguments>
<assign>
<var>${uid}</var>
</assign>
<msg timestamp="20170915 10:22:47.910" level="INFO">${uid} = ef8e5352-dc99-4af8-b39c-959d7b34c6d1</msg>
<status status="PASS" endtime="20170915 10:22:47.910" starttime="20170915 10:22:47.910"></status>
</kw>
<msg timestamp="20170915 10:22:47.910" level="INFO">${app_uid} = ef8e5352-dc99-4af8-b39c-959d7b34c6d1</msg>
<status status="PASS" endtime="20170915 10:22:47.910" starttime="20170915 10:22:47.175"></status>
</kw>
<kw name="Count From Apps Where Uid" library="XWServer">
<arguments>
<arg>${app_uid}</arg>
<arg>1</arg>
</arguments>
<kw name="Count From Table Where Uid" library="MySql">
<arguments>
<arg>apps</arg>
<arg>${uid}</arg>
<arg>${countExpected}</arg>
</arguments>
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170915 10:22:47.912" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170915 10:22:47.913" starttime="20170915 10:22:47.912"></status>
</kw>
<status status="PASS" endtime="20170915 10:22:47.913" starttime="20170915 10:22:47.911"></status>
</kw>
<kw name="Row Count Is Equal To X" library="DatabaseLibrary">
<doc>Check if the number of rows returned from `selectStatement` is equal to the value submitted. If not, then this</doc>
<arguments>
<arg>SELECT * FROM ${table} WHERE uid = '${uid}'</arg>
<arg>${countExpected}</arg>
</arguments>
<msg timestamp="20170915 10:22:47.914" level="INFO">Executing : Row Count Is Equal To X  |  SELECT * FROM apps WHERE uid = 'ef8e5352-dc99-4af8-b39c-959d7b34c6d1'  |  1 </msg>
<msg timestamp="20170915 10:22:47.914" level="INFO">Executing : Row Count  |  SELECT * FROM apps WHERE uid = 'ef8e5352-dc99-4af8-b39c-959d7b34c6d1' </msg>
<status status="PASS" endtime="20170915 10:22:47.915" starttime="20170915 10:22:47.913"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170915 10:22:47.916" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170915 10:22:47.916" starttime="20170915 10:22:47.915"></status>
</kw>
<status status="PASS" endtime="20170915 10:22:47.916" starttime="20170915 10:22:47.915"></status>
</kw>
<status status="PASS" endtime="20170915 10:22:47.916" starttime="20170915 10:22:47.911"></status>
</kw>
<status status="PASS" endtime="20170915 10:22:47.916" starttime="20170915 10:22:47.911"></status>
</kw>
<kw name="Count From Works" library="XWServer">
<arguments>
<arg>0</arg>
</arguments>
<kw name="Count From Table" library="MySql">
<arguments>
<arg>works</arg>
<arg>${countExpected}</arg>
</arguments>
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170915 10:22:47.918" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170915 10:22:47.918" starttime="20170915 10:22:47.917"></status>
</kw>
<status status="PASS" endtime="20170915 10:22:47.918" starttime="20170915 10:22:47.917"></status>
</kw>
<kw name="Row Count Is Equal To X" library="DatabaseLibrary">
<doc>Check if the number of rows returned from `selectStatement` is equal to the value submitted. If not, then this</doc>
<arguments>
<arg>SELECT * FROM ${table}</arg>
<arg>${countExpected}</arg>
</arguments>
<msg timestamp="20170915 10:22:47.919" level="INFO">Executing : Row Count Is Equal To X  |  SELECT * FROM works  |  0 </msg>
<msg timestamp="20170915 10:22:47.919" level="INFO">Executing : Row Count  |  SELECT * FROM works </msg>
<status status="PASS" endtime="20170915 10:22:47.920" starttime="20170915 10:22:47.919"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170915 10:22:47.920" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170915 10:22:47.921" starttime="20170915 10:22:47.920"></status>
</kw>
<status status="PASS" endtime="20170915 10:22:47.921" starttime="20170915 10:22:47.920"></status>
</kw>
<status status="PASS" endtime="20170915 10:22:47.921" starttime="20170915 10:22:47.917"></status>
</kw>
<status status="PASS" endtime="20170915 10:22:47.921" starttime="20170915 10:22:47.916"></status>
</kw>
<kw name="Submit" library="IexecOracleAPIimplSmartContract">
<arguments>
<arg>echo</arg>
<arg>HelloWorld!!!</arg>
</arguments>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>sed -i "s/.*return aIexecOracleAPIimplInstance.iexecSubmit(.*/return aIexecOracleAPIimplInstance.iexecSubmit(\\"${appName}\\",\\"${param}\\",{/g" iexec-oracle/test/rf/submitTest.js</arg>
</arguments>
<msg timestamp="20170915 10:22:47.923" level="INFO">Running command 'sed -i "s/.*return aIexecOracleAPIimplInstance.iexecSubmit(.*/return aIexecOracleAPIimplInstance.iexecSubmit(\"echo\",\"HelloWorld!!!\",{/g" iexec-oracle/test/rf/submitTest.js 2&gt;&amp;1'.</msg>
<status status="PASS" endtime="20170915 10:22:47.932" starttime="20170915 10:22:47.922"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd iexec-oracle &amp;&amp; ./node_modules/.bin/truffle test test/rf/submitTest.js</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${truffletest_result}</var>
</assign>
<msg timestamp="20170915 10:22:47.933" level="INFO">Starting process:
cd iexec-oracle &amp;&amp; ./node_modules/.bin/truffle test test/rf/submitTest.js</msg>
<msg timestamp="20170915 10:22:47.936" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170915 10:22:50.367" level="INFO">Process completed.</msg>
<msg timestamp="20170915 10:22:50.367" level="INFO">${truffletest_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170915 10:22:50.367" starttime="20170915 10:22:47.933"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stderr}</arg>
</arguments>
<msg timestamp="20170915 10:22:50.368" level="INFO"></msg>
<status status="PASS" endtime="20170915 10:22:50.368" starttime="20170915 10:22:50.368"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
</arguments>
<msg timestamp="20170915 10:22:50.370" level="INFO">Using network 'development'.

IexecOracle deployed at address :0xc7fa98e88d44057508b157e26bd9f0ef0b2b3ef4
IexecOracleAPIimpl deployed at address :0xc770794593705d825216b3aee7a2741f3f9a6cfc

[0m[0m
[0m  Contract: IexecOracleAPIimpl[0m
BEGIN_LOG
{ tx: '0xe923a1de6351f966bb59fd79e37aca6c68edfb2245f728581968315d95d27f22',
  receipt: 
   { transactionHash: '0xe923a1de6351f966bb59fd79e37aca6c68edfb2245f728581968315d95d27f22',
     transactionIndex: 0,
     blockHash: '0xcb24d1d278e0c4296d9d178a577bca1f1417be347cf7cc143b005226e0388515',
     blockNumber: 21,
     gasUsed: 31363,
     cumulativeGasUsed: 31363,
     contractAddress: null,
     logs: [ [Object] ] },
  logs: [] }
END_LOG
  [32m  ✓[0m[90m should register a work[0m[33m (53ms)[0m


[92m [0m[32m 1 passing[0m[90m (109ms)[0m
</msg>
<status status="PASS" endtime="20170915 10:22:50.370" starttime="20170915 10:22:50.368"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${truffletest_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170915 10:22:50.370" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170915 10:22:50.370" starttime="20170915 10:22:50.370"></status>
</kw>
<status status="PASS" endtime="20170915 10:22:50.370" starttime="20170915 10:22:47.921"></status>
</kw>
<kw name="Check Submit Launch Event In IexceOracleSmartContract" library="IexceOracleSmartContract">
<arguments>
<arg>${HELLO_WORLD_SM_ADDRESS}</arg>
</arguments>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>1 min</arg>
<arg>1 min</arg>
<arg>Watch LaunchEvent</arg>
</arguments>
<assign>
<var>${watch_callback_events}</var>
</assign>
<kw name="Watch LaunchEvent" library="IexceOracleSmartContract">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd iexec-oracle &amp;&amp; ./node_modules/.bin/truffle test test/rf/watchLaunchEventInIexecOracle.js</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${truffletest_result}</var>
</assign>
<msg timestamp="20170915 10:22:50.372" level="INFO">Starting process:
cd iexec-oracle &amp;&amp; ./node_modules/.bin/truffle test test/rf/watchLaunchEventInIexecOracle.js</msg>
<msg timestamp="20170915 10:22:50.375" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170915 10:22:52.884" level="INFO">Process completed.</msg>
<msg timestamp="20170915 10:22:52.884" level="INFO">${truffletest_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170915 10:22:52.884" starttime="20170915 10:22:50.372"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stderr}</arg>
</arguments>
<msg timestamp="20170915 10:22:52.885" level="INFO"></msg>
<status status="PASS" endtime="20170915 10:22:52.885" starttime="20170915 10:22:52.885"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
</arguments>
<msg timestamp="20170915 10:22:52.885" level="INFO">Using network 'development'.

IexecOracle deployed at address :0xafe96917d0ab0ff07c6aed7fcb524c56ed054135
IexecOracleAPIimpl deployed at address :0xb4310485154e2ca3f1bd5a1103e8c4ca597e5397

[0m[0m
[0m  Contract: IexecOracle[0m
BEGIN_LOG
[{"logIndex":0,"transactionIndex":0,"transactionHash":"0xe923a1de6351f966bb59fd79e37aca6c68edfb2245f728581968315d95d27f22","blockHash":"0xcb24d1d278e0c4296d9d178a577bca1f1417be347cf7cc143b005226e0388515","blockNumber":21,"address":"0xc69664c69468679e5ccf01dbe524f10116c6ce64","type":"mined","event":"Launch","args":{"user":"0x78a119765d76eefd41ba9a7e4393e029b5c59c48","provider":"0xffc17d45c6d65d65f85ae6e25fdd21b84d27ade9","creator":"0xb85a37090868149a32d76e641f6f97e6541c82f4","functionName":"submit","param1":"echo","param2":"HelloWorld!!!","workUid":""}}]
END_LOG
  [32m  ✓[0m[90m watch CallbackEvent[0m[31m (177ms)[0m


[92m [0m[32m 1 passing[0m[90m (222ms)[0m
</msg>
<status status="PASS" endtime="20170915 10:22:52.886" starttime="20170915 10:22:52.885"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${truffletest_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170915 10:22:52.886" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170915 10:22:52.886" starttime="20170915 10:22:52.886"></status>
</kw>
<kw name="Fetch From Right" library="String">
<doc>Returns contents of the ``string`` after the last occurrence of ``marker``.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
<arg>BEGIN_LOG</arg>
</arguments>
<assign>
<var>${after_begin_log}</var>
</assign>
<msg timestamp="20170915 10:22:52.886" level="INFO">${after_begin_log} = 
[{"logIndex":0,"transactionIndex":0,"transactionHash":"0xe923a1de6351f966bb59fd79e37aca6c68edfb2245f728581968315d95d27f22","blockHash":"0xcb24d1d278e0c4296d9d178a577bca1f1417be347cf7cc143b005226e0388...</msg>
<status status="PASS" endtime="20170915 10:22:52.886" starttime="20170915 10:22:52.886"></status>
</kw>
<kw name="Fetch From Left" library="String">
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<arguments>
<arg>${after_begin_log}</arg>
<arg>END_LOG</arg>
</arguments>
<assign>
<var>${before_end_log}</var>
</assign>
<msg timestamp="20170915 10:22:52.887" level="INFO">${before_end_log} = 
[{"logIndex":0,"transactionIndex":0,"transactionHash":"0xe923a1de6351f966bb59fd79e37aca6c68edfb2245f728581968315d95d27f22","blockHash":"0xcb24d1d278e0c4296d9d178a577bca1f1417be347cf7cc143b005226e0388...</msg>
<status status="PASS" endtime="20170915 10:22:52.887" starttime="20170915 10:22:52.887"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads('''${before_end_log}''')</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${events}</var>
</assign>
<msg timestamp="20170915 10:22:52.887" level="INFO">${events} = [{u'blockHash': u'0xcb24d1d278e0c4296d9d178a577bca1f1417be347cf7cc143b005226e0388515', u'transactionHash': u'0xe923a1de6351f966bb59fd79e37aca6c68edfb2245f728581968315d95d27f22', u'type': u'mined', u'a...</msg>
<status status="PASS" endtime="20170915 10:22:52.887" starttime="20170915 10:22:52.887"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${events}</arg>
</arguments>
<msg timestamp="20170915 10:22:52.888" level="INFO">[{u'blockHash': u'0xcb24d1d278e0c4296d9d178a577bca1f1417be347cf7cc143b005226e0388515', u'transactionHash': u'0xe923a1de6351f966bb59fd79e37aca6c68edfb2245f728581968315d95d27f22', u'type': u'mined', u'args': {u'workUid': u'', u'functionName': u'submit', u'creator': u'0xb85a37090868149a32d76e641f6f97e6541c82f4', u'param2': u'HelloWorld!!!', u'param1': u'echo', u'provider': u'0xffc17d45c6d65d65f85ae6e25fdd21b84d27ade9', u'user': u'0x78a119765d76eefd41ba9a7e4393e029b5c59c48'}, u'blockNumber': 21, u'address': u'0xc69664c69468679e5ccf01dbe524f10116c6ce64', u'logIndex': 0, u'transactionIndex': 0, u'event': u'Launch'}]</msg>
<status status="PASS" endtime="20170915 10:22:52.888" starttime="20170915 10:22:52.887"></status>
</kw>
<status status="PASS" endtime="20170915 10:22:52.888" starttime="20170915 10:22:50.372"></status>
</kw>
<msg timestamp="20170915 10:22:52.888" level="INFO">${watch_callback_events} = [{u'blockHash': u'0xcb24d1d278e0c4296d9d178a577bca1f1417be347cf7cc143b005226e0388515', u'transactionHash': u'0xe923a1de6351f966bb59fd79e37aca6c68edfb2245f728581968315d95d27f22', u'type': u'mined', u'a...</msg>
<status status="PASS" endtime="20170915 10:22:52.888" starttime="20170915 10:22:50.371"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${watch_callback_events[0]["event"]}</arg>
<arg>Launch</arg>
</arguments>
<status status="PASS" endtime="20170915 10:22:52.889" starttime="20170915 10:22:52.888"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${watch_callback_events[0]["args"]["functionName"]}</arg>
<arg>submit</arg>
</arguments>
<status status="PASS" endtime="20170915 10:22:52.889" starttime="20170915 10:22:52.889"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${watch_callback_events[0]["args"]["param1"]}</arg>
<arg>echo</arg>
</arguments>
<status status="PASS" endtime="20170915 10:22:52.889" starttime="20170915 10:22:52.889"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${watch_callback_events[0]["args"]["user"]}</arg>
<arg>${USER}</arg>
</arguments>
<status status="PASS" endtime="20170915 10:22:52.890" starttime="20170915 10:22:52.890"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${watch_callback_events[0]["args"]["creator"]}</arg>
<arg>${CREATOR}</arg>
</arguments>
<status status="PASS" endtime="20170915 10:22:52.890" starttime="20170915 10:22:52.890"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${watch_callback_events[0]["args"]["provider"]}</arg>
<arg>${provider}</arg>
</arguments>
<status status="PASS" endtime="20170915 10:22:52.891" starttime="20170915 10:22:52.891"></status>
</kw>
<status status="PASS" endtime="20170915 10:22:52.891" starttime="20170915 10:22:50.371"></status>
</kw>
<kw name="Check Submit CallbackEvent Event In IexceOracleSmartContract" library="IexceOracleSmartContract">
<arguments>
<arg>${HELLO_WORLD_SM_ADDRESS}</arg>
</arguments>
<assign>
<var>${index}</var>
</assign>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3 min</arg>
<arg>1 min</arg>
<arg>Watch CallbackEvent</arg>
</arguments>
<assign>
<var>${watch_callback_events}</var>
</assign>
<kw name="Watch CallbackEvent" library="IexceOracleSmartContract">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd iexec-oracle &amp;&amp; ./node_modules/.bin/truffle test test/rf/watchCallbackEventInIexecOracle.js</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${truffletest_result}</var>
</assign>
<msg timestamp="20170915 10:22:52.893" level="INFO">Starting process:
cd iexec-oracle &amp;&amp; ./node_modules/.bin/truffle test test/rf/watchCallbackEventInIexecOracle.js</msg>
<msg timestamp="20170915 10:22:52.896" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170915 10:24:21.990" level="INFO">Process completed.</msg>
<msg timestamp="20170915 10:24:21.990" level="INFO">${truffletest_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170915 10:24:21.990" starttime="20170915 10:22:52.893"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stderr}</arg>
</arguments>
<msg timestamp="20170915 10:24:21.991" level="INFO"></msg>
<status status="PASS" endtime="20170915 10:24:21.991" starttime="20170915 10:24:21.990"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
</arguments>
<msg timestamp="20170915 10:24:21.991" level="INFO">Using network 'development'.

IexecOracle deployed at address :0x93322b25e2b50313abc60d40adf54d64ecc0cd96
IexecOracleAPIimpl deployed at address :0xc30fadb2a5a9d8037b85fe082ad7dc6e228fe51a

[0m[0m
[0m  Contract: IexecOracle[0m
BEGIN_LOG
[{"logIndex":0,"transactionIndex":0,"transactionHash":"0xe1a5904505d2147619b62ec10a5584132b90a79933e583f87ea912f357fc4aa9","blockHash":"0xf77724e9eb5d29aca8b12a315e2beecff9ce1b305d3e451284e5a979d05bbff9","blockNumber":32,"address":"0xc69664c69468679e5ccf01dbe524f10116c6ce64","type":"mined","event":"CallbackEvent","args":{"callbackType":"SubmitCallback","user":"0x78a119765d76eefd41ba9a7e4393e029b5c59c48","provider":"0xffc17d45c6d65d65f85ae6e25fdd21b84d27ade9","creator":"0xb85a37090868149a32d76e641f6f97e6541c82f4","appName":"echo","index":"1"}}]
END_LOG
  [32m  ✓[0m[90m watch CallbackEvent[0m[31m (85438ms)[0m


[92m [0m[32m 1 passing[0m[90m (1m)[0m
</msg>
<status status="PASS" endtime="20170915 10:24:21.991" starttime="20170915 10:24:21.991"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${truffletest_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170915 10:24:21.992" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170915 10:24:21.992" starttime="20170915 10:24:21.991"></status>
</kw>
<kw name="Fetch From Right" library="String">
<doc>Returns contents of the ``string`` after the last occurrence of ``marker``.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
<arg>BEGIN_LOG</arg>
</arguments>
<assign>
<var>${after_begin_log}</var>
</assign>
<msg timestamp="20170915 10:24:21.992" level="INFO">${after_begin_log} = 
[{"logIndex":0,"transactionIndex":0,"transactionHash":"0xe1a5904505d2147619b62ec10a5584132b90a79933e583f87ea912f357fc4aa9","blockHash":"0xf77724e9eb5d29aca8b12a315e2beecff9ce1b305d3e451284e5a979d05bb...</msg>
<status status="PASS" endtime="20170915 10:24:21.992" starttime="20170915 10:24:21.992"></status>
</kw>
<kw name="Fetch From Left" library="String">
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<arguments>
<arg>${after_begin_log}</arg>
<arg>END_LOG</arg>
</arguments>
<assign>
<var>${before_end_log}</var>
</assign>
<msg timestamp="20170915 10:24:21.993" level="INFO">${before_end_log} = 
[{"logIndex":0,"transactionIndex":0,"transactionHash":"0xe1a5904505d2147619b62ec10a5584132b90a79933e583f87ea912f357fc4aa9","blockHash":"0xf77724e9eb5d29aca8b12a315e2beecff9ce1b305d3e451284e5a979d05bb...</msg>
<status status="PASS" endtime="20170915 10:24:21.993" starttime="20170915 10:24:21.992"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads('''${before_end_log}''')</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${events}</var>
</assign>
<msg timestamp="20170915 10:24:21.993" level="INFO">${events} = [{u'blockHash': u'0xf77724e9eb5d29aca8b12a315e2beecff9ce1b305d3e451284e5a979d05bbff9', u'transactionHash': u'0xe1a5904505d2147619b62ec10a5584132b90a79933e583f87ea912f357fc4aa9', u'type': u'mined', u'a...</msg>
<status status="PASS" endtime="20170915 10:24:21.993" starttime="20170915 10:24:21.993"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${events}</arg>
</arguments>
<msg timestamp="20170915 10:24:21.994" level="INFO">[{u'blockHash': u'0xf77724e9eb5d29aca8b12a315e2beecff9ce1b305d3e451284e5a979d05bbff9', u'transactionHash': u'0xe1a5904505d2147619b62ec10a5584132b90a79933e583f87ea912f357fc4aa9', u'type': u'mined', u'args': {u'index': u'1', u'appName': u'echo', u'creator': u'0xb85a37090868149a32d76e641f6f97e6541c82f4', u'user': u'0x78a119765d76eefd41ba9a7e4393e029b5c59c48', u'provider': u'0xffc17d45c6d65d65f85ae6e25fdd21b84d27ade9', u'callbackType': u'SubmitCallback'}, u'blockNumber': 32, u'address': u'0xc69664c69468679e5ccf01dbe524f10116c6ce64', u'logIndex': 0, u'transactionIndex': 0, u'event': u'CallbackEvent'}]</msg>
<status status="PASS" endtime="20170915 10:24:21.994" starttime="20170915 10:24:21.993"></status>
</kw>
<status status="PASS" endtime="20170915 10:24:21.994" starttime="20170915 10:22:52.893"></status>
</kw>
<msg timestamp="20170915 10:24:21.994" level="INFO">${watch_callback_events} = [{u'blockHash': u'0xf77724e9eb5d29aca8b12a315e2beecff9ce1b305d3e451284e5a979d05bbff9', u'transactionHash': u'0xe1a5904505d2147619b62ec10a5584132b90a79933e583f87ea912f357fc4aa9', u'type': u'mined', u'a...</msg>
<status status="PASS" endtime="20170915 10:24:21.994" starttime="20170915 10:22:52.893"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${watch_callback_events[0]["event"]}</arg>
<arg>CallbackEvent</arg>
</arguments>
<status status="PASS" endtime="20170915 10:24:21.994" starttime="20170915 10:24:21.994"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${watch_callback_events[0]["args"]["callbackType"]}</arg>
<arg>SubmitCallback</arg>
</arguments>
<status status="PASS" endtime="20170915 10:24:21.995" starttime="20170915 10:24:21.995"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${watch_callback_events[0]["args"]["appName"]}</arg>
<arg>echo</arg>
</arguments>
<status status="PASS" endtime="20170915 10:24:21.995" starttime="20170915 10:24:21.995"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${watch_callback_events[0]["args"]["user"]}</arg>
<arg>${USER}</arg>
</arguments>
<status status="PASS" endtime="20170915 10:24:21.996" starttime="20170915 10:24:21.995"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${watch_callback_events[0]["args"]["creator"]}</arg>
<arg>${CREATOR}</arg>
</arguments>
<status status="PASS" endtime="20170915 10:24:21.996" starttime="20170915 10:24:21.996"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${watch_callback_events[0]["args"]["provider"]}</arg>
<arg>${provider}</arg>
</arguments>
<status status="PASS" endtime="20170915 10:24:21.997" starttime="20170915 10:24:21.996"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${watch_callback_events[0]["args"]["index"]}</arg>
</arguments>
<msg timestamp="20170915 10:24:21.997" level="INFO">1</msg>
<status status="PASS" endtime="20170915 10:24:21.997" starttime="20170915 10:24:21.997"></status>
</kw>
<msg timestamp="20170915 10:24:21.997" level="INFO">${index} = 1</msg>
<status status="PASS" endtime="20170915 10:24:21.997" starttime="20170915 10:22:52.892"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${index}</arg>
</arguments>
<msg timestamp="20170915 10:24:21.998" level="INFO">1</msg>
<status status="PASS" endtime="20170915 10:24:21.998" starttime="20170915 10:24:21.998"></status>
</kw>
<kw name="Check Submit CallbackEvent Event In IexecOracleAPIimplSmartContract" library="IexecOracleAPIimplSmartContract">
<arguments>
<arg>${index}</arg>
<arg>${HELLO_WORLD_SM_ADDRESS}</arg>
</arguments>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3 min</arg>
<arg>1 min</arg>
<arg>Watch IExecCallbackEvent</arg>
</arguments>
<assign>
<var>${watch_callback_events}</var>
</assign>
<kw name="Watch IExecCallbackEvent" library="IexecOracleAPIimplSmartContract">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd iexec-oracle &amp;&amp; ./node_modules/.bin/truffle test test/rf/watchIExecCallbackEventTest.js</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${truffletest_result}</var>
</assign>
<msg timestamp="20170915 10:24:22.000" level="INFO">Starting process:
cd iexec-oracle &amp;&amp; ./node_modules/.bin/truffle test test/rf/watchIExecCallbackEventTest.js</msg>
<msg timestamp="20170915 10:24:22.002" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170915 10:24:24.619" level="INFO">Process completed.</msg>
<msg timestamp="20170915 10:24:24.620" level="INFO">${truffletest_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170915 10:24:24.620" starttime="20170915 10:24:21.999"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stderr}</arg>
</arguments>
<msg timestamp="20170915 10:24:24.620" level="INFO"></msg>
<status status="PASS" endtime="20170915 10:24:24.621" starttime="20170915 10:24:24.620"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
</arguments>
<msg timestamp="20170915 10:24:24.621" level="INFO">Using network 'development'.

IexecOracle deployed at address :0xde4c008dc250685c9f9123f5ef2b1fa8022c206c
IexecOracleAPIimpl deployed at address :0xa149fad6e19e2c0404c17d6d2e60b97127df8fe2

[0m[0m
[0m  Contract: IexecOracleAPIimpl[0m
BEGIN_LOG
[{"logIndex":1,"transactionIndex":0,"transactionHash":"0xe1a5904505d2147619b62ec10a5584132b90a79933e583f87ea912f357fc4aa9","blockHash":"0xf77724e9eb5d29aca8b12a315e2beecff9ce1b305d3e451284e5a979d05bbff9","blockNumber":32,"address":"0xffc17d45c6d65d65f85ae6e25fdd21b84d27ade9","type":"mined","event":"IexecCallbackEvent","args":{"callbackType":"SubmitCallback","user":"0x78a119765d76eefd41ba9a7e4393e029b5c59c48","provider":"0xffc17d45c6d65d65f85ae6e25fdd21b84d27ade9","creator":"0xb85a37090868149a32d76e641f6f97e6541c82f4","appName":"echo","index":"1"}}]
END_LOG
  [32m  ✓[0m[90m watch CallbackEvent[0m[31m (165ms)[0m


[92m [0m[32m 1 passing[0m[90m (218ms)[0m
</msg>
<status status="PASS" endtime="20170915 10:24:24.621" starttime="20170915 10:24:24.621"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${truffletest_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170915 10:24:24.621" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170915 10:24:24.621" starttime="20170915 10:24:24.621"></status>
</kw>
<kw name="Fetch From Right" library="String">
<doc>Returns contents of the ``string`` after the last occurrence of ``marker``.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
<arg>BEGIN_LOG</arg>
</arguments>
<assign>
<var>${after_begin_log}</var>
</assign>
<msg timestamp="20170915 10:24:24.622" level="INFO">${after_begin_log} = 
[{"logIndex":1,"transactionIndex":0,"transactionHash":"0xe1a5904505d2147619b62ec10a5584132b90a79933e583f87ea912f357fc4aa9","blockHash":"0xf77724e9eb5d29aca8b12a315e2beecff9ce1b305d3e451284e5a979d05bb...</msg>
<status status="PASS" endtime="20170915 10:24:24.622" starttime="20170915 10:24:24.622"></status>
</kw>
<kw name="Fetch From Left" library="String">
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<arguments>
<arg>${after_begin_log}</arg>
<arg>END_LOG</arg>
</arguments>
<assign>
<var>${before_end_log}</var>
</assign>
<msg timestamp="20170915 10:24:24.622" level="INFO">${before_end_log} = 
[{"logIndex":1,"transactionIndex":0,"transactionHash":"0xe1a5904505d2147619b62ec10a5584132b90a79933e583f87ea912f357fc4aa9","blockHash":"0xf77724e9eb5d29aca8b12a315e2beecff9ce1b305d3e451284e5a979d05bb...</msg>
<status status="PASS" endtime="20170915 10:24:24.622" starttime="20170915 10:24:24.622"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads('''${before_end_log}''')</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${events}</var>
</assign>
<msg timestamp="20170915 10:24:24.623" level="INFO">${events} = [{u'blockHash': u'0xf77724e9eb5d29aca8b12a315e2beecff9ce1b305d3e451284e5a979d05bbff9', u'transactionHash': u'0xe1a5904505d2147619b62ec10a5584132b90a79933e583f87ea912f357fc4aa9', u'type': u'mined', u'a...</msg>
<status status="PASS" endtime="20170915 10:24:24.623" starttime="20170915 10:24:24.622"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${events}</arg>
</arguments>
<msg timestamp="20170915 10:24:24.623" level="INFO">[{u'blockHash': u'0xf77724e9eb5d29aca8b12a315e2beecff9ce1b305d3e451284e5a979d05bbff9', u'transactionHash': u'0xe1a5904505d2147619b62ec10a5584132b90a79933e583f87ea912f357fc4aa9', u'type': u'mined', u'args': {u'index': u'1', u'appName': u'echo', u'creator': u'0xb85a37090868149a32d76e641f6f97e6541c82f4', u'user': u'0x78a119765d76eefd41ba9a7e4393e029b5c59c48', u'provider': u'0xffc17d45c6d65d65f85ae6e25fdd21b84d27ade9', u'callbackType': u'SubmitCallback'}, u'blockNumber': 32, u'address': u'0xffc17d45c6d65d65f85ae6e25fdd21b84d27ade9', u'logIndex': 1, u'transactionIndex': 0, u'event': u'IexecCallbackEvent'}]</msg>
<status status="PASS" endtime="20170915 10:24:24.623" starttime="20170915 10:24:24.623"></status>
</kw>
<status status="PASS" endtime="20170915 10:24:24.623" starttime="20170915 10:24:21.999"></status>
</kw>
<msg timestamp="20170915 10:24:24.623" level="INFO">${watch_callback_events} = [{u'blockHash': u'0xf77724e9eb5d29aca8b12a315e2beecff9ce1b305d3e451284e5a979d05bbff9', u'transactionHash': u'0xe1a5904505d2147619b62ec10a5584132b90a79933e583f87ea912f357fc4aa9', u'type': u'mined', u'a...</msg>
<status status="PASS" endtime="20170915 10:24:24.623" starttime="20170915 10:24:21.999"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${watch_callback_events[0]["event"]}</arg>
<arg>IexecCallbackEvent</arg>
</arguments>
<status status="PASS" endtime="20170915 10:24:24.624" starttime="20170915 10:24:24.624"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${watch_callback_events[0]["args"]["callbackType"]}</arg>
<arg>SubmitCallback</arg>
</arguments>
<status status="PASS" endtime="20170915 10:24:24.624" starttime="20170915 10:24:24.624"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${watch_callback_events[0]["args"]["appName"]}</arg>
<arg>echo</arg>
</arguments>
<status status="PASS" endtime="20170915 10:24:24.625" starttime="20170915 10:24:24.624"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${watch_callback_events[0]["args"]["user"]}</arg>
<arg>${USER}</arg>
</arguments>
<status status="PASS" endtime="20170915 10:24:24.625" starttime="20170915 10:24:24.625"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${watch_callback_events[0]["args"]["creator"]}</arg>
<arg>${CREATOR}</arg>
</arguments>
<status status="PASS" endtime="20170915 10:24:24.625" starttime="20170915 10:24:24.625"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${watch_callback_events[0]["args"]["provider"]}</arg>
<arg>${provider}</arg>
</arguments>
<status status="PASS" endtime="20170915 10:24:24.626" starttime="20170915 10:24:24.626"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${watch_callback_events[0]["args"]["index"]}</arg>
<arg>${index}</arg>
</arguments>
<status status="PASS" endtime="20170915 10:24:24.626" starttime="20170915 10:24:24.626"></status>
</kw>
<status status="PASS" endtime="20170915 10:24:24.626" starttime="20170915 10:24:21.998"></status>
</kw>
<kw name="Check Work Is Recorded in IexceOracleSmartContract After Submit" library="IexceOracleSmartContract">
<arguments>
<arg>${index}</arg>
<arg>${HELLO_WORLD_SM_ADDRESS}</arg>
</arguments>
<kw name="Get Work" library="IexceOracleSmartContract">
<arguments>
<arg>${USER}</arg>
<arg>${provider}</arg>
<arg>${index}</arg>
</arguments>
<assign>
<var>@{work_result}</var>
</assign>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>sed -i "s/.*getWork.call(.*/return aIexecOracleInstance.getWork.call('${user}','${provider}',\\"${index}\\");/g" iexec-oracle/test/rf/getWorkInIexecOracle.js</arg>
</arguments>
<msg timestamp="20170915 10:24:24.629" level="INFO">Running command 'sed -i "s/.*getWork.call(.*/return aIexecOracleInstance.getWork.call('0x78a119765d76eefd41ba9a7e4393e029b5c59c48','0xffc17d45c6d65d65f85ae6e25fdd21b84d27ade9',\"1\");/g" iexec-oracle/test/rf/getWorkInIexecOracle.js 2&gt;&amp;1'.</msg>
<status status="PASS" endtime="20170915 10:24:24.642" starttime="20170915 10:24:24.628"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd iexec-oracle &amp;&amp; ./node_modules/.bin/truffle test test/rf/getWorkInIexecOracle.js</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${truffletest_result}</var>
</assign>
<msg timestamp="20170915 10:24:24.643" level="INFO">Starting process:
cd iexec-oracle &amp;&amp; ./node_modules/.bin/truffle test test/rf/getWorkInIexecOracle.js</msg>
<msg timestamp="20170915 10:24:24.647" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170915 10:24:27.100" level="INFO">Process completed.</msg>
<msg timestamp="20170915 10:24:27.100" level="INFO">${truffletest_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170915 10:24:27.100" starttime="20170915 10:24:24.642"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stderr}</arg>
</arguments>
<msg timestamp="20170915 10:24:27.101" level="INFO"></msg>
<status status="PASS" endtime="20170915 10:24:27.101" starttime="20170915 10:24:27.100"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
</arguments>
<msg timestamp="20170915 10:24:27.101" level="INFO">Using network 'development'.

IexecOracle deployed at address :0x3fa641099b1dbc27d3be3aa9282fe5becf45b867
IexecOracleAPIimpl deployed at address :0xc4d7994407735a1efcab92a330ecf027e5d7d48a

[0m[0m
[0m  Contract: IexecOracle[0m
BEGIN_LOG
workuid:3e59ed6f-bade-4caf-9ab1-c3c785372e97
name:echo
timestamp:1505471061
status:4
stdout:HelloWorld!!!

stderr:
END_LOG
  [32m  ✓[0m[90m get a work[0m[31m (187ms)[0m


[92m [0m[32m 1 passing[0m[90m (240ms)[0m
</msg>
<status status="PASS" endtime="20170915 10:24:27.101" starttime="20170915 10:24:27.101"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${truffletest_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170915 10:24:27.102" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170915 10:24:27.102" starttime="20170915 10:24:27.101"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
<arg>workuid:(?P&lt;workuid&gt;.*)</arg>
<arg>workuid</arg>
</arguments>
<assign>
<var>@{workuid}</var>
</assign>
<msg timestamp="20170915 10:24:27.102" level="INFO">@{workuid} = [ 3e59ed6f-bade-4caf-9ab1-c3c785372e97 ]</msg>
<status status="PASS" endtime="20170915 10:24:27.102" starttime="20170915 10:24:27.102"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
<arg>name:(?P&lt;name&gt;.*)</arg>
<arg>name</arg>
</arguments>
<assign>
<var>@{name}</var>
</assign>
<msg timestamp="20170915 10:24:27.103" level="INFO">@{name} = [ echo ]</msg>
<status status="PASS" endtime="20170915 10:24:27.103" starttime="20170915 10:24:27.102"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
<arg>timestamp:(?P&lt;timestamp&gt;.*)</arg>
<arg>timestamp</arg>
</arguments>
<assign>
<var>@{timestamp}</var>
</assign>
<msg timestamp="20170915 10:24:27.103" level="INFO">@{timestamp} = [ 1505471061 ]</msg>
<status status="PASS" endtime="20170915 10:24:27.103" starttime="20170915 10:24:27.103"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
<arg>status:(?P&lt;status&gt;.*)</arg>
<arg>status</arg>
</arguments>
<assign>
<var>@{status}</var>
</assign>
<msg timestamp="20170915 10:24:27.104" level="INFO">@{status} = [ 4 ]</msg>
<status status="PASS" endtime="20170915 10:24:27.104" starttime="20170915 10:24:27.103"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
<arg>stdout:(?P&lt;stdout&gt;.*)</arg>
<arg>stdout</arg>
</arguments>
<assign>
<var>@{stdout}</var>
</assign>
<msg timestamp="20170915 10:24:27.104" level="INFO">@{stdout} = [ HelloWorld!!! ]</msg>
<status status="PASS" endtime="20170915 10:24:27.104" starttime="20170915 10:24:27.104"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
<arg>stderr:(?P&lt;stderr&gt;.*)</arg>
<arg>stderr</arg>
</arguments>
<assign>
<var>@{stderr}</var>
</assign>
<msg timestamp="20170915 10:24:27.105" level="INFO">@{stderr} = [  ]</msg>
<status status="PASS" endtime="20170915 10:24:27.105" starttime="20170915 10:24:27.104"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>@{workuid}[0]</arg>
<arg>@{name}[0]</arg>
<arg>@{timestamp}[0]</arg>
<arg>@{status}[0]</arg>
<arg>@{stdout}[0]</arg>
<arg>@{stderr}[0]</arg>
</arguments>
<assign>
<var>@{work_result}</var>
</assign>
<msg timestamp="20170915 10:24:27.105" level="INFO">@{work_result} = [ 3e59ed6f-bade-4caf-9ab1-c3c785372e97 | echo | 1505471061 | 4 | HelloWorld!!! |  ]</msg>
<status status="PASS" endtime="20170915 10:24:27.105" starttime="20170915 10:24:27.105"></status>
</kw>
<msg timestamp="20170915 10:24:27.106" level="INFO">@{work_result} = [ 3e59ed6f-bade-4caf-9ab1-c3c785372e97 | echo | 1505471061 | 4 | HelloWorld!!! |  ]</msg>
<status status="PASS" endtime="20170915 10:24:27.106" starttime="20170915 10:24:24.627"></status>
</kw>
<kw name="Get Work Uid" library="IexceOracleSmartContract">
<arguments>
<arg>${USER}</arg>
<arg>${provider}</arg>
<arg>${index}</arg>
</arguments>
<assign>
<var>${workuid}</var>
</assign>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>sed -i "s/.*getWorkUid.call(.*/return aIexecOracleInstance.getWorkUid.call('${user}','${provider}',\\"${index}\\");/g" iexec-oracle/test/rf/getWorkUidInIexecOracle.js</arg>
</arguments>
<msg timestamp="20170915 10:24:27.108" level="INFO">Running command 'sed -i "s/.*getWorkUid.call(.*/return aIexecOracleInstance.getWorkUid.call('0x78a119765d76eefd41ba9a7e4393e029b5c59c48','0xffc17d45c6d65d65f85ae6e25fdd21b84d27ade9',\"1\");/g" iexec-oracle/test/rf/getWorkUidInIexecOracle.js 2&gt;&amp;1'.</msg>
<status status="PASS" endtime="20170915 10:24:27.122" starttime="20170915 10:24:27.107"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd iexec-oracle &amp;&amp; ./node_modules/.bin/truffle test test/rf/getWorkUidInIexecOracle.js</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${truffletest_result}</var>
</assign>
<msg timestamp="20170915 10:24:27.123" level="INFO">Starting process:
cd iexec-oracle &amp;&amp; ./node_modules/.bin/truffle test test/rf/getWorkUidInIexecOracle.js</msg>
<msg timestamp="20170915 10:24:27.125" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170915 10:24:29.718" level="INFO">Process completed.</msg>
<msg timestamp="20170915 10:24:29.718" level="INFO">${truffletest_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170915 10:24:29.718" starttime="20170915 10:24:27.122"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stderr}</arg>
</arguments>
<msg timestamp="20170915 10:24:29.719" level="INFO"></msg>
<status status="PASS" endtime="20170915 10:24:29.719" starttime="20170915 10:24:29.718"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
</arguments>
<msg timestamp="20170915 10:24:29.719" level="INFO">Using network 'development'.

IexecOracle deployed at address :0x562c521354f2f01f821d155c07e155825f36e150
IexecOracleAPIimpl deployed at address :0x05b18a4947a5ec3a8e1a5d876b8a92a8ab0f7574

[0m[0m
[0m  Contract: IexecOracle[0m
BEGIN_LOG
workuid:3e59ed6f-bade-4caf-9ab1-c3c785372e97
END_LOG
  [32m  ✓[0m[90m get a work[0m[31m (128ms)[0m


[92m [0m[32m 1 passing[0m[90m (181ms)[0m
</msg>
<status status="PASS" endtime="20170915 10:24:29.719" starttime="20170915 10:24:29.719"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${truffletest_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170915 10:24:29.720" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170915 10:24:29.720" starttime="20170915 10:24:29.719"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
<arg>workuid:(?P&lt;workuid&gt;.*)</arg>
<arg>workuid</arg>
</arguments>
<assign>
<var>@{workuid}</var>
</assign>
<msg timestamp="20170915 10:24:29.720" level="INFO">@{workuid} = [ 3e59ed6f-bade-4caf-9ab1-c3c785372e97 ]</msg>
<status status="PASS" endtime="20170915 10:24:29.720" starttime="20170915 10:24:29.720"></status>
</kw>
<msg timestamp="20170915 10:24:29.720" level="INFO">${workuid} = 3e59ed6f-bade-4caf-9ab1-c3c785372e97</msg>
<status status="PASS" endtime="20170915 10:24:29.720" starttime="20170915 10:24:27.106"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${workuid}</arg>
<arg>@{work_result}[0]</arg>
</arguments>
<status status="PASS" endtime="20170915 10:24:29.721" starttime="20170915 10:24:29.721"></status>
</kw>
<kw name="Get Work Name" library="IexceOracleSmartContract">
<arguments>
<arg>${USER}</arg>
<arg>${provider}</arg>
<arg>${index}</arg>
</arguments>
<assign>
<var>${work_name}</var>
</assign>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>sed -i "s/.*getWorkName.call(.*/return aIexecOracleInstance.getWorkName.call('${user}','${provider}',\\"${index}\\");/g" iexec-oracle/test/rf/getWorkNameInIexecOracle.js</arg>
</arguments>
<msg timestamp="20170915 10:24:29.722" level="INFO">Running command 'sed -i "s/.*getWorkName.call(.*/return aIexecOracleInstance.getWorkName.call('0x78a119765d76eefd41ba9a7e4393e029b5c59c48','0xffc17d45c6d65d65f85ae6e25fdd21b84d27ade9',\"1\");/g" iexec-oracle/test/rf/getWorkNameInIexecOracle.js 2&gt;&amp;1'.</msg>
<status status="PASS" endtime="20170915 10:24:29.733" starttime="20170915 10:24:29.721"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd iexec-oracle &amp;&amp; ./node_modules/.bin/truffle test test/rf/getWorkNameInIexecOracle.js</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${truffletest_result}</var>
</assign>
<msg timestamp="20170915 10:24:29.734" level="INFO">Starting process:
cd iexec-oracle &amp;&amp; ./node_modules/.bin/truffle test test/rf/getWorkNameInIexecOracle.js</msg>
<msg timestamp="20170915 10:24:29.737" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170915 10:24:32.047" level="INFO">Process completed.</msg>
<msg timestamp="20170915 10:24:32.047" level="INFO">${truffletest_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170915 10:24:32.047" starttime="20170915 10:24:29.734"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stderr}</arg>
</arguments>
<msg timestamp="20170915 10:24:32.048" level="INFO"></msg>
<status status="PASS" endtime="20170915 10:24:32.048" starttime="20170915 10:24:32.048"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
</arguments>
<msg timestamp="20170915 10:24:32.049" level="INFO">Using network 'development'.

IexecOracle deployed at address :0x8b2d2d85fb21d432a341159231272b17f81fdb81
IexecOracleAPIimpl deployed at address :0x447b73b35504c42226e9374d436e300257729fdd

[0m[0m
[0m  Contract: IexecOracle[0m
BEGIN_LOG
name:echo
END_LOG
  [32m  ✓[0m[90m get a work[0m[33m (63ms)[0m


[92m [0m[32m 1 passing[0m[90m (108ms)[0m
</msg>
<status status="PASS" endtime="20170915 10:24:32.049" starttime="20170915 10:24:32.048"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${truffletest_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170915 10:24:32.049" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170915 10:24:32.049" starttime="20170915 10:24:32.049"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
<arg>name:(?P&lt;name&gt;.*)</arg>
<arg>name</arg>
</arguments>
<assign>
<var>@{name}</var>
</assign>
<msg timestamp="20170915 10:24:32.050" level="INFO">@{name} = [ echo ]</msg>
<status status="PASS" endtime="20170915 10:24:32.050" starttime="20170915 10:24:32.049"></status>
</kw>
<msg timestamp="20170915 10:24:32.050" level="INFO">${work_name} = echo</msg>
<status status="PASS" endtime="20170915 10:24:32.050" starttime="20170915 10:24:29.721"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${work_name}</arg>
<arg>@{work_result}[1]</arg>
</arguments>
<status status="PASS" endtime="20170915 10:24:32.050" starttime="20170915 10:24:32.050"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${work_name}</arg>
<arg>echo</arg>
</arguments>
<status status="PASS" endtime="20170915 10:24:32.051" starttime="20170915 10:24:32.050"></status>
</kw>
<kw name="Get Work Timestamp" library="IexceOracleSmartContract">
<arguments>
<arg>${USER}</arg>
<arg>${provider}</arg>
<arg>${index}</arg>
</arguments>
<assign>
<var>${work_timestamp}</var>
</assign>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>sed -i "s/.*getWorkTimestamp.call(.*/return aIexecOracleInstance.getWorkTimestamp.call('${user}','${provider}',\\"${index}\\");/g" iexec-oracle/test/rf/getWorkTimestampInIexecOracle.js</arg>
</arguments>
<msg timestamp="20170915 10:24:32.052" level="INFO">Running command 'sed -i "s/.*getWorkTimestamp.call(.*/return aIexecOracleInstance.getWorkTimestamp.call('0x78a119765d76eefd41ba9a7e4393e029b5c59c48','0xffc17d45c6d65d65f85ae6e25fdd21b84d27ade9',\"1\");/g" iexec-oracle/test/rf/getWorkTimestampInIexecOracle.js 2&gt;&amp;1'.</msg>
<status status="PASS" endtime="20170915 10:24:32.068" starttime="20170915 10:24:32.051"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd iexec-oracle &amp;&amp; ./node_modules/.bin/truffle test test/rf/getWorkTimestampInIexecOracle.js</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${truffletest_result}</var>
</assign>
<msg timestamp="20170915 10:24:32.069" level="INFO">Starting process:
cd iexec-oracle &amp;&amp; ./node_modules/.bin/truffle test test/rf/getWorkTimestampInIexecOracle.js</msg>
<msg timestamp="20170915 10:24:32.072" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170915 10:24:34.406" level="INFO">Process completed.</msg>
<msg timestamp="20170915 10:24:34.406" level="INFO">${truffletest_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170915 10:24:34.406" starttime="20170915 10:24:32.068"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stderr}</arg>
</arguments>
<msg timestamp="20170915 10:24:34.407" level="INFO"></msg>
<status status="PASS" endtime="20170915 10:24:34.407" starttime="20170915 10:24:34.407"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
</arguments>
<msg timestamp="20170915 10:24:34.407" level="INFO">Using network 'development'.

IexecOracle deployed at address :0x69f64c6eacd890a20da97d217f4126e11e317b36
IexecOracleAPIimpl deployed at address :0x6c58767079fee1e02c6f206e5d13b51609762170

[0m[0m
[0m  Contract: IexecOracle[0m
BEGIN_LOG
timestamp:1505471061
END_LOG
  [32m  ✓[0m[90m get a work[0m[33m (41ms)[0m


[92m [0m[32m 1 passing[0m[90m (84ms)[0m
</msg>
<status status="PASS" endtime="20170915 10:24:34.408" starttime="20170915 10:24:34.407"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${truffletest_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170915 10:24:34.408" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170915 10:24:34.408" starttime="20170915 10:24:34.408"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
<arg>timestamp:(?P&lt;timestamp&gt;.*)</arg>
<arg>timestamp</arg>
</arguments>
<assign>
<var>@{timestamp}</var>
</assign>
<msg timestamp="20170915 10:24:34.409" level="INFO">@{timestamp} = [ 1505471061 ]</msg>
<status status="PASS" endtime="20170915 10:24:34.409" starttime="20170915 10:24:34.408"></status>
</kw>
<msg timestamp="20170915 10:24:34.409" level="INFO">${work_timestamp} = 1505471061</msg>
<status status="PASS" endtime="20170915 10:24:34.409" starttime="20170915 10:24:32.051"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${work_timestamp}</arg>
<arg>@{work_result}[2]</arg>
</arguments>
<status status="PASS" endtime="20170915 10:24:34.409" starttime="20170915 10:24:34.409"></status>
</kw>
<kw name="Get Work Status" library="IexceOracleSmartContract">
<arguments>
<arg>${USER}</arg>
<arg>${provider}</arg>
<arg>${index}</arg>
</arguments>
<assign>
<var>${work_status}</var>
</assign>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>sed -i "s/.*getWorkStatus.call(.*/return aIexecOracleInstance.getWorkStatus.call('${user}','${provider}',\\"${index}\\");/g" iexec-oracle/test/rf/getWorkStatusInIexecOracle.js</arg>
</arguments>
<msg timestamp="20170915 10:24:34.411" level="INFO">Running command 'sed -i "s/.*getWorkStatus.call(.*/return aIexecOracleInstance.getWorkStatus.call('0x78a119765d76eefd41ba9a7e4393e029b5c59c48','0xffc17d45c6d65d65f85ae6e25fdd21b84d27ade9',\"1\");/g" iexec-oracle/test/rf/getWorkStatusInIexecOracle.js 2&gt;&amp;1'.</msg>
<status status="PASS" endtime="20170915 10:24:34.421" starttime="20170915 10:24:34.410"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd iexec-oracle &amp;&amp; ./node_modules/.bin/truffle test test/rf/getWorkStatusInIexecOracle.js</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${truffletest_result}</var>
</assign>
<msg timestamp="20170915 10:24:34.422" level="INFO">Starting process:
cd iexec-oracle &amp;&amp; ./node_modules/.bin/truffle test test/rf/getWorkStatusInIexecOracle.js</msg>
<msg timestamp="20170915 10:24:34.425" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170915 10:24:37.138" level="INFO">Process completed.</msg>
<msg timestamp="20170915 10:24:37.139" level="INFO">${truffletest_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170915 10:24:37.139" starttime="20170915 10:24:34.422"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stderr}</arg>
</arguments>
<msg timestamp="20170915 10:24:37.140" level="INFO"></msg>
<status status="PASS" endtime="20170915 10:24:37.140" starttime="20170915 10:24:37.139"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
</arguments>
<msg timestamp="20170915 10:24:37.140" level="INFO">Using network 'development'.

IexecOracle deployed at address :0xbedf738fc1b900aae072221ddef25d7f75989233
IexecOracleAPIimpl deployed at address :0x5c2ac700b983f479a566666e457c7470883ff88f

[0m[0m
[0m  Contract: IexecOracle[0m
BEGIN_LOG
status:4
END_LOG
  [32m  ✓[0m[90m get a work[0m


[92m [0m[32m 1 passing[0m[90m (71ms)[0m
</msg>
<status status="PASS" endtime="20170915 10:24:37.140" starttime="20170915 10:24:37.140"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${truffletest_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170915 10:24:37.141" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170915 10:24:37.141" starttime="20170915 10:24:37.140"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
<arg>status:(?P&lt;status&gt;.*)</arg>
<arg>status</arg>
</arguments>
<assign>
<var>@{status}</var>
</assign>
<msg timestamp="20170915 10:24:37.141" level="INFO">@{status} = [ 4 ]</msg>
<status status="PASS" endtime="20170915 10:24:37.141" starttime="20170915 10:24:37.141"></status>
</kw>
<msg timestamp="20170915 10:24:37.141" level="INFO">${work_status} = 4</msg>
<status status="PASS" endtime="20170915 10:24:37.141" starttime="20170915 10:24:34.409"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${work_status}</arg>
<arg>@{work_result}[3]</arg>
</arguments>
<status status="PASS" endtime="20170915 10:24:37.142" starttime="20170915 10:24:37.142"></status>
</kw>
<kw name="Get Work Stdout" library="IexceOracleSmartContract">
<arguments>
<arg>${USER}</arg>
<arg>${provider}</arg>
<arg>${index}</arg>
</arguments>
<assign>
<var>${work_stdout}</var>
</assign>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>sed -i "s/.*getWorkStdout.call(.*/return aIexecOracleInstance.getWorkStdout.call('${user}','${provider}',\\"${index}\\");/g" iexec-oracle/test/rf/getWorkStdoutInIexecOracle.js</arg>
</arguments>
<msg timestamp="20170915 10:24:37.144" level="INFO">Running command 'sed -i "s/.*getWorkStdout.call(.*/return aIexecOracleInstance.getWorkStdout.call('0x78a119765d76eefd41ba9a7e4393e029b5c59c48','0xffc17d45c6d65d65f85ae6e25fdd21b84d27ade9',\"1\");/g" iexec-oracle/test/rf/getWorkStdoutInIexecOracle.js 2&gt;&amp;1'.</msg>
<status status="PASS" endtime="20170915 10:24:37.159" starttime="20170915 10:24:37.142"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd iexec-oracle &amp;&amp; ./node_modules/.bin/truffle test test/rf/getWorkStdoutInIexecOracle.js</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${truffletest_result}</var>
</assign>
<msg timestamp="20170915 10:24:37.161" level="INFO">Starting process:
cd iexec-oracle &amp;&amp; ./node_modules/.bin/truffle test test/rf/getWorkStdoutInIexecOracle.js</msg>
<msg timestamp="20170915 10:24:37.164" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170915 10:24:40.031" level="INFO">Process completed.</msg>
<msg timestamp="20170915 10:24:40.032" level="INFO">${truffletest_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170915 10:24:40.032" starttime="20170915 10:24:37.160"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stderr}</arg>
</arguments>
<msg timestamp="20170915 10:24:40.032" level="INFO"></msg>
<status status="PASS" endtime="20170915 10:24:40.033" starttime="20170915 10:24:40.032"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
</arguments>
<msg timestamp="20170915 10:24:40.033" level="INFO">Using network 'development'.

IexecOracle deployed at address :0x87bc546943720ea861fb3e325bc2edbfc39916c5
IexecOracleAPIimpl deployed at address :0x4d85608d1926beba71f9b7d29facd81180fe0a2e

[0m[0m
[0m  Contract: IexecOracle[0m
BEGIN_LOG
stdout:HelloWorld!!!

END_LOG
  [32m  ✓[0m[90m get a work[0m[31m (155ms)[0m


[92m [0m[32m 1 passing[0m[90m (198ms)[0m
</msg>
<status status="PASS" endtime="20170915 10:24:40.033" starttime="20170915 10:24:40.033"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${truffletest_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170915 10:24:40.033" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170915 10:24:40.033" starttime="20170915 10:24:40.033"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
<arg>stdout:(?P&lt;stdout&gt;.*)</arg>
<arg>stdout</arg>
</arguments>
<assign>
<var>@{stdout}</var>
</assign>
<msg timestamp="20170915 10:24:40.034" level="INFO">@{stdout} = [ HelloWorld!!! ]</msg>
<status status="PASS" endtime="20170915 10:24:40.034" starttime="20170915 10:24:40.034"></status>
</kw>
<msg timestamp="20170915 10:24:40.034" level="INFO">${work_stdout} = HelloWorld!!!</msg>
<status status="PASS" endtime="20170915 10:24:40.034" starttime="20170915 10:24:37.142"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${work_stdout}</arg>
<arg>@{work_result}[4]</arg>
</arguments>
<status status="PASS" endtime="20170915 10:24:40.035" starttime="20170915 10:24:40.034"></status>
</kw>
<kw name="Get Work Stderr" library="IexceOracleSmartContract">
<arguments>
<arg>${USER}</arg>
<arg>${provider}</arg>
<arg>${index}</arg>
</arguments>
<assign>
<var>${work_stderr}</var>
</assign>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>sed -i "s/.*getWorkStderr.call(.*/return aIexecOracleInstance.getWorkStderr.call('${user}','${provider}',\\"${index}\\");/g" iexec-oracle/test/rf/getWorkStderrInIexecOracle.js</arg>
</arguments>
<msg timestamp="20170915 10:24:40.036" level="INFO">Running command 'sed -i "s/.*getWorkStderr.call(.*/return aIexecOracleInstance.getWorkStderr.call('0x78a119765d76eefd41ba9a7e4393e029b5c59c48','0xffc17d45c6d65d65f85ae6e25fdd21b84d27ade9',\"1\");/g" iexec-oracle/test/rf/getWorkStderrInIexecOracle.js 2&gt;&amp;1'.</msg>
<status status="PASS" endtime="20170915 10:24:40.050" starttime="20170915 10:24:40.035"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd iexec-oracle &amp;&amp; ./node_modules/.bin/truffle test test/rf/getWorkStderrInIexecOracle.js</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${truffletest_result}</var>
</assign>
<msg timestamp="20170915 10:24:40.051" level="INFO">Starting process:
cd iexec-oracle &amp;&amp; ./node_modules/.bin/truffle test test/rf/getWorkStderrInIexecOracle.js</msg>
<msg timestamp="20170915 10:24:40.054" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170915 10:24:42.529" level="INFO">Process completed.</msg>
<msg timestamp="20170915 10:24:42.529" level="INFO">${truffletest_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170915 10:24:42.529" starttime="20170915 10:24:40.051"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stderr}</arg>
</arguments>
<msg timestamp="20170915 10:24:42.530" level="INFO"></msg>
<status status="PASS" endtime="20170915 10:24:42.530" starttime="20170915 10:24:42.529"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
</arguments>
<msg timestamp="20170915 10:24:42.531" level="INFO">Using network 'development'.

IexecOracle deployed at address :0x35fc727dc814c3f76617e5afcba33c4c26ed7296
IexecOracleAPIimpl deployed at address :0x243d5923dc07f28d617900594823cc4ac5380752

[0m[0m
[0m  Contract: IexecOracle[0m
BEGIN_LOG
stderr:
END_LOG
  [32m  ✓[0m[90m get a work[0m[33m (70ms)[0m


[92m [0m[32m 1 passing[0m[90m (122ms)[0m
</msg>
<status status="PASS" endtime="20170915 10:24:42.531" starttime="20170915 10:24:42.531"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${truffletest_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170915 10:24:42.531" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170915 10:24:42.531" starttime="20170915 10:24:42.531"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
<arg>stderr:(?P&lt;stderr&gt;.*)</arg>
<arg>stderr</arg>
</arguments>
<assign>
<var>@{stderr}</var>
</assign>
<msg timestamp="20170915 10:24:42.532" level="INFO">@{stderr} = [  ]</msg>
<status status="PASS" endtime="20170915 10:24:42.532" starttime="20170915 10:24:42.531"></status>
</kw>
<msg timestamp="20170915 10:24:42.532" level="INFO">${work_stderr} = </msg>
<status status="PASS" endtime="20170915 10:24:42.532" starttime="20170915 10:24:40.035"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${work_stderr}</arg>
<arg>@{work_result}[5]</arg>
</arguments>
<status status="PASS" endtime="20170915 10:24:42.532" starttime="20170915 10:24:42.532"></status>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<doc>Verifies that the given item is empty.</doc>
<arguments>
<arg>${work_stderr}</arg>
</arguments>
<msg timestamp="20170915 10:24:42.533" level="INFO">Length is 0</msg>
<status status="PASS" endtime="20170915 10:24:42.533" starttime="20170915 10:24:42.533"></status>
</kw>
<status status="PASS" endtime="20170915 10:24:42.533" starttime="20170915 10:24:24.627"></status>
</kw>
<kw name="Get Work Status" library="IexceOracleSmartContract">
<arguments>
<arg>${USER}</arg>
<arg>${HELLO_WORLD_SM_ADDRESS}</arg>
<arg>${index}</arg>
</arguments>
<assign>
<var>${work_status}</var>
</assign>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>sed -i "s/.*getWorkStatus.call(.*/return aIexecOracleInstance.getWorkStatus.call('${user}','${provider}',\\"${index}\\");/g" iexec-oracle/test/rf/getWorkStatusInIexecOracle.js</arg>
</arguments>
<msg timestamp="20170915 10:24:42.535" level="INFO">Running command 'sed -i "s/.*getWorkStatus.call(.*/return aIexecOracleInstance.getWorkStatus.call('0x78a119765d76eefd41ba9a7e4393e029b5c59c48','0xffc17d45c6d65d65f85ae6e25fdd21b84d27ade9',\"1\");/g" iexec-oracle/test/rf/getWorkStatusInIexecOracle.js 2&gt;&amp;1'.</msg>
<status status="PASS" endtime="20170915 10:24:42.550" starttime="20170915 10:24:42.534"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd iexec-oracle &amp;&amp; ./node_modules/.bin/truffle test test/rf/getWorkStatusInIexecOracle.js</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${truffletest_result}</var>
</assign>
<msg timestamp="20170915 10:24:42.551" level="INFO">Starting process:
cd iexec-oracle &amp;&amp; ./node_modules/.bin/truffle test test/rf/getWorkStatusInIexecOracle.js</msg>
<msg timestamp="20170915 10:24:42.555" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170915 10:24:44.871" level="INFO">Process completed.</msg>
<msg timestamp="20170915 10:24:44.872" level="INFO">${truffletest_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170915 10:24:44.872" starttime="20170915 10:24:42.551"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stderr}</arg>
</arguments>
<msg timestamp="20170915 10:24:44.872" level="INFO"></msg>
<status status="PASS" endtime="20170915 10:24:44.872" starttime="20170915 10:24:44.872"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
</arguments>
<msg timestamp="20170915 10:24:44.873" level="INFO">Using network 'development'.

IexecOracle deployed at address :0x8352588dd36a4118e5b44fb04fd89e8fe94716b6
IexecOracleAPIimpl deployed at address :0xd26af34da653a5fb1e3ae17d561aae2cdbe58a36

[0m[0m
[0m  Contract: IexecOracle[0m
BEGIN_LOG
status:4
END_LOG
  [32m  ✓[0m[90m get a work[0m[33m (64ms)[0m


[92m [0m[32m 1 passing[0m[90m (105ms)[0m
</msg>
<status status="PASS" endtime="20170915 10:24:44.873" starttime="20170915 10:24:44.872"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${truffletest_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170915 10:24:44.873" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170915 10:24:44.873" starttime="20170915 10:24:44.873"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
<arg>status:(?P&lt;status&gt;.*)</arg>
<arg>status</arg>
</arguments>
<assign>
<var>@{status}</var>
</assign>
<msg timestamp="20170915 10:24:44.874" level="INFO">@{status} = [ 4 ]</msg>
<status status="PASS" endtime="20170915 10:24:44.874" starttime="20170915 10:24:44.873"></status>
</kw>
<msg timestamp="20170915 10:24:44.874" level="INFO">${work_status} = 4</msg>
<status status="PASS" endtime="20170915 10:24:44.874" starttime="20170915 10:24:42.533"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${work_status}</arg>
<arg>4</arg>
</arguments>
<status status="PASS" endtime="20170915 10:24:44.875" starttime="20170915 10:24:44.874"></status>
</kw>
<kw name="Get Work Uid" library="IexceOracleSmartContract">
<arguments>
<arg>${USER}</arg>
<arg>${HELLO_WORLD_SM_ADDRESS}</arg>
<arg>${index}</arg>
</arguments>
<assign>
<var>${workuid}</var>
</assign>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>sed -i "s/.*getWorkUid.call(.*/return aIexecOracleInstance.getWorkUid.call('${user}','${provider}',\\"${index}\\");/g" iexec-oracle/test/rf/getWorkUidInIexecOracle.js</arg>
</arguments>
<msg timestamp="20170915 10:24:44.877" level="INFO">Running command 'sed -i "s/.*getWorkUid.call(.*/return aIexecOracleInstance.getWorkUid.call('0x78a119765d76eefd41ba9a7e4393e029b5c59c48','0xffc17d45c6d65d65f85ae6e25fdd21b84d27ade9',\"1\");/g" iexec-oracle/test/rf/getWorkUidInIexecOracle.js 2&gt;&amp;1'.</msg>
<status status="PASS" endtime="20170915 10:24:44.888" starttime="20170915 10:24:44.875"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd iexec-oracle &amp;&amp; ./node_modules/.bin/truffle test test/rf/getWorkUidInIexecOracle.js</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${truffletest_result}</var>
</assign>
<msg timestamp="20170915 10:24:44.889" level="INFO">Starting process:
cd iexec-oracle &amp;&amp; ./node_modules/.bin/truffle test test/rf/getWorkUidInIexecOracle.js</msg>
<msg timestamp="20170915 10:24:44.892" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170915 10:24:47.357" level="INFO">Process completed.</msg>
<msg timestamp="20170915 10:24:47.357" level="INFO">${truffletest_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170915 10:24:47.357" starttime="20170915 10:24:44.888"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stderr}</arg>
</arguments>
<msg timestamp="20170915 10:24:47.358" level="INFO"></msg>
<status status="PASS" endtime="20170915 10:24:47.358" starttime="20170915 10:24:47.358"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
</arguments>
<msg timestamp="20170915 10:24:47.359" level="INFO">Using network 'development'.

IexecOracle deployed at address :0x156de01d200855b946ab39198b6b49c1a5a6de15
IexecOracleAPIimpl deployed at address :0x0eccac406a093828c627223dbdfff47cd39c1dc7

[0m[0m
[0m  Contract: IexecOracle[0m
BEGIN_LOG
workuid:3e59ed6f-bade-4caf-9ab1-c3c785372e97
END_LOG
  [32m  ✓[0m[90m get a work[0m[31m (92ms)[0m


[92m [0m[32m 1 passing[0m[90m (142ms)[0m
</msg>
<status status="PASS" endtime="20170915 10:24:47.359" starttime="20170915 10:24:47.359"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${truffletest_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170915 10:24:47.359" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170915 10:24:47.360" starttime="20170915 10:24:47.359"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
<arg>workuid:(?P&lt;workuid&gt;.*)</arg>
<arg>workuid</arg>
</arguments>
<assign>
<var>@{workuid}</var>
</assign>
<msg timestamp="20170915 10:24:47.360" level="INFO">@{workuid} = [ 3e59ed6f-bade-4caf-9ab1-c3c785372e97 ]</msg>
<status status="PASS" endtime="20170915 10:24:47.360" starttime="20170915 10:24:47.360"></status>
</kw>
<msg timestamp="20170915 10:24:47.361" level="INFO">${workuid} = 3e59ed6f-bade-4caf-9ab1-c3c785372e97</msg>
<status status="PASS" endtime="20170915 10:24:47.361" starttime="20170915 10:24:44.875"></status>
</kw>
<kw name="Count From Works Where Uid" library="XWServer">
<arguments>
<arg>${workuid}</arg>
<arg>1</arg>
</arguments>
<kw name="Count From Table Where Uid" library="MySql">
<arguments>
<arg>works</arg>
<arg>${uid}</arg>
<arg>${countExpected}</arg>
</arguments>
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170915 10:24:47.363" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170915 10:24:47.364" starttime="20170915 10:24:47.362"></status>
</kw>
<status status="PASS" endtime="20170915 10:24:47.364" starttime="20170915 10:24:47.362"></status>
</kw>
<kw name="Row Count Is Equal To X" library="DatabaseLibrary">
<doc>Check if the number of rows returned from `selectStatement` is equal to the value submitted. If not, then this</doc>
<arguments>
<arg>SELECT * FROM ${table} WHERE uid = '${uid}'</arg>
<arg>${countExpected}</arg>
</arguments>
<msg timestamp="20170915 10:24:47.365" level="INFO">Executing : Row Count Is Equal To X  |  SELECT * FROM works WHERE uid = '3e59ed6f-bade-4caf-9ab1-c3c785372e97'  |  1 </msg>
<msg timestamp="20170915 10:24:47.365" level="INFO">Executing : Row Count  |  SELECT * FROM works WHERE uid = '3e59ed6f-bade-4caf-9ab1-c3c785372e97' </msg>
<status status="PASS" endtime="20170915 10:24:47.367" starttime="20170915 10:24:47.364"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170915 10:24:47.368" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170915 10:24:47.368" starttime="20170915 10:24:47.368"></status>
</kw>
<status status="PASS" endtime="20170915 10:24:47.368" starttime="20170915 10:24:47.367"></status>
</kw>
<status status="PASS" endtime="20170915 10:24:47.368" starttime="20170915 10:24:47.362"></status>
</kw>
<status status="PASS" endtime="20170915 10:24:47.368" starttime="20170915 10:24:47.361"></status>
</kw>
<doc>Test HelloWorld Submit Iexec On Testrpc</doc>
<tags>
<tag>HelloWorld Tests</tag>
</tags>
<status status="PASS" endtime="20170915 10:24:47.369" critical="yes" starttime="20170915 10:22:42.129"></status>
</test>
<kw type="teardown" name="Stop Oracle Bridge And Xtremweb">
<kw name="Stop Bridge" library="IexecBridge">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${BRIDGE_PROCESS}</arg>
</arguments>
<msg timestamp="20170915 10:24:47.371" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20170915 10:24:47.475" level="INFO">Process completed.</msg>
<status status="PASS" endtime="20170915 10:24:47.475" starttime="20170915 10:24:47.371"></status>
</kw>
<status status="PASS" endtime="20170915 10:24:47.475" starttime="20170915 10:24:47.371"></status>
</kw>
<kw name="Stop Testrpc" library="ETHTestrpc">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${TESTRPC_PROCESS}</arg>
</arguments>
<msg timestamp="20170915 10:24:47.477" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20170915 10:24:47.579" level="INFO">Process completed.</msg>
<status status="PASS" endtime="20170915 10:24:47.579" starttime="20170915 10:24:47.476"></status>
</kw>
<status status="PASS" endtime="20170915 10:24:47.579" starttime="20170915 10:24:47.476"></status>
</kw>
<kw name="Stop XWtremWeb Server And XWtremWeb Worker" library="XWCommon">
<kw name="Stop XtremWeb Server" library="XWServer">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${SERVER_PROCESS}</arg>
</arguments>
<msg timestamp="20170915 10:24:47.580" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20170915 10:24:47.581" level="INFO">Process completed.</msg>
<status status="PASS" endtime="20170915 10:24:47.581" starttime="20170915 10:24:47.580"></status>
</kw>
<status status="PASS" endtime="20170915 10:24:47.581" starttime="20170915 10:24:47.580"></status>
</kw>
<kw name="Log XtremWeb Server" library="XWCommon">
<kw name="Log XtremWeb Process Log File" library="XWServer">
<kw name="Log File" library="OperatingSystem">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<msg timestamp="20170915 10:24:47.583" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170915 10:24:47.593" level="INFO">Fri Sep 15 10:22:23 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : checking launch url
Fri Sep 15 10:22:23 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] WARNING : no launcher URL defined
Fri Sep 15 10:22:23 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : launching SmartSockets hub
[15/Sep/2017:10:22:25 +0000] [main_1] ERROR : setRole : role redefined ?! (was SERVER)
[15/Sep/2017:10:22:26 +0000] [xtremweb.database.DBConnPoolThread_main_1] INFO : Connection to database jdbc:mysql://localhost/xtremweb is ok, 70 created
[15/Sep/2017:10:22:26 +0000] [xtremweb.dispatcher.DBInterface_main_1] WARN : Can't retrieve any app
[15/Sep/2017:10:22:26 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't create ProxyValidator
[15/Sep/2017:10:22:26 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.io.FileNotFoundException: /tmp/castore (No such file or directory) (/tmp/castore (No such file or directory))
[15/Sep/2017:10:22:26 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't add CA certificates to keystore
[15/Sep/2017:10:22:26 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.lang.NullPointerException (null)
[15/Sep/2017:10:22:26 +0000] [xtremweb.dispatcher.HashTaskSet_TaskSet_14] INFO : TaskSet started (300000)
[15/Sep/2017:10:22:27 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : still waiting task set...
[15/Sep/2017:10:22:27 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : UDP server not started
[15/Sep/2017:10:22:27 +0000] [xtremweb.communications.TCPServer_TCPServerNIO_15] INFO : started, listening on port : 4321
log4j:WARN No appenders could be found for logger (org.eclipse.jetty.util.log).
log4j:WARN Please initialize the log4j system properly.
log4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.
[15/Sep/2017:10:22:27 +0000] [xtremweb.communications.HTTPServer_main_1] INFO : started, listening on port : 9443
[15/Sep/2017:10:22:27 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : FACEBOOK : java.net.MalformedURLException: no protocol: 
[15/Sep/2017:10:22:27 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : GOOGLE : java.net.MalformedURLException: no protocol: 
[15/Sep/2017:10:22:27 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : TWITTER : java.net.MalformedURLException: no protocol: 
[15/Sep/2017:10:22:27 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : YAHOO : java.net.MalformedURLException: no protocol: 
[15/Sep/2017:10:22:27 +0000] [main_1] ERROR : Can't add new entry to keystore
[15/Sep/2017:10:22:27 +0000] [main_1] WARN : javax.net.ssl.SSLHandshakeException: sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target (sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target)
[15/Sep/2017:10:22:27 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : XWHEP Dispatcher(10.6.0-head) started [Fri Sep 15 10:22:27 UTC 2017]
[15/Sep/2017:10:22:27 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : DB vendor  = mysql
[15/Sep/2017:10:22:27 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : mileStone  = 
[15/Sep/2017:10:22:27 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Time out   = 15000
[15/Sep/2017:10:22:27 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Disk opt'd = true
[15/Sep/2017:10:22:27 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Net  opt'd = true
[15/Sep/2017:10:22:27 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : NIO        = true
XWHEP Dispatcher started  Fri Sep 15 10:22:27 UTC 2017
Name             : vagrant-ubuntu-trusty-64
Version          : 10.6.0-head
Identity         : 
XWRole           : SERVER
Started on       : Fri Sep 15 10:22:25 UTC 2017
Scheduler        : xtremweb.dispatcher.MatchingScheduler
SmartSockets hub : 172.28.128.3/172.17.0.1/10.0.2.15-4329#32.dd.5e.3a.cd.7c.00.00.a4.54.02.42.02.6c.0f.e2~vagrant
Server HTTP      : true
Alive            : 300
Alive time out   : 900
Polling time out : 15000
Optimize zip     : true
Optimize network : true
NIO              : true
Comm layer       : xtremweb.communications.TCPClient
Socket time out  : 60000
Socket retries   : 50
Max connections  : 200
TCP port         : 4321
UDP port         : 4323
HTPP  port       : 80
HTPPS port       : 9443
Sun RPC interposition port : 4328
Sandbox path : /usr/bin/lxc
Sandbox launch args : 
Host &lt;host&gt;&lt;uid&gt;6b82fefe-1f63-4bbe-b4f3-08d7f5c194fd&lt;/uid&gt;&lt;accessrights&gt;0x755&lt;/accessrights&gt;&lt;name&gt;vagrant-ubuntu-trusty-64&lt;/name&gt;&lt;cpuload&gt;50&lt;/cpuload&gt;&lt;natedipaddr&gt;10.0.2.15&lt;/natedipaddr&gt;&lt;ipaddr&gt;10.0.2.15&lt;/ipaddr&gt;&lt;hwaddr&gt;&lt;/hwaddr&gt;&lt;timezone&gt;Etc/UTC&lt;/timezone&gt;&lt;os&gt;LINUX&lt;/os&gt;&lt;osversion&gt;3.13.0-129-generic&lt;/osversion&gt;&lt;javaversion&gt;1.8.0_141&lt;/javaversion&gt;&lt;javadatamodel&gt;64&lt;/javadatamodel&gt;&lt;cputype&gt;AMD64&lt;/cputype&gt;&lt;cpunb&gt;1&lt;/cpunb&gt;&lt;cpumodel&gt;unknown&lt;/cpumodel&gt;&lt;cpuspeed&gt;0&lt;/cpuspeed&gt;&lt;totalmem&gt;0&lt;/totalmem&gt;&lt;totalswap&gt;0&lt;/totalswap&gt;&lt;totaltmp&gt;40284&lt;/totaltmp&gt;&lt;freetmp&gt;37258&lt;/freetmp&gt;&lt;project&gt;&lt;/project&gt;&lt;active&gt;true&lt;/active&gt;&lt;incomingconnections&gt;false&lt;/incomingconnections&gt;&lt;available&gt;false&lt;/available&gt;&lt;pilotjob&gt;false&lt;/pilotjob&gt;&lt;sgid&gt;&lt;/sgid&gt;&lt;timeout&gt;15000&lt;/timeout&gt;&lt;traces&gt;false&lt;/traces&gt;&lt;acceptbin&gt;false&lt;/acceptbin&gt;&lt;version&gt;10.6.0-head&lt;/version&gt;&lt;/host&gt;
[15/Sep/2017:10:22:27 +0000] [xtremweb.communications.HTTPServer_HTTPServer_218] INFO : started, listening on port : 9443
[15/Sep/2017:10:22:29 +0000] [xtremweb.common.StreamIO_TCPHandler_17] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[15/Sep/2017:10:22:32 +0000] [xtremweb.common.StreamIO_TCPHandler_18] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[15/Sep/2017:10:22:32 +0000] [xtremweb.common.StreamIO_TCPHandler_19] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[15/Sep/2017:10:22:33 +0000] [xtremweb.dispatcher.DBInterface_TCPHandler_20] INFO : vagrant-ubuntu-trusty-64 not in DB; inserting 54bb6b68-ae69-4c20-a84f-1f83a0024fdb
[15/Sep/2017:10:22:33 +0000] [xtremweb.common.StreamIO_TCPHandler_20] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[15/Sep/2017:10:22:47 +0000] [xtremweb.common.StreamIO_TCPHandler_21] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[15/Sep/2017:10:22:48 +0000] [xtremweb.dispatcher.TCPHandler_TCPHandler_22] ERROR : Can't write result
[15/Sep/2017:10:22:48 +0000] [xtremweb.dispatcher.TCPHandler_TCPHandler_22] WARN : java.io.IOException: java.net.SocketException: Broken pipe (Write failed) (java.net.SocketException: Broken pipe (Write failed))
[15/Sep/2017:10:22:48 +0000] [xtremweb.common.StreamIO_TCPHandler_22] WARN : javax.net.ssl.SSLException: Connection has been shutdown: javax.net.ssl.SSLException: java.net.SocketException: Broken pipe (Write failed) (javax.net.ssl.SSLException: java.net.SocketException: Broken pipe (Write failed))
[15/Sep/2017:10:22:50 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-226_226] WARN : 226 : getIdRpc a ete synchronise ! null
[15/Sep/2017:10:22:50 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-226_226] WARN : 226 : getIdRpc a ete synchronise ! GETAPPS
[15/Sep/2017:10:22:50 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-226_226] WARN : 226 : getIdRpc a ete synchronise ! GETAPPS
[15/Sep/2017:10:22:50 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-228_228] WARN : 228 : getIdRpc a ete synchronise ! null
[15/Sep/2017:10:22:50 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-228_228] WARN : 228 : getIdRpc a ete synchronise ! GET
[15/Sep/2017:10:22:50 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-228_228] WARN : 228 : getIdRpc a ete synchronise ! GET
[15/Sep/2017:10:22:50 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-230_230] WARN : 230 : getIdRpc a ete synchronise ! null
[15/Sep/2017:10:22:50 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-230_230] WARN : 230 : getIdRpc a ete synchronise ! SENDWORK
[15/Sep/2017:10:22:50 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-230_230] WARN : 230 : getIdRpc a ete synchronise ! SENDWORK
[15/Sep/2017:10:22:51 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-226_226] WARN : 226 : getIdRpc a ete synchronise ! null
[15/Sep/2017:10:22:51 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-226_226] WARN : 226 : getIdRpc a ete synchronise ! SENDWORK
[15/Sep/2017:10:22:51 +0000] [xtremweb.dispatcher.DBInterface_qtp2008966511-226_226] WARN : javax.mail.internet.AddressException: Missing local name in string ``@DBADMINEMAIL@'' (Missing local name)
[15/Sep/2017:10:22:51 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-226_226] WARN : 226 : getIdRpc a ete synchronise ! SENDWORK
[15/Sep/2017:10:22:51 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-228_228] WARN : 228 : getIdRpc a ete synchronise ! null
[15/Sep/2017:10:22:51 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-228_228] WARN : 228 : getIdRpc a ete synchronise ! GET
[15/Sep/2017:10:22:51 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-228_228] WARN : 228 : getIdRpc a ete synchronise ! GET
[15/Sep/2017:10:22:51 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-231_231] WARN : 231 : getIdRpc a ete synchronise ! null
[15/Sep/2017:10:22:51 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-231_231] WARN : 231 : getIdRpc a ete synchronise ! SENDWORK
[15/Sep/2017:10:22:51 +0000] [xtremweb.dispatcher.DBInterface_qtp2008966511-231_231] WARN : javax.mail.internet.AddressException: Missing local name in string ``@DBADMINEMAIL@'' (Missing local name)
[15/Sep/2017:10:22:51 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-231_231] WARN : 231 : getIdRpc a ete synchronise ! SENDWORK
[15/Sep/2017:10:22:51 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-230_230] WARN : 230 : getIdRpc a ete synchronise ! null
[15/Sep/2017:10:22:51 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-230_230] WARN : 230 : getIdRpc a ete synchronise ! GET
[15/Sep/2017:10:22:51 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-230_230] WARN : 230 : getIdRpc a ete synchronise ! GET
[15/Sep/2017:10:22:51 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-224_224] WARN : 224 : getIdRpc a ete synchronise ! null
[15/Sep/2017:10:22:51 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-224_224] WARN : 224 : getIdRpc a ete synchronise ! SENDWORK
[15/Sep/2017:10:22:51 +0000] [xtremweb.dispatcher.DBInterface_qtp2008966511-224_224] WARN : javax.mail.internet.AddressException: Missing local name in string ``@DBADMINEMAIL@'' (Missing local name)
[15/Sep/2017:10:22:51 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-224_224] WARN : 224 : getIdRpc a ete synchronise ! SENDWORK
[15/Sep/2017:10:23:01 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-228_228] WARN : 228 : getIdRpc a ete synchronise ! null
[15/Sep/2017:10:23:01 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-228_228] WARN : 228 : getIdRpc a ete synchronise ! GET
[15/Sep/2017:10:23:01 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-228_228] WARN : 228 : getIdRpc a ete synchronise ! GET
[15/Sep/2017:10:23:11 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-229_229] WARN : 229 : getIdRpc a ete synchronise ! null
[15/Sep/2017:10:23:11 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-229_229] WARN : 229 : getIdRpc a ete synchronise ! GET
[15/Sep/2017:10:23:11 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-229_229] WARN : 229 : getIdRpc a ete synchronise ! GET
[15/Sep/2017:10:23:21 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-228_228] WARN : 228 : getIdRpc a ete synchronise ! null
[15/Sep/2017:10:23:21 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-228_228] WARN : 228 : getIdRpc a ete synchronise ! GET
[15/Sep/2017:10:23:21 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-228_228] WARN : 228 : getIdRpc a ete synchronise ! GET
[15/Sep/2017:10:23:31 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-230_230] WARN : 230 : getIdRpc a ete synchronise ! null
[15/Sep/2017:10:23:31 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-230_230] WARN : 230 : getIdRpc a ete synchronise ! GET
[15/Sep/2017:10:23:31 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-230_230] WARN : 230 : getIdRpc a ete synchronise ! GET
[15/Sep/2017:10:23:33 +0000] [xtremweb.common.StreamIO_TCPHandler_23] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[15/Sep/2017:10:23:33 +0000] [xtremweb.common.StreamIO_TCPHandler_24] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[15/Sep/2017:10:23:33 +0000] [xtremweb.common.StreamIO_TCPHandler_25] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[15/Sep/2017:10:23:33 +0000] [xtremweb.common.StreamIO_TCPHandler_26] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[15/Sep/2017:10:23:33 +0000] [xtremweb.common.StreamIO_TCPHandler_27] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[15/Sep/2017:10:23:41 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-230_230] WARN : 230 : getIdRpc a ete synchronise ! null
[15/Sep/2017:10:23:41 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-230_230] WARN : 230 : getIdRpc a ete synchronise ! GET
[15/Sep/2017:10:23:41 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-230_230] WARN : 230 : getIdRpc a ete synchronise ! GET
[15/Sep/2017:10:23:48 +0000] [xtremweb.dispatcher.DBInterface_TCPHandler_28] WARN : javax.mail.internet.AddressException: Missing local name in string ``@DBADMINEMAIL@'' (Missing local name)
[15/Sep/2017:10:23:48 +0000] [xtremweb.common.StreamIO_TCPHandler_28] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[15/Sep/2017:10:23:48 +0000] [xtremweb.common.StreamIO_TCPHandler_29] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[15/Sep/2017:10:23:51 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-226_226] WARN : 226 : getIdRpc a ete synchronise ! null
[15/Sep/2017:10:23:51 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-226_226] WARN : 226 : getIdRpc a ete synchronise ! GET
[15/Sep/2017:10:23:51 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-226_226] WARN : 226 : getIdRpc a ete synchronise ! GET
[15/Sep/2017:10:24:01 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-228_228] WARN : 228 : getIdRpc a ete synchronise ! null
[15/Sep/2017:10:24:01 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-228_228] WARN : 228 : getIdRpc a ete synchronise ! GET
[15/Sep/2017:10:24:01 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-228_228] WARN : 228 : getIdRpc a ete synchronise ! GET
[15/Sep/2017:10:24:11 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-226_226] WARN : 226 : getIdRpc a ete synchronise ! null
[15/Sep/2017:10:24:11 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-226_226] WARN : 226 : getIdRpc a ete synchronise ! GET
[15/Sep/2017:10:24:11 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-226_226] WARN : 226 : getIdRpc a ete synchronise ! GET
[15/Sep/2017:10:24:18 +0000] [xtremweb.common.StreamIO_TCPHandler_30] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[15/Sep/2017:10:24:18 +0000] [xtremweb.common.StreamIO_TCPHandler_31] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[15/Sep/2017:10:24:18 +0000] [xtremweb.common.StreamIO_TCPHandler_32] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[15/Sep/2017:10:24:18 +0000] [xtremweb.dispatcher.DBInterface_TCPHandler_33] WARN : javax.mail.internet.AddressException: Missing local name in string ``@DBADMINEMAIL@'' (Missing local name)
[15/Sep/2017:10:24:18 +0000] [xtremweb.common.StreamIO_TCPHandler_33] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[15/Sep/2017:10:24:18 +0000] [xtremweb.dispatcher.TCPHandler_TCPHandler_34] ERROR : Can't write result
[15/Sep/2017:10:24:18 +0000] [xtremweb.dispatcher.TCPHandler_TCPHandler_34] WARN : java.io.IOException: java.net.SocketException: Broken pipe (Write failed) (java.net.SocketException: Broken pipe (Write failed))
[15/Sep/2017:10:24:18 +0000] [xtremweb.common.StreamIO_TCPHandler_34] WARN : javax.net.ssl.SSLException: Connection has been shutdown: javax.net.ssl.SSLException: java.net.SocketException: Broken pipe (Write failed) (javax.net.ssl.SSLException: java.net.SocketException: Broken pipe (Write failed))
[15/Sep/2017:10:24:21 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-224_224] WARN : 224 : getIdRpc a ete synchronise ! null
[15/Sep/2017:10:24:21 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-224_224] WARN : 224 : getIdRpc a ete synchronise ! GET
[15/Sep/2017:10:24:21 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-224_224] WARN : 224 : getIdRpc a ete synchronise ! GET
[15/Sep/2017:10:24:21 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-229_229] WARN : 229 : getIdRpc a ete synchronise ! null
[15/Sep/2017:10:24:21 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-229_229] WARN : 229 : getIdRpc a ete synchronise ! GET
[15/Sep/2017:10:24:21 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-229_229] WARN : 229 : getIdRpc a ete synchronise ! GET
[15/Sep/2017:10:24:21 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-228_228] WARN : 228 : getIdRpc a ete synchronise ! null
[15/Sep/2017:10:24:21 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-228_228] WARN : 228 : getIdRpc a ete synchronise ! GET
[15/Sep/2017:10:24:21 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-228_228] WARN : 228 : getIdRpc a ete synchronise ! GET
[15/Sep/2017:10:24:21 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-230_230] WARN : 230 : getIdRpc a ete synchronise ! null
[15/Sep/2017:10:24:21 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-230_230] WARN : 230 : getIdRpc a ete synchronise ! DOWNLOADDATA
[15/Sep/2017:10:24:21 +0000] [xtremweb.dispatcher.HTTPHandler_qtp2008966511-230_230] WARN : 230 : getIdRpc a ete synchronise ! DOWNLOADDATA
[15/Sep/2017:10:24:47 +0000] [xtremweb.communications.TCPServer_TCPServerNIO_15] WARN : java.net.SocketException: Socket closed (Socket closed)
</msg>
<status status="PASS" endtime="20170915 10:24:47.594" starttime="20170915 10:24:47.582"></status>
</kw>
<status status="PASS" endtime="20170915 10:24:47.594" starttime="20170915 10:24:47.582"></status>
</kw>
<status status="PASS" endtime="20170915 10:24:47.594" starttime="20170915 10:24:47.582"></status>
</kw>
<kw name="Stop XtremWeb Worker" library="XWWorker">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Stop XtremWeb Worker</arg>
</arguments>
<msg timestamp="20170915 10:24:47.595" level="INFO">Stop XtremWeb Worker</msg>
<status status="PASS" endtime="20170915 10:24:47.595" starttime="20170915 10:24:47.595"></status>
</kw>
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${WORKER_PROCESS}</arg>
</arguments>
<msg timestamp="20170915 10:24:47.595" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20170915 10:24:47.596" level="INFO">Process completed.</msg>
<status status="PASS" endtime="20170915 10:24:47.596" starttime="20170915 10:24:47.595"></status>
</kw>
<status status="PASS" endtime="20170915 10:24:47.596" starttime="20170915 10:24:47.594"></status>
</kw>
<status status="PASS" endtime="20170915 10:24:47.596" starttime="20170915 10:24:47.579"></status>
</kw>
<status status="PASS" endtime="20170915 10:24:47.596" starttime="20170915 10:24:47.370"></status>
</kw>
<doc>End-to-End test HelloWorld usecase Oracle+bridge+xtremweb</doc>
<status status="PASS" endtime="20170915 10:24:47.597" starttime="20170915 10:21:33.799"></status>
</suite>
<suite source="/home/vagrant/iexecdev/iexec-node/tests/rf/Tests/interfaceSuite.robot" id="s1-s3" name="interfaceSuite">
<test id="s1-s3-t1" name="Test Interface Web">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>TODO</arg>
</arguments>
<msg timestamp="20170915 10:24:47.603" level="INFO">TODO</msg>
<status status="PASS" endtime="20170915 10:24:47.603" starttime="20170915 10:24:47.602"></status>
</kw>
<doc>We can use via http://robotframework.org/#libraries External Selenium2Library : http://robotframework.org/Selenium2Library/Selenium2Library.html</doc>
<tags>
<tag>Web Tests</tag>
</tags>
<status status="PASS" endtime="20170915 10:24:47.603" critical="yes" starttime="20170915 10:24:47.602"></status>
</test>
<doc>All user interfaces tests</doc>
<status status="PASS" endtime="20170915 10:24:47.604" starttime="20170915 10:24:47.599"></status>
</suite>
<suite source="/home/vagrant/iexecdev/iexec-node/tests/rf/Tests/truffleTestsOnLocalGeth.robot" id="s1-s4" name="truffleTestsOnLocalGeth">
<kw type="setup" name="Start Geth42" library="ETHGeth">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd ~/gethUtils &amp;&amp; ./resetANewChain42AndMine.sh</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${geth_result}</var>
</assign>
<msg timestamp="20170915 10:24:47.617" level="INFO">Starting process:
cd ~/gethUtils &amp;&amp; ./resetANewChain42AndMine.sh</msg>
<msg timestamp="20170915 10:24:47.622" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170915 10:35:46.693" level="INFO">Process completed.</msg>
<msg timestamp="20170915 10:35:46.693" level="INFO">${geth_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170915 10:35:46.693" starttime="20170915 10:24:47.617"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${geth_result.stderr}</arg>
</arguments>
<msg timestamp="20170915 10:35:46.694" level="INFO">WARN [09-15|10:24:52] No etherbase set and no accounts found as default 
INFO [09-15|10:24:52] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
INFO [09-15|10:24:53] Writing custom genesis block 
INFO [09-15|10:24:53] Successfully wrote genesis state         database=chaindata                                             hash=afad92…166fe3
INFO [09-15|10:24:53] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/lightchaindata cache=16 handles=16
INFO [09-15|10:24:53] Writing custom genesis block 
INFO [09-15|10:24:53] Successfully wrote genesis state         database=lightchaindata                                             hash=afad92…166fe3
WARN [09-15|10:24:53] No etherbase set and no accounts found as default 
INFO [09-15|10:24:59] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
INFO [09-15|10:24:59] Successfully wrote genesis state         database=chaindata                                             hash=afad92…166fe3
INFO [09-15|10:24:59] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/lightchaindata cache=16 handles=16
INFO [09-15|10:24:59] Successfully wrote genesis state         database=lightchaindata                                             hash=afad92…166fe3
INFO [09-15|10:25:03] Generating DAG in progress               epoch=1 percentage=0 elapsed=2.201s
INFO [09-15|10:25:05] Generating DAG in progress               epoch=1 percentage=1 elapsed=4.475s
INFO [09-15|10:25:07] Generating DAG in progress               epoch=1 percentage=2 elapsed=6.733s
INFO [09-15|10:25:09] Generating DAG in progress               epoch=1 percentage=3 elapsed=8.740s
INFO [09-15|10:25:12] Generating DAG in progress               epoch=1 percentage=4 elapsed=11.408s
INFO [09-15|10:25:14] Generating DAG in progress               epoch=1 percentage=5 elapsed=13.991s
INFO [09-15|10:25:17] Generating DAG in progress               epoch=1 percentage=6 elapsed=16.691s
INFO [09-15|10:25:20] Generating DAG in progress               epoch=1 percentage=7 elapsed=19.259s
INFO [09-15|10:25:22] Generating DAG in progress               epoch=1 percentage=8 elapsed=21.747s
INFO [09-15|10:25:25] Generating DAG in progress               epoch=1 percentage=9 elapsed=24.237s
INFO [09-15|10:25:27] Generating DAG in progress               epoch=1 percentage=10 elapsed=26.681s
INFO [09-15|10:25:29] Generating DAG in progress               epoch=1 percentage=11 elapsed=29.162s
INFO [09-15|10:25:32] Generating DAG in progress               epoch=1 percentage=12 elapsed=32.084s
INFO [09-15|10:25:35] Generating DAG in progress               epoch=1 percentage=13 elapsed=34.673s
INFO [09-15|10:25:38] Generating DAG in progress               epoch=1 percentage=14 elapsed=37.439s
INFO [09-15|10:25:40] Generating DAG in progress               epoch=1 percentage=15 elapsed=40.083s
INFO [09-15|10:25:43] Generating DAG in progress               epoch=1 percentage=16 elapsed=42.961s
INFO [09-15|10:25:47] Generating DAG in progress               epoch=1 percentage=17 elapsed=46.306s
INFO [09-15|10:25:50] Generating DAG in progress               epoch=1 percentage=18 elapsed=49.388s
INFO [09-15|10:25:53] Generating DAG in progress               epoch=1 percentage=19 elapsed=52.238s
INFO [09-15|10:25:55] Generating DAG in progress               epoch=1 percentage=20 elapsed=54.799s
INFO [09-15|10:25:58] Generating DAG in progress               epoch=1 percentage=21 elapsed=57.457s
INFO [09-15|10:26:00] Generating DAG in progress               epoch=1 percentage=22 elapsed=1m0.046s
INFO [09-15|10:26:03] Generating DAG in progress               epoch=1 percentage=23 elapsed=1m2.396s
INFO [09-15|10:26:06] Generating DAG in progress               epoch=1 percentage=24 elapsed=1m5.282s
INFO [09-15|10:26:08] Generating DAG in progress               epoch=1 percentage=25 elapsed=1m7.921s
INFO [09-15|10:26:11] Generating DAG in progress               epoch=1 percentage=26 elapsed=1m10.305s
INFO [09-15|10:26:14] Generating DAG in progress               epoch=1 percentage=27 elapsed=1m13.199s
INFO [09-15|10:26:16] Generating DAG in progress               epoch=1 percentage=28 elapsed=1m16.140s
INFO [09-15|10:26:19] Generating DAG in progress               epoch=1 percentage=29 elapsed=1m18.813s
INFO [09-15|10:26:22] Generating DAG in progress               epoch=1 percentage=30 elapsed=1m21.383s
INFO [09-15|10:26:25] Generating DAG in progress               epoch=1 percentage=31 elapsed=1m24.881s
INFO [09-15|10:26:28] Generating DAG in progress               epoch=1 percentage=32 elapsed=1m27.897s
INFO [09-15|10:26:31] Generating DAG in progress               epoch=1 percentage=33 elapsed=1m30.839s
INFO [09-15|10:26:34] Generating DAG in progress               epoch=1 percentage=34 elapsed=1m33.452s
INFO [09-15|10:26:37] Generating DAG in progress               epoch=1 percentage=35 elapsed=1m36.295s
INFO [09-15|10:26:40] Generating DAG in progress               epoch=1 percentage=36 elapsed=1m39.286s
INFO [09-15|10:26:42] Generating DAG in progress               epoch=1 percentage=37 elapsed=1m41.820s
INFO [09-15|10:26:45] Generating DAG in progress               epoch=1 percentage=38 elapsed=1m44.439s
INFO [09-15|10:26:47] Generating DAG in progress               epoch=1 percentage=39 elapsed=1m47.124s
INFO [09-15|10:26:50] Generating DAG in progress               epoch=1 percentage=40 elapsed=1m49.809s
INFO [09-15|10:26:53] Generating DAG in progress               epoch=1 percentage=41 elapsed=1m52.351s
INFO [09-15|10:26:55] Generating DAG in progress               epoch=1 percentage=42 elapsed=1m54.844s
INFO [09-15|10:26:58] Generating DAG in progress               epoch=1 percentage=43 elapsed=1m57.303s
INFO [09-15|10:27:00] Generating DAG in progress               epoch=1 percentage=44 elapsed=1m59.768s
INFO [09-15|10:27:03] Generating DAG in progress               epoch=1 percentage=45 elapsed=2m2.181s
INFO [09-15|10:27:06] Generating DAG in progress               epoch=1 percentage=46 elapsed=2m5.727s
INFO [09-15|10:27:09] Generating DAG in progress               epoch=1 percentage=47 elapsed=2m8.836s
INFO [09-15|10:27:12] Generating DAG in progress               epoch=1 percentage=48 elapsed=2m11.325s
INFO [09-15|10:27:14] Generating DAG in progress               epoch=1 percentage=49 elapsed=2m14.031s
INFO [09-15|10:27:18] Generating DAG in progress               epoch=1 percentage=50 elapsed=2m17.594s
INFO [09-15|10:27:20] Generating DAG in progress               epoch=1 percentage=51 elapsed=2m20.140s
INFO [09-15|10:27:23] Generating DAG in progress               epoch=1 percentage=52 elapsed=2m23.003s
INFO [09-15|10:27:26] Generating DAG in progress               epoch=1 percentage=53 elapsed=2m25.478s
INFO [09-15|10:27:28] Generating DAG in progress               epoch=1 percentage=54 elapsed=2m27.853s
INFO [09-15|10:27:31] Generating DAG in progress               epoch=1 percentage=55 elapsed=2m30.255s
INFO [09-15|10:27:33] Generating DAG in progress               epoch=1 percentage=56 elapsed=2m32.655s
INFO [09-15|10:27:35] Generating DAG in progress               epoch=1 percentage=57 elapsed=2m35.082s
INFO [09-15|10:27:38] Generating DAG in progress               epoch=1 percentage=58 elapsed=2m37.765s
INFO [09-15|10:27:41] Generating DAG in progress               epoch=1 percentage=59 elapsed=2m40.859s
INFO [09-15|10:27:44] Generating DAG in progress               epoch=1 percentage=60 elapsed=2m43.393s
INFO [09-15|10:27:46] Generating DAG in progress               epoch=1 percentage=61 elapsed=2m45.949s
INFO [09-15|10:27:49] Generating DAG in progress               epoch=1 percentage=62 elapsed=2m48.356s
INFO [09-15|10:27:51] Generating DAG in progress               epoch=1 percentage=63 elapsed=2m50.775s
INFO [09-15|10:27:54] Generating DAG in progress               epoch=1 percentage=64 elapsed=2m53.196s
INFO [09-15|10:27:56] Generating DAG in progress               epoch=1 percentage=65 elapsed=2m55.562s
INFO [09-15|10:27:59] Generating DAG in progress               epoch=1 percentage=66 elapsed=2m58.562s
INFO [09-15|10:28:02] Generating DAG in progress               epoch=1 percentage=67 elapsed=3m1.651s
INFO [09-15|10:28:05] Generating DAG in progress               epoch=1 percentage=68 elapsed=3m4.453s
INFO [09-15|10:28:07] Generating DAG in progress               epoch=1 percentage=69 elapsed=3m7.034s
INFO [09-15|10:28:10] Generating DAG in progress               epoch=1 percentage=70 elapsed=3m9.471s
INFO [09-15|10:28:12] Generating DAG in progress               epoch=1 percentage=71 elapsed=3m11.824s
INFO [09-15|10:28:15] Generating DAG in progress               epoch=1 percentage=72 elapsed=3m14.222s
INFO [09-15|10:28:18] Generating DAG in progress               epoch=1 percentage=73 elapsed=3m17.375s
INFO [09-15|10:28:20] Generating DAG in progress               epoch=1 percentage=74 elapsed=3m19.736s
INFO [09-15|10:28:22] Generating DAG in progress               epoch=1 percentage=75 elapsed=3m22.161s
INFO [09-15|10:28:25] Generating DAG in progress               epoch=1 percentage=76 elapsed=3m25.085s
INFO [09-15|10:28:29] Generating DAG in progress               epoch=1 percentage=77 elapsed=3m29.109s
INFO [09-15|10:28:32] Generating DAG in progress               epoch=1 percentage=78 elapsed=3m31.584s
INFO [09-15|10:28:34] Generating DAG in progress               epoch=1 percentage=79 elapsed=3m34.036s
INFO [09-15|10:28:37] Generating DAG in progress               epoch=1 percentage=80 elapsed=3m36.509s
INFO [09-15|10:28:39] Generating DAG in progress               epoch=1 percentage=81 elapsed=3m39.043s
INFO [09-15|10:28:42] Generating DAG in progress               epoch=1 percentage=82 elapsed=3m41.580s
INFO [09-15|10:28:44] Generating DAG in progress               epoch=1 percentage=83 elapsed=3m44.172s
INFO [09-15|10:28:47] Generating DAG in progress               epoch=1 percentage=84 elapsed=3m47.155s
INFO [09-15|10:28:50] Generating DAG in progress               epoch=1 percentage=85 elapsed=3m49.923s
INFO [09-15|10:28:53] Generating DAG in progress               epoch=1 percentage=86 elapsed=3m52.645s
INFO [09-15|10:28:55] Generating DAG in progress               epoch=1 percentage=87 elapsed=3m55.111s
INFO [09-15|10:28:58] Generating DAG in progress               epoch=1 percentage=88 elapsed=3m57.788s
INFO [09-15|10:29:01] Generating DAG in progress               epoch=1 percentage=89 elapsed=4m0.339s
INFO [09-15|10:29:03] Generating DAG in progress               epoch=1 percentage=90 elapsed=4m3.075s
INFO [09-15|10:29:06] Generating DAG in progress               epoch=1 percentage=91 elapsed=4m5.741s
INFO [09-15|10:29:09] Generating DAG in progress               epoch=1 percentage=92 elapsed=4m8.862s
INFO [09-15|10:29:12] Generating DAG in progress               epoch=1 percentage=93 elapsed=4m11.874s
INFO [09-15|10:29:15] Generating DAG in progress               epoch=1 percentage=94 elapsed=4m14.380s
INFO [09-15|10:29:17] Generating DAG in progress               epoch=1 percentage=95 elapsed=4m16.894s
INFO [09-15|10:29:20] Generating DAG in progress               epoch=1 percentage=96 elapsed=4m19.372s
INFO [09-15|10:29:22] Generating DAG in progress               epoch=1 percentage=97 elapsed=4m21.998s
INFO [09-15|10:29:25] Generating DAG in progress               epoch=1 percentage=98 elapsed=4m24.670s
INFO [09-15|10:29:28] Generating DAG in progress               epoch=1 percentage=99 elapsed=4m27.980s
INFO [09-15|10:29:28] Generated ethash verification cache      epoch=1 elapsed=4m27.983s
INFO [09-15|10:29:29] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
INFO [09-15|10:29:29] Successfully wrote genesis state         database=chaindata                                             hash=afad92…166fe3
INFO [09-15|10:29:29] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/lightchaindata cache=16 handles=16
INFO [09-15|10:29:29] Successfully wrote genesis state         database=lightchaindata                                             hash=afad92…166fe3
INFO [09-15|10:29:34] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-15|10:29:44] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-15|10:29:55] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-15|10:30:05] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-15|10:30:15] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-15|10:30:26] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-15|10:30:36] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-15|10:30:47] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-15|10:30:57] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-15|10:31:08] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-15|10:31:18] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-15|10:31:29] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-15|10:31:39] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-15|10:31:50] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-15|10:32:00] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-15|10:32:11] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-15|10:32:21] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-15|10:32:32] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-15|10:32:42] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-15|10:32:52] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-15|10:33:03] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-15|10:33:13] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-15|10:33:23] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-15|10:33:34] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-15|10:33:44] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-15|10:33:55] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-15|10:34:05] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-15|10:34:16] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-15|10:34:26] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-15|10:34:36] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-15|10:34:47] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-15|10:34:57] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-15|10:35:07] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-15|10:35:18] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-15|10:35:29] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable
INFO [09-15|10:35:29] Allocated cache and file handles         database=/home/vagrant/iexecdev/.ethereum/net42/geth/chaindata cache=16 handles=16
Fatal: Failed to open database: resource temporarily unavailable</msg>
<status status="PASS" endtime="20170915 10:35:46.694" starttime="20170915 10:35:46.693"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${geth_result.stdout}</arg>
</arguments>
<msg timestamp="20170915 10:35:46.695" level="INFO">kill existing geth process
clear ~/iexecdev/.ethereum/net42/ content
clear ~/.ethash content
creating 10 accounts
create account 1
Address: {ae4991fe4cc8e4978c010de689422685ce511ad0}
create account 2
Address: {c54b8d8ecb6675f6450131aba039f0e5fba02144}
create account 3
Address: {2ce3b16b987e3ad4e817c01619b193c8181dab6e}
create account 4
Address: {8b3d624548128e73d42e487da4b4fc9d8d520752}
create account 5
Address: {37c07a7f4bfb3ae71bd8f0657addb6b7973a8fee}
create account 6
Address: {9fc30e5de217b379c3f7c8fa998a4504209eb480}
create account 7
Address: {c9a0d85ba35d6ec8f8a4f918d941a149eadfced7}
create account 8
Address: {558a3c8f2c278d217adc4191aa7dc86ad5b6df2d}
create account 9
Address: {0183b3df18bdc58e3798b1549f6d218d3e307c8b}
create account 10
Address: {8a50a17edc7e4a0d2616d337b50cee47619dfe77}
create DAG epoch 1
clear ~/.ethash content
start a coinbase miner in background
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
wait for 5 mined blocks
5 blocks mined in geth 42 !
unlocked 9 accounts
Fatal: Failed to open database: resource temporarily unavailable
unlock account 1
true
unlock account 2
true
unlock account 3
true
unlock account 4
true
unlock account 5
true
unlock account 6
true
unlock account 7
true
unlock account 8
true
unlock account 9
true
local geth 42 ready to go for testing</msg>
<status status="PASS" endtime="20170915 10:35:46.695" starttime="20170915 10:35:46.694"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${geth_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170915 10:35:46.696" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170915 10:35:46.696" starttime="20170915 10:35:46.696"></status>
</kw>
<status status="PASS" endtime="20170915 10:35:46.696" starttime="20170915 10:24:47.617"></status>
</kw>
<test id="s1-s4-t1" name="Test Iexec Oracle Truffle Tests On Local Geth">
<kw name="Iexec Oracle Truffle Tests" library="IexecOracle">
<tags>
<tag>Smart contract Tests</tag>
</tags>
<doc>call truffle test and show the result here.</doc>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${IEXEC_ORACLE_FORCE_GIT_CLONE}' == 'true'</arg>
<arg>Git Clone Iexec Oracle</arg>
</arguments>
<status status="PASS" endtime="20170915 10:35:46.699" starttime="20170915 10:35:46.699"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd iexec-oracle &amp;&amp; ./node_modules/.bin/truffle test test/iexecoracleapi.js</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${truffletest_result}</var>
</assign>
<msg timestamp="20170915 10:35:46.700" level="INFO">Starting process:
cd iexec-oracle &amp;&amp; ./node_modules/.bin/truffle test test/iexecoracleapi.js</msg>
<msg timestamp="20170915 10:35:46.704" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170915 10:37:39.760" level="INFO">Process completed.</msg>
<msg timestamp="20170915 10:37:39.760" level="INFO">${truffletest_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170915 10:37:39.761" starttime="20170915 10:35:46.699"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stderr}</arg>
</arguments>
<msg timestamp="20170915 10:37:39.762" level="INFO"></msg>
<status status="PASS" endtime="20170915 10:37:39.762" starttime="20170915 10:37:39.761"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
</arguments>
<msg timestamp="20170915 10:37:39.762" level="INFO">Using network 'development'.

IexecOracle deployed at address :0x48a06999f95f348edcaf2a306a58d322e15d508a
IexecOracleAPIimpl deployed at address :0xeec5e7147f8347c42e0fba5f5a7e0e666076e16b

[0m[0m
[0m  Contract: IexecOracleAPI[0m
refill 30 ether to 0x2ce3b16b987e3ad4e817c01619b193c8181dab6e
refill 30 ether to 0xc54b8d8ecb6675f6450131aba039f0e5fba02144
Geth mode : run out of gas. throw expected ?
  [32m  ✓[0m[90m Test call registerSmartContractAndCreator with tx.origin = msg.sender[0m[31m (7359ms)[0m
[0m    Test IexecOracle on IexecOracle well initialized[0m
    [32m  ✓[0m[90m Test Launch Event when call iexecSubmit[0m[31m (1294ms)[0m
[0m    Test Submit function call then simulate bridge response[0m
Geth mode : run out of gas. throw expected ?
    [32m  ✓[0m[90m Only bridge can call SubmitCallback fonction[0m[31m (4181ms)[0m
    [32m  ✓[0m[90m Simulate bridge response OK and test event Submit[0m[31m (1254ms)[0m
    [32m  ✓[0m[90m Simulate bridge response KO and test event Submit[0m[31m (6408ms)[0m
[0m    Test IexecOracleAPI on IexecOracle well initialized[0m
    [32m  ✓[0m[90m Test creator and creator of IexecOracleAPI are set correctly in IexecOracle[0m[33m (39ms)[0m
Geth mode : run out of gas. throw expected ?
    [32m  ✓[0m[90m Cannot change creator in aIexecOracleInstance after first call by IexecOracleAPI constructor[0m[31m (5235ms)[0m


[92m [0m[32m 7 passing[0m[90m (2m)[0m
</msg>
<status status="PASS" endtime="20170915 10:37:39.762" starttime="20170915 10:37:39.762"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${truffletest_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170915 10:37:39.763" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170915 10:37:39.763" starttime="20170915 10:37:39.762"></status>
</kw>
<status status="PASS" endtime="20170915 10:37:39.763" starttime="20170915 10:35:46.698"></status>
</kw>
<doc>call truffle test on a started local geth and show the result here.</doc>
<tags>
<tag>Smart contract Tests</tag>
</tags>
<status status="PASS" endtime="20170915 10:37:39.763" critical="yes" starttime="20170915 10:35:46.696"></status>
</test>
<kw type="teardown" name="Stop Geth42" library="ETHGeth">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd ~/gethUtils &amp;&amp; ./killGeth.sh</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${geth_result}</var>
</assign>
<msg timestamp="20170915 10:37:39.766" level="INFO">Starting process:
cd ~/gethUtils &amp;&amp; ./killGeth.sh</msg>
<msg timestamp="20170915 10:37:39.770" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170915 10:37:39.782" level="INFO">Process completed.</msg>
<msg timestamp="20170915 10:37:39.782" level="INFO">${geth_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170915 10:37:39.782" starttime="20170915 10:37:39.765"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${geth_result.stderr}</arg>
</arguments>
<msg timestamp="20170915 10:37:39.783" level="INFO"></msg>
<status status="PASS" endtime="20170915 10:37:39.783" starttime="20170915 10:37:39.783"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${geth_result.stdout}</arg>
</arguments>
<msg timestamp="20170915 10:37:39.783" level="INFO"></msg>
<status status="PASS" endtime="20170915 10:37:39.783" starttime="20170915 10:37:39.783"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${geth_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170915 10:37:39.784" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170915 10:37:39.784" starttime="20170915 10:37:39.784"></status>
</kw>
<status status="PASS" endtime="20170915 10:37:39.784" starttime="20170915 10:37:39.765"></status>
</kw>
<doc>All smart contract tests on Local Geth</doc>
<status status="PASS" endtime="20170915 10:37:39.784" starttime="20170915 10:24:47.606"></status>
</suite>
<suite source="/home/vagrant/iexecdev/iexec-node/tests/rf/Tests/truffleTestsOnTestrpc.robot" id="s1-s5" name="truffleTestsOnTestrpc">
<kw type="setup" name="Start Testrpc" library="ETHTestrpc">
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>testrpc</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${created_process}</var>
</assign>
<msg timestamp="20170915 10:37:39.794" level="INFO">Starting process:
testrpc</msg>
<msg timestamp="20170915 10:37:39.798" level="INFO">${created_process} = 57</msg>
<status status="PASS" endtime="20170915 10:37:39.798" starttime="20170915 10:37:39.794"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TESTRPC_PROCESS}</arg>
<arg>${created_process}</arg>
</arguments>
<msg timestamp="20170915 10:37:39.799" level="INFO">${TESTRPC_PROCESS} = 57</msg>
<status status="PASS" endtime="20170915 10:37:39.799" starttime="20170915 10:37:39.799"></status>
</kw>
<status status="PASS" endtime="20170915 10:37:39.799" starttime="20170915 10:37:39.793"></status>
</kw>
<test id="s1-s5-t1" name="Test Iexec Oracle Truffle Tests On Testrpc">
<kw name="Iexec Oracle Truffle Tests" library="IexecOracle">
<tags>
<tag>Smart contract Tests</tag>
</tags>
<doc>call truffle test and show the result here.</doc>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${IEXEC_ORACLE_FORCE_GIT_CLONE}' == 'true'</arg>
<arg>Git Clone Iexec Oracle</arg>
</arguments>
<status status="PASS" endtime="20170915 10:37:39.806" starttime="20170915 10:37:39.805"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd iexec-oracle &amp;&amp; ./node_modules/.bin/truffle test test/iexecoracleapi.js</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${truffletest_result}</var>
</assign>
<msg timestamp="20170915 10:37:39.806" level="INFO">Starting process:
cd iexec-oracle &amp;&amp; ./node_modules/.bin/truffle test test/iexecoracleapi.js</msg>
<msg timestamp="20170915 10:37:39.811" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170915 10:37:44.772" level="INFO">Process completed.</msg>
<msg timestamp="20170915 10:37:44.772" level="INFO">${truffletest_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170915 10:37:44.772" starttime="20170915 10:37:39.806"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stderr}</arg>
</arguments>
<msg timestamp="20170915 10:37:44.773" level="INFO"></msg>
<status status="PASS" endtime="20170915 10:37:44.773" starttime="20170915 10:37:44.772"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
</arguments>
<msg timestamp="20170915 10:37:44.773" level="INFO">Using network 'development'.

IexecOracle deployed at address :0xae6a1d5634b03d5e5dd0e13039232c69f2cefb22
IexecOracleAPIimpl deployed at address :0x36e355b1d660085fdc5f7fdee5a40652fccde401

[0m[0m
[0m  Contract: IexecOracleAPI[0m
TestRPC mode : Error: VM Exception. throw expected ?
  [32m  ✓[0m[90m Test call registerSmartContractAndCreator with tx.origin = msg.sender[0m[31m (79ms)[0m
[0m    Test IexecOracle on IexecOracle well initialized[0m
    [32m  ✓[0m[90m Test Launch Event when call iexecSubmit[0m[31m (219ms)[0m
[0m    Test Submit function call then simulate bridge response[0m
TestRPC mode : Error: VM Exception. throw expected ?
    [32m  ✓[0m[90m Only bridge can call SubmitCallback fonction[0m
    [32m  ✓[0m[90m Simulate bridge response OK and test event Submit[0m[31m (438ms)[0m
    [32m  ✓[0m[90m Simulate bridge response KO and test event Submit[0m[31m (234ms)[0m
[0m    Test IexecOracleAPI on IexecOracle well initialized[0m
    [32m  ✓[0m[90m Test creator and creator of IexecOracleAPI are set correctly in IexecOracle[0m
TestRPC mode : Error: VM Exception. throw expected ?
    [32m  ✓[0m[90m Cannot change creator in aIexecOracleInstance after first call by IexecOracleAPI constructor[0m


[92m [0m[32m 7 passing[0m[90m (2s)[0m
</msg>
<status status="PASS" endtime="20170915 10:37:44.773" starttime="20170915 10:37:44.773"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${truffletest_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170915 10:37:44.774" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170915 10:37:44.774" starttime="20170915 10:37:44.774"></status>
</kw>
<status status="PASS" endtime="20170915 10:37:44.774" starttime="20170915 10:37:39.800"></status>
</kw>
<doc>call truffle test on a started testrpc and show the result here.</doc>
<tags>
<tag>Smart contract Tests</tag>
</tags>
<status status="PASS" endtime="20170915 10:37:44.774" critical="yes" starttime="20170915 10:37:39.799"></status>
</test>
<kw type="teardown" name="Stop Testrpc" library="ETHTestrpc">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${TESTRPC_PROCESS}</arg>
</arguments>
<msg timestamp="20170915 10:37:44.776" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20170915 10:37:44.785" level="INFO">Process completed.</msg>
<status status="PASS" endtime="20170915 10:37:44.785" starttime="20170915 10:37:44.776"></status>
</kw>
<status status="PASS" endtime="20170915 10:37:44.785" starttime="20170915 10:37:44.775"></status>
</kw>
<doc>All smart contract tests on testrpc</doc>
<status status="PASS" endtime="20170915 10:37:44.786" starttime="20170915 10:37:39.787"></status>
</suite>
<suite source="/home/vagrant/iexecdev/iexec-node/tests/rf/Tests/xwcommandsSuite.robot" id="s1-s6" name="xwcommandsSuite">
<kw type="setup" name="Prepare And Start XWtremWeb Server And XWtremWeb Worker" library="XWCommon">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${XW_FORCE_GIT_CLONE}' == 'true'</arg>
<arg>Git Clone XWtremWeb</arg>
</arguments>
<status status="PASS" endtime="20170915 10:37:44.797" starttime="20170915 10:37:44.797"></status>
</kw>
<kw name="Compile XWtremWeb" library="XWCommon">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd ${BUILD_PATH} &amp;&amp; make clean &amp;&amp; make</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${compile_result}</var>
</assign>
<msg timestamp="20170915 10:37:44.798" level="INFO">Starting process:
cd ./xtremweb-hep/build &amp;&amp; make clean &amp;&amp; make</msg>
<msg timestamp="20170915 10:37:44.801" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170915 10:38:13.958" level="INFO">Process completed.</msg>
<msg timestamp="20170915 10:38:13.958" level="INFO">${compile_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170915 10:38:13.958" starttime="20170915 10:37:44.797"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${compile_result.stderr}</arg>
</arguments>
<msg timestamp="20170915 10:38:13.959" level="INFO"></msg>
<status status="PASS" endtime="20170915 10:38:13.959" starttime="20170915 10:38:13.959"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${compile_result.stdout}</arg>
</arguments>
<msg timestamp="20170915 10:38:13.960" level="INFO">./build.sh -f build.xml clean 
Buildfile: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/build.xml

tstamp:
[echoproperties] #Ant properties
[echoproperties] #Fri Sep 15 10:37:45 UTC 2017
[echoproperties] v.branch=head
[echoproperties] v.build=201709151037
[echoproperties] v.major=10
[echoproperties] v.micro=0
[echoproperties] v.minor=6

version:

clean:
   [delete] Deleting: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/.build
   [delete] Deleting directory /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes
     [exec] make[1]: Entering directory `/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/natif'
     [exec] rm -f XWInterruptsImpl.h PortMapper.h XWUtilImpl.h XWTracerImpl.h
     [exec] make[1]: Leaving directory `/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/natif'
     [exec] mkdir: cannot create directory ‘../../build/classes/obj/’: No such file or directory

BUILD SUCCESSFUL
Total time: 2 seconds
./build.sh distrib 
Buildfile: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/build.xml

tstamp:
[echoproperties] #Ant properties
[echoproperties] #Fri Sep 15 10:37:47 UTC 2017
[echoproperties] v.branch=head
[echoproperties] v.build=201709151037
[echoproperties] v.major=10
[echoproperties] v.micro=0
[echoproperties] v.minor=6

version:

configure:
     [echo] 
     [echo]       ant version = Apache Ant(TM) version 1.8.4 compiled on May 22 2012
     [echo] 
     [echo]       os         = Linux
     [echo]       os.arch    = amd64
     [echo]       target     = Linux
     [echo]       xwarch     = amd64
     [echo]       xwsuffix   = linux-amd64
     [echo]       debug      = true
     [echo]       debuglevel = source,lines
     [echo] 
     [echo]         cross=${cross.prefix}
     [echo]         target java home =${cross.java.home}
     [echo]     	target           =Linux
     [echo]     	xwversion=10.6.0

templates:
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common

prepare:
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes/obj
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes/obj/linux-amd64
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes/jni
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes/xwclasses
     [echo] 
     [echo]       classpath=/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/test:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/JOpenId-1.08.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/JSON-java.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/MinML.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/activation.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/antlr.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/attic-all-0.3.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/bcpkix-jdk15on-151.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/bcprov-jdk15on-151.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/bcprov-jdk16-140.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/commons-codec-1.3.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/commons-fileupload-1.2.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/commons-httpclient-3.0.1.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/commons-io-1.3.2.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/commons-logging-1.1.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/ibis-util-2.1.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/jcert.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/jetty-http-9.3.8.v20160314.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/jetty-io-9.3.8.v20160314.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/jetty-server-9.3.8.v20160314.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/jetty-util-9.3.8.v20160314.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/jose4j-0.5.5.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/junit-4.10.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/log4j-1.2.17.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/mail.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/mysql-connector-java-5.1.6-bin.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/scribejava-apis-3.3.1-SNAPSHOT.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/scribejava-core-3.3.1-SNAPSHOT.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/servlet-api-3.1.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/slf4j-api-1.7.2.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/slf4j-log4j12-1.7.2.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/smartsockets-1.4.jar
     [echo]     

common:
    [javac] Compiling 277 source files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/XWTools.java:61: warning: [deprecation] HTTPOpenIdHandler in xtremweb.dispatcher has been deprecated
    [javac] import xtremweb.dispatcher.HTTPOpenIdHandler;
    [javac]                           ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/security/ACLConnect.java:36: warning: AclEntryImpl is internal proprietary API and may be removed in a future release
    [javac] import sun.security.acl.AclEntryImpl;
    [javac]                        ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/security/ACLConnect.java:37: warning: AclImpl is internal proprietary API and may be removed in a future release
    [javac] import sun.security.acl.AclImpl;
    [javac]                        ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/security/ACLConnect.java:38: warning: PermissionImpl is internal proprietary API and may be removed in a future release
    [javac] import sun.security.acl.PermissionImpl;
    [javac]                        ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/security/ACLConnect.java:39: warning: PrincipalImpl is internal proprietary API and may be removed in a future release
    [javac] import sun.security.acl.PrincipalImpl;
    [javac]                        ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/communications/CommClient.java:870: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] 		return version(new XMLRPCCommandVersion(newURI()));
    [javac] 		                   ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/communications/CommClient.java:881: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] 	public Version version(final XMLRPCCommandVersion command)
    [javac] 	                             ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/DataInterface.java:625: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/communications/IdRpc.java:89: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] 		public XMLRPCCommandVersion newCommand(final URI uri, final UserInterface client, final Table obj)
    [javac] 		       ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/communications/IdRpc.java:91: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] 			return new XMLRPCCommandVersion(uri, client);
    [javac] 			           ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/communications/XMLRPCCommand.java:614: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] 			return new XMLRPCCommandVersion(input);
    [javac] 			           ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/AppInterface.java:1446: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/UserInterface.java:577: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/GroupInterface.java:319: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/HostInterface.java:1212: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/SessionInterface.java:264: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/TaskInterface.java:441: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/TraceInterface.java:348: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/UserGroupInterface.java:365: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/WorkInterface.java:933: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/AppType.java:263: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/CPUType.java:223: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/DataType.java:265: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/Executable.java:294: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/JobInterface.java:409: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/OSType.java:243: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/Status.java:245: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/UserRightsType.java:243: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/XWTools.java:805: warning: [deprecation] HTTPOpenIdHandler in xtremweb.dispatcher has been deprecated
    [javac] 		final Logger logger = new Logger(HTTPOpenIdHandler.class);
    [javac] 		                                 ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/XWTools.java:817: warning: BASE64Encoder is internal proprietary API and may be removed in a future release
    [javac] 			out.println(new sun.misc.BASE64Encoder().encode(cert.getEncoded()));
    [javac] 			                        ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/communications/HTTPClient.java:238: warning: [deprecation] Protocol(String,SecureProtocolSocketFactory,int) in Protocol has been deprecated
    [javac] 				xwssl = new Protocol(uri.getScheme(), new AuthSSLProtocolSocketFactory(uri.getScheme(), keyStore,
    [javac] 				        ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/dispatcher/Dispatcher.java:216: warning: [deprecation] HTTPOpenIdHandler in xtremweb.dispatcher has been deprecated
    [javac] 				HTTPOpenIdHandler.setCACertificateEntries(getConfig().getKeyStore());
    [javac] 				^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/security/ACLConnect.java:65: warning: PermissionImpl is internal proprietary API and may be removed in a future release
    [javac] 	private final Permission _connect = new PermissionImpl("CONNECT");
    [javac] 	                                        ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/security/ACLConnect.java:66: warning: PrincipalImpl is internal proprietary API and may be removed in a future release
    [javac] 	private final Principal _owner = new PrincipalImpl("localhost");
    [javac] 	                                     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/security/ACLConnect.java:67: warning: AclImpl is internal proprietary API and may be removed in a future release
    [javac] 	private Acl _acl = new AclImpl(_owner, "ConnectACL");
    [javac] 	                       ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/security/ACLConnect.java:80: warning: AclImpl is internal proprietary API and may be removed in a future release
    [javac] 		_acl = new AclImpl(_owner, "ConnectACL");
    [javac] 		           ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/security/ACLConnect.java:81: warning: AclEntryImpl is internal proprietary API and may be removed in a future release
    [javac] 		final AclEntry allowConnections = new AclEntryImpl(_owner);
    [javac] 		                                      ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/security/ACLConnect.java:104: warning: PrincipalImpl is internal proprietary API and may be removed in a future release
    [javac] 			final Principal prince = new PrincipalImpl(regexp);
    [javac] 			                             ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/security/ACLConnect.java:105: warning: AclEntryImpl is internal proprietary API and may be removed in a future release
    [javac] 			final AclEntry entry = new AclEntryImpl(prince);
    [javac] 			                           ^
    [javac] Note: Some input files use unchecked or unsafe operations.
    [javac] Note: Recompile with -Xlint:unchecked for details.
    [javac] 39 warnings
    [javac] Creating empty /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes/database/package-info.class

obj:

iface:

communications:
    [javac] Compiling 60 source files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/communications/IdRpc.java:89: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] 		public XMLRPCCommandVersion newCommand(final URI uri, final UserInterface client, final Table obj)
    [javac] 		       ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/communications/IdRpc.java:91: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] 			return new XMLRPCCommandVersion(uri, client);
    [javac] 			           ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/communications/XMLRPCCommand.java:614: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] 			return new XMLRPCCommandVersion(input);
    [javac] 			           ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/communications/CommClient.java:870: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] 		return version(new XMLRPCCommandVersion(newURI()));
    [javac] 		                   ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/communications/CommClient.java:881: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] 	public Version version(final XMLRPCCommandVersion command)
    [javac] 	                             ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/communications/HTTPClient.java:238: warning: [deprecation] Protocol(String,SecureProtocolSocketFactory,int) in Protocol has been deprecated
    [javac] 				xwssl = new Protocol(uri.getScheme(), new AuthSSLProtocolSocketFactory(uri.getScheme(), keyStore,
    [javac] 				        ^
    [javac] Note: Some input files use unchecked or unsafe operations.
    [javac] Note: Recompile with -Xlint:unchecked for details.
    [javac] 6 warnings

services:
    [javac] Compiling 7 source files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes

archdep:
    [javac] Compiling 20 source files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes

upgrade:

worker:
    [javac] Compiling 42 source files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes
    [javac] Note: Some input files use unchecked or unsafe operations.
    [javac] Note: Recompile with -Xlint:unchecked for details.

dispatcher:
    [javac] Compiling 14 source files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/dispatcher/Dispatcher.java:216: warning: [deprecation] HTTPOpenIdHandler in xtremweb.dispatcher has been deprecated
    [javac] 				HTTPOpenIdHandler.setCACertificateEntries(getConfig().getKeyStore());
    [javac] 				^
    [javac] Note: Some input files use unchecked or unsafe operations.
    [javac] Note: Recompile with -Xlint:unchecked for details.
    [javac] 1 warning

worker.manifest:

jni:
     [copy] Copying 10 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/natif
     [exec] make[1]: Entering directory `/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/natif'
     [exec] gcc -c  -fPIC -g -Wall -I'/usr/lib/jvm/java-8-openjdk-amd64/include/linux' -fPIC -I'/usr/lib/jvm/java-8-openjdk-amd64/include' -o ../../build/classes/obj/linux-amd64/XWUtilUnix.o XWUtilUnix.c
     [exec] gcc -shared  -fPIC  -L'/usr/lib/jvm/java-8-openjdk-amd64/lib' -o ../../build/classes/obj/linux-amd64/XWUtil.jni ../../build/classes/obj/linux-amd64/XWUtilUnix.o 
     [exec] cp ../../build/classes/obj/linux-amd64/XWUtil.jni ../../build/classes/jni/XWUtil.jni.10.6.0.linux-amd64
     [exec] gcc -c  -fPIC -g -Wall -I'/usr/lib/jvm/java-8-openjdk-amd64/include/linux' -fPIC -I'/usr/lib/jvm/java-8-openjdk-amd64/include' -o ../../build/classes/obj/linux-amd64/XWTracerUnixlib.o XWTracerUnixlib.c
     [exec] mkdir: cannot create directory ‘../../build/classes/obj/linux-amd64’: File exists
     [exec] gcc -c  -fPIC -g -Wall -I'/usr/lib/jvm/java-8-openjdk-amd64/include/linux' -fPIC -I'/usr/lib/jvm/java-8-openjdk-amd64/include' -o ../../build/classes/obj/linux-amd64/XWTracerUnixImpl.o XWTracerUnixImpl.c
     [exec] gcc -shared  -fPIC  -L'/usr/lib/jvm/java-8-openjdk-amd64/lib' -o ../../build/classes/obj/linux-amd64/XwTracer.jni ../../build/classes/obj/linux-amd64/XWTracerUnixlib.o ../../build/classes/obj/linux-amd64/XWTracerUnixImpl.o 
     [exec] XWTracerUnixlib.c: In function ‘processCpustate’:
     [exec] XWTracerUnixlib.c:194:19: warning: variable ‘relative_jiffies’ set but not used [-Wunused-but-set-variable]
     [exec]      idle_jiffies, relative_jiffies, absolute_jiffies;
     [exec]                    ^
     [exec] XWTracerUnixlib.c:191:49: warning: variable ‘cpu_idle’ set but not used [-Wunused-but-set-variable]
     [exec]    static double cpu_user, cpu_nice, cpu_system, cpu_idle;
     [exec]                                                  ^
     [exec] XWTracerUnixlib.c:191:37: warning: variable ‘cpu_system’ set but not used [-Wunused-but-set-variable]
     [exec]    static double cpu_user, cpu_nice, cpu_system, cpu_idle;
     [exec]                                      ^
     [exec] XWTracerUnixlib.c:191:27: warning: variable ‘cpu_nice’ set but not used [-Wunused-but-set-variable]
     [exec]    static double cpu_user, cpu_nice, cpu_system, cpu_idle;
     [exec]                            ^
     [exec] XWTracerUnixlib.c:191:17: warning: variable ‘cpu_user’ set but not used [-Wunused-but-set-variable]
     [exec]    static double cpu_user, cpu_nice, cpu_system, cpu_idle;
     [exec]                  ^
     [exec] XWTracerUnixlib.c: In function ‘writeState’:
     [exec] XWTracerUnixlib.c:589:7: warning: variable ‘test’ set but not used [-Wunused-but-set-variable]
     [exec]    int test;
     [exec]        ^
     [exec] XWTracerUnixlib.c:587:8: warning: variable ‘k’ set but not used [-Wunused-but-set-variable]
     [exec]    char k[1];
     [exec]         ^
     [exec] XWTracerUnixlib.c:584:9: warning: variable ‘c’ set but not used [-Wunused-but-set-variable]
     [exec]    char* c;
     [exec]          ^
     [exec] cp ../../build/classes/obj/linux-amd64/XwTracer.jni ../../build/classes/jni/XwTracer.jni.10.6.0.linux-amd64
     [exec] gcc -c  -fPIC -g -Wall -I'/usr/lib/jvm/java-8-openjdk-amd64/include/linux' -fPIC -I'/usr/lib/jvm/java-8-openjdk-amd64/include' -o ../../build/classes/obj/linux-amd64/PortMapper.o PortMapper.c
     [exec] gcc -shared  -fPIC  -L'/usr/lib/jvm/java-8-openjdk-amd64/lib' -o ../../build/classes/obj/linux-amd64/PortMapper.jni ../../build/classes/obj/linux-amd64/PortMapper.o 
     [exec] cp ../../build/classes/obj/linux-amd64/PortMapper.jni ../../build/classes/jni/PortMapper.jni.10.6.0.linux-amd64
     [exec] make[1]: Leaving directory `/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/natif'
     [exec] PortMapper.c: In function ‘getport’:
     [exec] PortMapper.c:29:2: warning: implicit declaration of function ‘pmap_getport’ [-Wimplicit-function-declaration]
     [exec]   return pmap_getport (&amp;addr, prog, version, protocol);
     [exec]   ^

Worker:
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes/data
     [copy] Copying 23 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes/data

tests:
    [javac] Compiling 50 source files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/test/xtremweb/communications/XMLRPCCommandVersionTest.java:29: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] import xtremweb.communications.XMLRPCCommandVersion;
    [javac]                               ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/test/xtremweb/communications/XMLRPCCommandVersionTest.java:47: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] 			setCmd(new XMLRPCCommandVersion());
    [javac] 			           ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/test/xtremweb/communications/XMLRPCCommandVersionTest.java:48: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] 			setCmd2(new XMLRPCCommandVersion());
    [javac] 			            ^
    [javac] Note: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/test/xtremweb/common/XMLHashtableTest.java uses unchecked or unsafe operations.
    [javac] Note: Recompile with -Xlint:unchecked for details.
    [javac] 3 warnings

client:

allservices:

Dispatcher:
     [echo]  
     [echo] 	JAR JAR JAR
     [echo] 	basedir="/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes"
     [echo] 	jarfile="/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/lib/xtremweb.jar"
     [echo] 	manifest="/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/misc/worker.manifest"
     [echo]       
      [jar] Building jar: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/lib/xtremweb.jar

rpcv:

all:

copylibs:

distrib:

BUILD SUCCESSFUL
Total time: 18 seconds
./build.sh -f install.xml install 
Buildfile: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/install.xml

tstamp:

version:

prepare:

configure:
     [echo] 
     [echo] user  login : ${xtremweb.admin.login} ${xtremweb.admin.password}
     [echo] admin login : ${xtremweb.admin.login} ${xtremweb.admin.password}
     [echo] DB su login :  
     [echo] ENGINE : ""
     [echo] launcher.url = http://nohost/
     [echo] system.user  = xwhep
     [echo] xwsuffix=LINUX-AMD64
     [echo] xwarch=AMD64
     [echo] target.os=Linux
     [echo] cross.prefix=${cross.prefix}
     [echo] cross.java.home=${cross.java.home}
     [echo] version=10.6.0

installConfig:
     [echo] 
     [echo]        ==&gt; version    = 10.6.0
     [echo]        ==&gt; dist.dir   = /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0
     [echo]        ==&gt; installDir = /opt/xwhep-10.6.0
     [echo]     

installFiles:
     [copy] Copying 98 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/doc
     [copy] Copying 17 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/docker
     [copy] Copying 31 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/lib
     [copy] Copying 31 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.server/installer/PckRoot/private/etc/xwhep.server/lib
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf
     [echo] 
     [echo]       xtremweb.admin.login=${xtremweb.admin.login}
     [echo]       xtremweb.admin.password=${xtremweb.admin.password}
     [echo]     
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf
     [echo] 
     [echo]       xtremweb.worker.login=${xtremweb.worker.login}
     [echo]       xtremweb.worker.password=${xtremweb.worker.password}
     [echo]     
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.worker/installer/PckRoot/private/etc/xwhep.worker/conf
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.worker/installer/PckRoot/Applications/xwhep.worker
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.worker/installer/PckRoot/private/etc/xwhep.worker/conf
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.vworker/installer/PckRoot/Applications/xwhep.vworker
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.vworker/installer/PckRoot/private/etc/xwhep.vworker/bin
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.client/installer/PckRoot/Applications/xwhep.client/conf
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.server/installer/PckRoot/private/etc/xwhep.server/conf
     [copy] Copying 98 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.server/installer/PckRoot/Applications/xwhep.server/doc
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.client/conf
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.client/innoSetup/client/conf
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/conf
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/innoSetup/worker/conf
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/conf
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/innoSetup/worker/conf
     [copy] Copying 2 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/lib
     [copy] Copying 2 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/innoSetup/worker/lib
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/innoSetup/worker/lib
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/innoSetup/worker/lib
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/innoSetup/worker/misc
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/innoSetup/worker/doc
     [copy] Copying 8 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/bin
     [copy] Copying 5 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/innoSetup/worker/bin
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/doc
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.server/conf
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.server/innoSetup/server/conf
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.server/conf
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.server/innoSetup/server/conf
     [copy] Copying 2 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.server/lib
     [copy] Copying 2 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.server/innoSetup/server/lib
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.server/innoSetup/server/misc
     [copy] Copying 2 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.server/innoSetup/server/bin

setupScripts:
     [copy] Copying 266 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/db-maintenance

installScripts:

createDownload:
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.worker/installer/PckRoot/private/etc/xwhep.worker/keystore
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.client/installer/PckRoot/Applications/xwhep.client/lib
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.client/installer/PckRoot/Applications/xwhep.client/lib
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.client/installer/PckRoot/Applications/xwhep.client/keystore
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.server/installer/PckRoot/private/etc/xwhep.server/keystore
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/db-maintenance
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/db-maintenance
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin
     [copy] Copying 98 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/doc/xwhep.client/doc
[jarbundler] Creating application bundle: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/xwhep.client.app
     [copy] Copying 5 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/xwhep.client.app
     [copy] Copying 20 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.worker
     [copy] Copying 17 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.vworker
     [copy] Copying 12 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.client
     [copy] Copying 19 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.server
     [copy] Copying 3 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/innoSetup
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker
     [copy] Copying 3 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.server/innoSetup
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.server
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.server.conf
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.server/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.server/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.server/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.server/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.server/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.server/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.server.conf/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.server.conf/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.server.conf/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.server.conf/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.server.conf/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.server.conf/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.bridgedgsg
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.bridgedgsg/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.bridgedgsg/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.bridgedgsg/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.bridgedgsg/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.bridgedgsg/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.bridgedgsg/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.client
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.client/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.client/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.client/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.client/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.client/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.client/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.worker
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.worker/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.worker/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.worker/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.worker/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.worker/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.worker/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.client/innoSetup/client/lib
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.client/innoSetup/client/lib
     [copy] Copying 11 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0
     [copy] Copying 6 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/apptest

ganglia:

install:
     [echo] 
     [echo]       Installation done
     [echo]     

BUILD SUCCESSFUL
Total time: 8 seconds</msg>
<status status="PASS" endtime="20170915 10:38:13.960" starttime="20170915 10:38:13.959"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${compile_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170915 10:38:13.961" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170915 10:38:13.961" starttime="20170915 10:38:13.960"></status>
</kw>
<kw name="Get Lines Containing String" library="String">
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<arguments>
<arg>${compile_result.stdout}</arg>
<arg>BUILD SUCCESSFUL</arg>
</arguments>
<assign>
<var>${extract_build_successful}</var>
</assign>
<msg timestamp="20170915 10:38:13.961" level="INFO">3 out of 486 lines matched</msg>
<msg timestamp="20170915 10:38:13.961" level="INFO">${extract_build_successful} = BUILD SUCCESSFUL
BUILD SUCCESSFUL
BUILD SUCCESSFUL</msg>
<status status="PASS" endtime="20170915 10:38:13.961" starttime="20170915 10:38:13.961"></status>
</kw>
<kw name="Get Line Count" library="String">
<doc>Returns and logs the number of lines in the given string.</doc>
<arguments>
<arg>${extract_build_successful}</arg>
</arguments>
<assign>
<var>${line_count_build_successful}</var>
</assign>
<msg timestamp="20170915 10:38:13.961" level="INFO">3 lines</msg>
<msg timestamp="20170915 10:38:13.962" level="INFO">${line_count_build_successful} = 3</msg>
<status status="PASS" endtime="20170915 10:38:13.962" starttime="20170915 10:38:13.961"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${line_count_build_successful}</arg>
<arg>3</arg>
</arguments>
<msg timestamp="20170915 10:38:13.963" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170915 10:38:13.963" starttime="20170915 10:38:13.962"></status>
</kw>
<status status="PASS" endtime="20170915 10:38:13.963" starttime="20170915 10:37:44.797"></status>
</kw>
<kw name="Install XWtremWeb" library="XWCommon">
<kw name="List Directories In Directory" library="OperatingSystem">
<doc>Wrapper for `List Directory` that returns only directories.</doc>
<arguments>
<arg>${DIST_PATH}</arg>
<arg>xwhep-*</arg>
<arg>absolute</arg>
</arguments>
<assign>
<var>@{list_directories_dist_path}</var>
</assign>
<msg timestamp="20170915 10:38:13.963" html="yes" level="INFO">Listing contents of directory '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist&lt;/a&gt;'.</msg>
<msg timestamp="20170915 10:38:13.964" level="INFO">1 directory:
/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0</msg>
<msg timestamp="20170915 10:38:13.964" level="INFO">@{list_directories_dist_path} = [ /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0 ]</msg>
<status status="PASS" endtime="20170915 10:38:13.964" starttime="20170915 10:38:13.963"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>@{list_directories_dist_path}[0]</arg>
</arguments>
<msg timestamp="20170915 10:38:13.964" level="INFO">/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0</msg>
<status status="PASS" endtime="20170915 10:38:13.964" starttime="20170915 10:38:13.964"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}</arg>
<arg>@{list_directories_dist_path}[0]</arg>
</arguments>
<msg timestamp="20170915 10:38:13.965" level="INFO">${DIST_XWHEP_PATH} = /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0</msg>
<status status="PASS" endtime="20170915 10:38:13.965" starttime="20170915 10:38:13.965"></status>
</kw>
<kw name="Directory Should Exist" library="OperatingSystem">
<doc>Fails unless the given path points to an existing directory.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}</arg>
</arguments>
<msg timestamp="20170915 10:38:13.965" html="yes" level="INFO">Directory '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0&lt;/a&gt;' exists.</msg>
<status status="PASS" endtime="20170915 10:38:13.965" starttime="20170915 10:38:13.965"></status>
</kw>
<kw name="Create XWCONFIGURE.VALUES FILE" library="XWCommon">
<arguments>
<arg>${DIST_XWHEP_PATH}</arg>
</arguments>
<kw name="Directory Should Exist" library="OperatingSystem">
<doc>Fails unless the given path points to an existing directory.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf</arg>
</arguments>
<msg timestamp="20170915 10:38:13.966" html="yes" level="INFO">Directory '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf&lt;/a&gt;' exists.</msg>
<status status="PASS" endtime="20170915 10:38:13.966" starttime="20170915 10:38:13.966"></status>
</kw>
<kw name="Remove File" library="OperatingSystem">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
</arguments>
<msg timestamp="20170915 10:38:13.967" html="yes" level="INFO">Removed file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170915 10:38:13.967" starttime="20170915 10:38:13.966"></status>
</kw>
<kw name="Create File" library="OperatingSystem">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
</arguments>
<msg timestamp="20170915 10:38:13.968" html="yes" level="INFO">Created file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170915 10:38:13.968" starttime="20170915 10:38:13.967"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>XWUSER='${XWCONFIGURE.VALUES.XWUSER}'\n</arg>
</arguments>
<msg timestamp="20170915 10:38:13.976" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170915 10:38:13.976" starttime="20170915 10:38:13.968"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>DBVENDOR='${XWCONFIGURE.VALUES.DBVENDOR}'\n</arg>
</arguments>
<msg timestamp="20170915 10:38:13.978" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170915 10:38:13.978" starttime="20170915 10:38:13.976"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>DBENGINE='${XWCONFIGURE.VALUES.DBENGINE}'\n</arg>
</arguments>
<msg timestamp="20170915 10:38:13.980" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170915 10:38:13.980" starttime="20170915 10:38:13.978"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>DBHOST='${XWCONFIGURE.VALUES.DBHOST}'\n</arg>
</arguments>
<msg timestamp="20170915 10:38:13.981" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170915 10:38:13.981" starttime="20170915 10:38:13.980"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>DBADMINLOGIN='${XWCONFIGURE.VALUES.DBADMINLOGIN}'\n</arg>
</arguments>
<msg timestamp="20170915 10:38:13.983" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170915 10:38:13.983" starttime="20170915 10:38:13.981"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>DBADMINPASSWORD='${XWCONFIGURE.VALUES.DBADMINPASSWORD}'\n</arg>
</arguments>
<msg timestamp="20170915 10:38:13.984" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170915 10:38:13.984" starttime="20170915 10:38:13.983"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>DBNAME='${XWCONFIGURE.VALUES.DBNAME}'\n</arg>
</arguments>
<msg timestamp="20170915 10:38:13.986" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170915 10:38:13.986" starttime="20170915 10:38:13.985"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>DBUSERLOGIN='${XWCONFIGURE.VALUES.DBUSERLOGIN}'\n</arg>
</arguments>
<msg timestamp="20170915 10:38:13.988" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170915 10:38:13.988" starttime="20170915 10:38:13.986"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>DBUSERPASSWORD='${XWCONFIGURE.VALUES.DBUSERPASSWORD}'\n</arg>
</arguments>
<msg timestamp="20170915 10:38:13.989" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170915 10:38:13.989" starttime="20170915 10:38:13.988"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>XWADMINLOGIN='${XWCONFIGURE.VALUES.XWADMINLOGIN}'\n</arg>
</arguments>
<msg timestamp="20170915 10:38:13.991" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170915 10:38:13.991" starttime="20170915 10:38:13.989"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>XWADMINPASSWORD='${XWCONFIGURE.VALUES.XWADMINPASSWORD}'\n</arg>
</arguments>
<msg timestamp="20170915 10:38:13.992" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170915 10:38:13.992" starttime="20170915 10:38:13.991"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>XWWORKERLOGIN='${XWCONFIGURE.VALUES.XWWORKERLOGIN}'\n</arg>
</arguments>
<msg timestamp="20170915 10:38:13.994" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170915 10:38:13.994" starttime="20170915 10:38:13.992"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>XWWORKERPASSWORD='${XWCONFIGURE.VALUES.XWWORKERPASSWORD}'\n</arg>
</arguments>
<msg timestamp="20170915 10:38:13.995" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170915 10:38:13.995" starttime="20170915 10:38:13.994"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>XWSERVER='${XWCONFIGURE.VALUES.XWSERVER}'\n</arg>
</arguments>
<msg timestamp="20170915 10:38:13.997" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170915 10:38:13.997" starttime="20170915 10:38:13.995"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>CERTCN='${XWCONFIGURE.VALUES.CERTCN}'\n</arg>
</arguments>
<msg timestamp="20170915 10:38:13.998" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170915 10:38:13.998" starttime="20170915 10:38:13.997"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>CERTOU='${XWCONFIGURE.VALUES.CERTOU}'\n</arg>
</arguments>
<msg timestamp="20170915 10:38:14.000" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170915 10:38:14.000" starttime="20170915 10:38:13.998"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>CERTO='${XWCONFIGURE.VALUES.CERTO}'\n</arg>
</arguments>
<msg timestamp="20170915 10:38:14.001" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170915 10:38:14.001" starttime="20170915 10:38:14.000"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>CERTL='${XWCONFIGURE.VALUES.CERTL}'\n</arg>
</arguments>
<msg timestamp="20170915 10:38:14.003" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170915 10:38:14.004" starttime="20170915 10:38:14.002"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>CERTC='${XWCONFIGURE.VALUES.CERTC}'\n</arg>
</arguments>
<msg timestamp="20170915 10:38:14.005" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170915 10:38:14.005" starttime="20170915 10:38:14.004"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>CERTC='${XWCONFIGURE.VALUES.CERTC}'\n</arg>
</arguments>
<msg timestamp="20170915 10:38:14.006" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170915 10:38:14.007" starttime="20170915 10:38:14.005"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>SSLKEYPASSPHRASE='${XWCONFIGURE.VALUES.SSLKEYPASSPHRASE}'\n</arg>
</arguments>
<msg timestamp="20170915 10:38:14.008" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170915 10:38:14.008" starttime="20170915 10:38:14.007"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>SSLKEYSERVERPASSWORD='${XWCONFIGURE.VALUES.SSLKEYSERVERPASSWORD}'\n</arg>
</arguments>
<msg timestamp="20170915 10:38:14.010" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170915 10:38:14.010" starttime="20170915 10:38:14.008"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>SSLKEYWORKERPASSWORD='${XWCONFIGURE.VALUES.SSLKEYWORKERPASSWORD}'\n</arg>
</arguments>
<msg timestamp="20170915 10:38:14.011" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170915 10:38:14.012" starttime="20170915 10:38:14.010"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>SSLKEYCLIENTPASSWORD='${XWCONFIGURE.VALUES.SSLKEYCLIENTPASSWORD}'\n</arg>
</arguments>
<msg timestamp="20170915 10:38:14.013" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170915 10:38:14.013" starttime="20170915 10:38:14.012"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>X509CERTDIR='${XWCONFIGURE.VALUES.X509CERTDIR}'\n</arg>
</arguments>
<msg timestamp="20170915 10:38:14.015" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170915 10:38:14.015" starttime="20170915 10:38:14.013"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>USERCERTDIR='${XWCONFIGURE.VALUES.USERCERTDIR}'\n</arg>
</arguments>
<msg timestamp="20170915 10:38:14.019" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170915 10:38:14.020" starttime="20170915 10:38:14.015"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>XWUPGRADEURL='${XWCONFIGURE.VALUES.XWUPGRADEURL}'\n</arg>
</arguments>
<msg timestamp="20170915 10:38:14.021" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170915 10:38:14.021" starttime="20170915 10:38:14.020"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>HTTPSPORT='${XWCONFIGURE.VALUES.HTTPSPORT}'\n</arg>
</arguments>
<msg timestamp="20170915 10:38:14.023" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170915 10:38:14.023" starttime="20170915 10:38:14.021"></status>
</kw>
<kw name="Log File" library="OperatingSystem">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
</arguments>
<msg timestamp="20170915 10:38:14.023" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<msg timestamp="20170915 10:38:14.025" level="INFO">XWUSER='root'
DBVENDOR='mysql'
DBENGINE='InnoDB'
DBHOST='localhost'
DBADMINLOGIN='root'
DBADMINPASSWORD='root'
DBNAME='xtremweb'
DBUSERLOGIN='xwuser'
DBUSERPASSWORD='xwuser'
XWADMINLOGIN='admin'
XWADMINPASSWORD='admin'
XWWORKERLOGIN='worker'
XWWORKERPASSWORD='worker'
XWSERVER='localhost'
CERTCN='localhost'
CERTOU='MrRobotFramework'
CERTO='MrRobotFramework'
CERTL='MrRobotFramework'
CERTC='fr'
CERTC='fr'
SSLKEYPASSPHRASE='MrRobotFramework'
SSLKEYSERVERPASSWORD='MrRobotFramework'
SSLKEYWORKERPASSWORD='MrRobotFramework'
SSLKEYCLIENTPASSWORD='MrRobotFramework'
X509CERTDIR='/tmp/castore'
USERCERTDIR=''
XWUPGRADEURL='http://localhost:8080/somewhere/xtremweb.jar'
HTTPSPORT='9443'
</msg>
<status status="PASS" endtime="20170915 10:38:14.025" starttime="20170915 10:38:14.023"></status>
</kw>
<status status="PASS" endtime="20170915 10:38:14.026" starttime="20170915 10:38:13.966"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd ${DIST_XWHEP_PATH} &amp;&amp; ./bin/xwconfigure --yes --nopkg --rmdb</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${install_result}</var>
</assign>
<msg timestamp="20170915 10:38:14.026" level="INFO">Starting process:
cd /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0 &amp;&amp; ./bin/xwconfigure --yes --nopkg --rmdb</msg>
<msg timestamp="20170915 10:38:14.029" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170915 10:38:37.493" level="INFO">Process completed.</msg>
<msg timestamp="20170915 10:38:37.493" level="INFO">${install_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170915 10:38:37.493" starttime="20170915 10:38:14.026"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${install_result.stdout}</arg>
</arguments>
<msg timestamp="20170915 10:38:37.494" level="INFO">
--------------------------------------------------
         XtremWeb-HEP 10.6.0 
         XWConfigurator

This script helps to configure an XtremWeb-HEP deployment 
--------------------------------------------------

This script aims to :
 - install a new database: Since 9.1. MySQL (http://www.mysql.com/) only is supported
 - creates electronic keys : 
   * server private key
   * client key store including server public key
   * worker key store including server public key
 - prepare installers
   * Win32 InnoSetup project (http://www.jrsoftware.org/isinfo.php)
   * Mac OS X Package Maker projects (http:/www.apple.com)
   * Linux RPM (http://www.rpm.org)
   * Linux Debian package (http://www.debian.org)

In order to complete configuration, several informations are needed :
 -1- MySQL administrator account (login and password)
     =&gt; If you don't know it, please ask your system administrator
 -1.1- Database server, if using MySQL
     =&gt; The name or IP address of your MySQL server
 -1.2- Database name
     =&gt; If you don't have a valid MySQL administrator account, you won't be able to perform this
     =&gt; In such a case, please ask your system administrator to create one new empty database for us
 -1.3- Database user (login and password), if using MySQL
     =&gt; This account must have insert/update/delete privileges to the previous database
     =&gt; This account will be used by the XW server to access database
     =&gt; If you don't have a valid MySQL administrator account, you won't be able to perform this
     =&gt; In such a case, please ask your system administrator to create one for you
 -2- Electronic key passphrase
     =&gt; This is free and up to you
 -3- Electronic key password for the server
     =&gt; This is free and up to you
 -4- Electronic key password for the worker
     =&gt; This is free and up to you
 -5- Electronic key password for the client
     =&gt; This is free and up to you

All informations are stored in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values
So that, you can stop this script when you want, and don't have to re-enter all informations

To reset any variable, edit or erase /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values

You should be aware that /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values stores some critical informations!!!

-----------------------------

DB vendor set to 'mysql'
DB engine set to 'InnoDB'
***********************
 Electronic keys found 
***********************
Upgrade URL is localhost : I guess this is for testing only...
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Can't download xtremweb.jar from 'http://localhost:8080/somewhere/xtremweb.jar'
You will have to ensure that xtremweb.jar can be downloaded from 'http://localhost:8080/somewhere/xtremweb.jar'
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

You entered :
**** Account to run the middleware : 
     USER                 = 'root'
**** Database configuration : 
     DBVENDOR             = 'mysql'
     DBENGINE             = 'InnoDB'
     DBHOST               = 'localhost'
     DBNAME               = 'xtremweb'
     DBADMINLOGIN         = 'root'
     DBADMINPASSWORD      = 'root'
     DBUSERLOGIN          = 'xwuser'
     DBUSERPASSWORD       = 'xwuser'
**** XtremWeb-HEP administrator client configuration : 
     XWADMINLOGIN         = 'admin'
     XWADMINPASSWORD      = 'admin'
**** XtremWeb-HEP public worker configuration : 
     XWWORKERLOGIN        = 'worker'
     XWWORKERPASSWORD     = 'worker'
**** XtremWeb-HEP server configuration : 
     XWSERVER             = 'localhost'
     XWUPGRADEURL         = 'http://localhost:8080/somewhere/xtremweb.jar'
**** CA certificates path : 
     X509CERTDIR          = '/tmp/castore'
**** Certificate configuration : 
     Keys found           = ''
     SSLKEYPASSPHRASE     = 'MrRobotFramework'
     SSLKEYCLIENTPASSWORD = 'MrRobotFramework'
     SSLKEYSERVERPASSWORD = 'MrRobotFramework'
     SSLKEYWORKERPASSWORD = 'MrRobotFramework'
     Common Name          = 'localhost'
     Organisation Unit    = 'MrRobotFramework'
     Organization Name    = 'MrRobotFramework'
     Locality Name        = 'MrRobotFramework'
     Country              = 'fr'

Database schema 'xtremweb' exists : DB reset forced
Resetting database schema 'xtremweb'
Preparing database script............Done
Preparing database schema 'xtremweb'
DB engine for 'xtremweb' is InnoDB :  Creating foreign keys for live tables ...
Creating DB triggers using xwhep-core-tables-create-triggers-for-data-coming-from-8.sql ...

Table "users"

Table "hosts"

Table "datas"

Table "works"

Table "tasks"

Table "apps"
Creating DB triggers using xwhep-core-tables-create-triggers-for-history-coming-from-8.sql ...

Table "users_history"

Table "hosts_history"

Table "datas_history"

Table "works_history"

Table "tasks_history"

Table "apps_history"
Create the SQL script for the creation of DB views in the current schema ...
Create the SQL script for the creation of DB users views in the current schema ...
Creating DB views using xwhep-core-tables-create-views-for-tables.sql ...
Creating DB views using xwhep-core-tables-create-users-views.sql ...
Creating DB views using xwhep-core-tables-create-views-for-sessions-and-groups.sql ...
Creating DB views using xwhep-core-tables-create-views-for-relationships.sql ...
Creating DB views using xwhep-core-tables-create-views-for-offering-and-billing.sql ...
Creating DB views using xwhep-core-tables-create-views-hosts-matching-works.sql ...
Granting access to DB schema 'xtremweb' ...
Database schema 'xtremweb' : checking compliance to '05.7.3'
Database schema 'xtremweb' : is compliant to 05.7.3
Database schema 'xtremweb' : checking compliance to '05.8.0'
Database schema 'xtremweb' : is compliant to 05.8.0
Database schema 'xtremweb' : checking compliance to '06.0.1'
Database schema 'xtremweb' : is compliant to 06.0.1
Database schema 'xtremweb' : checking compliance to '07.0.0'
Database schema 'xtremweb' : is compliant to 07.0.0
Database schema 'xtremweb' : checking compliance to '07.2.0'
Database schema 'xtremweb' : is compliant to 07.2.0
Database schema 'xtremweb' : checking compliance to '07.4.1'
Database schema 'xtremweb' : is compliant to 07.4.1
Database schema 'xtremweb' : checking compliance to '07.5.0'
Database schema 'xtremweb' : is compliant to 07.5.0
Database schema 'xtremweb' : checking compliance to '08.0.0'
Database schema 'xtremweb' : is compliant to 08.0.0
Database schema 'xtremweb' : checking compliance to '08.2.0'
Database schema 'xtremweb' : is compliant to 08.2.0
Database schema 'xtremweb' : checking compliance to '08.3.1'
Database schema 'xtremweb' : is compliant to 08.3.1
Database schema 'xtremweb' : checking compliance to '09.1.0'
Database schema 'xtremweb' : is compliant to 09.1.0
Database schema 'xtremweb' : checking compliance to '10.0.0'
Database schema 'xtremweb' : is compliant to 10.0.0
Database schema 'xtremweb' : checking compliance to '10.2.0'
Database schema 'xtremweb' : is compliant to 10.2.0
Database schema 'xtremweb' : checking compliance to '10.6.0'
Database schema 'xtremweb' : is not compliant to '10.6.0'; updating
10.6.0 is compliant, dont worry
10.6.0 is compliant, dont worry
Database schema 'xtremweb' : updated to '10.6.0'
Set current version to '10.6.0'
Setting the account to run the middleware to 'root'..........................Done
Preparing server configuration file '/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf'................. Done
Preparing xtremweb.ganglia...Done
Generating script to manage keystores (/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/xwhepgenkeys)  Done
Generating script to manage OpenId server certificates (/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/xwhepupdateopenidcerts) Done
Preparing worker configuration file '/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf'.... Done
Copying worker configuration file /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.worker/installer/PckRoot/private/etc/xwhep.worker/conf/xtremweb.worker.conf
Copying worker configuration file /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/innoSetup/worker/conf/xtremweb.worker.conf
Done
Preparing client configuration file '/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.client.conf'...Done
Copying client configuration file /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.client.conf to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.client/innoSetup/client/conf/xtremweb.client.conf
****************************************************************************************
Done
*******************
Keystores unmodified
*******************

Preparing  client package to '/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/xwhep.client'.....Done
Copying client configuration file /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/xwhep.client/10.6.0/conf/xtremweb.client.conf.template to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.client/installer/PckRoot/Applications/xwhep.client/conf/xtremweb.client.conf
 Done

Preparing server RPM package to '/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.server'.... Done

Preparing server configuration RPM package to '/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.server.conf'.... Done

Preparing server Debian package
Server Debian package ready

Preparing server configuration Debian package
Server Configuration Debian package ready
Preparing DG to SG bridge RPM package to '/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.bridgedgsg'............ Done

Preparing bridgedgsg Debian package
Bridgedgsg Debian package ready
Preparing SG to DG bridge RPM package to '/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.bridgesgdg'........ Done

Preparing bridgesgdg Debian package
Bridgesgdg Debian package ready
Preparing client RPM package to '/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.client'.... Done

Preparing client Debian package
Client Debian package ready

Preparing worker RPM package to '/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.worker'.... Done

Preparing worker Debian package
Worker Debian package ready

&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;
! Everything is now prepared !
&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;

Available packages :
  * server
   - RedHat RPM  in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.server
   - Debian DPKG in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.server
   - Apple  PKG  in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.server

  * Desktop Grid to Service Grid bridge
   - RedHat RPM  in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.bridgedgsg
   - Debian DPKG in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.bridgedgsg

  * Service Grid to Desktop Grid bridge
   - RedHat RPM  in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.bridgesgdg
   - Debian DPKG in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.bridgesgdg

  * client
   - RedHat RPM  in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.client
   - Debian DPKG in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.client
   - Apple  PKG  in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.client
   - Windows installer  in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.client/innoSetup
                        (http://www.innosetup.com/isinfo.php)

  * worker
   - RedHat  RPM        in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.worker
   - Debian  DPKG       in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.worker
   - Apple   PKG        in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.worker
   - Windows installer  in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/innoSetup
                        (http://www.innosetup.com/isinfo.php)

  * client
   - Zip file (platform independant)  in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/xwhep-client-10.6.0.zip


You can manually :
  * start the server
   - /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/xwhep.server console
  * start a worker
   - /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/xwhep.worker console
  * as soon as your server is started you can use the client
   - /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/xwworkers : if you have started a worker, it is in the list
   - /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/xwusers
   - /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/xwapps
   - etc.

As soon as everything is ok you should :
  * install you server using its packages
  * deploy worker over your own volunteer PCs using its packages
  * install your worker packages on any of your web sites
    if you wish to enable anonymous volunteer power
  * install your client ZIP file on any of your web sites
    to allow registered users to use the platform

That's all folks
</msg>
<status status="PASS" endtime="20170915 10:38:37.494" starttime="20170915 10:38:37.493"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${install_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170915 10:38:37.494" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170915 10:38:37.495" starttime="20170915 10:38:37.494"></status>
</kw>
<kw name="Get Lines Containing String" library="String">
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<arguments>
<arg>${install_result.stdout}</arg>
<arg>That's all folks</arg>
</arguments>
<assign>
<var>${install_result_successful}</var>
</assign>
<msg timestamp="20170915 10:38:37.495" level="INFO">1 out of 273 lines matched</msg>
<msg timestamp="20170915 10:38:37.495" level="INFO">${install_result_successful} = That's all folks</msg>
<status status="PASS" endtime="20170915 10:38:37.495" starttime="20170915 10:38:37.495"></status>
</kw>
<kw name="Get Line Count" library="String">
<doc>Returns and logs the number of lines in the given string.</doc>
<arguments>
<arg>${install_result_successful}</arg>
</arguments>
<assign>
<var>${line_install_result_successful}</var>
</assign>
<msg timestamp="20170915 10:38:37.495" level="INFO">1 lines</msg>
<msg timestamp="20170915 10:38:37.496" level="INFO">${line_install_result_successful} = 1</msg>
<status status="PASS" endtime="20170915 10:38:37.496" starttime="20170915 10:38:37.495"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${line_install_result_successful}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20170915 10:38:37.496" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170915 10:38:37.496" starttime="20170915 10:38:37.496"></status>
</kw>
<status status="PASS" endtime="20170915 10:38:37.496" starttime="20170915 10:38:13.963"></status>
</kw>
<kw name="Start XWtremWeb Server And XWtremWeb Worker" library="XWCommon">
<kw name="Ping XWtremWeb Database" library="XWServer">
<kw name="Xtremweb Tables Must Exist" library="MySql">
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170915 10:38:37.498" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170915 10:38:37.499" starttime="20170915 10:38:37.497"></status>
</kw>
<status status="PASS" endtime="20170915 10:38:37.499" starttime="20170915 10:38:37.497"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>appTypes</arg>
</arguments>
<msg timestamp="20170915 10:38:37.499" level="INFO">Executing : Table Must Exist  |  appTypes </msg>
<msg timestamp="20170915 10:38:37.499" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='appTypes' </msg>
<status status="PASS" endtime="20170915 10:38:37.500" starttime="20170915 10:38:37.499"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps</arg>
</arguments>
<msg timestamp="20170915 10:38:37.501" level="INFO">Executing : Table Must Exist  |  apps </msg>
<msg timestamp="20170915 10:38:37.501" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='apps' </msg>
<status status="PASS" endtime="20170915 10:38:37.501" starttime="20170915 10:38:37.500"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps_history</arg>
</arguments>
<msg timestamp="20170915 10:38:37.501" level="INFO">Executing : Table Must Exist  |  apps_history </msg>
<msg timestamp="20170915 10:38:37.501" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='apps_history' </msg>
<status status="PASS" endtime="20170915 10:38:37.503" starttime="20170915 10:38:37.501"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>cpuTypes</arg>
</arguments>
<msg timestamp="20170915 10:38:37.503" level="INFO">Executing : Table Must Exist  |  cpuTypes </msg>
<msg timestamp="20170915 10:38:37.503" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='cpuTypes' </msg>
<status status="PASS" endtime="20170915 10:38:37.504" starttime="20170915 10:38:37.503"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>dataTypes</arg>
</arguments>
<msg timestamp="20170915 10:38:37.504" level="INFO">Executing : Table Must Exist  |  dataTypes </msg>
<msg timestamp="20170915 10:38:37.504" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='dataTypes' </msg>
<status status="PASS" endtime="20170915 10:38:37.505" starttime="20170915 10:38:37.504"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas</arg>
</arguments>
<msg timestamp="20170915 10:38:37.505" level="INFO">Executing : Table Must Exist  |  datas </msg>
<msg timestamp="20170915 10:38:37.505" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='datas' </msg>
<status status="PASS" endtime="20170915 10:38:37.506" starttime="20170915 10:38:37.505"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas_history</arg>
</arguments>
<msg timestamp="20170915 10:38:37.506" level="INFO">Executing : Table Must Exist  |  datas_history </msg>
<msg timestamp="20170915 10:38:37.507" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='datas_history' </msg>
<status status="PASS" endtime="20170915 10:38:37.508" starttime="20170915 10:38:37.506"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables</arg>
</arguments>
<msg timestamp="20170915 10:38:37.508" level="INFO">Executing : Table Must Exist  |  executables </msg>
<msg timestamp="20170915 10:38:37.508" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='executables' </msg>
<status status="PASS" endtime="20170915 10:38:37.509" starttime="20170915 10:38:37.508"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables_history</arg>
</arguments>
<msg timestamp="20170915 10:38:37.509" level="INFO">Executing : Table Must Exist  |  executables_history </msg>
<msg timestamp="20170915 10:38:37.509" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='executables_history' </msg>
<status status="PASS" endtime="20170915 10:38:37.510" starttime="20170915 10:38:37.509"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups</arg>
</arguments>
<msg timestamp="20170915 10:38:37.510" level="INFO">Executing : Table Must Exist  |  groups </msg>
<msg timestamp="20170915 10:38:37.510" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='groups' </msg>
<status status="PASS" endtime="20170915 10:38:37.511" starttime="20170915 10:38:37.510"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups_history</arg>
</arguments>
<msg timestamp="20170915 10:38:37.511" level="INFO">Executing : Table Must Exist  |  groups_history </msg>
<msg timestamp="20170915 10:38:37.511" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='groups_history' </msg>
<status status="PASS" endtime="20170915 10:38:37.512" starttime="20170915 10:38:37.511"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts</arg>
</arguments>
<msg timestamp="20170915 10:38:37.512" level="INFO">Executing : Table Must Exist  |  hosts </msg>
<msg timestamp="20170915 10:38:37.512" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='hosts' </msg>
<status status="PASS" endtime="20170915 10:38:37.513" starttime="20170915 10:38:37.512"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts_history</arg>
</arguments>
<msg timestamp="20170915 10:38:37.513" level="INFO">Executing : Table Must Exist  |  hosts_history </msg>
<msg timestamp="20170915 10:38:37.513" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='hosts_history' </msg>
<status status="PASS" endtime="20170915 10:38:37.514" starttime="20170915 10:38:37.513"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships</arg>
</arguments>
<msg timestamp="20170915 10:38:37.515" level="INFO">Executing : Table Must Exist  |  memberships </msg>
<msg timestamp="20170915 10:38:37.515" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='memberships' </msg>
<status status="PASS" endtime="20170915 10:38:37.515" starttime="20170915 10:38:37.514"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships_history</arg>
</arguments>
<msg timestamp="20170915 10:38:37.516" level="INFO">Executing : Table Must Exist  |  memberships_history </msg>
<msg timestamp="20170915 10:38:37.516" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='memberships_history' </msg>
<status status="PASS" endtime="20170915 10:38:37.516" starttime="20170915 10:38:37.515"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>oses</arg>
</arguments>
<msg timestamp="20170915 10:38:37.517" level="INFO">Executing : Table Must Exist  |  oses </msg>
<msg timestamp="20170915 10:38:37.517" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='oses' </msg>
<status status="PASS" endtime="20170915 10:38:37.518" starttime="20170915 10:38:37.516"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>packageTypes</arg>
</arguments>
<msg timestamp="20170915 10:38:37.518" level="INFO">Executing : Table Must Exist  |  packageTypes </msg>
<msg timestamp="20170915 10:38:37.518" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='packageTypes' </msg>
<status status="PASS" endtime="20170915 10:38:37.519" starttime="20170915 10:38:37.518"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions</arg>
</arguments>
<msg timestamp="20170915 10:38:37.519" level="INFO">Executing : Table Must Exist  |  sessions </msg>
<msg timestamp="20170915 10:38:37.519" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sessions' </msg>
<status status="PASS" endtime="20170915 10:38:37.520" starttime="20170915 10:38:37.519"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions_history</arg>
</arguments>
<msg timestamp="20170915 10:38:37.520" level="INFO">Executing : Table Must Exist  |  sessions_history </msg>
<msg timestamp="20170915 10:38:37.520" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sessions_history' </msg>
<status status="PASS" endtime="20170915 10:38:37.521" starttime="20170915 10:38:37.520"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes</arg>
</arguments>
<msg timestamp="20170915 10:38:37.521" level="INFO">Executing : Table Must Exist  |  sharedAppTypes </msg>
<msg timestamp="20170915 10:38:37.521" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedAppTypes' </msg>
<status status="PASS" endtime="20170915 10:38:37.522" starttime="20170915 10:38:37.521"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes_history</arg>
</arguments>
<msg timestamp="20170915 10:38:37.522" level="INFO">Executing : Table Must Exist  |  sharedAppTypes_history </msg>
<msg timestamp="20170915 10:38:37.522" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedAppTypes_history' </msg>
<status status="PASS" endtime="20170915 10:38:37.523" starttime="20170915 10:38:37.522"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes</arg>
</arguments>
<msg timestamp="20170915 10:38:37.523" level="INFO">Executing : Table Must Exist  |  sharedPackageTypes </msg>
<msg timestamp="20170915 10:38:37.523" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedPackageTypes' </msg>
<status status="PASS" endtime="20170915 10:38:37.524" starttime="20170915 10:38:37.523"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes_history</arg>
</arguments>
<msg timestamp="20170915 10:38:37.524" level="INFO">Executing : Table Must Exist  |  sharedPackageTypes_history </msg>
<msg timestamp="20170915 10:38:37.524" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedPackageTypes_history' </msg>
<status status="PASS" endtime="20170915 10:38:37.525" starttime="20170915 10:38:37.524"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>statuses</arg>
</arguments>
<msg timestamp="20170915 10:38:37.525" level="INFO">Executing : Table Must Exist  |  statuses </msg>
<msg timestamp="20170915 10:38:37.525" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='statuses' </msg>
<status status="PASS" endtime="20170915 10:38:37.526" starttime="20170915 10:38:37.525"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks</arg>
</arguments>
<msg timestamp="20170915 10:38:37.526" level="INFO">Executing : Table Must Exist  |  tasks </msg>
<msg timestamp="20170915 10:38:37.526" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='tasks' </msg>
<status status="PASS" endtime="20170915 10:38:37.527" starttime="20170915 10:38:37.526"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks_history</arg>
</arguments>
<msg timestamp="20170915 10:38:37.527" level="INFO">Executing : Table Must Exist  |  tasks_history </msg>
<msg timestamp="20170915 10:38:37.527" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='tasks_history' </msg>
<status status="PASS" endtime="20170915 10:38:37.528" starttime="20170915 10:38:37.527"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces</arg>
</arguments>
<msg timestamp="20170915 10:38:37.528" level="INFO">Executing : Table Must Exist  |  traces </msg>
<msg timestamp="20170915 10:38:37.528" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='traces' </msg>
<status status="PASS" endtime="20170915 10:38:37.529" starttime="20170915 10:38:37.528"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces_history</arg>
</arguments>
<msg timestamp="20170915 10:38:37.530" level="INFO">Executing : Table Must Exist  |  traces_history </msg>
<msg timestamp="20170915 10:38:37.530" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='traces_history' </msg>
<status status="PASS" endtime="20170915 10:38:37.531" starttime="20170915 10:38:37.529"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>userRights</arg>
</arguments>
<msg timestamp="20170915 10:38:37.531" level="INFO">Executing : Table Must Exist  |  userRights </msg>
<msg timestamp="20170915 10:38:37.531" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='userRights' </msg>
<status status="PASS" endtime="20170915 10:38:37.532" starttime="20170915 10:38:37.531"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups</arg>
</arguments>
<msg timestamp="20170915 10:38:37.532" level="INFO">Executing : Table Must Exist  |  usergroups </msg>
<msg timestamp="20170915 10:38:37.532" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='usergroups' </msg>
<status status="PASS" endtime="20170915 10:38:37.533" starttime="20170915 10:38:37.532"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups_history</arg>
</arguments>
<msg timestamp="20170915 10:38:37.533" level="INFO">Executing : Table Must Exist  |  usergroups_history </msg>
<msg timestamp="20170915 10:38:37.533" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='usergroups_history' </msg>
<status status="PASS" endtime="20170915 10:38:37.535" starttime="20170915 10:38:37.533"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users</arg>
</arguments>
<msg timestamp="20170915 10:38:37.535" level="INFO">Executing : Table Must Exist  |  users </msg>
<msg timestamp="20170915 10:38:37.535" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='users' </msg>
<status status="PASS" endtime="20170915 10:38:37.536" starttime="20170915 10:38:37.535"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users_history</arg>
</arguments>
<msg timestamp="20170915 10:38:37.536" level="INFO">Executing : Table Must Exist  |  users_history </msg>
<msg timestamp="20170915 10:38:37.536" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='users_history' </msg>
<status status="PASS" endtime="20170915 10:38:37.537" starttime="20170915 10:38:37.536"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>version</arg>
</arguments>
<msg timestamp="20170915 10:38:37.537" level="INFO">Executing : Table Must Exist  |  version </msg>
<msg timestamp="20170915 10:38:37.537" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='version' </msg>
<status status="PASS" endtime="20170915 10:38:37.538" starttime="20170915 10:38:37.537"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>versions</arg>
</arguments>
<msg timestamp="20170915 10:38:37.538" level="INFO">Executing : Table Must Exist  |  versions </msg>
<msg timestamp="20170915 10:38:37.538" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='versions' </msg>
<status status="PASS" endtime="20170915 10:38:37.539" starttime="20170915 10:38:37.538"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps</arg>
</arguments>
<msg timestamp="20170915 10:38:37.539" level="INFO">Executing : Table Must Exist  |  view_apps </msg>
<msg timestamp="20170915 10:38:37.539" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps' </msg>
<status status="PASS" endtime="20170915 10:38:37.540" starttime="20170915 10:38:37.539"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps_for_offering</arg>
</arguments>
<msg timestamp="20170915 10:38:37.541" level="INFO">Executing : Table Must Exist  |  view_apps_for_offering </msg>
<msg timestamp="20170915 10:38:37.541" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps_for_offering' </msg>
<status status="PASS" endtime="20170915 10:38:37.541" starttime="20170915 10:38:37.540"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps_for_offering_with_file_sizes</arg>
</arguments>
<msg timestamp="20170915 10:38:37.541" level="INFO">Executing : Table Must Exist  |  view_apps_for_offering_with_file_sizes </msg>
<msg timestamp="20170915 10:38:37.541" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps_for_offering_with_file_sizes' </msg>
<status status="PASS" endtime="20170915 10:38:37.543" starttime="20170915 10:38:37.541"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_datas</arg>
</arguments>
<msg timestamp="20170915 10:38:37.543" level="INFO">Executing : Table Must Exist  |  view_datas </msg>
<msg timestamp="20170915 10:38:37.543" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_datas' </msg>
<status status="PASS" endtime="20170915 10:38:37.544" starttime="20170915 10:38:37.543"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_executables</arg>
</arguments>
<msg timestamp="20170915 10:38:37.544" level="INFO">Executing : Table Must Exist  |  view_executables </msg>
<msg timestamp="20170915 10:38:37.544" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_executables' </msg>
<status status="PASS" endtime="20170915 10:38:37.545" starttime="20170915 10:38:37.544"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_groups</arg>
</arguments>
<msg timestamp="20170915 10:38:37.545" level="INFO">Executing : Table Must Exist  |  view_groups </msg>
<msg timestamp="20170915 10:38:37.545" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_groups' </msg>
<status status="PASS" endtime="20170915 10:38:37.546" starttime="20170915 10:38:37.545"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts</arg>
</arguments>
<msg timestamp="20170915 10:38:37.546" level="INFO">Executing : Table Must Exist  |  view_hosts </msg>
<msg timestamp="20170915 10:38:37.546" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts' </msg>
<status status="PASS" endtime="20170915 10:38:37.547" starttime="20170915 10:38:37.546"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_deployable</arg>
</arguments>
<msg timestamp="20170915 10:38:37.548" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_deployable </msg>
<msg timestamp="20170915 10:38:37.548" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_deployable' </msg>
<status status="PASS" endtime="20170915 10:38:37.549" starttime="20170915 10:38:37.547"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_deployable_and_shared</arg>
</arguments>
<msg timestamp="20170915 10:38:37.549" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_deployable_and_shared </msg>
<msg timestamp="20170915 10:38:37.549" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_deployable_and_shared' </msg>
<status status="PASS" endtime="20170915 10:38:37.550" starttime="20170915 10:38:37.549"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_shared</arg>
</arguments>
<msg timestamp="20170915 10:38:37.550" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_shared </msg>
<msg timestamp="20170915 10:38:37.550" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_shared' </msg>
<status status="PASS" endtime="20170915 10:38:37.551" starttime="20170915 10:38:37.550"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_sessions</arg>
</arguments>
<msg timestamp="20170915 10:38:37.551" level="INFO">Executing : Table Must Exist  |  view_sessions </msg>
<msg timestamp="20170915 10:38:37.551" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_sessions' </msg>
<status status="PASS" endtime="20170915 10:38:37.552" starttime="20170915 10:38:37.551"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_tasks</arg>
</arguments>
<msg timestamp="20170915 10:38:37.552" level="INFO">Executing : Table Must Exist  |  view_tasks </msg>
<msg timestamp="20170915 10:38:37.552" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_tasks' </msg>
<status status="PASS" endtime="20170915 10:38:37.553" starttime="20170915 10:38:37.552"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_traces</arg>
</arguments>
<msg timestamp="20170915 10:38:37.553" level="INFO">Executing : Table Must Exist  |  view_traces </msg>
<msg timestamp="20170915 10:38:37.553" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_traces' </msg>
<status status="PASS" endtime="20170915 10:38:37.554" starttime="20170915 10:38:37.553"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_usergroups</arg>
</arguments>
<msg timestamp="20170915 10:38:37.554" level="INFO">Executing : Table Must Exist  |  view_usergroups </msg>
<msg timestamp="20170915 10:38:37.554" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_usergroups' </msg>
<status status="PASS" endtime="20170915 10:38:37.556" starttime="20170915 10:38:37.554"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users</arg>
</arguments>
<msg timestamp="20170915 10:38:37.556" level="INFO">Executing : Table Must Exist  |  view_users </msg>
<msg timestamp="20170915 10:38:37.556" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users' </msg>
<status status="PASS" endtime="20170915 10:38:37.557" starttime="20170915 10:38:37.556"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_apps</arg>
</arguments>
<msg timestamp="20170915 10:38:37.557" level="INFO">Executing : Table Must Exist  |  view_users_apps </msg>
<msg timestamp="20170915 10:38:37.557" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_apps' </msg>
<status status="PASS" endtime="20170915 10:38:37.558" starttime="20170915 10:38:37.557"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_datas</arg>
</arguments>
<msg timestamp="20170915 10:38:37.559" level="INFO">Executing : Table Must Exist  |  view_users_datas </msg>
<msg timestamp="20170915 10:38:37.559" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_datas' </msg>
<status status="PASS" endtime="20170915 10:38:37.559" starttime="20170915 10:38:37.558"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_groups</arg>
</arguments>
<msg timestamp="20170915 10:38:37.560" level="INFO">Executing : Table Must Exist  |  view_users_groups </msg>
<msg timestamp="20170915 10:38:37.560" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_groups' </msg>
<status status="PASS" endtime="20170915 10:38:37.561" starttime="20170915 10:38:37.560"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_hosts</arg>
</arguments>
<msg timestamp="20170915 10:38:37.561" level="INFO">Executing : Table Must Exist  |  view_users_hosts </msg>
<msg timestamp="20170915 10:38:37.561" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_hosts' </msg>
<status status="PASS" endtime="20170915 10:38:37.562" starttime="20170915 10:38:37.561"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_sessions</arg>
</arguments>
<msg timestamp="20170915 10:38:37.562" level="INFO">Executing : Table Must Exist  |  view_users_sessions </msg>
<msg timestamp="20170915 10:38:37.562" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_sessions' </msg>
<status status="PASS" endtime="20170915 10:38:37.563" starttime="20170915 10:38:37.562"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_tasks</arg>
</arguments>
<msg timestamp="20170915 10:38:37.563" level="INFO">Executing : Table Must Exist  |  view_users_tasks </msg>
<msg timestamp="20170915 10:38:37.563" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_tasks' </msg>
<status status="PASS" endtime="20170915 10:38:37.564" starttime="20170915 10:38:37.563"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_traces</arg>
</arguments>
<msg timestamp="20170915 10:38:37.564" level="INFO">Executing : Table Must Exist  |  view_users_traces </msg>
<msg timestamp="20170915 10:38:37.564" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_traces' </msg>
<status status="PASS" endtime="20170915 10:38:37.565" starttime="20170915 10:38:37.564"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_usergroups</arg>
</arguments>
<msg timestamp="20170915 10:38:37.565" level="INFO">Executing : Table Must Exist  |  view_users_usergroups </msg>
<msg timestamp="20170915 10:38:37.565" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_usergroups' </msg>
<status status="PASS" endtime="20170915 10:38:37.566" starttime="20170915 10:38:37.565"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_users</arg>
</arguments>
<msg timestamp="20170915 10:38:37.566" level="INFO">Executing : Table Must Exist  |  view_users_users </msg>
<msg timestamp="20170915 10:38:37.566" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_users' </msg>
<status status="PASS" endtime="20170915 10:38:37.567" starttime="20170915 10:38:37.566"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_works</arg>
</arguments>
<msg timestamp="20170915 10:38:37.567" level="INFO">Executing : Table Must Exist  |  view_users_works </msg>
<msg timestamp="20170915 10:38:37.567" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_works' </msg>
<status status="PASS" endtime="20170915 10:38:37.569" starttime="20170915 10:38:37.567"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works</arg>
</arguments>
<msg timestamp="20170915 10:38:37.569" level="INFO">Executing : Table Must Exist  |  view_works </msg>
<msg timestamp="20170915 10:38:37.569" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works' </msg>
<status status="PASS" endtime="20170915 10:38:37.570" starttime="20170915 10:38:37.569"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works_for_billing</arg>
</arguments>
<msg timestamp="20170915 10:38:37.571" level="INFO">Executing : Table Must Exist  |  view_works_for_billing </msg>
<msg timestamp="20170915 10:38:37.571" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works_for_billing' </msg>
<status status="PASS" endtime="20170915 10:38:37.571" starttime="20170915 10:38:37.570"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works_for_billing_with_file_sizes</arg>
</arguments>
<msg timestamp="20170915 10:38:37.572" level="INFO">Executing : Table Must Exist  |  view_works_for_billing_with_file_sizes </msg>
<msg timestamp="20170915 10:38:37.572" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works_for_billing_with_file_sizes' </msg>
<status status="PASS" endtime="20170915 10:38:37.572" starttime="20170915 10:38:37.572"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works</arg>
</arguments>
<msg timestamp="20170915 10:38:37.573" level="INFO">Executing : Table Must Exist  |  works </msg>
<msg timestamp="20170915 10:38:37.573" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='works' </msg>
<status status="PASS" endtime="20170915 10:38:37.573" starttime="20170915 10:38:37.573"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works_history</arg>
</arguments>
<msg timestamp="20170915 10:38:37.574" level="INFO">Executing : Table Must Exist  |  works_history </msg>
<msg timestamp="20170915 10:38:37.574" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='works_history' </msg>
<status status="PASS" endtime="20170915 10:38:37.575" starttime="20170915 10:38:37.574"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170915 10:38:37.575" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170915 10:38:37.575" starttime="20170915 10:38:37.575"></status>
</kw>
<status status="PASS" endtime="20170915 10:38:37.575" starttime="20170915 10:38:37.575"></status>
</kw>
<status status="PASS" endtime="20170915 10:38:37.576" starttime="20170915 10:38:37.497"></status>
</kw>
<status status="PASS" endtime="20170915 10:38:37.576" starttime="20170915 10:38:37.496"></status>
</kw>
<kw name="Start XtremWeb Server" library="XWServer">
<arguments>
<arg>${DIST_XWHEP_PATH}</arg>
</arguments>
<kw name="File Should Exist" library="OperatingSystem">
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xtremweb.server.conf</arg>
</arguments>
<msg timestamp="20170915 10:38:37.577" html="yes" level="INFO">File '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf&lt;/a&gt;' exists.</msg>
<status status="PASS" endtime="20170915 10:38:37.577" starttime="20170915 10:38:37.576"></status>
</kw>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xtremweb.server.conf</arg>
</arguments>
<assign>
<var>${config_content}</var>
</assign>
<msg timestamp="20170915 10:38:37.577" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf&lt;/a&gt;'.</msg>
<msg timestamp="20170915 10:38:37.578" level="INFO">${config_content} = #
# Copyrights     : CNRS
# Author         : Oleg Lodygensky
# Acknowledgment : XtremWeb-HEP is based on XtremWeb 1.8.0 by inria : http://www.xtremweb.net/
# Web            : http://www.xtremweb-hep.o...</msg>
<status status="PASS" endtime="20170915 10:38:37.578" starttime="20170915 10:38:37.577"></status>
</kw>
<kw name="Remove String Using Regexp" library="String">
<doc>Removes ``patterns`` from the given ``string``.</doc>
<arguments>
<arg>${config_content}</arg>
<arg>LAUNCHERURL=${XWCONFIGURE.VALUES.XWUPGRADEURL}</arg>
</arguments>
<assign>
<var>${config_content_filtered}</var>
</assign>
<msg timestamp="20170915 10:38:37.579" level="INFO">${config_content_filtered} = #
# Copyrights     : CNRS
# Author         : Oleg Lodygensky
# Acknowledgment : XtremWeb-HEP is based on XtremWeb 1.8.0 by inria : http://www.xtremweb.net/
# Web            : http://www.xtremweb-hep.o...</msg>
<status status="PASS" endtime="20170915 10:38:37.579" starttime="20170915 10:38:37.578"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${config_content_filtered}</arg>
<arg>\## HTTPSPORT=443</arg>
<arg>HTTPSPORT=${XWCONFIGURE.VALUES.HTTPSPORT}</arg>
</arguments>
<assign>
<var>${config_content_filtered}</var>
</assign>
<msg timestamp="20170915 10:38:37.579" level="INFO">${config_content_filtered} = #
# Copyrights     : CNRS
# Author         : Oleg Lodygensky
# Acknowledgment : XtremWeb-HEP is based on XtremWeb 1.8.0 by inria : http://www.xtremweb.net/
# Web            : http://www.xtremweb-hep.o...</msg>
<status status="PASS" endtime="20170915 10:38:37.579" starttime="20170915 10:38:37.579"></status>
</kw>
<kw name="Create File" library="OperatingSystem">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xtremweb.server.conf</arg>
<arg>content=${config_content_filtered}</arg>
</arguments>
<msg timestamp="20170915 10:38:37.587" html="yes" level="INFO">Created file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170915 10:38:37.588" starttime="20170915 10:38:37.579"></status>
</kw>
<kw name="Remove File" library="OperatingSystem">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<msg timestamp="20170915 10:38:37.590" html="yes" level="INFO">Removed file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170915 10:38:37.590" starttime="20170915 10:38:37.588"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/bin/xtremweb.server console</arg>
<arg>shell=yes</arg>
<arg>stderr=STDOUT</arg>
<arg>stdout=${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<assign>
<var>${created_process}</var>
</assign>
<msg timestamp="20170915 10:38:37.591" level="INFO">Starting process:
/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/xtremweb.server console</msg>
<msg timestamp="20170915 10:38:37.595" level="INFO">${created_process} = 61</msg>
<status status="PASS" endtime="20170915 10:38:37.595" starttime="20170915 10:38:37.590"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SERVER_PROCESS}</arg>
<arg>${created_process}</arg>
</arguments>
<msg timestamp="20170915 10:38:37.596" level="INFO">${SERVER_PROCESS} = 61</msg>
<status status="PASS" endtime="20170915 10:38:37.596" starttime="20170915 10:38:37.595"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2 min</arg>
<arg>5 sec</arg>
<arg>Check XtremWeb Server Start From Log</arg>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<kw name="Check XtremWeb Server Start From Log" library="XWServer">
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<kw name="Log XtremWeb Process Log File" library="XWServer">
<kw name="Log File" library="OperatingSystem">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<msg timestamp="20170915 10:38:37.598" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170915 10:38:37.599" level="INFO"></msg>
<status status="PASS" endtime="20170915 10:38:37.599" starttime="20170915 10:38:37.598"></status>
</kw>
<status status="PASS" endtime="20170915 10:38:37.599" starttime="20170915 10:38:37.598"></status>
</kw>
<kw name="Grep File" library="OperatingSystem">
<doc>Returns the lines of the specified file that match the ``pattern``.</doc>
<arguments>
<arg>${log}</arg>
<arg>listening on port : ${XWCONFIGURE.VALUES.HTTPSPORT}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20170915 10:38:37.600" html="yes" level="INFO">Reading file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170915 10:38:37.600" level="INFO">0 out of 0 lines matched</msg>
<msg timestamp="20170915 10:38:37.600" level="INFO">${ret} = </msg>
<status status="PASS" endtime="20170915 10:38:37.600" starttime="20170915 10:38:37.599"></status>
</kw>
<kw name="Get Line Count" library="String">
<doc>Returns and logs the number of lines in the given string.</doc>
<arguments>
<arg>${ret}</arg>
</arguments>
<assign>
<var>${line_count}</var>
</assign>
<msg timestamp="20170915 10:38:37.600" level="INFO">0 lines</msg>
<msg timestamp="20170915 10:38:37.601" level="INFO">${line_count} = 0</msg>
<status status="PASS" endtime="20170915 10:38:37.601" starttime="20170915 10:38:37.600"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${line_count}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20170915 10:38:37.601" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20170915 10:38:37.601" level="FAIL">0 != 2</msg>
<status status="FAIL" endtime="20170915 10:38:37.601" starttime="20170915 10:38:37.601"></status>
</kw>
<status status="FAIL" endtime="20170915 10:38:37.602" starttime="20170915 10:38:37.597"></status>
</kw>
<kw name="Check XtremWeb Server Start From Log" library="XWServer">
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<kw name="Log XtremWeb Process Log File" library="XWServer">
<kw name="Log File" library="OperatingSystem">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<msg timestamp="20170915 10:38:42.604" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170915 10:38:42.623" level="INFO">Fri Sep 15 10:38:37 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : checking launch url
Fri Sep 15 10:38:37 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] WARNING : no launcher URL defined
Fri Sep 15 10:38:37 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : launching SmartSockets hub
[15/Sep/2017:10:38:39 +0000] [main_1] ERROR : setRole : role redefined ?! (was SERVER)
[15/Sep/2017:10:38:40 +0000] [xtremweb.database.DBConnPoolThread_main_1] INFO : Connection to database jdbc:mysql://localhost/xtremweb is ok, 70 created
[15/Sep/2017:10:38:40 +0000] [xtremweb.dispatcher.DBInterface_main_1] WARN : Can't retrieve any app
[15/Sep/2017:10:38:40 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't create ProxyValidator
[15/Sep/2017:10:38:40 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.io.FileNotFoundException: /tmp/castore (No such file or directory) (/tmp/castore (No such file or directory))
[15/Sep/2017:10:38:40 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't add CA certificates to keystore
[15/Sep/2017:10:38:40 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.lang.NullPointerException (null)
[15/Sep/2017:10:38:40 +0000] [xtremweb.dispatcher.HashTaskSet_TaskSet_14] INFO : TaskSet started (300000)
[15/Sep/2017:10:38:41 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : still waiting task set...
[15/Sep/2017:10:38:41 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : UDP server not started
[15/Sep/2017:10:38:41 +0000] [xtremweb.communications.TCPServer_TCPServerNIO_15] INFO : started, listening on port : 4321
log4j:WARN No appenders could be found for logger (org.eclipse.jetty.util.log).
log4j:WARN Please initialize the log4j system properly.
log4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.
[15/Sep/2017:10:38:41 +0000] [xtremweb.communications.HTTPServer_main_1] INFO : started, listening on port : 9443
[15/Sep/2017:10:38:41 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : FACEBOOK : java.net.MalformedURLException: no protocol: 
[15/Sep/2017:10:38:41 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : GOOGLE : java.net.MalformedURLException: no protocol: 
[15/Sep/2017:10:38:41 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : TWITTER : java.net.MalformedURLException: no protocol: 
[15/Sep/2017:10:38:41 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : YAHOO : java.net.MalformedURLException: no protocol: 
[15/Sep/2017:10:38:41 +0000] [main_1] ERROR : Can't add new entry to keystore
[15/Sep/2017:10:38:41 +0000] [main_1] WARN : javax.net.ssl.SSLHandshakeException: sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target (sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target)
[15/Sep/2017:10:38:41 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : XWHEP Dispatcher(10.6.0-head) started [Fri Sep 15 10:38:41 UTC 2017]
[15/Sep/2017:10:38:41 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : DB vendor  = mysql
[15/Sep/2017:10:38:41 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : mileStone  = 
[15/Sep/2017:10:38:41 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Time out   = 15000
[15/Sep/2017:10:38:41 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Disk opt'd = true
[15/Sep/2017:10:38:41 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Net  opt'd = true
[15/Sep/2017:10:38:41 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : NIO        = true
XWHEP Dispatcher started  Fri Sep 15 10:38:41 UTC 2017
Name             : vagrant-ubuntu-trusty-64
Version          : 10.6.0-head
Identity         : 
XWRole           : SERVER
Started on       : Fri Sep 15 10:38:39 UTC 2017
Scheduler        : xtremweb.dispatcher.MatchingScheduler
SmartSockets hub : 172.28.128.3/172.17.0.1/10.0.2.15-4329#62.86.f3.3a.cd.7c.00.00.2d.57.02.42.02.6c.0f.e2~vagrant
Server HTTP      : true
Alive            : 300
Alive time out   : 900
Polling time out : 15000
Optimize zip     : true
Optimize network : true
NIO              : true
Comm layer       : xtremweb.communications.TCPClient
Socket time out  : 60000
Socket retries   : 50
Max connections  : 200
TCP port         : 4321
UDP port         : 4323
HTPP  port       : 80
HTPPS port       : 9443
Sun RPC interposition port : 4328
Sandbox path : /usr/bin/lxc
Sandbox launch args : 
Host &lt;host&gt;&lt;uid&gt;2ed81e61-a1ae-44fc-abf6-f24da03ebddd&lt;/uid&gt;&lt;accessrights&gt;0x755&lt;/accessrights&gt;&lt;name&gt;vagrant-ubuntu-trusty-64&lt;/name&gt;&lt;cpuload&gt;50&lt;/cpuload&gt;&lt;natedipaddr&gt;10.0.2.15&lt;/natedipaddr&gt;&lt;ipaddr&gt;10.0.2.15&lt;/ipaddr&gt;&lt;hwaddr&gt;&lt;/hwaddr&gt;&lt;timezone&gt;Etc/UTC&lt;/timezone&gt;&lt;os&gt;LINUX&lt;/os&gt;&lt;osversion&gt;3.13.0-129-generic&lt;/osversion&gt;&lt;javaversion&gt;1.8.0_141&lt;/javaversion&gt;&lt;javadatamodel&gt;64&lt;/javadatamodel&gt;&lt;cputype&gt;AMD64&lt;/cputype&gt;&lt;cpunb&gt;1&lt;/cpunb&gt;&lt;cpumodel&gt;unknown&lt;/cpumodel&gt;&lt;cpuspeed&gt;0&lt;/cpuspeed&gt;&lt;totalmem&gt;0&lt;/totalmem&gt;&lt;totalswap&gt;0&lt;/totalswap&gt;&lt;totaltmp&gt;40284&lt;/totaltmp&gt;&lt;freetmp&gt;37249&lt;/freetmp&gt;&lt;project&gt;&lt;/project&gt;&lt;active&gt;true&lt;/active&gt;&lt;incomingconnections&gt;false&lt;/incomingconnections&gt;&lt;available&gt;false&lt;/available&gt;&lt;pilotjob&gt;false&lt;/pilotjob&gt;&lt;sgid&gt;&lt;/sgid&gt;&lt;timeout&gt;15000&lt;/timeout&gt;&lt;traces&gt;false&lt;/traces&gt;&lt;acceptbin&gt;false&lt;/acceptbin&gt;&lt;version&gt;10.6.0-head&lt;/version&gt;&lt;/host&gt;
[15/Sep/2017:10:38:41 +0000] [xtremweb.communications.HTTPServer_HTTPServer_218] INFO : started, listening on port : 9443
</msg>
<status status="PASS" endtime="20170915 10:38:42.624" starttime="20170915 10:38:42.603"></status>
</kw>
<status status="PASS" endtime="20170915 10:38:42.624" starttime="20170915 10:38:42.603"></status>
</kw>
<kw name="Grep File" library="OperatingSystem">
<doc>Returns the lines of the specified file that match the ``pattern``.</doc>
<arguments>
<arg>${log}</arg>
<arg>listening on port : ${XWCONFIGURE.VALUES.HTTPSPORT}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20170915 10:38:42.624" html="yes" level="INFO">Reading file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170915 10:38:42.625" level="INFO">2 out of 59 lines matched</msg>
<msg timestamp="20170915 10:38:42.625" level="INFO">${ret} = [15/Sep/2017:10:38:41 +0000] [xtremweb.communications.HTTPServer_main_1] INFO : started, listening on port : 9443
[15/Sep/2017:10:38:41 +0000] [xtremweb.communications.HTTPServer_HTTPServer_218] INFO ...</msg>
<status status="PASS" endtime="20170915 10:38:42.625" starttime="20170915 10:38:42.624"></status>
</kw>
<kw name="Get Line Count" library="String">
<doc>Returns and logs the number of lines in the given string.</doc>
<arguments>
<arg>${ret}</arg>
</arguments>
<assign>
<var>${line_count}</var>
</assign>
<msg timestamp="20170915 10:38:42.626" level="INFO">2 lines</msg>
<msg timestamp="20170915 10:38:42.626" level="INFO">${line_count} = 2</msg>
<status status="PASS" endtime="20170915 10:38:42.626" starttime="20170915 10:38:42.626"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${line_count}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20170915 10:38:42.626" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170915 10:38:42.626" starttime="20170915 10:38:42.626"></status>
</kw>
<status status="PASS" endtime="20170915 10:38:42.627" starttime="20170915 10:38:42.602"></status>
</kw>
<status status="PASS" endtime="20170915 10:38:42.627" starttime="20170915 10:38:37.596"></status>
</kw>
<kw name="Log XtremWeb Process Log File" library="XWServer">
<kw name="Log File" library="OperatingSystem">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<msg timestamp="20170915 10:38:42.628" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170915 10:38:42.628" level="INFO">Fri Sep 15 10:38:37 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : checking launch url
Fri Sep 15 10:38:37 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] WARNING : no launcher URL defined
Fri Sep 15 10:38:37 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : launching SmartSockets hub
[15/Sep/2017:10:38:39 +0000] [main_1] ERROR : setRole : role redefined ?! (was SERVER)
[15/Sep/2017:10:38:40 +0000] [xtremweb.database.DBConnPoolThread_main_1] INFO : Connection to database jdbc:mysql://localhost/xtremweb is ok, 70 created
[15/Sep/2017:10:38:40 +0000] [xtremweb.dispatcher.DBInterface_main_1] WARN : Can't retrieve any app
[15/Sep/2017:10:38:40 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't create ProxyValidator
[15/Sep/2017:10:38:40 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.io.FileNotFoundException: /tmp/castore (No such file or directory) (/tmp/castore (No such file or directory))
[15/Sep/2017:10:38:40 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't add CA certificates to keystore
[15/Sep/2017:10:38:40 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.lang.NullPointerException (null)
[15/Sep/2017:10:38:40 +0000] [xtremweb.dispatcher.HashTaskSet_TaskSet_14] INFO : TaskSet started (300000)
[15/Sep/2017:10:38:41 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : still waiting task set...
[15/Sep/2017:10:38:41 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : UDP server not started
[15/Sep/2017:10:38:41 +0000] [xtremweb.communications.TCPServer_TCPServerNIO_15] INFO : started, listening on port : 4321
log4j:WARN No appenders could be found for logger (org.eclipse.jetty.util.log).
log4j:WARN Please initialize the log4j system properly.
log4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.
[15/Sep/2017:10:38:41 +0000] [xtremweb.communications.HTTPServer_main_1] INFO : started, listening on port : 9443
[15/Sep/2017:10:38:41 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : FACEBOOK : java.net.MalformedURLException: no protocol: 
[15/Sep/2017:10:38:41 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : GOOGLE : java.net.MalformedURLException: no protocol: 
[15/Sep/2017:10:38:41 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : TWITTER : java.net.MalformedURLException: no protocol: 
[15/Sep/2017:10:38:41 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : YAHOO : java.net.MalformedURLException: no protocol: 
[15/Sep/2017:10:38:41 +0000] [main_1] ERROR : Can't add new entry to keystore
[15/Sep/2017:10:38:41 +0000] [main_1] WARN : javax.net.ssl.SSLHandshakeException: sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target (sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target)
[15/Sep/2017:10:38:41 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : XWHEP Dispatcher(10.6.0-head) started [Fri Sep 15 10:38:41 UTC 2017]
[15/Sep/2017:10:38:41 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : DB vendor  = mysql
[15/Sep/2017:10:38:41 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : mileStone  = 
[15/Sep/2017:10:38:41 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Time out   = 15000
[15/Sep/2017:10:38:41 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Disk opt'd = true
[15/Sep/2017:10:38:41 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Net  opt'd = true
[15/Sep/2017:10:38:41 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : NIO        = true
XWHEP Dispatcher started  Fri Sep 15 10:38:41 UTC 2017
Name             : vagrant-ubuntu-trusty-64
Version          : 10.6.0-head
Identity         : 
XWRole           : SERVER
Started on       : Fri Sep 15 10:38:39 UTC 2017
Scheduler        : xtremweb.dispatcher.MatchingScheduler
SmartSockets hub : 172.28.128.3/172.17.0.1/10.0.2.15-4329#62.86.f3.3a.cd.7c.00.00.2d.57.02.42.02.6c.0f.e2~vagrant
Server HTTP      : true
Alive            : 300
Alive time out   : 900
Polling time out : 15000
Optimize zip     : true
Optimize network : true
NIO              : true
Comm layer       : xtremweb.communications.TCPClient
Socket time out  : 60000
Socket retries   : 50
Max connections  : 200
TCP port         : 4321
UDP port         : 4323
HTPP  port       : 80
HTPPS port       : 9443
Sun RPC interposition port : 4328
Sandbox path : /usr/bin/lxc
Sandbox launch args : 
Host &lt;host&gt;&lt;uid&gt;2ed81e61-a1ae-44fc-abf6-f24da03ebddd&lt;/uid&gt;&lt;accessrights&gt;0x755&lt;/accessrights&gt;&lt;name&gt;vagrant-ubuntu-trusty-64&lt;/name&gt;&lt;cpuload&gt;50&lt;/cpuload&gt;&lt;natedipaddr&gt;10.0.2.15&lt;/natedipaddr&gt;&lt;ipaddr&gt;10.0.2.15&lt;/ipaddr&gt;&lt;hwaddr&gt;&lt;/hwaddr&gt;&lt;timezone&gt;Etc/UTC&lt;/timezone&gt;&lt;os&gt;LINUX&lt;/os&gt;&lt;osversion&gt;3.13.0-129-generic&lt;/osversion&gt;&lt;javaversion&gt;1.8.0_141&lt;/javaversion&gt;&lt;javadatamodel&gt;64&lt;/javadatamodel&gt;&lt;cputype&gt;AMD64&lt;/cputype&gt;&lt;cpunb&gt;1&lt;/cpunb&gt;&lt;cpumodel&gt;unknown&lt;/cpumodel&gt;&lt;cpuspeed&gt;0&lt;/cpuspeed&gt;&lt;totalmem&gt;0&lt;/totalmem&gt;&lt;totalswap&gt;0&lt;/totalswap&gt;&lt;totaltmp&gt;40284&lt;/totaltmp&gt;&lt;freetmp&gt;37249&lt;/freetmp&gt;&lt;project&gt;&lt;/project&gt;&lt;active&gt;true&lt;/active&gt;&lt;incomingconnections&gt;false&lt;/incomingconnections&gt;&lt;available&gt;false&lt;/available&gt;&lt;pilotjob&gt;false&lt;/pilotjob&gt;&lt;sgid&gt;&lt;/sgid&gt;&lt;timeout&gt;15000&lt;/timeout&gt;&lt;traces&gt;false&lt;/traces&gt;&lt;acceptbin&gt;false&lt;/acceptbin&gt;&lt;version&gt;10.6.0-head&lt;/version&gt;&lt;/host&gt;
[15/Sep/2017:10:38:41 +0000] [xtremweb.communications.HTTPServer_HTTPServer_218] INFO : started, listening on port : 9443
</msg>
<status status="PASS" endtime="20170915 10:38:42.628" starttime="20170915 10:38:42.627"></status>
</kw>
<status status="PASS" endtime="20170915 10:38:42.628" starttime="20170915 10:38:42.627"></status>
</kw>
<status status="PASS" endtime="20170915 10:38:42.628" starttime="20170915 10:38:37.576"></status>
</kw>
<kw name="Start XtremWeb Worker" library="XWWorker">
<arguments>
<arg>${DIST_XWHEP_PATH}</arg>
</arguments>
<kw name="File Should Exist" library="OperatingSystem">
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xtremweb.worker.conf</arg>
</arguments>
<msg timestamp="20170915 10:38:42.630" html="yes" level="INFO">File '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf&lt;/a&gt;' exists.</msg>
<status status="PASS" endtime="20170915 10:38:42.630" starttime="20170915 10:38:42.629"></status>
</kw>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xtremweb.worker.conf</arg>
</arguments>
<assign>
<var>${config_content}</var>
</assign>
<msg timestamp="20170915 10:38:42.630" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf&lt;/a&gt;'.</msg>
<msg timestamp="20170915 10:38:42.631" level="INFO">${config_content} = #
# Copyrights     : CNRS
# Author         : Oleg Lodygensky
# Acknowledgment : XtremWeb-HEP is based on XtremWeb 1.8.0 by inria : http://www.xtremweb.net/
# Web            : http://www.xtremweb-hep.o...</msg>
<status status="PASS" endtime="20170915 10:38:42.631" starttime="20170915 10:38:42.630"></status>
</kw>
<kw name="Remove String Using Regexp" library="String">
<doc>Removes ``patterns`` from the given ``string``.</doc>
<arguments>
<arg>${config_content}</arg>
<arg>LAUNCHERURL=${XWCONFIGURE.VALUES.XWUPGRADEURL}</arg>
</arguments>
<assign>
<var>${config_content_filtered}</var>
</assign>
<msg timestamp="20170915 10:38:42.632" level="INFO">${config_content_filtered} = #
# Copyrights     : CNRS
# Author         : Oleg Lodygensky
# Acknowledgment : XtremWeb-HEP is based on XtremWeb 1.8.0 by inria : http://www.xtremweb.net/
# Web            : http://www.xtremweb-hep.o...</msg>
<status status="PASS" endtime="20170915 10:38:42.632" starttime="20170915 10:38:42.631"></status>
</kw>
<kw name="Create File" library="OperatingSystem">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xtremweb.worker.conf</arg>
<arg>content=${config_content_filtered}</arg>
</arguments>
<msg timestamp="20170915 10:38:42.634" html="yes" level="INFO">Created file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170915 10:38:42.634" starttime="20170915 10:38:42.632"></status>
</kw>
<kw name="Remove File" library="OperatingSystem">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.worker.process.log</arg>
</arguments>
<msg timestamp="20170915 10:38:42.635" html="yes" level="INFO">Removed file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.worker.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.worker.process.log&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170915 10:38:42.635" starttime="20170915 10:38:42.634"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/bin/xtremweb.worker console</arg>
<arg>shell=yes</arg>
<arg>stderr=STDOUT</arg>
<arg>stdout=${DIST_XWHEP_PATH}/xwhep.worker.process.log</arg>
</arguments>
<assign>
<var>${created_process}</var>
</assign>
<msg timestamp="20170915 10:38:42.637" level="INFO">Starting process:
/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/xtremweb.worker console</msg>
<msg timestamp="20170915 10:38:42.640" level="INFO">${created_process} = 62</msg>
<status status="PASS" endtime="20170915 10:38:42.640" starttime="20170915 10:38:42.636"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${WORKER_PROCESS}</arg>
<arg>${created_process}</arg>
</arguments>
<msg timestamp="20170915 10:38:42.642" level="INFO">${WORKER_PROCESS} = 62</msg>
<status status="PASS" endtime="20170915 10:38:42.642" starttime="20170915 10:38:42.641"></status>
</kw>
<kw name="Log File" library="OperatingSystem">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.worker.process.log</arg>
</arguments>
<msg timestamp="20170915 10:38:42.643" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.worker.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.worker.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170915 10:38:42.644" level="INFO"></msg>
<status status="PASS" endtime="20170915 10:38:42.645" starttime="20170915 10:38:42.642"></status>
</kw>
<status status="PASS" endtime="20170915 10:38:42.645" starttime="20170915 10:38:42.629"></status>
</kw>
<status status="PASS" endtime="20170915 10:38:42.645" starttime="20170915 10:38:37.496"></status>
</kw>
<status status="PASS" endtime="20170915 10:38:42.645" starttime="20170915 10:37:44.796"></status>
</kw>
<test id="s1-s6-t1" name="Test XWSenddata Command With LS Binary">
<kw type="setup" name="Begin XWtremWeb Command Test" library="XWCommon">
<kw name="Ping XWtremWeb Database" library="XWServer">
<kw name="Xtremweb Tables Must Exist" library="MySql">
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170915 10:38:42.650" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170915 10:38:42.651" starttime="20170915 10:38:42.649"></status>
</kw>
<status status="PASS" endtime="20170915 10:38:42.651" starttime="20170915 10:38:42.649"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>appTypes</arg>
</arguments>
<msg timestamp="20170915 10:38:42.652" level="INFO">Executing : Table Must Exist  |  appTypes </msg>
<msg timestamp="20170915 10:38:42.652" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='appTypes' </msg>
<status status="PASS" endtime="20170915 10:38:42.653" starttime="20170915 10:38:42.651"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps</arg>
</arguments>
<msg timestamp="20170915 10:38:42.654" level="INFO">Executing : Table Must Exist  |  apps </msg>
<msg timestamp="20170915 10:38:42.654" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='apps' </msg>
<status status="PASS" endtime="20170915 10:38:42.655" starttime="20170915 10:38:42.653"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps_history</arg>
</arguments>
<msg timestamp="20170915 10:38:42.656" level="INFO">Executing : Table Must Exist  |  apps_history </msg>
<msg timestamp="20170915 10:38:42.656" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='apps_history' </msg>
<status status="PASS" endtime="20170915 10:38:42.657" starttime="20170915 10:38:42.655"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>cpuTypes</arg>
</arguments>
<msg timestamp="20170915 10:38:42.657" level="INFO">Executing : Table Must Exist  |  cpuTypes </msg>
<msg timestamp="20170915 10:38:42.657" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='cpuTypes' </msg>
<status status="PASS" endtime="20170915 10:38:42.658" starttime="20170915 10:38:42.657"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>dataTypes</arg>
</arguments>
<msg timestamp="20170915 10:38:42.658" level="INFO">Executing : Table Must Exist  |  dataTypes </msg>
<msg timestamp="20170915 10:38:42.658" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='dataTypes' </msg>
<status status="PASS" endtime="20170915 10:38:42.660" starttime="20170915 10:38:42.658"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas</arg>
</arguments>
<msg timestamp="20170915 10:38:42.660" level="INFO">Executing : Table Must Exist  |  datas </msg>
<msg timestamp="20170915 10:38:42.660" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='datas' </msg>
<status status="PASS" endtime="20170915 10:38:42.662" starttime="20170915 10:38:42.660"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas_history</arg>
</arguments>
<msg timestamp="20170915 10:38:42.662" level="INFO">Executing : Table Must Exist  |  datas_history </msg>
<msg timestamp="20170915 10:38:42.662" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='datas_history' </msg>
<status status="PASS" endtime="20170915 10:38:42.663" starttime="20170915 10:38:42.662"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables</arg>
</arguments>
<msg timestamp="20170915 10:38:42.663" level="INFO">Executing : Table Must Exist  |  executables </msg>
<msg timestamp="20170915 10:38:42.663" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='executables' </msg>
<status status="PASS" endtime="20170915 10:38:42.664" starttime="20170915 10:38:42.663"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables_history</arg>
</arguments>
<msg timestamp="20170915 10:38:42.665" level="INFO">Executing : Table Must Exist  |  executables_history </msg>
<msg timestamp="20170915 10:38:42.665" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='executables_history' </msg>
<status status="PASS" endtime="20170915 10:38:42.665" starttime="20170915 10:38:42.664"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups</arg>
</arguments>
<msg timestamp="20170915 10:38:42.665" level="INFO">Executing : Table Must Exist  |  groups </msg>
<msg timestamp="20170915 10:38:42.665" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='groups' </msg>
<status status="PASS" endtime="20170915 10:38:42.670" starttime="20170915 10:38:42.665"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups_history</arg>
</arguments>
<msg timestamp="20170915 10:38:42.670" level="INFO">Executing : Table Must Exist  |  groups_history </msg>
<msg timestamp="20170915 10:38:42.670" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='groups_history' </msg>
<status status="PASS" endtime="20170915 10:38:42.671" starttime="20170915 10:38:42.670"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts</arg>
</arguments>
<msg timestamp="20170915 10:38:42.672" level="INFO">Executing : Table Must Exist  |  hosts </msg>
<msg timestamp="20170915 10:38:42.672" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='hosts' </msg>
<status status="PASS" endtime="20170915 10:38:42.673" starttime="20170915 10:38:42.672"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts_history</arg>
</arguments>
<msg timestamp="20170915 10:38:42.673" level="INFO">Executing : Table Must Exist  |  hosts_history </msg>
<msg timestamp="20170915 10:38:42.673" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='hosts_history' </msg>
<status status="PASS" endtime="20170915 10:38:42.676" starttime="20170915 10:38:42.673"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships</arg>
</arguments>
<msg timestamp="20170915 10:38:42.676" level="INFO">Executing : Table Must Exist  |  memberships </msg>
<msg timestamp="20170915 10:38:42.676" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='memberships' </msg>
<status status="PASS" endtime="20170915 10:38:42.677" starttime="20170915 10:38:42.676"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships_history</arg>
</arguments>
<msg timestamp="20170915 10:38:42.678" level="INFO">Executing : Table Must Exist  |  memberships_history </msg>
<msg timestamp="20170915 10:38:42.678" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='memberships_history' </msg>
<status status="PASS" endtime="20170915 10:38:42.678" starttime="20170915 10:38:42.677"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>oses</arg>
</arguments>
<msg timestamp="20170915 10:38:42.679" level="INFO">Executing : Table Must Exist  |  oses </msg>
<msg timestamp="20170915 10:38:42.679" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='oses' </msg>
<status status="PASS" endtime="20170915 10:38:42.680" starttime="20170915 10:38:42.679"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>packageTypes</arg>
</arguments>
<msg timestamp="20170915 10:38:42.680" level="INFO">Executing : Table Must Exist  |  packageTypes </msg>
<msg timestamp="20170915 10:38:42.680" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='packageTypes' </msg>
<status status="PASS" endtime="20170915 10:38:42.681" starttime="20170915 10:38:42.680"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions</arg>
</arguments>
<msg timestamp="20170915 10:38:42.681" level="INFO">Executing : Table Must Exist  |  sessions </msg>
<msg timestamp="20170915 10:38:42.681" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sessions' </msg>
<status status="PASS" endtime="20170915 10:38:42.682" starttime="20170915 10:38:42.681"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions_history</arg>
</arguments>
<msg timestamp="20170915 10:38:42.683" level="INFO">Executing : Table Must Exist  |  sessions_history </msg>
<msg timestamp="20170915 10:38:42.683" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sessions_history' </msg>
<status status="PASS" endtime="20170915 10:38:42.683" starttime="20170915 10:38:42.682"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes</arg>
</arguments>
<msg timestamp="20170915 10:38:42.684" level="INFO">Executing : Table Must Exist  |  sharedAppTypes </msg>
<msg timestamp="20170915 10:38:42.684" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedAppTypes' </msg>
<status status="PASS" endtime="20170915 10:38:42.684" starttime="20170915 10:38:42.683"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes_history</arg>
</arguments>
<msg timestamp="20170915 10:38:42.685" level="INFO">Executing : Table Must Exist  |  sharedAppTypes_history </msg>
<msg timestamp="20170915 10:38:42.685" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedAppTypes_history' </msg>
<status status="PASS" endtime="20170915 10:38:42.686" starttime="20170915 10:38:42.685"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes</arg>
</arguments>
<msg timestamp="20170915 10:38:42.686" level="INFO">Executing : Table Must Exist  |  sharedPackageTypes </msg>
<msg timestamp="20170915 10:38:42.686" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedPackageTypes' </msg>
<status status="PASS" endtime="20170915 10:38:42.687" starttime="20170915 10:38:42.686"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes_history</arg>
</arguments>
<msg timestamp="20170915 10:38:42.687" level="INFO">Executing : Table Must Exist  |  sharedPackageTypes_history </msg>
<msg timestamp="20170915 10:38:42.687" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedPackageTypes_history' </msg>
<status status="PASS" endtime="20170915 10:38:42.688" starttime="20170915 10:38:42.687"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>statuses</arg>
</arguments>
<msg timestamp="20170915 10:38:42.688" level="INFO">Executing : Table Must Exist  |  statuses </msg>
<msg timestamp="20170915 10:38:42.688" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='statuses' </msg>
<status status="PASS" endtime="20170915 10:38:42.689" starttime="20170915 10:38:42.688"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks</arg>
</arguments>
<msg timestamp="20170915 10:38:42.689" level="INFO">Executing : Table Must Exist  |  tasks </msg>
<msg timestamp="20170915 10:38:42.689" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='tasks' </msg>
<status status="PASS" endtime="20170915 10:38:42.690" starttime="20170915 10:38:42.689"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks_history</arg>
</arguments>
<msg timestamp="20170915 10:38:42.690" level="INFO">Executing : Table Must Exist  |  tasks_history </msg>
<msg timestamp="20170915 10:38:42.690" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='tasks_history' </msg>
<status status="PASS" endtime="20170915 10:38:42.691" starttime="20170915 10:38:42.690"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces</arg>
</arguments>
<msg timestamp="20170915 10:38:42.691" level="INFO">Executing : Table Must Exist  |  traces </msg>
<msg timestamp="20170915 10:38:42.691" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='traces' </msg>
<status status="PASS" endtime="20170915 10:38:42.692" starttime="20170915 10:38:42.691"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces_history</arg>
</arguments>
<msg timestamp="20170915 10:38:42.693" level="INFO">Executing : Table Must Exist  |  traces_history </msg>
<msg timestamp="20170915 10:38:42.693" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='traces_history' </msg>
<status status="PASS" endtime="20170915 10:38:42.694" starttime="20170915 10:38:42.692"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>userRights</arg>
</arguments>
<msg timestamp="20170915 10:38:42.694" level="INFO">Executing : Table Must Exist  |  userRights </msg>
<msg timestamp="20170915 10:38:42.694" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='userRights' </msg>
<status status="PASS" endtime="20170915 10:38:42.695" starttime="20170915 10:38:42.694"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups</arg>
</arguments>
<msg timestamp="20170915 10:38:42.695" level="INFO">Executing : Table Must Exist  |  usergroups </msg>
<msg timestamp="20170915 10:38:42.695" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='usergroups' </msg>
<status status="PASS" endtime="20170915 10:38:42.696" starttime="20170915 10:38:42.695"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups_history</arg>
</arguments>
<msg timestamp="20170915 10:38:42.696" level="INFO">Executing : Table Must Exist  |  usergroups_history </msg>
<msg timestamp="20170915 10:38:42.696" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='usergroups_history' </msg>
<status status="PASS" endtime="20170915 10:38:42.697" starttime="20170915 10:38:42.696"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users</arg>
</arguments>
<msg timestamp="20170915 10:38:42.697" level="INFO">Executing : Table Must Exist  |  users </msg>
<msg timestamp="20170915 10:38:42.697" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='users' </msg>
<status status="PASS" endtime="20170915 10:38:42.698" starttime="20170915 10:38:42.697"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users_history</arg>
</arguments>
<msg timestamp="20170915 10:38:42.698" level="INFO">Executing : Table Must Exist  |  users_history </msg>
<msg timestamp="20170915 10:38:42.698" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='users_history' </msg>
<status status="PASS" endtime="20170915 10:38:42.699" starttime="20170915 10:38:42.698"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>version</arg>
</arguments>
<msg timestamp="20170915 10:38:42.699" level="INFO">Executing : Table Must Exist  |  version </msg>
<msg timestamp="20170915 10:38:42.699" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='version' </msg>
<status status="PASS" endtime="20170915 10:38:42.700" starttime="20170915 10:38:42.699"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>versions</arg>
</arguments>
<msg timestamp="20170915 10:38:42.700" level="INFO">Executing : Table Must Exist  |  versions </msg>
<msg timestamp="20170915 10:38:42.700" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='versions' </msg>
<status status="PASS" endtime="20170915 10:38:42.701" starttime="20170915 10:38:42.700"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps</arg>
</arguments>
<msg timestamp="20170915 10:38:42.702" level="INFO">Executing : Table Must Exist  |  view_apps </msg>
<msg timestamp="20170915 10:38:42.702" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps' </msg>
<status status="PASS" endtime="20170915 10:38:42.703" starttime="20170915 10:38:42.701"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps_for_offering</arg>
</arguments>
<msg timestamp="20170915 10:38:42.703" level="INFO">Executing : Table Must Exist  |  view_apps_for_offering </msg>
<msg timestamp="20170915 10:38:42.703" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps_for_offering' </msg>
<status status="PASS" endtime="20170915 10:38:42.704" starttime="20170915 10:38:42.703"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps_for_offering_with_file_sizes</arg>
</arguments>
<msg timestamp="20170915 10:38:42.704" level="INFO">Executing : Table Must Exist  |  view_apps_for_offering_with_file_sizes </msg>
<msg timestamp="20170915 10:38:42.704" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps_for_offering_with_file_sizes' </msg>
<status status="PASS" endtime="20170915 10:38:42.705" starttime="20170915 10:38:42.704"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_datas</arg>
</arguments>
<msg timestamp="20170915 10:38:42.705" level="INFO">Executing : Table Must Exist  |  view_datas </msg>
<msg timestamp="20170915 10:38:42.705" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_datas' </msg>
<status status="PASS" endtime="20170915 10:38:42.706" starttime="20170915 10:38:42.705"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_executables</arg>
</arguments>
<msg timestamp="20170915 10:38:42.706" level="INFO">Executing : Table Must Exist  |  view_executables </msg>
<msg timestamp="20170915 10:38:42.707" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_executables' </msg>
<status status="PASS" endtime="20170915 10:38:42.707" starttime="20170915 10:38:42.706"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_groups</arg>
</arguments>
<msg timestamp="20170915 10:38:42.708" level="INFO">Executing : Table Must Exist  |  view_groups </msg>
<msg timestamp="20170915 10:38:42.708" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_groups' </msg>
<status status="PASS" endtime="20170915 10:38:42.709" starttime="20170915 10:38:42.707"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts</arg>
</arguments>
<msg timestamp="20170915 10:38:42.709" level="INFO">Executing : Table Must Exist  |  view_hosts </msg>
<msg timestamp="20170915 10:38:42.709" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts' </msg>
<status status="PASS" endtime="20170915 10:38:42.710" starttime="20170915 10:38:42.709"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_deployable</arg>
</arguments>
<msg timestamp="20170915 10:38:42.711" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_deployable </msg>
<msg timestamp="20170915 10:38:42.711" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_deployable' </msg>
<status status="PASS" endtime="20170915 10:38:42.712" starttime="20170915 10:38:42.711"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_deployable_and_shared</arg>
</arguments>
<msg timestamp="20170915 10:38:42.712" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_deployable_and_shared </msg>
<msg timestamp="20170915 10:38:42.712" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_deployable_and_shared' </msg>
<status status="PASS" endtime="20170915 10:38:42.713" starttime="20170915 10:38:42.712"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_shared</arg>
</arguments>
<msg timestamp="20170915 10:38:42.713" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_shared </msg>
<msg timestamp="20170915 10:38:42.713" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_shared' </msg>
<status status="PASS" endtime="20170915 10:38:42.714" starttime="20170915 10:38:42.713"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_sessions</arg>
</arguments>
<msg timestamp="20170915 10:38:42.715" level="INFO">Executing : Table Must Exist  |  view_sessions </msg>
<msg timestamp="20170915 10:38:42.715" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_sessions' </msg>
<status status="PASS" endtime="20170915 10:38:42.715" starttime="20170915 10:38:42.714"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_tasks</arg>
</arguments>
<msg timestamp="20170915 10:38:42.716" level="INFO">Executing : Table Must Exist  |  view_tasks </msg>
<msg timestamp="20170915 10:38:42.716" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_tasks' </msg>
<status status="PASS" endtime="20170915 10:38:42.717" starttime="20170915 10:38:42.716"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_traces</arg>
</arguments>
<msg timestamp="20170915 10:38:42.717" level="INFO">Executing : Table Must Exist  |  view_traces </msg>
<msg timestamp="20170915 10:38:42.717" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_traces' </msg>
<status status="PASS" endtime="20170915 10:38:42.718" starttime="20170915 10:38:42.717"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_usergroups</arg>
</arguments>
<msg timestamp="20170915 10:38:42.719" level="INFO">Executing : Table Must Exist  |  view_usergroups </msg>
<msg timestamp="20170915 10:38:42.719" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_usergroups' </msg>
<status status="PASS" endtime="20170915 10:38:42.719" starttime="20170915 10:38:42.718"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users</arg>
</arguments>
<msg timestamp="20170915 10:38:42.720" level="INFO">Executing : Table Must Exist  |  view_users </msg>
<msg timestamp="20170915 10:38:42.720" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users' </msg>
<status status="PASS" endtime="20170915 10:38:42.721" starttime="20170915 10:38:42.720"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_apps</arg>
</arguments>
<msg timestamp="20170915 10:38:42.721" level="INFO">Executing : Table Must Exist  |  view_users_apps </msg>
<msg timestamp="20170915 10:38:42.721" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_apps' </msg>
<status status="PASS" endtime="20170915 10:38:42.722" starttime="20170915 10:38:42.721"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_datas</arg>
</arguments>
<msg timestamp="20170915 10:38:42.723" level="INFO">Executing : Table Must Exist  |  view_users_datas </msg>
<msg timestamp="20170915 10:38:42.723" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_datas' </msg>
<status status="PASS" endtime="20170915 10:38:42.724" starttime="20170915 10:38:42.723"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_groups</arg>
</arguments>
<msg timestamp="20170915 10:38:42.724" level="INFO">Executing : Table Must Exist  |  view_users_groups </msg>
<msg timestamp="20170915 10:38:42.724" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_groups' </msg>
<status status="PASS" endtime="20170915 10:38:42.726" starttime="20170915 10:38:42.724"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_hosts</arg>
</arguments>
<msg timestamp="20170915 10:38:42.726" level="INFO">Executing : Table Must Exist  |  view_users_hosts </msg>
<msg timestamp="20170915 10:38:42.726" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_hosts' </msg>
<status status="PASS" endtime="20170915 10:38:42.727" starttime="20170915 10:38:42.726"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_sessions</arg>
</arguments>
<msg timestamp="20170915 10:38:42.727" level="INFO">Executing : Table Must Exist  |  view_users_sessions </msg>
<msg timestamp="20170915 10:38:42.727" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_sessions' </msg>
<status status="PASS" endtime="20170915 10:38:42.728" starttime="20170915 10:38:42.727"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_tasks</arg>
</arguments>
<msg timestamp="20170915 10:38:42.728" level="INFO">Executing : Table Must Exist  |  view_users_tasks </msg>
<msg timestamp="20170915 10:38:42.728" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_tasks' </msg>
<status status="PASS" endtime="20170915 10:38:42.729" starttime="20170915 10:38:42.728"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_traces</arg>
</arguments>
<msg timestamp="20170915 10:38:42.730" level="INFO">Executing : Table Must Exist  |  view_users_traces </msg>
<msg timestamp="20170915 10:38:42.730" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_traces' </msg>
<status status="PASS" endtime="20170915 10:38:42.731" starttime="20170915 10:38:42.729"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_usergroups</arg>
</arguments>
<msg timestamp="20170915 10:38:42.731" level="INFO">Executing : Table Must Exist  |  view_users_usergroups </msg>
<msg timestamp="20170915 10:38:42.731" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_usergroups' </msg>
<status status="PASS" endtime="20170915 10:38:42.732" starttime="20170915 10:38:42.731"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_users</arg>
</arguments>
<msg timestamp="20170915 10:38:42.732" level="INFO">Executing : Table Must Exist  |  view_users_users </msg>
<msg timestamp="20170915 10:38:42.732" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_users' </msg>
<status status="PASS" endtime="20170915 10:38:42.733" starttime="20170915 10:38:42.732"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_works</arg>
</arguments>
<msg timestamp="20170915 10:38:42.734" level="INFO">Executing : Table Must Exist  |  view_users_works </msg>
<msg timestamp="20170915 10:38:42.734" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_works' </msg>
<status status="PASS" endtime="20170915 10:38:42.735" starttime="20170915 10:38:42.734"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works</arg>
</arguments>
<msg timestamp="20170915 10:38:42.735" level="INFO">Executing : Table Must Exist  |  view_works </msg>
<msg timestamp="20170915 10:38:42.735" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works' </msg>
<status status="PASS" endtime="20170915 10:38:42.736" starttime="20170915 10:38:42.735"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works_for_billing</arg>
</arguments>
<msg timestamp="20170915 10:38:42.737" level="INFO">Executing : Table Must Exist  |  view_works_for_billing </msg>
<msg timestamp="20170915 10:38:42.737" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works_for_billing' </msg>
<status status="PASS" endtime="20170915 10:38:42.737" starttime="20170915 10:38:42.736"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works_for_billing_with_file_sizes</arg>
</arguments>
<msg timestamp="20170915 10:38:42.738" level="INFO">Executing : Table Must Exist  |  view_works_for_billing_with_file_sizes </msg>
<msg timestamp="20170915 10:38:42.738" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works_for_billing_with_file_sizes' </msg>
<status status="PASS" endtime="20170915 10:38:42.738" starttime="20170915 10:38:42.737"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works</arg>
</arguments>
<msg timestamp="20170915 10:38:42.739" level="INFO">Executing : Table Must Exist  |  works </msg>
<msg timestamp="20170915 10:38:42.739" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='works' </msg>
<status status="PASS" endtime="20170915 10:38:42.740" starttime="20170915 10:38:42.739"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works_history</arg>
</arguments>
<msg timestamp="20170915 10:38:42.741" level="INFO">Executing : Table Must Exist  |  works_history </msg>
<msg timestamp="20170915 10:38:42.741" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='works_history' </msg>
<status status="PASS" endtime="20170915 10:38:42.742" starttime="20170915 10:38:42.740"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170915 10:38:42.742" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170915 10:38:42.743" starttime="20170915 10:38:42.742"></status>
</kw>
<status status="PASS" endtime="20170915 10:38:42.743" starttime="20170915 10:38:42.742"></status>
</kw>
<status status="PASS" endtime="20170915 10:38:42.743" starttime="20170915 10:38:42.648"></status>
</kw>
<status status="PASS" endtime="20170915 10:38:42.743" starttime="20170915 10:38:42.647"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>TODO ping XWtremWeb server up</arg>
</arguments>
<msg timestamp="20170915 10:38:42.743" level="INFO">TODO ping XWtremWeb server up</msg>
<status status="PASS" endtime="20170915 10:38:42.743" starttime="20170915 10:38:42.743"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>TODO ping XWtremWeb worker up before one test</arg>
</arguments>
<msg timestamp="20170915 10:38:42.743" level="INFO">TODO ping XWtremWeb worker up before one test</msg>
<status status="PASS" endtime="20170915 10:38:42.743" starttime="20170915 10:38:42.743"></status>
</kw>
<kw name="Delete Fonctionnal Xtremweb Tables" library="MySql">
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170915 10:38:42.744" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170915 10:38:42.745" starttime="20170915 10:38:42.744"></status>
</kw>
<status status="PASS" endtime="20170915 10:38:42.745" starttime="20170915 10:38:42.744"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps</arg>
</arguments>
<msg timestamp="20170915 10:38:42.746" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM apps; </msg>
<status status="PASS" endtime="20170915 10:38:42.746" starttime="20170915 10:38:42.746"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps_history</arg>
</arguments>
<msg timestamp="20170915 10:38:42.746" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM apps_history; </msg>
<status status="PASS" endtime="20170915 10:38:42.747" starttime="20170915 10:38:42.746"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas</arg>
</arguments>
<msg timestamp="20170915 10:38:42.747" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM datas; </msg>
<status status="PASS" endtime="20170915 10:38:42.748" starttime="20170915 10:38:42.747"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas_history</arg>
</arguments>
<msg timestamp="20170915 10:38:42.748" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM datas_history; </msg>
<status status="PASS" endtime="20170915 10:38:42.748" starttime="20170915 10:38:42.748"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables</arg>
</arguments>
<msg timestamp="20170915 10:38:42.749" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM executables; </msg>
<status status="PASS" endtime="20170915 10:38:42.749" starttime="20170915 10:38:42.749"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables_history</arg>
</arguments>
<msg timestamp="20170915 10:38:42.749" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM executables_history; </msg>
<status status="PASS" endtime="20170915 10:38:42.750" starttime="20170915 10:38:42.749"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups</arg>
</arguments>
<msg timestamp="20170915 10:38:42.750" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM groups; </msg>
<status status="PASS" endtime="20170915 10:38:42.750" starttime="20170915 10:38:42.750"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups_history</arg>
</arguments>
<msg timestamp="20170915 10:38:42.751" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM groups_history; </msg>
<status status="PASS" endtime="20170915 10:38:42.751" starttime="20170915 10:38:42.750"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts</arg>
</arguments>
<msg timestamp="20170915 10:38:42.751" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM hosts; </msg>
<status status="PASS" endtime="20170915 10:38:42.751" starttime="20170915 10:38:42.751"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts_history</arg>
</arguments>
<msg timestamp="20170915 10:38:42.752" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM hosts_history; </msg>
<status status="PASS" endtime="20170915 10:38:42.752" starttime="20170915 10:38:42.752"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships</arg>
</arguments>
<msg timestamp="20170915 10:38:42.753" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM memberships; </msg>
<status status="PASS" endtime="20170915 10:38:42.753" starttime="20170915 10:38:42.752"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships_history</arg>
</arguments>
<msg timestamp="20170915 10:38:42.753" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM memberships_history; </msg>
<status status="PASS" endtime="20170915 10:38:42.754" starttime="20170915 10:38:42.753"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions</arg>
</arguments>
<msg timestamp="20170915 10:38:42.754" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sessions; </msg>
<status status="PASS" endtime="20170915 10:38:42.754" starttime="20170915 10:38:42.754"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions_history</arg>
</arguments>
<msg timestamp="20170915 10:38:42.755" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sessions_history; </msg>
<status status="PASS" endtime="20170915 10:38:42.755" starttime="20170915 10:38:42.754"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes</arg>
</arguments>
<msg timestamp="20170915 10:38:42.755" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedAppTypes; </msg>
<status status="PASS" endtime="20170915 10:38:42.756" starttime="20170915 10:38:42.755"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes_history</arg>
</arguments>
<msg timestamp="20170915 10:38:42.756" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedAppTypes_history; </msg>
<status status="PASS" endtime="20170915 10:38:42.757" starttime="20170915 10:38:42.756"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes</arg>
</arguments>
<msg timestamp="20170915 10:38:42.757" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedPackageTypes; </msg>
<status status="PASS" endtime="20170915 10:38:42.758" starttime="20170915 10:38:42.757"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes_history</arg>
</arguments>
<msg timestamp="20170915 10:38:42.758" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedPackageTypes_history; </msg>
<status status="PASS" endtime="20170915 10:38:42.758" starttime="20170915 10:38:42.758"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks</arg>
</arguments>
<msg timestamp="20170915 10:38:42.758" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM tasks; </msg>
<status status="PASS" endtime="20170915 10:38:42.759" starttime="20170915 10:38:42.758"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks_history</arg>
</arguments>
<msg timestamp="20170915 10:38:42.759" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM tasks_history; </msg>
<status status="PASS" endtime="20170915 10:38:42.759" starttime="20170915 10:38:42.759"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces</arg>
</arguments>
<msg timestamp="20170915 10:38:42.760" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM traces; </msg>
<status status="PASS" endtime="20170915 10:38:42.760" starttime="20170915 10:38:42.759"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces_history</arg>
</arguments>
<msg timestamp="20170915 10:38:42.760" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM traces_history; </msg>
<status status="PASS" endtime="20170915 10:38:42.760" starttime="20170915 10:38:42.760"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups</arg>
</arguments>
<msg timestamp="20170915 10:38:42.761" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM usergroups; </msg>
<status status="PASS" endtime="20170915 10:38:42.762" starttime="20170915 10:38:42.761"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups_history</arg>
</arguments>
<msg timestamp="20170915 10:38:42.762" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM usergroups_history; </msg>
<status status="PASS" endtime="20170915 10:38:42.763" starttime="20170915 10:38:42.762"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users_history</arg>
</arguments>
<msg timestamp="20170915 10:38:42.763" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM users_history; </msg>
<status status="PASS" endtime="20170915 10:38:42.763" starttime="20170915 10:38:42.763"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works</arg>
</arguments>
<msg timestamp="20170915 10:38:42.763" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM works; </msg>
<status status="PASS" endtime="20170915 10:38:42.764" starttime="20170915 10:38:42.763"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works_history</arg>
</arguments>
<msg timestamp="20170915 10:38:42.764" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM works_history; </msg>
<status status="PASS" endtime="20170915 10:38:42.765" starttime="20170915 10:38:42.764"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170915 10:38:42.765" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170915 10:38:42.766" starttime="20170915 10:38:42.765"></status>
</kw>
<status status="PASS" endtime="20170915 10:38:42.766" starttime="20170915 10:38:42.765"></status>
</kw>
<status status="PASS" endtime="20170915 10:38:42.766" starttime="20170915 10:38:42.744"></status>
</kw>
<kw name="Stop XWtremWeb Server And XWtremWeb Worker" library="XWCommon">
<kw name="Stop XtremWeb Server" library="XWServer">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${SERVER_PROCESS}</arg>
</arguments>
<msg timestamp="20170915 10:38:42.767" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20170915 10:38:42.868" level="INFO">Process completed.</msg>
<status status="PASS" endtime="20170915 10:38:42.869" starttime="20170915 10:38:42.766"></status>
</kw>
<status status="PASS" endtime="20170915 10:38:42.869" starttime="20170915 10:38:42.766"></status>
</kw>
<kw name="Log XtremWeb Server" library="XWCommon">
<kw name="Log XtremWeb Process Log File" library="XWServer">
<kw name="Log File" library="OperatingSystem">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<msg timestamp="20170915 10:38:42.870" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170915 10:38:42.870" level="INFO">Fri Sep 15 10:38:37 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : checking launch url
Fri Sep 15 10:38:37 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] WARNING : no launcher URL defined
Fri Sep 15 10:38:37 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : launching SmartSockets hub
[15/Sep/2017:10:38:39 +0000] [main_1] ERROR : setRole : role redefined ?! (was SERVER)
[15/Sep/2017:10:38:40 +0000] [xtremweb.database.DBConnPoolThread_main_1] INFO : Connection to database jdbc:mysql://localhost/xtremweb is ok, 70 created
[15/Sep/2017:10:38:40 +0000] [xtremweb.dispatcher.DBInterface_main_1] WARN : Can't retrieve any app
[15/Sep/2017:10:38:40 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't create ProxyValidator
[15/Sep/2017:10:38:40 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.io.FileNotFoundException: /tmp/castore (No such file or directory) (/tmp/castore (No such file or directory))
[15/Sep/2017:10:38:40 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't add CA certificates to keystore
[15/Sep/2017:10:38:40 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.lang.NullPointerException (null)
[15/Sep/2017:10:38:40 +0000] [xtremweb.dispatcher.HashTaskSet_TaskSet_14] INFO : TaskSet started (300000)
[15/Sep/2017:10:38:41 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : still waiting task set...
[15/Sep/2017:10:38:41 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : UDP server not started
[15/Sep/2017:10:38:41 +0000] [xtremweb.communications.TCPServer_TCPServerNIO_15] INFO : started, listening on port : 4321
log4j:WARN No appenders could be found for logger (org.eclipse.jetty.util.log).
log4j:WARN Please initialize the log4j system properly.
log4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.
[15/Sep/2017:10:38:41 +0000] [xtremweb.communications.HTTPServer_main_1] INFO : started, listening on port : 9443
[15/Sep/2017:10:38:41 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : FACEBOOK : java.net.MalformedURLException: no protocol: 
[15/Sep/2017:10:38:41 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : GOOGLE : java.net.MalformedURLException: no protocol: 
[15/Sep/2017:10:38:41 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : TWITTER : java.net.MalformedURLException: no protocol: 
[15/Sep/2017:10:38:41 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : YAHOO : java.net.MalformedURLException: no protocol: 
[15/Sep/2017:10:38:41 +0000] [main_1] ERROR : Can't add new entry to keystore
[15/Sep/2017:10:38:41 +0000] [main_1] WARN : javax.net.ssl.SSLHandshakeException: sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target (sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target)
[15/Sep/2017:10:38:41 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : XWHEP Dispatcher(10.6.0-head) started [Fri Sep 15 10:38:41 UTC 2017]
[15/Sep/2017:10:38:41 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : DB vendor  = mysql
[15/Sep/2017:10:38:41 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : mileStone  = 
[15/Sep/2017:10:38:41 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Time out   = 15000
[15/Sep/2017:10:38:41 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Disk opt'd = true
[15/Sep/2017:10:38:41 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Net  opt'd = true
[15/Sep/2017:10:38:41 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : NIO        = true
XWHEP Dispatcher started  Fri Sep 15 10:38:41 UTC 2017
Name             : vagrant-ubuntu-trusty-64
Version          : 10.6.0-head
Identity         : 
XWRole           : SERVER
Started on       : Fri Sep 15 10:38:39 UTC 2017
Scheduler        : xtremweb.dispatcher.MatchingScheduler
SmartSockets hub : 172.28.128.3/172.17.0.1/10.0.2.15-4329#62.86.f3.3a.cd.7c.00.00.2d.57.02.42.02.6c.0f.e2~vagrant
Server HTTP      : true
Alive            : 300
Alive time out   : 900
Polling time out : 15000
Optimize zip     : true
Optimize network : true
NIO              : true
Comm layer       : xtremweb.communications.TCPClient
Socket time out  : 60000
Socket retries   : 50
Max connections  : 200
TCP port         : 4321
UDP port         : 4323
HTPP  port       : 80
HTPPS port       : 9443
Sun RPC interposition port : 4328
Sandbox path : /usr/bin/lxc
Sandbox launch args : 
Host &lt;host&gt;&lt;uid&gt;2ed81e61-a1ae-44fc-abf6-f24da03ebddd&lt;/uid&gt;&lt;accessrights&gt;0x755&lt;/accessrights&gt;&lt;name&gt;vagrant-ubuntu-trusty-64&lt;/name&gt;&lt;cpuload&gt;50&lt;/cpuload&gt;&lt;natedipaddr&gt;10.0.2.15&lt;/natedipaddr&gt;&lt;ipaddr&gt;10.0.2.15&lt;/ipaddr&gt;&lt;hwaddr&gt;&lt;/hwaddr&gt;&lt;timezone&gt;Etc/UTC&lt;/timezone&gt;&lt;os&gt;LINUX&lt;/os&gt;&lt;osversion&gt;3.13.0-129-generic&lt;/osversion&gt;&lt;javaversion&gt;1.8.0_141&lt;/javaversion&gt;&lt;javadatamodel&gt;64&lt;/javadatamodel&gt;&lt;cputype&gt;AMD64&lt;/cputype&gt;&lt;cpunb&gt;1&lt;/cpunb&gt;&lt;cpumodel&gt;unknown&lt;/cpumodel&gt;&lt;cpuspeed&gt;0&lt;/cpuspeed&gt;&lt;totalmem&gt;0&lt;/totalmem&gt;&lt;totalswap&gt;0&lt;/totalswap&gt;&lt;totaltmp&gt;40284&lt;/totaltmp&gt;&lt;freetmp&gt;37249&lt;/freetmp&gt;&lt;project&gt;&lt;/project&gt;&lt;active&gt;true&lt;/active&gt;&lt;incomingconnections&gt;false&lt;/incomingconnections&gt;&lt;available&gt;false&lt;/available&gt;&lt;pilotjob&gt;false&lt;/pilotjob&gt;&lt;sgid&gt;&lt;/sgid&gt;&lt;timeout&gt;15000&lt;/timeout&gt;&lt;traces&gt;false&lt;/traces&gt;&lt;acceptbin&gt;false&lt;/acceptbin&gt;&lt;version&gt;10.6.0-head&lt;/version&gt;&lt;/host&gt;
[15/Sep/2017:10:38:41 +0000] [xtremweb.communications.HTTPServer_HTTPServer_218] INFO : started, listening on port : 9443
[15/Sep/2017:10:38:42 +0000] [xtremweb.communications.TCPServer_TCPServerNIO_15] WARN : java.net.SocketException: Socket closed (Socket closed)
</msg>
<status status="PASS" endtime="20170915 10:38:42.870" starttime="20170915 10:38:42.869"></status>
</kw>
<status status="PASS" endtime="20170915 10:38:42.870" starttime="20170915 10:38:42.869"></status>
</kw>
<status status="PASS" endtime="20170915 10:38:42.870" starttime="20170915 10:38:42.869"></status>
</kw>
<kw name="Stop XtremWeb Worker" library="XWWorker">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Stop XtremWeb Worker</arg>
</arguments>
<msg timestamp="20170915 10:38:42.871" level="INFO">Stop XtremWeb Worker</msg>
<status status="PASS" endtime="20170915 10:38:42.871" starttime="20170915 10:38:42.871"></status>
</kw>
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${WORKER_PROCESS}</arg>
</arguments>
<msg timestamp="20170915 10:38:42.871" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20170915 10:38:42.972" level="INFO">Process completed.</msg>
<status status="PASS" endtime="20170915 10:38:42.972" starttime="20170915 10:38:42.871"></status>
</kw>
<status status="PASS" endtime="20170915 10:38:42.972" starttime="20170915 10:38:42.871"></status>
</kw>
<status status="PASS" endtime="20170915 10:38:42.973" starttime="20170915 10:38:42.766"></status>
</kw>
<kw name="Start XWtremWeb Server And XWtremWeb Worker" library="XWCommon">
<kw name="Ping XWtremWeb Database" library="XWServer">
<kw name="Xtremweb Tables Must Exist" library="MySql">
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170915 10:38:42.976" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170915 10:38:42.978" starttime="20170915 10:38:42.976"></status>
</kw>
<status status="PASS" endtime="20170915 10:38:42.978" starttime="20170915 10:38:42.975"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>appTypes</arg>
</arguments>
<msg timestamp="20170915 10:38:42.978" level="INFO">Executing : Table Must Exist  |  appTypes </msg>
<msg timestamp="20170915 10:38:42.978" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='appTypes' </msg>
<status status="PASS" endtime="20170915 10:38:42.979" starttime="20170915 10:38:42.978"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps</arg>
</arguments>
<msg timestamp="20170915 10:38:42.980" level="INFO">Executing : Table Must Exist  |  apps </msg>
<msg timestamp="20170915 10:38:42.980" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='apps' </msg>
<status status="PASS" endtime="20170915 10:38:42.981" starttime="20170915 10:38:42.980"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps_history</arg>
</arguments>
<msg timestamp="20170915 10:38:42.981" level="INFO">Executing : Table Must Exist  |  apps_history </msg>
<msg timestamp="20170915 10:38:42.981" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='apps_history' </msg>
<status status="PASS" endtime="20170915 10:38:42.982" starttime="20170915 10:38:42.981"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>cpuTypes</arg>
</arguments>
<msg timestamp="20170915 10:38:42.983" level="INFO">Executing : Table Must Exist  |  cpuTypes </msg>
<msg timestamp="20170915 10:38:42.983" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='cpuTypes' </msg>
<status status="PASS" endtime="20170915 10:38:42.984" starttime="20170915 10:38:42.983"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>dataTypes</arg>
</arguments>
<msg timestamp="20170915 10:38:42.984" level="INFO">Executing : Table Must Exist  |  dataTypes </msg>
<msg timestamp="20170915 10:38:42.984" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='dataTypes' </msg>
<status status="PASS" endtime="20170915 10:38:42.985" starttime="20170915 10:38:42.984"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas</arg>
</arguments>
<msg timestamp="20170915 10:38:42.986" level="INFO">Executing : Table Must Exist  |  datas </msg>
<msg timestamp="20170915 10:38:42.986" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='datas' </msg>
<status status="PASS" endtime="20170915 10:38:42.987" starttime="20170915 10:38:42.986"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas_history</arg>
</arguments>
<msg timestamp="20170915 10:38:42.988" level="INFO">Executing : Table Must Exist  |  datas_history </msg>
<msg timestamp="20170915 10:38:42.988" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='datas_history' </msg>
<status status="PASS" endtime="20170915 10:38:42.989" starttime="20170915 10:38:42.988"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables</arg>
</arguments>
<msg timestamp="20170915 10:38:42.989" level="INFO">Executing : Table Must Exist  |  executables </msg>
<msg timestamp="20170915 10:38:42.989" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='executables' </msg>
<status status="PASS" endtime="20170915 10:38:42.990" starttime="20170915 10:38:42.989"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables_history</arg>
</arguments>
<msg timestamp="20170915 10:38:42.991" level="INFO">Executing : Table Must Exist  |  executables_history </msg>
<msg timestamp="20170915 10:38:42.991" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='executables_history' </msg>
<status status="PASS" endtime="20170915 10:38:42.992" starttime="20170915 10:38:42.990"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups</arg>
</arguments>
<msg timestamp="20170915 10:38:42.992" level="INFO">Executing : Table Must Exist  |  groups </msg>
<msg timestamp="20170915 10:38:42.992" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='groups' </msg>
<status status="PASS" endtime="20170915 10:38:42.993" starttime="20170915 10:38:42.992"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups_history</arg>
</arguments>
<msg timestamp="20170915 10:38:42.994" level="INFO">Executing : Table Must Exist  |  groups_history </msg>
<msg timestamp="20170915 10:38:42.994" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='groups_history' </msg>
<status status="PASS" endtime="20170915 10:38:42.995" starttime="20170915 10:38:42.994"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts</arg>
</arguments>
<msg timestamp="20170915 10:38:42.995" level="INFO">Executing : Table Must Exist  |  hosts </msg>
<msg timestamp="20170915 10:38:42.995" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='hosts' </msg>
<status status="PASS" endtime="20170915 10:38:42.996" starttime="20170915 10:38:42.995"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts_history</arg>
</arguments>
<msg timestamp="20170915 10:38:42.996" level="INFO">Executing : Table Must Exist  |  hosts_history </msg>
<msg timestamp="20170915 10:38:42.996" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='hosts_history' </msg>
<status status="PASS" endtime="20170915 10:38:42.997" starttime="20170915 10:38:42.996"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships</arg>
</arguments>
<msg timestamp="20170915 10:38:42.997" level="INFO">Executing : Table Must Exist  |  memberships </msg>
<msg timestamp="20170915 10:38:42.997" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='memberships' </msg>
<status status="PASS" endtime="20170915 10:38:42.998" starttime="20170915 10:38:42.997"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships_history</arg>
</arguments>
<msg timestamp="20170915 10:38:42.999" level="INFO">Executing : Table Must Exist  |  memberships_history </msg>
<msg timestamp="20170915 10:38:42.999" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='memberships_history' </msg>
<status status="PASS" endtime="20170915 10:38:42.999" starttime="20170915 10:38:42.998"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>oses</arg>
</arguments>
<msg timestamp="20170915 10:38:43.000" level="INFO">Executing : Table Must Exist  |  oses </msg>
<msg timestamp="20170915 10:38:43.000" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='oses' </msg>
<status status="PASS" endtime="20170915 10:38:43.001" starttime="20170915 10:38:43.000"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>packageTypes</arg>
</arguments>
<msg timestamp="20170915 10:38:43.001" level="INFO">Executing : Table Must Exist  |  packageTypes </msg>
<msg timestamp="20170915 10:38:43.001" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='packageTypes' </msg>
<status status="PASS" endtime="20170915 10:38:43.002" starttime="20170915 10:38:43.001"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions</arg>
</arguments>
<msg timestamp="20170915 10:38:43.002" level="INFO">Executing : Table Must Exist  |  sessions </msg>
<msg timestamp="20170915 10:38:43.002" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sessions' </msg>
<status status="PASS" endtime="20170915 10:38:43.003" starttime="20170915 10:38:43.002"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions_history</arg>
</arguments>
<msg timestamp="20170915 10:38:43.003" level="INFO">Executing : Table Must Exist  |  sessions_history </msg>
<msg timestamp="20170915 10:38:43.003" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sessions_history' </msg>
<status status="PASS" endtime="20170915 10:38:43.004" starttime="20170915 10:38:43.003"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes</arg>
</arguments>
<msg timestamp="20170915 10:38:43.004" level="INFO">Executing : Table Must Exist  |  sharedAppTypes </msg>
<msg timestamp="20170915 10:38:43.004" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedAppTypes' </msg>
<status status="PASS" endtime="20170915 10:38:43.005" starttime="20170915 10:38:43.004"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes_history</arg>
</arguments>
<msg timestamp="20170915 10:38:43.005" level="INFO">Executing : Table Must Exist  |  sharedAppTypes_history </msg>
<msg timestamp="20170915 10:38:43.005" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedAppTypes_history' </msg>
<status status="PASS" endtime="20170915 10:38:43.006" starttime="20170915 10:38:43.005"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes</arg>
</arguments>
<msg timestamp="20170915 10:38:43.006" level="INFO">Executing : Table Must Exist  |  sharedPackageTypes </msg>
<msg timestamp="20170915 10:38:43.006" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedPackageTypes' </msg>
<status status="PASS" endtime="20170915 10:38:43.007" starttime="20170915 10:38:43.006"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes_history</arg>
</arguments>
<msg timestamp="20170915 10:38:43.007" level="INFO">Executing : Table Must Exist  |  sharedPackageTypes_history </msg>
<msg timestamp="20170915 10:38:43.007" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedPackageTypes_history' </msg>
<status status="PASS" endtime="20170915 10:38:43.008" starttime="20170915 10:38:43.007"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>statuses</arg>
</arguments>
<msg timestamp="20170915 10:38:43.009" level="INFO">Executing : Table Must Exist  |  statuses </msg>
<msg timestamp="20170915 10:38:43.009" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='statuses' </msg>
<status status="PASS" endtime="20170915 10:38:43.010" starttime="20170915 10:38:43.009"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks</arg>
</arguments>
<msg timestamp="20170915 10:38:43.010" level="INFO">Executing : Table Must Exist  |  tasks </msg>
<msg timestamp="20170915 10:38:43.010" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='tasks' </msg>
<status status="PASS" endtime="20170915 10:38:43.011" starttime="20170915 10:38:43.010"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks_history</arg>
</arguments>
<msg timestamp="20170915 10:38:43.011" level="INFO">Executing : Table Must Exist  |  tasks_history </msg>
<msg timestamp="20170915 10:38:43.011" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='tasks_history' </msg>
<status status="PASS" endtime="20170915 10:38:43.012" starttime="20170915 10:38:43.011"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces</arg>
</arguments>
<msg timestamp="20170915 10:38:43.012" level="INFO">Executing : Table Must Exist  |  traces </msg>
<msg timestamp="20170915 10:38:43.012" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='traces' </msg>
<status status="PASS" endtime="20170915 10:38:43.013" starttime="20170915 10:38:43.012"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces_history</arg>
</arguments>
<msg timestamp="20170915 10:38:43.013" level="INFO">Executing : Table Must Exist  |  traces_history </msg>
<msg timestamp="20170915 10:38:43.013" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='traces_history' </msg>
<status status="PASS" endtime="20170915 10:38:43.014" starttime="20170915 10:38:43.013"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>userRights</arg>
</arguments>
<msg timestamp="20170915 10:38:43.014" level="INFO">Executing : Table Must Exist  |  userRights </msg>
<msg timestamp="20170915 10:38:43.014" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='userRights' </msg>
<status status="PASS" endtime="20170915 10:38:43.015" starttime="20170915 10:38:43.014"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups</arg>
</arguments>
<msg timestamp="20170915 10:38:43.015" level="INFO">Executing : Table Must Exist  |  usergroups </msg>
<msg timestamp="20170915 10:38:43.015" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='usergroups' </msg>
<status status="PASS" endtime="20170915 10:38:43.016" starttime="20170915 10:38:43.015"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups_history</arg>
</arguments>
<msg timestamp="20170915 10:38:43.016" level="INFO">Executing : Table Must Exist  |  usergroups_history </msg>
<msg timestamp="20170915 10:38:43.016" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='usergroups_history' </msg>
<status status="PASS" endtime="20170915 10:38:43.017" starttime="20170915 10:38:43.016"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users</arg>
</arguments>
<msg timestamp="20170915 10:38:43.017" level="INFO">Executing : Table Must Exist  |  users </msg>
<msg timestamp="20170915 10:38:43.017" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='users' </msg>
<status status="PASS" endtime="20170915 10:38:43.018" starttime="20170915 10:38:43.017"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users_history</arg>
</arguments>
<msg timestamp="20170915 10:38:43.018" level="INFO">Executing : Table Must Exist  |  users_history </msg>
<msg timestamp="20170915 10:38:43.018" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='users_history' </msg>
<status status="PASS" endtime="20170915 10:38:43.019" starttime="20170915 10:38:43.018"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>version</arg>
</arguments>
<msg timestamp="20170915 10:38:43.019" level="INFO">Executing : Table Must Exist  |  version </msg>
<msg timestamp="20170915 10:38:43.019" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='version' </msg>
<status status="PASS" endtime="20170915 10:38:43.020" starttime="20170915 10:38:43.019"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>versions</arg>
</arguments>
<msg timestamp="20170915 10:38:43.020" level="INFO">Executing : Table Must Exist  |  versions </msg>
<msg timestamp="20170915 10:38:43.020" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='versions' </msg>
<status status="PASS" endtime="20170915 10:38:43.021" starttime="20170915 10:38:43.020"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps</arg>
</arguments>
<msg timestamp="20170915 10:38:43.021" level="INFO">Executing : Table Must Exist  |  view_apps </msg>
<msg timestamp="20170915 10:38:43.021" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps' </msg>
<status status="PASS" endtime="20170915 10:38:43.022" starttime="20170915 10:38:43.021"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps_for_offering</arg>
</arguments>
<msg timestamp="20170915 10:38:43.022" level="INFO">Executing : Table Must Exist  |  view_apps_for_offering </msg>
<msg timestamp="20170915 10:38:43.022" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps_for_offering' </msg>
<status status="PASS" endtime="20170915 10:38:43.023" starttime="20170915 10:38:43.022"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps_for_offering_with_file_sizes</arg>
</arguments>
<msg timestamp="20170915 10:38:43.023" level="INFO">Executing : Table Must Exist  |  view_apps_for_offering_with_file_sizes </msg>
<msg timestamp="20170915 10:38:43.023" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps_for_offering_with_file_sizes' </msg>
<status status="PASS" endtime="20170915 10:38:43.024" starttime="20170915 10:38:43.023"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_datas</arg>
</arguments>
<msg timestamp="20170915 10:38:43.024" level="INFO">Executing : Table Must Exist  |  view_datas </msg>
<msg timestamp="20170915 10:38:43.024" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_datas' </msg>
<status status="PASS" endtime="20170915 10:38:43.025" starttime="20170915 10:38:43.024"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_executables</arg>
</arguments>
<msg timestamp="20170915 10:38:43.025" level="INFO">Executing : Table Must Exist  |  view_executables </msg>
<msg timestamp="20170915 10:38:43.025" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_executables' </msg>
<status status="PASS" endtime="20170915 10:38:43.026" starttime="20170915 10:38:43.025"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_groups</arg>
</arguments>
<msg timestamp="20170915 10:38:43.026" level="INFO">Executing : Table Must Exist  |  view_groups </msg>
<msg timestamp="20170915 10:38:43.026" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_groups' </msg>
<status status="PASS" endtime="20170915 10:38:43.027" starttime="20170915 10:38:43.026"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts</arg>
</arguments>
<msg timestamp="20170915 10:38:43.027" level="INFO">Executing : Table Must Exist  |  view_hosts </msg>
<msg timestamp="20170915 10:38:43.027" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts' </msg>
<status status="PASS" endtime="20170915 10:38:43.028" starttime="20170915 10:38:43.027"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_deployable</arg>
</arguments>
<msg timestamp="20170915 10:38:43.028" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_deployable </msg>
<msg timestamp="20170915 10:38:43.028" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_deployable' </msg>
<status status="PASS" endtime="20170915 10:38:43.029" starttime="20170915 10:38:43.028"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_deployable_and_shared</arg>
</arguments>
<msg timestamp="20170915 10:38:43.029" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_deployable_and_shared </msg>
<msg timestamp="20170915 10:38:43.029" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_deployable_and_shared' </msg>
<status status="PASS" endtime="20170915 10:38:43.030" starttime="20170915 10:38:43.029"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_shared</arg>
</arguments>
<msg timestamp="20170915 10:38:43.031" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_shared </msg>
<msg timestamp="20170915 10:38:43.031" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_shared' </msg>
<status status="PASS" endtime="20170915 10:38:43.031" starttime="20170915 10:38:43.030"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_sessions</arg>
</arguments>
<msg timestamp="20170915 10:38:43.032" level="INFO">Executing : Table Must Exist  |  view_sessions </msg>
<msg timestamp="20170915 10:38:43.032" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_sessions' </msg>
<status status="PASS" endtime="20170915 10:38:43.033" starttime="20170915 10:38:43.031"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_tasks</arg>
</arguments>
<msg timestamp="20170915 10:38:43.033" level="INFO">Executing : Table Must Exist  |  view_tasks </msg>
<msg timestamp="20170915 10:38:43.033" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_tasks' </msg>
<status status="PASS" endtime="20170915 10:38:43.034" starttime="20170915 10:38:43.033"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_traces</arg>
</arguments>
<msg timestamp="20170915 10:38:43.034" level="INFO">Executing : Table Must Exist  |  view_traces </msg>
<msg timestamp="20170915 10:38:43.034" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_traces' </msg>
<status status="PASS" endtime="20170915 10:38:43.035" starttime="20170915 10:38:43.034"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_usergroups</arg>
</arguments>
<msg timestamp="20170915 10:38:43.035" level="INFO">Executing : Table Must Exist  |  view_usergroups </msg>
<msg timestamp="20170915 10:38:43.035" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_usergroups' </msg>
<status status="PASS" endtime="20170915 10:38:43.036" starttime="20170915 10:38:43.035"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users</arg>
</arguments>
<msg timestamp="20170915 10:38:43.036" level="INFO">Executing : Table Must Exist  |  view_users </msg>
<msg timestamp="20170915 10:38:43.036" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users' </msg>
<status status="PASS" endtime="20170915 10:38:43.037" starttime="20170915 10:38:43.036"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_apps</arg>
</arguments>
<msg timestamp="20170915 10:38:43.037" level="INFO">Executing : Table Must Exist  |  view_users_apps </msg>
<msg timestamp="20170915 10:38:43.037" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_apps' </msg>
<status status="PASS" endtime="20170915 10:38:43.038" starttime="20170915 10:38:43.037"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_datas</arg>
</arguments>
<msg timestamp="20170915 10:38:43.038" level="INFO">Executing : Table Must Exist  |  view_users_datas </msg>
<msg timestamp="20170915 10:38:43.038" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_datas' </msg>
<status status="PASS" endtime="20170915 10:38:43.040" starttime="20170915 10:38:43.038"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_groups</arg>
</arguments>
<msg timestamp="20170915 10:38:43.040" level="INFO">Executing : Table Must Exist  |  view_users_groups </msg>
<msg timestamp="20170915 10:38:43.040" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_groups' </msg>
<status status="PASS" endtime="20170915 10:38:43.041" starttime="20170915 10:38:43.040"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_hosts</arg>
</arguments>
<msg timestamp="20170915 10:38:43.041" level="INFO">Executing : Table Must Exist  |  view_users_hosts </msg>
<msg timestamp="20170915 10:38:43.041" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_hosts' </msg>
<status status="PASS" endtime="20170915 10:38:43.042" starttime="20170915 10:38:43.041"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_sessions</arg>
</arguments>
<msg timestamp="20170915 10:38:43.042" level="INFO">Executing : Table Must Exist  |  view_users_sessions </msg>
<msg timestamp="20170915 10:38:43.042" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_sessions' </msg>
<status status="PASS" endtime="20170915 10:38:43.043" starttime="20170915 10:38:43.042"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_tasks</arg>
</arguments>
<msg timestamp="20170915 10:38:43.043" level="INFO">Executing : Table Must Exist  |  view_users_tasks </msg>
<msg timestamp="20170915 10:38:43.043" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_tasks' </msg>
<status status="PASS" endtime="20170915 10:38:43.044" starttime="20170915 10:38:43.043"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_traces</arg>
</arguments>
<msg timestamp="20170915 10:38:43.044" level="INFO">Executing : Table Must Exist  |  view_users_traces </msg>
<msg timestamp="20170915 10:38:43.044" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_traces' </msg>
<status status="PASS" endtime="20170915 10:38:43.045" starttime="20170915 10:38:43.044"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_usergroups</arg>
</arguments>
<msg timestamp="20170915 10:38:43.045" level="INFO">Executing : Table Must Exist  |  view_users_usergroups </msg>
<msg timestamp="20170915 10:38:43.045" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_usergroups' </msg>
<status status="PASS" endtime="20170915 10:38:43.046" starttime="20170915 10:38:43.045"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_users</arg>
</arguments>
<msg timestamp="20170915 10:38:43.046" level="INFO">Executing : Table Must Exist  |  view_users_users </msg>
<msg timestamp="20170915 10:38:43.046" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_users' </msg>
<status status="PASS" endtime="20170915 10:38:43.047" starttime="20170915 10:38:43.046"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_works</arg>
</arguments>
<msg timestamp="20170915 10:38:43.047" level="INFO">Executing : Table Must Exist  |  view_users_works </msg>
<msg timestamp="20170915 10:38:43.047" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_works' </msg>
<status status="PASS" endtime="20170915 10:38:43.048" starttime="20170915 10:38:43.047"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works</arg>
</arguments>
<msg timestamp="20170915 10:38:43.048" level="INFO">Executing : Table Must Exist  |  view_works </msg>
<msg timestamp="20170915 10:38:43.048" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works' </msg>
<status status="PASS" endtime="20170915 10:38:43.049" starttime="20170915 10:38:43.048"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works_for_billing</arg>
</arguments>
<msg timestamp="20170915 10:38:43.049" level="INFO">Executing : Table Must Exist  |  view_works_for_billing </msg>
<msg timestamp="20170915 10:38:43.049" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works_for_billing' </msg>
<status status="PASS" endtime="20170915 10:38:43.050" starttime="20170915 10:38:43.049"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works_for_billing_with_file_sizes</arg>
</arguments>
<msg timestamp="20170915 10:38:43.050" level="INFO">Executing : Table Must Exist  |  view_works_for_billing_with_file_sizes </msg>
<msg timestamp="20170915 10:38:43.050" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works_for_billing_with_file_sizes' </msg>
<status status="PASS" endtime="20170915 10:38:43.051" starttime="20170915 10:38:43.050"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works</arg>
</arguments>
<msg timestamp="20170915 10:38:43.051" level="INFO">Executing : Table Must Exist  |  works </msg>
<msg timestamp="20170915 10:38:43.051" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='works' </msg>
<status status="PASS" endtime="20170915 10:38:43.052" starttime="20170915 10:38:43.051"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works_history</arg>
</arguments>
<msg timestamp="20170915 10:38:43.052" level="INFO">Executing : Table Must Exist  |  works_history </msg>
<msg timestamp="20170915 10:38:43.052" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='works_history' </msg>
<status status="PASS" endtime="20170915 10:38:43.053" starttime="20170915 10:38:43.052"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170915 10:38:43.053" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170915 10:38:43.053" starttime="20170915 10:38:43.053"></status>
</kw>
<status status="PASS" endtime="20170915 10:38:43.053" starttime="20170915 10:38:43.053"></status>
</kw>
<status status="PASS" endtime="20170915 10:38:43.054" starttime="20170915 10:38:42.974"></status>
</kw>
<status status="PASS" endtime="20170915 10:38:43.054" starttime="20170915 10:38:42.973"></status>
</kw>
<kw name="Start XtremWeb Server" library="XWServer">
<arguments>
<arg>${DIST_XWHEP_PATH}</arg>
</arguments>
<kw name="File Should Exist" library="OperatingSystem">
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xtremweb.server.conf</arg>
</arguments>
<msg timestamp="20170915 10:38:43.058" html="yes" level="INFO">File '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf&lt;/a&gt;' exists.</msg>
<status status="PASS" endtime="20170915 10:38:43.059" starttime="20170915 10:38:43.054"></status>
</kw>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xtremweb.server.conf</arg>
</arguments>
<assign>
<var>${config_content}</var>
</assign>
<msg timestamp="20170915 10:38:43.059" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf&lt;/a&gt;'.</msg>
<msg timestamp="20170915 10:38:43.060" level="INFO">${config_content} = #
# Copyrights     : CNRS
# Author         : Oleg Lodygensky
# Acknowledgment : XtremWeb-HEP is based on XtremWeb 1.8.0 by inria : http://www.xtremweb.net/
# Web            : http://www.xtremweb-hep.o...</msg>
<status status="PASS" endtime="20170915 10:38:43.060" starttime="20170915 10:38:43.059"></status>
</kw>
<kw name="Remove String Using Regexp" library="String">
<doc>Removes ``patterns`` from the given ``string``.</doc>
<arguments>
<arg>${config_content}</arg>
<arg>LAUNCHERURL=${XWCONFIGURE.VALUES.XWUPGRADEURL}</arg>
</arguments>
<assign>
<var>${config_content_filtered}</var>
</assign>
<msg timestamp="20170915 10:38:43.061" level="INFO">${config_content_filtered} = #
# Copyrights     : CNRS
# Author         : Oleg Lodygensky
# Acknowledgment : XtremWeb-HEP is based on XtremWeb 1.8.0 by inria : http://www.xtremweb.net/
# Web            : http://www.xtremweb-hep.o...</msg>
<status status="PASS" endtime="20170915 10:38:43.061" starttime="20170915 10:38:43.060"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${config_content_filtered}</arg>
<arg>\## HTTPSPORT=443</arg>
<arg>HTTPSPORT=${XWCONFIGURE.VALUES.HTTPSPORT}</arg>
</arguments>
<assign>
<var>${config_content_filtered}</var>
</assign>
<msg timestamp="20170915 10:38:43.061" level="INFO">${config_content_filtered} = #
# Copyrights     : CNRS
# Author         : Oleg Lodygensky
# Acknowledgment : XtremWeb-HEP is based on XtremWeb 1.8.0 by inria : http://www.xtremweb.net/
# Web            : http://www.xtremweb-hep.o...</msg>
<status status="PASS" endtime="20170915 10:38:43.061" starttime="20170915 10:38:43.061"></status>
</kw>
<kw name="Create File" library="OperatingSystem">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xtremweb.server.conf</arg>
<arg>content=${config_content_filtered}</arg>
</arguments>
<msg timestamp="20170915 10:38:43.069" html="yes" level="INFO">Created file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170915 10:38:43.069" starttime="20170915 10:38:43.061"></status>
</kw>
<kw name="Remove File" library="OperatingSystem">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<msg timestamp="20170915 10:38:43.072" html="yes" level="INFO">Removed file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170915 10:38:43.072" starttime="20170915 10:38:43.070"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/bin/xtremweb.server console</arg>
<arg>shell=yes</arg>
<arg>stderr=STDOUT</arg>
<arg>stdout=${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<assign>
<var>${created_process}</var>
</assign>
<msg timestamp="20170915 10:38:43.073" level="INFO">Starting process:
/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/xtremweb.server console</msg>
<msg timestamp="20170915 10:38:43.076" level="INFO">${created_process} = 63</msg>
<status status="PASS" endtime="20170915 10:38:43.076" starttime="20170915 10:38:43.072"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SERVER_PROCESS}</arg>
<arg>${created_process}</arg>
</arguments>
<msg timestamp="20170915 10:38:43.078" level="INFO">${SERVER_PROCESS} = 63</msg>
<status status="PASS" endtime="20170915 10:38:43.078" starttime="20170915 10:38:43.077"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2 min</arg>
<arg>5 sec</arg>
<arg>Check XtremWeb Server Start From Log</arg>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<kw name="Check XtremWeb Server Start From Log" library="XWServer">
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<kw name="Log XtremWeb Process Log File" library="XWServer">
<kw name="Log File" library="OperatingSystem">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<msg timestamp="20170915 10:38:43.080" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170915 10:38:43.080" level="INFO"></msg>
<status status="PASS" endtime="20170915 10:38:43.080" starttime="20170915 10:38:43.079"></status>
</kw>
<status status="PASS" endtime="20170915 10:38:43.080" starttime="20170915 10:38:43.079"></status>
</kw>
<kw name="Grep File" library="OperatingSystem">
<doc>Returns the lines of the specified file that match the ``pattern``.</doc>
<arguments>
<arg>${log}</arg>
<arg>listening on port : ${XWCONFIGURE.VALUES.HTTPSPORT}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20170915 10:38:43.081" html="yes" level="INFO">Reading file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170915 10:38:43.081" level="INFO">0 out of 0 lines matched</msg>
<msg timestamp="20170915 10:38:43.082" level="INFO">${ret} = </msg>
<status status="PASS" endtime="20170915 10:38:43.082" starttime="20170915 10:38:43.081"></status>
</kw>
<kw name="Get Line Count" library="String">
<doc>Returns and logs the number of lines in the given string.</doc>
<arguments>
<arg>${ret}</arg>
</arguments>
<assign>
<var>${line_count}</var>
</assign>
<msg timestamp="20170915 10:38:43.082" level="INFO">0 lines</msg>
<msg timestamp="20170915 10:38:43.082" level="INFO">${line_count} = 0</msg>
<status status="PASS" endtime="20170915 10:38:43.082" starttime="20170915 10:38:43.082"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${line_count}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20170915 10:38:43.082" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20170915 10:38:43.083" level="FAIL">0 != 2</msg>
<status status="FAIL" endtime="20170915 10:38:43.083" starttime="20170915 10:38:43.082"></status>
</kw>
<status status="FAIL" endtime="20170915 10:38:43.083" starttime="20170915 10:38:43.078"></status>
</kw>
<kw name="Check XtremWeb Server Start From Log" library="XWServer">
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<kw name="Log XtremWeb Process Log File" library="XWServer">
<kw name="Log File" library="OperatingSystem">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<msg timestamp="20170915 10:38:48.086" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170915 10:38:48.104" level="INFO">Fri Sep 15 10:38:43 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : checking launch url
Fri Sep 15 10:38:43 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] WARNING : no launcher URL defined
Fri Sep 15 10:38:43 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : launching SmartSockets hub
[15/Sep/2017:10:38:45 +0000] [main_1] ERROR : setRole : role redefined ?! (was SERVER)
[15/Sep/2017:10:38:45 +0000] [xtremweb.database.DBConnPoolThread_main_1] INFO : Connection to database jdbc:mysql://localhost/xtremweb is ok, 70 created
[15/Sep/2017:10:38:45 +0000] [xtremweb.dispatcher.DBInterface_main_1] WARN : Can't retrieve any app
[15/Sep/2017:10:38:45 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't create ProxyValidator
[15/Sep/2017:10:38:45 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.io.FileNotFoundException: /tmp/castore (No such file or directory) (/tmp/castore (No such file or directory))
[15/Sep/2017:10:38:45 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't add CA certificates to keystore
[15/Sep/2017:10:38:45 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.lang.NullPointerException (null)
[15/Sep/2017:10:38:46 +0000] [xtremweb.dispatcher.HashTaskSet_TaskSet_14] INFO : TaskSet started (300000)
[15/Sep/2017:10:38:47 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : still waiting task set...
[15/Sep/2017:10:38:47 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : UDP server not started
[15/Sep/2017:10:38:47 +0000] [xtremweb.communications.TCPServer_TCPServerNIO_15] INFO : started, listening on port : 4321
log4j:WARN No appenders could be found for logger (org.eclipse.jetty.util.log).
log4j:WARN Please initialize the log4j system properly.
log4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.
[15/Sep/2017:10:38:47 +0000] [xtremweb.communications.HTTPServer_main_1] INFO : started, listening on port : 9443
[15/Sep/2017:10:38:47 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : FACEBOOK : java.net.MalformedURLException: no protocol: 
[15/Sep/2017:10:38:47 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : GOOGLE : java.net.MalformedURLException: no protocol: 
[15/Sep/2017:10:38:47 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : TWITTER : java.net.MalformedURLException: no protocol: 
[15/Sep/2017:10:38:47 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : YAHOO : java.net.MalformedURLException: no protocol: 
[15/Sep/2017:10:38:47 +0000] [main_1] ERROR : Can't add new entry to keystore
[15/Sep/2017:10:38:47 +0000] [main_1] WARN : javax.net.ssl.SSLHandshakeException: sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target (sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target)
[15/Sep/2017:10:38:47 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : XWHEP Dispatcher(10.6.0-head) started [Fri Sep 15 10:38:47 UTC 2017]
[15/Sep/2017:10:38:47 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : DB vendor  = mysql
[15/Sep/2017:10:38:47 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : mileStone  = 
[15/Sep/2017:10:38:47 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Time out   = 15000
[15/Sep/2017:10:38:47 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Disk opt'd = true
[15/Sep/2017:10:38:47 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Net  opt'd = true
[15/Sep/2017:10:38:47 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : NIO        = true
XWHEP Dispatcher started  Fri Sep 15 10:38:47 UTC 2017
Name             : vagrant-ubuntu-trusty-64
Version          : 10.6.0-head
Identity         : 
XWRole           : SERVER
Started on       : Fri Sep 15 10:38:45 UTC 2017
Scheduler        : xtremweb.dispatcher.MatchingScheduler
SmartSockets hub : 172.28.128.3/172.17.0.1/10.0.2.15-4329#7e.5d.f4.3a.cd.7c.00.00.2c.5b.02.42.02.6c.0f.e2~vagrant
Server HTTP      : true
Alive            : 300
Alive time out   : 900
Polling time out : 15000
Optimize zip     : true
Optimize network : true
NIO              : true
Comm layer       : xtremweb.communications.TCPClient
Socket time out  : 60000
Socket retries   : 50
Max connections  : 200
TCP port         : 4321
UDP port         : 4323
HTPP  port       : 80
HTPPS port       : 9443
Sun RPC interposition port : 4328
Sandbox path : /usr/bin/lxc
Sandbox launch args : 
Host &lt;host&gt;&lt;uid&gt;0a30143d-3795-48f0-aefc-79586ba4d418&lt;/uid&gt;&lt;accessrights&gt;0x755&lt;/accessrights&gt;&lt;name&gt;vagrant-ubuntu-trusty-64&lt;/name&gt;&lt;cpuload&gt;50&lt;/cpuload&gt;&lt;natedipaddr&gt;10.0.2.15&lt;/natedipaddr&gt;&lt;ipaddr&gt;10.0.2.15&lt;/ipaddr&gt;&lt;hwaddr&gt;&lt;/hwaddr&gt;&lt;timezone&gt;Etc/UTC&lt;/timezone&gt;&lt;os&gt;LINUX&lt;/os&gt;&lt;osversion&gt;3.13.0-129-generic&lt;/osversion&gt;&lt;javaversion&gt;1.8.0_141&lt;/javaversion&gt;&lt;javadatamodel&gt;64&lt;/javadatamodel&gt;&lt;cputype&gt;AMD64&lt;/cputype&gt;&lt;cpunb&gt;1&lt;/cpunb&gt;&lt;cpumodel&gt;unknown&lt;/cpumodel&gt;&lt;cpuspeed&gt;0&lt;/cpuspeed&gt;&lt;totalmem&gt;0&lt;/totalmem&gt;&lt;totalswap&gt;0&lt;/totalswap&gt;&lt;totaltmp&gt;40284&lt;/totaltmp&gt;&lt;freetmp&gt;37249&lt;/freetmp&gt;&lt;project&gt;&lt;/project&gt;&lt;active&gt;true&lt;/active&gt;&lt;incomingconnections&gt;false&lt;/incomingconnections&gt;&lt;available&gt;false&lt;/available&gt;&lt;pilotjob&gt;false&lt;/pilotjob&gt;&lt;sgid&gt;&lt;/sgid&gt;&lt;timeout&gt;15000&lt;/timeout&gt;&lt;traces&gt;false&lt;/traces&gt;&lt;acceptbin&gt;false&lt;/acceptbin&gt;&lt;version&gt;10.6.0-head&lt;/version&gt;&lt;/host&gt;
[15/Sep/2017:10:38:47 +0000] [xtremweb.communications.HTTPServer_HTTPServer_218] INFO : started, listening on port : 9443
</msg>
<status status="PASS" endtime="20170915 10:38:48.104" starttime="20170915 10:38:48.086"></status>
</kw>
<status status="PASS" endtime="20170915 10:38:48.105" starttime="20170915 10:38:48.085"></status>
</kw>
<kw name="Grep File" library="OperatingSystem">
<doc>Returns the lines of the specified file that match the ``pattern``.</doc>
<arguments>
<arg>${log}</arg>
<arg>listening on port : ${XWCONFIGURE.VALUES.HTTPSPORT}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20170915 10:38:48.105" html="yes" level="INFO">Reading file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170915 10:38:48.106" level="INFO">2 out of 59 lines matched</msg>
<msg timestamp="20170915 10:38:48.106" level="INFO">${ret} = [15/Sep/2017:10:38:47 +0000] [xtremweb.communications.HTTPServer_main_1] INFO : started, listening on port : 9443
[15/Sep/2017:10:38:47 +0000] [xtremweb.communications.HTTPServer_HTTPServer_218] INFO ...</msg>
<status status="PASS" endtime="20170915 10:38:48.106" starttime="20170915 10:38:48.105"></status>
</kw>
<kw name="Get Line Count" library="String">
<doc>Returns and logs the number of lines in the given string.</doc>
<arguments>
<arg>${ret}</arg>
</arguments>
<assign>
<var>${line_count}</var>
</assign>
<msg timestamp="20170915 10:38:48.107" level="INFO">2 lines</msg>
<msg timestamp="20170915 10:38:48.107" level="INFO">${line_count} = 2</msg>
<status status="PASS" endtime="20170915 10:38:48.107" starttime="20170915 10:38:48.107"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${line_count}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20170915 10:38:48.107" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170915 10:38:48.108" starttime="20170915 10:38:48.107"></status>
</kw>
<status status="PASS" endtime="20170915 10:38:48.108" starttime="20170915 10:38:48.085"></status>
</kw>
<status status="PASS" endtime="20170915 10:38:48.108" starttime="20170915 10:38:43.078"></status>
</kw>
<kw name="Log XtremWeb Process Log File" library="XWServer">
<kw name="Log File" library="OperatingSystem">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<msg timestamp="20170915 10:38:48.109" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170915 10:38:48.109" level="INFO">Fri Sep 15 10:38:43 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : checking launch url
Fri Sep 15 10:38:43 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] WARNING : no launcher URL defined
Fri Sep 15 10:38:43 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : launching SmartSockets hub
[15/Sep/2017:10:38:45 +0000] [main_1] ERROR : setRole : role redefined ?! (was SERVER)
[15/Sep/2017:10:38:45 +0000] [xtremweb.database.DBConnPoolThread_main_1] INFO : Connection to database jdbc:mysql://localhost/xtremweb is ok, 70 created
[15/Sep/2017:10:38:45 +0000] [xtremweb.dispatcher.DBInterface_main_1] WARN : Can't retrieve any app
[15/Sep/2017:10:38:45 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't create ProxyValidator
[15/Sep/2017:10:38:45 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.io.FileNotFoundException: /tmp/castore (No such file or directory) (/tmp/castore (No such file or directory))
[15/Sep/2017:10:38:45 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't add CA certificates to keystore
[15/Sep/2017:10:38:45 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.lang.NullPointerException (null)
[15/Sep/2017:10:38:46 +0000] [xtremweb.dispatcher.HashTaskSet_TaskSet_14] INFO : TaskSet started (300000)
[15/Sep/2017:10:38:47 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : still waiting task set...
[15/Sep/2017:10:38:47 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : UDP server not started
[15/Sep/2017:10:38:47 +0000] [xtremweb.communications.TCPServer_TCPServerNIO_15] INFO : started, listening on port : 4321
log4j:WARN No appenders could be found for logger (org.eclipse.jetty.util.log).
log4j:WARN Please initialize the log4j system properly.
log4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.
[15/Sep/2017:10:38:47 +0000] [xtremweb.communications.HTTPServer_main_1] INFO : started, listening on port : 9443
[15/Sep/2017:10:38:47 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : FACEBOOK : java.net.MalformedURLException: no protocol: 
[15/Sep/2017:10:38:47 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : GOOGLE : java.net.MalformedURLException: no protocol: 
[15/Sep/2017:10:38:47 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : TWITTER : java.net.MalformedURLException: no protocol: 
[15/Sep/2017:10:38:47 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : YAHOO : java.net.MalformedURLException: no protocol: 
[15/Sep/2017:10:38:47 +0000] [main_1] ERROR : Can't add new entry to keystore
[15/Sep/2017:10:38:47 +0000] [main_1] WARN : javax.net.ssl.SSLHandshakeException: sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target (sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target)
[15/Sep/2017:10:38:47 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : XWHEP Dispatcher(10.6.0-head) started [Fri Sep 15 10:38:47 UTC 2017]
[15/Sep/2017:10:38:47 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : DB vendor  = mysql
[15/Sep/2017:10:38:47 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : mileStone  = 
[15/Sep/2017:10:38:47 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Time out   = 15000
[15/Sep/2017:10:38:47 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Disk opt'd = true
[15/Sep/2017:10:38:47 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Net  opt'd = true
[15/Sep/2017:10:38:47 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : NIO        = true
XWHEP Dispatcher started  Fri Sep 15 10:38:47 UTC 2017
Name             : vagrant-ubuntu-trusty-64
Version          : 10.6.0-head
Identity         : 
XWRole           : SERVER
Started on       : Fri Sep 15 10:38:45 UTC 2017
Scheduler        : xtremweb.dispatcher.MatchingScheduler
SmartSockets hub : 172.28.128.3/172.17.0.1/10.0.2.15-4329#7e.5d.f4.3a.cd.7c.00.00.2c.5b.02.42.02.6c.0f.e2~vagrant
Server HTTP      : true
Alive            : 300
Alive time out   : 900
Polling time out : 15000
Optimize zip     : true
Optimize network : true
NIO              : true
Comm layer       : xtremweb.communications.TCPClient
Socket time out  : 60000
Socket retries   : 50
Max connections  : 200
TCP port         : 4321
UDP port         : 4323
HTPP  port       : 80
HTPPS port       : 9443
Sun RPC interposition port : 4328
Sandbox path : /usr/bin/lxc
Sandbox launch args : 
Host &lt;host&gt;&lt;uid&gt;0a30143d-3795-48f0-aefc-79586ba4d418&lt;/uid&gt;&lt;accessrights&gt;0x755&lt;/accessrights&gt;&lt;name&gt;vagrant-ubuntu-trusty-64&lt;/name&gt;&lt;cpuload&gt;50&lt;/cpuload&gt;&lt;natedipaddr&gt;10.0.2.15&lt;/natedipaddr&gt;&lt;ipaddr&gt;10.0.2.15&lt;/ipaddr&gt;&lt;hwaddr&gt;&lt;/hwaddr&gt;&lt;timezone&gt;Etc/UTC&lt;/timezone&gt;&lt;os&gt;LINUX&lt;/os&gt;&lt;osversion&gt;3.13.0-129-generic&lt;/osversion&gt;&lt;javaversion&gt;1.8.0_141&lt;/javaversion&gt;&lt;javadatamodel&gt;64&lt;/javadatamodel&gt;&lt;cputype&gt;AMD64&lt;/cputype&gt;&lt;cpunb&gt;1&lt;/cpunb&gt;&lt;cpumodel&gt;unknown&lt;/cpumodel&gt;&lt;cpuspeed&gt;0&lt;/cpuspeed&gt;&lt;totalmem&gt;0&lt;/totalmem&gt;&lt;totalswap&gt;0&lt;/totalswap&gt;&lt;totaltmp&gt;40284&lt;/totaltmp&gt;&lt;freetmp&gt;37249&lt;/freetmp&gt;&lt;project&gt;&lt;/project&gt;&lt;active&gt;true&lt;/active&gt;&lt;incomingconnections&gt;false&lt;/incomingconnections&gt;&lt;available&gt;false&lt;/available&gt;&lt;pilotjob&gt;false&lt;/pilotjob&gt;&lt;sgid&gt;&lt;/sgid&gt;&lt;timeout&gt;15000&lt;/timeout&gt;&lt;traces&gt;false&lt;/traces&gt;&lt;acceptbin&gt;false&lt;/acceptbin&gt;&lt;version&gt;10.6.0-head&lt;/version&gt;&lt;/host&gt;
[15/Sep/2017:10:38:47 +0000] [xtremweb.communications.HTTPServer_HTTPServer_218] INFO : started, listening on port : 9443
</msg>
<status status="PASS" endtime="20170915 10:38:48.109" starttime="20170915 10:38:48.108"></status>
</kw>
<status status="PASS" endtime="20170915 10:38:48.109" starttime="20170915 10:38:48.108"></status>
</kw>
<status status="PASS" endtime="20170915 10:38:48.110" starttime="20170915 10:38:43.054"></status>
</kw>
<kw name="Start XtremWeb Worker" library="XWWorker">
<arguments>
<arg>${DIST_XWHEP_PATH}</arg>
</arguments>
<kw name="File Should Exist" library="OperatingSystem">
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xtremweb.worker.conf</arg>
</arguments>
<msg timestamp="20170915 10:38:48.111" html="yes" level="INFO">File '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf&lt;/a&gt;' exists.</msg>
<status status="PASS" endtime="20170915 10:38:48.111" starttime="20170915 10:38:48.110"></status>
</kw>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xtremweb.worker.conf</arg>
</arguments>
<assign>
<var>${config_content}</var>
</assign>
<msg timestamp="20170915 10:38:48.111" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf&lt;/a&gt;'.</msg>
<msg timestamp="20170915 10:38:48.112" level="INFO">${config_content} = #
# Copyrights     : CNRS
# Author         : Oleg Lodygensky
# Acknowledgment : XtremWeb-HEP is based on XtremWeb 1.8.0 by inria : http://www.xtremweb.net/
# Web            : http://www.xtremweb-hep.o...</msg>
<status status="PASS" endtime="20170915 10:38:48.112" starttime="20170915 10:38:48.111"></status>
</kw>
<kw name="Remove String Using Regexp" library="String">
<doc>Removes ``patterns`` from the given ``string``.</doc>
<arguments>
<arg>${config_content}</arg>
<arg>LAUNCHERURL=${XWCONFIGURE.VALUES.XWUPGRADEURL}</arg>
</arguments>
<assign>
<var>${config_content_filtered}</var>
</assign>
<msg timestamp="20170915 10:38:48.113" level="INFO">${config_content_filtered} = #
# Copyrights     : CNRS
# Author         : Oleg Lodygensky
# Acknowledgment : XtremWeb-HEP is based on XtremWeb 1.8.0 by inria : http://www.xtremweb.net/
# Web            : http://www.xtremweb-hep.o...</msg>
<status status="PASS" endtime="20170915 10:38:48.113" starttime="20170915 10:38:48.112"></status>
</kw>
<kw name="Create File" library="OperatingSystem">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xtremweb.worker.conf</arg>
<arg>content=${config_content_filtered}</arg>
</arguments>
<msg timestamp="20170915 10:38:48.115" html="yes" level="INFO">Created file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170915 10:38:48.116" starttime="20170915 10:38:48.113"></status>
</kw>
<kw name="Remove File" library="OperatingSystem">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.worker.process.log</arg>
</arguments>
<msg timestamp="20170915 10:38:48.117" html="yes" level="INFO">Removed file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.worker.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.worker.process.log&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170915 10:38:48.117" starttime="20170915 10:38:48.116"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/bin/xtremweb.worker console</arg>
<arg>shell=yes</arg>
<arg>stderr=STDOUT</arg>
<arg>stdout=${DIST_XWHEP_PATH}/xwhep.worker.process.log</arg>
</arguments>
<assign>
<var>${created_process}</var>
</assign>
<msg timestamp="20170915 10:38:48.118" level="INFO">Starting process:
/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/xtremweb.worker console</msg>
<msg timestamp="20170915 10:38:48.122" level="INFO">${created_process} = 64</msg>
<status status="PASS" endtime="20170915 10:38:48.122" starttime="20170915 10:38:48.117"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${WORKER_PROCESS}</arg>
<arg>${created_process}</arg>
</arguments>
<msg timestamp="20170915 10:38:48.124" level="INFO">${WORKER_PROCESS} = 64</msg>
<status status="PASS" endtime="20170915 10:38:48.124" starttime="20170915 10:38:48.123"></status>
</kw>
<kw name="Log File" library="OperatingSystem">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.worker.process.log</arg>
</arguments>
<msg timestamp="20170915 10:38:48.126" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.worker.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.worker.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170915 10:38:48.126" level="INFO"></msg>
<status status="PASS" endtime="20170915 10:38:48.127" starttime="20170915 10:38:48.125"></status>
</kw>
<status status="PASS" endtime="20170915 10:38:48.127" starttime="20170915 10:38:48.110"></status>
</kw>
<status status="PASS" endtime="20170915 10:38:48.127" starttime="20170915 10:38:42.973"></status>
</kw>
<status status="PASS" endtime="20170915 10:38:48.127" starttime="20170915 10:38:42.646"></status>
</kw>
<kw name="XWSENDDATACommand" library="XWClient">
<doc>Usage : SENDDATA dataName [cpuType] [osName] [dataType] [accessRigths] [dataFile | dataURI | dataUID] : sends data and uploads data if dataFile provided</doc>
<arguments>
<arg>ls</arg>
<arg>DEPLOYABLE</arg>
<arg>LINUX</arg>
<arg>AMD64</arg>
<arg>/bin/ls</arg>
</arguments>
<assign>
<var>${uid}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd ${DIST_XWHEP_PATH}/bin &amp;&amp; ./xwsenddata ${dataName} ${osName} ${cpuType} ${dataType} ${dataFile-dataURI-dataUID}</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${cmd_result}</var>
</assign>
<msg timestamp="20170915 10:38:48.129" level="INFO">Starting process:
cd /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin &amp;&amp; ./xwsenddata ls DEPLOYABLE LINUX AMD64 /bin/ls</msg>
<msg timestamp="20170915 10:38:48.132" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170915 10:38:49.143" level="INFO">Process completed.</msg>
<msg timestamp="20170915 10:38:49.143" level="INFO">${cmd_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170915 10:38:49.143" starttime="20170915 10:38:48.128"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stderr}</arg>
</arguments>
<msg timestamp="20170915 10:38:49.144" level="INFO"></msg>
<status status="PASS" endtime="20170915 10:38:49.144" starttime="20170915 10:38:49.143"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
</arguments>
<msg timestamp="20170915 10:38:49.144" level="INFO">xw://vagrant-ubuntu-trusty-64/44b44d15-8645-4afa-a890-46a30b5320d9</msg>
<status status="PASS" endtime="20170915 10:38:49.144" starttime="20170915 10:38:49.144"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${cmd_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170915 10:38:49.145" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170915 10:38:49.145" starttime="20170915 10:38:49.144"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
<arg>-36</arg>
</arguments>
<assign>
<var>${uid}</var>
</assign>
<msg timestamp="20170915 10:38:49.145" level="INFO">${uid} = 44b44d15-8645-4afa-a890-46a30b5320d9</msg>
<status status="PASS" endtime="20170915 10:38:49.146" starttime="20170915 10:38:49.145"></status>
</kw>
<msg timestamp="20170915 10:38:49.146" level="INFO">${uid} = 44b44d15-8645-4afa-a890-46a30b5320d9</msg>
<status status="PASS" endtime="20170915 10:38:49.146" starttime="20170915 10:38:48.127"></status>
</kw>
<kw name="Count From Datas Where Uid" library="XWServer">
<arguments>
<arg>${uid}</arg>
<arg>1</arg>
</arguments>
<kw name="Count From Table Where Uid" library="MySql">
<arguments>
<arg>datas</arg>
<arg>${uid}</arg>
<arg>${countExpected}</arg>
</arguments>
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170915 10:38:49.148" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170915 10:38:49.149" starttime="20170915 10:38:49.147"></status>
</kw>
<status status="PASS" endtime="20170915 10:38:49.149" starttime="20170915 10:38:49.147"></status>
</kw>
<kw name="Row Count Is Equal To X" library="DatabaseLibrary">
<doc>Check if the number of rows returned from `selectStatement` is equal to the value submitted. If not, then this</doc>
<arguments>
<arg>SELECT * FROM ${table} WHERE uid = '${uid}'</arg>
<arg>${countExpected}</arg>
</arguments>
<msg timestamp="20170915 10:38:49.149" level="INFO">Executing : Row Count Is Equal To X  |  SELECT * FROM datas WHERE uid = '44b44d15-8645-4afa-a890-46a30b5320d9'  |  1 </msg>
<msg timestamp="20170915 10:38:49.149" level="INFO">Executing : Row Count  |  SELECT * FROM datas WHERE uid = '44b44d15-8645-4afa-a890-46a30b5320d9' </msg>
<status status="PASS" endtime="20170915 10:38:49.150" starttime="20170915 10:38:49.149"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170915 10:38:49.151" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170915 10:38:49.151" starttime="20170915 10:38:49.151"></status>
</kw>
<status status="PASS" endtime="20170915 10:38:49.151" starttime="20170915 10:38:49.150"></status>
</kw>
<status status="PASS" endtime="20170915 10:38:49.151" starttime="20170915 10:38:49.147"></status>
</kw>
<status status="PASS" endtime="20170915 10:38:49.151" starttime="20170915 10:38:49.146"></status>
</kw>
<kw type="teardown" name="End XWtremWeb Command Test" library="XWCommon">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Nothing to do</arg>
</arguments>
<msg timestamp="20170915 10:38:49.152" level="INFO">Nothing to do</msg>
<status status="PASS" endtime="20170915 10:38:49.152" starttime="20170915 10:38:49.152"></status>
</kw>
<status status="PASS" endtime="20170915 10:38:49.152" starttime="20170915 10:38:49.152"></status>
</kw>
<doc>Testing XWSenddata cmd</doc>
<tags>
<tag>CommandLine Tests</tag>
</tags>
<status status="PASS" endtime="20170915 10:38:49.153" critical="yes" starttime="20170915 10:38:42.646"></status>
</test>
<test id="s1-s6-t2" name="Test XWSendapp Command With LS Binary">
<kw type="setup" name="Begin XWtremWeb Command Test" library="XWCommon">
<kw name="Ping XWtremWeb Database" library="XWServer">
<kw name="Xtremweb Tables Must Exist" library="MySql">
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170915 10:38:49.156" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170915 10:38:49.157" starttime="20170915 10:38:49.156"></status>
</kw>
<status status="PASS" endtime="20170915 10:38:49.157" starttime="20170915 10:38:49.155"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>appTypes</arg>
</arguments>
<msg timestamp="20170915 10:38:49.157" level="INFO">Executing : Table Must Exist  |  appTypes </msg>
<msg timestamp="20170915 10:38:49.157" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='appTypes' </msg>
<status status="PASS" endtime="20170915 10:38:49.158" starttime="20170915 10:38:49.157"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps</arg>
</arguments>
<msg timestamp="20170915 10:38:49.158" level="INFO">Executing : Table Must Exist  |  apps </msg>
<msg timestamp="20170915 10:38:49.158" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='apps' </msg>
<status status="PASS" endtime="20170915 10:38:49.159" starttime="20170915 10:38:49.158"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps_history</arg>
</arguments>
<msg timestamp="20170915 10:38:49.160" level="INFO">Executing : Table Must Exist  |  apps_history </msg>
<msg timestamp="20170915 10:38:49.160" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='apps_history' </msg>
<status status="PASS" endtime="20170915 10:38:49.160" starttime="20170915 10:38:49.159"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>cpuTypes</arg>
</arguments>
<msg timestamp="20170915 10:38:49.161" level="INFO">Executing : Table Must Exist  |  cpuTypes </msg>
<msg timestamp="20170915 10:38:49.161" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='cpuTypes' </msg>
<status status="PASS" endtime="20170915 10:38:49.161" starttime="20170915 10:38:49.160"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>dataTypes</arg>
</arguments>
<msg timestamp="20170915 10:38:49.161" level="INFO">Executing : Table Must Exist  |  dataTypes </msg>
<msg timestamp="20170915 10:38:49.161" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='dataTypes' </msg>
<status status="PASS" endtime="20170915 10:38:49.162" starttime="20170915 10:38:49.161"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas</arg>
</arguments>
<msg timestamp="20170915 10:38:49.162" level="INFO">Executing : Table Must Exist  |  datas </msg>
<msg timestamp="20170915 10:38:49.162" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='datas' </msg>
<status status="PASS" endtime="20170915 10:38:49.163" starttime="20170915 10:38:49.162"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas_history</arg>
</arguments>
<msg timestamp="20170915 10:38:49.163" level="INFO">Executing : Table Must Exist  |  datas_history </msg>
<msg timestamp="20170915 10:38:49.163" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='datas_history' </msg>
<status status="PASS" endtime="20170915 10:38:49.164" starttime="20170915 10:38:49.163"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables</arg>
</arguments>
<msg timestamp="20170915 10:38:49.164" level="INFO">Executing : Table Must Exist  |  executables </msg>
<msg timestamp="20170915 10:38:49.164" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='executables' </msg>
<status status="PASS" endtime="20170915 10:38:49.165" starttime="20170915 10:38:49.164"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables_history</arg>
</arguments>
<msg timestamp="20170915 10:38:49.165" level="INFO">Executing : Table Must Exist  |  executables_history </msg>
<msg timestamp="20170915 10:38:49.165" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='executables_history' </msg>
<status status="PASS" endtime="20170915 10:38:49.166" starttime="20170915 10:38:49.165"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups</arg>
</arguments>
<msg timestamp="20170915 10:38:49.166" level="INFO">Executing : Table Must Exist  |  groups </msg>
<msg timestamp="20170915 10:38:49.166" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='groups' </msg>
<status status="PASS" endtime="20170915 10:38:49.167" starttime="20170915 10:38:49.166"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups_history</arg>
</arguments>
<msg timestamp="20170915 10:38:49.167" level="INFO">Executing : Table Must Exist  |  groups_history </msg>
<msg timestamp="20170915 10:38:49.167" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='groups_history' </msg>
<status status="PASS" endtime="20170915 10:38:49.168" starttime="20170915 10:38:49.167"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts</arg>
</arguments>
<msg timestamp="20170915 10:38:49.168" level="INFO">Executing : Table Must Exist  |  hosts </msg>
<msg timestamp="20170915 10:38:49.168" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='hosts' </msg>
<status status="PASS" endtime="20170915 10:38:49.169" starttime="20170915 10:38:49.168"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts_history</arg>
</arguments>
<msg timestamp="20170915 10:38:49.169" level="INFO">Executing : Table Must Exist  |  hosts_history </msg>
<msg timestamp="20170915 10:38:49.169" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='hosts_history' </msg>
<status status="PASS" endtime="20170915 10:38:49.170" starttime="20170915 10:38:49.169"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships</arg>
</arguments>
<msg timestamp="20170915 10:38:49.170" level="INFO">Executing : Table Must Exist  |  memberships </msg>
<msg timestamp="20170915 10:38:49.170" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='memberships' </msg>
<status status="PASS" endtime="20170915 10:38:49.171" starttime="20170915 10:38:49.170"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships_history</arg>
</arguments>
<msg timestamp="20170915 10:38:49.171" level="INFO">Executing : Table Must Exist  |  memberships_history </msg>
<msg timestamp="20170915 10:38:49.171" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='memberships_history' </msg>
<status status="PASS" endtime="20170915 10:38:49.172" starttime="20170915 10:38:49.171"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>oses</arg>
</arguments>
<msg timestamp="20170915 10:38:49.172" level="INFO">Executing : Table Must Exist  |  oses </msg>
<msg timestamp="20170915 10:38:49.172" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='oses' </msg>
<status status="PASS" endtime="20170915 10:38:49.173" starttime="20170915 10:38:49.172"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>packageTypes</arg>
</arguments>
<msg timestamp="20170915 10:38:49.173" level="INFO">Executing : Table Must Exist  |  packageTypes </msg>
<msg timestamp="20170915 10:38:49.173" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='packageTypes' </msg>
<status status="PASS" endtime="20170915 10:38:49.174" starttime="20170915 10:38:49.173"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions</arg>
</arguments>
<msg timestamp="20170915 10:38:49.174" level="INFO">Executing : Table Must Exist  |  sessions </msg>
<msg timestamp="20170915 10:38:49.174" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sessions' </msg>
<status status="PASS" endtime="20170915 10:38:49.175" starttime="20170915 10:38:49.174"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions_history</arg>
</arguments>
<msg timestamp="20170915 10:38:49.175" level="INFO">Executing : Table Must Exist  |  sessions_history </msg>
<msg timestamp="20170915 10:38:49.175" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sessions_history' </msg>
<status status="PASS" endtime="20170915 10:38:49.176" starttime="20170915 10:38:49.175"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes</arg>
</arguments>
<msg timestamp="20170915 10:38:49.176" level="INFO">Executing : Table Must Exist  |  sharedAppTypes </msg>
<msg timestamp="20170915 10:38:49.176" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedAppTypes' </msg>
<status status="PASS" endtime="20170915 10:38:49.177" starttime="20170915 10:38:49.176"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes_history</arg>
</arguments>
<msg timestamp="20170915 10:38:49.177" level="INFO">Executing : Table Must Exist  |  sharedAppTypes_history </msg>
<msg timestamp="20170915 10:38:49.177" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedAppTypes_history' </msg>
<status status="PASS" endtime="20170915 10:38:49.178" starttime="20170915 10:38:49.177"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes</arg>
</arguments>
<msg timestamp="20170915 10:38:49.178" level="INFO">Executing : Table Must Exist  |  sharedPackageTypes </msg>
<msg timestamp="20170915 10:38:49.178" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedPackageTypes' </msg>
<status status="PASS" endtime="20170915 10:38:49.179" starttime="20170915 10:38:49.178"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes_history</arg>
</arguments>
<msg timestamp="20170915 10:38:49.179" level="INFO">Executing : Table Must Exist  |  sharedPackageTypes_history </msg>
<msg timestamp="20170915 10:38:49.179" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedPackageTypes_history' </msg>
<status status="PASS" endtime="20170915 10:38:49.180" starttime="20170915 10:38:49.179"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>statuses</arg>
</arguments>
<msg timestamp="20170915 10:38:49.180" level="INFO">Executing : Table Must Exist  |  statuses </msg>
<msg timestamp="20170915 10:38:49.180" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='statuses' </msg>
<status status="PASS" endtime="20170915 10:38:49.181" starttime="20170915 10:38:49.180"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks</arg>
</arguments>
<msg timestamp="20170915 10:38:49.181" level="INFO">Executing : Table Must Exist  |  tasks </msg>
<msg timestamp="20170915 10:38:49.181" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='tasks' </msg>
<status status="PASS" endtime="20170915 10:38:49.181" starttime="20170915 10:38:49.181"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks_history</arg>
</arguments>
<msg timestamp="20170915 10:38:49.181" level="INFO">Executing : Table Must Exist  |  tasks_history </msg>
<msg timestamp="20170915 10:38:49.181" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='tasks_history' </msg>
<status status="PASS" endtime="20170915 10:38:49.183" starttime="20170915 10:38:49.181"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces</arg>
</arguments>
<msg timestamp="20170915 10:38:49.183" level="INFO">Executing : Table Must Exist  |  traces </msg>
<msg timestamp="20170915 10:38:49.183" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='traces' </msg>
<status status="PASS" endtime="20170915 10:38:49.184" starttime="20170915 10:38:49.183"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces_history</arg>
</arguments>
<msg timestamp="20170915 10:38:49.184" level="INFO">Executing : Table Must Exist  |  traces_history </msg>
<msg timestamp="20170915 10:38:49.184" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='traces_history' </msg>
<status status="PASS" endtime="20170915 10:38:49.185" starttime="20170915 10:38:49.184"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>userRights</arg>
</arguments>
<msg timestamp="20170915 10:38:49.185" level="INFO">Executing : Table Must Exist  |  userRights </msg>
<msg timestamp="20170915 10:38:49.185" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='userRights' </msg>
<status status="PASS" endtime="20170915 10:38:49.186" starttime="20170915 10:38:49.185"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups</arg>
</arguments>
<msg timestamp="20170915 10:38:49.186" level="INFO">Executing : Table Must Exist  |  usergroups </msg>
<msg timestamp="20170915 10:38:49.186" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='usergroups' </msg>
<status status="PASS" endtime="20170915 10:38:49.187" starttime="20170915 10:38:49.186"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups_history</arg>
</arguments>
<msg timestamp="20170915 10:38:49.187" level="INFO">Executing : Table Must Exist  |  usergroups_history </msg>
<msg timestamp="20170915 10:38:49.187" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='usergroups_history' </msg>
<status status="PASS" endtime="20170915 10:38:49.187" starttime="20170915 10:38:49.187"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users</arg>
</arguments>
<msg timestamp="20170915 10:38:49.188" level="INFO">Executing : Table Must Exist  |  users </msg>
<msg timestamp="20170915 10:38:49.188" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='users' </msg>
<status status="PASS" endtime="20170915 10:38:49.188" starttime="20170915 10:38:49.188"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users_history</arg>
</arguments>
<msg timestamp="20170915 10:38:49.189" level="INFO">Executing : Table Must Exist  |  users_history </msg>
<msg timestamp="20170915 10:38:49.189" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='users_history' </msg>
<status status="PASS" endtime="20170915 10:38:49.190" starttime="20170915 10:38:49.189"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>version</arg>
</arguments>
<msg timestamp="20170915 10:38:49.190" level="INFO">Executing : Table Must Exist  |  version </msg>
<msg timestamp="20170915 10:38:49.190" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='version' </msg>
<status status="PASS" endtime="20170915 10:38:49.191" starttime="20170915 10:38:49.190"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>versions</arg>
</arguments>
<msg timestamp="20170915 10:38:49.191" level="INFO">Executing : Table Must Exist  |  versions </msg>
<msg timestamp="20170915 10:38:49.191" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='versions' </msg>
<status status="PASS" endtime="20170915 10:38:49.192" starttime="20170915 10:38:49.191"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps</arg>
</arguments>
<msg timestamp="20170915 10:38:49.192" level="INFO">Executing : Table Must Exist  |  view_apps </msg>
<msg timestamp="20170915 10:38:49.192" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps' </msg>
<status status="PASS" endtime="20170915 10:38:49.193" starttime="20170915 10:38:49.192"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps_for_offering</arg>
</arguments>
<msg timestamp="20170915 10:38:49.193" level="INFO">Executing : Table Must Exist  |  view_apps_for_offering </msg>
<msg timestamp="20170915 10:38:49.193" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps_for_offering' </msg>
<status status="PASS" endtime="20170915 10:38:49.194" starttime="20170915 10:38:49.193"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps_for_offering_with_file_sizes</arg>
</arguments>
<msg timestamp="20170915 10:38:49.194" level="INFO">Executing : Table Must Exist  |  view_apps_for_offering_with_file_sizes </msg>
<msg timestamp="20170915 10:38:49.194" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps_for_offering_with_file_sizes' </msg>
<status status="PASS" endtime="20170915 10:38:49.195" starttime="20170915 10:38:49.194"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_datas</arg>
</arguments>
<msg timestamp="20170915 10:38:49.195" level="INFO">Executing : Table Must Exist  |  view_datas </msg>
<msg timestamp="20170915 10:38:49.195" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_datas' </msg>
<status status="PASS" endtime="20170915 10:38:49.196" starttime="20170915 10:38:49.195"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_executables</arg>
</arguments>
<msg timestamp="20170915 10:38:49.196" level="INFO">Executing : Table Must Exist  |  view_executables </msg>
<msg timestamp="20170915 10:38:49.196" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_executables' </msg>
<status status="PASS" endtime="20170915 10:38:49.197" starttime="20170915 10:38:49.196"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_groups</arg>
</arguments>
<msg timestamp="20170915 10:38:49.197" level="INFO">Executing : Table Must Exist  |  view_groups </msg>
<msg timestamp="20170915 10:38:49.197" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_groups' </msg>
<status status="PASS" endtime="20170915 10:38:49.198" starttime="20170915 10:38:49.197"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts</arg>
</arguments>
<msg timestamp="20170915 10:38:49.198" level="INFO">Executing : Table Must Exist  |  view_hosts </msg>
<msg timestamp="20170915 10:38:49.198" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts' </msg>
<status status="PASS" endtime="20170915 10:38:49.199" starttime="20170915 10:38:49.198"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_deployable</arg>
</arguments>
<msg timestamp="20170915 10:38:49.199" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_deployable </msg>
<msg timestamp="20170915 10:38:49.199" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_deployable' </msg>
<status status="PASS" endtime="20170915 10:38:49.200" starttime="20170915 10:38:49.199"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_deployable_and_shared</arg>
</arguments>
<msg timestamp="20170915 10:38:49.200" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_deployable_and_shared </msg>
<msg timestamp="20170915 10:38:49.200" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_deployable_and_shared' </msg>
<status status="PASS" endtime="20170915 10:38:49.201" starttime="20170915 10:38:49.200"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_shared</arg>
</arguments>
<msg timestamp="20170915 10:38:49.201" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_shared </msg>
<msg timestamp="20170915 10:38:49.201" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_shared' </msg>
<status status="PASS" endtime="20170915 10:38:49.202" starttime="20170915 10:38:49.201"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_sessions</arg>
</arguments>
<msg timestamp="20170915 10:38:49.202" level="INFO">Executing : Table Must Exist  |  view_sessions </msg>
<msg timestamp="20170915 10:38:49.202" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_sessions' </msg>
<status status="PASS" endtime="20170915 10:38:49.203" starttime="20170915 10:38:49.202"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_tasks</arg>
</arguments>
<msg timestamp="20170915 10:38:49.203" level="INFO">Executing : Table Must Exist  |  view_tasks </msg>
<msg timestamp="20170915 10:38:49.203" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_tasks' </msg>
<status status="PASS" endtime="20170915 10:38:49.204" starttime="20170915 10:38:49.203"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_traces</arg>
</arguments>
<msg timestamp="20170915 10:38:49.204" level="INFO">Executing : Table Must Exist  |  view_traces </msg>
<msg timestamp="20170915 10:38:49.204" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_traces' </msg>
<status status="PASS" endtime="20170915 10:38:49.205" starttime="20170915 10:38:49.204"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_usergroups</arg>
</arguments>
<msg timestamp="20170915 10:38:49.205" level="INFO">Executing : Table Must Exist  |  view_usergroups </msg>
<msg timestamp="20170915 10:38:49.205" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_usergroups' </msg>
<status status="PASS" endtime="20170915 10:38:49.206" starttime="20170915 10:38:49.205"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users</arg>
</arguments>
<msg timestamp="20170915 10:38:49.206" level="INFO">Executing : Table Must Exist  |  view_users </msg>
<msg timestamp="20170915 10:38:49.206" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users' </msg>
<status status="PASS" endtime="20170915 10:38:49.207" starttime="20170915 10:38:49.206"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_apps</arg>
</arguments>
<msg timestamp="20170915 10:38:49.207" level="INFO">Executing : Table Must Exist  |  view_users_apps </msg>
<msg timestamp="20170915 10:38:49.207" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_apps' </msg>
<status status="PASS" endtime="20170915 10:38:49.208" starttime="20170915 10:38:49.207"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_datas</arg>
</arguments>
<msg timestamp="20170915 10:38:49.208" level="INFO">Executing : Table Must Exist  |  view_users_datas </msg>
<msg timestamp="20170915 10:38:49.208" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_datas' </msg>
<status status="PASS" endtime="20170915 10:38:49.209" starttime="20170915 10:38:49.208"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_groups</arg>
</arguments>
<msg timestamp="20170915 10:38:49.209" level="INFO">Executing : Table Must Exist  |  view_users_groups </msg>
<msg timestamp="20170915 10:38:49.209" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_groups' </msg>
<status status="PASS" endtime="20170915 10:38:49.210" starttime="20170915 10:38:49.209"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_hosts</arg>
</arguments>
<msg timestamp="20170915 10:38:49.210" level="INFO">Executing : Table Must Exist  |  view_users_hosts </msg>
<msg timestamp="20170915 10:38:49.210" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_hosts' </msg>
<status status="PASS" endtime="20170915 10:38:49.211" starttime="20170915 10:38:49.210"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_sessions</arg>
</arguments>
<msg timestamp="20170915 10:38:49.211" level="INFO">Executing : Table Must Exist  |  view_users_sessions </msg>
<msg timestamp="20170915 10:38:49.211" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_sessions' </msg>
<status status="PASS" endtime="20170915 10:38:49.212" starttime="20170915 10:38:49.211"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_tasks</arg>
</arguments>
<msg timestamp="20170915 10:38:49.212" level="INFO">Executing : Table Must Exist  |  view_users_tasks </msg>
<msg timestamp="20170915 10:38:49.212" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_tasks' </msg>
<status status="PASS" endtime="20170915 10:38:49.213" starttime="20170915 10:38:49.212"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_traces</arg>
</arguments>
<msg timestamp="20170915 10:38:49.213" level="INFO">Executing : Table Must Exist  |  view_users_traces </msg>
<msg timestamp="20170915 10:38:49.213" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_traces' </msg>
<status status="PASS" endtime="20170915 10:38:49.214" starttime="20170915 10:38:49.213"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_usergroups</arg>
</arguments>
<msg timestamp="20170915 10:38:49.214" level="INFO">Executing : Table Must Exist  |  view_users_usergroups </msg>
<msg timestamp="20170915 10:38:49.214" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_usergroups' </msg>
<status status="PASS" endtime="20170915 10:38:49.215" starttime="20170915 10:38:49.214"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_users</arg>
</arguments>
<msg timestamp="20170915 10:38:49.215" level="INFO">Executing : Table Must Exist  |  view_users_users </msg>
<msg timestamp="20170915 10:38:49.215" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_users' </msg>
<status status="PASS" endtime="20170915 10:38:49.216" starttime="20170915 10:38:49.215"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_works</arg>
</arguments>
<msg timestamp="20170915 10:38:49.216" level="INFO">Executing : Table Must Exist  |  view_users_works </msg>
<msg timestamp="20170915 10:38:49.216" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_works' </msg>
<status status="PASS" endtime="20170915 10:38:49.218" starttime="20170915 10:38:49.216"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works</arg>
</arguments>
<msg timestamp="20170915 10:38:49.218" level="INFO">Executing : Table Must Exist  |  view_works </msg>
<msg timestamp="20170915 10:38:49.218" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works' </msg>
<status status="PASS" endtime="20170915 10:38:49.219" starttime="20170915 10:38:49.218"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works_for_billing</arg>
</arguments>
<msg timestamp="20170915 10:38:49.219" level="INFO">Executing : Table Must Exist  |  view_works_for_billing </msg>
<msg timestamp="20170915 10:38:49.219" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works_for_billing' </msg>
<status status="PASS" endtime="20170915 10:38:49.220" starttime="20170915 10:38:49.219"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works_for_billing_with_file_sizes</arg>
</arguments>
<msg timestamp="20170915 10:38:49.220" level="INFO">Executing : Table Must Exist  |  view_works_for_billing_with_file_sizes </msg>
<msg timestamp="20170915 10:38:49.220" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works_for_billing_with_file_sizes' </msg>
<status status="PASS" endtime="20170915 10:38:49.221" starttime="20170915 10:38:49.220"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works</arg>
</arguments>
<msg timestamp="20170915 10:38:49.221" level="INFO">Executing : Table Must Exist  |  works </msg>
<msg timestamp="20170915 10:38:49.221" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='works' </msg>
<status status="PASS" endtime="20170915 10:38:49.222" starttime="20170915 10:38:49.221"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works_history</arg>
</arguments>
<msg timestamp="20170915 10:38:49.222" level="INFO">Executing : Table Must Exist  |  works_history </msg>
<msg timestamp="20170915 10:38:49.222" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='works_history' </msg>
<status status="PASS" endtime="20170915 10:38:49.223" starttime="20170915 10:38:49.222"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170915 10:38:49.224" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170915 10:38:49.224" starttime="20170915 10:38:49.223"></status>
</kw>
<status status="PASS" endtime="20170915 10:38:49.224" starttime="20170915 10:38:49.223"></status>
</kw>
<status status="PASS" endtime="20170915 10:38:49.224" starttime="20170915 10:38:49.155"></status>
</kw>
<status status="PASS" endtime="20170915 10:38:49.224" starttime="20170915 10:38:49.155"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>TODO ping XWtremWeb server up</arg>
</arguments>
<msg timestamp="20170915 10:38:49.224" level="INFO">TODO ping XWtremWeb server up</msg>
<status status="PASS" endtime="20170915 10:38:49.224" starttime="20170915 10:38:49.224"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>TODO ping XWtremWeb worker up before one test</arg>
</arguments>
<msg timestamp="20170915 10:38:49.225" level="INFO">TODO ping XWtremWeb worker up before one test</msg>
<status status="PASS" endtime="20170915 10:38:49.225" starttime="20170915 10:38:49.224"></status>
</kw>
<kw name="Delete Fonctionnal Xtremweb Tables" library="MySql">
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170915 10:38:49.226" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170915 10:38:49.227" starttime="20170915 10:38:49.226"></status>
</kw>
<status status="PASS" endtime="20170915 10:38:49.227" starttime="20170915 10:38:49.225"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps</arg>
</arguments>
<msg timestamp="20170915 10:38:49.228" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM apps; </msg>
<status status="PASS" endtime="20170915 10:38:49.228" starttime="20170915 10:38:49.227"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps_history</arg>
</arguments>
<msg timestamp="20170915 10:38:49.228" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM apps_history; </msg>
<status status="PASS" endtime="20170915 10:38:49.229" starttime="20170915 10:38:49.228"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas</arg>
</arguments>
<msg timestamp="20170915 10:38:49.229" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM datas; </msg>
<status status="PASS" endtime="20170915 10:38:49.230" starttime="20170915 10:38:49.229"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas_history</arg>
</arguments>
<msg timestamp="20170915 10:38:49.231" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM datas_history; </msg>
<status status="PASS" endtime="20170915 10:38:49.231" starttime="20170915 10:38:49.230"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables</arg>
</arguments>
<msg timestamp="20170915 10:38:49.231" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM executables; </msg>
<status status="PASS" endtime="20170915 10:38:49.231" starttime="20170915 10:38:49.231"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables_history</arg>
</arguments>
<msg timestamp="20170915 10:38:49.232" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM executables_history; </msg>
<status status="PASS" endtime="20170915 10:38:49.232" starttime="20170915 10:38:49.232"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups</arg>
</arguments>
<msg timestamp="20170915 10:38:49.232" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM groups; </msg>
<status status="PASS" endtime="20170915 10:38:49.233" starttime="20170915 10:38:49.232"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups_history</arg>
</arguments>
<msg timestamp="20170915 10:38:49.233" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM groups_history; </msg>
<status status="PASS" endtime="20170915 10:38:49.233" starttime="20170915 10:38:49.233"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts</arg>
</arguments>
<msg timestamp="20170915 10:38:49.233" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM hosts; </msg>
<status status="PASS" endtime="20170915 10:38:49.234" starttime="20170915 10:38:49.233"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts_history</arg>
</arguments>
<msg timestamp="20170915 10:38:49.234" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM hosts_history; </msg>
<status status="PASS" endtime="20170915 10:38:49.234" starttime="20170915 10:38:49.234"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships</arg>
</arguments>
<msg timestamp="20170915 10:38:49.235" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM memberships; </msg>
<status status="PASS" endtime="20170915 10:38:49.235" starttime="20170915 10:38:49.234"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships_history</arg>
</arguments>
<msg timestamp="20170915 10:38:49.235" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM memberships_history; </msg>
<status status="PASS" endtime="20170915 10:38:49.235" starttime="20170915 10:38:49.235"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions</arg>
</arguments>
<msg timestamp="20170915 10:38:49.236" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sessions; </msg>
<status status="PASS" endtime="20170915 10:38:49.236" starttime="20170915 10:38:49.235"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions_history</arg>
</arguments>
<msg timestamp="20170915 10:38:49.237" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sessions_history; </msg>
<status status="PASS" endtime="20170915 10:38:49.237" starttime="20170915 10:38:49.236"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes</arg>
</arguments>
<msg timestamp="20170915 10:38:49.237" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedAppTypes; </msg>
<status status="PASS" endtime="20170915 10:38:49.237" starttime="20170915 10:38:49.237"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes_history</arg>
</arguments>
<msg timestamp="20170915 10:38:49.238" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedAppTypes_history; </msg>
<status status="PASS" endtime="20170915 10:38:49.238" starttime="20170915 10:38:49.238"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes</arg>
</arguments>
<msg timestamp="20170915 10:38:49.238" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedPackageTypes; </msg>
<status status="PASS" endtime="20170915 10:38:49.238" starttime="20170915 10:38:49.238"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes_history</arg>
</arguments>
<msg timestamp="20170915 10:38:49.239" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedPackageTypes_history; </msg>
<status status="PASS" endtime="20170915 10:38:49.239" starttime="20170915 10:38:49.239"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks</arg>
</arguments>
<msg timestamp="20170915 10:38:49.239" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM tasks; </msg>
<status status="PASS" endtime="20170915 10:38:49.240" starttime="20170915 10:38:49.239"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks_history</arg>
</arguments>
<msg timestamp="20170915 10:38:49.240" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM tasks_history; </msg>
<status status="PASS" endtime="20170915 10:38:49.240" starttime="20170915 10:38:49.240"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces</arg>
</arguments>
<msg timestamp="20170915 10:38:49.240" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM traces; </msg>
<status status="PASS" endtime="20170915 10:38:49.241" starttime="20170915 10:38:49.240"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces_history</arg>
</arguments>
<msg timestamp="20170915 10:38:49.241" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM traces_history; </msg>
<status status="PASS" endtime="20170915 10:38:49.241" starttime="20170915 10:38:49.241"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups</arg>
</arguments>
<msg timestamp="20170915 10:38:49.241" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM usergroups; </msg>
<status status="PASS" endtime="20170915 10:38:49.242" starttime="20170915 10:38:49.241"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups_history</arg>
</arguments>
<msg timestamp="20170915 10:38:49.242" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM usergroups_history; </msg>
<status status="PASS" endtime="20170915 10:38:49.242" starttime="20170915 10:38:49.242"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users_history</arg>
</arguments>
<msg timestamp="20170915 10:38:49.243" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM users_history; </msg>
<status status="PASS" endtime="20170915 10:38:49.243" starttime="20170915 10:38:49.242"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works</arg>
</arguments>
<msg timestamp="20170915 10:38:49.243" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM works; </msg>
<status status="PASS" endtime="20170915 10:38:49.243" starttime="20170915 10:38:49.243"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works_history</arg>
</arguments>
<msg timestamp="20170915 10:38:49.244" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM works_history; </msg>
<status status="PASS" endtime="20170915 10:38:49.244" starttime="20170915 10:38:49.243"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170915 10:38:49.244" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170915 10:38:49.244" starttime="20170915 10:38:49.244"></status>
</kw>
<status status="PASS" endtime="20170915 10:38:49.245" starttime="20170915 10:38:49.244"></status>
</kw>
<status status="PASS" endtime="20170915 10:38:49.245" starttime="20170915 10:38:49.225"></status>
</kw>
<kw name="Stop XWtremWeb Server And XWtremWeb Worker" library="XWCommon">
<kw name="Stop XtremWeb Server" library="XWServer">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${SERVER_PROCESS}</arg>
</arguments>
<msg timestamp="20170915 10:38:49.245" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20170915 10:38:49.349" level="INFO">Process completed.</msg>
<status status="PASS" endtime="20170915 10:38:49.349" starttime="20170915 10:38:49.245"></status>
</kw>
<status status="PASS" endtime="20170915 10:38:49.349" starttime="20170915 10:38:49.245"></status>
</kw>
<kw name="Log XtremWeb Server" library="XWCommon">
<kw name="Log XtremWeb Process Log File" library="XWServer">
<kw name="Log File" library="OperatingSystem">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<msg timestamp="20170915 10:38:49.351" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170915 10:38:49.352" level="INFO">Fri Sep 15 10:38:43 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : checking launch url
Fri Sep 15 10:38:43 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] WARNING : no launcher URL defined
Fri Sep 15 10:38:43 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : launching SmartSockets hub
[15/Sep/2017:10:38:45 +0000] [main_1] ERROR : setRole : role redefined ?! (was SERVER)
[15/Sep/2017:10:38:45 +0000] [xtremweb.database.DBConnPoolThread_main_1] INFO : Connection to database jdbc:mysql://localhost/xtremweb is ok, 70 created
[15/Sep/2017:10:38:45 +0000] [xtremweb.dispatcher.DBInterface_main_1] WARN : Can't retrieve any app
[15/Sep/2017:10:38:45 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't create ProxyValidator
[15/Sep/2017:10:38:45 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.io.FileNotFoundException: /tmp/castore (No such file or directory) (/tmp/castore (No such file or directory))
[15/Sep/2017:10:38:45 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't add CA certificates to keystore
[15/Sep/2017:10:38:45 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.lang.NullPointerException (null)
[15/Sep/2017:10:38:46 +0000] [xtremweb.dispatcher.HashTaskSet_TaskSet_14] INFO : TaskSet started (300000)
[15/Sep/2017:10:38:47 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : still waiting task set...
[15/Sep/2017:10:38:47 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : UDP server not started
[15/Sep/2017:10:38:47 +0000] [xtremweb.communications.TCPServer_TCPServerNIO_15] INFO : started, listening on port : 4321
log4j:WARN No appenders could be found for logger (org.eclipse.jetty.util.log).
log4j:WARN Please initialize the log4j system properly.
log4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.
[15/Sep/2017:10:38:47 +0000] [xtremweb.communications.HTTPServer_main_1] INFO : started, listening on port : 9443
[15/Sep/2017:10:38:47 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : FACEBOOK : java.net.MalformedURLException: no protocol: 
[15/Sep/2017:10:38:47 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : GOOGLE : java.net.MalformedURLException: no protocol: 
[15/Sep/2017:10:38:47 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : TWITTER : java.net.MalformedURLException: no protocol: 
[15/Sep/2017:10:38:47 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : YAHOO : java.net.MalformedURLException: no protocol: 
[15/Sep/2017:10:38:47 +0000] [main_1] ERROR : Can't add new entry to keystore
[15/Sep/2017:10:38:47 +0000] [main_1] WARN : javax.net.ssl.SSLHandshakeException: sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target (sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target)
[15/Sep/2017:10:38:47 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : XWHEP Dispatcher(10.6.0-head) started [Fri Sep 15 10:38:47 UTC 2017]
[15/Sep/2017:10:38:47 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : DB vendor  = mysql
[15/Sep/2017:10:38:47 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : mileStone  = 
[15/Sep/2017:10:38:47 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Time out   = 15000
[15/Sep/2017:10:38:47 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Disk opt'd = true
[15/Sep/2017:10:38:47 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Net  opt'd = true
[15/Sep/2017:10:38:47 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : NIO        = true
XWHEP Dispatcher started  Fri Sep 15 10:38:47 UTC 2017
Name             : vagrant-ubuntu-trusty-64
Version          : 10.6.0-head
Identity         : 
XWRole           : SERVER
Started on       : Fri Sep 15 10:38:45 UTC 2017
Scheduler        : xtremweb.dispatcher.MatchingScheduler
SmartSockets hub : 172.28.128.3/172.17.0.1/10.0.2.15-4329#7e.5d.f4.3a.cd.7c.00.00.2c.5b.02.42.02.6c.0f.e2~vagrant
Server HTTP      : true
Alive            : 300
Alive time out   : 900
Polling time out : 15000
Optimize zip     : true
Optimize network : true
NIO              : true
Comm layer       : xtremweb.communications.TCPClient
Socket time out  : 60000
Socket retries   : 50
Max connections  : 200
TCP port         : 4321
UDP port         : 4323
HTPP  port       : 80
HTPPS port       : 9443
Sun RPC interposition port : 4328
Sandbox path : /usr/bin/lxc
Sandbox launch args : 
Host &lt;host&gt;&lt;uid&gt;0a30143d-3795-48f0-aefc-79586ba4d418&lt;/uid&gt;&lt;accessrights&gt;0x755&lt;/accessrights&gt;&lt;name&gt;vagrant-ubuntu-trusty-64&lt;/name&gt;&lt;cpuload&gt;50&lt;/cpuload&gt;&lt;natedipaddr&gt;10.0.2.15&lt;/natedipaddr&gt;&lt;ipaddr&gt;10.0.2.15&lt;/ipaddr&gt;&lt;hwaddr&gt;&lt;/hwaddr&gt;&lt;timezone&gt;Etc/UTC&lt;/timezone&gt;&lt;os&gt;LINUX&lt;/os&gt;&lt;osversion&gt;3.13.0-129-generic&lt;/osversion&gt;&lt;javaversion&gt;1.8.0_141&lt;/javaversion&gt;&lt;javadatamodel&gt;64&lt;/javadatamodel&gt;&lt;cputype&gt;AMD64&lt;/cputype&gt;&lt;cpunb&gt;1&lt;/cpunb&gt;&lt;cpumodel&gt;unknown&lt;/cpumodel&gt;&lt;cpuspeed&gt;0&lt;/cpuspeed&gt;&lt;totalmem&gt;0&lt;/totalmem&gt;&lt;totalswap&gt;0&lt;/totalswap&gt;&lt;totaltmp&gt;40284&lt;/totaltmp&gt;&lt;freetmp&gt;37249&lt;/freetmp&gt;&lt;project&gt;&lt;/project&gt;&lt;active&gt;true&lt;/active&gt;&lt;incomingconnections&gt;false&lt;/incomingconnections&gt;&lt;available&gt;false&lt;/available&gt;&lt;pilotjob&gt;false&lt;/pilotjob&gt;&lt;sgid&gt;&lt;/sgid&gt;&lt;timeout&gt;15000&lt;/timeout&gt;&lt;traces&gt;false&lt;/traces&gt;&lt;acceptbin&gt;false&lt;/acceptbin&gt;&lt;version&gt;10.6.0-head&lt;/version&gt;&lt;/host&gt;
[15/Sep/2017:10:38:47 +0000] [xtremweb.communications.HTTPServer_HTTPServer_218] INFO : started, listening on port : 9443
[15/Sep/2017:10:38:49 +0000] [xtremweb.common.StreamIO_TCPHandler_18] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[15/Sep/2017:10:38:49 +0000] [xtremweb.common.StreamIO_TCPHandler_17] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[15/Sep/2017:10:38:49 +0000] [xtremweb.communications.TCPServer_TCPServerNIO_15] WARN : java.net.SocketException: Socket closed (Socket closed)
</msg>
<status status="PASS" endtime="20170915 10:38:49.352" starttime="20170915 10:38:49.351"></status>
</kw>
<status status="PASS" endtime="20170915 10:38:49.353" starttime="20170915 10:38:49.350"></status>
</kw>
<status status="PASS" endtime="20170915 10:38:49.353" starttime="20170915 10:38:49.349"></status>
</kw>
<kw name="Stop XtremWeb Worker" library="XWWorker">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Stop XtremWeb Worker</arg>
</arguments>
<msg timestamp="20170915 10:38:49.353" level="INFO">Stop XtremWeb Worker</msg>
<status status="PASS" endtime="20170915 10:38:49.354" starttime="20170915 10:38:49.353"></status>
</kw>
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${WORKER_PROCESS}</arg>
</arguments>
<msg timestamp="20170915 10:38:49.354" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20170915 10:38:49.457" level="INFO">Process completed.</msg>
<status status="PASS" endtime="20170915 10:38:49.457" starttime="20170915 10:38:49.354"></status>
</kw>
<status status="PASS" endtime="20170915 10:38:49.457" starttime="20170915 10:38:49.353"></status>
</kw>
<status status="PASS" endtime="20170915 10:38:49.457" starttime="20170915 10:38:49.245"></status>
</kw>
<kw name="Start XWtremWeb Server And XWtremWeb Worker" library="XWCommon">
<kw name="Ping XWtremWeb Database" library="XWServer">
<kw name="Xtremweb Tables Must Exist" library="MySql">
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170915 10:38:49.459" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170915 10:38:49.460" starttime="20170915 10:38:49.459"></status>
</kw>
<status status="PASS" endtime="20170915 10:38:49.460" starttime="20170915 10:38:49.458"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>appTypes</arg>
</arguments>
<msg timestamp="20170915 10:38:49.460" level="INFO">Executing : Table Must Exist  |  appTypes </msg>
<msg timestamp="20170915 10:38:49.460" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='appTypes' </msg>
<status status="PASS" endtime="20170915 10:38:49.461" starttime="20170915 10:38:49.460"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps</arg>
</arguments>
<msg timestamp="20170915 10:38:49.462" level="INFO">Executing : Table Must Exist  |  apps </msg>
<msg timestamp="20170915 10:38:49.462" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='apps' </msg>
<status status="PASS" endtime="20170915 10:38:49.462" starttime="20170915 10:38:49.461"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps_history</arg>
</arguments>
<msg timestamp="20170915 10:38:49.463" level="INFO">Executing : Table Must Exist  |  apps_history </msg>
<msg timestamp="20170915 10:38:49.463" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='apps_history' </msg>
<status status="PASS" endtime="20170915 10:38:49.463" starttime="20170915 10:38:49.462"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>cpuTypes</arg>
</arguments>
<msg timestamp="20170915 10:38:49.463" level="INFO">Executing : Table Must Exist  |  cpuTypes </msg>
<msg timestamp="20170915 10:38:49.464" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='cpuTypes' </msg>
<status status="PASS" endtime="20170915 10:38:49.464" starttime="20170915 10:38:49.463"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>dataTypes</arg>
</arguments>
<msg timestamp="20170915 10:38:49.464" level="INFO">Executing : Table Must Exist  |  dataTypes </msg>
<msg timestamp="20170915 10:38:49.465" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='dataTypes' </msg>
<status status="PASS" endtime="20170915 10:38:49.466" starttime="20170915 10:38:49.464"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas</arg>
</arguments>
<msg timestamp="20170915 10:38:49.466" level="INFO">Executing : Table Must Exist  |  datas </msg>
<msg timestamp="20170915 10:38:49.466" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='datas' </msg>
<status status="PASS" endtime="20170915 10:38:49.467" starttime="20170915 10:38:49.466"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas_history</arg>
</arguments>
<msg timestamp="20170915 10:38:49.467" level="INFO">Executing : Table Must Exist  |  datas_history </msg>
<msg timestamp="20170915 10:38:49.467" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='datas_history' </msg>
<status status="PASS" endtime="20170915 10:38:49.468" starttime="20170915 10:38:49.467"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables</arg>
</arguments>
<msg timestamp="20170915 10:38:49.468" level="INFO">Executing : Table Must Exist  |  executables </msg>
<msg timestamp="20170915 10:38:49.468" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='executables' </msg>
<status status="PASS" endtime="20170915 10:38:49.469" starttime="20170915 10:38:49.468"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables_history</arg>
</arguments>
<msg timestamp="20170915 10:38:49.469" level="INFO">Executing : Table Must Exist  |  executables_history </msg>
<msg timestamp="20170915 10:38:49.469" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='executables_history' </msg>
<status status="PASS" endtime="20170915 10:38:49.470" starttime="20170915 10:38:49.469"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups</arg>
</arguments>
<msg timestamp="20170915 10:38:49.471" level="INFO">Executing : Table Must Exist  |  groups </msg>
<msg timestamp="20170915 10:38:49.471" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='groups' </msg>
<status status="PASS" endtime="20170915 10:38:49.472" starttime="20170915 10:38:49.470"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups_history</arg>
</arguments>
<msg timestamp="20170915 10:38:49.472" level="INFO">Executing : Table Must Exist  |  groups_history </msg>
<msg timestamp="20170915 10:38:49.472" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='groups_history' </msg>
<status status="PASS" endtime="20170915 10:38:49.472" starttime="20170915 10:38:49.472"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts</arg>
</arguments>
<msg timestamp="20170915 10:38:49.473" level="INFO">Executing : Table Must Exist  |  hosts </msg>
<msg timestamp="20170915 10:38:49.473" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='hosts' </msg>
<status status="PASS" endtime="20170915 10:38:49.474" starttime="20170915 10:38:49.473"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts_history</arg>
</arguments>
<msg timestamp="20170915 10:38:49.474" level="INFO">Executing : Table Must Exist  |  hosts_history </msg>
<msg timestamp="20170915 10:38:49.474" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='hosts_history' </msg>
<status status="PASS" endtime="20170915 10:38:49.475" starttime="20170915 10:38:49.474"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships</arg>
</arguments>
<msg timestamp="20170915 10:38:49.475" level="INFO">Executing : Table Must Exist  |  memberships </msg>
<msg timestamp="20170915 10:38:49.475" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='memberships' </msg>
<status status="PASS" endtime="20170915 10:38:49.476" starttime="20170915 10:38:49.475"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships_history</arg>
</arguments>
<msg timestamp="20170915 10:38:49.476" level="INFO">Executing : Table Must Exist  |  memberships_history </msg>
<msg timestamp="20170915 10:38:49.476" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='memberships_history' </msg>
<status status="PASS" endtime="20170915 10:38:49.477" starttime="20170915 10:38:49.476"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>oses</arg>
</arguments>
<msg timestamp="20170915 10:38:49.477" level="INFO">Executing : Table Must Exist  |  oses </msg>
<msg timestamp="20170915 10:38:49.477" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='oses' </msg>
<status status="PASS" endtime="20170915 10:38:49.478" starttime="20170915 10:38:49.477"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>packageTypes</arg>
</arguments>
<msg timestamp="20170915 10:38:49.478" level="INFO">Executing : Table Must Exist  |  packageTypes </msg>
<msg timestamp="20170915 10:38:49.479" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='packageTypes' </msg>
<status status="PASS" endtime="20170915 10:38:49.479" starttime="20170915 10:38:49.478"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions</arg>
</arguments>
<msg timestamp="20170915 10:38:49.479" level="INFO">Executing : Table Must Exist  |  sessions </msg>
<msg timestamp="20170915 10:38:49.480" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sessions' </msg>
<status status="PASS" endtime="20170915 10:38:49.480" starttime="20170915 10:38:49.479"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions_history</arg>
</arguments>
<msg timestamp="20170915 10:38:49.481" level="INFO">Executing : Table Must Exist  |  sessions_history </msg>
<msg timestamp="20170915 10:38:49.481" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sessions_history' </msg>
<status status="PASS" endtime="20170915 10:38:49.481" starttime="20170915 10:38:49.480"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes</arg>
</arguments>
<msg timestamp="20170915 10:38:49.481" level="INFO">Executing : Table Must Exist  |  sharedAppTypes </msg>
<msg timestamp="20170915 10:38:49.481" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedAppTypes' </msg>
<status status="PASS" endtime="20170915 10:38:49.483" starttime="20170915 10:38:49.481"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes_history</arg>
</arguments>
<msg timestamp="20170915 10:38:49.483" level="INFO">Executing : Table Must Exist  |  sharedAppTypes_history </msg>
<msg timestamp="20170915 10:38:49.483" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedAppTypes_history' </msg>
<status status="PASS" endtime="20170915 10:38:49.493" starttime="20170915 10:38:49.483"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes</arg>
</arguments>
<msg timestamp="20170915 10:38:49.494" level="INFO">Executing : Table Must Exist  |  sharedPackageTypes </msg>
<msg timestamp="20170915 10:38:49.494" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedPackageTypes' </msg>
<status status="PASS" endtime="20170915 10:38:49.495" starttime="20170915 10:38:49.493"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes_history</arg>
</arguments>
<msg timestamp="20170915 10:38:49.495" level="INFO">Executing : Table Must Exist  |  sharedPackageTypes_history </msg>
<msg timestamp="20170915 10:38:49.495" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedPackageTypes_history' </msg>
<status status="PASS" endtime="20170915 10:38:49.496" starttime="20170915 10:38:49.495"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>statuses</arg>
</arguments>
<msg timestamp="20170915 10:38:49.496" level="INFO">Executing : Table Must Exist  |  statuses </msg>
<msg timestamp="20170915 10:38:49.496" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='statuses' </msg>
<status status="PASS" endtime="20170915 10:38:49.497" starttime="20170915 10:38:49.496"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks</arg>
</arguments>
<msg timestamp="20170915 10:38:49.497" level="INFO">Executing : Table Must Exist  |  tasks </msg>
<msg timestamp="20170915 10:38:49.497" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='tasks' </msg>
<status status="PASS" endtime="20170915 10:38:49.498" starttime="20170915 10:38:49.497"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks_history</arg>
</arguments>
<msg timestamp="20170915 10:38:49.498" level="INFO">Executing : Table Must Exist  |  tasks_history </msg>
<msg timestamp="20170915 10:38:49.498" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='tasks_history' </msg>
<status status="PASS" endtime="20170915 10:38:49.499" starttime="20170915 10:38:49.498"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces</arg>
</arguments>
<msg timestamp="20170915 10:38:49.500" level="INFO">Executing : Table Must Exist  |  traces </msg>
<msg timestamp="20170915 10:38:49.500" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='traces' </msg>
<status status="PASS" endtime="20170915 10:38:49.501" starttime="20170915 10:38:49.499"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces_history</arg>
</arguments>
<msg timestamp="20170915 10:38:49.501" level="INFO">Executing : Table Must Exist  |  traces_history </msg>
<msg timestamp="20170915 10:38:49.501" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='traces_history' </msg>
<status status="PASS" endtime="20170915 10:38:49.502" starttime="20170915 10:38:49.501"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>userRights</arg>
</arguments>
<msg timestamp="20170915 10:38:49.502" level="INFO">Executing : Table Must Exist  |  userRights </msg>
<msg timestamp="20170915 10:38:49.502" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='userRights' </msg>
<status status="PASS" endtime="20170915 10:38:49.503" starttime="20170915 10:38:49.502"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups</arg>
</arguments>
<msg timestamp="20170915 10:38:49.503" level="INFO">Executing : Table Must Exist  |  usergroups </msg>
<msg timestamp="20170915 10:38:49.503" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='usergroups' </msg>
<status status="PASS" endtime="20170915 10:38:49.504" starttime="20170915 10:38:49.503"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups_history</arg>
</arguments>
<msg timestamp="20170915 10:38:49.504" level="INFO">Executing : Table Must Exist  |  usergroups_history </msg>
<msg timestamp="20170915 10:38:49.504" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='usergroups_history' </msg>
<status status="PASS" endtime="20170915 10:38:49.505" starttime="20170915 10:38:49.504"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users</arg>
</arguments>
<msg timestamp="20170915 10:38:49.505" level="INFO">Executing : Table Must Exist  |  users </msg>
<msg timestamp="20170915 10:38:49.505" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='users' </msg>
<status status="PASS" endtime="20170915 10:38:49.506" starttime="20170915 10:38:49.505"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users_history</arg>
</arguments>
<msg timestamp="20170915 10:38:49.506" level="INFO">Executing : Table Must Exist  |  users_history </msg>
<msg timestamp="20170915 10:38:49.506" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='users_history' </msg>
<status status="PASS" endtime="20170915 10:38:49.507" starttime="20170915 10:38:49.506"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>version</arg>
</arguments>
<msg timestamp="20170915 10:38:49.507" level="INFO">Executing : Table Must Exist  |  version </msg>
<msg timestamp="20170915 10:38:49.507" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='version' </msg>
<status status="PASS" endtime="20170915 10:38:49.508" starttime="20170915 10:38:49.507"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>versions</arg>
</arguments>
<msg timestamp="20170915 10:38:49.508" level="INFO">Executing : Table Must Exist  |  versions </msg>
<msg timestamp="20170915 10:38:49.508" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='versions' </msg>
<status status="PASS" endtime="20170915 10:38:49.509" starttime="20170915 10:38:49.508"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps</arg>
</arguments>
<msg timestamp="20170915 10:38:49.509" level="INFO">Executing : Table Must Exist  |  view_apps </msg>
<msg timestamp="20170915 10:38:49.509" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps' </msg>
<status status="PASS" endtime="20170915 10:38:49.510" starttime="20170915 10:38:49.509"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps_for_offering</arg>
</arguments>
<msg timestamp="20170915 10:38:49.510" level="INFO">Executing : Table Must Exist  |  view_apps_for_offering </msg>
<msg timestamp="20170915 10:38:49.510" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps_for_offering' </msg>
<status status="PASS" endtime="20170915 10:38:49.511" starttime="20170915 10:38:49.510"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps_for_offering_with_file_sizes</arg>
</arguments>
<msg timestamp="20170915 10:38:49.511" level="INFO">Executing : Table Must Exist  |  view_apps_for_offering_with_file_sizes </msg>
<msg timestamp="20170915 10:38:49.511" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps_for_offering_with_file_sizes' </msg>
<status status="PASS" endtime="20170915 10:38:49.512" starttime="20170915 10:38:49.511"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_datas</arg>
</arguments>
<msg timestamp="20170915 10:38:49.512" level="INFO">Executing : Table Must Exist  |  view_datas </msg>
<msg timestamp="20170915 10:38:49.512" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_datas' </msg>
<status status="PASS" endtime="20170915 10:38:49.513" starttime="20170915 10:38:49.512"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_executables</arg>
</arguments>
<msg timestamp="20170915 10:38:49.513" level="INFO">Executing : Table Must Exist  |  view_executables </msg>
<msg timestamp="20170915 10:38:49.513" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_executables' </msg>
<status status="PASS" endtime="20170915 10:38:49.514" starttime="20170915 10:38:49.513"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_groups</arg>
</arguments>
<msg timestamp="20170915 10:38:49.514" level="INFO">Executing : Table Must Exist  |  view_groups </msg>
<msg timestamp="20170915 10:38:49.514" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_groups' </msg>
<status status="PASS" endtime="20170915 10:38:49.515" starttime="20170915 10:38:49.514"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts</arg>
</arguments>
<msg timestamp="20170915 10:38:49.515" level="INFO">Executing : Table Must Exist  |  view_hosts </msg>
<msg timestamp="20170915 10:38:49.515" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts' </msg>
<status status="PASS" endtime="20170915 10:38:49.516" starttime="20170915 10:38:49.515"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_deployable</arg>
</arguments>
<msg timestamp="20170915 10:38:49.516" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_deployable </msg>
<msg timestamp="20170915 10:38:49.516" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_deployable' </msg>
<status status="PASS" endtime="20170915 10:38:49.517" starttime="20170915 10:38:49.516"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_deployable_and_shared</arg>
</arguments>
<msg timestamp="20170915 10:38:49.517" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_deployable_and_shared </msg>
<msg timestamp="20170915 10:38:49.517" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_deployable_and_shared' </msg>
<status status="PASS" endtime="20170915 10:38:49.518" starttime="20170915 10:38:49.517"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_shared</arg>
</arguments>
<msg timestamp="20170915 10:38:49.519" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_shared </msg>
<msg timestamp="20170915 10:38:49.519" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_shared' </msg>
<status status="PASS" endtime="20170915 10:38:49.519" starttime="20170915 10:38:49.518"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_sessions</arg>
</arguments>
<msg timestamp="20170915 10:38:49.520" level="INFO">Executing : Table Must Exist  |  view_sessions </msg>
<msg timestamp="20170915 10:38:49.520" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_sessions' </msg>
<status status="PASS" endtime="20170915 10:38:49.521" starttime="20170915 10:38:49.520"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_tasks</arg>
</arguments>
<msg timestamp="20170915 10:38:49.521" level="INFO">Executing : Table Must Exist  |  view_tasks </msg>
<msg timestamp="20170915 10:38:49.521" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_tasks' </msg>
<status status="PASS" endtime="20170915 10:38:49.522" starttime="20170915 10:38:49.521"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_traces</arg>
</arguments>
<msg timestamp="20170915 10:38:49.522" level="INFO">Executing : Table Must Exist  |  view_traces </msg>
<msg timestamp="20170915 10:38:49.522" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_traces' </msg>
<status status="PASS" endtime="20170915 10:38:49.523" starttime="20170915 10:38:49.522"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_usergroups</arg>
</arguments>
<msg timestamp="20170915 10:38:49.523" level="INFO">Executing : Table Must Exist  |  view_usergroups </msg>
<msg timestamp="20170915 10:38:49.523" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_usergroups' </msg>
<status status="PASS" endtime="20170915 10:38:49.524" starttime="20170915 10:38:49.523"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users</arg>
</arguments>
<msg timestamp="20170915 10:38:49.524" level="INFO">Executing : Table Must Exist  |  view_users </msg>
<msg timestamp="20170915 10:38:49.524" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users' </msg>
<status status="PASS" endtime="20170915 10:38:49.525" starttime="20170915 10:38:49.524"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_apps</arg>
</arguments>
<msg timestamp="20170915 10:38:49.525" level="INFO">Executing : Table Must Exist  |  view_users_apps </msg>
<msg timestamp="20170915 10:38:49.525" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_apps' </msg>
<status status="PASS" endtime="20170915 10:38:49.526" starttime="20170915 10:38:49.525"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_datas</arg>
</arguments>
<msg timestamp="20170915 10:38:49.526" level="INFO">Executing : Table Must Exist  |  view_users_datas </msg>
<msg timestamp="20170915 10:38:49.526" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_datas' </msg>
<status status="PASS" endtime="20170915 10:38:49.527" starttime="20170915 10:38:49.526"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_groups</arg>
</arguments>
<msg timestamp="20170915 10:38:49.527" level="INFO">Executing : Table Must Exist  |  view_users_groups </msg>
<msg timestamp="20170915 10:38:49.528" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_groups' </msg>
<status status="PASS" endtime="20170915 10:38:49.529" starttime="20170915 10:38:49.527"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_hosts</arg>
</arguments>
<msg timestamp="20170915 10:38:49.529" level="INFO">Executing : Table Must Exist  |  view_users_hosts </msg>
<msg timestamp="20170915 10:38:49.529" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_hosts' </msg>
<status status="PASS" endtime="20170915 10:38:49.530" starttime="20170915 10:38:49.529"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_sessions</arg>
</arguments>
<msg timestamp="20170915 10:38:49.530" level="INFO">Executing : Table Must Exist  |  view_users_sessions </msg>
<msg timestamp="20170915 10:38:49.530" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_sessions' </msg>
<status status="PASS" endtime="20170915 10:38:49.531" starttime="20170915 10:38:49.530"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_tasks</arg>
</arguments>
<msg timestamp="20170915 10:38:49.531" level="INFO">Executing : Table Must Exist  |  view_users_tasks </msg>
<msg timestamp="20170915 10:38:49.531" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_tasks' </msg>
<status status="PASS" endtime="20170915 10:38:49.532" starttime="20170915 10:38:49.531"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_traces</arg>
</arguments>
<msg timestamp="20170915 10:38:49.533" level="INFO">Executing : Table Must Exist  |  view_users_traces </msg>
<msg timestamp="20170915 10:38:49.533" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_traces' </msg>
<status status="PASS" endtime="20170915 10:38:49.533" starttime="20170915 10:38:49.532"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_usergroups</arg>
</arguments>
<msg timestamp="20170915 10:38:49.534" level="INFO">Executing : Table Must Exist  |  view_users_usergroups </msg>
<msg timestamp="20170915 10:38:49.534" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_usergroups' </msg>
<status status="PASS" endtime="20170915 10:38:49.534" starttime="20170915 10:38:49.534"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_users</arg>
</arguments>
<msg timestamp="20170915 10:38:49.535" level="INFO">Executing : Table Must Exist  |  view_users_users </msg>
<msg timestamp="20170915 10:38:49.535" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_users' </msg>
<status status="PASS" endtime="20170915 10:38:49.536" starttime="20170915 10:38:49.535"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_works</arg>
</arguments>
<msg timestamp="20170915 10:38:49.536" level="INFO">Executing : Table Must Exist  |  view_users_works </msg>
<msg timestamp="20170915 10:38:49.536" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_works' </msg>
<status status="PASS" endtime="20170915 10:38:49.537" starttime="20170915 10:38:49.536"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works</arg>
</arguments>
<msg timestamp="20170915 10:38:49.537" level="INFO">Executing : Table Must Exist  |  view_works </msg>
<msg timestamp="20170915 10:38:49.537" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works' </msg>
<status status="PASS" endtime="20170915 10:38:49.538" starttime="20170915 10:38:49.537"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works_for_billing</arg>
</arguments>
<msg timestamp="20170915 10:38:49.538" level="INFO">Executing : Table Must Exist  |  view_works_for_billing </msg>
<msg timestamp="20170915 10:38:49.538" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works_for_billing' </msg>
<status status="PASS" endtime="20170915 10:38:49.539" starttime="20170915 10:38:49.538"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works_for_billing_with_file_sizes</arg>
</arguments>
<msg timestamp="20170915 10:38:49.539" level="INFO">Executing : Table Must Exist  |  view_works_for_billing_with_file_sizes </msg>
<msg timestamp="20170915 10:38:49.539" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works_for_billing_with_file_sizes' </msg>
<status status="PASS" endtime="20170915 10:38:49.540" starttime="20170915 10:38:49.539"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works</arg>
</arguments>
<msg timestamp="20170915 10:38:49.540" level="INFO">Executing : Table Must Exist  |  works </msg>
<msg timestamp="20170915 10:38:49.540" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='works' </msg>
<status status="PASS" endtime="20170915 10:38:49.541" starttime="20170915 10:38:49.540"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works_history</arg>
</arguments>
<msg timestamp="20170915 10:38:49.541" level="INFO">Executing : Table Must Exist  |  works_history </msg>
<msg timestamp="20170915 10:38:49.541" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='works_history' </msg>
<status status="PASS" endtime="20170915 10:38:49.542" starttime="20170915 10:38:49.541"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170915 10:38:49.542" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170915 10:38:49.543" starttime="20170915 10:38:49.542"></status>
</kw>
<status status="PASS" endtime="20170915 10:38:49.543" starttime="20170915 10:38:49.542"></status>
</kw>
<status status="PASS" endtime="20170915 10:38:49.543" starttime="20170915 10:38:49.458"></status>
</kw>
<status status="PASS" endtime="20170915 10:38:49.543" starttime="20170915 10:38:49.458"></status>
</kw>
<kw name="Start XtremWeb Server" library="XWServer">
<arguments>
<arg>${DIST_XWHEP_PATH}</arg>
</arguments>
<kw name="File Should Exist" library="OperatingSystem">
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xtremweb.server.conf</arg>
</arguments>
<msg timestamp="20170915 10:38:49.544" html="yes" level="INFO">File '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf&lt;/a&gt;' exists.</msg>
<status status="PASS" endtime="20170915 10:38:49.544" starttime="20170915 10:38:49.543"></status>
</kw>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xtremweb.server.conf</arg>
</arguments>
<assign>
<var>${config_content}</var>
</assign>
<msg timestamp="20170915 10:38:49.544" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf&lt;/a&gt;'.</msg>
<msg timestamp="20170915 10:38:49.545" level="INFO">${config_content} = #
# Copyrights     : CNRS
# Author         : Oleg Lodygensky
# Acknowledgment : XtremWeb-HEP is based on XtremWeb 1.8.0 by inria : http://www.xtremweb.net/
# Web            : http://www.xtremweb-hep.o...</msg>
<status status="PASS" endtime="20170915 10:38:49.545" starttime="20170915 10:38:49.544"></status>
</kw>
<kw name="Remove String Using Regexp" library="String">
<doc>Removes ``patterns`` from the given ``string``.</doc>
<arguments>
<arg>${config_content}</arg>
<arg>LAUNCHERURL=${XWCONFIGURE.VALUES.XWUPGRADEURL}</arg>
</arguments>
<assign>
<var>${config_content_filtered}</var>
</assign>
<msg timestamp="20170915 10:38:49.545" level="INFO">${config_content_filtered} = #
# Copyrights     : CNRS
# Author         : Oleg Lodygensky
# Acknowledgment : XtremWeb-HEP is based on XtremWeb 1.8.0 by inria : http://www.xtremweb.net/
# Web            : http://www.xtremweb-hep.o...</msg>
<status status="PASS" endtime="20170915 10:38:49.545" starttime="20170915 10:38:49.545"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${config_content_filtered}</arg>
<arg>\## HTTPSPORT=443</arg>
<arg>HTTPSPORT=${XWCONFIGURE.VALUES.HTTPSPORT}</arg>
</arguments>
<assign>
<var>${config_content_filtered}</var>
</assign>
<msg timestamp="20170915 10:38:49.546" level="INFO">${config_content_filtered} = #
# Copyrights     : CNRS
# Author         : Oleg Lodygensky
# Acknowledgment : XtremWeb-HEP is based on XtremWeb 1.8.0 by inria : http://www.xtremweb.net/
# Web            : http://www.xtremweb-hep.o...</msg>
<status status="PASS" endtime="20170915 10:38:49.546" starttime="20170915 10:38:49.546"></status>
</kw>
<kw name="Create File" library="OperatingSystem">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xtremweb.server.conf</arg>
<arg>content=${config_content_filtered}</arg>
</arguments>
<msg timestamp="20170915 10:38:49.551" html="yes" level="INFO">Created file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170915 10:38:49.551" starttime="20170915 10:38:49.546"></status>
</kw>
<kw name="Remove File" library="OperatingSystem">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<msg timestamp="20170915 10:38:49.553" html="yes" level="INFO">Removed file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170915 10:38:49.553" starttime="20170915 10:38:49.552"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/bin/xtremweb.server console</arg>
<arg>shell=yes</arg>
<arg>stderr=STDOUT</arg>
<arg>stdout=${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<assign>
<var>${created_process}</var>
</assign>
<msg timestamp="20170915 10:38:49.562" level="INFO">Starting process:
/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/xtremweb.server console</msg>
<msg timestamp="20170915 10:38:49.565" level="INFO">${created_process} = 66</msg>
<status status="PASS" endtime="20170915 10:38:49.565" starttime="20170915 10:38:49.553"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SERVER_PROCESS}</arg>
<arg>${created_process}</arg>
</arguments>
<msg timestamp="20170915 10:38:49.566" level="INFO">${SERVER_PROCESS} = 66</msg>
<status status="PASS" endtime="20170915 10:38:49.566" starttime="20170915 10:38:49.566"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2 min</arg>
<arg>5 sec</arg>
<arg>Check XtremWeb Server Start From Log</arg>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<kw name="Check XtremWeb Server Start From Log" library="XWServer">
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<kw name="Log XtremWeb Process Log File" library="XWServer">
<kw name="Log File" library="OperatingSystem">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<msg timestamp="20170915 10:38:49.568" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170915 10:38:49.569" level="INFO"></msg>
<status status="PASS" endtime="20170915 10:38:49.569" starttime="20170915 10:38:49.568"></status>
</kw>
<status status="PASS" endtime="20170915 10:38:49.569" starttime="20170915 10:38:49.567"></status>
</kw>
<kw name="Grep File" library="OperatingSystem">
<doc>Returns the lines of the specified file that match the ``pattern``.</doc>
<arguments>
<arg>${log}</arg>
<arg>listening on port : ${XWCONFIGURE.VALUES.HTTPSPORT}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20170915 10:38:49.570" html="yes" level="INFO">Reading file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170915 10:38:49.570" level="INFO">0 out of 0 lines matched</msg>
<msg timestamp="20170915 10:38:49.571" level="INFO">${ret} = </msg>
<status status="PASS" endtime="20170915 10:38:49.571" starttime="20170915 10:38:49.570"></status>
</kw>
<kw name="Get Line Count" library="String">
<doc>Returns and logs the number of lines in the given string.</doc>
<arguments>
<arg>${ret}</arg>
</arguments>
<assign>
<var>${line_count}</var>
</assign>
<msg timestamp="20170915 10:38:49.571" level="INFO">0 lines</msg>
<msg timestamp="20170915 10:38:49.571" level="INFO">${line_count} = 0</msg>
<status status="PASS" endtime="20170915 10:38:49.571" starttime="20170915 10:38:49.571"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${line_count}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20170915 10:38:49.572" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20170915 10:38:49.573" level="FAIL">0 != 2</msg>
<status status="FAIL" endtime="20170915 10:38:49.573" starttime="20170915 10:38:49.571"></status>
</kw>
<status status="FAIL" endtime="20170915 10:38:49.573" starttime="20170915 10:38:49.567"></status>
</kw>
<kw name="Check XtremWeb Server Start From Log" library="XWServer">
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<kw name="Log XtremWeb Process Log File" library="XWServer">
<kw name="Log File" library="OperatingSystem">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<msg timestamp="20170915 10:38:54.575" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170915 10:38:54.582" level="INFO">Fri Sep 15 10:38:49 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : checking launch url
Fri Sep 15 10:38:49 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] WARNING : no launcher URL defined
Fri Sep 15 10:38:49 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : launching SmartSockets hub
[15/Sep/2017:10:38:51 +0000] [main_1] ERROR : setRole : role redefined ?! (was SERVER)
[15/Sep/2017:10:38:52 +0000] [xtremweb.database.DBConnPoolThread_main_1] INFO : Connection to database jdbc:mysql://localhost/xtremweb is ok, 70 created
[15/Sep/2017:10:38:52 +0000] [xtremweb.dispatcher.DBInterface_main_1] WARN : Can't retrieve any app
[15/Sep/2017:10:38:52 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't create ProxyValidator
[15/Sep/2017:10:38:52 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.io.FileNotFoundException: /tmp/castore (No such file or directory) (/tmp/castore (No such file or directory))
[15/Sep/2017:10:38:52 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't add CA certificates to keystore
[15/Sep/2017:10:38:52 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.lang.NullPointerException (null)
[15/Sep/2017:10:38:52 +0000] [xtremweb.dispatcher.HashTaskSet_TaskSet_14] INFO : TaskSet started (300000)
[15/Sep/2017:10:38:53 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : still waiting task set...
[15/Sep/2017:10:38:53 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : UDP server not started
[15/Sep/2017:10:38:53 +0000] [xtremweb.communications.TCPServer_TCPServerNIO_15] INFO : started, listening on port : 4321
log4j:WARN No appenders could be found for logger (org.eclipse.jetty.util.log).
log4j:WARN Please initialize the log4j system properly.
log4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.
[15/Sep/2017:10:38:53 +0000] [xtremweb.communications.HTTPServer_main_1] INFO : started, listening on port : 9443
[15/Sep/2017:10:38:53 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : FACEBOOK : java.net.MalformedURLException: no protocol: 
[15/Sep/2017:10:38:53 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : GOOGLE : java.net.MalformedURLException: no protocol: 
[15/Sep/2017:10:38:53 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : TWITTER : java.net.MalformedURLException: no protocol: 
[15/Sep/2017:10:38:53 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : YAHOO : java.net.MalformedURLException: no protocol: 
[15/Sep/2017:10:38:53 +0000] [main_1] ERROR : Can't add new entry to keystore
[15/Sep/2017:10:38:53 +0000] [main_1] WARN : javax.net.ssl.SSLHandshakeException: sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target (sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target)
[15/Sep/2017:10:38:53 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : XWHEP Dispatcher(10.6.0-head) started [Fri Sep 15 10:38:53 UTC 2017]
[15/Sep/2017:10:38:53 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : DB vendor  = mysql
[15/Sep/2017:10:38:53 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : mileStone  = 
[15/Sep/2017:10:38:53 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Time out   = 15000
[15/Sep/2017:10:38:53 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Disk opt'd = true
[15/Sep/2017:10:38:53 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Net  opt'd = true
[15/Sep/2017:10:38:53 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : NIO        = true
XWHEP Dispatcher started  Fri Sep 15 10:38:53 UTC 2017
Name             : vagrant-ubuntu-trusty-64
Version          : 10.6.0-head
Identity         : 
XWRole           : SERVER
Started on       : Fri Sep 15 10:38:51 UTC 2017
Scheduler        : xtremweb.dispatcher.MatchingScheduler
SmartSockets hub : 172.28.128.3/172.17.0.1/10.0.2.15-4329#72.5b.f5.3a.cd.7c.00.00.1d.b4.02.42.02.6c.0f.e2~vagrant
Server HTTP      : true
Alive            : 300
Alive time out   : 900
Polling time out : 15000
Optimize zip     : true
Optimize network : true
NIO              : true
Comm layer       : xtremweb.communications.TCPClient
Socket time out  : 60000
Socket retries   : 50
Max connections  : 200
TCP port         : 4321
UDP port         : 4323
HTPP  port       : 80
HTPPS port       : 9443
Sun RPC interposition port : 4328
Sandbox path : /usr/bin/lxc
Sandbox launch args : 
Host &lt;host&gt;&lt;uid&gt;2e1c8654-0803-4582-a1e3-bdff68a423fb&lt;/uid&gt;&lt;accessrights&gt;0x755&lt;/accessrights&gt;&lt;name&gt;vagrant-ubuntu-trusty-64&lt;/name&gt;&lt;cpuload&gt;50&lt;/cpuload&gt;&lt;natedipaddr&gt;10.0.2.15&lt;/natedipaddr&gt;&lt;ipaddr&gt;10.0.2.15&lt;/ipaddr&gt;&lt;hwaddr&gt;&lt;/hwaddr&gt;&lt;timezone&gt;Etc/UTC&lt;/timezone&gt;&lt;os&gt;LINUX&lt;/os&gt;&lt;osversion&gt;3.13.0-129-generic&lt;/osversion&gt;&lt;javaversion&gt;1.8.0_141&lt;/javaversion&gt;&lt;javadatamodel&gt;64&lt;/javadatamodel&gt;&lt;cputype&gt;AMD64&lt;/cputype&gt;&lt;cpunb&gt;1&lt;/cpunb&gt;&lt;cpumodel&gt;unknown&lt;/cpumodel&gt;&lt;cpuspeed&gt;0&lt;/cpuspeed&gt;&lt;totalmem&gt;0&lt;/totalmem&gt;&lt;totalswap&gt;0&lt;/totalswap&gt;&lt;totaltmp&gt;40284&lt;/totaltmp&gt;&lt;freetmp&gt;37249&lt;/freetmp&gt;&lt;project&gt;&lt;/project&gt;&lt;active&gt;true&lt;/active&gt;&lt;incomingconnections&gt;false&lt;/incomingconnections&gt;&lt;available&gt;false&lt;/available&gt;&lt;pilotjob&gt;false&lt;/pilotjob&gt;&lt;sgid&gt;&lt;/sgid&gt;&lt;timeout&gt;15000&lt;/timeout&gt;&lt;traces&gt;false&lt;/traces&gt;&lt;acceptbin&gt;false&lt;/acceptbin&gt;&lt;version&gt;10.6.0-head&lt;/version&gt;&lt;/host&gt;
[15/Sep/2017:10:38:53 +0000] [xtremweb.communications.HTTPServer_HTTPServer_218] INFO : started, listening on port : 9443
</msg>
<status status="PASS" endtime="20170915 10:38:54.582" starttime="20170915 10:38:54.574"></status>
</kw>
<status status="PASS" endtime="20170915 10:38:54.582" starttime="20170915 10:38:54.574"></status>
</kw>
<kw name="Grep File" library="OperatingSystem">
<doc>Returns the lines of the specified file that match the ``pattern``.</doc>
<arguments>
<arg>${log}</arg>
<arg>listening on port : ${XWCONFIGURE.VALUES.HTTPSPORT}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20170915 10:38:54.583" html="yes" level="INFO">Reading file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170915 10:38:54.584" level="INFO">2 out of 59 lines matched</msg>
<msg timestamp="20170915 10:38:54.584" level="INFO">${ret} = [15/Sep/2017:10:38:53 +0000] [xtremweb.communications.HTTPServer_main_1] INFO : started, listening on port : 9443
[15/Sep/2017:10:38:53 +0000] [xtremweb.communications.HTTPServer_HTTPServer_218] INFO ...</msg>
<status status="PASS" endtime="20170915 10:38:54.584" starttime="20170915 10:38:54.583"></status>
</kw>
<kw name="Get Line Count" library="String">
<doc>Returns and logs the number of lines in the given string.</doc>
<arguments>
<arg>${ret}</arg>
</arguments>
<assign>
<var>${line_count}</var>
</assign>
<msg timestamp="20170915 10:38:54.584" level="INFO">2 lines</msg>
<msg timestamp="20170915 10:38:54.585" level="INFO">${line_count} = 2</msg>
<status status="PASS" endtime="20170915 10:38:54.585" starttime="20170915 10:38:54.584"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${line_count}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20170915 10:38:54.585" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170915 10:38:54.585" starttime="20170915 10:38:54.585"></status>
</kw>
<status status="PASS" endtime="20170915 10:38:54.585" starttime="20170915 10:38:54.573"></status>
</kw>
<status status="PASS" endtime="20170915 10:38:54.585" starttime="20170915 10:38:49.566"></status>
</kw>
<kw name="Log XtremWeb Process Log File" library="XWServer">
<kw name="Log File" library="OperatingSystem">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<msg timestamp="20170915 10:38:54.586" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170915 10:38:54.586" level="INFO">Fri Sep 15 10:38:49 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : checking launch url
Fri Sep 15 10:38:49 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] WARNING : no launcher URL defined
Fri Sep 15 10:38:49 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : launching SmartSockets hub
[15/Sep/2017:10:38:51 +0000] [main_1] ERROR : setRole : role redefined ?! (was SERVER)
[15/Sep/2017:10:38:52 +0000] [xtremweb.database.DBConnPoolThread_main_1] INFO : Connection to database jdbc:mysql://localhost/xtremweb is ok, 70 created
[15/Sep/2017:10:38:52 +0000] [xtremweb.dispatcher.DBInterface_main_1] WARN : Can't retrieve any app
[15/Sep/2017:10:38:52 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't create ProxyValidator
[15/Sep/2017:10:38:52 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.io.FileNotFoundException: /tmp/castore (No such file or directory) (/tmp/castore (No such file or directory))
[15/Sep/2017:10:38:52 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't add CA certificates to keystore
[15/Sep/2017:10:38:52 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.lang.NullPointerException (null)
[15/Sep/2017:10:38:52 +0000] [xtremweb.dispatcher.HashTaskSet_TaskSet_14] INFO : TaskSet started (300000)
[15/Sep/2017:10:38:53 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : still waiting task set...
[15/Sep/2017:10:38:53 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : UDP server not started
[15/Sep/2017:10:38:53 +0000] [xtremweb.communications.TCPServer_TCPServerNIO_15] INFO : started, listening on port : 4321
log4j:WARN No appenders could be found for logger (org.eclipse.jetty.util.log).
log4j:WARN Please initialize the log4j system properly.
log4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.
[15/Sep/2017:10:38:53 +0000] [xtremweb.communications.HTTPServer_main_1] INFO : started, listening on port : 9443
[15/Sep/2017:10:38:53 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : FACEBOOK : java.net.MalformedURLException: no protocol: 
[15/Sep/2017:10:38:53 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : GOOGLE : java.net.MalformedURLException: no protocol: 
[15/Sep/2017:10:38:53 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : TWITTER : java.net.MalformedURLException: no protocol: 
[15/Sep/2017:10:38:53 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : YAHOO : java.net.MalformedURLException: no protocol: 
[15/Sep/2017:10:38:53 +0000] [main_1] ERROR : Can't add new entry to keystore
[15/Sep/2017:10:38:53 +0000] [main_1] WARN : javax.net.ssl.SSLHandshakeException: sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target (sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target)
[15/Sep/2017:10:38:53 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : XWHEP Dispatcher(10.6.0-head) started [Fri Sep 15 10:38:53 UTC 2017]
[15/Sep/2017:10:38:53 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : DB vendor  = mysql
[15/Sep/2017:10:38:53 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : mileStone  = 
[15/Sep/2017:10:38:53 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Time out   = 15000
[15/Sep/2017:10:38:53 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Disk opt'd = true
[15/Sep/2017:10:38:53 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Net  opt'd = true
[15/Sep/2017:10:38:53 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : NIO        = true
XWHEP Dispatcher started  Fri Sep 15 10:38:53 UTC 2017
Name             : vagrant-ubuntu-trusty-64
Version          : 10.6.0-head
Identity         : 
XWRole           : SERVER
Started on       : Fri Sep 15 10:38:51 UTC 2017
Scheduler        : xtremweb.dispatcher.MatchingScheduler
SmartSockets hub : 172.28.128.3/172.17.0.1/10.0.2.15-4329#72.5b.f5.3a.cd.7c.00.00.1d.b4.02.42.02.6c.0f.e2~vagrant
Server HTTP      : true
Alive            : 300
Alive time out   : 900
Polling time out : 15000
Optimize zip     : true
Optimize network : true
NIO              : true
Comm layer       : xtremweb.communications.TCPClient
Socket time out  : 60000
Socket retries   : 50
Max connections  : 200
TCP port         : 4321
UDP port         : 4323
HTPP  port       : 80
HTPPS port       : 9443
Sun RPC interposition port : 4328
Sandbox path : /usr/bin/lxc
Sandbox launch args : 
Host &lt;host&gt;&lt;uid&gt;2e1c8654-0803-4582-a1e3-bdff68a423fb&lt;/uid&gt;&lt;accessrights&gt;0x755&lt;/accessrights&gt;&lt;name&gt;vagrant-ubuntu-trusty-64&lt;/name&gt;&lt;cpuload&gt;50&lt;/cpuload&gt;&lt;natedipaddr&gt;10.0.2.15&lt;/natedipaddr&gt;&lt;ipaddr&gt;10.0.2.15&lt;/ipaddr&gt;&lt;hwaddr&gt;&lt;/hwaddr&gt;&lt;timezone&gt;Etc/UTC&lt;/timezone&gt;&lt;os&gt;LINUX&lt;/os&gt;&lt;osversion&gt;3.13.0-129-generic&lt;/osversion&gt;&lt;javaversion&gt;1.8.0_141&lt;/javaversion&gt;&lt;javadatamodel&gt;64&lt;/javadatamodel&gt;&lt;cputype&gt;AMD64&lt;/cputype&gt;&lt;cpunb&gt;1&lt;/cpunb&gt;&lt;cpumodel&gt;unknown&lt;/cpumodel&gt;&lt;cpuspeed&gt;0&lt;/cpuspeed&gt;&lt;totalmem&gt;0&lt;/totalmem&gt;&lt;totalswap&gt;0&lt;/totalswap&gt;&lt;totaltmp&gt;40284&lt;/totaltmp&gt;&lt;freetmp&gt;37249&lt;/freetmp&gt;&lt;project&gt;&lt;/project&gt;&lt;active&gt;true&lt;/active&gt;&lt;incomingconnections&gt;false&lt;/incomingconnections&gt;&lt;available&gt;false&lt;/available&gt;&lt;pilotjob&gt;false&lt;/pilotjob&gt;&lt;sgid&gt;&lt;/sgid&gt;&lt;timeout&gt;15000&lt;/timeout&gt;&lt;traces&gt;false&lt;/traces&gt;&lt;acceptbin&gt;false&lt;/acceptbin&gt;&lt;version&gt;10.6.0-head&lt;/version&gt;&lt;/host&gt;
[15/Sep/2017:10:38:53 +0000] [xtremweb.communications.HTTPServer_HTTPServer_218] INFO : started, listening on port : 9443
</msg>
<status status="PASS" endtime="20170915 10:38:54.587" starttime="20170915 10:38:54.586"></status>
</kw>
<status status="PASS" endtime="20170915 10:38:54.587" starttime="20170915 10:38:54.585"></status>
</kw>
<status status="PASS" endtime="20170915 10:38:54.587" starttime="20170915 10:38:49.543"></status>
</kw>
<kw name="Start XtremWeb Worker" library="XWWorker">
<arguments>
<arg>${DIST_XWHEP_PATH}</arg>
</arguments>
<kw name="File Should Exist" library="OperatingSystem">
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xtremweb.worker.conf</arg>
</arguments>
<msg timestamp="20170915 10:38:54.588" html="yes" level="INFO">File '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf&lt;/a&gt;' exists.</msg>
<status status="PASS" endtime="20170915 10:38:54.588" starttime="20170915 10:38:54.587"></status>
</kw>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xtremweb.worker.conf</arg>
</arguments>
<assign>
<var>${config_content}</var>
</assign>
<msg timestamp="20170915 10:38:54.588" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf&lt;/a&gt;'.</msg>
<msg timestamp="20170915 10:38:54.589" level="INFO">${config_content} = #
# Copyrights     : CNRS
# Author         : Oleg Lodygensky
# Acknowledgment : XtremWeb-HEP is based on XtremWeb 1.8.0 by inria : http://www.xtremweb.net/
# Web            : http://www.xtremweb-hep.o...</msg>
<status status="PASS" endtime="20170915 10:38:54.589" starttime="20170915 10:38:54.588"></status>
</kw>
<kw name="Remove String Using Regexp" library="String">
<doc>Removes ``patterns`` from the given ``string``.</doc>
<arguments>
<arg>${config_content}</arg>
<arg>LAUNCHERURL=${XWCONFIGURE.VALUES.XWUPGRADEURL}</arg>
</arguments>
<assign>
<var>${config_content_filtered}</var>
</assign>
<msg timestamp="20170915 10:38:54.590" level="INFO">${config_content_filtered} = #
# Copyrights     : CNRS
# Author         : Oleg Lodygensky
# Acknowledgment : XtremWeb-HEP is based on XtremWeb 1.8.0 by inria : http://www.xtremweb.net/
# Web            : http://www.xtremweb-hep.o...</msg>
<status status="PASS" endtime="20170915 10:38:54.590" starttime="20170915 10:38:54.590"></status>
</kw>
<kw name="Create File" library="OperatingSystem">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xtremweb.worker.conf</arg>
<arg>content=${config_content_filtered}</arg>
</arguments>
<msg timestamp="20170915 10:38:54.598" html="yes" level="INFO">Created file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170915 10:38:54.598" starttime="20170915 10:38:54.590"></status>
</kw>
<kw name="Remove File" library="OperatingSystem">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.worker.process.log</arg>
</arguments>
<msg timestamp="20170915 10:38:54.600" html="yes" level="INFO">Removed file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.worker.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.worker.process.log&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170915 10:38:54.600" starttime="20170915 10:38:54.599"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/bin/xtremweb.worker console</arg>
<arg>shell=yes</arg>
<arg>stderr=STDOUT</arg>
<arg>stdout=${DIST_XWHEP_PATH}/xwhep.worker.process.log</arg>
</arguments>
<assign>
<var>${created_process}</var>
</assign>
<msg timestamp="20170915 10:38:54.602" level="INFO">Starting process:
/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/xtremweb.worker console</msg>
<msg timestamp="20170915 10:38:54.606" level="INFO">${created_process} = 67</msg>
<status status="PASS" endtime="20170915 10:38:54.606" starttime="20170915 10:38:54.600"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${WORKER_PROCESS}</arg>
<arg>${created_process}</arg>
</arguments>
<msg timestamp="20170915 10:38:54.609" level="INFO">${WORKER_PROCESS} = 67</msg>
<status status="PASS" endtime="20170915 10:38:54.609" starttime="20170915 10:38:54.608"></status>
</kw>
<kw name="Log File" library="OperatingSystem">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.worker.process.log</arg>
</arguments>
<msg timestamp="20170915 10:38:54.611" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.worker.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.worker.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170915 10:38:54.612" level="INFO"></msg>
<status status="PASS" endtime="20170915 10:38:54.613" starttime="20170915 10:38:54.610"></status>
</kw>
<status status="PASS" endtime="20170915 10:38:54.613" starttime="20170915 10:38:54.587"></status>
</kw>
<status status="PASS" endtime="20170915 10:38:54.613" starttime="20170915 10:38:49.457"></status>
</kw>
<status status="PASS" endtime="20170915 10:38:54.613" starttime="20170915 10:38:49.155"></status>
</kw>
<kw name="XWSENDAPPCommand" library="XWClient">
<doc>Usage : SENDAPP appName appType cpuType osName URI | UID : inserts/updates an application; URI or UID points to binary file ; application name must be the first parameter</doc>
<arguments>
<arg>ls</arg>
<arg>DEPLOYABLE</arg>
<arg>LINUX</arg>
<arg>AMD64</arg>
<arg>/bin/ls</arg>
</arguments>
<assign>
<var>${uid}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd ${DIST_XWHEP_PATH}/bin &amp;&amp; ./xwsendapp ${appName} ${appType} ${cpuType} ${osName} ${uri-udi}</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${cmd_result}</var>
</assign>
<msg timestamp="20170915 10:38:54.615" level="INFO">Starting process:
cd /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin &amp;&amp; ./xwsendapp ls DEPLOYABLE LINUX AMD64 /bin/ls</msg>
<msg timestamp="20170915 10:38:54.621" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170915 10:38:55.707" level="INFO">Process completed.</msg>
<msg timestamp="20170915 10:38:55.707" level="INFO">${cmd_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170915 10:38:55.707" starttime="20170915 10:38:54.615"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stderr}</arg>
</arguments>
<msg timestamp="20170915 10:38:55.708" level="INFO"></msg>
<status status="PASS" endtime="20170915 10:38:55.708" starttime="20170915 10:38:55.708"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
</arguments>
<msg timestamp="20170915 10:38:55.709" level="INFO">xw://vagrant-ubuntu-trusty-64/78607e17-a64a-4efb-8c05-927fbbaacd82</msg>
<status status="PASS" endtime="20170915 10:38:55.709" starttime="20170915 10:38:55.708"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${cmd_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170915 10:38:55.710" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170915 10:38:55.710" starttime="20170915 10:38:55.710"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
<arg>-36</arg>
</arguments>
<assign>
<var>${uid}</var>
</assign>
<msg timestamp="20170915 10:38:55.711" level="INFO">${uid} = 78607e17-a64a-4efb-8c05-927fbbaacd82</msg>
<status status="PASS" endtime="20170915 10:38:55.711" starttime="20170915 10:38:55.710"></status>
</kw>
<msg timestamp="20170915 10:38:55.711" level="INFO">${uid} = 78607e17-a64a-4efb-8c05-927fbbaacd82</msg>
<status status="PASS" endtime="20170915 10:38:55.711" starttime="20170915 10:38:54.614"></status>
</kw>
<kw name="Count From Apps Where Uid" library="XWServer">
<arguments>
<arg>${uid}</arg>
<arg>1</arg>
</arguments>
<kw name="Count From Table Where Uid" library="MySql">
<arguments>
<arg>apps</arg>
<arg>${uid}</arg>
<arg>${countExpected}</arg>
</arguments>
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170915 10:38:55.713" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170915 10:38:55.714" starttime="20170915 10:38:55.712"></status>
</kw>
<status status="PASS" endtime="20170915 10:38:55.714" starttime="20170915 10:38:55.712"></status>
</kw>
<kw name="Row Count Is Equal To X" library="DatabaseLibrary">
<doc>Check if the number of rows returned from `selectStatement` is equal to the value submitted. If not, then this</doc>
<arguments>
<arg>SELECT * FROM ${table} WHERE uid = '${uid}'</arg>
<arg>${countExpected}</arg>
</arguments>
<msg timestamp="20170915 10:38:55.715" level="INFO">Executing : Row Count Is Equal To X  |  SELECT * FROM apps WHERE uid = '78607e17-a64a-4efb-8c05-927fbbaacd82'  |  1 </msg>
<msg timestamp="20170915 10:38:55.715" level="INFO">Executing : Row Count  |  SELECT * FROM apps WHERE uid = '78607e17-a64a-4efb-8c05-927fbbaacd82' </msg>
<status status="PASS" endtime="20170915 10:38:55.716" starttime="20170915 10:38:55.714"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170915 10:38:55.717" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170915 10:38:55.717" starttime="20170915 10:38:55.716"></status>
</kw>
<status status="PASS" endtime="20170915 10:38:55.717" starttime="20170915 10:38:55.716"></status>
</kw>
<status status="PASS" endtime="20170915 10:38:55.717" starttime="20170915 10:38:55.712"></status>
</kw>
<status status="PASS" endtime="20170915 10:38:55.717" starttime="20170915 10:38:55.711"></status>
</kw>
<kw type="teardown" name="End XWtremWeb Command Test" library="XWCommon">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Nothing to do</arg>
</arguments>
<msg timestamp="20170915 10:38:55.718" level="INFO">Nothing to do</msg>
<status status="PASS" endtime="20170915 10:38:55.718" starttime="20170915 10:38:55.718"></status>
</kw>
<status status="PASS" endtime="20170915 10:38:55.718" starttime="20170915 10:38:55.718"></status>
</kw>
<doc>Testing XWSendapp cmd</doc>
<tags>
<tag>CommandLine Tests</tag>
</tags>
<status status="PASS" endtime="20170915 10:38:55.718" critical="yes" starttime="20170915 10:38:49.154"></status>
</test>
<test id="s1-s6-t3" name="Test XWSubmit and XWResults Command On LS Binary">
<kw type="setup" name="Begin XWtremWeb Command Test" library="XWCommon">
<kw name="Ping XWtremWeb Database" library="XWServer">
<kw name="Xtremweb Tables Must Exist" library="MySql">
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170915 10:38:55.721" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170915 10:38:55.722" starttime="20170915 10:38:55.721"></status>
</kw>
<status status="PASS" endtime="20170915 10:38:55.723" starttime="20170915 10:38:55.721"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>appTypes</arg>
</arguments>
<msg timestamp="20170915 10:38:55.723" level="INFO">Executing : Table Must Exist  |  appTypes </msg>
<msg timestamp="20170915 10:38:55.723" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='appTypes' </msg>
<status status="PASS" endtime="20170915 10:38:55.724" starttime="20170915 10:38:55.723"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps</arg>
</arguments>
<msg timestamp="20170915 10:38:55.724" level="INFO">Executing : Table Must Exist  |  apps </msg>
<msg timestamp="20170915 10:38:55.724" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='apps' </msg>
<status status="PASS" endtime="20170915 10:38:55.725" starttime="20170915 10:38:55.724"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps_history</arg>
</arguments>
<msg timestamp="20170915 10:38:55.725" level="INFO">Executing : Table Must Exist  |  apps_history </msg>
<msg timestamp="20170915 10:38:55.725" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='apps_history' </msg>
<status status="PASS" endtime="20170915 10:38:55.726" starttime="20170915 10:38:55.725"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>cpuTypes</arg>
</arguments>
<msg timestamp="20170915 10:38:55.726" level="INFO">Executing : Table Must Exist  |  cpuTypes </msg>
<msg timestamp="20170915 10:38:55.726" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='cpuTypes' </msg>
<status status="PASS" endtime="20170915 10:38:55.727" starttime="20170915 10:38:55.726"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>dataTypes</arg>
</arguments>
<msg timestamp="20170915 10:38:55.727" level="INFO">Executing : Table Must Exist  |  dataTypes </msg>
<msg timestamp="20170915 10:38:55.727" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='dataTypes' </msg>
<status status="PASS" endtime="20170915 10:38:55.728" starttime="20170915 10:38:55.727"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas</arg>
</arguments>
<msg timestamp="20170915 10:38:55.728" level="INFO">Executing : Table Must Exist  |  datas </msg>
<msg timestamp="20170915 10:38:55.728" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='datas' </msg>
<status status="PASS" endtime="20170915 10:38:55.729" starttime="20170915 10:38:55.728"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas_history</arg>
</arguments>
<msg timestamp="20170915 10:38:55.729" level="INFO">Executing : Table Must Exist  |  datas_history </msg>
<msg timestamp="20170915 10:38:55.729" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='datas_history' </msg>
<status status="PASS" endtime="20170915 10:38:55.730" starttime="20170915 10:38:55.729"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables</arg>
</arguments>
<msg timestamp="20170915 10:38:55.730" level="INFO">Executing : Table Must Exist  |  executables </msg>
<msg timestamp="20170915 10:38:55.730" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='executables' </msg>
<status status="PASS" endtime="20170915 10:38:55.731" starttime="20170915 10:38:55.730"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables_history</arg>
</arguments>
<msg timestamp="20170915 10:38:55.731" level="INFO">Executing : Table Must Exist  |  executables_history </msg>
<msg timestamp="20170915 10:38:55.731" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='executables_history' </msg>
<status status="PASS" endtime="20170915 10:38:55.732" starttime="20170915 10:38:55.731"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups</arg>
</arguments>
<msg timestamp="20170915 10:38:55.732" level="INFO">Executing : Table Must Exist  |  groups </msg>
<msg timestamp="20170915 10:38:55.732" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='groups' </msg>
<status status="PASS" endtime="20170915 10:38:55.734" starttime="20170915 10:38:55.732"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups_history</arg>
</arguments>
<msg timestamp="20170915 10:38:55.734" level="INFO">Executing : Table Must Exist  |  groups_history </msg>
<msg timestamp="20170915 10:38:55.734" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='groups_history' </msg>
<status status="PASS" endtime="20170915 10:38:55.735" starttime="20170915 10:38:55.734"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts</arg>
</arguments>
<msg timestamp="20170915 10:38:55.735" level="INFO">Executing : Table Must Exist  |  hosts </msg>
<msg timestamp="20170915 10:38:55.735" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='hosts' </msg>
<status status="PASS" endtime="20170915 10:38:55.736" starttime="20170915 10:38:55.735"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts_history</arg>
</arguments>
<msg timestamp="20170915 10:38:55.736" level="INFO">Executing : Table Must Exist  |  hosts_history </msg>
<msg timestamp="20170915 10:38:55.736" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='hosts_history' </msg>
<status status="PASS" endtime="20170915 10:38:55.737" starttime="20170915 10:38:55.736"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships</arg>
</arguments>
<msg timestamp="20170915 10:38:55.737" level="INFO">Executing : Table Must Exist  |  memberships </msg>
<msg timestamp="20170915 10:38:55.737" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='memberships' </msg>
<status status="PASS" endtime="20170915 10:38:55.738" starttime="20170915 10:38:55.737"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships_history</arg>
</arguments>
<msg timestamp="20170915 10:38:55.738" level="INFO">Executing : Table Must Exist  |  memberships_history </msg>
<msg timestamp="20170915 10:38:55.738" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='memberships_history' </msg>
<status status="PASS" endtime="20170915 10:38:55.739" starttime="20170915 10:38:55.738"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>oses</arg>
</arguments>
<msg timestamp="20170915 10:38:55.739" level="INFO">Executing : Table Must Exist  |  oses </msg>
<msg timestamp="20170915 10:38:55.739" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='oses' </msg>
<status status="PASS" endtime="20170915 10:38:55.740" starttime="20170915 10:38:55.739"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>packageTypes</arg>
</arguments>
<msg timestamp="20170915 10:38:55.740" level="INFO">Executing : Table Must Exist  |  packageTypes </msg>
<msg timestamp="20170915 10:38:55.740" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='packageTypes' </msg>
<status status="PASS" endtime="20170915 10:38:55.741" starttime="20170915 10:38:55.740"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions</arg>
</arguments>
<msg timestamp="20170915 10:38:55.741" level="INFO">Executing : Table Must Exist  |  sessions </msg>
<msg timestamp="20170915 10:38:55.741" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sessions' </msg>
<status status="PASS" endtime="20170915 10:38:55.742" starttime="20170915 10:38:55.741"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions_history</arg>
</arguments>
<msg timestamp="20170915 10:38:55.742" level="INFO">Executing : Table Must Exist  |  sessions_history </msg>
<msg timestamp="20170915 10:38:55.742" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sessions_history' </msg>
<status status="PASS" endtime="20170915 10:38:55.743" starttime="20170915 10:38:55.742"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes</arg>
</arguments>
<msg timestamp="20170915 10:38:55.743" level="INFO">Executing : Table Must Exist  |  sharedAppTypes </msg>
<msg timestamp="20170915 10:38:55.743" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedAppTypes' </msg>
<status status="PASS" endtime="20170915 10:38:55.744" starttime="20170915 10:38:55.743"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes_history</arg>
</arguments>
<msg timestamp="20170915 10:38:55.744" level="INFO">Executing : Table Must Exist  |  sharedAppTypes_history </msg>
<msg timestamp="20170915 10:38:55.744" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedAppTypes_history' </msg>
<status status="PASS" endtime="20170915 10:38:55.745" starttime="20170915 10:38:55.744"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes</arg>
</arguments>
<msg timestamp="20170915 10:38:55.745" level="INFO">Executing : Table Must Exist  |  sharedPackageTypes </msg>
<msg timestamp="20170915 10:38:55.745" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedPackageTypes' </msg>
<status status="PASS" endtime="20170915 10:38:55.746" starttime="20170915 10:38:55.745"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes_history</arg>
</arguments>
<msg timestamp="20170915 10:38:55.746" level="INFO">Executing : Table Must Exist  |  sharedPackageTypes_history </msg>
<msg timestamp="20170915 10:38:55.746" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedPackageTypes_history' </msg>
<status status="PASS" endtime="20170915 10:38:55.747" starttime="20170915 10:38:55.746"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>statuses</arg>
</arguments>
<msg timestamp="20170915 10:38:55.747" level="INFO">Executing : Table Must Exist  |  statuses </msg>
<msg timestamp="20170915 10:38:55.747" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='statuses' </msg>
<status status="PASS" endtime="20170915 10:38:55.748" starttime="20170915 10:38:55.747"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks</arg>
</arguments>
<msg timestamp="20170915 10:38:55.748" level="INFO">Executing : Table Must Exist  |  tasks </msg>
<msg timestamp="20170915 10:38:55.748" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='tasks' </msg>
<status status="PASS" endtime="20170915 10:38:55.749" starttime="20170915 10:38:55.748"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks_history</arg>
</arguments>
<msg timestamp="20170915 10:38:55.749" level="INFO">Executing : Table Must Exist  |  tasks_history </msg>
<msg timestamp="20170915 10:38:55.749" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='tasks_history' </msg>
<status status="PASS" endtime="20170915 10:38:55.750" starttime="20170915 10:38:55.749"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces</arg>
</arguments>
<msg timestamp="20170915 10:38:55.750" level="INFO">Executing : Table Must Exist  |  traces </msg>
<msg timestamp="20170915 10:38:55.750" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='traces' </msg>
<status status="PASS" endtime="20170915 10:38:55.751" starttime="20170915 10:38:55.750"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces_history</arg>
</arguments>
<msg timestamp="20170915 10:38:55.751" level="INFO">Executing : Table Must Exist  |  traces_history </msg>
<msg timestamp="20170915 10:38:55.751" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='traces_history' </msg>
<status status="PASS" endtime="20170915 10:38:55.752" starttime="20170915 10:38:55.751"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>userRights</arg>
</arguments>
<msg timestamp="20170915 10:38:55.752" level="INFO">Executing : Table Must Exist  |  userRights </msg>
<msg timestamp="20170915 10:38:55.752" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='userRights' </msg>
<status status="PASS" endtime="20170915 10:38:55.753" starttime="20170915 10:38:55.752"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups</arg>
</arguments>
<msg timestamp="20170915 10:38:55.753" level="INFO">Executing : Table Must Exist  |  usergroups </msg>
<msg timestamp="20170915 10:38:55.753" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='usergroups' </msg>
<status status="PASS" endtime="20170915 10:38:55.754" starttime="20170915 10:38:55.753"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups_history</arg>
</arguments>
<msg timestamp="20170915 10:38:55.754" level="INFO">Executing : Table Must Exist  |  usergroups_history </msg>
<msg timestamp="20170915 10:38:55.754" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='usergroups_history' </msg>
<status status="PASS" endtime="20170915 10:38:55.755" starttime="20170915 10:38:55.754"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users</arg>
</arguments>
<msg timestamp="20170915 10:38:55.755" level="INFO">Executing : Table Must Exist  |  users </msg>
<msg timestamp="20170915 10:38:55.755" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='users' </msg>
<status status="PASS" endtime="20170915 10:38:55.756" starttime="20170915 10:38:55.755"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users_history</arg>
</arguments>
<msg timestamp="20170915 10:38:55.756" level="INFO">Executing : Table Must Exist  |  users_history </msg>
<msg timestamp="20170915 10:38:55.756" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='users_history' </msg>
<status status="PASS" endtime="20170915 10:38:55.757" starttime="20170915 10:38:55.756"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>version</arg>
</arguments>
<msg timestamp="20170915 10:38:55.757" level="INFO">Executing : Table Must Exist  |  version </msg>
<msg timestamp="20170915 10:38:55.757" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='version' </msg>
<status status="PASS" endtime="20170915 10:38:55.758" starttime="20170915 10:38:55.757"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>versions</arg>
</arguments>
<msg timestamp="20170915 10:38:55.758" level="INFO">Executing : Table Must Exist  |  versions </msg>
<msg timestamp="20170915 10:38:55.758" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='versions' </msg>
<status status="PASS" endtime="20170915 10:38:55.759" starttime="20170915 10:38:55.758"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps</arg>
</arguments>
<msg timestamp="20170915 10:38:55.759" level="INFO">Executing : Table Must Exist  |  view_apps </msg>
<msg timestamp="20170915 10:38:55.759" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps' </msg>
<status status="PASS" endtime="20170915 10:38:55.760" starttime="20170915 10:38:55.759"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps_for_offering</arg>
</arguments>
<msg timestamp="20170915 10:38:55.760" level="INFO">Executing : Table Must Exist  |  view_apps_for_offering </msg>
<msg timestamp="20170915 10:38:55.760" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps_for_offering' </msg>
<status status="PASS" endtime="20170915 10:38:55.761" starttime="20170915 10:38:55.760"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps_for_offering_with_file_sizes</arg>
</arguments>
<msg timestamp="20170915 10:38:55.761" level="INFO">Executing : Table Must Exist  |  view_apps_for_offering_with_file_sizes </msg>
<msg timestamp="20170915 10:38:55.761" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps_for_offering_with_file_sizes' </msg>
<status status="PASS" endtime="20170915 10:38:55.762" starttime="20170915 10:38:55.761"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_datas</arg>
</arguments>
<msg timestamp="20170915 10:38:55.762" level="INFO">Executing : Table Must Exist  |  view_datas </msg>
<msg timestamp="20170915 10:38:55.762" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_datas' </msg>
<status status="PASS" endtime="20170915 10:38:55.763" starttime="20170915 10:38:55.762"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_executables</arg>
</arguments>
<msg timestamp="20170915 10:38:55.763" level="INFO">Executing : Table Must Exist  |  view_executables </msg>
<msg timestamp="20170915 10:38:55.763" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_executables' </msg>
<status status="PASS" endtime="20170915 10:38:55.764" starttime="20170915 10:38:55.763"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_groups</arg>
</arguments>
<msg timestamp="20170915 10:38:55.764" level="INFO">Executing : Table Must Exist  |  view_groups </msg>
<msg timestamp="20170915 10:38:55.764" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_groups' </msg>
<status status="PASS" endtime="20170915 10:38:55.765" starttime="20170915 10:38:55.764"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts</arg>
</arguments>
<msg timestamp="20170915 10:38:55.765" level="INFO">Executing : Table Must Exist  |  view_hosts </msg>
<msg timestamp="20170915 10:38:55.765" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts' </msg>
<status status="PASS" endtime="20170915 10:38:55.766" starttime="20170915 10:38:55.765"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_deployable</arg>
</arguments>
<msg timestamp="20170915 10:38:55.766" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_deployable </msg>
<msg timestamp="20170915 10:38:55.766" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_deployable' </msg>
<status status="PASS" endtime="20170915 10:38:55.767" starttime="20170915 10:38:55.766"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_deployable_and_shared</arg>
</arguments>
<msg timestamp="20170915 10:38:55.767" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_deployable_and_shared </msg>
<msg timestamp="20170915 10:38:55.767" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_deployable_and_shared' </msg>
<status status="PASS" endtime="20170915 10:38:55.768" starttime="20170915 10:38:55.767"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_shared</arg>
</arguments>
<msg timestamp="20170915 10:38:55.768" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_shared </msg>
<msg timestamp="20170915 10:38:55.768" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_shared' </msg>
<status status="PASS" endtime="20170915 10:38:55.769" starttime="20170915 10:38:55.768"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_sessions</arg>
</arguments>
<msg timestamp="20170915 10:38:55.769" level="INFO">Executing : Table Must Exist  |  view_sessions </msg>
<msg timestamp="20170915 10:38:55.769" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_sessions' </msg>
<status status="PASS" endtime="20170915 10:38:55.770" starttime="20170915 10:38:55.769"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_tasks</arg>
</arguments>
<msg timestamp="20170915 10:38:55.770" level="INFO">Executing : Table Must Exist  |  view_tasks </msg>
<msg timestamp="20170915 10:38:55.770" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_tasks' </msg>
<status status="PASS" endtime="20170915 10:38:55.771" starttime="20170915 10:38:55.770"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_traces</arg>
</arguments>
<msg timestamp="20170915 10:38:55.771" level="INFO">Executing : Table Must Exist  |  view_traces </msg>
<msg timestamp="20170915 10:38:55.771" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_traces' </msg>
<status status="PASS" endtime="20170915 10:38:55.772" starttime="20170915 10:38:55.771"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_usergroups</arg>
</arguments>
<msg timestamp="20170915 10:38:55.772" level="INFO">Executing : Table Must Exist  |  view_usergroups </msg>
<msg timestamp="20170915 10:38:55.772" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_usergroups' </msg>
<status status="PASS" endtime="20170915 10:38:55.773" starttime="20170915 10:38:55.772"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users</arg>
</arguments>
<msg timestamp="20170915 10:38:55.773" level="INFO">Executing : Table Must Exist  |  view_users </msg>
<msg timestamp="20170915 10:38:55.773" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users' </msg>
<status status="PASS" endtime="20170915 10:38:55.774" starttime="20170915 10:38:55.773"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_apps</arg>
</arguments>
<msg timestamp="20170915 10:38:55.774" level="INFO">Executing : Table Must Exist  |  view_users_apps </msg>
<msg timestamp="20170915 10:38:55.774" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_apps' </msg>
<status status="PASS" endtime="20170915 10:38:55.775" starttime="20170915 10:38:55.774"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_datas</arg>
</arguments>
<msg timestamp="20170915 10:38:55.775" level="INFO">Executing : Table Must Exist  |  view_users_datas </msg>
<msg timestamp="20170915 10:38:55.775" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_datas' </msg>
<status status="PASS" endtime="20170915 10:38:55.776" starttime="20170915 10:38:55.775"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_groups</arg>
</arguments>
<msg timestamp="20170915 10:38:55.776" level="INFO">Executing : Table Must Exist  |  view_users_groups </msg>
<msg timestamp="20170915 10:38:55.776" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_groups' </msg>
<status status="PASS" endtime="20170915 10:38:55.777" starttime="20170915 10:38:55.776"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_hosts</arg>
</arguments>
<msg timestamp="20170915 10:38:55.777" level="INFO">Executing : Table Must Exist  |  view_users_hosts </msg>
<msg timestamp="20170915 10:38:55.777" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_hosts' </msg>
<status status="PASS" endtime="20170915 10:38:55.778" starttime="20170915 10:38:55.777"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_sessions</arg>
</arguments>
<msg timestamp="20170915 10:38:55.778" level="INFO">Executing : Table Must Exist  |  view_users_sessions </msg>
<msg timestamp="20170915 10:38:55.778" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_sessions' </msg>
<status status="PASS" endtime="20170915 10:38:55.779" starttime="20170915 10:38:55.778"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_tasks</arg>
</arguments>
<msg timestamp="20170915 10:38:55.779" level="INFO">Executing : Table Must Exist  |  view_users_tasks </msg>
<msg timestamp="20170915 10:38:55.779" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_tasks' </msg>
<status status="PASS" endtime="20170915 10:38:55.780" starttime="20170915 10:38:55.779"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_traces</arg>
</arguments>
<msg timestamp="20170915 10:38:55.780" level="INFO">Executing : Table Must Exist  |  view_users_traces </msg>
<msg timestamp="20170915 10:38:55.780" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_traces' </msg>
<status status="PASS" endtime="20170915 10:38:55.781" starttime="20170915 10:38:55.780"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_usergroups</arg>
</arguments>
<msg timestamp="20170915 10:38:55.781" level="INFO">Executing : Table Must Exist  |  view_users_usergroups </msg>
<msg timestamp="20170915 10:38:55.781" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_usergroups' </msg>
<status status="PASS" endtime="20170915 10:38:55.782" starttime="20170915 10:38:55.781"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_users</arg>
</arguments>
<msg timestamp="20170915 10:38:55.782" level="INFO">Executing : Table Must Exist  |  view_users_users </msg>
<msg timestamp="20170915 10:38:55.782" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_users' </msg>
<status status="PASS" endtime="20170915 10:38:55.783" starttime="20170915 10:38:55.782"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_works</arg>
</arguments>
<msg timestamp="20170915 10:38:55.783" level="INFO">Executing : Table Must Exist  |  view_users_works </msg>
<msg timestamp="20170915 10:38:55.783" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_works' </msg>
<status status="PASS" endtime="20170915 10:38:55.784" starttime="20170915 10:38:55.783"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works</arg>
</arguments>
<msg timestamp="20170915 10:38:55.785" level="INFO">Executing : Table Must Exist  |  view_works </msg>
<msg timestamp="20170915 10:38:55.785" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works' </msg>
<status status="PASS" endtime="20170915 10:38:55.786" starttime="20170915 10:38:55.784"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works_for_billing</arg>
</arguments>
<msg timestamp="20170915 10:38:55.787" level="INFO">Executing : Table Must Exist  |  view_works_for_billing </msg>
<msg timestamp="20170915 10:38:55.787" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works_for_billing' </msg>
<status status="PASS" endtime="20170915 10:38:55.787" starttime="20170915 10:38:55.786"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works_for_billing_with_file_sizes</arg>
</arguments>
<msg timestamp="20170915 10:38:55.787" level="INFO">Executing : Table Must Exist  |  view_works_for_billing_with_file_sizes </msg>
<msg timestamp="20170915 10:38:55.788" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works_for_billing_with_file_sizes' </msg>
<status status="PASS" endtime="20170915 10:38:55.788" starttime="20170915 10:38:55.787"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works</arg>
</arguments>
<msg timestamp="20170915 10:38:55.788" level="INFO">Executing : Table Must Exist  |  works </msg>
<msg timestamp="20170915 10:38:55.788" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='works' </msg>
<status status="PASS" endtime="20170915 10:38:55.789" starttime="20170915 10:38:55.788"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works_history</arg>
</arguments>
<msg timestamp="20170915 10:38:55.789" level="INFO">Executing : Table Must Exist  |  works_history </msg>
<msg timestamp="20170915 10:38:55.789" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='works_history' </msg>
<status status="PASS" endtime="20170915 10:38:55.790" starttime="20170915 10:38:55.789"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170915 10:38:55.790" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170915 10:38:55.791" starttime="20170915 10:38:55.790"></status>
</kw>
<status status="PASS" endtime="20170915 10:38:55.791" starttime="20170915 10:38:55.790"></status>
</kw>
<status status="PASS" endtime="20170915 10:38:55.791" starttime="20170915 10:38:55.721"></status>
</kw>
<status status="PASS" endtime="20170915 10:38:55.791" starttime="20170915 10:38:55.720"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>TODO ping XWtremWeb server up</arg>
</arguments>
<msg timestamp="20170915 10:38:55.791" level="INFO">TODO ping XWtremWeb server up</msg>
<status status="PASS" endtime="20170915 10:38:55.791" starttime="20170915 10:38:55.791"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>TODO ping XWtremWeb worker up before one test</arg>
</arguments>
<msg timestamp="20170915 10:38:55.791" level="INFO">TODO ping XWtremWeb worker up before one test</msg>
<status status="PASS" endtime="20170915 10:38:55.791" starttime="20170915 10:38:55.791"></status>
</kw>
<kw name="Delete Fonctionnal Xtremweb Tables" library="MySql">
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170915 10:38:55.792" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170915 10:38:55.793" starttime="20170915 10:38:55.792"></status>
</kw>
<status status="PASS" endtime="20170915 10:38:55.793" starttime="20170915 10:38:55.792"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps</arg>
</arguments>
<msg timestamp="20170915 10:38:55.793" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM apps; </msg>
<status status="PASS" endtime="20170915 10:38:55.798" starttime="20170915 10:38:55.793"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps_history</arg>
</arguments>
<msg timestamp="20170915 10:38:55.799" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM apps_history; </msg>
<status status="PASS" endtime="20170915 10:38:55.799" starttime="20170915 10:38:55.798"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas</arg>
</arguments>
<msg timestamp="20170915 10:38:55.799" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM datas; </msg>
<status status="PASS" endtime="20170915 10:38:55.800" starttime="20170915 10:38:55.799"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas_history</arg>
</arguments>
<msg timestamp="20170915 10:38:55.800" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM datas_history; </msg>
<status status="PASS" endtime="20170915 10:38:55.801" starttime="20170915 10:38:55.800"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables</arg>
</arguments>
<msg timestamp="20170915 10:38:55.801" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM executables; </msg>
<status status="PASS" endtime="20170915 10:38:55.801" starttime="20170915 10:38:55.801"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables_history</arg>
</arguments>
<msg timestamp="20170915 10:38:55.802" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM executables_history; </msg>
<status status="PASS" endtime="20170915 10:38:55.802" starttime="20170915 10:38:55.802"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups</arg>
</arguments>
<msg timestamp="20170915 10:38:55.802" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM groups; </msg>
<status status="PASS" endtime="20170915 10:38:55.803" starttime="20170915 10:38:55.802"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups_history</arg>
</arguments>
<msg timestamp="20170915 10:38:55.803" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM groups_history; </msg>
<status status="PASS" endtime="20170915 10:38:55.803" starttime="20170915 10:38:55.803"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts</arg>
</arguments>
<msg timestamp="20170915 10:38:55.803" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM hosts; </msg>
<status status="PASS" endtime="20170915 10:38:55.804" starttime="20170915 10:38:55.803"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts_history</arg>
</arguments>
<msg timestamp="20170915 10:38:55.804" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM hosts_history; </msg>
<status status="PASS" endtime="20170915 10:38:55.804" starttime="20170915 10:38:55.804"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships</arg>
</arguments>
<msg timestamp="20170915 10:38:55.805" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM memberships; </msg>
<status status="PASS" endtime="20170915 10:38:55.805" starttime="20170915 10:38:55.804"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships_history</arg>
</arguments>
<msg timestamp="20170915 10:38:55.805" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM memberships_history; </msg>
<status status="PASS" endtime="20170915 10:38:55.805" starttime="20170915 10:38:55.805"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions</arg>
</arguments>
<msg timestamp="20170915 10:38:55.806" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sessions; </msg>
<status status="PASS" endtime="20170915 10:38:55.806" starttime="20170915 10:38:55.805"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions_history</arg>
</arguments>
<msg timestamp="20170915 10:38:55.806" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sessions_history; </msg>
<status status="PASS" endtime="20170915 10:38:55.806" starttime="20170915 10:38:55.806"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes</arg>
</arguments>
<msg timestamp="20170915 10:38:55.807" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedAppTypes; </msg>
<status status="PASS" endtime="20170915 10:38:55.807" starttime="20170915 10:38:55.807"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes_history</arg>
</arguments>
<msg timestamp="20170915 10:38:55.807" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedAppTypes_history; </msg>
<status status="PASS" endtime="20170915 10:38:55.808" starttime="20170915 10:38:55.807"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes</arg>
</arguments>
<msg timestamp="20170915 10:38:55.808" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedPackageTypes; </msg>
<status status="PASS" endtime="20170915 10:38:55.808" starttime="20170915 10:38:55.808"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes_history</arg>
</arguments>
<msg timestamp="20170915 10:38:55.809" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedPackageTypes_history; </msg>
<status status="PASS" endtime="20170915 10:38:55.809" starttime="20170915 10:38:55.808"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks</arg>
</arguments>
<msg timestamp="20170915 10:38:55.809" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM tasks; </msg>
<status status="PASS" endtime="20170915 10:38:55.809" starttime="20170915 10:38:55.809"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks_history</arg>
</arguments>
<msg timestamp="20170915 10:38:55.810" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM tasks_history; </msg>
<status status="PASS" endtime="20170915 10:38:55.810" starttime="20170915 10:38:55.809"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces</arg>
</arguments>
<msg timestamp="20170915 10:38:55.810" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM traces; </msg>
<status status="PASS" endtime="20170915 10:38:55.810" starttime="20170915 10:38:55.810"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces_history</arg>
</arguments>
<msg timestamp="20170915 10:38:55.811" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM traces_history; </msg>
<status status="PASS" endtime="20170915 10:38:55.811" starttime="20170915 10:38:55.811"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups</arg>
</arguments>
<msg timestamp="20170915 10:38:55.811" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM usergroups; </msg>
<status status="PASS" endtime="20170915 10:38:55.811" starttime="20170915 10:38:55.811"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups_history</arg>
</arguments>
<msg timestamp="20170915 10:38:55.812" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM usergroups_history; </msg>
<status status="PASS" endtime="20170915 10:38:55.812" starttime="20170915 10:38:55.812"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users_history</arg>
</arguments>
<msg timestamp="20170915 10:38:55.812" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM users_history; </msg>
<status status="PASS" endtime="20170915 10:38:55.813" starttime="20170915 10:38:55.812"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works</arg>
</arguments>
<msg timestamp="20170915 10:38:55.813" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM works; </msg>
<status status="PASS" endtime="20170915 10:38:55.813" starttime="20170915 10:38:55.813"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works_history</arg>
</arguments>
<msg timestamp="20170915 10:38:55.813" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM works_history; </msg>
<status status="PASS" endtime="20170915 10:38:55.814" starttime="20170915 10:38:55.813"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170915 10:38:55.814" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170915 10:38:55.814" starttime="20170915 10:38:55.814"></status>
</kw>
<status status="PASS" endtime="20170915 10:38:55.814" starttime="20170915 10:38:55.814"></status>
</kw>
<status status="PASS" endtime="20170915 10:38:55.814" starttime="20170915 10:38:55.791"></status>
</kw>
<kw name="Stop XWtremWeb Server And XWtremWeb Worker" library="XWCommon">
<kw name="Stop XtremWeb Server" library="XWServer">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${SERVER_PROCESS}</arg>
</arguments>
<msg timestamp="20170915 10:38:55.815" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20170915 10:38:55.919" level="INFO">Process completed.</msg>
<status status="PASS" endtime="20170915 10:38:55.919" starttime="20170915 10:38:55.815"></status>
</kw>
<status status="PASS" endtime="20170915 10:38:55.920" starttime="20170915 10:38:55.815"></status>
</kw>
<kw name="Log XtremWeb Server" library="XWCommon">
<kw name="Log XtremWeb Process Log File" library="XWServer">
<kw name="Log File" library="OperatingSystem">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<msg timestamp="20170915 10:38:55.921" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170915 10:38:55.922" level="INFO">Fri Sep 15 10:38:49 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : checking launch url
Fri Sep 15 10:38:49 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] WARNING : no launcher URL defined
Fri Sep 15 10:38:49 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : launching SmartSockets hub
[15/Sep/2017:10:38:51 +0000] [main_1] ERROR : setRole : role redefined ?! (was SERVER)
[15/Sep/2017:10:38:52 +0000] [xtremweb.database.DBConnPoolThread_main_1] INFO : Connection to database jdbc:mysql://localhost/xtremweb is ok, 70 created
[15/Sep/2017:10:38:52 +0000] [xtremweb.dispatcher.DBInterface_main_1] WARN : Can't retrieve any app
[15/Sep/2017:10:38:52 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't create ProxyValidator
[15/Sep/2017:10:38:52 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.io.FileNotFoundException: /tmp/castore (No such file or directory) (/tmp/castore (No such file or directory))
[15/Sep/2017:10:38:52 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't add CA certificates to keystore
[15/Sep/2017:10:38:52 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.lang.NullPointerException (null)
[15/Sep/2017:10:38:52 +0000] [xtremweb.dispatcher.HashTaskSet_TaskSet_14] INFO : TaskSet started (300000)
[15/Sep/2017:10:38:53 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : still waiting task set...
[15/Sep/2017:10:38:53 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : UDP server not started
[15/Sep/2017:10:38:53 +0000] [xtremweb.communications.TCPServer_TCPServerNIO_15] INFO : started, listening on port : 4321
log4j:WARN No appenders could be found for logger (org.eclipse.jetty.util.log).
log4j:WARN Please initialize the log4j system properly.
log4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.
[15/Sep/2017:10:38:53 +0000] [xtremweb.communications.HTTPServer_main_1] INFO : started, listening on port : 9443
[15/Sep/2017:10:38:53 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : FACEBOOK : java.net.MalformedURLException: no protocol: 
[15/Sep/2017:10:38:53 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : GOOGLE : java.net.MalformedURLException: no protocol: 
[15/Sep/2017:10:38:53 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : TWITTER : java.net.MalformedURLException: no protocol: 
[15/Sep/2017:10:38:53 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : YAHOO : java.net.MalformedURLException: no protocol: 
[15/Sep/2017:10:38:53 +0000] [main_1] ERROR : Can't add new entry to keystore
[15/Sep/2017:10:38:53 +0000] [main_1] WARN : javax.net.ssl.SSLHandshakeException: sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target (sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target)
[15/Sep/2017:10:38:53 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : XWHEP Dispatcher(10.6.0-head) started [Fri Sep 15 10:38:53 UTC 2017]
[15/Sep/2017:10:38:53 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : DB vendor  = mysql
[15/Sep/2017:10:38:53 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : mileStone  = 
[15/Sep/2017:10:38:53 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Time out   = 15000
[15/Sep/2017:10:38:53 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Disk opt'd = true
[15/Sep/2017:10:38:53 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Net  opt'd = true
[15/Sep/2017:10:38:53 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : NIO        = true
XWHEP Dispatcher started  Fri Sep 15 10:38:53 UTC 2017
Name             : vagrant-ubuntu-trusty-64
Version          : 10.6.0-head
Identity         : 
XWRole           : SERVER
Started on       : Fri Sep 15 10:38:51 UTC 2017
Scheduler        : xtremweb.dispatcher.MatchingScheduler
SmartSockets hub : 172.28.128.3/172.17.0.1/10.0.2.15-4329#72.5b.f5.3a.cd.7c.00.00.1d.b4.02.42.02.6c.0f.e2~vagrant
Server HTTP      : true
Alive            : 300
Alive time out   : 900
Polling time out : 15000
Optimize zip     : true
Optimize network : true
NIO              : true
Comm layer       : xtremweb.communications.TCPClient
Socket time out  : 60000
Socket retries   : 50
Max connections  : 200
TCP port         : 4321
UDP port         : 4323
HTPP  port       : 80
HTPPS port       : 9443
Sun RPC interposition port : 4328
Sandbox path : /usr/bin/lxc
Sandbox launch args : 
Host &lt;host&gt;&lt;uid&gt;2e1c8654-0803-4582-a1e3-bdff68a423fb&lt;/uid&gt;&lt;accessrights&gt;0x755&lt;/accessrights&gt;&lt;name&gt;vagrant-ubuntu-trusty-64&lt;/name&gt;&lt;cpuload&gt;50&lt;/cpuload&gt;&lt;natedipaddr&gt;10.0.2.15&lt;/natedipaddr&gt;&lt;ipaddr&gt;10.0.2.15&lt;/ipaddr&gt;&lt;hwaddr&gt;&lt;/hwaddr&gt;&lt;timezone&gt;Etc/UTC&lt;/timezone&gt;&lt;os&gt;LINUX&lt;/os&gt;&lt;osversion&gt;3.13.0-129-generic&lt;/osversion&gt;&lt;javaversion&gt;1.8.0_141&lt;/javaversion&gt;&lt;javadatamodel&gt;64&lt;/javadatamodel&gt;&lt;cputype&gt;AMD64&lt;/cputype&gt;&lt;cpunb&gt;1&lt;/cpunb&gt;&lt;cpumodel&gt;unknown&lt;/cpumodel&gt;&lt;cpuspeed&gt;0&lt;/cpuspeed&gt;&lt;totalmem&gt;0&lt;/totalmem&gt;&lt;totalswap&gt;0&lt;/totalswap&gt;&lt;totaltmp&gt;40284&lt;/totaltmp&gt;&lt;freetmp&gt;37249&lt;/freetmp&gt;&lt;project&gt;&lt;/project&gt;&lt;active&gt;true&lt;/active&gt;&lt;incomingconnections&gt;false&lt;/incomingconnections&gt;&lt;available&gt;false&lt;/available&gt;&lt;pilotjob&gt;false&lt;/pilotjob&gt;&lt;sgid&gt;&lt;/sgid&gt;&lt;timeout&gt;15000&lt;/timeout&gt;&lt;traces&gt;false&lt;/traces&gt;&lt;acceptbin&gt;false&lt;/acceptbin&gt;&lt;version&gt;10.6.0-head&lt;/version&gt;&lt;/host&gt;
[15/Sep/2017:10:38:53 +0000] [xtremweb.communications.HTTPServer_HTTPServer_218] INFO : started, listening on port : 9443
[15/Sep/2017:10:38:55 +0000] [xtremweb.common.StreamIO_TCPHandler_18] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[15/Sep/2017:10:38:55 +0000] [xtremweb.common.StreamIO_TCPHandler_17] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[15/Sep/2017:10:38:55 +0000] [xtremweb.communications.TCPServer_TCPServerNIO_15] WARN : java.net.SocketException: Socket closed (Socket closed)
</msg>
<status status="PASS" endtime="20170915 10:38:55.922" starttime="20170915 10:38:55.921"></status>
</kw>
<status status="PASS" endtime="20170915 10:38:55.922" starttime="20170915 10:38:55.920"></status>
</kw>
<status status="PASS" endtime="20170915 10:38:55.923" starttime="20170915 10:38:55.920"></status>
</kw>
<kw name="Stop XtremWeb Worker" library="XWWorker">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Stop XtremWeb Worker</arg>
</arguments>
<msg timestamp="20170915 10:38:55.923" level="INFO">Stop XtremWeb Worker</msg>
<status status="PASS" endtime="20170915 10:38:55.923" starttime="20170915 10:38:55.923"></status>
</kw>
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${WORKER_PROCESS}</arg>
</arguments>
<msg timestamp="20170915 10:38:55.924" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20170915 10:38:55.924" level="INFO">Process completed.</msg>
<status status="PASS" endtime="20170915 10:38:55.924" starttime="20170915 10:38:55.923"></status>
</kw>
<status status="PASS" endtime="20170915 10:38:55.924" starttime="20170915 10:38:55.923"></status>
</kw>
<status status="PASS" endtime="20170915 10:38:55.924" starttime="20170915 10:38:55.815"></status>
</kw>
<kw name="Start XWtremWeb Server And XWtremWeb Worker" library="XWCommon">
<kw name="Ping XWtremWeb Database" library="XWServer">
<kw name="Xtremweb Tables Must Exist" library="MySql">
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170915 10:38:55.926" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170915 10:38:55.927" starttime="20170915 10:38:55.926"></status>
</kw>
<status status="PASS" endtime="20170915 10:38:55.928" starttime="20170915 10:38:55.926"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>appTypes</arg>
</arguments>
<msg timestamp="20170915 10:38:55.928" level="INFO">Executing : Table Must Exist  |  appTypes </msg>
<msg timestamp="20170915 10:38:55.928" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='appTypes' </msg>
<status status="PASS" endtime="20170915 10:38:55.929" starttime="20170915 10:38:55.928"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps</arg>
</arguments>
<msg timestamp="20170915 10:38:55.930" level="INFO">Executing : Table Must Exist  |  apps </msg>
<msg timestamp="20170915 10:38:55.930" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='apps' </msg>
<status status="PASS" endtime="20170915 10:38:55.931" starttime="20170915 10:38:55.930"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps_history</arg>
</arguments>
<msg timestamp="20170915 10:38:55.931" level="INFO">Executing : Table Must Exist  |  apps_history </msg>
<msg timestamp="20170915 10:38:55.931" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='apps_history' </msg>
<status status="PASS" endtime="20170915 10:38:55.932" starttime="20170915 10:38:55.931"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>cpuTypes</arg>
</arguments>
<msg timestamp="20170915 10:38:55.933" level="INFO">Executing : Table Must Exist  |  cpuTypes </msg>
<msg timestamp="20170915 10:38:55.933" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='cpuTypes' </msg>
<status status="PASS" endtime="20170915 10:38:55.934" starttime="20170915 10:38:55.933"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>dataTypes</arg>
</arguments>
<msg timestamp="20170915 10:38:55.934" level="INFO">Executing : Table Must Exist  |  dataTypes </msg>
<msg timestamp="20170915 10:38:55.934" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='dataTypes' </msg>
<status status="PASS" endtime="20170915 10:38:55.935" starttime="20170915 10:38:55.934"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas</arg>
</arguments>
<msg timestamp="20170915 10:38:55.935" level="INFO">Executing : Table Must Exist  |  datas </msg>
<msg timestamp="20170915 10:38:55.935" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='datas' </msg>
<status status="PASS" endtime="20170915 10:38:55.936" starttime="20170915 10:38:55.935"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas_history</arg>
</arguments>
<msg timestamp="20170915 10:38:55.937" level="INFO">Executing : Table Must Exist  |  datas_history </msg>
<msg timestamp="20170915 10:38:55.937" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='datas_history' </msg>
<status status="PASS" endtime="20170915 10:38:55.938" starttime="20170915 10:38:55.936"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables</arg>
</arguments>
<msg timestamp="20170915 10:38:55.938" level="INFO">Executing : Table Must Exist  |  executables </msg>
<msg timestamp="20170915 10:38:55.938" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='executables' </msg>
<status status="PASS" endtime="20170915 10:38:55.939" starttime="20170915 10:38:55.938"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables_history</arg>
</arguments>
<msg timestamp="20170915 10:38:55.939" level="INFO">Executing : Table Must Exist  |  executables_history </msg>
<msg timestamp="20170915 10:38:55.939" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='executables_history' </msg>
<status status="PASS" endtime="20170915 10:38:55.940" starttime="20170915 10:38:55.939"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups</arg>
</arguments>
<msg timestamp="20170915 10:38:55.940" level="INFO">Executing : Table Must Exist  |  groups </msg>
<msg timestamp="20170915 10:38:55.941" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='groups' </msg>
<status status="PASS" endtime="20170915 10:38:55.941" starttime="20170915 10:38:55.940"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups_history</arg>
</arguments>
<msg timestamp="20170915 10:38:55.941" level="INFO">Executing : Table Must Exist  |  groups_history </msg>
<msg timestamp="20170915 10:38:55.942" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='groups_history' </msg>
<status status="PASS" endtime="20170915 10:38:55.942" starttime="20170915 10:38:55.941"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts</arg>
</arguments>
<msg timestamp="20170915 10:38:55.943" level="INFO">Executing : Table Must Exist  |  hosts </msg>
<msg timestamp="20170915 10:38:55.943" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='hosts' </msg>
<status status="PASS" endtime="20170915 10:38:55.943" starttime="20170915 10:38:55.943"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts_history</arg>
</arguments>
<msg timestamp="20170915 10:38:55.944" level="INFO">Executing : Table Must Exist  |  hosts_history </msg>
<msg timestamp="20170915 10:38:55.944" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='hosts_history' </msg>
<status status="PASS" endtime="20170915 10:38:55.944" starttime="20170915 10:38:55.943"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships</arg>
</arguments>
<msg timestamp="20170915 10:38:55.944" level="INFO">Executing : Table Must Exist  |  memberships </msg>
<msg timestamp="20170915 10:38:55.944" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='memberships' </msg>
<status status="PASS" endtime="20170915 10:38:55.945" starttime="20170915 10:38:55.944"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships_history</arg>
</arguments>
<msg timestamp="20170915 10:38:55.945" level="INFO">Executing : Table Must Exist  |  memberships_history </msg>
<msg timestamp="20170915 10:38:55.945" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='memberships_history' </msg>
<status status="PASS" endtime="20170915 10:38:55.946" starttime="20170915 10:38:55.945"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>oses</arg>
</arguments>
<msg timestamp="20170915 10:38:55.946" level="INFO">Executing : Table Must Exist  |  oses </msg>
<msg timestamp="20170915 10:38:55.947" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='oses' </msg>
<status status="PASS" endtime="20170915 10:38:55.947" starttime="20170915 10:38:55.946"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>packageTypes</arg>
</arguments>
<msg timestamp="20170915 10:38:55.948" level="INFO">Executing : Table Must Exist  |  packageTypes </msg>
<msg timestamp="20170915 10:38:55.948" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='packageTypes' </msg>
<status status="PASS" endtime="20170915 10:38:55.948" starttime="20170915 10:38:55.947"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions</arg>
</arguments>
<msg timestamp="20170915 10:38:55.949" level="INFO">Executing : Table Must Exist  |  sessions </msg>
<msg timestamp="20170915 10:38:55.949" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sessions' </msg>
<status status="PASS" endtime="20170915 10:38:55.950" starttime="20170915 10:38:55.948"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions_history</arg>
</arguments>
<msg timestamp="20170915 10:38:55.950" level="INFO">Executing : Table Must Exist  |  sessions_history </msg>
<msg timestamp="20170915 10:38:55.951" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sessions_history' </msg>
<status status="PASS" endtime="20170915 10:38:55.951" starttime="20170915 10:38:55.950"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes</arg>
</arguments>
<msg timestamp="20170915 10:38:55.952" level="INFO">Executing : Table Must Exist  |  sharedAppTypes </msg>
<msg timestamp="20170915 10:38:55.952" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedAppTypes' </msg>
<status status="PASS" endtime="20170915 10:38:55.952" starttime="20170915 10:38:55.951"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes_history</arg>
</arguments>
<msg timestamp="20170915 10:38:55.952" level="INFO">Executing : Table Must Exist  |  sharedAppTypes_history </msg>
<msg timestamp="20170915 10:38:55.952" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedAppTypes_history' </msg>
<status status="PASS" endtime="20170915 10:38:55.953" starttime="20170915 10:38:55.952"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes</arg>
</arguments>
<msg timestamp="20170915 10:38:55.953" level="INFO">Executing : Table Must Exist  |  sharedPackageTypes </msg>
<msg timestamp="20170915 10:38:55.953" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedPackageTypes' </msg>
<status status="PASS" endtime="20170915 10:38:55.954" starttime="20170915 10:38:55.953"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes_history</arg>
</arguments>
<msg timestamp="20170915 10:38:55.954" level="INFO">Executing : Table Must Exist  |  sharedPackageTypes_history </msg>
<msg timestamp="20170915 10:38:55.954" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedPackageTypes_history' </msg>
<status status="PASS" endtime="20170915 10:38:55.955" starttime="20170915 10:38:55.954"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>statuses</arg>
</arguments>
<msg timestamp="20170915 10:38:55.955" level="INFO">Executing : Table Must Exist  |  statuses </msg>
<msg timestamp="20170915 10:38:55.955" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='statuses' </msg>
<status status="PASS" endtime="20170915 10:38:55.956" starttime="20170915 10:38:55.955"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks</arg>
</arguments>
<msg timestamp="20170915 10:38:55.956" level="INFO">Executing : Table Must Exist  |  tasks </msg>
<msg timestamp="20170915 10:38:55.956" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='tasks' </msg>
<status status="PASS" endtime="20170915 10:38:55.957" starttime="20170915 10:38:55.956"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks_history</arg>
</arguments>
<msg timestamp="20170915 10:38:55.957" level="INFO">Executing : Table Must Exist  |  tasks_history </msg>
<msg timestamp="20170915 10:38:55.957" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='tasks_history' </msg>
<status status="PASS" endtime="20170915 10:38:55.958" starttime="20170915 10:38:55.957"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces</arg>
</arguments>
<msg timestamp="20170915 10:38:55.958" level="INFO">Executing : Table Must Exist  |  traces </msg>
<msg timestamp="20170915 10:38:55.958" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='traces' </msg>
<status status="PASS" endtime="20170915 10:38:55.959" starttime="20170915 10:38:55.958"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces_history</arg>
</arguments>
<msg timestamp="20170915 10:38:55.959" level="INFO">Executing : Table Must Exist  |  traces_history </msg>
<msg timestamp="20170915 10:38:55.959" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='traces_history' </msg>
<status status="PASS" endtime="20170915 10:38:55.960" starttime="20170915 10:38:55.959"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>userRights</arg>
</arguments>
<msg timestamp="20170915 10:38:55.960" level="INFO">Executing : Table Must Exist  |  userRights </msg>
<msg timestamp="20170915 10:38:55.960" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='userRights' </msg>
<status status="PASS" endtime="20170915 10:38:55.961" starttime="20170915 10:38:55.960"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups</arg>
</arguments>
<msg timestamp="20170915 10:38:55.961" level="INFO">Executing : Table Must Exist  |  usergroups </msg>
<msg timestamp="20170915 10:38:55.961" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='usergroups' </msg>
<status status="PASS" endtime="20170915 10:38:55.961" starttime="20170915 10:38:55.961"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups_history</arg>
</arguments>
<msg timestamp="20170915 10:38:55.962" level="INFO">Executing : Table Must Exist  |  usergroups_history </msg>
<msg timestamp="20170915 10:38:55.962" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='usergroups_history' </msg>
<status status="PASS" endtime="20170915 10:38:55.963" starttime="20170915 10:38:55.961"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users</arg>
</arguments>
<msg timestamp="20170915 10:38:55.963" level="INFO">Executing : Table Must Exist  |  users </msg>
<msg timestamp="20170915 10:38:55.963" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='users' </msg>
<status status="PASS" endtime="20170915 10:38:55.964" starttime="20170915 10:38:55.963"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users_history</arg>
</arguments>
<msg timestamp="20170915 10:38:55.964" level="INFO">Executing : Table Must Exist  |  users_history </msg>
<msg timestamp="20170915 10:38:55.964" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='users_history' </msg>
<status status="PASS" endtime="20170915 10:38:55.965" starttime="20170915 10:38:55.964"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>version</arg>
</arguments>
<msg timestamp="20170915 10:38:55.965" level="INFO">Executing : Table Must Exist  |  version </msg>
<msg timestamp="20170915 10:38:55.965" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='version' </msg>
<status status="PASS" endtime="20170915 10:38:55.966" starttime="20170915 10:38:55.965"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>versions</arg>
</arguments>
<msg timestamp="20170915 10:38:55.966" level="INFO">Executing : Table Must Exist  |  versions </msg>
<msg timestamp="20170915 10:38:55.966" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='versions' </msg>
<status status="PASS" endtime="20170915 10:38:55.967" starttime="20170915 10:38:55.966"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps</arg>
</arguments>
<msg timestamp="20170915 10:38:55.967" level="INFO">Executing : Table Must Exist  |  view_apps </msg>
<msg timestamp="20170915 10:38:55.967" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps' </msg>
<status status="PASS" endtime="20170915 10:38:55.968" starttime="20170915 10:38:55.967"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps_for_offering</arg>
</arguments>
<msg timestamp="20170915 10:38:55.968" level="INFO">Executing : Table Must Exist  |  view_apps_for_offering </msg>
<msg timestamp="20170915 10:38:55.968" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps_for_offering' </msg>
<status status="PASS" endtime="20170915 10:38:55.969" starttime="20170915 10:38:55.968"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps_for_offering_with_file_sizes</arg>
</arguments>
<msg timestamp="20170915 10:38:55.969" level="INFO">Executing : Table Must Exist  |  view_apps_for_offering_with_file_sizes </msg>
<msg timestamp="20170915 10:38:55.969" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps_for_offering_with_file_sizes' </msg>
<status status="PASS" endtime="20170915 10:38:55.970" starttime="20170915 10:38:55.969"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_datas</arg>
</arguments>
<msg timestamp="20170915 10:38:55.971" level="INFO">Executing : Table Must Exist  |  view_datas </msg>
<msg timestamp="20170915 10:38:55.971" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_datas' </msg>
<status status="PASS" endtime="20170915 10:38:55.972" starttime="20170915 10:38:55.970"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_executables</arg>
</arguments>
<msg timestamp="20170915 10:38:55.972" level="INFO">Executing : Table Must Exist  |  view_executables </msg>
<msg timestamp="20170915 10:38:55.972" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_executables' </msg>
<status status="PASS" endtime="20170915 10:38:55.973" starttime="20170915 10:38:55.972"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_groups</arg>
</arguments>
<msg timestamp="20170915 10:38:55.973" level="INFO">Executing : Table Must Exist  |  view_groups </msg>
<msg timestamp="20170915 10:38:55.973" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_groups' </msg>
<status status="PASS" endtime="20170915 10:38:55.974" starttime="20170915 10:38:55.973"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts</arg>
</arguments>
<msg timestamp="20170915 10:38:55.974" level="INFO">Executing : Table Must Exist  |  view_hosts </msg>
<msg timestamp="20170915 10:38:55.974" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts' </msg>
<status status="PASS" endtime="20170915 10:38:55.975" starttime="20170915 10:38:55.974"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_deployable</arg>
</arguments>
<msg timestamp="20170915 10:38:55.975" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_deployable </msg>
<msg timestamp="20170915 10:38:55.975" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_deployable' </msg>
<status status="PASS" endtime="20170915 10:38:55.976" starttime="20170915 10:38:55.975"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_deployable_and_shared</arg>
</arguments>
<msg timestamp="20170915 10:38:55.977" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_deployable_and_shared </msg>
<msg timestamp="20170915 10:38:55.977" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_deployable_and_shared' </msg>
<status status="PASS" endtime="20170915 10:38:55.977" starttime="20170915 10:38:55.976"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_shared</arg>
</arguments>
<msg timestamp="20170915 10:38:55.978" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_shared </msg>
<msg timestamp="20170915 10:38:55.978" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_shared' </msg>
<status status="PASS" endtime="20170915 10:38:55.979" starttime="20170915 10:38:55.978"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_sessions</arg>
</arguments>
<msg timestamp="20170915 10:38:55.979" level="INFO">Executing : Table Must Exist  |  view_sessions </msg>
<msg timestamp="20170915 10:38:55.979" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_sessions' </msg>
<status status="PASS" endtime="20170915 10:38:55.980" starttime="20170915 10:38:55.979"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_tasks</arg>
</arguments>
<msg timestamp="20170915 10:38:55.980" level="INFO">Executing : Table Must Exist  |  view_tasks </msg>
<msg timestamp="20170915 10:38:55.980" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_tasks' </msg>
<status status="PASS" endtime="20170915 10:38:55.981" starttime="20170915 10:38:55.980"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_traces</arg>
</arguments>
<msg timestamp="20170915 10:38:55.981" level="INFO">Executing : Table Must Exist  |  view_traces </msg>
<msg timestamp="20170915 10:38:55.981" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_traces' </msg>
<status status="PASS" endtime="20170915 10:38:55.982" starttime="20170915 10:38:55.981"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_usergroups</arg>
</arguments>
<msg timestamp="20170915 10:38:55.982" level="INFO">Executing : Table Must Exist  |  view_usergroups </msg>
<msg timestamp="20170915 10:38:55.982" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_usergroups' </msg>
<status status="PASS" endtime="20170915 10:38:55.983" starttime="20170915 10:38:55.982"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users</arg>
</arguments>
<msg timestamp="20170915 10:38:55.983" level="INFO">Executing : Table Must Exist  |  view_users </msg>
<msg timestamp="20170915 10:38:55.983" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users' </msg>
<status status="PASS" endtime="20170915 10:38:55.984" starttime="20170915 10:38:55.983"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_apps</arg>
</arguments>
<msg timestamp="20170915 10:38:55.984" level="INFO">Executing : Table Must Exist  |  view_users_apps </msg>
<msg timestamp="20170915 10:38:55.984" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_apps' </msg>
<status status="PASS" endtime="20170915 10:38:55.985" starttime="20170915 10:38:55.984"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_datas</arg>
</arguments>
<msg timestamp="20170915 10:38:55.985" level="INFO">Executing : Table Must Exist  |  view_users_datas </msg>
<msg timestamp="20170915 10:38:55.985" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_datas' </msg>
<status status="PASS" endtime="20170915 10:38:55.986" starttime="20170915 10:38:55.985"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_groups</arg>
</arguments>
<msg timestamp="20170915 10:38:55.986" level="INFO">Executing : Table Must Exist  |  view_users_groups </msg>
<msg timestamp="20170915 10:38:55.986" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_groups' </msg>
<status status="PASS" endtime="20170915 10:38:55.987" starttime="20170915 10:38:55.986"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_hosts</arg>
</arguments>
<msg timestamp="20170915 10:38:55.987" level="INFO">Executing : Table Must Exist  |  view_users_hosts </msg>
<msg timestamp="20170915 10:38:55.987" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_hosts' </msg>
<status status="PASS" endtime="20170915 10:38:55.988" starttime="20170915 10:38:55.987"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_sessions</arg>
</arguments>
<msg timestamp="20170915 10:38:55.988" level="INFO">Executing : Table Must Exist  |  view_users_sessions </msg>
<msg timestamp="20170915 10:38:55.988" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_sessions' </msg>
<status status="PASS" endtime="20170915 10:38:55.989" starttime="20170915 10:38:55.988"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_tasks</arg>
</arguments>
<msg timestamp="20170915 10:38:55.989" level="INFO">Executing : Table Must Exist  |  view_users_tasks </msg>
<msg timestamp="20170915 10:38:55.989" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_tasks' </msg>
<status status="PASS" endtime="20170915 10:38:55.990" starttime="20170915 10:38:55.989"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_traces</arg>
</arguments>
<msg timestamp="20170915 10:38:55.990" level="INFO">Executing : Table Must Exist  |  view_users_traces </msg>
<msg timestamp="20170915 10:38:55.990" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_traces' </msg>
<status status="PASS" endtime="20170915 10:38:55.991" starttime="20170915 10:38:55.990"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_usergroups</arg>
</arguments>
<msg timestamp="20170915 10:38:55.991" level="INFO">Executing : Table Must Exist  |  view_users_usergroups </msg>
<msg timestamp="20170915 10:38:55.991" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_usergroups' </msg>
<status status="PASS" endtime="20170915 10:38:55.992" starttime="20170915 10:38:55.991"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_users</arg>
</arguments>
<msg timestamp="20170915 10:38:55.992" level="INFO">Executing : Table Must Exist  |  view_users_users </msg>
<msg timestamp="20170915 10:38:55.992" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_users' </msg>
<status status="PASS" endtime="20170915 10:38:55.993" starttime="20170915 10:38:55.992"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_works</arg>
</arguments>
<msg timestamp="20170915 10:38:55.993" level="INFO">Executing : Table Must Exist  |  view_users_works </msg>
<msg timestamp="20170915 10:38:55.993" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_works' </msg>
<status status="PASS" endtime="20170915 10:38:55.994" starttime="20170915 10:38:55.993"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works</arg>
</arguments>
<msg timestamp="20170915 10:38:55.994" level="INFO">Executing : Table Must Exist  |  view_works </msg>
<msg timestamp="20170915 10:38:55.995" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works' </msg>
<status status="PASS" endtime="20170915 10:38:55.995" starttime="20170915 10:38:55.994"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works_for_billing</arg>
</arguments>
<msg timestamp="20170915 10:38:55.996" level="INFO">Executing : Table Must Exist  |  view_works_for_billing </msg>
<msg timestamp="20170915 10:38:55.996" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works_for_billing' </msg>
<status status="PASS" endtime="20170915 10:38:55.996" starttime="20170915 10:38:55.995"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works_for_billing_with_file_sizes</arg>
</arguments>
<msg timestamp="20170915 10:38:55.996" level="INFO">Executing : Table Must Exist  |  view_works_for_billing_with_file_sizes </msg>
<msg timestamp="20170915 10:38:55.997" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works_for_billing_with_file_sizes' </msg>
<status status="PASS" endtime="20170915 10:38:55.997" starttime="20170915 10:38:55.996"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works</arg>
</arguments>
<msg timestamp="20170915 10:38:55.997" level="INFO">Executing : Table Must Exist  |  works </msg>
<msg timestamp="20170915 10:38:55.997" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='works' </msg>
<status status="PASS" endtime="20170915 10:38:55.999" starttime="20170915 10:38:55.997"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works_history</arg>
</arguments>
<msg timestamp="20170915 10:38:55.999" level="INFO">Executing : Table Must Exist  |  works_history </msg>
<msg timestamp="20170915 10:38:55.999" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='works_history' </msg>
<status status="PASS" endtime="20170915 10:38:56.000" starttime="20170915 10:38:55.999"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170915 10:38:56.000" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170915 10:38:56.000" starttime="20170915 10:38:56.000"></status>
</kw>
<status status="PASS" endtime="20170915 10:38:56.000" starttime="20170915 10:38:56.000"></status>
</kw>
<status status="PASS" endtime="20170915 10:38:56.000" starttime="20170915 10:38:55.925"></status>
</kw>
<status status="PASS" endtime="20170915 10:38:56.000" starttime="20170915 10:38:55.925"></status>
</kw>
<kw name="Start XtremWeb Server" library="XWServer">
<arguments>
<arg>${DIST_XWHEP_PATH}</arg>
</arguments>
<kw name="File Should Exist" library="OperatingSystem">
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xtremweb.server.conf</arg>
</arguments>
<msg timestamp="20170915 10:38:56.002" html="yes" level="INFO">File '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf&lt;/a&gt;' exists.</msg>
<status status="PASS" endtime="20170915 10:38:56.002" starttime="20170915 10:38:56.001"></status>
</kw>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xtremweb.server.conf</arg>
</arguments>
<assign>
<var>${config_content}</var>
</assign>
<msg timestamp="20170915 10:38:56.002" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf&lt;/a&gt;'.</msg>
<msg timestamp="20170915 10:38:56.003" level="INFO">${config_content} = #
# Copyrights     : CNRS
# Author         : Oleg Lodygensky
# Acknowledgment : XtremWeb-HEP is based on XtremWeb 1.8.0 by inria : http://www.xtremweb.net/
# Web            : http://www.xtremweb-hep.o...</msg>
<status status="PASS" endtime="20170915 10:38:56.003" starttime="20170915 10:38:56.002"></status>
</kw>
<kw name="Remove String Using Regexp" library="String">
<doc>Removes ``patterns`` from the given ``string``.</doc>
<arguments>
<arg>${config_content}</arg>
<arg>LAUNCHERURL=${XWCONFIGURE.VALUES.XWUPGRADEURL}</arg>
</arguments>
<assign>
<var>${config_content_filtered}</var>
</assign>
<msg timestamp="20170915 10:38:56.003" level="INFO">${config_content_filtered} = #
# Copyrights     : CNRS
# Author         : Oleg Lodygensky
# Acknowledgment : XtremWeb-HEP is based on XtremWeb 1.8.0 by inria : http://www.xtremweb.net/
# Web            : http://www.xtremweb-hep.o...</msg>
<status status="PASS" endtime="20170915 10:38:56.003" starttime="20170915 10:38:56.003"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${config_content_filtered}</arg>
<arg>\## HTTPSPORT=443</arg>
<arg>HTTPSPORT=${XWCONFIGURE.VALUES.HTTPSPORT}</arg>
</arguments>
<assign>
<var>${config_content_filtered}</var>
</assign>
<msg timestamp="20170915 10:38:56.004" level="INFO">${config_content_filtered} = #
# Copyrights     : CNRS
# Author         : Oleg Lodygensky
# Acknowledgment : XtremWeb-HEP is based on XtremWeb 1.8.0 by inria : http://www.xtremweb.net/
# Web            : http://www.xtremweb-hep.o...</msg>
<status status="PASS" endtime="20170915 10:38:56.004" starttime="20170915 10:38:56.003"></status>
</kw>
<kw name="Create File" library="OperatingSystem">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xtremweb.server.conf</arg>
<arg>content=${config_content_filtered}</arg>
</arguments>
<msg timestamp="20170915 10:38:56.007" html="yes" level="INFO">Created file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170915 10:38:56.007" starttime="20170915 10:38:56.004"></status>
</kw>
<kw name="Remove File" library="OperatingSystem">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<msg timestamp="20170915 10:38:56.009" html="yes" level="INFO">Removed file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170915 10:38:56.009" starttime="20170915 10:38:56.008"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/bin/xtremweb.server console</arg>
<arg>shell=yes</arg>
<arg>stderr=STDOUT</arg>
<arg>stdout=${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<assign>
<var>${created_process}</var>
</assign>
<msg timestamp="20170915 10:38:56.012" level="INFO">Starting process:
/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/xtremweb.server console</msg>
<msg timestamp="20170915 10:38:56.016" level="INFO">${created_process} = 69</msg>
<status status="PASS" endtime="20170915 10:38:56.016" starttime="20170915 10:38:56.009"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SERVER_PROCESS}</arg>
<arg>${created_process}</arg>
</arguments>
<msg timestamp="20170915 10:38:56.018" level="INFO">${SERVER_PROCESS} = 69</msg>
<status status="PASS" endtime="20170915 10:38:56.018" starttime="20170915 10:38:56.016"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2 min</arg>
<arg>5 sec</arg>
<arg>Check XtremWeb Server Start From Log</arg>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<kw name="Check XtremWeb Server Start From Log" library="XWServer">
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<kw name="Log XtremWeb Process Log File" library="XWServer">
<kw name="Log File" library="OperatingSystem">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<msg timestamp="20170915 10:38:56.020" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170915 10:38:56.021" level="INFO"></msg>
<status status="PASS" endtime="20170915 10:38:56.021" starttime="20170915 10:38:56.020"></status>
</kw>
<status status="PASS" endtime="20170915 10:38:56.021" starttime="20170915 10:38:56.019"></status>
</kw>
<kw name="Grep File" library="OperatingSystem">
<doc>Returns the lines of the specified file that match the ``pattern``.</doc>
<arguments>
<arg>${log}</arg>
<arg>listening on port : ${XWCONFIGURE.VALUES.HTTPSPORT}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20170915 10:38:56.023" html="yes" level="INFO">Reading file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170915 10:38:56.023" level="INFO">0 out of 0 lines matched</msg>
<msg timestamp="20170915 10:38:56.023" level="INFO">${ret} = </msg>
<status status="PASS" endtime="20170915 10:38:56.023" starttime="20170915 10:38:56.022"></status>
</kw>
<kw name="Get Line Count" library="String">
<doc>Returns and logs the number of lines in the given string.</doc>
<arguments>
<arg>${ret}</arg>
</arguments>
<assign>
<var>${line_count}</var>
</assign>
<msg timestamp="20170915 10:38:56.024" level="INFO">0 lines</msg>
<msg timestamp="20170915 10:38:56.024" level="INFO">${line_count} = 0</msg>
<status status="PASS" endtime="20170915 10:38:56.024" starttime="20170915 10:38:56.023"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${line_count}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20170915 10:38:56.026" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20170915 10:38:56.026" level="FAIL">0 != 2</msg>
<status status="FAIL" endtime="20170915 10:38:56.026" starttime="20170915 10:38:56.025"></status>
</kw>
<status status="FAIL" endtime="20170915 10:38:56.026" starttime="20170915 10:38:56.019"></status>
</kw>
<kw name="Check XtremWeb Server Start From Log" library="XWServer">
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<kw name="Log XtremWeb Process Log File" library="XWServer">
<kw name="Log File" library="OperatingSystem">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<msg timestamp="20170915 10:39:01.030" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170915 10:39:01.037" level="INFO">Fri Sep 15 10:38:56 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : checking launch url
Fri Sep 15 10:38:56 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] WARNING : no launcher URL defined
Fri Sep 15 10:38:56 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : launching SmartSockets hub
[15/Sep/2017:10:38:58 +0000] [main_1] ERROR : setRole : role redefined ?! (was SERVER)
[15/Sep/2017:10:38:58 +0000] [xtremweb.database.DBConnPoolThread_main_1] INFO : Connection to database jdbc:mysql://localhost/xtremweb is ok, 70 created
[15/Sep/2017:10:38:58 +0000] [xtremweb.dispatcher.DBInterface_main_1] WARN : Can't retrieve any app
[15/Sep/2017:10:38:58 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't create ProxyValidator
[15/Sep/2017:10:38:58 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.io.FileNotFoundException: /tmp/castore (No such file or directory) (/tmp/castore (No such file or directory))
[15/Sep/2017:10:38:58 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't add CA certificates to keystore
[15/Sep/2017:10:38:58 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.lang.NullPointerException (null)
[15/Sep/2017:10:38:58 +0000] [xtremweb.dispatcher.HashTaskSet_TaskSet_14] INFO : TaskSet started (300000)
[15/Sep/2017:10:38:59 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : still waiting task set...
[15/Sep/2017:10:39:00 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : UDP server not started
[15/Sep/2017:10:39:00 +0000] [xtremweb.communications.TCPServer_TCPServerNIO_15] INFO : started, listening on port : 4321
log4j:WARN No appenders could be found for logger (org.eclipse.jetty.util.log).
log4j:WARN Please initialize the log4j system properly.
log4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.
[15/Sep/2017:10:39:00 +0000] [xtremweb.communications.HTTPServer_main_1] INFO : started, listening on port : 9443
[15/Sep/2017:10:39:00 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : FACEBOOK : java.net.MalformedURLException: no protocol: 
[15/Sep/2017:10:39:00 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : GOOGLE : java.net.MalformedURLException: no protocol: 
[15/Sep/2017:10:39:00 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : TWITTER : java.net.MalformedURLException: no protocol: 
[15/Sep/2017:10:39:00 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : YAHOO : java.net.MalformedURLException: no protocol: 
[15/Sep/2017:10:39:00 +0000] [main_1] ERROR : Can't add new entry to keystore
[15/Sep/2017:10:39:00 +0000] [main_1] WARN : javax.net.ssl.SSLHandshakeException: sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target (sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target)
[15/Sep/2017:10:39:00 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : XWHEP Dispatcher(10.6.0-head) started [Fri Sep 15 10:39:00 UTC 2017]
[15/Sep/2017:10:39:00 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : DB vendor  = mysql
[15/Sep/2017:10:39:00 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : mileStone  = 
[15/Sep/2017:10:39:00 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Time out   = 15000
[15/Sep/2017:10:39:00 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Disk opt'd = true
[15/Sep/2017:10:39:00 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Net  opt'd = true
[15/Sep/2017:10:39:00 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : NIO        = true
XWHEP Dispatcher started  Fri Sep 15 10:39:00 UTC 2017
Name             : vagrant-ubuntu-trusty-64
Version          : 10.6.0-head
Identity         : 
XWRole           : SERVER
Started on       : Fri Sep 15 10:38:58 UTC 2017
Scheduler        : xtremweb.dispatcher.MatchingScheduler
SmartSockets hub : 172.28.128.3/172.17.0.1/10.0.2.15-4329#5e.55.f6.3a.cd.7c.00.00.96.b7.02.42.02.6c.0f.e2~vagrant
Server HTTP      : true
Alive            : 300
Alive time out   : 900
Polling time out : 15000
Optimize zip     : true
Optimize network : true
NIO              : true
Comm layer       : xtremweb.communications.TCPClient
Socket time out  : 60000
Socket retries   : 50
Max connections  : 200
TCP port         : 4321
UDP port         : 4323
HTPP  port       : 80
HTPPS port       : 9443
Sun RPC interposition port : 4328
Sandbox path : /usr/bin/lxc
Sandbox launch args : 
Host &lt;host&gt;&lt;uid&gt;aed1b61b-a2dc-4446-aa63-1e04ef690058&lt;/uid&gt;&lt;accessrights&gt;0x755&lt;/accessrights&gt;&lt;name&gt;vagrant-ubuntu-trusty-64&lt;/name&gt;&lt;cpuload&gt;50&lt;/cpuload&gt;&lt;natedipaddr&gt;10.0.2.15&lt;/natedipaddr&gt;&lt;ipaddr&gt;10.0.2.15&lt;/ipaddr&gt;&lt;hwaddr&gt;&lt;/hwaddr&gt;&lt;timezone&gt;Etc/UTC&lt;/timezone&gt;&lt;os&gt;LINUX&lt;/os&gt;&lt;osversion&gt;3.13.0-129-generic&lt;/osversion&gt;&lt;javaversion&gt;1.8.0_141&lt;/javaversion&gt;&lt;javadatamodel&gt;64&lt;/javadatamodel&gt;&lt;cputype&gt;AMD64&lt;/cputype&gt;&lt;cpunb&gt;1&lt;/cpunb&gt;&lt;cpumodel&gt;unknown&lt;/cpumodel&gt;&lt;cpuspeed&gt;0&lt;/cpuspeed&gt;&lt;totalmem&gt;0&lt;/totalmem&gt;&lt;totalswap&gt;0&lt;/totalswap&gt;&lt;totaltmp&gt;40284&lt;/totaltmp&gt;&lt;freetmp&gt;37249&lt;/freetmp&gt;&lt;project&gt;&lt;/project&gt;&lt;active&gt;true&lt;/active&gt;&lt;incomingconnections&gt;false&lt;/incomingconnections&gt;&lt;available&gt;false&lt;/available&gt;&lt;pilotjob&gt;false&lt;/pilotjob&gt;&lt;sgid&gt;&lt;/sgid&gt;&lt;timeout&gt;15000&lt;/timeout&gt;&lt;traces&gt;false&lt;/traces&gt;&lt;acceptbin&gt;false&lt;/acceptbin&gt;&lt;version&gt;10.6.0-head&lt;/version&gt;&lt;/host&gt;
[15/Sep/2017:10:39:00 +0000] [xtremweb.communications.HTTPServer_HTTPServer_218] INFO : started, listening on port : 9443
</msg>
<status status="PASS" endtime="20170915 10:39:01.038" starttime="20170915 10:39:01.029"></status>
</kw>
<status status="PASS" endtime="20170915 10:39:01.038" starttime="20170915 10:39:01.029"></status>
</kw>
<kw name="Grep File" library="OperatingSystem">
<doc>Returns the lines of the specified file that match the ``pattern``.</doc>
<arguments>
<arg>${log}</arg>
<arg>listening on port : ${XWCONFIGURE.VALUES.HTTPSPORT}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20170915 10:39:01.039" html="yes" level="INFO">Reading file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170915 10:39:01.040" level="INFO">2 out of 59 lines matched</msg>
<msg timestamp="20170915 10:39:01.040" level="INFO">${ret} = [15/Sep/2017:10:39:00 +0000] [xtremweb.communications.HTTPServer_main_1] INFO : started, listening on port : 9443
[15/Sep/2017:10:39:00 +0000] [xtremweb.communications.HTTPServer_HTTPServer_218] INFO ...</msg>
<status status="PASS" endtime="20170915 10:39:01.040" starttime="20170915 10:39:01.038"></status>
</kw>
<kw name="Get Line Count" library="String">
<doc>Returns and logs the number of lines in the given string.</doc>
<arguments>
<arg>${ret}</arg>
</arguments>
<assign>
<var>${line_count}</var>
</assign>
<msg timestamp="20170915 10:39:01.041" level="INFO">2 lines</msg>
<msg timestamp="20170915 10:39:01.041" level="INFO">${line_count} = 2</msg>
<status status="PASS" endtime="20170915 10:39:01.041" starttime="20170915 10:39:01.040"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${line_count}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20170915 10:39:01.041" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170915 10:39:01.042" starttime="20170915 10:39:01.041"></status>
</kw>
<status status="PASS" endtime="20170915 10:39:01.042" starttime="20170915 10:39:01.028"></status>
</kw>
<status status="PASS" endtime="20170915 10:39:01.042" starttime="20170915 10:38:56.018"></status>
</kw>
<kw name="Log XtremWeb Process Log File" library="XWServer">
<kw name="Log File" library="OperatingSystem">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<msg timestamp="20170915 10:39:01.042" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170915 10:39:01.043" level="INFO">Fri Sep 15 10:38:56 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : checking launch url
Fri Sep 15 10:38:56 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] WARNING : no launcher URL defined
Fri Sep 15 10:38:56 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : launching SmartSockets hub
[15/Sep/2017:10:38:58 +0000] [main_1] ERROR : setRole : role redefined ?! (was SERVER)
[15/Sep/2017:10:38:58 +0000] [xtremweb.database.DBConnPoolThread_main_1] INFO : Connection to database jdbc:mysql://localhost/xtremweb is ok, 70 created
[15/Sep/2017:10:38:58 +0000] [xtremweb.dispatcher.DBInterface_main_1] WARN : Can't retrieve any app
[15/Sep/2017:10:38:58 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't create ProxyValidator
[15/Sep/2017:10:38:58 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.io.FileNotFoundException: /tmp/castore (No such file or directory) (/tmp/castore (No such file or directory))
[15/Sep/2017:10:38:58 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't add CA certificates to keystore
[15/Sep/2017:10:38:58 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.lang.NullPointerException (null)
[15/Sep/2017:10:38:58 +0000] [xtremweb.dispatcher.HashTaskSet_TaskSet_14] INFO : TaskSet started (300000)
[15/Sep/2017:10:38:59 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : still waiting task set...
[15/Sep/2017:10:39:00 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : UDP server not started
[15/Sep/2017:10:39:00 +0000] [xtremweb.communications.TCPServer_TCPServerNIO_15] INFO : started, listening on port : 4321
log4j:WARN No appenders could be found for logger (org.eclipse.jetty.util.log).
log4j:WARN Please initialize the log4j system properly.
log4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.
[15/Sep/2017:10:39:00 +0000] [xtremweb.communications.HTTPServer_main_1] INFO : started, listening on port : 9443
[15/Sep/2017:10:39:00 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : FACEBOOK : java.net.MalformedURLException: no protocol: 
[15/Sep/2017:10:39:00 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : GOOGLE : java.net.MalformedURLException: no protocol: 
[15/Sep/2017:10:39:00 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : TWITTER : java.net.MalformedURLException: no protocol: 
[15/Sep/2017:10:39:00 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : YAHOO : java.net.MalformedURLException: no protocol: 
[15/Sep/2017:10:39:00 +0000] [main_1] ERROR : Can't add new entry to keystore
[15/Sep/2017:10:39:00 +0000] [main_1] WARN : javax.net.ssl.SSLHandshakeException: sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target (sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target)
[15/Sep/2017:10:39:00 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : XWHEP Dispatcher(10.6.0-head) started [Fri Sep 15 10:39:00 UTC 2017]
[15/Sep/2017:10:39:00 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : DB vendor  = mysql
[15/Sep/2017:10:39:00 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : mileStone  = 
[15/Sep/2017:10:39:00 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Time out   = 15000
[15/Sep/2017:10:39:00 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Disk opt'd = true
[15/Sep/2017:10:39:00 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Net  opt'd = true
[15/Sep/2017:10:39:00 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : NIO        = true
XWHEP Dispatcher started  Fri Sep 15 10:39:00 UTC 2017
Name             : vagrant-ubuntu-trusty-64
Version          : 10.6.0-head
Identity         : 
XWRole           : SERVER
Started on       : Fri Sep 15 10:38:58 UTC 2017
Scheduler        : xtremweb.dispatcher.MatchingScheduler
SmartSockets hub : 172.28.128.3/172.17.0.1/10.0.2.15-4329#5e.55.f6.3a.cd.7c.00.00.96.b7.02.42.02.6c.0f.e2~vagrant
Server HTTP      : true
Alive            : 300
Alive time out   : 900
Polling time out : 15000
Optimize zip     : true
Optimize network : true
NIO              : true
Comm layer       : xtremweb.communications.TCPClient
Socket time out  : 60000
Socket retries   : 50
Max connections  : 200
TCP port         : 4321
UDP port         : 4323
HTPP  port       : 80
HTPPS port       : 9443
Sun RPC interposition port : 4328
Sandbox path : /usr/bin/lxc
Sandbox launch args : 
Host &lt;host&gt;&lt;uid&gt;aed1b61b-a2dc-4446-aa63-1e04ef690058&lt;/uid&gt;&lt;accessrights&gt;0x755&lt;/accessrights&gt;&lt;name&gt;vagrant-ubuntu-trusty-64&lt;/name&gt;&lt;cpuload&gt;50&lt;/cpuload&gt;&lt;natedipaddr&gt;10.0.2.15&lt;/natedipaddr&gt;&lt;ipaddr&gt;10.0.2.15&lt;/ipaddr&gt;&lt;hwaddr&gt;&lt;/hwaddr&gt;&lt;timezone&gt;Etc/UTC&lt;/timezone&gt;&lt;os&gt;LINUX&lt;/os&gt;&lt;osversion&gt;3.13.0-129-generic&lt;/osversion&gt;&lt;javaversion&gt;1.8.0_141&lt;/javaversion&gt;&lt;javadatamodel&gt;64&lt;/javadatamodel&gt;&lt;cputype&gt;AMD64&lt;/cputype&gt;&lt;cpunb&gt;1&lt;/cpunb&gt;&lt;cpumodel&gt;unknown&lt;/cpumodel&gt;&lt;cpuspeed&gt;0&lt;/cpuspeed&gt;&lt;totalmem&gt;0&lt;/totalmem&gt;&lt;totalswap&gt;0&lt;/totalswap&gt;&lt;totaltmp&gt;40284&lt;/totaltmp&gt;&lt;freetmp&gt;37249&lt;/freetmp&gt;&lt;project&gt;&lt;/project&gt;&lt;active&gt;true&lt;/active&gt;&lt;incomingconnections&gt;false&lt;/incomingconnections&gt;&lt;available&gt;false&lt;/available&gt;&lt;pilotjob&gt;false&lt;/pilotjob&gt;&lt;sgid&gt;&lt;/sgid&gt;&lt;timeout&gt;15000&lt;/timeout&gt;&lt;traces&gt;false&lt;/traces&gt;&lt;acceptbin&gt;false&lt;/acceptbin&gt;&lt;version&gt;10.6.0-head&lt;/version&gt;&lt;/host&gt;
[15/Sep/2017:10:39:00 +0000] [xtremweb.communications.HTTPServer_HTTPServer_218] INFO : started, listening on port : 9443
</msg>
<status status="PASS" endtime="20170915 10:39:01.043" starttime="20170915 10:39:01.042"></status>
</kw>
<status status="PASS" endtime="20170915 10:39:01.043" starttime="20170915 10:39:01.042"></status>
</kw>
<status status="PASS" endtime="20170915 10:39:01.043" starttime="20170915 10:38:56.001"></status>
</kw>
<kw name="Start XtremWeb Worker" library="XWWorker">
<arguments>
<arg>${DIST_XWHEP_PATH}</arg>
</arguments>
<kw name="File Should Exist" library="OperatingSystem">
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xtremweb.worker.conf</arg>
</arguments>
<msg timestamp="20170915 10:39:01.045" html="yes" level="INFO">File '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf&lt;/a&gt;' exists.</msg>
<status status="PASS" endtime="20170915 10:39:01.045" starttime="20170915 10:39:01.044"></status>
</kw>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xtremweb.worker.conf</arg>
</arguments>
<assign>
<var>${config_content}</var>
</assign>
<msg timestamp="20170915 10:39:01.045" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf&lt;/a&gt;'.</msg>
<msg timestamp="20170915 10:39:01.046" level="INFO">${config_content} = #
# Copyrights     : CNRS
# Author         : Oleg Lodygensky
# Acknowledgment : XtremWeb-HEP is based on XtremWeb 1.8.0 by inria : http://www.xtremweb.net/
# Web            : http://www.xtremweb-hep.o...</msg>
<status status="PASS" endtime="20170915 10:39:01.046" starttime="20170915 10:39:01.045"></status>
</kw>
<kw name="Remove String Using Regexp" library="String">
<doc>Removes ``patterns`` from the given ``string``.</doc>
<arguments>
<arg>${config_content}</arg>
<arg>LAUNCHERURL=${XWCONFIGURE.VALUES.XWUPGRADEURL}</arg>
</arguments>
<assign>
<var>${config_content_filtered}</var>
</assign>
<msg timestamp="20170915 10:39:01.047" level="INFO">${config_content_filtered} = #
# Copyrights     : CNRS
# Author         : Oleg Lodygensky
# Acknowledgment : XtremWeb-HEP is based on XtremWeb 1.8.0 by inria : http://www.xtremweb.net/
# Web            : http://www.xtremweb-hep.o...</msg>
<status status="PASS" endtime="20170915 10:39:01.047" starttime="20170915 10:39:01.046"></status>
</kw>
<kw name="Create File" library="OperatingSystem">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xtremweb.worker.conf</arg>
<arg>content=${config_content_filtered}</arg>
</arguments>
<msg timestamp="20170915 10:39:01.054" html="yes" level="INFO">Created file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170915 10:39:01.054" starttime="20170915 10:39:01.047"></status>
</kw>
<kw name="Remove File" library="OperatingSystem">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.worker.process.log</arg>
</arguments>
<msg timestamp="20170915 10:39:01.056" html="yes" level="INFO">Removed file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.worker.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.worker.process.log&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170915 10:39:01.056" starttime="20170915 10:39:01.054"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/bin/xtremweb.worker console</arg>
<arg>shell=yes</arg>
<arg>stderr=STDOUT</arg>
<arg>stdout=${DIST_XWHEP_PATH}/xwhep.worker.process.log</arg>
</arguments>
<assign>
<var>${created_process}</var>
</assign>
<msg timestamp="20170915 10:39:01.057" level="INFO">Starting process:
/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/xtremweb.worker console</msg>
<msg timestamp="20170915 10:39:01.061" level="INFO">${created_process} = 70</msg>
<status status="PASS" endtime="20170915 10:39:01.061" starttime="20170915 10:39:01.056"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${WORKER_PROCESS}</arg>
<arg>${created_process}</arg>
</arguments>
<msg timestamp="20170915 10:39:01.064" level="INFO">${WORKER_PROCESS} = 70</msg>
<status status="PASS" endtime="20170915 10:39:01.064" starttime="20170915 10:39:01.062"></status>
</kw>
<kw name="Log File" library="OperatingSystem">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.worker.process.log</arg>
</arguments>
<msg timestamp="20170915 10:39:01.064" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.worker.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.worker.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170915 10:39:01.065" level="INFO"></msg>
<status status="PASS" endtime="20170915 10:39:01.066" starttime="20170915 10:39:01.064"></status>
</kw>
<status status="PASS" endtime="20170915 10:39:01.067" starttime="20170915 10:39:01.044"></status>
</kw>
<status status="PASS" endtime="20170915 10:39:01.067" starttime="20170915 10:38:55.925"></status>
</kw>
<status status="PASS" endtime="20170915 10:39:01.067" starttime="20170915 10:38:55.720"></status>
</kw>
<kw name="XWSENDAPPCommand" library="XWClient">
<doc>Usage : SENDAPP appName appType cpuType osName URI | UID : inserts/updates an application; URI or UID points to binary file ; application name must be the first parameter</doc>
<arguments>
<arg>ls</arg>
<arg>DEPLOYABLE</arg>
<arg>LINUX</arg>
<arg>AMD64</arg>
<arg>/bin/ls</arg>
</arguments>
<assign>
<var>${uid}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd ${DIST_XWHEP_PATH}/bin &amp;&amp; ./xwsendapp ${appName} ${appType} ${cpuType} ${osName} ${uri-udi}</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${cmd_result}</var>
</assign>
<msg timestamp="20170915 10:39:01.070" level="INFO">Starting process:
cd /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin &amp;&amp; ./xwsendapp ls DEPLOYABLE LINUX AMD64 /bin/ls</msg>
<msg timestamp="20170915 10:39:01.073" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170915 10:39:02.175" level="INFO">Process completed.</msg>
<msg timestamp="20170915 10:39:02.175" level="INFO">${cmd_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170915 10:39:02.175" starttime="20170915 10:39:01.069"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stderr}</arg>
</arguments>
<msg timestamp="20170915 10:39:02.176" level="INFO"></msg>
<status status="PASS" endtime="20170915 10:39:02.176" starttime="20170915 10:39:02.175"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
</arguments>
<msg timestamp="20170915 10:39:02.176" level="INFO">xw://vagrant-ubuntu-trusty-64/2a36f06d-78dd-4bde-a84d-ae79a22a5187</msg>
<status status="PASS" endtime="20170915 10:39:02.176" starttime="20170915 10:39:02.176"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${cmd_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170915 10:39:02.177" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170915 10:39:02.177" starttime="20170915 10:39:02.176"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
<arg>-36</arg>
</arguments>
<assign>
<var>${uid}</var>
</assign>
<msg timestamp="20170915 10:39:02.177" level="INFO">${uid} = 2a36f06d-78dd-4bde-a84d-ae79a22a5187</msg>
<status status="PASS" endtime="20170915 10:39:02.177" starttime="20170915 10:39:02.177"></status>
</kw>
<msg timestamp="20170915 10:39:02.177" level="INFO">${uid} = 2a36f06d-78dd-4bde-a84d-ae79a22a5187</msg>
<status status="PASS" endtime="20170915 10:39:02.177" starttime="20170915 10:39:01.069"></status>
</kw>
<kw name="Count From Apps Where Uid" library="XWServer">
<arguments>
<arg>${uid}</arg>
<arg>1</arg>
</arguments>
<kw name="Count From Table Where Uid" library="MySql">
<arguments>
<arg>apps</arg>
<arg>${uid}</arg>
<arg>${countExpected}</arg>
</arguments>
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170915 10:39:02.179" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170915 10:39:02.180" starttime="20170915 10:39:02.179"></status>
</kw>
<status status="PASS" endtime="20170915 10:39:02.180" starttime="20170915 10:39:02.179"></status>
</kw>
<kw name="Row Count Is Equal To X" library="DatabaseLibrary">
<doc>Check if the number of rows returned from `selectStatement` is equal to the value submitted. If not, then this</doc>
<arguments>
<arg>SELECT * FROM ${table} WHERE uid = '${uid}'</arg>
<arg>${countExpected}</arg>
</arguments>
<msg timestamp="20170915 10:39:02.181" level="INFO">Executing : Row Count Is Equal To X  |  SELECT * FROM apps WHERE uid = '2a36f06d-78dd-4bde-a84d-ae79a22a5187'  |  1 </msg>
<msg timestamp="20170915 10:39:02.181" level="INFO">Executing : Row Count  |  SELECT * FROM apps WHERE uid = '2a36f06d-78dd-4bde-a84d-ae79a22a5187' </msg>
<status status="PASS" endtime="20170915 10:39:02.182" starttime="20170915 10:39:02.181"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170915 10:39:02.183" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170915 10:39:02.183" starttime="20170915 10:39:02.183"></status>
</kw>
<status status="PASS" endtime="20170915 10:39:02.183" starttime="20170915 10:39:02.182"></status>
</kw>
<status status="PASS" endtime="20170915 10:39:02.183" starttime="20170915 10:39:02.178"></status>
</kw>
<status status="PASS" endtime="20170915 10:39:02.183" starttime="20170915 10:39:02.178"></status>
</kw>
<kw name="XWSUBMITCommand" library="XWClient">
<doc>Usage : XWSUBMIT appName</doc>
<arguments>
<arg>ls</arg>
</arguments>
<assign>
<var>${workuid}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd ${DIST_XWHEP_PATH}/bin &amp;&amp; ./xwsubmit ${appName}</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${cmd_result}</var>
</assign>
<msg timestamp="20170915 10:39:02.184" level="INFO">Starting process:
cd /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin &amp;&amp; ./xwsubmit ls</msg>
<msg timestamp="20170915 10:39:02.187" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170915 10:39:02.781" level="INFO">Process completed.</msg>
<msg timestamp="20170915 10:39:02.781" level="INFO">${cmd_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170915 10:39:02.782" starttime="20170915 10:39:02.184"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stderr}</arg>
</arguments>
<msg timestamp="20170915 10:39:02.782" level="INFO"></msg>
<status status="PASS" endtime="20170915 10:39:02.783" starttime="20170915 10:39:02.782"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
</arguments>
<msg timestamp="20170915 10:39:02.783" level="INFO">xw://vagrant-ubuntu-trusty-64/5190dfc9-0c89-455a-a8c1-88f9890e81fe</msg>
<status status="PASS" endtime="20170915 10:39:02.783" starttime="20170915 10:39:02.783"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${cmd_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170915 10:39:02.783" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170915 10:39:02.783" starttime="20170915 10:39:02.783"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
<arg>-36</arg>
</arguments>
<assign>
<var>${uid}</var>
</assign>
<msg timestamp="20170915 10:39:02.784" level="INFO">${uid} = 5190dfc9-0c89-455a-a8c1-88f9890e81fe</msg>
<status status="PASS" endtime="20170915 10:39:02.784" starttime="20170915 10:39:02.784"></status>
</kw>
<msg timestamp="20170915 10:39:02.784" level="INFO">${workuid} = 5190dfc9-0c89-455a-a8c1-88f9890e81fe</msg>
<status status="PASS" endtime="20170915 10:39:02.784" starttime="20170915 10:39:02.183"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${workuid}</arg>
</arguments>
<msg timestamp="20170915 10:39:02.785" level="INFO">5190dfc9-0c89-455a-a8c1-88f9890e81fe</msg>
<status status="PASS" endtime="20170915 10:39:02.785" starttime="20170915 10:39:02.784"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3 min</arg>
<arg>5 sec</arg>
<arg>Check XWSTATUS Completed</arg>
<arg>${workuid}</arg>
</arguments>
<kw name="Check XWSTATUS Completed" library="XWClient">
<arguments>
<arg>${workuid}</arg>
</arguments>
<kw name="XWSTATUSCommand" library="XWClient">
<doc>Usage : XWSTATUS uid</doc>
<arguments>
<arg>${uid}</arg>
</arguments>
<assign>
<var>${status_result}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd ${DIST_XWHEP_PATH}/bin &amp;&amp; ./xwstatus ${uid}</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${cmd_result}</var>
</assign>
<msg timestamp="20170915 10:39:02.786" level="INFO">Starting process:
cd /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin &amp;&amp; ./xwstatus 5190dfc9-0c89-455a-a8c1-88f9890e81fe</msg>
<msg timestamp="20170915 10:39:02.789" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170915 10:39:03.315" level="INFO">Process completed.</msg>
<msg timestamp="20170915 10:39:03.316" level="INFO">${cmd_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170915 10:39:03.316" starttime="20170915 10:39:02.786"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stderr}</arg>
</arguments>
<msg timestamp="20170915 10:39:03.317" level="INFO"></msg>
<status status="PASS" endtime="20170915 10:39:03.317" starttime="20170915 10:39:03.316"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
</arguments>
<msg timestamp="20170915 10:39:03.317" level="INFO"> UID='5190dfc9-0c89-455a-a8c1-88f9890e81fe', STATUS='PENDING', COMPLETEDDATE=NULL, LABEL=NULL</msg>
<status status="PASS" endtime="20170915 10:39:03.317" starttime="20170915 10:39:03.317"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${cmd_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170915 10:39:03.318" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170915 10:39:03.318" starttime="20170915 10:39:03.318"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
<arg>STATUS='(?P&lt;status&gt;.*)', COMPLETEDDATE</arg>
<arg>status</arg>
</arguments>
<assign>
<var>@{status_result}</var>
</assign>
<msg timestamp="20170915 10:39:03.319" level="INFO">@{status_result} = [ PENDING ]</msg>
<status status="PASS" endtime="20170915 10:39:03.319" starttime="20170915 10:39:03.318"></status>
</kw>
<msg timestamp="20170915 10:39:03.319" level="INFO">${status_result} = PENDING</msg>
<status status="PASS" endtime="20170915 10:39:03.319" starttime="20170915 10:39:02.786"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${status_result}</arg>
<arg>COMPLETED</arg>
</arguments>
<msg timestamp="20170915 10:39:03.320" level="FAIL">PENDING != COMPLETED</msg>
<status status="FAIL" endtime="20170915 10:39:03.320" starttime="20170915 10:39:03.320"></status>
</kw>
<status status="FAIL" endtime="20170915 10:39:03.320" starttime="20170915 10:39:02.785"></status>
</kw>
<kw name="Check XWSTATUS Completed" library="XWClient">
<arguments>
<arg>${workuid}</arg>
</arguments>
<kw name="XWSTATUSCommand" library="XWClient">
<doc>Usage : XWSTATUS uid</doc>
<arguments>
<arg>${uid}</arg>
</arguments>
<assign>
<var>${status_result}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd ${DIST_XWHEP_PATH}/bin &amp;&amp; ./xwstatus ${uid}</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${cmd_result}</var>
</assign>
<msg timestamp="20170915 10:39:08.324" level="INFO">Starting process:
cd /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin &amp;&amp; ./xwstatus 5190dfc9-0c89-455a-a8c1-88f9890e81fe</msg>
<msg timestamp="20170915 10:39:08.327" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170915 10:39:08.900" level="INFO">Process completed.</msg>
<msg timestamp="20170915 10:39:08.900" level="INFO">${cmd_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170915 10:39:08.901" starttime="20170915 10:39:08.323"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stderr}</arg>
</arguments>
<msg timestamp="20170915 10:39:08.902" level="INFO"></msg>
<status status="PASS" endtime="20170915 10:39:08.902" starttime="20170915 10:39:08.901"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
</arguments>
<msg timestamp="20170915 10:39:08.902" level="INFO"> UID='5190dfc9-0c89-455a-a8c1-88f9890e81fe', STATUS='PENDING', COMPLETEDDATE=NULL, LABEL=NULL</msg>
<status status="PASS" endtime="20170915 10:39:08.902" starttime="20170915 10:39:08.902"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${cmd_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170915 10:39:08.903" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170915 10:39:08.903" starttime="20170915 10:39:08.902"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
<arg>STATUS='(?P&lt;status&gt;.*)', COMPLETEDDATE</arg>
<arg>status</arg>
</arguments>
<assign>
<var>@{status_result}</var>
</assign>
<msg timestamp="20170915 10:39:08.903" level="INFO">@{status_result} = [ PENDING ]</msg>
<status status="PASS" endtime="20170915 10:39:08.903" starttime="20170915 10:39:08.903"></status>
</kw>
<msg timestamp="20170915 10:39:08.904" level="INFO">${status_result} = PENDING</msg>
<status status="PASS" endtime="20170915 10:39:08.904" starttime="20170915 10:39:08.323"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${status_result}</arg>
<arg>COMPLETED</arg>
</arguments>
<msg timestamp="20170915 10:39:08.904" level="FAIL">PENDING != COMPLETED</msg>
<status status="FAIL" endtime="20170915 10:39:08.904" starttime="20170915 10:39:08.904"></status>
</kw>
<status status="FAIL" endtime="20170915 10:39:08.904" starttime="20170915 10:39:08.322"></status>
</kw>
<kw name="Check XWSTATUS Completed" library="XWClient">
<arguments>
<arg>${workuid}</arg>
</arguments>
<kw name="XWSTATUSCommand" library="XWClient">
<doc>Usage : XWSTATUS uid</doc>
<arguments>
<arg>${uid}</arg>
</arguments>
<assign>
<var>${status_result}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd ${DIST_XWHEP_PATH}/bin &amp;&amp; ./xwstatus ${uid}</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${cmd_result}</var>
</assign>
<msg timestamp="20170915 10:39:13.908" level="INFO">Starting process:
cd /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin &amp;&amp; ./xwstatus 5190dfc9-0c89-455a-a8c1-88f9890e81fe</msg>
<msg timestamp="20170915 10:39:13.911" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170915 10:39:14.450" level="INFO">Process completed.</msg>
<msg timestamp="20170915 10:39:14.451" level="INFO">${cmd_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170915 10:39:14.451" starttime="20170915 10:39:13.907"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stderr}</arg>
</arguments>
<msg timestamp="20170915 10:39:14.452" level="INFO"></msg>
<status status="PASS" endtime="20170915 10:39:14.452" starttime="20170915 10:39:14.451"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
</arguments>
<msg timestamp="20170915 10:39:14.452" level="INFO"> UID='5190dfc9-0c89-455a-a8c1-88f9890e81fe', STATUS='PENDING', COMPLETEDDATE=NULL, LABEL=NULL</msg>
<status status="PASS" endtime="20170915 10:39:14.452" starttime="20170915 10:39:14.452"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${cmd_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170915 10:39:14.453" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170915 10:39:14.453" starttime="20170915 10:39:14.453"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
<arg>STATUS='(?P&lt;status&gt;.*)', COMPLETEDDATE</arg>
<arg>status</arg>
</arguments>
<assign>
<var>@{status_result}</var>
</assign>
<msg timestamp="20170915 10:39:14.454" level="INFO">@{status_result} = [ PENDING ]</msg>
<status status="PASS" endtime="20170915 10:39:14.454" starttime="20170915 10:39:14.453"></status>
</kw>
<msg timestamp="20170915 10:39:14.454" level="INFO">${status_result} = PENDING</msg>
<status status="PASS" endtime="20170915 10:39:14.454" starttime="20170915 10:39:13.906"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${status_result}</arg>
<arg>COMPLETED</arg>
</arguments>
<msg timestamp="20170915 10:39:14.454" level="FAIL">PENDING != COMPLETED</msg>
<status status="FAIL" endtime="20170915 10:39:14.455" starttime="20170915 10:39:14.454"></status>
</kw>
<status status="FAIL" endtime="20170915 10:39:14.455" starttime="20170915 10:39:13.905"></status>
</kw>
<kw name="Check XWSTATUS Completed" library="XWClient">
<arguments>
<arg>${workuid}</arg>
</arguments>
<kw name="XWSTATUSCommand" library="XWClient">
<doc>Usage : XWSTATUS uid</doc>
<arguments>
<arg>${uid}</arg>
</arguments>
<assign>
<var>${status_result}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd ${DIST_XWHEP_PATH}/bin &amp;&amp; ./xwstatus ${uid}</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${cmd_result}</var>
</assign>
<msg timestamp="20170915 10:39:19.458" level="INFO">Starting process:
cd /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin &amp;&amp; ./xwstatus 5190dfc9-0c89-455a-a8c1-88f9890e81fe</msg>
<msg timestamp="20170915 10:39:19.461" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170915 10:39:20.068" level="INFO">Process completed.</msg>
<msg timestamp="20170915 10:39:20.069" level="INFO">${cmd_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170915 10:39:20.069" starttime="20170915 10:39:19.458"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stderr}</arg>
</arguments>
<msg timestamp="20170915 10:39:20.070" level="INFO"></msg>
<status status="PASS" endtime="20170915 10:39:20.071" starttime="20170915 10:39:20.069"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
</arguments>
<msg timestamp="20170915 10:39:20.071" level="INFO"> UID='5190dfc9-0c89-455a-a8c1-88f9890e81fe', STATUS='PENDING', COMPLETEDDATE=NULL, LABEL=NULL</msg>
<status status="PASS" endtime="20170915 10:39:20.071" starttime="20170915 10:39:20.071"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${cmd_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170915 10:39:20.072" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170915 10:39:20.072" starttime="20170915 10:39:20.072"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
<arg>STATUS='(?P&lt;status&gt;.*)', COMPLETEDDATE</arg>
<arg>status</arg>
</arguments>
<assign>
<var>@{status_result}</var>
</assign>
<msg timestamp="20170915 10:39:20.073" level="INFO">@{status_result} = [ PENDING ]</msg>
<status status="PASS" endtime="20170915 10:39:20.073" starttime="20170915 10:39:20.072"></status>
</kw>
<msg timestamp="20170915 10:39:20.075" level="INFO">${status_result} = PENDING</msg>
<status status="PASS" endtime="20170915 10:39:20.075" starttime="20170915 10:39:19.457"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${status_result}</arg>
<arg>COMPLETED</arg>
</arguments>
<msg timestamp="20170915 10:39:20.077" level="FAIL">PENDING != COMPLETED</msg>
<status status="FAIL" endtime="20170915 10:39:20.077" starttime="20170915 10:39:20.076"></status>
</kw>
<status status="FAIL" endtime="20170915 10:39:20.077" starttime="20170915 10:39:19.457"></status>
</kw>
<kw name="Check XWSTATUS Completed" library="XWClient">
<arguments>
<arg>${workuid}</arg>
</arguments>
<kw name="XWSTATUSCommand" library="XWClient">
<doc>Usage : XWSTATUS uid</doc>
<arguments>
<arg>${uid}</arg>
</arguments>
<assign>
<var>${status_result}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd ${DIST_XWHEP_PATH}/bin &amp;&amp; ./xwstatus ${uid}</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${cmd_result}</var>
</assign>
<msg timestamp="20170915 10:39:25.084" level="INFO">Starting process:
cd /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin &amp;&amp; ./xwstatus 5190dfc9-0c89-455a-a8c1-88f9890e81fe</msg>
<msg timestamp="20170915 10:39:25.087" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170915 10:39:25.632" level="INFO">Process completed.</msg>
<msg timestamp="20170915 10:39:25.632" level="INFO">${cmd_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170915 10:39:25.632" starttime="20170915 10:39:25.084"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stderr}</arg>
</arguments>
<msg timestamp="20170915 10:39:25.634" level="INFO"></msg>
<status status="PASS" endtime="20170915 10:39:25.634" starttime="20170915 10:39:25.633"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
</arguments>
<msg timestamp="20170915 10:39:25.635" level="INFO"> UID='5190dfc9-0c89-455a-a8c1-88f9890e81fe', STATUS='RUNNING', COMPLETEDDATE=NULL, LABEL=NULL</msg>
<status status="PASS" endtime="20170915 10:39:25.635" starttime="20170915 10:39:25.635"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${cmd_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170915 10:39:25.636" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170915 10:39:25.636" starttime="20170915 10:39:25.635"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
<arg>STATUS='(?P&lt;status&gt;.*)', COMPLETEDDATE</arg>
<arg>status</arg>
</arguments>
<assign>
<var>@{status_result}</var>
</assign>
<msg timestamp="20170915 10:39:25.637" level="INFO">@{status_result} = [ RUNNING ]</msg>
<status status="PASS" endtime="20170915 10:39:25.637" starttime="20170915 10:39:25.636"></status>
</kw>
<msg timestamp="20170915 10:39:25.637" level="INFO">${status_result} = RUNNING</msg>
<status status="PASS" endtime="20170915 10:39:25.637" starttime="20170915 10:39:25.083"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${status_result}</arg>
<arg>COMPLETED</arg>
</arguments>
<msg timestamp="20170915 10:39:25.639" level="FAIL">RUNNING != COMPLETED</msg>
<status status="FAIL" endtime="20170915 10:39:25.639" starttime="20170915 10:39:25.638"></status>
</kw>
<status status="FAIL" endtime="20170915 10:39:25.639" starttime="20170915 10:39:25.082"></status>
</kw>
<kw name="Check XWSTATUS Completed" library="XWClient">
<arguments>
<arg>${workuid}</arg>
</arguments>
<kw name="XWSTATUSCommand" library="XWClient">
<doc>Usage : XWSTATUS uid</doc>
<arguments>
<arg>${uid}</arg>
</arguments>
<assign>
<var>${status_result}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd ${DIST_XWHEP_PATH}/bin &amp;&amp; ./xwstatus ${uid}</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${cmd_result}</var>
</assign>
<msg timestamp="20170915 10:39:30.649" level="INFO">Starting process:
cd /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin &amp;&amp; ./xwstatus 5190dfc9-0c89-455a-a8c1-88f9890e81fe</msg>
<msg timestamp="20170915 10:39:30.657" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170915 10:39:32.214" level="INFO">Process completed.</msg>
<msg timestamp="20170915 10:39:32.215" level="INFO">${cmd_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170915 10:39:32.215" starttime="20170915 10:39:30.648"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stderr}</arg>
</arguments>
<msg timestamp="20170915 10:39:32.216" level="INFO"></msg>
<status status="PASS" endtime="20170915 10:39:32.216" starttime="20170915 10:39:32.215"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
</arguments>
<msg timestamp="20170915 10:39:32.217" level="INFO"> UID='5190dfc9-0c89-455a-a8c1-88f9890e81fe', STATUS='RUNNING', COMPLETEDDATE=NULL, LABEL=NULL</msg>
<status status="PASS" endtime="20170915 10:39:32.217" starttime="20170915 10:39:32.216"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${cmd_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170915 10:39:32.218" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170915 10:39:32.219" starttime="20170915 10:39:32.218"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
<arg>STATUS='(?P&lt;status&gt;.*)', COMPLETEDDATE</arg>
<arg>status</arg>
</arguments>
<assign>
<var>@{status_result}</var>
</assign>
<msg timestamp="20170915 10:39:32.220" level="INFO">@{status_result} = [ RUNNING ]</msg>
<status status="PASS" endtime="20170915 10:39:32.220" starttime="20170915 10:39:32.219"></status>
</kw>
<msg timestamp="20170915 10:39:32.221" level="INFO">${status_result} = RUNNING</msg>
<status status="PASS" endtime="20170915 10:39:32.221" starttime="20170915 10:39:30.647"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${status_result}</arg>
<arg>COMPLETED</arg>
</arguments>
<msg timestamp="20170915 10:39:32.222" level="FAIL">RUNNING != COMPLETED</msg>
<status status="FAIL" endtime="20170915 10:39:32.222" starttime="20170915 10:39:32.221"></status>
</kw>
<status status="FAIL" endtime="20170915 10:39:32.223" starttime="20170915 10:39:30.640"></status>
</kw>
<kw name="Check XWSTATUS Completed" library="XWClient">
<arguments>
<arg>${workuid}</arg>
</arguments>
<kw name="XWSTATUSCommand" library="XWClient">
<doc>Usage : XWSTATUS uid</doc>
<arguments>
<arg>${uid}</arg>
</arguments>
<assign>
<var>${status_result}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd ${DIST_XWHEP_PATH}/bin &amp;&amp; ./xwstatus ${uid}</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${cmd_result}</var>
</assign>
<msg timestamp="20170915 10:39:37.225" level="INFO">Starting process:
cd /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin &amp;&amp; ./xwstatus 5190dfc9-0c89-455a-a8c1-88f9890e81fe</msg>
<msg timestamp="20170915 10:39:37.228" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170915 10:39:37.781" level="INFO">Process completed.</msg>
<msg timestamp="20170915 10:39:37.781" level="INFO">${cmd_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170915 10:39:37.781" starttime="20170915 10:39:37.224"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stderr}</arg>
</arguments>
<msg timestamp="20170915 10:39:37.782" level="INFO"></msg>
<status status="PASS" endtime="20170915 10:39:37.782" starttime="20170915 10:39:37.782"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
</arguments>
<msg timestamp="20170915 10:39:37.782" level="INFO"> UID='5190dfc9-0c89-455a-a8c1-88f9890e81fe', STATUS='RUNNING', COMPLETEDDATE=NULL, LABEL=NULL</msg>
<status status="PASS" endtime="20170915 10:39:37.783" starttime="20170915 10:39:37.782"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${cmd_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170915 10:39:37.783" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170915 10:39:37.783" starttime="20170915 10:39:37.783"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
<arg>STATUS='(?P&lt;status&gt;.*)', COMPLETEDDATE</arg>
<arg>status</arg>
</arguments>
<assign>
<var>@{status_result}</var>
</assign>
<msg timestamp="20170915 10:39:37.784" level="INFO">@{status_result} = [ RUNNING ]</msg>
<status status="PASS" endtime="20170915 10:39:37.784" starttime="20170915 10:39:37.783"></status>
</kw>
<msg timestamp="20170915 10:39:37.784" level="INFO">${status_result} = RUNNING</msg>
<status status="PASS" endtime="20170915 10:39:37.784" starttime="20170915 10:39:37.224"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${status_result}</arg>
<arg>COMPLETED</arg>
</arguments>
<msg timestamp="20170915 10:39:37.785" level="FAIL">RUNNING != COMPLETED</msg>
<status status="FAIL" endtime="20170915 10:39:37.785" starttime="20170915 10:39:37.784"></status>
</kw>
<status status="FAIL" endtime="20170915 10:39:37.785" starttime="20170915 10:39:37.223"></status>
</kw>
<kw name="Check XWSTATUS Completed" library="XWClient">
<arguments>
<arg>${workuid}</arg>
</arguments>
<kw name="XWSTATUSCommand" library="XWClient">
<doc>Usage : XWSTATUS uid</doc>
<arguments>
<arg>${uid}</arg>
</arguments>
<assign>
<var>${status_result}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd ${DIST_XWHEP_PATH}/bin &amp;&amp; ./xwstatus ${uid}</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${cmd_result}</var>
</assign>
<msg timestamp="20170915 10:39:42.787" level="INFO">Starting process:
cd /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin &amp;&amp; ./xwstatus 5190dfc9-0c89-455a-a8c1-88f9890e81fe</msg>
<msg timestamp="20170915 10:39:42.793" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170915 10:39:43.341" level="INFO">Process completed.</msg>
<msg timestamp="20170915 10:39:43.341" level="INFO">${cmd_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170915 10:39:43.341" starttime="20170915 10:39:42.786"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stderr}</arg>
</arguments>
<msg timestamp="20170915 10:39:43.342" level="INFO"></msg>
<status status="PASS" endtime="20170915 10:39:43.342" starttime="20170915 10:39:43.341"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
</arguments>
<msg timestamp="20170915 10:39:43.343" level="INFO"> UID='5190dfc9-0c89-455a-a8c1-88f9890e81fe', STATUS='RUNNING', COMPLETEDDATE=NULL, LABEL=NULL</msg>
<status status="PASS" endtime="20170915 10:39:43.343" starttime="20170915 10:39:43.342"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${cmd_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170915 10:39:43.343" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170915 10:39:43.343" starttime="20170915 10:39:43.343"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
<arg>STATUS='(?P&lt;status&gt;.*)', COMPLETEDDATE</arg>
<arg>status</arg>
</arguments>
<assign>
<var>@{status_result}</var>
</assign>
<msg timestamp="20170915 10:39:43.344" level="INFO">@{status_result} = [ RUNNING ]</msg>
<status status="PASS" endtime="20170915 10:39:43.344" starttime="20170915 10:39:43.343"></status>
</kw>
<msg timestamp="20170915 10:39:43.344" level="INFO">${status_result} = RUNNING</msg>
<status status="PASS" endtime="20170915 10:39:43.344" starttime="20170915 10:39:42.786"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${status_result}</arg>
<arg>COMPLETED</arg>
</arguments>
<msg timestamp="20170915 10:39:43.344" level="FAIL">RUNNING != COMPLETED</msg>
<status status="FAIL" endtime="20170915 10:39:43.345" starttime="20170915 10:39:43.344"></status>
</kw>
<status status="FAIL" endtime="20170915 10:39:43.345" starttime="20170915 10:39:42.785"></status>
</kw>
<kw name="Check XWSTATUS Completed" library="XWClient">
<arguments>
<arg>${workuid}</arg>
</arguments>
<kw name="XWSTATUSCommand" library="XWClient">
<doc>Usage : XWSTATUS uid</doc>
<arguments>
<arg>${uid}</arg>
</arguments>
<assign>
<var>${status_result}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd ${DIST_XWHEP_PATH}/bin &amp;&amp; ./xwstatus ${uid}</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${cmd_result}</var>
</assign>
<msg timestamp="20170915 10:39:48.353" level="INFO">Starting process:
cd /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin &amp;&amp; ./xwstatus 5190dfc9-0c89-455a-a8c1-88f9890e81fe</msg>
<msg timestamp="20170915 10:39:48.357" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170915 10:39:48.890" level="INFO">Process completed.</msg>
<msg timestamp="20170915 10:39:48.890" level="INFO">${cmd_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170915 10:39:48.890" starttime="20170915 10:39:48.353"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stderr}</arg>
</arguments>
<msg timestamp="20170915 10:39:48.891" level="INFO"></msg>
<status status="PASS" endtime="20170915 10:39:48.891" starttime="20170915 10:39:48.891"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
</arguments>
<msg timestamp="20170915 10:39:48.891" level="INFO"> UID='5190dfc9-0c89-455a-a8c1-88f9890e81fe', STATUS='RUNNING', COMPLETEDDATE=NULL, LABEL=NULL</msg>
<status status="PASS" endtime="20170915 10:39:48.891" starttime="20170915 10:39:48.891"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${cmd_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170915 10:39:48.892" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170915 10:39:48.892" starttime="20170915 10:39:48.892"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
<arg>STATUS='(?P&lt;status&gt;.*)', COMPLETEDDATE</arg>
<arg>status</arg>
</arguments>
<assign>
<var>@{status_result}</var>
</assign>
<msg timestamp="20170915 10:39:48.892" level="INFO">@{status_result} = [ RUNNING ]</msg>
<status status="PASS" endtime="20170915 10:39:48.892" starttime="20170915 10:39:48.892"></status>
</kw>
<msg timestamp="20170915 10:39:48.893" level="INFO">${status_result} = RUNNING</msg>
<status status="PASS" endtime="20170915 10:39:48.893" starttime="20170915 10:39:48.352"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${status_result}</arg>
<arg>COMPLETED</arg>
</arguments>
<msg timestamp="20170915 10:39:48.893" level="FAIL">RUNNING != COMPLETED</msg>
<status status="FAIL" endtime="20170915 10:39:48.893" starttime="20170915 10:39:48.893"></status>
</kw>
<status status="FAIL" endtime="20170915 10:39:48.893" starttime="20170915 10:39:48.351"></status>
</kw>
<kw name="Check XWSTATUS Completed" library="XWClient">
<arguments>
<arg>${workuid}</arg>
</arguments>
<kw name="XWSTATUSCommand" library="XWClient">
<doc>Usage : XWSTATUS uid</doc>
<arguments>
<arg>${uid}</arg>
</arguments>
<assign>
<var>${status_result}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd ${DIST_XWHEP_PATH}/bin &amp;&amp; ./xwstatus ${uid}</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${cmd_result}</var>
</assign>
<msg timestamp="20170915 10:39:53.896" level="INFO">Starting process:
cd /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin &amp;&amp; ./xwstatus 5190dfc9-0c89-455a-a8c1-88f9890e81fe</msg>
<msg timestamp="20170915 10:39:53.899" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170915 10:39:54.439" level="INFO">Process completed.</msg>
<msg timestamp="20170915 10:39:54.439" level="INFO">${cmd_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170915 10:39:54.439" starttime="20170915 10:39:53.895"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stderr}</arg>
</arguments>
<msg timestamp="20170915 10:39:54.440" level="INFO"></msg>
<status status="PASS" endtime="20170915 10:39:54.440" starttime="20170915 10:39:54.440"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
</arguments>
<msg timestamp="20170915 10:39:54.441" level="INFO"> UID='5190dfc9-0c89-455a-a8c1-88f9890e81fe', STATUS='RUNNING', COMPLETEDDATE=NULL, LABEL=NULL</msg>
<status status="PASS" endtime="20170915 10:39:54.441" starttime="20170915 10:39:54.441"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${cmd_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170915 10:39:54.442" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170915 10:39:54.442" starttime="20170915 10:39:54.441"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
<arg>STATUS='(?P&lt;status&gt;.*)', COMPLETEDDATE</arg>
<arg>status</arg>
</arguments>
<assign>
<var>@{status_result}</var>
</assign>
<msg timestamp="20170915 10:39:54.442" level="INFO">@{status_result} = [ RUNNING ]</msg>
<status status="PASS" endtime="20170915 10:39:54.442" starttime="20170915 10:39:54.442"></status>
</kw>
<msg timestamp="20170915 10:39:54.443" level="INFO">${status_result} = RUNNING</msg>
<status status="PASS" endtime="20170915 10:39:54.443" starttime="20170915 10:39:53.895"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${status_result}</arg>
<arg>COMPLETED</arg>
</arguments>
<msg timestamp="20170915 10:39:54.443" level="FAIL">RUNNING != COMPLETED</msg>
<status status="FAIL" endtime="20170915 10:39:54.443" starttime="20170915 10:39:54.443"></status>
</kw>
<status status="FAIL" endtime="20170915 10:39:54.444" starttime="20170915 10:39:53.894"></status>
</kw>
<kw name="Check XWSTATUS Completed" library="XWClient">
<arguments>
<arg>${workuid}</arg>
</arguments>
<kw name="XWSTATUSCommand" library="XWClient">
<doc>Usage : XWSTATUS uid</doc>
<arguments>
<arg>${uid}</arg>
</arguments>
<assign>
<var>${status_result}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd ${DIST_XWHEP_PATH}/bin &amp;&amp; ./xwstatus ${uid}</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${cmd_result}</var>
</assign>
<msg timestamp="20170915 10:39:59.447" level="INFO">Starting process:
cd /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin &amp;&amp; ./xwstatus 5190dfc9-0c89-455a-a8c1-88f9890e81fe</msg>
<msg timestamp="20170915 10:39:59.452" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170915 10:39:59.983" level="INFO">Process completed.</msg>
<msg timestamp="20170915 10:39:59.984" level="INFO">${cmd_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170915 10:39:59.984" starttime="20170915 10:39:59.446"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stderr}</arg>
</arguments>
<msg timestamp="20170915 10:39:59.985" level="INFO"></msg>
<status status="PASS" endtime="20170915 10:39:59.985" starttime="20170915 10:39:59.984"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
</arguments>
<msg timestamp="20170915 10:39:59.985" level="INFO"> UID='5190dfc9-0c89-455a-a8c1-88f9890e81fe', STATUS='RUNNING', COMPLETEDDATE=NULL, LABEL=NULL</msg>
<status status="PASS" endtime="20170915 10:39:59.986" starttime="20170915 10:39:59.985"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${cmd_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170915 10:39:59.987" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170915 10:39:59.987" starttime="20170915 10:39:59.986"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
<arg>STATUS='(?P&lt;status&gt;.*)', COMPLETEDDATE</arg>
<arg>status</arg>
</arguments>
<assign>
<var>@{status_result}</var>
</assign>
<msg timestamp="20170915 10:39:59.987" level="INFO">@{status_result} = [ RUNNING ]</msg>
<status status="PASS" endtime="20170915 10:39:59.987" starttime="20170915 10:39:59.987"></status>
</kw>
<msg timestamp="20170915 10:39:59.988" level="INFO">${status_result} = RUNNING</msg>
<status status="PASS" endtime="20170915 10:39:59.988" starttime="20170915 10:39:59.446"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${status_result}</arg>
<arg>COMPLETED</arg>
</arguments>
<msg timestamp="20170915 10:39:59.988" level="FAIL">RUNNING != COMPLETED</msg>
<status status="FAIL" endtime="20170915 10:39:59.988" starttime="20170915 10:39:59.988"></status>
</kw>
<status status="FAIL" endtime="20170915 10:39:59.989" starttime="20170915 10:39:59.444"></status>
</kw>
<kw name="Check XWSTATUS Completed" library="XWClient">
<arguments>
<arg>${workuid}</arg>
</arguments>
<kw name="XWSTATUSCommand" library="XWClient">
<doc>Usage : XWSTATUS uid</doc>
<arguments>
<arg>${uid}</arg>
</arguments>
<assign>
<var>${status_result}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd ${DIST_XWHEP_PATH}/bin &amp;&amp; ./xwstatus ${uid}</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${cmd_result}</var>
</assign>
<msg timestamp="20170915 10:40:04.992" level="INFO">Starting process:
cd /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin &amp;&amp; ./xwstatus 5190dfc9-0c89-455a-a8c1-88f9890e81fe</msg>
<msg timestamp="20170915 10:40:04.995" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170915 10:40:05.510" level="INFO">Process completed.</msg>
<msg timestamp="20170915 10:40:05.511" level="INFO">${cmd_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170915 10:40:05.511" starttime="20170915 10:40:04.992"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stderr}</arg>
</arguments>
<msg timestamp="20170915 10:40:05.512" level="INFO"></msg>
<status status="PASS" endtime="20170915 10:40:05.512" starttime="20170915 10:40:05.511"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
</arguments>
<msg timestamp="20170915 10:40:05.512" level="INFO"> UID='5190dfc9-0c89-455a-a8c1-88f9890e81fe', STATUS='RUNNING', COMPLETEDDATE=NULL, LABEL=NULL</msg>
<status status="PASS" endtime="20170915 10:40:05.512" starttime="20170915 10:40:05.512"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${cmd_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170915 10:40:05.513" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170915 10:40:05.513" starttime="20170915 10:40:05.512"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
<arg>STATUS='(?P&lt;status&gt;.*)', COMPLETEDDATE</arg>
<arg>status</arg>
</arguments>
<assign>
<var>@{status_result}</var>
</assign>
<msg timestamp="20170915 10:40:05.513" level="INFO">@{status_result} = [ RUNNING ]</msg>
<status status="PASS" endtime="20170915 10:40:05.513" starttime="20170915 10:40:05.513"></status>
</kw>
<msg timestamp="20170915 10:40:05.514" level="INFO">${status_result} = RUNNING</msg>
<status status="PASS" endtime="20170915 10:40:05.514" starttime="20170915 10:40:04.991"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${status_result}</arg>
<arg>COMPLETED</arg>
</arguments>
<msg timestamp="20170915 10:40:05.514" level="FAIL">RUNNING != COMPLETED</msg>
<status status="FAIL" endtime="20170915 10:40:05.514" starttime="20170915 10:40:05.514"></status>
</kw>
<status status="FAIL" endtime="20170915 10:40:05.514" starttime="20170915 10:40:04.990"></status>
</kw>
<kw name="Check XWSTATUS Completed" library="XWClient">
<arguments>
<arg>${workuid}</arg>
</arguments>
<kw name="XWSTATUSCommand" library="XWClient">
<doc>Usage : XWSTATUS uid</doc>
<arguments>
<arg>${uid}</arg>
</arguments>
<assign>
<var>${status_result}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd ${DIST_XWHEP_PATH}/bin &amp;&amp; ./xwstatus ${uid}</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${cmd_result}</var>
</assign>
<msg timestamp="20170915 10:40:10.518" level="INFO">Starting process:
cd /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin &amp;&amp; ./xwstatus 5190dfc9-0c89-455a-a8c1-88f9890e81fe</msg>
<msg timestamp="20170915 10:40:10.521" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170915 10:40:11.102" level="INFO">Process completed.</msg>
<msg timestamp="20170915 10:40:11.102" level="INFO">${cmd_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170915 10:40:11.102" starttime="20170915 10:40:10.517"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stderr}</arg>
</arguments>
<msg timestamp="20170915 10:40:11.103" level="INFO"></msg>
<status status="PASS" endtime="20170915 10:40:11.103" starttime="20170915 10:40:11.103"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
</arguments>
<msg timestamp="20170915 10:40:11.104" level="INFO"> UID='5190dfc9-0c89-455a-a8c1-88f9890e81fe', STATUS='COMPLETED', COMPLETEDDATE='2017-09-15 10:40:05', LABEL=NULL</msg>
<status status="PASS" endtime="20170915 10:40:11.104" starttime="20170915 10:40:11.103"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${cmd_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170915 10:40:11.104" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170915 10:40:11.104" starttime="20170915 10:40:11.104"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
<arg>STATUS='(?P&lt;status&gt;.*)', COMPLETEDDATE</arg>
<arg>status</arg>
</arguments>
<assign>
<var>@{status_result}</var>
</assign>
<msg timestamp="20170915 10:40:11.105" level="INFO">@{status_result} = [ COMPLETED ]</msg>
<status status="PASS" endtime="20170915 10:40:11.105" starttime="20170915 10:40:11.105"></status>
</kw>
<msg timestamp="20170915 10:40:11.105" level="INFO">${status_result} = COMPLETED</msg>
<status status="PASS" endtime="20170915 10:40:11.106" starttime="20170915 10:40:10.517"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${status_result}</arg>
<arg>COMPLETED</arg>
</arguments>
<status status="PASS" endtime="20170915 10:40:11.106" starttime="20170915 10:40:11.106"></status>
</kw>
<status status="PASS" endtime="20170915 10:40:11.106" starttime="20170915 10:40:10.516"></status>
</kw>
<status status="PASS" endtime="20170915 10:40:11.106" starttime="20170915 10:39:02.785"></status>
</kw>
<kw name="XWRESULTSCommand" library="XWClient">
<doc>Usage : XWRESULT uid</doc>
<arguments>
<arg>${workuid}</arg>
</arguments>
<assign>
<var>${results_file}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd ${DIST_XWHEP_PATH}/bin &amp;&amp; ./xwresults ${uid}</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${cmd_result}</var>
</assign>
<msg timestamp="20170915 10:40:11.108" level="INFO">Starting process:
cd /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin &amp;&amp; ./xwresults 5190dfc9-0c89-455a-a8c1-88f9890e81fe</msg>
<msg timestamp="20170915 10:40:11.111" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170915 10:40:11.788" level="INFO">Process completed.</msg>
<msg timestamp="20170915 10:40:11.789" level="INFO">${cmd_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170915 10:40:11.789" starttime="20170915 10:40:11.107"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stderr}</arg>
</arguments>
<msg timestamp="20170915 10:40:11.791" level="INFO"></msg>
<status status="PASS" endtime="20170915 10:40:11.791" starttime="20170915 10:40:11.790"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
</arguments>
<msg timestamp="20170915 10:40:11.792" level="INFO"> UID='5190dfc9-0c89-455a-a8c1-88f9890e81fe', STATUS='COMPLETED', COMPLETEDDATE='2017-09-15 10:40:05', LABEL=NULL
[15/Sep/2017:10:40:11 +0000] [xtremweb.client.Client_main_1] INFO : Downloaded to : /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/d6d5e385-bf27-41de-a4f0-e50e842dc036_stdout.txt.txt</msg>
<status status="PASS" endtime="20170915 10:40:11.793" starttime="20170915 10:40:11.792"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${cmd_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170915 10:40:11.793" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170915 10:40:11.793" starttime="20170915 10:40:11.793"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
<arg>INFO : Downloaded to : (?P&lt;file&gt;.*)</arg>
<arg>file</arg>
</arguments>
<assign>
<var>@{results_file}</var>
</assign>
<msg timestamp="20170915 10:40:11.795" level="INFO">@{results_file} = [ /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/d6d5e385-bf27-41de-a4f0-e50e842dc036_stdout.txt.txt ]</msg>
<status status="PASS" endtime="20170915 10:40:11.795" starttime="20170915 10:40:11.794"></status>
</kw>
<msg timestamp="20170915 10:40:11.795" level="INFO">${results_file} = /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/d6d5e385-bf27-41de-a4f0-e50e842dc036_stdout.txt.txt</msg>
<status status="PASS" endtime="20170915 10:40:11.796" starttime="20170915 10:40:11.107"></status>
</kw>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${results_file}</arg>
</arguments>
<assign>
<var>${results_file_content}</var>
</assign>
<msg timestamp="20170915 10:40:11.797" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/d6d5e385-bf27-41de-a4f0-e50e842dc036_stdout.txt.txt"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/d6d5e385-bf27-41de-a4f0-e50e842dc036_stdout.txt.txt&lt;/a&gt;'.</msg>
<msg timestamp="20170915 10:40:11.798" level="INFO">${results_file_content} = stderr.txt
stdout.txt
</msg>
<status status="PASS" endtime="20170915 10:40:11.798" starttime="20170915 10:40:11.797"></status>
</kw>
<kw name="Get Line Count" library="String">
<doc>Returns and logs the number of lines in the given string.</doc>
<arguments>
<arg>${results_file_content}</arg>
</arguments>
<assign>
<var>${results_file_content_lines_count}</var>
</assign>
<msg timestamp="20170915 10:40:11.799" level="INFO">2 lines</msg>
<msg timestamp="20170915 10:40:11.799" level="INFO">${results_file_content_lines_count} = 2</msg>
<status status="PASS" endtime="20170915 10:40:11.799" starttime="20170915 10:40:11.799"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${results_file_content_lines_count}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20170915 10:40:11.800" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170915 10:40:11.800" starttime="20170915 10:40:11.799"></status>
</kw>
<kw name="Split To Lines" library="String">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${results_file_content}</arg>
</arguments>
<assign>
<var>@{results_file_lines}</var>
</assign>
<msg timestamp="20170915 10:40:11.800" level="INFO">2 lines returned</msg>
<msg timestamp="20170915 10:40:11.801" level="INFO">@{results_file_lines} = [ stderr.txt | stdout.txt ]</msg>
<status status="PASS" endtime="20170915 10:40:11.801" starttime="20170915 10:40:11.800"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>@{results_file_lines}[0]</arg>
<arg>stderr.txt</arg>
</arguments>
<status status="PASS" endtime="20170915 10:40:11.801" starttime="20170915 10:40:11.801"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>@{results_file_lines}[1]</arg>
<arg>stdout.txt</arg>
</arguments>
<status status="PASS" endtime="20170915 10:40:11.802" starttime="20170915 10:40:11.801"></status>
</kw>
<kw type="teardown" name="End XWtremWeb Command Test" library="XWCommon">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Nothing to do</arg>
</arguments>
<msg timestamp="20170915 10:40:11.806" level="INFO">Nothing to do</msg>
<status status="PASS" endtime="20170915 10:40:11.806" starttime="20170915 10:40:11.806"></status>
</kw>
<status status="PASS" endtime="20170915 10:40:11.806" starttime="20170915 10:40:11.803"></status>
</kw>
<doc>Testing XWSubmit and XWResults cmd</doc>
<tags>
<tag>CommandLine Tests</tag>
</tags>
<status status="PASS" endtime="20170915 10:40:11.806" critical="yes" starttime="20170915 10:38:55.720"></status>
</test>
<test id="s1-s6-t4" name="Test XWSubmit and XWResults Command On LS Binary With Param">
<kw type="setup" name="Begin XWtremWeb Command Test" library="XWCommon">
<kw name="Ping XWtremWeb Database" library="XWServer">
<kw name="Xtremweb Tables Must Exist" library="MySql">
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170915 10:40:11.811" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170915 10:40:11.813" starttime="20170915 10:40:11.811"></status>
</kw>
<status status="PASS" endtime="20170915 10:40:11.814" starttime="20170915 10:40:11.810"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>appTypes</arg>
</arguments>
<msg timestamp="20170915 10:40:11.814" level="INFO">Executing : Table Must Exist  |  appTypes </msg>
<msg timestamp="20170915 10:40:11.814" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='appTypes' </msg>
<status status="PASS" endtime="20170915 10:40:11.816" starttime="20170915 10:40:11.814"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps</arg>
</arguments>
<msg timestamp="20170915 10:40:11.816" level="INFO">Executing : Table Must Exist  |  apps </msg>
<msg timestamp="20170915 10:40:11.816" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='apps' </msg>
<status status="PASS" endtime="20170915 10:40:11.817" starttime="20170915 10:40:11.816"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps_history</arg>
</arguments>
<msg timestamp="20170915 10:40:11.818" level="INFO">Executing : Table Must Exist  |  apps_history </msg>
<msg timestamp="20170915 10:40:11.818" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='apps_history' </msg>
<status status="PASS" endtime="20170915 10:40:11.819" starttime="20170915 10:40:11.818"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>cpuTypes</arg>
</arguments>
<msg timestamp="20170915 10:40:11.820" level="INFO">Executing : Table Must Exist  |  cpuTypes </msg>
<msg timestamp="20170915 10:40:11.820" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='cpuTypes' </msg>
<status status="PASS" endtime="20170915 10:40:11.821" starttime="20170915 10:40:11.820"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>dataTypes</arg>
</arguments>
<msg timestamp="20170915 10:40:11.822" level="INFO">Executing : Table Must Exist  |  dataTypes </msg>
<msg timestamp="20170915 10:40:11.822" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='dataTypes' </msg>
<status status="PASS" endtime="20170915 10:40:11.823" starttime="20170915 10:40:11.821"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas</arg>
</arguments>
<msg timestamp="20170915 10:40:11.823" level="INFO">Executing : Table Must Exist  |  datas </msg>
<msg timestamp="20170915 10:40:11.823" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='datas' </msg>
<status status="PASS" endtime="20170915 10:40:11.824" starttime="20170915 10:40:11.823"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas_history</arg>
</arguments>
<msg timestamp="20170915 10:40:11.824" level="INFO">Executing : Table Must Exist  |  datas_history </msg>
<msg timestamp="20170915 10:40:11.825" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='datas_history' </msg>
<status status="PASS" endtime="20170915 10:40:11.826" starttime="20170915 10:40:11.824"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables</arg>
</arguments>
<msg timestamp="20170915 10:40:11.826" level="INFO">Executing : Table Must Exist  |  executables </msg>
<msg timestamp="20170915 10:40:11.826" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='executables' </msg>
<status status="PASS" endtime="20170915 10:40:11.827" starttime="20170915 10:40:11.826"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables_history</arg>
</arguments>
<msg timestamp="20170915 10:40:11.827" level="INFO">Executing : Table Must Exist  |  executables_history </msg>
<msg timestamp="20170915 10:40:11.827" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='executables_history' </msg>
<status status="PASS" endtime="20170915 10:40:11.828" starttime="20170915 10:40:11.827"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups</arg>
</arguments>
<msg timestamp="20170915 10:40:11.829" level="INFO">Executing : Table Must Exist  |  groups </msg>
<msg timestamp="20170915 10:40:11.829" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='groups' </msg>
<status status="PASS" endtime="20170915 10:40:11.830" starttime="20170915 10:40:11.829"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups_history</arg>
</arguments>
<msg timestamp="20170915 10:40:11.831" level="INFO">Executing : Table Must Exist  |  groups_history </msg>
<msg timestamp="20170915 10:40:11.831" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='groups_history' </msg>
<status status="PASS" endtime="20170915 10:40:11.832" starttime="20170915 10:40:11.830"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts</arg>
</arguments>
<msg timestamp="20170915 10:40:11.833" level="INFO">Executing : Table Must Exist  |  hosts </msg>
<msg timestamp="20170915 10:40:11.833" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='hosts' </msg>
<status status="PASS" endtime="20170915 10:40:11.835" starttime="20170915 10:40:11.832"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts_history</arg>
</arguments>
<msg timestamp="20170915 10:40:11.836" level="INFO">Executing : Table Must Exist  |  hosts_history </msg>
<msg timestamp="20170915 10:40:11.836" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='hosts_history' </msg>
<status status="PASS" endtime="20170915 10:40:11.838" starttime="20170915 10:40:11.836"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships</arg>
</arguments>
<msg timestamp="20170915 10:40:11.839" level="INFO">Executing : Table Must Exist  |  memberships </msg>
<msg timestamp="20170915 10:40:11.839" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='memberships' </msg>
<status status="PASS" endtime="20170915 10:40:11.840" starttime="20170915 10:40:11.838"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships_history</arg>
</arguments>
<msg timestamp="20170915 10:40:11.840" level="INFO">Executing : Table Must Exist  |  memberships_history </msg>
<msg timestamp="20170915 10:40:11.840" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='memberships_history' </msg>
<status status="PASS" endtime="20170915 10:40:11.841" starttime="20170915 10:40:11.840"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>oses</arg>
</arguments>
<msg timestamp="20170915 10:40:11.841" level="INFO">Executing : Table Must Exist  |  oses </msg>
<msg timestamp="20170915 10:40:11.842" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='oses' </msg>
<status status="PASS" endtime="20170915 10:40:11.842" starttime="20170915 10:40:11.841"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>packageTypes</arg>
</arguments>
<msg timestamp="20170915 10:40:11.843" level="INFO">Executing : Table Must Exist  |  packageTypes </msg>
<msg timestamp="20170915 10:40:11.843" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='packageTypes' </msg>
<status status="PASS" endtime="20170915 10:40:11.844" starttime="20170915 10:40:11.843"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions</arg>
</arguments>
<msg timestamp="20170915 10:40:11.844" level="INFO">Executing : Table Must Exist  |  sessions </msg>
<msg timestamp="20170915 10:40:11.844" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sessions' </msg>
<status status="PASS" endtime="20170915 10:40:11.845" starttime="20170915 10:40:11.844"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions_history</arg>
</arguments>
<msg timestamp="20170915 10:40:11.846" level="INFO">Executing : Table Must Exist  |  sessions_history </msg>
<msg timestamp="20170915 10:40:11.846" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sessions_history' </msg>
<status status="PASS" endtime="20170915 10:40:11.847" starttime="20170915 10:40:11.846"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes</arg>
</arguments>
<msg timestamp="20170915 10:40:11.848" level="INFO">Executing : Table Must Exist  |  sharedAppTypes </msg>
<msg timestamp="20170915 10:40:11.848" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedAppTypes' </msg>
<status status="PASS" endtime="20170915 10:40:11.849" starttime="20170915 10:40:11.848"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes_history</arg>
</arguments>
<msg timestamp="20170915 10:40:11.849" level="INFO">Executing : Table Must Exist  |  sharedAppTypes_history </msg>
<msg timestamp="20170915 10:40:11.849" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedAppTypes_history' </msg>
<status status="PASS" endtime="20170915 10:40:11.850" starttime="20170915 10:40:11.849"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes</arg>
</arguments>
<msg timestamp="20170915 10:40:11.851" level="INFO">Executing : Table Must Exist  |  sharedPackageTypes </msg>
<msg timestamp="20170915 10:40:11.851" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedPackageTypes' </msg>
<status status="PASS" endtime="20170915 10:40:11.852" starttime="20170915 10:40:11.850"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes_history</arg>
</arguments>
<msg timestamp="20170915 10:40:11.853" level="INFO">Executing : Table Must Exist  |  sharedPackageTypes_history </msg>
<msg timestamp="20170915 10:40:11.853" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedPackageTypes_history' </msg>
<status status="PASS" endtime="20170915 10:40:11.854" starttime="20170915 10:40:11.853"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>statuses</arg>
</arguments>
<msg timestamp="20170915 10:40:11.854" level="INFO">Executing : Table Must Exist  |  statuses </msg>
<msg timestamp="20170915 10:40:11.855" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='statuses' </msg>
<status status="PASS" endtime="20170915 10:40:11.856" starttime="20170915 10:40:11.854"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks</arg>
</arguments>
<msg timestamp="20170915 10:40:11.856" level="INFO">Executing : Table Must Exist  |  tasks </msg>
<msg timestamp="20170915 10:40:11.856" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='tasks' </msg>
<status status="PASS" endtime="20170915 10:40:11.857" starttime="20170915 10:40:11.856"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks_history</arg>
</arguments>
<msg timestamp="20170915 10:40:11.858" level="INFO">Executing : Table Must Exist  |  tasks_history </msg>
<msg timestamp="20170915 10:40:11.858" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='tasks_history' </msg>
<status status="PASS" endtime="20170915 10:40:11.859" starttime="20170915 10:40:11.857"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces</arg>
</arguments>
<msg timestamp="20170915 10:40:11.859" level="INFO">Executing : Table Must Exist  |  traces </msg>
<msg timestamp="20170915 10:40:11.859" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='traces' </msg>
<status status="PASS" endtime="20170915 10:40:11.861" starttime="20170915 10:40:11.859"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces_history</arg>
</arguments>
<msg timestamp="20170915 10:40:11.862" level="INFO">Executing : Table Must Exist  |  traces_history </msg>
<msg timestamp="20170915 10:40:11.862" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='traces_history' </msg>
<status status="PASS" endtime="20170915 10:40:11.864" starttime="20170915 10:40:11.862"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>userRights</arg>
</arguments>
<msg timestamp="20170915 10:40:11.864" level="INFO">Executing : Table Must Exist  |  userRights </msg>
<msg timestamp="20170915 10:40:11.865" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='userRights' </msg>
<status status="PASS" endtime="20170915 10:40:11.870" starttime="20170915 10:40:11.864"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups</arg>
</arguments>
<msg timestamp="20170915 10:40:11.871" level="INFO">Executing : Table Must Exist  |  usergroups </msg>
<msg timestamp="20170915 10:40:11.871" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='usergroups' </msg>
<status status="PASS" endtime="20170915 10:40:11.872" starttime="20170915 10:40:11.870"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups_history</arg>
</arguments>
<msg timestamp="20170915 10:40:11.873" level="INFO">Executing : Table Must Exist  |  usergroups_history </msg>
<msg timestamp="20170915 10:40:11.873" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='usergroups_history' </msg>
<status status="PASS" endtime="20170915 10:40:11.875" starttime="20170915 10:40:11.872"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users</arg>
</arguments>
<msg timestamp="20170915 10:40:11.875" level="INFO">Executing : Table Must Exist  |  users </msg>
<msg timestamp="20170915 10:40:11.876" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='users' </msg>
<status status="PASS" endtime="20170915 10:40:11.878" starttime="20170915 10:40:11.875"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users_history</arg>
</arguments>
<msg timestamp="20170915 10:40:11.878" level="INFO">Executing : Table Must Exist  |  users_history </msg>
<msg timestamp="20170915 10:40:11.878" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='users_history' </msg>
<status status="PASS" endtime="20170915 10:40:11.880" starttime="20170915 10:40:11.878"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>version</arg>
</arguments>
<msg timestamp="20170915 10:40:11.880" level="INFO">Executing : Table Must Exist  |  version </msg>
<msg timestamp="20170915 10:40:11.880" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='version' </msg>
<status status="PASS" endtime="20170915 10:40:11.883" starttime="20170915 10:40:11.880"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>versions</arg>
</arguments>
<msg timestamp="20170915 10:40:11.884" level="INFO">Executing : Table Must Exist  |  versions </msg>
<msg timestamp="20170915 10:40:11.884" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='versions' </msg>
<status status="PASS" endtime="20170915 10:40:11.885" starttime="20170915 10:40:11.883"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps</arg>
</arguments>
<msg timestamp="20170915 10:40:11.886" level="INFO">Executing : Table Must Exist  |  view_apps </msg>
<msg timestamp="20170915 10:40:11.886" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps' </msg>
<status status="PASS" endtime="20170915 10:40:11.887" starttime="20170915 10:40:11.886"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps_for_offering</arg>
</arguments>
<msg timestamp="20170915 10:40:11.888" level="INFO">Executing : Table Must Exist  |  view_apps_for_offering </msg>
<msg timestamp="20170915 10:40:11.888" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps_for_offering' </msg>
<status status="PASS" endtime="20170915 10:40:11.890" starttime="20170915 10:40:11.888"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps_for_offering_with_file_sizes</arg>
</arguments>
<msg timestamp="20170915 10:40:11.890" level="INFO">Executing : Table Must Exist  |  view_apps_for_offering_with_file_sizes </msg>
<msg timestamp="20170915 10:40:11.890" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps_for_offering_with_file_sizes' </msg>
<status status="PASS" endtime="20170915 10:40:11.892" starttime="20170915 10:40:11.890"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_datas</arg>
</arguments>
<msg timestamp="20170915 10:40:11.892" level="INFO">Executing : Table Must Exist  |  view_datas </msg>
<msg timestamp="20170915 10:40:11.892" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_datas' </msg>
<status status="PASS" endtime="20170915 10:40:11.893" starttime="20170915 10:40:11.892"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_executables</arg>
</arguments>
<msg timestamp="20170915 10:40:11.894" level="INFO">Executing : Table Must Exist  |  view_executables </msg>
<msg timestamp="20170915 10:40:11.894" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_executables' </msg>
<status status="PASS" endtime="20170915 10:40:11.895" starttime="20170915 10:40:11.894"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_groups</arg>
</arguments>
<msg timestamp="20170915 10:40:11.895" level="INFO">Executing : Table Must Exist  |  view_groups </msg>
<msg timestamp="20170915 10:40:11.896" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_groups' </msg>
<status status="PASS" endtime="20170915 10:40:11.897" starttime="20170915 10:40:11.895"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts</arg>
</arguments>
<msg timestamp="20170915 10:40:11.897" level="INFO">Executing : Table Must Exist  |  view_hosts </msg>
<msg timestamp="20170915 10:40:11.897" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts' </msg>
<status status="PASS" endtime="20170915 10:40:11.898" starttime="20170915 10:40:11.897"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_deployable</arg>
</arguments>
<msg timestamp="20170915 10:40:11.899" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_deployable </msg>
<msg timestamp="20170915 10:40:11.899" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_deployable' </msg>
<status status="PASS" endtime="20170915 10:40:11.900" starttime="20170915 10:40:11.898"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_deployable_and_shared</arg>
</arguments>
<msg timestamp="20170915 10:40:11.901" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_deployable_and_shared </msg>
<msg timestamp="20170915 10:40:11.901" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_deployable_and_shared' </msg>
<status status="PASS" endtime="20170915 10:40:11.903" starttime="20170915 10:40:11.900"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_shared</arg>
</arguments>
<msg timestamp="20170915 10:40:11.903" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_shared </msg>
<msg timestamp="20170915 10:40:11.903" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_shared' </msg>
<status status="PASS" endtime="20170915 10:40:11.904" starttime="20170915 10:40:11.903"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_sessions</arg>
</arguments>
<msg timestamp="20170915 10:40:11.905" level="INFO">Executing : Table Must Exist  |  view_sessions </msg>
<msg timestamp="20170915 10:40:11.905" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_sessions' </msg>
<status status="PASS" endtime="20170915 10:40:11.906" starttime="20170915 10:40:11.904"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_tasks</arg>
</arguments>
<msg timestamp="20170915 10:40:11.906" level="INFO">Executing : Table Must Exist  |  view_tasks </msg>
<msg timestamp="20170915 10:40:11.906" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_tasks' </msg>
<status status="PASS" endtime="20170915 10:40:11.907" starttime="20170915 10:40:11.906"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_traces</arg>
</arguments>
<msg timestamp="20170915 10:40:11.907" level="INFO">Executing : Table Must Exist  |  view_traces </msg>
<msg timestamp="20170915 10:40:11.908" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_traces' </msg>
<status status="PASS" endtime="20170915 10:40:11.909" starttime="20170915 10:40:11.907"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_usergroups</arg>
</arguments>
<msg timestamp="20170915 10:40:11.909" level="INFO">Executing : Table Must Exist  |  view_usergroups </msg>
<msg timestamp="20170915 10:40:11.909" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_usergroups' </msg>
<status status="PASS" endtime="20170915 10:40:11.910" starttime="20170915 10:40:11.909"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users</arg>
</arguments>
<msg timestamp="20170915 10:40:11.911" level="INFO">Executing : Table Must Exist  |  view_users </msg>
<msg timestamp="20170915 10:40:11.911" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users' </msg>
<status status="PASS" endtime="20170915 10:40:11.912" starttime="20170915 10:40:11.910"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_apps</arg>
</arguments>
<msg timestamp="20170915 10:40:11.912" level="INFO">Executing : Table Must Exist  |  view_users_apps </msg>
<msg timestamp="20170915 10:40:11.912" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_apps' </msg>
<status status="PASS" endtime="20170915 10:40:11.913" starttime="20170915 10:40:11.912"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_datas</arg>
</arguments>
<msg timestamp="20170915 10:40:11.914" level="INFO">Executing : Table Must Exist  |  view_users_datas </msg>
<msg timestamp="20170915 10:40:11.914" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_datas' </msg>
<status status="PASS" endtime="20170915 10:40:11.915" starttime="20170915 10:40:11.913"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_groups</arg>
</arguments>
<msg timestamp="20170915 10:40:11.915" level="INFO">Executing : Table Must Exist  |  view_users_groups </msg>
<msg timestamp="20170915 10:40:11.915" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_groups' </msg>
<status status="PASS" endtime="20170915 10:40:11.916" starttime="20170915 10:40:11.915"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_hosts</arg>
</arguments>
<msg timestamp="20170915 10:40:11.917" level="INFO">Executing : Table Must Exist  |  view_users_hosts </msg>
<msg timestamp="20170915 10:40:11.917" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_hosts' </msg>
<status status="PASS" endtime="20170915 10:40:11.919" starttime="20170915 10:40:11.917"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_sessions</arg>
</arguments>
<msg timestamp="20170915 10:40:11.920" level="INFO">Executing : Table Must Exist  |  view_users_sessions </msg>
<msg timestamp="20170915 10:40:11.920" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_sessions' </msg>
<status status="PASS" endtime="20170915 10:40:11.921" starttime="20170915 10:40:11.919"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_tasks</arg>
</arguments>
<msg timestamp="20170915 10:40:11.921" level="INFO">Executing : Table Must Exist  |  view_users_tasks </msg>
<msg timestamp="20170915 10:40:11.921" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_tasks' </msg>
<status status="PASS" endtime="20170915 10:40:11.922" starttime="20170915 10:40:11.921"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_traces</arg>
</arguments>
<msg timestamp="20170915 10:40:11.922" level="INFO">Executing : Table Must Exist  |  view_users_traces </msg>
<msg timestamp="20170915 10:40:11.922" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_traces' </msg>
<status status="PASS" endtime="20170915 10:40:11.923" starttime="20170915 10:40:11.922"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_usergroups</arg>
</arguments>
<msg timestamp="20170915 10:40:11.924" level="INFO">Executing : Table Must Exist  |  view_users_usergroups </msg>
<msg timestamp="20170915 10:40:11.924" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_usergroups' </msg>
<status status="PASS" endtime="20170915 10:40:11.925" starttime="20170915 10:40:11.923"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_users</arg>
</arguments>
<msg timestamp="20170915 10:40:11.926" level="INFO">Executing : Table Must Exist  |  view_users_users </msg>
<msg timestamp="20170915 10:40:11.926" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_users' </msg>
<status status="PASS" endtime="20170915 10:40:11.927" starttime="20170915 10:40:11.925"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_works</arg>
</arguments>
<msg timestamp="20170915 10:40:11.927" level="INFO">Executing : Table Must Exist  |  view_users_works </msg>
<msg timestamp="20170915 10:40:11.927" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_works' </msg>
<status status="PASS" endtime="20170915 10:40:11.929" starttime="20170915 10:40:11.927"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works</arg>
</arguments>
<msg timestamp="20170915 10:40:11.929" level="INFO">Executing : Table Must Exist  |  view_works </msg>
<msg timestamp="20170915 10:40:11.929" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works' </msg>
<status status="PASS" endtime="20170915 10:40:11.930" starttime="20170915 10:40:11.929"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works_for_billing</arg>
</arguments>
<msg timestamp="20170915 10:40:11.930" level="INFO">Executing : Table Must Exist  |  view_works_for_billing </msg>
<msg timestamp="20170915 10:40:11.930" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works_for_billing' </msg>
<status status="PASS" endtime="20170915 10:40:11.931" starttime="20170915 10:40:11.930"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works_for_billing_with_file_sizes</arg>
</arguments>
<msg timestamp="20170915 10:40:11.932" level="INFO">Executing : Table Must Exist  |  view_works_for_billing_with_file_sizes </msg>
<msg timestamp="20170915 10:40:11.932" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works_for_billing_with_file_sizes' </msg>
<status status="PASS" endtime="20170915 10:40:11.933" starttime="20170915 10:40:11.931"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works</arg>
</arguments>
<msg timestamp="20170915 10:40:11.933" level="INFO">Executing : Table Must Exist  |  works </msg>
<msg timestamp="20170915 10:40:11.933" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='works' </msg>
<status status="PASS" endtime="20170915 10:40:11.934" starttime="20170915 10:40:11.933"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works_history</arg>
</arguments>
<msg timestamp="20170915 10:40:11.934" level="INFO">Executing : Table Must Exist  |  works_history </msg>
<msg timestamp="20170915 10:40:11.934" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='works_history' </msg>
<status status="PASS" endtime="20170915 10:40:11.935" starttime="20170915 10:40:11.934"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170915 10:40:11.936" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170915 10:40:11.936" starttime="20170915 10:40:11.935"></status>
</kw>
<status status="PASS" endtime="20170915 10:40:11.936" starttime="20170915 10:40:11.935"></status>
</kw>
<status status="PASS" endtime="20170915 10:40:11.936" starttime="20170915 10:40:11.810"></status>
</kw>
<status status="PASS" endtime="20170915 10:40:11.936" starttime="20170915 10:40:11.809"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>TODO ping XWtremWeb server up</arg>
</arguments>
<msg timestamp="20170915 10:40:11.936" level="INFO">TODO ping XWtremWeb server up</msg>
<status status="PASS" endtime="20170915 10:40:11.936" starttime="20170915 10:40:11.936"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>TODO ping XWtremWeb worker up before one test</arg>
</arguments>
<msg timestamp="20170915 10:40:11.937" level="INFO">TODO ping XWtremWeb worker up before one test</msg>
<status status="PASS" endtime="20170915 10:40:11.937" starttime="20170915 10:40:11.937"></status>
</kw>
<kw name="Delete Fonctionnal Xtremweb Tables" library="MySql">
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170915 10:40:11.938" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170915 10:40:11.939" starttime="20170915 10:40:11.937"></status>
</kw>
<status status="PASS" endtime="20170915 10:40:11.939" starttime="20170915 10:40:11.937"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps</arg>
</arguments>
<msg timestamp="20170915 10:40:11.939" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM apps; </msg>
<status status="PASS" endtime="20170915 10:40:11.942" starttime="20170915 10:40:11.939"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps_history</arg>
</arguments>
<msg timestamp="20170915 10:40:11.942" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM apps_history; </msg>
<status status="PASS" endtime="20170915 10:40:11.943" starttime="20170915 10:40:11.942"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas</arg>
</arguments>
<msg timestamp="20170915 10:40:11.943" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM datas; </msg>
<status status="PASS" endtime="20170915 10:40:11.944" starttime="20170915 10:40:11.943"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas_history</arg>
</arguments>
<msg timestamp="20170915 10:40:11.944" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM datas_history; </msg>
<status status="PASS" endtime="20170915 10:40:11.945" starttime="20170915 10:40:11.944"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables</arg>
</arguments>
<msg timestamp="20170915 10:40:11.946" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM executables; </msg>
<status status="PASS" endtime="20170915 10:40:11.946" starttime="20170915 10:40:11.946"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables_history</arg>
</arguments>
<msg timestamp="20170915 10:40:11.946" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM executables_history; </msg>
<status status="PASS" endtime="20170915 10:40:11.947" starttime="20170915 10:40:11.946"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups</arg>
</arguments>
<msg timestamp="20170915 10:40:11.947" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM groups; </msg>
<status status="PASS" endtime="20170915 10:40:11.947" starttime="20170915 10:40:11.947"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups_history</arg>
</arguments>
<msg timestamp="20170915 10:40:11.948" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM groups_history; </msg>
<status status="PASS" endtime="20170915 10:40:11.948" starttime="20170915 10:40:11.947"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts</arg>
</arguments>
<msg timestamp="20170915 10:40:11.948" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM hosts; </msg>
<status status="PASS" endtime="20170915 10:40:11.950" starttime="20170915 10:40:11.948"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts_history</arg>
</arguments>
<msg timestamp="20170915 10:40:11.951" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM hosts_history; </msg>
<status status="PASS" endtime="20170915 10:40:11.952" starttime="20170915 10:40:11.951"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships</arg>
</arguments>
<msg timestamp="20170915 10:40:11.953" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM memberships; </msg>
<status status="PASS" endtime="20170915 10:40:11.954" starttime="20170915 10:40:11.952"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships_history</arg>
</arguments>
<msg timestamp="20170915 10:40:11.957" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM memberships_history; </msg>
<status status="PASS" endtime="20170915 10:40:11.958" starttime="20170915 10:40:11.956"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions</arg>
</arguments>
<msg timestamp="20170915 10:40:11.959" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sessions; </msg>
<status status="PASS" endtime="20170915 10:40:11.960" starttime="20170915 10:40:11.958"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions_history</arg>
</arguments>
<msg timestamp="20170915 10:40:11.961" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sessions_history; </msg>
<status status="PASS" endtime="20170915 10:40:11.962" starttime="20170915 10:40:11.960"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes</arg>
</arguments>
<msg timestamp="20170915 10:40:11.962" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedAppTypes; </msg>
<status status="PASS" endtime="20170915 10:40:11.963" starttime="20170915 10:40:11.962"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes_history</arg>
</arguments>
<msg timestamp="20170915 10:40:11.964" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedAppTypes_history; </msg>
<status status="PASS" endtime="20170915 10:40:11.964" starttime="20170915 10:40:11.963"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes</arg>
</arguments>
<msg timestamp="20170915 10:40:11.965" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedPackageTypes; </msg>
<status status="PASS" endtime="20170915 10:40:11.965" starttime="20170915 10:40:11.964"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes_history</arg>
</arguments>
<msg timestamp="20170915 10:40:11.965" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedPackageTypes_history; </msg>
<status status="PASS" endtime="20170915 10:40:11.966" starttime="20170915 10:40:11.965"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks</arg>
</arguments>
<msg timestamp="20170915 10:40:11.966" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM tasks; </msg>
<status status="PASS" endtime="20170915 10:40:11.967" starttime="20170915 10:40:11.966"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks_history</arg>
</arguments>
<msg timestamp="20170915 10:40:11.967" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM tasks_history; </msg>
<status status="PASS" endtime="20170915 10:40:11.969" starttime="20170915 10:40:11.967"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces</arg>
</arguments>
<msg timestamp="20170915 10:40:11.970" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM traces; </msg>
<status status="PASS" endtime="20170915 10:40:11.971" starttime="20170915 10:40:11.969"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces_history</arg>
</arguments>
<msg timestamp="20170915 10:40:11.971" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM traces_history; </msg>
<status status="PASS" endtime="20170915 10:40:11.972" starttime="20170915 10:40:11.971"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups</arg>
</arguments>
<msg timestamp="20170915 10:40:11.973" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM usergroups; </msg>
<status status="PASS" endtime="20170915 10:40:11.973" starttime="20170915 10:40:11.972"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups_history</arg>
</arguments>
<msg timestamp="20170915 10:40:11.974" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM usergroups_history; </msg>
<status status="PASS" endtime="20170915 10:40:11.974" starttime="20170915 10:40:11.973"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users_history</arg>
</arguments>
<msg timestamp="20170915 10:40:11.975" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM users_history; </msg>
<status status="PASS" endtime="20170915 10:40:11.976" starttime="20170915 10:40:11.975"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works</arg>
</arguments>
<msg timestamp="20170915 10:40:11.976" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM works; </msg>
<status status="PASS" endtime="20170915 10:40:11.977" starttime="20170915 10:40:11.976"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works_history</arg>
</arguments>
<msg timestamp="20170915 10:40:11.977" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM works_history; </msg>
<status status="PASS" endtime="20170915 10:40:11.979" starttime="20170915 10:40:11.977"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170915 10:40:11.980" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170915 10:40:11.981" starttime="20170915 10:40:11.980"></status>
</kw>
<status status="PASS" endtime="20170915 10:40:11.981" starttime="20170915 10:40:11.980"></status>
</kw>
<status status="PASS" endtime="20170915 10:40:11.981" starttime="20170915 10:40:11.937"></status>
</kw>
<kw name="Stop XWtremWeb Server And XWtremWeb Worker" library="XWCommon">
<kw name="Stop XtremWeb Server" library="XWServer">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${SERVER_PROCESS}</arg>
</arguments>
<msg timestamp="20170915 10:40:11.982" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20170915 10:40:12.092" level="INFO">Process completed.</msg>
<status status="PASS" endtime="20170915 10:40:12.092" starttime="20170915 10:40:11.982"></status>
</kw>
<status status="PASS" endtime="20170915 10:40:12.093" starttime="20170915 10:40:11.981"></status>
</kw>
<kw name="Log XtremWeb Server" library="XWCommon">
<kw name="Log XtremWeb Process Log File" library="XWServer">
<kw name="Log File" library="OperatingSystem">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<msg timestamp="20170915 10:40:12.094" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170915 10:40:12.094" level="INFO">Fri Sep 15 10:38:56 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : checking launch url
Fri Sep 15 10:38:56 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] WARNING : no launcher URL defined
Fri Sep 15 10:38:56 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : launching SmartSockets hub
[15/Sep/2017:10:38:58 +0000] [main_1] ERROR : setRole : role redefined ?! (was SERVER)
[15/Sep/2017:10:38:58 +0000] [xtremweb.database.DBConnPoolThread_main_1] INFO : Connection to database jdbc:mysql://localhost/xtremweb is ok, 70 created
[15/Sep/2017:10:38:58 +0000] [xtremweb.dispatcher.DBInterface_main_1] WARN : Can't retrieve any app
[15/Sep/2017:10:38:58 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't create ProxyValidator
[15/Sep/2017:10:38:58 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.io.FileNotFoundException: /tmp/castore (No such file or directory) (/tmp/castore (No such file or directory))
[15/Sep/2017:10:38:58 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't add CA certificates to keystore
[15/Sep/2017:10:38:58 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.lang.NullPointerException (null)
[15/Sep/2017:10:38:58 +0000] [xtremweb.dispatcher.HashTaskSet_TaskSet_14] INFO : TaskSet started (300000)
[15/Sep/2017:10:38:59 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : still waiting task set...
[15/Sep/2017:10:39:00 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : UDP server not started
[15/Sep/2017:10:39:00 +0000] [xtremweb.communications.TCPServer_TCPServerNIO_15] INFO : started, listening on port : 4321
log4j:WARN No appenders could be found for logger (org.eclipse.jetty.util.log).
log4j:WARN Please initialize the log4j system properly.
log4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.
[15/Sep/2017:10:39:00 +0000] [xtremweb.communications.HTTPServer_main_1] INFO : started, listening on port : 9443
[15/Sep/2017:10:39:00 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : FACEBOOK : java.net.MalformedURLException: no protocol: 
[15/Sep/2017:10:39:00 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : GOOGLE : java.net.MalformedURLException: no protocol: 
[15/Sep/2017:10:39:00 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : TWITTER : java.net.MalformedURLException: no protocol: 
[15/Sep/2017:10:39:00 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : YAHOO : java.net.MalformedURLException: no protocol: 
[15/Sep/2017:10:39:00 +0000] [main_1] ERROR : Can't add new entry to keystore
[15/Sep/2017:10:39:00 +0000] [main_1] WARN : javax.net.ssl.SSLHandshakeException: sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target (sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target)
[15/Sep/2017:10:39:00 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : XWHEP Dispatcher(10.6.0-head) started [Fri Sep 15 10:39:00 UTC 2017]
[15/Sep/2017:10:39:00 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : DB vendor  = mysql
[15/Sep/2017:10:39:00 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : mileStone  = 
[15/Sep/2017:10:39:00 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Time out   = 15000
[15/Sep/2017:10:39:00 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Disk opt'd = true
[15/Sep/2017:10:39:00 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Net  opt'd = true
[15/Sep/2017:10:39:00 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : NIO        = true
XWHEP Dispatcher started  Fri Sep 15 10:39:00 UTC 2017
Name             : vagrant-ubuntu-trusty-64
Version          : 10.6.0-head
Identity         : 
XWRole           : SERVER
Started on       : Fri Sep 15 10:38:58 UTC 2017
Scheduler        : xtremweb.dispatcher.MatchingScheduler
SmartSockets hub : 172.28.128.3/172.17.0.1/10.0.2.15-4329#5e.55.f6.3a.cd.7c.00.00.96.b7.02.42.02.6c.0f.e2~vagrant
Server HTTP      : true
Alive            : 300
Alive time out   : 900
Polling time out : 15000
Optimize zip     : true
Optimize network : true
NIO              : true
Comm layer       : xtremweb.communications.TCPClient
Socket time out  : 60000
Socket retries   : 50
Max connections  : 200
TCP port         : 4321
UDP port         : 4323
HTPP  port       : 80
HTPPS port       : 9443
Sun RPC interposition port : 4328
Sandbox path : /usr/bin/lxc
Sandbox launch args : 
Host &lt;host&gt;&lt;uid&gt;aed1b61b-a2dc-4446-aa63-1e04ef690058&lt;/uid&gt;&lt;accessrights&gt;0x755&lt;/accessrights&gt;&lt;name&gt;vagrant-ubuntu-trusty-64&lt;/name&gt;&lt;cpuload&gt;50&lt;/cpuload&gt;&lt;natedipaddr&gt;10.0.2.15&lt;/natedipaddr&gt;&lt;ipaddr&gt;10.0.2.15&lt;/ipaddr&gt;&lt;hwaddr&gt;&lt;/hwaddr&gt;&lt;timezone&gt;Etc/UTC&lt;/timezone&gt;&lt;os&gt;LINUX&lt;/os&gt;&lt;osversion&gt;3.13.0-129-generic&lt;/osversion&gt;&lt;javaversion&gt;1.8.0_141&lt;/javaversion&gt;&lt;javadatamodel&gt;64&lt;/javadatamodel&gt;&lt;cputype&gt;AMD64&lt;/cputype&gt;&lt;cpunb&gt;1&lt;/cpunb&gt;&lt;cpumodel&gt;unknown&lt;/cpumodel&gt;&lt;cpuspeed&gt;0&lt;/cpuspeed&gt;&lt;totalmem&gt;0&lt;/totalmem&gt;&lt;totalswap&gt;0&lt;/totalswap&gt;&lt;totaltmp&gt;40284&lt;/totaltmp&gt;&lt;freetmp&gt;37249&lt;/freetmp&gt;&lt;project&gt;&lt;/project&gt;&lt;active&gt;true&lt;/active&gt;&lt;incomingconnections&gt;false&lt;/incomingconnections&gt;&lt;available&gt;false&lt;/available&gt;&lt;pilotjob&gt;false&lt;/pilotjob&gt;&lt;sgid&gt;&lt;/sgid&gt;&lt;timeout&gt;15000&lt;/timeout&gt;&lt;traces&gt;false&lt;/traces&gt;&lt;acceptbin&gt;false&lt;/acceptbin&gt;&lt;version&gt;10.6.0-head&lt;/version&gt;&lt;/host&gt;
[15/Sep/2017:10:39:00 +0000] [xtremweb.communications.HTTPServer_HTTPServer_218] INFO : started, listening on port : 9443
[15/Sep/2017:10:39:01 +0000] [xtremweb.common.StreamIO_TCPHandler_18] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[15/Sep/2017:10:39:02 +0000] [xtremweb.common.StreamIO_TCPHandler_17] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[15/Sep/2017:10:39:02 +0000] [xtremweb.common.StreamIO_TCPHandler_19] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[15/Sep/2017:10:39:03 +0000] [xtremweb.common.StreamIO_TCPHandler_20] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[15/Sep/2017:10:39:04 +0000] [xtremweb.common.StreamIO_TCPHandler_21] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[15/Sep/2017:10:39:04 +0000] [xtremweb.common.StreamIO_TCPHandler_22] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[15/Sep/2017:10:39:05 +0000] [xtremweb.dispatcher.DBInterface_TCPHandler_23] INFO : vagrant-ubuntu-trusty-64 not in DB; inserting 6755b425-2ce3-4fbe-804a-b3a66751db21
[15/Sep/2017:10:39:05 +0000] [xtremweb.common.StreamIO_TCPHandler_23] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[15/Sep/2017:10:39:08 +0000] [xtremweb.common.StreamIO_TCPHandler_24] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[15/Sep/2017:10:39:14 +0000] [xtremweb.common.StreamIO_TCPHandler_25] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[15/Sep/2017:10:39:20 +0000] [xtremweb.common.StreamIO_TCPHandler_26] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[15/Sep/2017:10:39:20 +0000] [xtremweb.common.StreamIO_TCPHandler_27] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[15/Sep/2017:10:39:20 +0000] [xtremweb.common.StreamIO_TCPHandler_28] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[15/Sep/2017:10:39:20 +0000] [xtremweb.common.StreamIO_TCPHandler_29] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[15/Sep/2017:10:39:20 +0000] [xtremweb.common.StreamIO_TCPHandler_30] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[15/Sep/2017:10:39:20 +0000] [xtremweb.dispatcher.TCPHandler_TCPHandler_31] ERROR : Can't write result
[15/Sep/2017:10:39:20 +0000] [xtremweb.dispatcher.TCPHandler_TCPHandler_31] WARN : java.io.IOException: java.net.SocketException: Broken pipe (Write failed) (java.net.SocketException: Broken pipe (Write failed))
[15/Sep/2017:10:39:20 +0000] [xtremweb.common.StreamIO_TCPHandler_31] WARN : javax.net.ssl.SSLException: Connection has been shutdown: javax.net.ssl.SSLException: java.net.SocketException: Broken pipe (Write failed) (javax.net.ssl.SSLException: java.net.SocketException: Broken pipe (Write failed))
[15/Sep/2017:10:39:25 +0000] [xtremweb.common.StreamIO_TCPHandler_32] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[15/Sep/2017:10:39:32 +0000] [xtremweb.common.StreamIO_TCPHandler_33] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[15/Sep/2017:10:39:35 +0000] [xtremweb.dispatcher.DBInterface_TCPHandler_34] WARN : javax.mail.internet.AddressException: Missing local name in string ``@DBADMINEMAIL@'' (Missing local name)
[15/Sep/2017:10:39:35 +0000] [xtremweb.common.StreamIO_TCPHandler_34] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[15/Sep/2017:10:39:35 +0000] [xtremweb.common.StreamIO_TCPHandler_35] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[15/Sep/2017:10:39:37 +0000] [xtremweb.common.StreamIO_TCPHandler_36] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[15/Sep/2017:10:39:43 +0000] [xtremweb.common.StreamIO_TCPHandler_37] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[15/Sep/2017:10:39:48 +0000] [xtremweb.common.StreamIO_TCPHandler_38] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[15/Sep/2017:10:39:54 +0000] [xtremweb.common.StreamIO_TCPHandler_39] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[15/Sep/2017:10:39:59 +0000] [xtremweb.common.StreamIO_TCPHandler_40] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[15/Sep/2017:10:40:05 +0000] [xtremweb.common.StreamIO_TCPHandler_41] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[15/Sep/2017:10:40:05 +0000] [xtremweb.common.StreamIO_TCPHandler_42] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[15/Sep/2017:10:40:05 +0000] [xtremweb.common.StreamIO_TCPHandler_43] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[15/Sep/2017:10:40:05 +0000] [xtremweb.common.StreamIO_TCPHandler_44] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[15/Sep/2017:10:40:05 +0000] [xtremweb.dispatcher.DBInterface_TCPHandler_45] WARN : javax.mail.internet.AddressException: Missing local name in string ``@DBADMINEMAIL@'' (Missing local name)
[15/Sep/2017:10:40:05 +0000] [xtremweb.common.StreamIO_TCPHandler_45] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[15/Sep/2017:10:40:05 +0000] [xtremweb.common.StreamIO_TCPHandler_46] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[15/Sep/2017:10:40:11 +0000] [xtremweb.common.StreamIO_TCPHandler_47] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[15/Sep/2017:10:40:11 +0000] [xtremweb.common.StreamIO_TCPHandler_48] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[15/Sep/2017:10:40:11 +0000] [xtremweb.communications.TCPServer_TCPServerNIO_15] WARN : java.net.SocketException: Socket closed (Socket closed)
</msg>
<status status="PASS" endtime="20170915 10:40:12.095" starttime="20170915 10:40:12.093"></status>
</kw>
<status status="PASS" endtime="20170915 10:40:12.095" starttime="20170915 10:40:12.093"></status>
</kw>
<status status="PASS" endtime="20170915 10:40:12.095" starttime="20170915 10:40:12.093"></status>
</kw>
<kw name="Stop XtremWeb Worker" library="XWWorker">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Stop XtremWeb Worker</arg>
</arguments>
<msg timestamp="20170915 10:40:12.095" level="INFO">Stop XtremWeb Worker</msg>
<status status="PASS" endtime="20170915 10:40:12.096" starttime="20170915 10:40:12.095"></status>
</kw>
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${WORKER_PROCESS}</arg>
</arguments>
<msg timestamp="20170915 10:40:12.096" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20170915 10:40:12.096" level="INFO">Process completed.</msg>
<status status="PASS" endtime="20170915 10:40:12.096" starttime="20170915 10:40:12.096"></status>
</kw>
<status status="PASS" endtime="20170915 10:40:12.096" starttime="20170915 10:40:12.095"></status>
</kw>
<status status="PASS" endtime="20170915 10:40:12.097" starttime="20170915 10:40:11.981"></status>
</kw>
<kw name="Start XWtremWeb Server And XWtremWeb Worker" library="XWCommon">
<kw name="Ping XWtremWeb Database" library="XWServer">
<kw name="Xtremweb Tables Must Exist" library="MySql">
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170915 10:40:12.098" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170915 10:40:12.099" starttime="20170915 10:40:12.098"></status>
</kw>
<status status="PASS" endtime="20170915 10:40:12.099" starttime="20170915 10:40:12.098"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>appTypes</arg>
</arguments>
<msg timestamp="20170915 10:40:12.100" level="INFO">Executing : Table Must Exist  |  appTypes </msg>
<msg timestamp="20170915 10:40:12.100" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='appTypes' </msg>
<status status="PASS" endtime="20170915 10:40:12.101" starttime="20170915 10:40:12.099"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps</arg>
</arguments>
<msg timestamp="20170915 10:40:12.102" level="INFO">Executing : Table Must Exist  |  apps </msg>
<msg timestamp="20170915 10:40:12.102" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='apps' </msg>
<status status="PASS" endtime="20170915 10:40:12.103" starttime="20170915 10:40:12.101"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps_history</arg>
</arguments>
<msg timestamp="20170915 10:40:12.103" level="INFO">Executing : Table Must Exist  |  apps_history </msg>
<msg timestamp="20170915 10:40:12.103" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='apps_history' </msg>
<status status="PASS" endtime="20170915 10:40:12.104" starttime="20170915 10:40:12.103"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>cpuTypes</arg>
</arguments>
<msg timestamp="20170915 10:40:12.105" level="INFO">Executing : Table Must Exist  |  cpuTypes </msg>
<msg timestamp="20170915 10:40:12.105" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='cpuTypes' </msg>
<status status="PASS" endtime="20170915 10:40:12.107" starttime="20170915 10:40:12.105"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>dataTypes</arg>
</arguments>
<msg timestamp="20170915 10:40:12.107" level="INFO">Executing : Table Must Exist  |  dataTypes </msg>
<msg timestamp="20170915 10:40:12.107" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='dataTypes' </msg>
<status status="PASS" endtime="20170915 10:40:12.110" starttime="20170915 10:40:12.107"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas</arg>
</arguments>
<msg timestamp="20170915 10:40:12.110" level="INFO">Executing : Table Must Exist  |  datas </msg>
<msg timestamp="20170915 10:40:12.110" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='datas' </msg>
<status status="PASS" endtime="20170915 10:40:12.111" starttime="20170915 10:40:12.110"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas_history</arg>
</arguments>
<msg timestamp="20170915 10:40:12.112" level="INFO">Executing : Table Must Exist  |  datas_history </msg>
<msg timestamp="20170915 10:40:12.112" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='datas_history' </msg>
<status status="PASS" endtime="20170915 10:40:12.113" starttime="20170915 10:40:12.111"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables</arg>
</arguments>
<msg timestamp="20170915 10:40:12.113" level="INFO">Executing : Table Must Exist  |  executables </msg>
<msg timestamp="20170915 10:40:12.113" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='executables' </msg>
<status status="PASS" endtime="20170915 10:40:12.115" starttime="20170915 10:40:12.113"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables_history</arg>
</arguments>
<msg timestamp="20170915 10:40:12.116" level="INFO">Executing : Table Must Exist  |  executables_history </msg>
<msg timestamp="20170915 10:40:12.116" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='executables_history' </msg>
<status status="PASS" endtime="20170915 10:40:12.117" starttime="20170915 10:40:12.115"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups</arg>
</arguments>
<msg timestamp="20170915 10:40:12.118" level="INFO">Executing : Table Must Exist  |  groups </msg>
<msg timestamp="20170915 10:40:12.118" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='groups' </msg>
<status status="PASS" endtime="20170915 10:40:12.119" starttime="20170915 10:40:12.117"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups_history</arg>
</arguments>
<msg timestamp="20170915 10:40:12.120" level="INFO">Executing : Table Must Exist  |  groups_history </msg>
<msg timestamp="20170915 10:40:12.120" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='groups_history' </msg>
<status status="PASS" endtime="20170915 10:40:12.121" starttime="20170915 10:40:12.120"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts</arg>
</arguments>
<msg timestamp="20170915 10:40:12.121" level="INFO">Executing : Table Must Exist  |  hosts </msg>
<msg timestamp="20170915 10:40:12.121" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='hosts' </msg>
<status status="PASS" endtime="20170915 10:40:12.122" starttime="20170915 10:40:12.121"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts_history</arg>
</arguments>
<msg timestamp="20170915 10:40:12.123" level="INFO">Executing : Table Must Exist  |  hosts_history </msg>
<msg timestamp="20170915 10:40:12.123" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='hosts_history' </msg>
<status status="PASS" endtime="20170915 10:40:12.124" starttime="20170915 10:40:12.122"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships</arg>
</arguments>
<msg timestamp="20170915 10:40:12.124" level="INFO">Executing : Table Must Exist  |  memberships </msg>
<msg timestamp="20170915 10:40:12.124" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='memberships' </msg>
<status status="PASS" endtime="20170915 10:40:12.126" starttime="20170915 10:40:12.124"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships_history</arg>
</arguments>
<msg timestamp="20170915 10:40:12.126" level="INFO">Executing : Table Must Exist  |  memberships_history </msg>
<msg timestamp="20170915 10:40:12.126" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='memberships_history' </msg>
<status status="PASS" endtime="20170915 10:40:12.127" starttime="20170915 10:40:12.126"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>oses</arg>
</arguments>
<msg timestamp="20170915 10:40:12.127" level="INFO">Executing : Table Must Exist  |  oses </msg>
<msg timestamp="20170915 10:40:12.128" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='oses' </msg>
<status status="PASS" endtime="20170915 10:40:12.128" starttime="20170915 10:40:12.127"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>packageTypes</arg>
</arguments>
<msg timestamp="20170915 10:40:12.129" level="INFO">Executing : Table Must Exist  |  packageTypes </msg>
<msg timestamp="20170915 10:40:12.129" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='packageTypes' </msg>
<status status="PASS" endtime="20170915 10:40:12.130" starttime="20170915 10:40:12.128"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions</arg>
</arguments>
<msg timestamp="20170915 10:40:12.130" level="INFO">Executing : Table Must Exist  |  sessions </msg>
<msg timestamp="20170915 10:40:12.130" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sessions' </msg>
<status status="PASS" endtime="20170915 10:40:12.131" starttime="20170915 10:40:12.130"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions_history</arg>
</arguments>
<msg timestamp="20170915 10:40:12.131" level="INFO">Executing : Table Must Exist  |  sessions_history </msg>
<msg timestamp="20170915 10:40:12.131" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sessions_history' </msg>
<status status="PASS" endtime="20170915 10:40:12.132" starttime="20170915 10:40:12.131"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes</arg>
</arguments>
<msg timestamp="20170915 10:40:12.132" level="INFO">Executing : Table Must Exist  |  sharedAppTypes </msg>
<msg timestamp="20170915 10:40:12.132" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedAppTypes' </msg>
<status status="PASS" endtime="20170915 10:40:12.133" starttime="20170915 10:40:12.132"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes_history</arg>
</arguments>
<msg timestamp="20170915 10:40:12.134" level="INFO">Executing : Table Must Exist  |  sharedAppTypes_history </msg>
<msg timestamp="20170915 10:40:12.134" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedAppTypes_history' </msg>
<status status="PASS" endtime="20170915 10:40:12.135" starttime="20170915 10:40:12.133"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes</arg>
</arguments>
<msg timestamp="20170915 10:40:12.135" level="INFO">Executing : Table Must Exist  |  sharedPackageTypes </msg>
<msg timestamp="20170915 10:40:12.135" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedPackageTypes' </msg>
<status status="PASS" endtime="20170915 10:40:12.136" starttime="20170915 10:40:12.135"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes_history</arg>
</arguments>
<msg timestamp="20170915 10:40:12.136" level="INFO">Executing : Table Must Exist  |  sharedPackageTypes_history </msg>
<msg timestamp="20170915 10:40:12.136" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedPackageTypes_history' </msg>
<status status="PASS" endtime="20170915 10:40:12.137" starttime="20170915 10:40:12.136"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>statuses</arg>
</arguments>
<msg timestamp="20170915 10:40:12.137" level="INFO">Executing : Table Must Exist  |  statuses </msg>
<msg timestamp="20170915 10:40:12.138" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='statuses' </msg>
<status status="PASS" endtime="20170915 10:40:12.138" starttime="20170915 10:40:12.137"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks</arg>
</arguments>
<msg timestamp="20170915 10:40:12.139" level="INFO">Executing : Table Must Exist  |  tasks </msg>
<msg timestamp="20170915 10:40:12.139" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='tasks' </msg>
<status status="PASS" endtime="20170915 10:40:12.139" starttime="20170915 10:40:12.138"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks_history</arg>
</arguments>
<msg timestamp="20170915 10:40:12.140" level="INFO">Executing : Table Must Exist  |  tasks_history </msg>
<msg timestamp="20170915 10:40:12.140" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='tasks_history' </msg>
<status status="PASS" endtime="20170915 10:40:12.141" starttime="20170915 10:40:12.140"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces</arg>
</arguments>
<msg timestamp="20170915 10:40:12.141" level="INFO">Executing : Table Must Exist  |  traces </msg>
<msg timestamp="20170915 10:40:12.141" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='traces' </msg>
<status status="PASS" endtime="20170915 10:40:12.142" starttime="20170915 10:40:12.141"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces_history</arg>
</arguments>
<msg timestamp="20170915 10:40:12.142" level="INFO">Executing : Table Must Exist  |  traces_history </msg>
<msg timestamp="20170915 10:40:12.142" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='traces_history' </msg>
<status status="PASS" endtime="20170915 10:40:12.143" starttime="20170915 10:40:12.142"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>userRights</arg>
</arguments>
<msg timestamp="20170915 10:40:12.143" level="INFO">Executing : Table Must Exist  |  userRights </msg>
<msg timestamp="20170915 10:40:12.143" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='userRights' </msg>
<status status="PASS" endtime="20170915 10:40:12.144" starttime="20170915 10:40:12.143"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups</arg>
</arguments>
<msg timestamp="20170915 10:40:12.144" level="INFO">Executing : Table Must Exist  |  usergroups </msg>
<msg timestamp="20170915 10:40:12.144" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='usergroups' </msg>
<status status="PASS" endtime="20170915 10:40:12.145" starttime="20170915 10:40:12.144"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups_history</arg>
</arguments>
<msg timestamp="20170915 10:40:12.145" level="INFO">Executing : Table Must Exist  |  usergroups_history </msg>
<msg timestamp="20170915 10:40:12.145" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='usergroups_history' </msg>
<status status="PASS" endtime="20170915 10:40:12.146" starttime="20170915 10:40:12.145"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users</arg>
</arguments>
<msg timestamp="20170915 10:40:12.146" level="INFO">Executing : Table Must Exist  |  users </msg>
<msg timestamp="20170915 10:40:12.146" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='users' </msg>
<status status="PASS" endtime="20170915 10:40:12.147" starttime="20170915 10:40:12.146"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users_history</arg>
</arguments>
<msg timestamp="20170915 10:40:12.147" level="INFO">Executing : Table Must Exist  |  users_history </msg>
<msg timestamp="20170915 10:40:12.147" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='users_history' </msg>
<status status="PASS" endtime="20170915 10:40:12.148" starttime="20170915 10:40:12.147"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>version</arg>
</arguments>
<msg timestamp="20170915 10:40:12.148" level="INFO">Executing : Table Must Exist  |  version </msg>
<msg timestamp="20170915 10:40:12.148" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='version' </msg>
<status status="PASS" endtime="20170915 10:40:12.149" starttime="20170915 10:40:12.148"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>versions</arg>
</arguments>
<msg timestamp="20170915 10:40:12.149" level="INFO">Executing : Table Must Exist  |  versions </msg>
<msg timestamp="20170915 10:40:12.150" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='versions' </msg>
<status status="PASS" endtime="20170915 10:40:12.150" starttime="20170915 10:40:12.149"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps</arg>
</arguments>
<msg timestamp="20170915 10:40:12.151" level="INFO">Executing : Table Must Exist  |  view_apps </msg>
<msg timestamp="20170915 10:40:12.151" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps' </msg>
<status status="PASS" endtime="20170915 10:40:12.152" starttime="20170915 10:40:12.151"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps_for_offering</arg>
</arguments>
<msg timestamp="20170915 10:40:12.152" level="INFO">Executing : Table Must Exist  |  view_apps_for_offering </msg>
<msg timestamp="20170915 10:40:12.152" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps_for_offering' </msg>
<status status="PASS" endtime="20170915 10:40:12.154" starttime="20170915 10:40:12.152"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps_for_offering_with_file_sizes</arg>
</arguments>
<msg timestamp="20170915 10:40:12.154" level="INFO">Executing : Table Must Exist  |  view_apps_for_offering_with_file_sizes </msg>
<msg timestamp="20170915 10:40:12.154" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps_for_offering_with_file_sizes' </msg>
<status status="PASS" endtime="20170915 10:40:12.155" starttime="20170915 10:40:12.154"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_datas</arg>
</arguments>
<msg timestamp="20170915 10:40:12.155" level="INFO">Executing : Table Must Exist  |  view_datas </msg>
<msg timestamp="20170915 10:40:12.155" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_datas' </msg>
<status status="PASS" endtime="20170915 10:40:12.156" starttime="20170915 10:40:12.155"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_executables</arg>
</arguments>
<msg timestamp="20170915 10:40:12.157" level="INFO">Executing : Table Must Exist  |  view_executables </msg>
<msg timestamp="20170915 10:40:12.157" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_executables' </msg>
<status status="PASS" endtime="20170915 10:40:12.158" starttime="20170915 10:40:12.157"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_groups</arg>
</arguments>
<msg timestamp="20170915 10:40:12.158" level="INFO">Executing : Table Must Exist  |  view_groups </msg>
<msg timestamp="20170915 10:40:12.158" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_groups' </msg>
<status status="PASS" endtime="20170915 10:40:12.159" starttime="20170915 10:40:12.158"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts</arg>
</arguments>
<msg timestamp="20170915 10:40:12.159" level="INFO">Executing : Table Must Exist  |  view_hosts </msg>
<msg timestamp="20170915 10:40:12.159" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts' </msg>
<status status="PASS" endtime="20170915 10:40:12.160" starttime="20170915 10:40:12.159"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_deployable</arg>
</arguments>
<msg timestamp="20170915 10:40:12.160" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_deployable </msg>
<msg timestamp="20170915 10:40:12.161" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_deployable' </msg>
<status status="PASS" endtime="20170915 10:40:12.162" starttime="20170915 10:40:12.160"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_deployable_and_shared</arg>
</arguments>
<msg timestamp="20170915 10:40:12.162" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_deployable_and_shared </msg>
<msg timestamp="20170915 10:40:12.162" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_deployable_and_shared' </msg>
<status status="PASS" endtime="20170915 10:40:12.164" starttime="20170915 10:40:12.162"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_shared</arg>
</arguments>
<msg timestamp="20170915 10:40:12.164" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_shared </msg>
<msg timestamp="20170915 10:40:12.164" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_shared' </msg>
<status status="PASS" endtime="20170915 10:40:12.165" starttime="20170915 10:40:12.164"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_sessions</arg>
</arguments>
<msg timestamp="20170915 10:40:12.166" level="INFO">Executing : Table Must Exist  |  view_sessions </msg>
<msg timestamp="20170915 10:40:12.166" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_sessions' </msg>
<status status="PASS" endtime="20170915 10:40:12.167" starttime="20170915 10:40:12.165"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_tasks</arg>
</arguments>
<msg timestamp="20170915 10:40:12.167" level="INFO">Executing : Table Must Exist  |  view_tasks </msg>
<msg timestamp="20170915 10:40:12.168" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_tasks' </msg>
<status status="PASS" endtime="20170915 10:40:12.169" starttime="20170915 10:40:12.167"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_traces</arg>
</arguments>
<msg timestamp="20170915 10:40:12.169" level="INFO">Executing : Table Must Exist  |  view_traces </msg>
<msg timestamp="20170915 10:40:12.169" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_traces' </msg>
<status status="PASS" endtime="20170915 10:40:12.171" starttime="20170915 10:40:12.169"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_usergroups</arg>
</arguments>
<msg timestamp="20170915 10:40:12.171" level="INFO">Executing : Table Must Exist  |  view_usergroups </msg>
<msg timestamp="20170915 10:40:12.171" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_usergroups' </msg>
<status status="PASS" endtime="20170915 10:40:12.172" starttime="20170915 10:40:12.171"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users</arg>
</arguments>
<msg timestamp="20170915 10:40:12.173" level="INFO">Executing : Table Must Exist  |  view_users </msg>
<msg timestamp="20170915 10:40:12.173" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users' </msg>
<status status="PASS" endtime="20170915 10:40:12.174" starttime="20170915 10:40:12.173"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_apps</arg>
</arguments>
<msg timestamp="20170915 10:40:12.175" level="INFO">Executing : Table Must Exist  |  view_users_apps </msg>
<msg timestamp="20170915 10:40:12.175" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_apps' </msg>
<status status="PASS" endtime="20170915 10:40:12.177" starttime="20170915 10:40:12.175"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_datas</arg>
</arguments>
<msg timestamp="20170915 10:40:12.178" level="INFO">Executing : Table Must Exist  |  view_users_datas </msg>
<msg timestamp="20170915 10:40:12.178" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_datas' </msg>
<status status="PASS" endtime="20170915 10:40:12.179" starttime="20170915 10:40:12.177"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_groups</arg>
</arguments>
<msg timestamp="20170915 10:40:12.180" level="INFO">Executing : Table Must Exist  |  view_users_groups </msg>
<msg timestamp="20170915 10:40:12.180" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_groups' </msg>
<status status="PASS" endtime="20170915 10:40:12.181" starttime="20170915 10:40:12.179"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_hosts</arg>
</arguments>
<msg timestamp="20170915 10:40:12.182" level="INFO">Executing : Table Must Exist  |  view_users_hosts </msg>
<msg timestamp="20170915 10:40:12.182" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_hosts' </msg>
<status status="PASS" endtime="20170915 10:40:12.184" starttime="20170915 10:40:12.182"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_sessions</arg>
</arguments>
<msg timestamp="20170915 10:40:12.184" level="INFO">Executing : Table Must Exist  |  view_users_sessions </msg>
<msg timestamp="20170915 10:40:12.184" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_sessions' </msg>
<status status="PASS" endtime="20170915 10:40:12.185" starttime="20170915 10:40:12.184"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_tasks</arg>
</arguments>
<msg timestamp="20170915 10:40:12.185" level="INFO">Executing : Table Must Exist  |  view_users_tasks </msg>
<msg timestamp="20170915 10:40:12.185" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_tasks' </msg>
<status status="PASS" endtime="20170915 10:40:12.186" starttime="20170915 10:40:12.185"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_traces</arg>
</arguments>
<msg timestamp="20170915 10:40:12.187" level="INFO">Executing : Table Must Exist  |  view_users_traces </msg>
<msg timestamp="20170915 10:40:12.187" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_traces' </msg>
<status status="PASS" endtime="20170915 10:40:12.188" starttime="20170915 10:40:12.187"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_usergroups</arg>
</arguments>
<msg timestamp="20170915 10:40:12.188" level="INFO">Executing : Table Must Exist  |  view_users_usergroups </msg>
<msg timestamp="20170915 10:40:12.188" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_usergroups' </msg>
<status status="PASS" endtime="20170915 10:40:12.190" starttime="20170915 10:40:12.188"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_users</arg>
</arguments>
<msg timestamp="20170915 10:40:12.190" level="INFO">Executing : Table Must Exist  |  view_users_users </msg>
<msg timestamp="20170915 10:40:12.190" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_users' </msg>
<status status="PASS" endtime="20170915 10:40:12.191" starttime="20170915 10:40:12.190"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_works</arg>
</arguments>
<msg timestamp="20170915 10:40:12.192" level="INFO">Executing : Table Must Exist  |  view_users_works </msg>
<msg timestamp="20170915 10:40:12.192" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_works' </msg>
<status status="PASS" endtime="20170915 10:40:12.193" starttime="20170915 10:40:12.191"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works</arg>
</arguments>
<msg timestamp="20170915 10:40:12.193" level="INFO">Executing : Table Must Exist  |  view_works </msg>
<msg timestamp="20170915 10:40:12.193" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works' </msg>
<status status="PASS" endtime="20170915 10:40:12.195" starttime="20170915 10:40:12.193"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works_for_billing</arg>
</arguments>
<msg timestamp="20170915 10:40:12.195" level="INFO">Executing : Table Must Exist  |  view_works_for_billing </msg>
<msg timestamp="20170915 10:40:12.195" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works_for_billing' </msg>
<status status="PASS" endtime="20170915 10:40:12.196" starttime="20170915 10:40:12.195"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works_for_billing_with_file_sizes</arg>
</arguments>
<msg timestamp="20170915 10:40:12.196" level="INFO">Executing : Table Must Exist  |  view_works_for_billing_with_file_sizes </msg>
<msg timestamp="20170915 10:40:12.196" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works_for_billing_with_file_sizes' </msg>
<status status="PASS" endtime="20170915 10:40:12.197" starttime="20170915 10:40:12.196"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works</arg>
</arguments>
<msg timestamp="20170915 10:40:12.197" level="INFO">Executing : Table Must Exist  |  works </msg>
<msg timestamp="20170915 10:40:12.197" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='works' </msg>
<status status="PASS" endtime="20170915 10:40:12.198" starttime="20170915 10:40:12.197"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works_history</arg>
</arguments>
<msg timestamp="20170915 10:40:12.198" level="INFO">Executing : Table Must Exist  |  works_history </msg>
<msg timestamp="20170915 10:40:12.198" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='works_history' </msg>
<status status="PASS" endtime="20170915 10:40:12.199" starttime="20170915 10:40:12.198"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170915 10:40:12.200" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170915 10:40:12.200" starttime="20170915 10:40:12.200"></status>
</kw>
<status status="PASS" endtime="20170915 10:40:12.200" starttime="20170915 10:40:12.199"></status>
</kw>
<status status="PASS" endtime="20170915 10:40:12.200" starttime="20170915 10:40:12.097"></status>
</kw>
<status status="PASS" endtime="20170915 10:40:12.200" starttime="20170915 10:40:12.097"></status>
</kw>
<kw name="Start XtremWeb Server" library="XWServer">
<arguments>
<arg>${DIST_XWHEP_PATH}</arg>
</arguments>
<kw name="File Should Exist" library="OperatingSystem">
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xtremweb.server.conf</arg>
</arguments>
<msg timestamp="20170915 10:40:12.201" html="yes" level="INFO">File '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf&lt;/a&gt;' exists.</msg>
<status status="PASS" endtime="20170915 10:40:12.201" starttime="20170915 10:40:12.201"></status>
</kw>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xtremweb.server.conf</arg>
</arguments>
<assign>
<var>${config_content}</var>
</assign>
<msg timestamp="20170915 10:40:12.201" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf&lt;/a&gt;'.</msg>
<msg timestamp="20170915 10:40:12.203" level="INFO">${config_content} = #
# Copyrights     : CNRS
# Author         : Oleg Lodygensky
# Acknowledgment : XtremWeb-HEP is based on XtremWeb 1.8.0 by inria : http://www.xtremweb.net/
# Web            : http://www.xtremweb-hep.o...</msg>
<status status="PASS" endtime="20170915 10:40:12.203" starttime="20170915 10:40:12.201"></status>
</kw>
<kw name="Remove String Using Regexp" library="String">
<doc>Removes ``patterns`` from the given ``string``.</doc>
<arguments>
<arg>${config_content}</arg>
<arg>LAUNCHERURL=${XWCONFIGURE.VALUES.XWUPGRADEURL}</arg>
</arguments>
<assign>
<var>${config_content_filtered}</var>
</assign>
<msg timestamp="20170915 10:40:12.203" level="INFO">${config_content_filtered} = #
# Copyrights     : CNRS
# Author         : Oleg Lodygensky
# Acknowledgment : XtremWeb-HEP is based on XtremWeb 1.8.0 by inria : http://www.xtremweb.net/
# Web            : http://www.xtremweb-hep.o...</msg>
<status status="PASS" endtime="20170915 10:40:12.203" starttime="20170915 10:40:12.203"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${config_content_filtered}</arg>
<arg>\## HTTPSPORT=443</arg>
<arg>HTTPSPORT=${XWCONFIGURE.VALUES.HTTPSPORT}</arg>
</arguments>
<assign>
<var>${config_content_filtered}</var>
</assign>
<msg timestamp="20170915 10:40:12.204" level="INFO">${config_content_filtered} = #
# Copyrights     : CNRS
# Author         : Oleg Lodygensky
# Acknowledgment : XtremWeb-HEP is based on XtremWeb 1.8.0 by inria : http://www.xtremweb.net/
# Web            : http://www.xtremweb-hep.o...</msg>
<status status="PASS" endtime="20170915 10:40:12.204" starttime="20170915 10:40:12.203"></status>
</kw>
<kw name="Create File" library="OperatingSystem">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xtremweb.server.conf</arg>
<arg>content=${config_content_filtered}</arg>
</arguments>
<msg timestamp="20170915 10:40:12.208" html="yes" level="INFO">Created file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170915 10:40:12.208" starttime="20170915 10:40:12.204"></status>
</kw>
<kw name="Remove File" library="OperatingSystem">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<msg timestamp="20170915 10:40:12.209" html="yes" level="INFO">Removed file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170915 10:40:12.209" starttime="20170915 10:40:12.208"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/bin/xtremweb.server console</arg>
<arg>shell=yes</arg>
<arg>stderr=STDOUT</arg>
<arg>stdout=${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<assign>
<var>${created_process}</var>
</assign>
<msg timestamp="20170915 10:40:12.211" level="INFO">Starting process:
/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/xtremweb.server console</msg>
<msg timestamp="20170915 10:40:12.214" level="INFO">${created_process} = 87</msg>
<status status="PASS" endtime="20170915 10:40:12.214" starttime="20170915 10:40:12.210"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SERVER_PROCESS}</arg>
<arg>${created_process}</arg>
</arguments>
<msg timestamp="20170915 10:40:12.215" level="INFO">${SERVER_PROCESS} = 87</msg>
<status status="PASS" endtime="20170915 10:40:12.216" starttime="20170915 10:40:12.215"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2 min</arg>
<arg>5 sec</arg>
<arg>Check XtremWeb Server Start From Log</arg>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<kw name="Check XtremWeb Server Start From Log" library="XWServer">
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<kw name="Log XtremWeb Process Log File" library="XWServer">
<kw name="Log File" library="OperatingSystem">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<msg timestamp="20170915 10:40:12.218" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170915 10:40:12.219" level="INFO"></msg>
<status status="PASS" endtime="20170915 10:40:12.219" starttime="20170915 10:40:12.218"></status>
</kw>
<status status="PASS" endtime="20170915 10:40:12.220" starttime="20170915 10:40:12.217"></status>
</kw>
<kw name="Grep File" library="OperatingSystem">
<doc>Returns the lines of the specified file that match the ``pattern``.</doc>
<arguments>
<arg>${log}</arg>
<arg>listening on port : ${XWCONFIGURE.VALUES.HTTPSPORT}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20170915 10:40:12.220" html="yes" level="INFO">Reading file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170915 10:40:12.221" level="INFO">0 out of 0 lines matched</msg>
<msg timestamp="20170915 10:40:12.221" level="INFO">${ret} = </msg>
<status status="PASS" endtime="20170915 10:40:12.221" starttime="20170915 10:40:12.220"></status>
</kw>
<kw name="Get Line Count" library="String">
<doc>Returns and logs the number of lines in the given string.</doc>
<arguments>
<arg>${ret}</arg>
</arguments>
<assign>
<var>${line_count}</var>
</assign>
<msg timestamp="20170915 10:40:12.221" level="INFO">0 lines</msg>
<msg timestamp="20170915 10:40:12.221" level="INFO">${line_count} = 0</msg>
<status status="PASS" endtime="20170915 10:40:12.221" starttime="20170915 10:40:12.221"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${line_count}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20170915 10:40:12.222" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20170915 10:40:12.222" level="FAIL">0 != 2</msg>
<status status="FAIL" endtime="20170915 10:40:12.222" starttime="20170915 10:40:12.222"></status>
</kw>
<status status="FAIL" endtime="20170915 10:40:12.223" starttime="20170915 10:40:12.217"></status>
</kw>
<kw name="Check XtremWeb Server Start From Log" library="XWServer">
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<kw name="Log XtremWeb Process Log File" library="XWServer">
<kw name="Log File" library="OperatingSystem">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<msg timestamp="20170915 10:40:17.225" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170915 10:40:17.232" level="INFO">Fri Sep 15 10:40:12 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : checking launch url
Fri Sep 15 10:40:12 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] WARNING : no launcher URL defined
Fri Sep 15 10:40:12 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : launching SmartSockets hub
[15/Sep/2017:10:40:14 +0000] [main_1] ERROR : setRole : role redefined ?! (was SERVER)
[15/Sep/2017:10:40:15 +0000] [xtremweb.database.DBConnPoolThread_main_1] INFO : Connection to database jdbc:mysql://localhost/xtremweb is ok, 70 created
[15/Sep/2017:10:40:15 +0000] [xtremweb.dispatcher.DBInterface_main_1] WARN : Can't retrieve any app
[15/Sep/2017:10:40:15 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't create ProxyValidator
[15/Sep/2017:10:40:15 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.io.FileNotFoundException: /tmp/castore (No such file or directory) (/tmp/castore (No such file or directory))
[15/Sep/2017:10:40:15 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't add CA certificates to keystore
[15/Sep/2017:10:40:15 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.lang.NullPointerException (null)
[15/Sep/2017:10:40:15 +0000] [xtremweb.dispatcher.HashTaskSet_TaskSet_14] INFO : TaskSet started (300000)
[15/Sep/2017:10:40:16 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : still waiting task set...
[15/Sep/2017:10:40:16 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : UDP server not started
[15/Sep/2017:10:40:16 +0000] [xtremweb.communications.TCPServer_TCPServerNIO_15] INFO : started, listening on port : 4321
log4j:WARN No appenders could be found for logger (org.eclipse.jetty.util.log).
log4j:WARN Please initialize the log4j system properly.
log4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.
[15/Sep/2017:10:40:16 +0000] [xtremweb.communications.HTTPServer_main_1] INFO : started, listening on port : 9443
[15/Sep/2017:10:40:16 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : FACEBOOK : java.net.MalformedURLException: no protocol: 
[15/Sep/2017:10:40:16 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : GOOGLE : java.net.MalformedURLException: no protocol: 
[15/Sep/2017:10:40:16 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : TWITTER : java.net.MalformedURLException: no protocol: 
[15/Sep/2017:10:40:16 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : YAHOO : java.net.MalformedURLException: no protocol: 
[15/Sep/2017:10:40:16 +0000] [main_1] ERROR : Can't add new entry to keystore
[15/Sep/2017:10:40:16 +0000] [main_1] WARN : javax.net.ssl.SSLHandshakeException: sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target (sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target)
[15/Sep/2017:10:40:16 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : XWHEP Dispatcher(10.6.0-head) started [Fri Sep 15 10:40:16 UTC 2017]
[15/Sep/2017:10:40:16 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : DB vendor  = mysql
[15/Sep/2017:10:40:16 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : mileStone  = 
[15/Sep/2017:10:40:16 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Time out   = 15000
[15/Sep/2017:10:40:16 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Disk opt'd = true
[15/Sep/2017:10:40:16 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Net  opt'd = true
[15/Sep/2017:10:40:16 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : NIO        = true
XWHEP Dispatcher started  Fri Sep 15 10:40:16 UTC 2017
Name             : vagrant-ubuntu-trusty-64
Version          : 10.6.0-head
Identity         : 
XWRole           : SERVER
Started on       : Fri Sep 15 10:40:14 UTC 2017
Scheduler        : xtremweb.dispatcher.MatchingScheduler
SmartSockets hub : 172.28.128.3/172.17.0.1/10.0.2.15-4329#aa.f6.01.3b.cd.7c.00.00.2c.17.02.42.02.6c.0f.e2~vagrant
Server HTTP      : true
Alive            : 300
Alive time out   : 900
Polling time out : 15000
Optimize zip     : true
Optimize network : true
NIO              : true
Comm layer       : xtremweb.communications.TCPClient
Socket time out  : 60000
Socket retries   : 50
Max connections  : 200
TCP port         : 4321
UDP port         : 4323
HTPP  port       : 80
HTPPS port       : 9443
Sun RPC interposition port : 4328
Sandbox path : /usr/bin/lxc
Sandbox launch args : 
Host &lt;host&gt;&lt;uid&gt;26428463-2231-419f-adfc-f2d6d18954c8&lt;/uid&gt;&lt;accessrights&gt;0x755&lt;/accessrights&gt;&lt;name&gt;vagrant-ubuntu-trusty-64&lt;/name&gt;&lt;cpuload&gt;50&lt;/cpuload&gt;&lt;natedipaddr&gt;10.0.2.15&lt;/natedipaddr&gt;&lt;ipaddr&gt;10.0.2.15&lt;/ipaddr&gt;&lt;hwaddr&gt;&lt;/hwaddr&gt;&lt;timezone&gt;Etc/UTC&lt;/timezone&gt;&lt;os&gt;LINUX&lt;/os&gt;&lt;osversion&gt;3.13.0-129-generic&lt;/osversion&gt;&lt;javaversion&gt;1.8.0_141&lt;/javaversion&gt;&lt;javadatamodel&gt;64&lt;/javadatamodel&gt;&lt;cputype&gt;AMD64&lt;/cputype&gt;&lt;cpunb&gt;1&lt;/cpunb&gt;&lt;cpumodel&gt;unknown&lt;/cpumodel&gt;&lt;cpuspeed&gt;0&lt;/cpuspeed&gt;&lt;totalmem&gt;0&lt;/totalmem&gt;&lt;totalswap&gt;0&lt;/totalswap&gt;&lt;totaltmp&gt;40284&lt;/totaltmp&gt;&lt;freetmp&gt;37249&lt;/freetmp&gt;&lt;project&gt;&lt;/project&gt;&lt;active&gt;true&lt;/active&gt;&lt;incomingconnections&gt;false&lt;/incomingconnections&gt;&lt;available&gt;false&lt;/available&gt;&lt;pilotjob&gt;false&lt;/pilotjob&gt;&lt;sgid&gt;&lt;/sgid&gt;&lt;timeout&gt;15000&lt;/timeout&gt;&lt;traces&gt;false&lt;/traces&gt;&lt;acceptbin&gt;false&lt;/acceptbin&gt;&lt;version&gt;10.6.0-head&lt;/version&gt;&lt;/host&gt;
[15/Sep/2017:10:40:16 +0000] [xtremweb.communications.HTTPServer_HTTPServer_218] INFO : started, listening on port : 9443
</msg>
<status status="PASS" endtime="20170915 10:40:17.233" starttime="20170915 10:40:17.224"></status>
</kw>
<status status="PASS" endtime="20170915 10:40:17.233" starttime="20170915 10:40:17.224"></status>
</kw>
<kw name="Grep File" library="OperatingSystem">
<doc>Returns the lines of the specified file that match the ``pattern``.</doc>
<arguments>
<arg>${log}</arg>
<arg>listening on port : ${XWCONFIGURE.VALUES.HTTPSPORT}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20170915 10:40:17.234" html="yes" level="INFO">Reading file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170915 10:40:17.235" level="INFO">2 out of 59 lines matched</msg>
<msg timestamp="20170915 10:40:17.236" level="INFO">${ret} = [15/Sep/2017:10:40:16 +0000] [xtremweb.communications.HTTPServer_main_1] INFO : started, listening on port : 9443
[15/Sep/2017:10:40:16 +0000] [xtremweb.communications.HTTPServer_HTTPServer_218] INFO ...</msg>
<status status="PASS" endtime="20170915 10:40:17.236" starttime="20170915 10:40:17.233"></status>
</kw>
<kw name="Get Line Count" library="String">
<doc>Returns and logs the number of lines in the given string.</doc>
<arguments>
<arg>${ret}</arg>
</arguments>
<assign>
<var>${line_count}</var>
</assign>
<msg timestamp="20170915 10:40:17.236" level="INFO">2 lines</msg>
<msg timestamp="20170915 10:40:17.236" level="INFO">${line_count} = 2</msg>
<status status="PASS" endtime="20170915 10:40:17.236" starttime="20170915 10:40:17.236"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${line_count}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20170915 10:40:17.237" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170915 10:40:17.237" starttime="20170915 10:40:17.236"></status>
</kw>
<status status="PASS" endtime="20170915 10:40:17.237" starttime="20170915 10:40:17.223"></status>
</kw>
<status status="PASS" endtime="20170915 10:40:17.237" starttime="20170915 10:40:12.216"></status>
</kw>
<kw name="Log XtremWeb Process Log File" library="XWServer">
<kw name="Log File" library="OperatingSystem">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<msg timestamp="20170915 10:40:17.238" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170915 10:40:17.238" level="INFO">Fri Sep 15 10:40:12 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : checking launch url
Fri Sep 15 10:40:12 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] WARNING : no launcher URL defined
Fri Sep 15 10:40:12 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : launching SmartSockets hub
[15/Sep/2017:10:40:14 +0000] [main_1] ERROR : setRole : role redefined ?! (was SERVER)
[15/Sep/2017:10:40:15 +0000] [xtremweb.database.DBConnPoolThread_main_1] INFO : Connection to database jdbc:mysql://localhost/xtremweb is ok, 70 created
[15/Sep/2017:10:40:15 +0000] [xtremweb.dispatcher.DBInterface_main_1] WARN : Can't retrieve any app
[15/Sep/2017:10:40:15 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't create ProxyValidator
[15/Sep/2017:10:40:15 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.io.FileNotFoundException: /tmp/castore (No such file or directory) (/tmp/castore (No such file or directory))
[15/Sep/2017:10:40:15 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't add CA certificates to keystore
[15/Sep/2017:10:40:15 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.lang.NullPointerException (null)
[15/Sep/2017:10:40:15 +0000] [xtremweb.dispatcher.HashTaskSet_TaskSet_14] INFO : TaskSet started (300000)
[15/Sep/2017:10:40:16 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : still waiting task set...
[15/Sep/2017:10:40:16 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : UDP server not started
[15/Sep/2017:10:40:16 +0000] [xtremweb.communications.TCPServer_TCPServerNIO_15] INFO : started, listening on port : 4321
log4j:WARN No appenders could be found for logger (org.eclipse.jetty.util.log).
log4j:WARN Please initialize the log4j system properly.
log4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.
[15/Sep/2017:10:40:16 +0000] [xtremweb.communications.HTTPServer_main_1] INFO : started, listening on port : 9443
[15/Sep/2017:10:40:16 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : FACEBOOK : java.net.MalformedURLException: no protocol: 
[15/Sep/2017:10:40:16 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : GOOGLE : java.net.MalformedURLException: no protocol: 
[15/Sep/2017:10:40:16 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : TWITTER : java.net.MalformedURLException: no protocol: 
[15/Sep/2017:10:40:16 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : YAHOO : java.net.MalformedURLException: no protocol: 
[15/Sep/2017:10:40:16 +0000] [main_1] ERROR : Can't add new entry to keystore
[15/Sep/2017:10:40:16 +0000] [main_1] WARN : javax.net.ssl.SSLHandshakeException: sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target (sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target)
[15/Sep/2017:10:40:16 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : XWHEP Dispatcher(10.6.0-head) started [Fri Sep 15 10:40:16 UTC 2017]
[15/Sep/2017:10:40:16 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : DB vendor  = mysql
[15/Sep/2017:10:40:16 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : mileStone  = 
[15/Sep/2017:10:40:16 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Time out   = 15000
[15/Sep/2017:10:40:16 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Disk opt'd = true
[15/Sep/2017:10:40:16 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Net  opt'd = true
[15/Sep/2017:10:40:16 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : NIO        = true
XWHEP Dispatcher started  Fri Sep 15 10:40:16 UTC 2017
Name             : vagrant-ubuntu-trusty-64
Version          : 10.6.0-head
Identity         : 
XWRole           : SERVER
Started on       : Fri Sep 15 10:40:14 UTC 2017
Scheduler        : xtremweb.dispatcher.MatchingScheduler
SmartSockets hub : 172.28.128.3/172.17.0.1/10.0.2.15-4329#aa.f6.01.3b.cd.7c.00.00.2c.17.02.42.02.6c.0f.e2~vagrant
Server HTTP      : true
Alive            : 300
Alive time out   : 900
Polling time out : 15000
Optimize zip     : true
Optimize network : true
NIO              : true
Comm layer       : xtremweb.communications.TCPClient
Socket time out  : 60000
Socket retries   : 50
Max connections  : 200
TCP port         : 4321
UDP port         : 4323
HTPP  port       : 80
HTPPS port       : 9443
Sun RPC interposition port : 4328
Sandbox path : /usr/bin/lxc
Sandbox launch args : 
Host &lt;host&gt;&lt;uid&gt;26428463-2231-419f-adfc-f2d6d18954c8&lt;/uid&gt;&lt;accessrights&gt;0x755&lt;/accessrights&gt;&lt;name&gt;vagrant-ubuntu-trusty-64&lt;/name&gt;&lt;cpuload&gt;50&lt;/cpuload&gt;&lt;natedipaddr&gt;10.0.2.15&lt;/natedipaddr&gt;&lt;ipaddr&gt;10.0.2.15&lt;/ipaddr&gt;&lt;hwaddr&gt;&lt;/hwaddr&gt;&lt;timezone&gt;Etc/UTC&lt;/timezone&gt;&lt;os&gt;LINUX&lt;/os&gt;&lt;osversion&gt;3.13.0-129-generic&lt;/osversion&gt;&lt;javaversion&gt;1.8.0_141&lt;/javaversion&gt;&lt;javadatamodel&gt;64&lt;/javadatamodel&gt;&lt;cputype&gt;AMD64&lt;/cputype&gt;&lt;cpunb&gt;1&lt;/cpunb&gt;&lt;cpumodel&gt;unknown&lt;/cpumodel&gt;&lt;cpuspeed&gt;0&lt;/cpuspeed&gt;&lt;totalmem&gt;0&lt;/totalmem&gt;&lt;totalswap&gt;0&lt;/totalswap&gt;&lt;totaltmp&gt;40284&lt;/totaltmp&gt;&lt;freetmp&gt;37249&lt;/freetmp&gt;&lt;project&gt;&lt;/project&gt;&lt;active&gt;true&lt;/active&gt;&lt;incomingconnections&gt;false&lt;/incomingconnections&gt;&lt;available&gt;false&lt;/available&gt;&lt;pilotjob&gt;false&lt;/pilotjob&gt;&lt;sgid&gt;&lt;/sgid&gt;&lt;timeout&gt;15000&lt;/timeout&gt;&lt;traces&gt;false&lt;/traces&gt;&lt;acceptbin&gt;false&lt;/acceptbin&gt;&lt;version&gt;10.6.0-head&lt;/version&gt;&lt;/host&gt;
[15/Sep/2017:10:40:16 +0000] [xtremweb.communications.HTTPServer_HTTPServer_218] INFO : started, listening on port : 9443
</msg>
<status status="PASS" endtime="20170915 10:40:17.238" starttime="20170915 10:40:17.237"></status>
</kw>
<status status="PASS" endtime="20170915 10:40:17.239" starttime="20170915 10:40:17.237"></status>
</kw>
<status status="PASS" endtime="20170915 10:40:17.239" starttime="20170915 10:40:12.200"></status>
</kw>
<kw name="Start XtremWeb Worker" library="XWWorker">
<arguments>
<arg>${DIST_XWHEP_PATH}</arg>
</arguments>
<kw name="File Should Exist" library="OperatingSystem">
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xtremweb.worker.conf</arg>
</arguments>
<msg timestamp="20170915 10:40:17.240" html="yes" level="INFO">File '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf&lt;/a&gt;' exists.</msg>
<status status="PASS" endtime="20170915 10:40:17.240" starttime="20170915 10:40:17.239"></status>
</kw>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xtremweb.worker.conf</arg>
</arguments>
<assign>
<var>${config_content}</var>
</assign>
<msg timestamp="20170915 10:40:17.240" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf&lt;/a&gt;'.</msg>
<msg timestamp="20170915 10:40:17.241" level="INFO">${config_content} = ## XWHEP configuration file
# XWHEP version : 10.6.0-head
# Saved on Fri Sep 15 10:39:04 UTC 2017
#Fri Sep 15 10:39:04 UTC 2017
X509USERPROXY=
SHAREDDATAS=
COMMHANDLERS=attic\:xtremweb.communications....</msg>
<status status="PASS" endtime="20170915 10:40:17.241" starttime="20170915 10:40:17.240"></status>
</kw>
<kw name="Remove String Using Regexp" library="String">
<doc>Removes ``patterns`` from the given ``string``.</doc>
<arguments>
<arg>${config_content}</arg>
<arg>LAUNCHERURL=${XWCONFIGURE.VALUES.XWUPGRADEURL}</arg>
</arguments>
<assign>
<var>${config_content_filtered}</var>
</assign>
<msg timestamp="20170915 10:40:17.242" level="INFO">${config_content_filtered} = ## XWHEP configuration file
# XWHEP version : 10.6.0-head
# Saved on Fri Sep 15 10:39:04 UTC 2017
#Fri Sep 15 10:39:04 UTC 2017
X509USERPROXY=
SHAREDDATAS=
COMMHANDLERS=attic\:xtremweb.communications....</msg>
<status status="PASS" endtime="20170915 10:40:17.242" starttime="20170915 10:40:17.242"></status>
</kw>
<kw name="Create File" library="OperatingSystem">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xtremweb.worker.conf</arg>
<arg>content=${config_content_filtered}</arg>
</arguments>
<msg timestamp="20170915 10:40:17.244" html="yes" level="INFO">Created file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170915 10:40:17.244" starttime="20170915 10:40:17.242"></status>
</kw>
<kw name="Remove File" library="OperatingSystem">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.worker.process.log</arg>
</arguments>
<msg timestamp="20170915 10:40:17.245" html="yes" level="INFO">Removed file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.worker.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.worker.process.log&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170915 10:40:17.245" starttime="20170915 10:40:17.244"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/bin/xtremweb.worker console</arg>
<arg>shell=yes</arg>
<arg>stderr=STDOUT</arg>
<arg>stdout=${DIST_XWHEP_PATH}/xwhep.worker.process.log</arg>
</arguments>
<assign>
<var>${created_process}</var>
</assign>
<msg timestamp="20170915 10:40:17.246" level="INFO">Starting process:
/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/xtremweb.worker console</msg>
<msg timestamp="20170915 10:40:17.250" level="INFO">${created_process} = 88</msg>
<status status="PASS" endtime="20170915 10:40:17.250" starttime="20170915 10:40:17.245"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${WORKER_PROCESS}</arg>
<arg>${created_process}</arg>
</arguments>
<msg timestamp="20170915 10:40:17.251" level="INFO">${WORKER_PROCESS} = 88</msg>
<status status="PASS" endtime="20170915 10:40:17.251" starttime="20170915 10:40:17.250"></status>
</kw>
<kw name="Log File" library="OperatingSystem">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.worker.process.log</arg>
</arguments>
<msg timestamp="20170915 10:40:17.252" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.worker.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.worker.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170915 10:40:17.254" level="INFO"></msg>
<status status="PASS" endtime="20170915 10:40:17.254" starttime="20170915 10:40:17.251"></status>
</kw>
<status status="PASS" endtime="20170915 10:40:17.254" starttime="20170915 10:40:17.239"></status>
</kw>
<status status="PASS" endtime="20170915 10:40:17.255" starttime="20170915 10:40:12.097"></status>
</kw>
<status status="PASS" endtime="20170915 10:40:17.255" starttime="20170915 10:40:11.808"></status>
</kw>
<kw name="XWSENDAPPCommand" library="XWClient">
<doc>Usage : SENDAPP appName appType cpuType osName URI | UID : inserts/updates an application; URI or UID points to binary file ; application name must be the first parameter</doc>
<arguments>
<arg>ls</arg>
<arg>DEPLOYABLE</arg>
<arg>LINUX</arg>
<arg>AMD64</arg>
<arg>/bin/ls</arg>
</arguments>
<assign>
<var>${uid}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd ${DIST_XWHEP_PATH}/bin &amp;&amp; ./xwsendapp ${appName} ${appType} ${cpuType} ${osName} ${uri-udi}</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${cmd_result}</var>
</assign>
<msg timestamp="20170915 10:40:17.258" level="INFO">Starting process:
cd /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin &amp;&amp; ./xwsendapp ls DEPLOYABLE LINUX AMD64 /bin/ls</msg>
<msg timestamp="20170915 10:40:17.261" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170915 10:40:18.483" level="INFO">Process completed.</msg>
<msg timestamp="20170915 10:40:18.483" level="INFO">${cmd_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170915 10:40:18.483" starttime="20170915 10:40:17.257"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stderr}</arg>
</arguments>
<msg timestamp="20170915 10:40:18.484" level="INFO"></msg>
<status status="PASS" endtime="20170915 10:40:18.484" starttime="20170915 10:40:18.483"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
</arguments>
<msg timestamp="20170915 10:40:18.484" level="INFO">xw://vagrant-ubuntu-trusty-64/b8bfea99-bd6a-4804-a6d6-bdf81af16726</msg>
<status status="PASS" endtime="20170915 10:40:18.484" starttime="20170915 10:40:18.484"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${cmd_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170915 10:40:18.485" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170915 10:40:18.485" starttime="20170915 10:40:18.484"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
<arg>-36</arg>
</arguments>
<assign>
<var>${uid}</var>
</assign>
<msg timestamp="20170915 10:40:18.485" level="INFO">${uid} = b8bfea99-bd6a-4804-a6d6-bdf81af16726</msg>
<status status="PASS" endtime="20170915 10:40:18.485" starttime="20170915 10:40:18.485"></status>
</kw>
<msg timestamp="20170915 10:40:18.486" level="INFO">${uid} = b8bfea99-bd6a-4804-a6d6-bdf81af16726</msg>
<status status="PASS" endtime="20170915 10:40:18.486" starttime="20170915 10:40:17.256"></status>
</kw>
<kw name="Count From Apps Where Uid" library="XWServer">
<arguments>
<arg>${uid}</arg>
<arg>1</arg>
</arguments>
<kw name="Count From Table Where Uid" library="MySql">
<arguments>
<arg>apps</arg>
<arg>${uid}</arg>
<arg>${countExpected}</arg>
</arguments>
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170915 10:40:18.488" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170915 10:40:18.489" starttime="20170915 10:40:18.488"></status>
</kw>
<status status="PASS" endtime="20170915 10:40:18.489" starttime="20170915 10:40:18.487"></status>
</kw>
<kw name="Row Count Is Equal To X" library="DatabaseLibrary">
<doc>Check if the number of rows returned from `selectStatement` is equal to the value submitted. If not, then this</doc>
<arguments>
<arg>SELECT * FROM ${table} WHERE uid = '${uid}'</arg>
<arg>${countExpected}</arg>
</arguments>
<msg timestamp="20170915 10:40:18.490" level="INFO">Executing : Row Count Is Equal To X  |  SELECT * FROM apps WHERE uid = 'b8bfea99-bd6a-4804-a6d6-bdf81af16726'  |  1 </msg>
<msg timestamp="20170915 10:40:18.490" level="INFO">Executing : Row Count  |  SELECT * FROM apps WHERE uid = 'b8bfea99-bd6a-4804-a6d6-bdf81af16726' </msg>
<status status="PASS" endtime="20170915 10:40:18.491" starttime="20170915 10:40:18.489"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170915 10:40:18.492" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170915 10:40:18.492" starttime="20170915 10:40:18.492"></status>
</kw>
<status status="PASS" endtime="20170915 10:40:18.492" starttime="20170915 10:40:18.491"></status>
</kw>
<status status="PASS" endtime="20170915 10:40:18.492" starttime="20170915 10:40:18.487"></status>
</kw>
<status status="PASS" endtime="20170915 10:40:18.492" starttime="20170915 10:40:18.486"></status>
</kw>
<kw name="XWSUBMITCommand" library="XWClient">
<doc>Usage : XWSUBMIT appName</doc>
<arguments>
<arg>ls -atr</arg>
</arguments>
<assign>
<var>${workuid}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd ${DIST_XWHEP_PATH}/bin &amp;&amp; ./xwsubmit ${appName}</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${cmd_result}</var>
</assign>
<msg timestamp="20170915 10:40:18.493" level="INFO">Starting process:
cd /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin &amp;&amp; ./xwsubmit ls -atr</msg>
<msg timestamp="20170915 10:40:18.496" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170915 10:40:19.159" level="INFO">Process completed.</msg>
<msg timestamp="20170915 10:40:19.160" level="INFO">${cmd_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170915 10:40:19.160" starttime="20170915 10:40:18.493"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stderr}</arg>
</arguments>
<msg timestamp="20170915 10:40:19.161" level="INFO"></msg>
<status status="PASS" endtime="20170915 10:40:19.161" starttime="20170915 10:40:19.160"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
</arguments>
<msg timestamp="20170915 10:40:19.161" level="INFO">xw://vagrant-ubuntu-trusty-64/070c3ee5-7256-4a29-a1ea-ed45f91cebc0</msg>
<status status="PASS" endtime="20170915 10:40:19.161" starttime="20170915 10:40:19.161"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${cmd_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170915 10:40:19.162" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170915 10:40:19.162" starttime="20170915 10:40:19.162"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
<arg>-36</arg>
</arguments>
<assign>
<var>${uid}</var>
</assign>
<msg timestamp="20170915 10:40:19.163" level="INFO">${uid} = 070c3ee5-7256-4a29-a1ea-ed45f91cebc0</msg>
<status status="PASS" endtime="20170915 10:40:19.163" starttime="20170915 10:40:19.162"></status>
</kw>
<msg timestamp="20170915 10:40:19.163" level="INFO">${workuid} = 070c3ee5-7256-4a29-a1ea-ed45f91cebc0</msg>
<status status="PASS" endtime="20170915 10:40:19.163" starttime="20170915 10:40:18.492"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${workuid}</arg>
</arguments>
<msg timestamp="20170915 10:40:19.163" level="INFO">070c3ee5-7256-4a29-a1ea-ed45f91cebc0</msg>
<status status="PASS" endtime="20170915 10:40:19.163" starttime="20170915 10:40:19.163"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3 min</arg>
<arg>5 sec</arg>
<arg>XWClient.Check XWSTATUS Completed</arg>
<arg>${workuid}</arg>
</arguments>
<kw name="Check XWSTATUS Completed" library="XWClient">
<arguments>
<arg>${workuid}</arg>
</arguments>
<kw name="XWSTATUSCommand" library="XWClient">
<doc>Usage : XWSTATUS uid</doc>
<arguments>
<arg>${uid}</arg>
</arguments>
<assign>
<var>${status_result}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd ${DIST_XWHEP_PATH}/bin &amp;&amp; ./xwstatus ${uid}</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${cmd_result}</var>
</assign>
<msg timestamp="20170915 10:40:19.165" level="INFO">Starting process:
cd /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin &amp;&amp; ./xwstatus 070c3ee5-7256-4a29-a1ea-ed45f91cebc0</msg>
<msg timestamp="20170915 10:40:19.168" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170915 10:40:19.776" level="INFO">Process completed.</msg>
<msg timestamp="20170915 10:40:19.776" level="INFO">${cmd_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170915 10:40:19.777" starttime="20170915 10:40:19.165"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stderr}</arg>
</arguments>
<msg timestamp="20170915 10:40:19.778" level="INFO"></msg>
<status status="PASS" endtime="20170915 10:40:19.778" starttime="20170915 10:40:19.777"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
</arguments>
<msg timestamp="20170915 10:40:19.778" level="INFO"> UID='070c3ee5-7256-4a29-a1ea-ed45f91cebc0', STATUS='PENDING', COMPLETEDDATE=NULL, LABEL=NULL</msg>
<status status="PASS" endtime="20170915 10:40:19.778" starttime="20170915 10:40:19.778"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${cmd_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170915 10:40:19.779" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170915 10:40:19.779" starttime="20170915 10:40:19.778"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
<arg>STATUS='(?P&lt;status&gt;.*)', COMPLETEDDATE</arg>
<arg>status</arg>
</arguments>
<assign>
<var>@{status_result}</var>
</assign>
<msg timestamp="20170915 10:40:19.779" level="INFO">@{status_result} = [ PENDING ]</msg>
<status status="PASS" endtime="20170915 10:40:19.779" starttime="20170915 10:40:19.779"></status>
</kw>
<msg timestamp="20170915 10:40:19.780" level="INFO">${status_result} = PENDING</msg>
<status status="PASS" endtime="20170915 10:40:19.780" starttime="20170915 10:40:19.165"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${status_result}</arg>
<arg>COMPLETED</arg>
</arguments>
<msg timestamp="20170915 10:40:19.780" level="FAIL">PENDING != COMPLETED</msg>
<status status="FAIL" endtime="20170915 10:40:19.780" starttime="20170915 10:40:19.780"></status>
</kw>
<status status="FAIL" endtime="20170915 10:40:19.780" starttime="20170915 10:40:19.164"></status>
</kw>
<kw name="Check XWSTATUS Completed" library="XWClient">
<arguments>
<arg>${workuid}</arg>
</arguments>
<kw name="XWSTATUSCommand" library="XWClient">
<doc>Usage : XWSTATUS uid</doc>
<arguments>
<arg>${uid}</arg>
</arguments>
<assign>
<var>${status_result}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd ${DIST_XWHEP_PATH}/bin &amp;&amp; ./xwstatus ${uid}</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${cmd_result}</var>
</assign>
<msg timestamp="20170915 10:40:24.784" level="INFO">Starting process:
cd /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin &amp;&amp; ./xwstatus 070c3ee5-7256-4a29-a1ea-ed45f91cebc0</msg>
<msg timestamp="20170915 10:40:24.787" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170915 10:40:25.363" level="INFO">Process completed.</msg>
<msg timestamp="20170915 10:40:25.364" level="INFO">${cmd_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170915 10:40:25.364" starttime="20170915 10:40:24.783"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stderr}</arg>
</arguments>
<msg timestamp="20170915 10:40:25.365" level="INFO"></msg>
<status status="PASS" endtime="20170915 10:40:25.365" starttime="20170915 10:40:25.364"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
</arguments>
<msg timestamp="20170915 10:40:25.366" level="INFO"> UID='070c3ee5-7256-4a29-a1ea-ed45f91cebc0', STATUS='PENDING', COMPLETEDDATE=NULL, LABEL=NULL</msg>
<status status="PASS" endtime="20170915 10:40:25.366" starttime="20170915 10:40:25.365"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${cmd_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170915 10:40:25.366" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170915 10:40:25.366" starttime="20170915 10:40:25.366"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
<arg>STATUS='(?P&lt;status&gt;.*)', COMPLETEDDATE</arg>
<arg>status</arg>
</arguments>
<assign>
<var>@{status_result}</var>
</assign>
<msg timestamp="20170915 10:40:25.367" level="INFO">@{status_result} = [ PENDING ]</msg>
<status status="PASS" endtime="20170915 10:40:25.367" starttime="20170915 10:40:25.367"></status>
</kw>
<msg timestamp="20170915 10:40:25.367" level="INFO">${status_result} = PENDING</msg>
<status status="PASS" endtime="20170915 10:40:25.367" starttime="20170915 10:40:24.782"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${status_result}</arg>
<arg>COMPLETED</arg>
</arguments>
<msg timestamp="20170915 10:40:25.368" level="FAIL">PENDING != COMPLETED</msg>
<status status="FAIL" endtime="20170915 10:40:25.368" starttime="20170915 10:40:25.367"></status>
</kw>
<status status="FAIL" endtime="20170915 10:40:25.368" starttime="20170915 10:40:24.782"></status>
</kw>
<kw name="Check XWSTATUS Completed" library="XWClient">
<arguments>
<arg>${workuid}</arg>
</arguments>
<kw name="XWSTATUSCommand" library="XWClient">
<doc>Usage : XWSTATUS uid</doc>
<arguments>
<arg>${uid}</arg>
</arguments>
<assign>
<var>${status_result}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd ${DIST_XWHEP_PATH}/bin &amp;&amp; ./xwstatus ${uid}</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${cmd_result}</var>
</assign>
<msg timestamp="20170915 10:40:30.371" level="INFO">Starting process:
cd /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin &amp;&amp; ./xwstatus 070c3ee5-7256-4a29-a1ea-ed45f91cebc0</msg>
<msg timestamp="20170915 10:40:30.375" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170915 10:40:30.969" level="INFO">Process completed.</msg>
<msg timestamp="20170915 10:40:30.970" level="INFO">${cmd_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170915 10:40:30.970" starttime="20170915 10:40:30.371"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stderr}</arg>
</arguments>
<msg timestamp="20170915 10:40:30.971" level="INFO"></msg>
<status status="PASS" endtime="20170915 10:40:30.971" starttime="20170915 10:40:30.970"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
</arguments>
<msg timestamp="20170915 10:40:30.971" level="INFO"> UID='070c3ee5-7256-4a29-a1ea-ed45f91cebc0', STATUS='PENDING', COMPLETEDDATE=NULL, LABEL=NULL</msg>
<status status="PASS" endtime="20170915 10:40:30.971" starttime="20170915 10:40:30.971"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${cmd_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170915 10:40:30.972" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170915 10:40:30.972" starttime="20170915 10:40:30.972"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
<arg>STATUS='(?P&lt;status&gt;.*)', COMPLETEDDATE</arg>
<arg>status</arg>
</arguments>
<assign>
<var>@{status_result}</var>
</assign>
<msg timestamp="20170915 10:40:30.973" level="INFO">@{status_result} = [ PENDING ]</msg>
<status status="PASS" endtime="20170915 10:40:30.973" starttime="20170915 10:40:30.972"></status>
</kw>
<msg timestamp="20170915 10:40:30.973" level="INFO">${status_result} = PENDING</msg>
<status status="PASS" endtime="20170915 10:40:30.974" starttime="20170915 10:40:30.370"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${status_result}</arg>
<arg>COMPLETED</arg>
</arguments>
<msg timestamp="20170915 10:40:30.974" level="FAIL">PENDING != COMPLETED</msg>
<status status="FAIL" endtime="20170915 10:40:30.974" starttime="20170915 10:40:30.974"></status>
</kw>
<status status="FAIL" endtime="20170915 10:40:30.974" starttime="20170915 10:40:30.369"></status>
</kw>
<kw name="Check XWSTATUS Completed" library="XWClient">
<arguments>
<arg>${workuid}</arg>
</arguments>
<kw name="XWSTATUSCommand" library="XWClient">
<doc>Usage : XWSTATUS uid</doc>
<arguments>
<arg>${uid}</arg>
</arguments>
<assign>
<var>${status_result}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd ${DIST_XWHEP_PATH}/bin &amp;&amp; ./xwstatus ${uid}</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${cmd_result}</var>
</assign>
<msg timestamp="20170915 10:40:35.979" level="INFO">Starting process:
cd /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin &amp;&amp; ./xwstatus 070c3ee5-7256-4a29-a1ea-ed45f91cebc0</msg>
<msg timestamp="20170915 10:40:35.982" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170915 10:40:36.717" level="INFO">Process completed.</msg>
<msg timestamp="20170915 10:40:36.718" level="INFO">${cmd_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170915 10:40:36.718" starttime="20170915 10:40:35.978"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stderr}</arg>
</arguments>
<msg timestamp="20170915 10:40:36.718" level="INFO"></msg>
<status status="PASS" endtime="20170915 10:40:36.719" starttime="20170915 10:40:36.718"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
</arguments>
<msg timestamp="20170915 10:40:36.719" level="INFO"> UID='070c3ee5-7256-4a29-a1ea-ed45f91cebc0', STATUS='RUNNING', COMPLETEDDATE=NULL, LABEL=NULL</msg>
<status status="PASS" endtime="20170915 10:40:36.719" starttime="20170915 10:40:36.719"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${cmd_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170915 10:40:36.719" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170915 10:40:36.719" starttime="20170915 10:40:36.719"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
<arg>STATUS='(?P&lt;status&gt;.*)', COMPLETEDDATE</arg>
<arg>status</arg>
</arguments>
<assign>
<var>@{status_result}</var>
</assign>
<msg timestamp="20170915 10:40:36.720" level="INFO">@{status_result} = [ RUNNING ]</msg>
<status status="PASS" endtime="20170915 10:40:36.720" starttime="20170915 10:40:36.720"></status>
</kw>
<msg timestamp="20170915 10:40:36.720" level="INFO">${status_result} = RUNNING</msg>
<status status="PASS" endtime="20170915 10:40:36.720" starttime="20170915 10:40:35.978"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${status_result}</arg>
<arg>COMPLETED</arg>
</arguments>
<msg timestamp="20170915 10:40:36.721" level="FAIL">RUNNING != COMPLETED</msg>
<status status="FAIL" endtime="20170915 10:40:36.721" starttime="20170915 10:40:36.720"></status>
</kw>
<status status="FAIL" endtime="20170915 10:40:36.721" starttime="20170915 10:40:35.977"></status>
</kw>
<kw name="Check XWSTATUS Completed" library="XWClient">
<arguments>
<arg>${workuid}</arg>
</arguments>
<kw name="XWSTATUSCommand" library="XWClient">
<doc>Usage : XWSTATUS uid</doc>
<arguments>
<arg>${uid}</arg>
</arguments>
<assign>
<var>${status_result}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd ${DIST_XWHEP_PATH}/bin &amp;&amp; ./xwstatus ${uid}</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${cmd_result}</var>
</assign>
<msg timestamp="20170915 10:40:41.724" level="INFO">Starting process:
cd /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin &amp;&amp; ./xwstatus 070c3ee5-7256-4a29-a1ea-ed45f91cebc0</msg>
<msg timestamp="20170915 10:40:41.728" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170915 10:40:42.253" level="INFO">Process completed.</msg>
<msg timestamp="20170915 10:40:42.254" level="INFO">${cmd_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170915 10:40:42.254" starttime="20170915 10:40:41.724"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stderr}</arg>
</arguments>
<msg timestamp="20170915 10:40:42.255" level="INFO"></msg>
<status status="PASS" endtime="20170915 10:40:42.255" starttime="20170915 10:40:42.254"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
</arguments>
<msg timestamp="20170915 10:40:42.256" level="INFO"> UID='070c3ee5-7256-4a29-a1ea-ed45f91cebc0', STATUS='RUNNING', COMPLETEDDATE=NULL, LABEL=NULL</msg>
<status status="PASS" endtime="20170915 10:40:42.256" starttime="20170915 10:40:42.256"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${cmd_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170915 10:40:42.256" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170915 10:40:42.256" starttime="20170915 10:40:42.256"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
<arg>STATUS='(?P&lt;status&gt;.*)', COMPLETEDDATE</arg>
<arg>status</arg>
</arguments>
<assign>
<var>@{status_result}</var>
</assign>
<msg timestamp="20170915 10:40:42.257" level="INFO">@{status_result} = [ RUNNING ]</msg>
<status status="PASS" endtime="20170915 10:40:42.257" starttime="20170915 10:40:42.256"></status>
</kw>
<msg timestamp="20170915 10:40:42.257" level="INFO">${status_result} = RUNNING</msg>
<status status="PASS" endtime="20170915 10:40:42.257" starttime="20170915 10:40:41.723"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${status_result}</arg>
<arg>COMPLETED</arg>
</arguments>
<msg timestamp="20170915 10:40:42.258" level="FAIL">RUNNING != COMPLETED</msg>
<status status="FAIL" endtime="20170915 10:40:42.258" starttime="20170915 10:40:42.257"></status>
</kw>
<status status="FAIL" endtime="20170915 10:40:42.258" starttime="20170915 10:40:41.722"></status>
</kw>
<kw name="Check XWSTATUS Completed" library="XWClient">
<arguments>
<arg>${workuid}</arg>
</arguments>
<kw name="XWSTATUSCommand" library="XWClient">
<doc>Usage : XWSTATUS uid</doc>
<arguments>
<arg>${uid}</arg>
</arguments>
<assign>
<var>${status_result}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd ${DIST_XWHEP_PATH}/bin &amp;&amp; ./xwstatus ${uid}</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${cmd_result}</var>
</assign>
<msg timestamp="20170915 10:40:47.262" level="INFO">Starting process:
cd /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin &amp;&amp; ./xwstatus 070c3ee5-7256-4a29-a1ea-ed45f91cebc0</msg>
<msg timestamp="20170915 10:40:47.268" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170915 10:40:47.792" level="INFO">Process completed.</msg>
<msg timestamp="20170915 10:40:47.793" level="INFO">${cmd_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170915 10:40:47.793" starttime="20170915 10:40:47.262"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stderr}</arg>
</arguments>
<msg timestamp="20170915 10:40:47.794" level="INFO"></msg>
<status status="PASS" endtime="20170915 10:40:47.794" starttime="20170915 10:40:47.793"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
</arguments>
<msg timestamp="20170915 10:40:47.795" level="INFO"> UID='070c3ee5-7256-4a29-a1ea-ed45f91cebc0', STATUS='RUNNING', COMPLETEDDATE=NULL, LABEL=NULL</msg>
<status status="PASS" endtime="20170915 10:40:47.795" starttime="20170915 10:40:47.794"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${cmd_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170915 10:40:47.795" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170915 10:40:47.795" starttime="20170915 10:40:47.795"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
<arg>STATUS='(?P&lt;status&gt;.*)', COMPLETEDDATE</arg>
<arg>status</arg>
</arguments>
<assign>
<var>@{status_result}</var>
</assign>
<msg timestamp="20170915 10:40:47.796" level="INFO">@{status_result} = [ RUNNING ]</msg>
<status status="PASS" endtime="20170915 10:40:47.796" starttime="20170915 10:40:47.795"></status>
</kw>
<msg timestamp="20170915 10:40:47.796" level="INFO">${status_result} = RUNNING</msg>
<status status="PASS" endtime="20170915 10:40:47.796" starttime="20170915 10:40:47.261"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${status_result}</arg>
<arg>COMPLETED</arg>
</arguments>
<msg timestamp="20170915 10:40:47.797" level="FAIL">RUNNING != COMPLETED</msg>
<status status="FAIL" endtime="20170915 10:40:47.797" starttime="20170915 10:40:47.796"></status>
</kw>
<status status="FAIL" endtime="20170915 10:40:47.797" starttime="20170915 10:40:47.261"></status>
</kw>
<kw name="Check XWSTATUS Completed" library="XWClient">
<arguments>
<arg>${workuid}</arg>
</arguments>
<kw name="XWSTATUSCommand" library="XWClient">
<doc>Usage : XWSTATUS uid</doc>
<arguments>
<arg>${uid}</arg>
</arguments>
<assign>
<var>${status_result}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd ${DIST_XWHEP_PATH}/bin &amp;&amp; ./xwstatus ${uid}</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${cmd_result}</var>
</assign>
<msg timestamp="20170915 10:40:52.800" level="INFO">Starting process:
cd /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin &amp;&amp; ./xwstatus 070c3ee5-7256-4a29-a1ea-ed45f91cebc0</msg>
<msg timestamp="20170915 10:40:52.803" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170915 10:40:53.383" level="INFO">Process completed.</msg>
<msg timestamp="20170915 10:40:53.384" level="INFO">${cmd_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170915 10:40:53.384" starttime="20170915 10:40:52.799"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stderr}</arg>
</arguments>
<msg timestamp="20170915 10:40:53.385" level="INFO"></msg>
<status status="PASS" endtime="20170915 10:40:53.385" starttime="20170915 10:40:53.384"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
</arguments>
<msg timestamp="20170915 10:40:53.385" level="INFO"> UID='070c3ee5-7256-4a29-a1ea-ed45f91cebc0', STATUS='COMPLETED', COMPLETEDDATE='2017-09-15 10:40:52', LABEL=NULL</msg>
<status status="PASS" endtime="20170915 10:40:53.385" starttime="20170915 10:40:53.385"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${cmd_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170915 10:40:53.386" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170915 10:40:53.386" starttime="20170915 10:40:53.385"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
<arg>STATUS='(?P&lt;status&gt;.*)', COMPLETEDDATE</arg>
<arg>status</arg>
</arguments>
<assign>
<var>@{status_result}</var>
</assign>
<msg timestamp="20170915 10:40:53.386" level="INFO">@{status_result} = [ COMPLETED ]</msg>
<status status="PASS" endtime="20170915 10:40:53.386" starttime="20170915 10:40:53.386"></status>
</kw>
<msg timestamp="20170915 10:40:53.387" level="INFO">${status_result} = COMPLETED</msg>
<status status="PASS" endtime="20170915 10:40:53.387" starttime="20170915 10:40:52.799"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${status_result}</arg>
<arg>COMPLETED</arg>
</arguments>
<status status="PASS" endtime="20170915 10:40:53.387" starttime="20170915 10:40:53.387"></status>
</kw>
<status status="PASS" endtime="20170915 10:40:53.387" starttime="20170915 10:40:52.798"></status>
</kw>
<status status="PASS" endtime="20170915 10:40:53.387" starttime="20170915 10:40:19.164"></status>
</kw>
<kw name="XWRESULTSCommand" library="XWClient">
<doc>Usage : XWRESULT uid</doc>
<arguments>
<arg>${workuid}</arg>
</arguments>
<assign>
<var>${results_file}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd ${DIST_XWHEP_PATH}/bin &amp;&amp; ./xwresults ${uid}</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${cmd_result}</var>
</assign>
<msg timestamp="20170915 10:40:53.389" level="INFO">Starting process:
cd /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin &amp;&amp; ./xwresults 070c3ee5-7256-4a29-a1ea-ed45f91cebc0</msg>
<msg timestamp="20170915 10:40:53.392" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170915 10:40:54.054" level="INFO">Process completed.</msg>
<msg timestamp="20170915 10:40:54.054" level="INFO">${cmd_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170915 10:40:54.054" starttime="20170915 10:40:53.388"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stderr}</arg>
</arguments>
<msg timestamp="20170915 10:40:54.055" level="INFO"></msg>
<status status="PASS" endtime="20170915 10:40:54.055" starttime="20170915 10:40:54.055"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
</arguments>
<msg timestamp="20170915 10:40:54.055" level="INFO"> UID='070c3ee5-7256-4a29-a1ea-ed45f91cebc0', STATUS='COMPLETED', COMPLETEDDATE='2017-09-15 10:40:52', LABEL=NULL
[15/Sep/2017:10:40:53 +0000] [xtremweb.client.Client_main_1] INFO : Downloaded to : /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/5e7dac9c-cf36-4236-8ea1-6c4498a6447a_stdout.txt.txt</msg>
<status status="PASS" endtime="20170915 10:40:54.055" starttime="20170915 10:40:54.055"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${cmd_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170915 10:40:54.056" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170915 10:40:54.056" starttime="20170915 10:40:54.056"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
<arg>INFO : Downloaded to : (?P&lt;file&gt;.*)</arg>
<arg>file</arg>
</arguments>
<assign>
<var>@{results_file}</var>
</assign>
<msg timestamp="20170915 10:40:54.056" level="INFO">@{results_file} = [ /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/5e7dac9c-cf36-4236-8ea1-6c4498a6447a_stdout.txt.txt ]</msg>
<status status="PASS" endtime="20170915 10:40:54.056" starttime="20170915 10:40:54.056"></status>
</kw>
<msg timestamp="20170915 10:40:54.057" level="INFO">${results_file} = /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/5e7dac9c-cf36-4236-8ea1-6c4498a6447a_stdout.txt.txt</msg>
<status status="PASS" endtime="20170915 10:40:54.057" starttime="20170915 10:40:53.388"></status>
</kw>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${results_file}</arg>
</arguments>
<assign>
<var>${results_file_content}</var>
</assign>
<msg timestamp="20170915 10:40:54.057" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/5e7dac9c-cf36-4236-8ea1-6c4498a6447a_stdout.txt.txt"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/5e7dac9c-cf36-4236-8ea1-6c4498a6447a_stdout.txt.txt&lt;/a&gt;'.</msg>
<msg timestamp="20170915 10:40:54.058" level="INFO">${results_file_content} = ..
stdout.txt
stderr.txt
.
</msg>
<status status="PASS" endtime="20170915 10:40:54.058" starttime="20170915 10:40:54.057"></status>
</kw>
<kw name="Get Line Count" library="String">
<doc>Returns and logs the number of lines in the given string.</doc>
<arguments>
<arg>${results_file_content}</arg>
</arguments>
<assign>
<var>${results_file_content_lines_count}</var>
</assign>
<msg timestamp="20170915 10:40:54.059" level="INFO">4 lines</msg>
<msg timestamp="20170915 10:40:54.059" level="INFO">${results_file_content_lines_count} = 4</msg>
<status status="PASS" endtime="20170915 10:40:54.059" starttime="20170915 10:40:54.058"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${results_file_content_lines_count}</arg>
<arg>4</arg>
</arguments>
<msg timestamp="20170915 10:40:54.060" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170915 10:40:54.060" starttime="20170915 10:40:54.060"></status>
</kw>
<kw name="Split To Lines" library="String">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${results_file_content}</arg>
</arguments>
<assign>
<var>@{results_file_lines}</var>
</assign>
<msg timestamp="20170915 10:40:54.060" level="INFO">4 lines returned</msg>
<msg timestamp="20170915 10:40:54.061" level="INFO">@{results_file_lines} = [ .. | stdout.txt | stderr.txt | . ]</msg>
<status status="PASS" endtime="20170915 10:40:54.061" starttime="20170915 10:40:54.060"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>@{results_file_lines}[0]</arg>
<arg>..</arg>
</arguments>
<status status="PASS" endtime="20170915 10:40:54.061" starttime="20170915 10:40:54.061"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>@{results_file_lines}[1]</arg>
<arg>stdout.txt</arg>
</arguments>
<status status="PASS" endtime="20170915 10:40:54.062" starttime="20170915 10:40:54.062"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>@{results_file_lines}[2]</arg>
<arg>stderr.txt</arg>
</arguments>
<status status="PASS" endtime="20170915 10:40:54.063" starttime="20170915 10:40:54.062"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>@{results_file_lines}[3]</arg>
<arg>.</arg>
</arguments>
<status status="PASS" endtime="20170915 10:40:54.063" starttime="20170915 10:40:54.063"></status>
</kw>
<kw type="teardown" name="End XWtremWeb Command Test" library="XWCommon">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Nothing to do</arg>
</arguments>
<msg timestamp="20170915 10:40:54.064" level="INFO">Nothing to do</msg>
<status status="PASS" endtime="20170915 10:40:54.064" starttime="20170915 10:40:54.064"></status>
</kw>
<status status="PASS" endtime="20170915 10:40:54.064" starttime="20170915 10:40:54.064"></status>
</kw>
<doc>Testing XWSubmit and XWResults cmd with param</doc>
<tags>
<tag>CommandLine Tests</tag>
</tags>
<status status="PASS" endtime="20170915 10:40:54.065" critical="yes" starttime="20170915 10:40:11.807"></status>
</test>
<kw type="teardown" name="Stop XWtremWeb Server And XWtremWeb Worker" library="XWCommon">
<kw name="Stop XtremWeb Server" library="XWServer">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${SERVER_PROCESS}</arg>
</arguments>
<msg timestamp="20170915 10:40:54.067" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20170915 10:40:54.175" level="INFO">Process completed.</msg>
<status status="PASS" endtime="20170915 10:40:54.175" starttime="20170915 10:40:54.067"></status>
</kw>
<status status="PASS" endtime="20170915 10:40:54.175" starttime="20170915 10:40:54.067"></status>
</kw>
<kw name="Log XtremWeb Server" library="XWCommon">
<kw name="Log XtremWeb Process Log File" library="XWServer">
<kw name="Log File" library="OperatingSystem">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<msg timestamp="20170915 10:40:54.176" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170915 10:40:54.180" level="INFO">Fri Sep 15 10:40:12 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : checking launch url
Fri Sep 15 10:40:12 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] WARNING : no launcher URL defined
Fri Sep 15 10:40:12 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : launching SmartSockets hub
[15/Sep/2017:10:40:14 +0000] [main_1] ERROR : setRole : role redefined ?! (was SERVER)
[15/Sep/2017:10:40:15 +0000] [xtremweb.database.DBConnPoolThread_main_1] INFO : Connection to database jdbc:mysql://localhost/xtremweb is ok, 70 created
[15/Sep/2017:10:40:15 +0000] [xtremweb.dispatcher.DBInterface_main_1] WARN : Can't retrieve any app
[15/Sep/2017:10:40:15 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't create ProxyValidator
[15/Sep/2017:10:40:15 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.io.FileNotFoundException: /tmp/castore (No such file or directory) (/tmp/castore (No such file or directory))
[15/Sep/2017:10:40:15 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't add CA certificates to keystore
[15/Sep/2017:10:40:15 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.lang.NullPointerException (null)
[15/Sep/2017:10:40:15 +0000] [xtremweb.dispatcher.HashTaskSet_TaskSet_14] INFO : TaskSet started (300000)
[15/Sep/2017:10:40:16 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : still waiting task set...
[15/Sep/2017:10:40:16 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : UDP server not started
[15/Sep/2017:10:40:16 +0000] [xtremweb.communications.TCPServer_TCPServerNIO_15] INFO : started, listening on port : 4321
log4j:WARN No appenders could be found for logger (org.eclipse.jetty.util.log).
log4j:WARN Please initialize the log4j system properly.
log4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.
[15/Sep/2017:10:40:16 +0000] [xtremweb.communications.HTTPServer_main_1] INFO : started, listening on port : 9443
[15/Sep/2017:10:40:16 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : FACEBOOK : java.net.MalformedURLException: no protocol: 
[15/Sep/2017:10:40:16 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : GOOGLE : java.net.MalformedURLException: no protocol: 
[15/Sep/2017:10:40:16 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : TWITTER : java.net.MalformedURLException: no protocol: 
[15/Sep/2017:10:40:16 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : YAHOO : java.net.MalformedURLException: no protocol: 
[15/Sep/2017:10:40:16 +0000] [main_1] ERROR : Can't add new entry to keystore
[15/Sep/2017:10:40:16 +0000] [main_1] WARN : javax.net.ssl.SSLHandshakeException: sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target (sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target)
[15/Sep/2017:10:40:16 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : XWHEP Dispatcher(10.6.0-head) started [Fri Sep 15 10:40:16 UTC 2017]
[15/Sep/2017:10:40:16 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : DB vendor  = mysql
[15/Sep/2017:10:40:16 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : mileStone  = 
[15/Sep/2017:10:40:16 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Time out   = 15000
[15/Sep/2017:10:40:16 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Disk opt'd = true
[15/Sep/2017:10:40:16 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Net  opt'd = true
[15/Sep/2017:10:40:16 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : NIO        = true
XWHEP Dispatcher started  Fri Sep 15 10:40:16 UTC 2017
Name             : vagrant-ubuntu-trusty-64
Version          : 10.6.0-head
Identity         : 
XWRole           : SERVER
Started on       : Fri Sep 15 10:40:14 UTC 2017
Scheduler        : xtremweb.dispatcher.MatchingScheduler
SmartSockets hub : 172.28.128.3/172.17.0.1/10.0.2.15-4329#aa.f6.01.3b.cd.7c.00.00.2c.17.02.42.02.6c.0f.e2~vagrant
Server HTTP      : true
Alive            : 300
Alive time out   : 900
Polling time out : 15000
Optimize zip     : true
Optimize network : true
NIO              : true
Comm layer       : xtremweb.communications.TCPClient
Socket time out  : 60000
Socket retries   : 50
Max connections  : 200
TCP port         : 4321
UDP port         : 4323
HTPP  port       : 80
HTPPS port       : 9443
Sun RPC interposition port : 4328
Sandbox path : /usr/bin/lxc
Sandbox launch args : 
Host &lt;host&gt;&lt;uid&gt;26428463-2231-419f-adfc-f2d6d18954c8&lt;/uid&gt;&lt;accessrights&gt;0x755&lt;/accessrights&gt;&lt;name&gt;vagrant-ubuntu-trusty-64&lt;/name&gt;&lt;cpuload&gt;50&lt;/cpuload&gt;&lt;natedipaddr&gt;10.0.2.15&lt;/natedipaddr&gt;&lt;ipaddr&gt;10.0.2.15&lt;/ipaddr&gt;&lt;hwaddr&gt;&lt;/hwaddr&gt;&lt;timezone&gt;Etc/UTC&lt;/timezone&gt;&lt;os&gt;LINUX&lt;/os&gt;&lt;osversion&gt;3.13.0-129-generic&lt;/osversion&gt;&lt;javaversion&gt;1.8.0_141&lt;/javaversion&gt;&lt;javadatamodel&gt;64&lt;/javadatamodel&gt;&lt;cputype&gt;AMD64&lt;/cputype&gt;&lt;cpunb&gt;1&lt;/cpunb&gt;&lt;cpumodel&gt;unknown&lt;/cpumodel&gt;&lt;cpuspeed&gt;0&lt;/cpuspeed&gt;&lt;totalmem&gt;0&lt;/totalmem&gt;&lt;totalswap&gt;0&lt;/totalswap&gt;&lt;totaltmp&gt;40284&lt;/totaltmp&gt;&lt;freetmp&gt;37249&lt;/freetmp&gt;&lt;project&gt;&lt;/project&gt;&lt;active&gt;true&lt;/active&gt;&lt;incomingconnections&gt;false&lt;/incomingconnections&gt;&lt;available&gt;false&lt;/available&gt;&lt;pilotjob&gt;false&lt;/pilotjob&gt;&lt;sgid&gt;&lt;/sgid&gt;&lt;timeout&gt;15000&lt;/timeout&gt;&lt;traces&gt;false&lt;/traces&gt;&lt;acceptbin&gt;false&lt;/acceptbin&gt;&lt;version&gt;10.6.0-head&lt;/version&gt;&lt;/host&gt;
[15/Sep/2017:10:40:16 +0000] [xtremweb.communications.HTTPServer_HTTPServer_218] INFO : started, listening on port : 9443
[15/Sep/2017:10:40:18 +0000] [xtremweb.common.StreamIO_TCPHandler_18] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[15/Sep/2017:10:40:18 +0000] [xtremweb.common.StreamIO_TCPHandler_17] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[15/Sep/2017:10:40:19 +0000] [xtremweb.common.StreamIO_TCPHandler_19] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[15/Sep/2017:10:40:19 +0000] [xtremweb.common.StreamIO_TCPHandler_20] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[15/Sep/2017:10:40:21 +0000] [xtremweb.common.StreamIO_TCPHandler_21] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[15/Sep/2017:10:40:21 +0000] [xtremweb.common.StreamIO_TCPHandler_22] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[15/Sep/2017:10:40:21 +0000] [xtremweb.dispatcher.DBInterface_TCPHandler_23] INFO : vagrant-ubuntu-trusty-64 not in DB; inserting 6755b425-2ce3-4fbe-804a-b3a66751db21
[15/Sep/2017:10:40:21 +0000] [xtremweb.common.StreamIO_TCPHandler_23] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[15/Sep/2017:10:40:25 +0000] [xtremweb.common.StreamIO_TCPHandler_24] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[15/Sep/2017:10:40:30 +0000] [xtremweb.common.StreamIO_TCPHandler_25] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[15/Sep/2017:10:40:36 +0000] [xtremweb.common.StreamIO_TCPHandler_26] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[15/Sep/2017:10:40:36 +0000] [xtremweb.common.StreamIO_TCPHandler_28] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[15/Sep/2017:10:40:36 +0000] [xtremweb.common.StreamIO_TCPHandler_29] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[15/Sep/2017:10:40:36 +0000] [xtremweb.common.StreamIO_TCPHandler_27] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[15/Sep/2017:10:40:36 +0000] [xtremweb.common.StreamIO_TCPHandler_30] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[15/Sep/2017:10:40:36 +0000] [xtremweb.dispatcher.TCPHandler_TCPHandler_31] ERROR : Can't write result
[15/Sep/2017:10:40:36 +0000] [xtremweb.dispatcher.TCPHandler_TCPHandler_31] WARN : java.io.IOException: java.net.SocketException: Broken pipe (Write failed) (java.net.SocketException: Broken pipe (Write failed))
[15/Sep/2017:10:40:36 +0000] [xtremweb.common.StreamIO_TCPHandler_31] WARN : javax.net.ssl.SSLException: Connection has been shutdown: javax.net.ssl.SSLException: java.net.SocketException: Broken pipe (Write failed) (javax.net.ssl.SSLException: java.net.SocketException: Broken pipe (Write failed))
[15/Sep/2017:10:40:42 +0000] [xtremweb.common.StreamIO_TCPHandler_32] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[15/Sep/2017:10:40:47 +0000] [xtremweb.common.StreamIO_TCPHandler_33] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[15/Sep/2017:10:40:52 +0000] [xtremweb.common.StreamIO_TCPHandler_34] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[15/Sep/2017:10:40:52 +0000] [xtremweb.common.StreamIO_TCPHandler_35] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[15/Sep/2017:10:40:52 +0000] [xtremweb.common.StreamIO_TCPHandler_36] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[15/Sep/2017:10:40:52 +0000] [xtremweb.dispatcher.DBInterface_TCPHandler_37] WARN : javax.mail.internet.AddressException: Missing local name in string ``@DBADMINEMAIL@'' (Missing local name)
[15/Sep/2017:10:40:52 +0000] [xtremweb.common.StreamIO_TCPHandler_37] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[15/Sep/2017:10:40:52 +0000] [xtremweb.dispatcher.DBInterface_TCPHandler_38] WARN : javax.mail.internet.AddressException: Missing local name in string ``@DBADMINEMAIL@'' (Missing local name)
[15/Sep/2017:10:40:52 +0000] [xtremweb.common.StreamIO_TCPHandler_38] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[15/Sep/2017:10:40:52 +0000] [xtremweb.common.StreamIO_TCPHandler_39] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[15/Sep/2017:10:40:53 +0000] [xtremweb.common.StreamIO_TCPHandler_40] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[15/Sep/2017:10:40:54 +0000] [xtremweb.common.StreamIO_TCPHandler_41] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[15/Sep/2017:10:40:54 +0000] [xtremweb.communications.TCPServer_TCPServerNIO_15] WARN : java.net.SocketException: Socket closed (Socket closed)
</msg>
<status status="PASS" endtime="20170915 10:40:54.181" starttime="20170915 10:40:54.176"></status>
</kw>
<status status="PASS" endtime="20170915 10:40:54.181" starttime="20170915 10:40:54.176"></status>
</kw>
<status status="PASS" endtime="20170915 10:40:54.181" starttime="20170915 10:40:54.175"></status>
</kw>
<kw name="Stop XtremWeb Worker" library="XWWorker">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Stop XtremWeb Worker</arg>
</arguments>
<msg timestamp="20170915 10:40:54.182" level="INFO">Stop XtremWeb Worker</msg>
<status status="PASS" endtime="20170915 10:40:54.182" starttime="20170915 10:40:54.182"></status>
</kw>
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${WORKER_PROCESS}</arg>
</arguments>
<msg timestamp="20170915 10:40:54.183" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20170915 10:40:54.285" level="INFO">Process completed.</msg>
<status status="PASS" endtime="20170915 10:40:54.285" starttime="20170915 10:40:54.182"></status>
</kw>
<status status="PASS" endtime="20170915 10:40:54.285" starttime="20170915 10:40:54.182"></status>
</kw>
<status status="PASS" endtime="20170915 10:40:54.285" starttime="20170915 10:40:54.066"></status>
</kw>
<doc>All XtremWeb commands line tests</doc>
<status status="PASS" endtime="20170915 10:40:54.285" starttime="20170915 10:37:44.788"></status>
</suite>
<status status="PASS" endtime="20170915 10:40:54.288" starttime="20170915 10:00:18.776"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="9">Critical Tests</stat>
<stat fail="0" pass="9">All Tests</stat>
</total>
<tag>
<stat fail="0" pass="4">CommandLine Tests</stat>
<stat fail="0" pass="2">HelloWorld Tests</stat>
<stat fail="0" pass="2">Smart contract Tests</stat>
<stat fail="0" pass="1">Web Tests</stat>
</tag>
<suite>
<stat fail="0" id="s1" name="Tests" pass="9">Tests</stat>
<stat fail="0" id="s1-s1" name="helloWorldSuiteOnLocalGeth" pass="1">Tests.helloWorldSuiteOnLocalGeth</stat>
<stat fail="0" id="s1-s2" name="helloWorldSuiteOnTestRpc" pass="1">Tests.helloWorldSuiteOnTestRpc</stat>
<stat fail="0" id="s1-s3" name="interfaceSuite" pass="1">Tests.interfaceSuite</stat>
<stat fail="0" id="s1-s4" name="truffleTestsOnLocalGeth" pass="1">Tests.truffleTestsOnLocalGeth</stat>
<stat fail="0" id="s1-s5" name="truffleTestsOnTestrpc" pass="1">Tests.truffleTestsOnTestrpc</stat>
<stat fail="0" id="s1-s6" name="xwcommandsSuite" pass="4">Tests.xwcommandsSuite</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
