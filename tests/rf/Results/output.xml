<?xml version="1.0" encoding="UTF-8"?>
<robot generated="20170731 10:57:51.733" generator="Robot 3.0.2 (Python 2.7.13 on darwin)">
<suite source="/Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/test/robotframework/Tests" id="s1" name="Tests">
<suite source="/Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/test/robotframework/Tests/interfaceSuite.robot" id="s1-s1" name="interfaceSuite">
<test id="s1-s1-t1" name="Test Interface Web">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>TODO</arg>
</arguments>
<msg timestamp="20170731 10:57:51.767" level="INFO">TODO</msg>
<status status="PASS" endtime="20170731 10:57:51.767" starttime="20170731 10:57:51.767"></status>
</kw>
<doc>We can use via http://robotframework.org/#libraries External Selenium2Library : http://robotframework.org/Selenium2Library/Selenium2Library.html</doc>
<tags>
<tag>Web Tests</tag>
</tags>
<status status="PASS" endtime="20170731 10:57:51.767" critical="yes" starttime="20170731 10:57:51.766"></status>
</test>
<test id="s1-s1-t2" name="Test Mobile">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>TODO</arg>
</arguments>
<msg timestamp="20170731 10:57:51.769" level="INFO">TODO</msg>
<status status="PASS" endtime="20170731 10:57:51.769" starttime="20170731 10:57:51.769"></status>
</kw>
<doc>We can use via http://robotframework.org/#libraries External AppiumLibrary : Library for Android- and iOS-testing. http://serhatbolsu.github.io/robotframework-appiumlibrary/AppiumLibrary.html</doc>
<tags>
<tag>Mobile Tests</tag>
</tags>
<status status="PASS" endtime="20170731 10:57:51.769" critical="yes" starttime="20170731 10:57:51.768"></status>
</test>
<doc>All user interfaces tests</doc>
<status status="PASS" endtime="20170731 10:57:51.770" starttime="20170731 10:57:51.764"></status>
</suite>
<suite source="/Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/test/robotframework/Tests/smartContractSuite.robot" id="s1-s2" name="smartContractSuite">
<test id="s1-s2-t1" name="Test Smart contract">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>TODO</arg>
</arguments>
<msg timestamp="20170731 10:57:51.774" level="INFO">TODO</msg>
<status status="PASS" endtime="20170731 10:57:51.774" starttime="20170731 10:57:51.774"></status>
</kw>
<doc>For instance we can call truffle test and show the result here. To call truffle test on a remote server http://robotframework.org/#libraries External SSHLibrary : http://robotframework.org/SSHLibrary/latest/SSHLibrary.html</doc>
<tags>
<tag>Smart contract Tests</tag>
</tags>
<status status="PASS" endtime="20170731 10:57:51.774" critical="yes" starttime="20170731 10:57:51.773"></status>
</test>
<doc>All smart contract tests</doc>
<status status="PASS" endtime="20170731 10:57:51.774" starttime="20170731 10:57:51.771"></status>
</suite>
<suite source="/Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/test/robotframework/Tests/xwcommandsSuite.robot" id="s1-s3" name="xwcommandsSuite">
<kw type="setup" name="Start XWtremWeb Server And XWtremWeb Worker" library="XWCommon">
<kw name="Compile XWtremWeb" library="XWCommon">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd ${BUILD_PATH} &amp;&amp; make clean &amp;&amp; make</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${compile_result}</var>
</assign>
<msg timestamp="20170731 10:57:51.911" level="INFO">Starting process:
cd ../../build &amp;&amp; make clean &amp;&amp; make</msg>
<msg timestamp="20170731 10:57:51.917" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170731 10:58:18.039" level="INFO">Process completed.</msg>
<msg timestamp="20170731 10:58:18.042" level="INFO">${compile_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170731 10:58:18.042" starttime="20170731 10:57:51.910"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${compile_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170731 10:58:18.047" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170731 10:58:18.047" starttime="20170731 10:58:18.044"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${compile_result.stderr}</arg>
</arguments>
<msg timestamp="20170731 10:58:18.048" level="INFO"></msg>
<status status="PASS" endtime="20170731 10:58:18.048" starttime="20170731 10:58:18.048"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${compile_result.stdout}</arg>
</arguments>
<msg timestamp="20170731 10:58:18.049" level="INFO">./build.sh -f build.xml clean 
Buildfile: /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/build.xml

tstamp:
[echoproperties] #Ant properties
[echoproperties] #Mon Jul 31 10:57:53 CEST 2017
[echoproperties] v.branch=head
[echoproperties] v.build=201707311057
[echoproperties] v.major=10
[echoproperties] v.micro=2
[echoproperties] v.minor=5

version:

clean:
   [delete] Deleting: /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/.build
   [delete] Deleting directory /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/classes
     [exec] rm -f XWInterruptsImpl.h PortMapper.h XWUtilImpl.h XWTracerImpl.hmkdir: ../../build/classes: No such file or directory
     [exec] 

BUILD SUCCESSFUL
Total time: 1 second
./build.sh distrib 
Buildfile: /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/build.xml

tstamp:
[echoproperties] #Ant properties
[echoproperties] #Mon Jul 31 10:57:54 CEST 2017
[echoproperties] v.branch=head
[echoproperties] v.build=201707311057
[echoproperties] v.major=10
[echoproperties] v.micro=2
[echoproperties] v.minor=5

version:

configure:
     [echo] 
     [echo]       ant version = Apache Ant(TM) version 1.8.4 compiled on May 22 2012
     [echo] 
     [echo]       os         = Mac OS X
     [echo]       os.arch    = x86_64
     [echo]       target     = Mac OS X
     [echo]       xwarch     = x86_64
     [echo]       xwsuffix   = macosx-x86_64
     [echo]       debug      = true
     [echo]       debuglevel = source,lines
     [echo] 
     [echo]         cross=${cross.prefix}
     [echo]         target java home =${cross.java.home}
     [echo]     	target           =Mac OS X
     [echo]     	xwversion=10.5.2

templates:
     [copy] Copying 1 file to /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/src/xtremweb/common

prepare:
    [mkdir] Created dir: /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/classes
    [mkdir] Created dir: /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/classes/obj
    [mkdir] Created dir: /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/classes/obj/macosx-x86_64
    [mkdir] Created dir: /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/classes/jni
    [mkdir] Created dir: /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/classes/xwclasses
     [echo] 
     [echo]       classpath=/Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/src:/Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/test:/Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/classes:/Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/classes/JOpenId-1.08.jar:/Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/classes/JSON-java.jar:/Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/classes/MinML.jar:/Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/classes/activation.jar:/Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/classes/antlr.jar:/Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/classes/attic-all-0.3.jar:/Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/classes/bcpkix-jdk15on-151.jar:/Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/classes/bcprov-jdk15on-151.jar:/Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/classes/bcprov-jdk16-140.jar:/Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/classes/commons-codec-1.3.jar:/Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/classes/commons-fileupload-1.2.jar:/Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/classes/commons-httpclient-3.0.1.jar:/Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/classes/commons-io-1.3.2.jar:/Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/classes/commons-logging-1.1.jar:/Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/classes/ibis-util-2.1.jar:/Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/classes/jcert.jar:/Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/classes/jetty-http-9.3.8.v20160314.jar:/Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/classes/jetty-io-9.3.8.v20160314.jar:/Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/classes/jetty-server-9.3.8.v20160314.jar:/Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/classes/jetty-util-9.3.8.v20160314.jar:/Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/classes/jose4j-0.5.5.jar:/Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/classes/junit-4.10.jar:/Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/classes/log4j-1.2.17.jar:/Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/classes/mail.jar:/Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/classes/mysql-connector-java-5.1.6-bin.jar:/Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/classes/scribejava-apis-3.3.1-SNAPSHOT.jar:/Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/classes/scribejava-core-3.3.1-SNAPSHOT.jar:/Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/classes/servlet-api-3.1.jar:/Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/classes/slf4j-api-1.7.2.jar:/Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/classes/slf4j-log4j12-1.7.2.jar:/Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/classes/smartsockets-1.4.jar
     [echo]     

common:
    [javac] Compiling 278 source files to /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/classes
    [javac] /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/src/xtremweb/common/XWTools.java:61: warning: [deprecation] HTTPOpenIdHandler in xtremweb.dispatcher has been deprecated
    [javac] import xtremweb.dispatcher.HTTPOpenIdHandler;
    [javac]                           ^
    [javac] /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/src/xtremweb/security/ACLConnect.java:36: warning: AclEntryImpl is internal proprietary API and may be removed in a future release
    [javac] import sun.security.acl.AclEntryImpl;
    [javac]                        ^
    [javac] /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/src/xtremweb/security/ACLConnect.java:37: warning: AclImpl is internal proprietary API and may be removed in a future release
    [javac] import sun.security.acl.AclImpl;
    [javac]                        ^
    [javac] /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/src/xtremweb/security/ACLConnect.java:38: warning: PermissionImpl is internal proprietary API and may be removed in a future release
    [javac] import sun.security.acl.PermissionImpl;
    [javac]                        ^
    [javac] /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/src/xtremweb/security/ACLConnect.java:39: warning: PrincipalImpl is internal proprietary API and may be removed in a future release
    [javac] import sun.security.acl.PrincipalImpl;
    [javac]                        ^
    [javac] /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/src/xtremweb/communications/CommClient.java:871: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] 		return version(new XMLRPCCommandVersion(newURI()));
    [javac] 		                   ^
    [javac] /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/src/xtremweb/communications/CommClient.java:882: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] 	public Version version(final XMLRPCCommandVersion command)
    [javac] 	                             ^
    [javac] /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/src/xtremweb/common/DataInterface.java:625: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/src/xtremweb/communications/IdRpc.java:89: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] 		public XMLRPCCommandVersion newCommand(final URI uri, final UserInterface client, final Table obj)
    [javac] 		       ^
    [javac] /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/src/xtremweb/communications/IdRpc.java:91: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] 			return new XMLRPCCommandVersion(uri, client);
    [javac] 			           ^
    [javac] /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/src/xtremweb/communications/XMLRPCCommand.java:614: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] 			return new XMLRPCCommandVersion(input);
    [javac] 			           ^
    [javac] /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/src/xtremweb/common/AppInterface.java:1448: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/src/xtremweb/common/UserInterface.java:577: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/src/xtremweb/common/HostInterface.java:1212: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/src/xtremweb/common/GroupInterface.java:320: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/src/xtremweb/common/SessionInterface.java:264: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/src/xtremweb/common/TaskInterface.java:441: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/src/xtremweb/common/TraceInterface.java:348: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/src/xtremweb/common/UserGroupInterface.java:365: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/src/xtremweb/common/WorkInterface.java:933: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/src/xtremweb/common/AppType.java:263: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/src/xtremweb/common/CPUType.java:223: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/src/xtremweb/common/DataType.java:265: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/src/xtremweb/common/Executable.java:294: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/src/xtremweb/common/JobInterface.java:409: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/src/xtremweb/common/OSType.java:243: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/src/xtremweb/common/Status.java:245: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/src/xtremweb/common/UserRightsType.java:243: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/src/xtremweb/common/XWTools.java:830: warning: [deprecation] HTTPOpenIdHandler in xtremweb.dispatcher has been deprecated
    [javac] 		final Logger logger = new Logger(HTTPOpenIdHandler.class);
    [javac] 		                                 ^
    [javac] /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/src/xtremweb/common/XWTools.java:842: warning: BASE64Encoder is internal proprietary API and may be removed in a future release
    [javac] 			out.println(new sun.misc.BASE64Encoder().encode(cert.getEncoded()));
    [javac] 			                        ^
    [javac] /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/src/xtremweb/communications/HTTPClient.java:238: warning: [deprecation] Protocol(String,SecureProtocolSocketFactory,int) in Protocol has been deprecated
    [javac] 				xwssl = new Protocol(uri.getScheme(), new AuthSSLProtocolSocketFactory(uri.getScheme(), keyStore,
    [javac] 				        ^
    [javac] /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/src/xtremweb/dispatcher/Dispatcher.java:214: warning: [deprecation] HTTPOpenIdHandler in xtremweb.dispatcher has been deprecated
    [javac] 				HTTPOpenIdHandler.setCACertificateEntries(getConfig().getKeyStore());
    [javac] 				^
    [javac] /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/src/xtremweb/security/ACLConnect.java:65: warning: PermissionImpl is internal proprietary API and may be removed in a future release
    [javac] 	private final Permission _connect = new PermissionImpl("CONNECT");
    [javac] 	                                        ^
    [javac] /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/src/xtremweb/security/ACLConnect.java:66: warning: PrincipalImpl is internal proprietary API and may be removed in a future release
    [javac] 	private final Principal _owner = new PrincipalImpl("localhost");
    [javac] 	                                     ^
    [javac] /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/src/xtremweb/security/ACLConnect.java:67: warning: AclImpl is internal proprietary API and may be removed in a future release
    [javac] 	private Acl _acl = new AclImpl(_owner, "ConnectACL");
    [javac] 	                       ^
    [javac] /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/src/xtremweb/security/ACLConnect.java:80: warning: AclImpl is internal proprietary API and may be removed in a future release
    [javac] 		_acl = new AclImpl(_owner, "ConnectACL");
    [javac] 		           ^
    [javac] /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/src/xtremweb/security/ACLConnect.java:81: warning: AclEntryImpl is internal proprietary API and may be removed in a future release
    [javac] 		final AclEntry allowConnections = new AclEntryImpl(_owner);
    [javac] 		                                      ^
    [javac] /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/src/xtremweb/security/ACLConnect.java:104: warning: PrincipalImpl is internal proprietary API and may be removed in a future release
    [javac] 			final Principal prince = new PrincipalImpl(regexp);
    [javac] 			                             ^
    [javac] /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/src/xtremweb/security/ACLConnect.java:105: warning: AclEntryImpl is internal proprietary API and may be removed in a future release
    [javac] 			final AclEntry entry = new AclEntryImpl(prince);
    [javac] 			                           ^
    [javac] Note: Some input files use unchecked or unsafe operations.
    [javac] Note: Recompile with -Xlint:unchecked for details.
    [javac] 39 warnings
    [javac] Creating empty /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/classes/database/package-info.class

obj:

iface:

communications:
    [javac] Compiling 60 source files to /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/classes
    [javac] /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/src/xtremweb/communications/IdRpc.java:89: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] 		public XMLRPCCommandVersion newCommand(final URI uri, final UserInterface client, final Table obj)
    [javac] 		       ^
    [javac] /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/src/xtremweb/communications/IdRpc.java:91: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] 			return new XMLRPCCommandVersion(uri, client);
    [javac] 			           ^
    [javac] /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/src/xtremweb/communications/XMLRPCCommand.java:614: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] 			return new XMLRPCCommandVersion(input);
    [javac] 			           ^
    [javac] /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/src/xtremweb/communications/CommClient.java:871: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] 		return version(new XMLRPCCommandVersion(newURI()));
    [javac] 		                   ^
    [javac] /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/src/xtremweb/communications/CommClient.java:882: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] 	public Version version(final XMLRPCCommandVersion command)
    [javac] 	                             ^
    [javac] /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/src/xtremweb/communications/HTTPClient.java:238: warning: [deprecation] Protocol(String,SecureProtocolSocketFactory,int) in Protocol has been deprecated
    [javac] 				xwssl = new Protocol(uri.getScheme(), new AuthSSLProtocolSocketFactory(uri.getScheme(), keyStore,
    [javac] 				        ^
    [javac] Note: Some input files use unchecked or unsafe operations.
    [javac] Note: Recompile with -Xlint:unchecked for details.
    [javac] 6 warnings

services:
    [javac] Compiling 7 source files to /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/classes

archdep:
    [javac] Compiling 20 source files to /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/classes

upgrade:

worker:
    [javac] Compiling 42 source files to /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/classes
    [javac] Note: Some input files use unchecked or unsafe operations.
    [javac] Note: Recompile with -Xlint:unchecked for details.

dispatcher:
    [javac] Compiling 14 source files to /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/classes
    [javac] /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/src/xtremweb/dispatcher/Dispatcher.java:214: warning: [deprecation] HTTPOpenIdHandler in xtremweb.dispatcher has been deprecated
    [javac] 				HTTPOpenIdHandler.setCACertificateEntries(getConfig().getKeyStore());
    [javac] 				^
    [javac] Note: Some input files use unchecked or unsafe operations.
    [javac] Note: Recompile with -Xlint:unchecked for details.
    [javac] 1 warning

worker.manifest:

jni:
     [copy] Copying 10 files to /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/src/natif
     [exec] mkdir: ../../build/classes/obj/macosx-x86_64: File exists
     [exec] cc -c  -m64 -g -Wall -no-cpp-precomp -I'/Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/include/darwin' -m64 -I'/Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/include' -o ../../build/classes/obj/macosx-x86_64/XWUtilFreeBSD.o XWUtilFreeBSD.c
     [exec] cc -bundle  -m64 -g -Wall -no-cpp-precomp -I'/Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/include/darwin' -m64 -I'/Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/include' -framework CoreServices -framework JavaVM -m64  -L'/Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/lib' -o ../../build/classes/obj/macosx-x86_64/XWUtil.jni ../../build/classes/obj/macosx-x86_64/XWUtilFreeBSD.o
     [exec] cp ../../build/classes/obj/macosx-x86_64/XWUtil.jni ../../build/classes/jni/XWUtil.jni.10.5.2.macosx-x86_64

Worker:
    [mkdir] Created dir: /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/classes/data
     [copy] Copying 23 files to /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/classes/data

tests:
    [javac] Compiling 48 source files to /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/classes
    [javac] /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/test/xtremweb/communications/XMLRPCCommandVersionTest.java:29: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] import xtremweb.communications.XMLRPCCommandVersion;
    [javac]                               ^
    [javac] /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/test/xtremweb/communications/XMLRPCCommandVersionTest.java:47: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] 			setCmd(new XMLRPCCommandVersion());
    [javac] 			           ^
    [javac] /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/test/xtremweb/communications/XMLRPCCommandVersionTest.java:48: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] 			setCmd2(new XMLRPCCommandVersion());
    [javac] 			            ^
    [javac] Note: /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/test/xtremweb/common/XMLHashtableTest.java uses unchecked or unsafe operations.
    [javac] Note: Recompile with -Xlint:unchecked for details.
    [javac] 3 warnings

client:

allservices:

Dispatcher:
     [echo]  
     [echo] 	JAR JAR JAR
     [echo] 	basedir="/Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/classes"
     [echo] 	jarfile="/Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/lib/xtremweb.jar"
     [echo] 	manifest="/Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/misc/worker.manifest"
     [echo]       
      [jar] Building jar: /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/lib/xtremweb.jar

rpcv:

all:

copylibs:

distrib:

BUILD SUCCESSFUL
Total time: 18 seconds
./build.sh -f install.xml install 
Buildfile: /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/install.xml

tstamp:

version:

prepare:

configure:
     [echo] 
     [echo] user  login : ${xtremweb.admin.login} ${xtremweb.admin.password}
     [echo] admin login : ${xtremweb.admin.login} ${xtremweb.admin.password}
     [echo] DB su login :  
     [echo] ENGINE : ""
     [echo] launcher.url = http://nohost/
     [echo] system.user  = xwhep
     [echo] xwsuffix=MACOSX-x86_64
     [echo] xwarch=x86_64
     [echo] target.os=Mac OS X
     [echo] cross.prefix=${cross.prefix}
     [echo] cross.java.home=${cross.java.home}
     [echo] version=10.5.2

installConfig:
     [echo] 
     [echo]        ==&gt; version    = 10.5.2
     [echo]        ==&gt; dist.dir   = /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2
     [echo]        ==&gt; installDir = /opt/xwhep-10.5.2
     [echo]     

installFiles:
     [copy] Copying 98 files to /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/doc
     [copy] Copying 6 files to /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/docker
     [copy] Copying 31 files to /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/lib
     [copy] Copying 31 files to /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/installers/macosx/xwhep.server/installer/PckRoot/private/etc/xwhep.server/lib
     [copy] Copying 1 file to /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/conf
     [echo] 
     [echo]       xtremweb.admin.login=${xtremweb.admin.login}
     [echo]       xtremweb.admin.password=${xtremweb.admin.password}
     [echo]     
     [copy] Copying 1 file to /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/conf
     [copy] Copying 1 file to /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/conf
     [echo] 
     [echo]       xtremweb.worker.login=${xtremweb.worker.login}
     [echo]       xtremweb.worker.password=${xtremweb.worker.password}
     [echo]     
     [copy] Copying 1 file to /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/conf
     [copy] Copying 1 file to /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/installers/macosx/xwhep.worker/installer/PckRoot/private/etc/xwhep.worker/conf
     [copy] Copying 1 file to /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/installers/macosx/xwhep.worker/installer/PckRoot/Applications/xwhep.worker
     [copy] Copying 1 file to /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/installers/macosx/xwhep.worker/installer/PckRoot/private/etc/xwhep.worker/conf
     [copy] Copying 1 file to /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/installers/macosx/xwhep.vworker/installer/PckRoot/Applications/xwhep.vworker
     [copy] Copying 1 file to /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/installers/macosx/xwhep.vworker/installer/PckRoot/private/etc/xwhep.vworker/bin
     [copy] Copying 1 file to /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/installers/macosx/xwhep.client/installer/PckRoot/Applications/xwhep.client/conf
     [copy] Copying 1 file to /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/installers/macosx/xwhep.server/installer/PckRoot/private/etc/xwhep.server/conf
     [copy] Copying 98 files to /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/installers/macosx/xwhep.server/installer/PckRoot/Applications/xwhep.server/doc
     [copy] Copying 1 file to /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/installers/win32/xwhep.client/conf
     [copy] Copying 1 file to /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/installers/win32/xwhep.client/innoSetup/client/conf
     [copy] Copying 1 file to /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/installers/win32/xwhep.worker/conf
     [copy] Copying 1 file to /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/installers/win32/xwhep.worker/innoSetup/worker/conf
     [copy] Copying 1 file to /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/installers/win32/xwhep.worker/conf
     [copy] Copying 1 file to /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/installers/win32/xwhep.worker/innoSetup/worker/conf
     [copy] Copying 2 files to /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/installers/win32/xwhep.worker/lib
     [copy] Copying 2 files to /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/installers/win32/xwhep.worker/innoSetup/worker/lib
     [copy] Copying 1 file to /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/installers/win32/xwhep.worker/innoSetup/worker/lib
     [copy] Copying 1 file to /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/installers/win32/xwhep.worker/innoSetup/worker/lib
     [copy] Copying 1 file to /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/installers/win32/xwhep.worker/innoSetup/worker/misc
     [copy] Copying 1 file to /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/installers/win32/xwhep.worker/innoSetup/worker/doc
     [copy] Copying 8 files to /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/installers/win32/xwhep.worker/bin
     [copy] Copying 5 files to /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/installers/win32/xwhep.worker/innoSetup/worker/bin
     [copy] Copying 1 file to /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/installers/win32/xwhep.worker/doc
     [copy] Copying 1 file to /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/installers/win32/xwhep.server/conf
     [copy] Copying 1 file to /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/installers/win32/xwhep.server/innoSetup/server/conf
     [copy] Copying 1 file to /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/installers/win32/xwhep.server/conf
     [copy] Copying 1 file to /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/installers/win32/xwhep.server/innoSetup/server/conf
     [copy] Copying 2 files to /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/installers/win32/xwhep.server/lib
     [copy] Copying 2 files to /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/installers/win32/xwhep.server/innoSetup/server/lib
     [copy] Copying 1 file to /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/installers/win32/xwhep.server/innoSetup/server/misc
     [copy] Copying 2 files to /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/installers/win32/xwhep.server/innoSetup/server/bin

setupScripts:
     [copy] Copying 261 files to /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/bin
     [copy] Copying 1 file to /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/bin/db-maintenance

installScripts:

createDownload:
     [copy] Copying 1 file to /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/installers/macosx/xwhep.worker/installer/PckRoot/private/etc/xwhep.worker/keystore
     [copy] Copying 1 file to /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/installers/macosx/xwhep.client/installer/PckRoot/Applications/xwhep.client/lib
     [copy] Copying 1 file to /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/installers/macosx/xwhep.client/installer/PckRoot/Applications/xwhep.client/lib
     [copy] Copying 1 file to /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/installers/macosx/xwhep.client/installer/PckRoot/Applications/xwhep.client/keystore
     [copy] Copying 1 file to /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/installers/macosx/xwhep.server/installer/PckRoot/private/etc/xwhep.server/keystore
     [copy] Copying 1 file to /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/bin/db-maintenance
     [copy] Copying 1 file to /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/bin/db-maintenance
     [copy] Copying 1 file to /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/bin
     [copy] Copying 98 files to /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/doc/xwhep.client/doc
[jarbundler] Creating application bundle: /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/bin/xwhep.client.app
     [copy] Copying 5 files to /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/bin/xwhep.client.app
     [copy] Copying 20 files to /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/installers/macosx/xwhep.worker
     [copy] Copying 17 files to /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/installers/macosx/xwhep.vworker
     [copy] Copying 12 files to /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/installers/macosx/xwhep.client
     [copy] Copying 19 files to /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/installers/macosx/xwhep.server
     [copy] Copying 3 files to /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/installers/win32/xwhep.worker/innoSetup
     [copy] Copying 1 file to /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/installers/win32/xwhep.worker
     [copy] Copying 3 files to /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/installers/win32/xwhep.server/innoSetup
     [copy] Copying 1 file to /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/installers/linux/rpm/xwhep.server
     [copy] Copying 1 file to /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/installers/linux/rpm/xwhep.server.conf
     [copy] Copying 1 file to /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/installers/linux/dpkg/xwhep.server/DEBIAN
     [copy] Copying 1 file to /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/installers/linux/dpkg/xwhep.server/DEBIAN
     [copy] Copying 1 file to /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/installers/linux/dpkg/xwhep.server/DEBIAN
     [copy] Copying 1 file to /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/installers/linux/dpkg/xwhep.server/DEBIAN
     [copy] Copying 1 file to /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/installers/linux/dpkg/xwhep.server/DEBIAN
     [copy] Copying 1 file to /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/installers/linux/dpkg/xwhep.server/DEBIAN
     [copy] Copying 1 file to /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/installers/linux/dpkg/xwhep.server.conf/DEBIAN
     [copy] Copying 1 file to /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/installers/linux/dpkg/xwhep.server.conf/DEBIAN
     [copy] Copying 1 file to /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/installers/linux/dpkg/xwhep.server.conf/DEBIAN
     [copy] Copying 1 file to /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/installers/linux/dpkg/xwhep.server.conf/DEBIAN
     [copy] Copying 1 file to /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/installers/linux/dpkg/xwhep.server.conf/DEBIAN
     [copy] Copying 1 file to /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/installers/linux/dpkg/xwhep.server.conf/DEBIAN
     [copy] Copying 1 file to /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/installers/linux/rpm/xwhep.bridgedgsg
     [copy] Copying 1 file to /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/installers/linux/dpkg/xwhep.bridgedgsg/DEBIAN
     [copy] Copying 1 file to /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/installers/linux/dpkg/xwhep.bridgedgsg/DEBIAN
     [copy] Copying 1 file to /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/installers/linux/dpkg/xwhep.bridgedgsg/DEBIAN
     [copy] Copying 1 file to /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/installers/linux/dpkg/xwhep.bridgedgsg/DEBIAN
     [copy] Copying 1 file to /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/installers/linux/dpkg/xwhep.bridgedgsg/DEBIAN
     [copy] Copying 1 file to /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/installers/linux/dpkg/xwhep.bridgedgsg/DEBIAN
     [copy] Copying 1 file to /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/installers/linux/rpm/xwhep.client
     [copy] Copying 1 file to /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/installers/linux/dpkg/xwhep.client/DEBIAN
     [copy] Copying 1 file to /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/installers/linux/dpkg/xwhep.client/DEBIAN
     [copy] Copying 1 file to /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/installers/linux/dpkg/xwhep.client/DEBIAN
     [copy] Copying 1 file to /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/installers/linux/dpkg/xwhep.client/DEBIAN
     [copy] Copying 1 file to /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/installers/linux/dpkg/xwhep.client/DEBIAN
     [copy] Copying 1 file to /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/installers/linux/dpkg/xwhep.client/DEBIAN
     [copy] Copying 1 file to /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/installers/linux/rpm/xwhep.worker
     [copy] Copying 1 file to /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/installers/linux/dpkg/xwhep.worker/DEBIAN
     [copy] Copying 1 file to /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/installers/linux/dpkg/xwhep.worker/DEBIAN
     [copy] Copying 1 file to /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/installers/linux/dpkg/xwhep.worker/DEBIAN
     [copy] Copying 1 file to /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/installers/linux/dpkg/xwhep.worker/DEBIAN
     [copy] Copying 1 file to /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/installers/linux/dpkg/xwhep.worker/DEBIAN
     [copy] Copying 1 file to /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/installers/linux/dpkg/xwhep.worker/DEBIAN
     [copy] Copying 1 file to /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/installers/win32/xwhep.client/innoSetup/client/lib
     [copy] Copying 1 file to /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/installers/win32/xwhep.client/innoSetup/client/lib
     [copy] Copying 11 files to /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2
     [copy] Copying 6 files to /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/apptest

ganglia:

install:
     [echo] 
     [echo]       Installation done
     [echo]     

BUILD SUCCESSFUL
Total time: 5 seconds</msg>
<status status="PASS" endtime="20170731 10:58:18.050" starttime="20170731 10:58:18.049"></status>
</kw>
<kw name="Get Lines Containing String" library="String">
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<arguments>
<arg>${compile_result.stdout}</arg>
<arg>BUILD SUCCESSFUL</arg>
</arguments>
<assign>
<var>${extract_build_successful}</var>
</assign>
<msg timestamp="20170731 10:58:18.051" level="INFO">3 out of 445 lines matched</msg>
<msg timestamp="20170731 10:58:18.052" level="INFO">${extract_build_successful} = BUILD SUCCESSFUL
BUILD SUCCESSFUL
BUILD SUCCESSFUL</msg>
<status status="PASS" endtime="20170731 10:58:18.052" starttime="20170731 10:58:18.050"></status>
</kw>
<kw name="Get Line Count" library="String">
<doc>Returns and logs the number of lines in the given string.</doc>
<arguments>
<arg>${extract_build_successful}</arg>
</arguments>
<assign>
<var>${line_count_build_successful}</var>
</assign>
<msg timestamp="20170731 10:58:18.052" level="INFO">3 lines</msg>
<msg timestamp="20170731 10:58:18.052" level="INFO">${line_count_build_successful} = 3</msg>
<status status="PASS" endtime="20170731 10:58:18.052" starttime="20170731 10:58:18.052"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${line_count_build_successful}</arg>
<arg>3</arg>
</arguments>
<msg timestamp="20170731 10:58:18.053" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170731 10:58:18.053" starttime="20170731 10:58:18.052"></status>
</kw>
<status status="PASS" endtime="20170731 10:58:18.053" starttime="20170731 10:57:51.910"></status>
</kw>
<kw name="Ping XWtremWeb Database" library="XWServer">
<kw name="Xtremweb Tables Must Exist" library="MySql">
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170731 10:58:18.094" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170731 10:58:18.266" starttime="20170731 10:58:18.055"></status>
</kw>
<status status="PASS" endtime="20170731 10:58:18.266" starttime="20170731 10:58:18.055"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>appTypes</arg>
</arguments>
<msg timestamp="20170731 10:58:18.267" level="INFO">Executing : Table Must Exist  |  appTypes </msg>
<msg timestamp="20170731 10:58:18.267" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='appTypes' </msg>
<status status="PASS" endtime="20170731 10:58:18.361" starttime="20170731 10:58:18.267"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps</arg>
</arguments>
<msg timestamp="20170731 10:58:18.362" level="INFO">Executing : Table Must Exist  |  apps </msg>
<msg timestamp="20170731 10:58:18.362" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='apps' </msg>
<status status="PASS" endtime="20170731 10:58:18.377" starttime="20170731 10:58:18.362"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps_history</arg>
</arguments>
<msg timestamp="20170731 10:58:18.378" level="INFO">Executing : Table Must Exist  |  apps_history </msg>
<msg timestamp="20170731 10:58:18.378" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='apps_history' </msg>
<status status="PASS" endtime="20170731 10:58:18.389" starttime="20170731 10:58:18.377"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>cpuTypes</arg>
</arguments>
<msg timestamp="20170731 10:58:18.389" level="INFO">Executing : Table Must Exist  |  cpuTypes </msg>
<msg timestamp="20170731 10:58:18.389" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='cpuTypes' </msg>
<status status="PASS" endtime="20170731 10:58:18.394" starttime="20170731 10:58:18.389"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>dataTypes</arg>
</arguments>
<msg timestamp="20170731 10:58:18.394" level="INFO">Executing : Table Must Exist  |  dataTypes </msg>
<msg timestamp="20170731 10:58:18.394" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='dataTypes' </msg>
<status status="PASS" endtime="20170731 10:58:18.398" starttime="20170731 10:58:18.394"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas</arg>
</arguments>
<msg timestamp="20170731 10:58:18.399" level="INFO">Executing : Table Must Exist  |  datas </msg>
<msg timestamp="20170731 10:58:18.399" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='datas' </msg>
<status status="PASS" endtime="20170731 10:58:18.407" starttime="20170731 10:58:18.399"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas_history</arg>
</arguments>
<msg timestamp="20170731 10:58:18.407" level="INFO">Executing : Table Must Exist  |  datas_history </msg>
<msg timestamp="20170731 10:58:18.407" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='datas_history' </msg>
<status status="PASS" endtime="20170731 10:58:18.414" starttime="20170731 10:58:18.407"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables</arg>
</arguments>
<msg timestamp="20170731 10:58:18.414" level="INFO">Executing : Table Must Exist  |  executables </msg>
<msg timestamp="20170731 10:58:18.414" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='executables' </msg>
<status status="PASS" endtime="20170731 10:58:18.445" starttime="20170731 10:58:18.414"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables_history</arg>
</arguments>
<msg timestamp="20170731 10:58:18.446" level="INFO">Executing : Table Must Exist  |  executables_history </msg>
<msg timestamp="20170731 10:58:18.446" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='executables_history' </msg>
<status status="PASS" endtime="20170731 10:58:18.450" starttime="20170731 10:58:18.446"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups</arg>
</arguments>
<msg timestamp="20170731 10:58:18.451" level="INFO">Executing : Table Must Exist  |  groups </msg>
<msg timestamp="20170731 10:58:18.451" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='groups' </msg>
<status status="PASS" endtime="20170731 10:58:18.452" starttime="20170731 10:58:18.450"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups_history</arg>
</arguments>
<msg timestamp="20170731 10:58:18.453" level="INFO">Executing : Table Must Exist  |  groups_history </msg>
<msg timestamp="20170731 10:58:18.453" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='groups_history' </msg>
<status status="PASS" endtime="20170731 10:58:18.455" starttime="20170731 10:58:18.453"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts</arg>
</arguments>
<msg timestamp="20170731 10:58:18.455" level="INFO">Executing : Table Must Exist  |  hosts </msg>
<msg timestamp="20170731 10:58:18.455" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='hosts' </msg>
<status status="PASS" endtime="20170731 10:58:18.463" starttime="20170731 10:58:18.455"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts_history</arg>
</arguments>
<msg timestamp="20170731 10:58:18.463" level="INFO">Executing : Table Must Exist  |  hosts_history </msg>
<msg timestamp="20170731 10:58:18.463" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='hosts_history' </msg>
<status status="PASS" endtime="20170731 10:58:18.467" starttime="20170731 10:58:18.463"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships</arg>
</arguments>
<msg timestamp="20170731 10:58:18.467" level="INFO">Executing : Table Must Exist  |  memberships </msg>
<msg timestamp="20170731 10:58:18.467" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='memberships' </msg>
<status status="PASS" endtime="20170731 10:58:18.469" starttime="20170731 10:58:18.467"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships_history</arg>
</arguments>
<msg timestamp="20170731 10:58:18.469" level="INFO">Executing : Table Must Exist  |  memberships_history </msg>
<msg timestamp="20170731 10:58:18.469" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='memberships_history' </msg>
<status status="PASS" endtime="20170731 10:58:18.471" starttime="20170731 10:58:18.469"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>oses</arg>
</arguments>
<msg timestamp="20170731 10:58:18.471" level="INFO">Executing : Table Must Exist  |  oses </msg>
<msg timestamp="20170731 10:58:18.471" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='oses' </msg>
<status status="PASS" endtime="20170731 10:58:18.473" starttime="20170731 10:58:18.471"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>packageTypes</arg>
</arguments>
<msg timestamp="20170731 10:58:18.474" level="INFO">Executing : Table Must Exist  |  packageTypes </msg>
<msg timestamp="20170731 10:58:18.474" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='packageTypes' </msg>
<status status="PASS" endtime="20170731 10:58:18.476" starttime="20170731 10:58:18.473"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions</arg>
</arguments>
<msg timestamp="20170731 10:58:18.476" level="INFO">Executing : Table Must Exist  |  sessions </msg>
<msg timestamp="20170731 10:58:18.477" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sessions' </msg>
<status status="PASS" endtime="20170731 10:58:18.478" starttime="20170731 10:58:18.476"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions_history</arg>
</arguments>
<msg timestamp="20170731 10:58:18.479" level="INFO">Executing : Table Must Exist  |  sessions_history </msg>
<msg timestamp="20170731 10:58:18.479" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sessions_history' </msg>
<status status="PASS" endtime="20170731 10:58:18.483" starttime="20170731 10:58:18.478"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes</arg>
</arguments>
<msg timestamp="20170731 10:58:18.484" level="INFO">Executing : Table Must Exist  |  sharedAppTypes </msg>
<msg timestamp="20170731 10:58:18.484" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedAppTypes' </msg>
<status status="PASS" endtime="20170731 10:58:18.486" starttime="20170731 10:58:18.483"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes_history</arg>
</arguments>
<msg timestamp="20170731 10:58:18.486" level="INFO">Executing : Table Must Exist  |  sharedAppTypes_history </msg>
<msg timestamp="20170731 10:58:18.487" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedAppTypes_history' </msg>
<status status="PASS" endtime="20170731 10:58:18.488" starttime="20170731 10:58:18.486"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes</arg>
</arguments>
<msg timestamp="20170731 10:58:18.489" level="INFO">Executing : Table Must Exist  |  sharedPackageTypes </msg>
<msg timestamp="20170731 10:58:18.489" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedPackageTypes' </msg>
<status status="PASS" endtime="20170731 10:58:18.490" starttime="20170731 10:58:18.489"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes_history</arg>
</arguments>
<msg timestamp="20170731 10:58:18.491" level="INFO">Executing : Table Must Exist  |  sharedPackageTypes_history </msg>
<msg timestamp="20170731 10:58:18.491" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedPackageTypes_history' </msg>
<status status="PASS" endtime="20170731 10:58:18.494" starttime="20170731 10:58:18.491"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>statuses</arg>
</arguments>
<msg timestamp="20170731 10:58:18.494" level="INFO">Executing : Table Must Exist  |  statuses </msg>
<msg timestamp="20170731 10:58:18.494" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='statuses' </msg>
<status status="PASS" endtime="20170731 10:58:18.496" starttime="20170731 10:58:18.494"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks</arg>
</arguments>
<msg timestamp="20170731 10:58:18.497" level="INFO">Executing : Table Must Exist  |  tasks </msg>
<msg timestamp="20170731 10:58:18.497" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='tasks' </msg>
<status status="PASS" endtime="20170731 10:58:18.500" starttime="20170731 10:58:18.497"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks_history</arg>
</arguments>
<msg timestamp="20170731 10:58:18.501" level="INFO">Executing : Table Must Exist  |  tasks_history </msg>
<msg timestamp="20170731 10:58:18.501" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='tasks_history' </msg>
<status status="PASS" endtime="20170731 10:58:18.503" starttime="20170731 10:58:18.500"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces</arg>
</arguments>
<msg timestamp="20170731 10:58:18.504" level="INFO">Executing : Table Must Exist  |  traces </msg>
<msg timestamp="20170731 10:58:18.504" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='traces' </msg>
<status status="PASS" endtime="20170731 10:58:18.506" starttime="20170731 10:58:18.503"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces_history</arg>
</arguments>
<msg timestamp="20170731 10:58:18.506" level="INFO">Executing : Table Must Exist  |  traces_history </msg>
<msg timestamp="20170731 10:58:18.506" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='traces_history' </msg>
<status status="PASS" endtime="20170731 10:58:18.509" starttime="20170731 10:58:18.506"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>userRights</arg>
</arguments>
<msg timestamp="20170731 10:58:18.510" level="INFO">Executing : Table Must Exist  |  userRights </msg>
<msg timestamp="20170731 10:58:18.510" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='userRights' </msg>
<status status="PASS" endtime="20170731 10:58:18.513" starttime="20170731 10:58:18.510"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups</arg>
</arguments>
<msg timestamp="20170731 10:58:18.513" level="INFO">Executing : Table Must Exist  |  usergroups </msg>
<msg timestamp="20170731 10:58:18.513" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='usergroups' </msg>
<status status="PASS" endtime="20170731 10:58:18.515" starttime="20170731 10:58:18.513"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups_history</arg>
</arguments>
<msg timestamp="20170731 10:58:18.515" level="INFO">Executing : Table Must Exist  |  usergroups_history </msg>
<msg timestamp="20170731 10:58:18.515" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='usergroups_history' </msg>
<status status="PASS" endtime="20170731 10:58:18.517" starttime="20170731 10:58:18.515"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users</arg>
</arguments>
<msg timestamp="20170731 10:58:18.517" level="INFO">Executing : Table Must Exist  |  users </msg>
<msg timestamp="20170731 10:58:18.517" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='users' </msg>
<status status="PASS" endtime="20170731 10:58:18.520" starttime="20170731 10:58:18.517"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users_history</arg>
</arguments>
<msg timestamp="20170731 10:58:18.520" level="INFO">Executing : Table Must Exist  |  users_history </msg>
<msg timestamp="20170731 10:58:18.520" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='users_history' </msg>
<status status="PASS" endtime="20170731 10:58:18.523" starttime="20170731 10:58:18.520"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>version</arg>
</arguments>
<msg timestamp="20170731 10:58:18.523" level="INFO">Executing : Table Must Exist  |  version </msg>
<msg timestamp="20170731 10:58:18.523" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='version' </msg>
<status status="PASS" endtime="20170731 10:58:18.525" starttime="20170731 10:58:18.523"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>versions</arg>
</arguments>
<msg timestamp="20170731 10:58:18.526" level="INFO">Executing : Table Must Exist  |  versions </msg>
<msg timestamp="20170731 10:58:18.526" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='versions' </msg>
<status status="PASS" endtime="20170731 10:58:18.528" starttime="20170731 10:58:18.526"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps</arg>
</arguments>
<msg timestamp="20170731 10:58:18.528" level="INFO">Executing : Table Must Exist  |  view_apps </msg>
<msg timestamp="20170731 10:58:18.528" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps' </msg>
<status status="PASS" endtime="20170731 10:58:18.531" starttime="20170731 10:58:18.528"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps_for_offering</arg>
</arguments>
<msg timestamp="20170731 10:58:18.531" level="INFO">Executing : Table Must Exist  |  view_apps_for_offering </msg>
<msg timestamp="20170731 10:58:18.531" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps_for_offering' </msg>
<status status="PASS" endtime="20170731 10:58:18.533" starttime="20170731 10:58:18.531"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps_for_offering_with_file_sizes</arg>
</arguments>
<msg timestamp="20170731 10:58:18.533" level="INFO">Executing : Table Must Exist  |  view_apps_for_offering_with_file_sizes </msg>
<msg timestamp="20170731 10:58:18.533" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps_for_offering_with_file_sizes' </msg>
<status status="PASS" endtime="20170731 10:58:18.538" starttime="20170731 10:58:18.533"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_datas</arg>
</arguments>
<msg timestamp="20170731 10:58:18.538" level="INFO">Executing : Table Must Exist  |  view_datas </msg>
<msg timestamp="20170731 10:58:18.538" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_datas' </msg>
<status status="PASS" endtime="20170731 10:58:18.540" starttime="20170731 10:58:18.538"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_executables</arg>
</arguments>
<msg timestamp="20170731 10:58:18.540" level="INFO">Executing : Table Must Exist  |  view_executables </msg>
<msg timestamp="20170731 10:58:18.540" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_executables' </msg>
<status status="PASS" endtime="20170731 10:58:18.542" starttime="20170731 10:58:18.540"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_groups</arg>
</arguments>
<msg timestamp="20170731 10:58:18.542" level="INFO">Executing : Table Must Exist  |  view_groups </msg>
<msg timestamp="20170731 10:58:18.542" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_groups' </msg>
<status status="PASS" endtime="20170731 10:58:18.545" starttime="20170731 10:58:18.542"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts</arg>
</arguments>
<msg timestamp="20170731 10:58:18.545" level="INFO">Executing : Table Must Exist  |  view_hosts </msg>
<msg timestamp="20170731 10:58:18.545" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts' </msg>
<status status="PASS" endtime="20170731 10:58:18.547" starttime="20170731 10:58:18.545"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_deployable</arg>
</arguments>
<msg timestamp="20170731 10:58:18.547" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_deployable </msg>
<msg timestamp="20170731 10:58:18.547" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_deployable' </msg>
<status status="PASS" endtime="20170731 10:58:18.551" starttime="20170731 10:58:18.547"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_deployable_and_shared</arg>
</arguments>
<msg timestamp="20170731 10:58:18.551" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_deployable_and_shared </msg>
<msg timestamp="20170731 10:58:18.551" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_deployable_and_shared' </msg>
<status status="PASS" endtime="20170731 10:58:18.554" starttime="20170731 10:58:18.551"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_shared</arg>
</arguments>
<msg timestamp="20170731 10:58:18.555" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_shared </msg>
<msg timestamp="20170731 10:58:18.555" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_shared' </msg>
<status status="PASS" endtime="20170731 10:58:18.557" starttime="20170731 10:58:18.555"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_sessions</arg>
</arguments>
<msg timestamp="20170731 10:58:18.557" level="INFO">Executing : Table Must Exist  |  view_sessions </msg>
<msg timestamp="20170731 10:58:18.557" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_sessions' </msg>
<status status="PASS" endtime="20170731 10:58:18.559" starttime="20170731 10:58:18.557"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_sharedapptypes</arg>
</arguments>
<msg timestamp="20170731 10:58:18.559" level="INFO">Executing : Table Must Exist  |  view_sharedapptypes </msg>
<msg timestamp="20170731 10:58:18.559" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_sharedapptypes' </msg>
<status status="PASS" endtime="20170731 10:58:18.561" starttime="20170731 10:58:18.559"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_sharedpackagetypes</arg>
</arguments>
<msg timestamp="20170731 10:58:18.561" level="INFO">Executing : Table Must Exist  |  view_sharedpackagetypes </msg>
<msg timestamp="20170731 10:58:18.561" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_sharedpackagetypes' </msg>
<status status="PASS" endtime="20170731 10:58:18.564" starttime="20170731 10:58:18.561"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_tasks</arg>
</arguments>
<msg timestamp="20170731 10:58:18.565" level="INFO">Executing : Table Must Exist  |  view_tasks </msg>
<msg timestamp="20170731 10:58:18.565" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_tasks' </msg>
<status status="PASS" endtime="20170731 10:58:18.566" starttime="20170731 10:58:18.564"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_traces</arg>
</arguments>
<msg timestamp="20170731 10:58:18.567" level="INFO">Executing : Table Must Exist  |  view_traces </msg>
<msg timestamp="20170731 10:58:18.567" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_traces' </msg>
<status status="PASS" endtime="20170731 10:58:18.568" starttime="20170731 10:58:18.567"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_usergroups</arg>
</arguments>
<msg timestamp="20170731 10:58:18.569" level="INFO">Executing : Table Must Exist  |  view_usergroups </msg>
<msg timestamp="20170731 10:58:18.569" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_usergroups' </msg>
<status status="PASS" endtime="20170731 10:58:18.570" starttime="20170731 10:58:18.568"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users</arg>
</arguments>
<msg timestamp="20170731 10:58:18.570" level="INFO">Executing : Table Must Exist  |  view_users </msg>
<msg timestamp="20170731 10:58:18.571" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users' </msg>
<status status="PASS" endtime="20170731 10:58:18.572" starttime="20170731 10:58:18.570"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_apps</arg>
</arguments>
<msg timestamp="20170731 10:58:18.572" level="INFO">Executing : Table Must Exist  |  view_users_apps </msg>
<msg timestamp="20170731 10:58:18.572" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_apps' </msg>
<status status="PASS" endtime="20170731 10:58:18.574" starttime="20170731 10:58:18.572"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_datas</arg>
</arguments>
<msg timestamp="20170731 10:58:18.574" level="INFO">Executing : Table Must Exist  |  view_users_datas </msg>
<msg timestamp="20170731 10:58:18.574" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_datas' </msg>
<status status="PASS" endtime="20170731 10:58:18.576" starttime="20170731 10:58:18.574"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_groups</arg>
</arguments>
<msg timestamp="20170731 10:58:18.577" level="INFO">Executing : Table Must Exist  |  view_users_groups </msg>
<msg timestamp="20170731 10:58:18.577" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_groups' </msg>
<status status="PASS" endtime="20170731 10:58:18.578" starttime="20170731 10:58:18.577"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_hosts</arg>
</arguments>
<msg timestamp="20170731 10:58:18.579" level="INFO">Executing : Table Must Exist  |  view_users_hosts </msg>
<msg timestamp="20170731 10:58:18.579" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_hosts' </msg>
<status status="PASS" endtime="20170731 10:58:18.581" starttime="20170731 10:58:18.579"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_sessions</arg>
</arguments>
<msg timestamp="20170731 10:58:18.581" level="INFO">Executing : Table Must Exist  |  view_users_sessions </msg>
<msg timestamp="20170731 10:58:18.581" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_sessions' </msg>
<status status="PASS" endtime="20170731 10:58:18.583" starttime="20170731 10:58:18.581"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_tasks</arg>
</arguments>
<msg timestamp="20170731 10:58:18.583" level="INFO">Executing : Table Must Exist  |  view_users_tasks </msg>
<msg timestamp="20170731 10:58:18.583" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_tasks' </msg>
<status status="PASS" endtime="20170731 10:58:18.585" starttime="20170731 10:58:18.583"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_traces</arg>
</arguments>
<msg timestamp="20170731 10:58:18.585" level="INFO">Executing : Table Must Exist  |  view_users_traces </msg>
<msg timestamp="20170731 10:58:18.585" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_traces' </msg>
<status status="PASS" endtime="20170731 10:58:18.587" starttime="20170731 10:58:18.585"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_usergroups</arg>
</arguments>
<msg timestamp="20170731 10:58:18.587" level="INFO">Executing : Table Must Exist  |  view_users_usergroups </msg>
<msg timestamp="20170731 10:58:18.587" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_usergroups' </msg>
<status status="PASS" endtime="20170731 10:58:18.589" starttime="20170731 10:58:18.587"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_users</arg>
</arguments>
<msg timestamp="20170731 10:58:18.589" level="INFO">Executing : Table Must Exist  |  view_users_users </msg>
<msg timestamp="20170731 10:58:18.589" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_users' </msg>
<status status="PASS" endtime="20170731 10:58:18.591" starttime="20170731 10:58:18.589"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_works</arg>
</arguments>
<msg timestamp="20170731 10:58:18.591" level="INFO">Executing : Table Must Exist  |  view_users_works </msg>
<msg timestamp="20170731 10:58:18.592" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_works' </msg>
<status status="PASS" endtime="20170731 10:58:18.594" starttime="20170731 10:58:18.591"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works</arg>
</arguments>
<msg timestamp="20170731 10:58:18.594" level="INFO">Executing : Table Must Exist  |  view_works </msg>
<msg timestamp="20170731 10:58:18.594" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works' </msg>
<status status="PASS" endtime="20170731 10:58:18.596" starttime="20170731 10:58:18.594"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works_for_billing</arg>
</arguments>
<msg timestamp="20170731 10:58:18.597" level="INFO">Executing : Table Must Exist  |  view_works_for_billing </msg>
<msg timestamp="20170731 10:58:18.597" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works_for_billing' </msg>
<status status="PASS" endtime="20170731 10:58:18.600" starttime="20170731 10:58:18.596"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works_for_billing_with_file_sizes</arg>
</arguments>
<msg timestamp="20170731 10:58:18.600" level="INFO">Executing : Table Must Exist  |  view_works_for_billing_with_file_sizes </msg>
<msg timestamp="20170731 10:58:18.600" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works_for_billing_with_file_sizes' </msg>
<status status="PASS" endtime="20170731 10:58:18.602" starttime="20170731 10:58:18.600"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works</arg>
</arguments>
<msg timestamp="20170731 10:58:18.603" level="INFO">Executing : Table Must Exist  |  works </msg>
<msg timestamp="20170731 10:58:18.603" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='works' </msg>
<status status="PASS" endtime="20170731 10:58:18.604" starttime="20170731 10:58:18.602"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works_history</arg>
</arguments>
<msg timestamp="20170731 10:58:18.604" level="INFO">Executing : Table Must Exist  |  works_history </msg>
<msg timestamp="20170731 10:58:18.604" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='works_history' </msg>
<status status="PASS" endtime="20170731 10:58:18.607" starttime="20170731 10:58:18.604"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170731 10:58:18.607" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170731 10:58:18.608" starttime="20170731 10:58:18.607"></status>
</kw>
<status status="PASS" endtime="20170731 10:58:18.608" starttime="20170731 10:58:18.607"></status>
</kw>
<status status="PASS" endtime="20170731 10:58:18.608" starttime="20170731 10:58:18.054"></status>
</kw>
<status status="PASS" endtime="20170731 10:58:18.608" starttime="20170731 10:58:18.054"></status>
</kw>
<kw name="Clear XWtremWeb Database" library="XWServer">
<kw name="Delete All Xtremweb Tables" library="MySql">
<kw name="Delete Fonctionnal Xtremweb Tables" library="MySql">
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170731 10:58:18.610" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170731 10:58:18.612" starttime="20170731 10:58:18.609"></status>
</kw>
<status status="PASS" endtime="20170731 10:58:18.612" starttime="20170731 10:58:18.609"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps</arg>
</arguments>
<msg timestamp="20170731 10:58:18.612" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM apps; </msg>
<status status="PASS" endtime="20170731 10:58:18.628" starttime="20170731 10:58:18.612"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps_history</arg>
</arguments>
<msg timestamp="20170731 10:58:18.628" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM apps_history; </msg>
<status status="PASS" endtime="20170731 10:58:18.631" starttime="20170731 10:58:18.628"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas</arg>
</arguments>
<msg timestamp="20170731 10:58:18.632" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM datas; </msg>
<status status="PASS" endtime="20170731 10:58:18.633" starttime="20170731 10:58:18.631"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas_history</arg>
</arguments>
<msg timestamp="20170731 10:58:18.633" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM datas_history; </msg>
<status status="PASS" endtime="20170731 10:58:18.635" starttime="20170731 10:58:18.633"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables</arg>
</arguments>
<msg timestamp="20170731 10:58:18.635" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM executables; </msg>
<status status="PASS" endtime="20170731 10:58:18.636" starttime="20170731 10:58:18.635"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables_history</arg>
</arguments>
<msg timestamp="20170731 10:58:18.636" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM executables_history; </msg>
<status status="PASS" endtime="20170731 10:58:18.637" starttime="20170731 10:58:18.636"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups</arg>
</arguments>
<msg timestamp="20170731 10:58:18.637" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM groups; </msg>
<status status="PASS" endtime="20170731 10:58:18.638" starttime="20170731 10:58:18.637"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups_history</arg>
</arguments>
<msg timestamp="20170731 10:58:18.638" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM groups_history; </msg>
<status status="PASS" endtime="20170731 10:58:18.639" starttime="20170731 10:58:18.638"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts</arg>
</arguments>
<msg timestamp="20170731 10:58:18.639" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM hosts; </msg>
<status status="PASS" endtime="20170731 10:58:18.641" starttime="20170731 10:58:18.639"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts_history</arg>
</arguments>
<msg timestamp="20170731 10:58:18.641" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM hosts_history; </msg>
<status status="PASS" endtime="20170731 10:58:18.643" starttime="20170731 10:58:18.641"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships</arg>
</arguments>
<msg timestamp="20170731 10:58:18.643" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM memberships; </msg>
<status status="PASS" endtime="20170731 10:58:18.644" starttime="20170731 10:58:18.643"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships_history</arg>
</arguments>
<msg timestamp="20170731 10:58:18.644" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM memberships_history; </msg>
<status status="PASS" endtime="20170731 10:58:18.647" starttime="20170731 10:58:18.644"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions</arg>
</arguments>
<msg timestamp="20170731 10:58:18.647" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sessions; </msg>
<status status="PASS" endtime="20170731 10:58:18.648" starttime="20170731 10:58:18.647"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions_history</arg>
</arguments>
<msg timestamp="20170731 10:58:18.648" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sessions_history; </msg>
<status status="PASS" endtime="20170731 10:58:18.649" starttime="20170731 10:58:18.648"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes</arg>
</arguments>
<msg timestamp="20170731 10:58:18.649" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedAppTypes; </msg>
<status status="PASS" endtime="20170731 10:58:18.650" starttime="20170731 10:58:18.649"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes_history</arg>
</arguments>
<msg timestamp="20170731 10:58:18.650" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedAppTypes_history; </msg>
<status status="PASS" endtime="20170731 10:58:18.651" starttime="20170731 10:58:18.650"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes</arg>
</arguments>
<msg timestamp="20170731 10:58:18.651" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedPackageTypes; </msg>
<status status="PASS" endtime="20170731 10:58:18.652" starttime="20170731 10:58:18.651"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes_history</arg>
</arguments>
<msg timestamp="20170731 10:58:18.652" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedPackageTypes_history; </msg>
<status status="PASS" endtime="20170731 10:58:18.653" starttime="20170731 10:58:18.652"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks</arg>
</arguments>
<msg timestamp="20170731 10:58:18.653" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM tasks; </msg>
<status status="PASS" endtime="20170731 10:58:18.655" starttime="20170731 10:58:18.653"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks_history</arg>
</arguments>
<msg timestamp="20170731 10:58:18.656" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM tasks_history; </msg>
<status status="PASS" endtime="20170731 10:58:18.657" starttime="20170731 10:58:18.656"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces</arg>
</arguments>
<msg timestamp="20170731 10:58:18.657" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM traces; </msg>
<status status="PASS" endtime="20170731 10:58:18.658" starttime="20170731 10:58:18.657"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces_history</arg>
</arguments>
<msg timestamp="20170731 10:58:18.658" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM traces_history; </msg>
<status status="PASS" endtime="20170731 10:58:18.659" starttime="20170731 10:58:18.658"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups</arg>
</arguments>
<msg timestamp="20170731 10:58:18.659" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM usergroups; </msg>
<status status="PASS" endtime="20170731 10:58:18.660" starttime="20170731 10:58:18.659"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups_history</arg>
</arguments>
<msg timestamp="20170731 10:58:18.660" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM usergroups_history; </msg>
<status status="PASS" endtime="20170731 10:58:18.662" starttime="20170731 10:58:18.660"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users_history</arg>
</arguments>
<msg timestamp="20170731 10:58:18.663" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM users_history; </msg>
<status status="PASS" endtime="20170731 10:58:18.665" starttime="20170731 10:58:18.663"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works</arg>
</arguments>
<msg timestamp="20170731 10:58:18.666" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM works; </msg>
<status status="PASS" endtime="20170731 10:58:18.668" starttime="20170731 10:58:18.666"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works_history</arg>
</arguments>
<msg timestamp="20170731 10:58:18.669" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM works_history; </msg>
<status status="PASS" endtime="20170731 10:58:18.670" starttime="20170731 10:58:18.668"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170731 10:58:18.671" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170731 10:58:18.671" starttime="20170731 10:58:18.670"></status>
</kw>
<status status="PASS" endtime="20170731 10:58:18.671" starttime="20170731 10:58:18.670"></status>
</kw>
<status status="PASS" endtime="20170731 10:58:18.671" starttime="20170731 10:58:18.609"></status>
</kw>
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170731 10:58:18.672" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170731 10:58:18.675" starttime="20170731 10:58:18.671"></status>
</kw>
<status status="PASS" endtime="20170731 10:58:18.676" starttime="20170731 10:58:18.671"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>appTypes</arg>
</arguments>
<msg timestamp="20170731 10:58:18.676" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM appTypes; </msg>
<status status="PASS" endtime="20170731 10:58:18.686" starttime="20170731 10:58:18.676"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>cpuTypes</arg>
</arguments>
<msg timestamp="20170731 10:58:18.687" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM cpuTypes; </msg>
<status status="PASS" endtime="20170731 10:58:18.690" starttime="20170731 10:58:18.686"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>dataTypes</arg>
</arguments>
<msg timestamp="20170731 10:58:18.691" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM dataTypes; </msg>
<status status="PASS" endtime="20170731 10:58:18.693" starttime="20170731 10:58:18.690"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>oses</arg>
</arguments>
<msg timestamp="20170731 10:58:18.694" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM oses; </msg>
<status status="PASS" endtime="20170731 10:58:18.696" starttime="20170731 10:58:18.694"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>packageTypes</arg>
</arguments>
<msg timestamp="20170731 10:58:18.697" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM packageTypes; </msg>
<status status="PASS" endtime="20170731 10:58:18.700" starttime="20170731 10:58:18.696"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>statuses</arg>
</arguments>
<msg timestamp="20170731 10:58:18.701" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM statuses; </msg>
<status status="PASS" endtime="20170731 10:58:18.704" starttime="20170731 10:58:18.701"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>userRights</arg>
</arguments>
<msg timestamp="20170731 10:58:18.705" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM userRights; </msg>
<status status="PASS" endtime="20170731 10:58:18.709" starttime="20170731 10:58:18.704"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users</arg>
</arguments>
<msg timestamp="20170731 10:58:18.709" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM users; </msg>
<status status="PASS" endtime="20170731 10:58:18.711" starttime="20170731 10:58:18.709"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>version</arg>
</arguments>
<msg timestamp="20170731 10:58:18.711" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM version; </msg>
<status status="PASS" endtime="20170731 10:58:18.714" starttime="20170731 10:58:18.711"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>versions</arg>
</arguments>
<msg timestamp="20170731 10:58:18.714" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM versions; </msg>
<status status="PASS" endtime="20170731 10:58:18.716" starttime="20170731 10:58:18.714"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170731 10:58:18.717" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170731 10:58:18.717" starttime="20170731 10:58:18.717"></status>
</kw>
<status status="PASS" endtime="20170731 10:58:18.717" starttime="20170731 10:58:18.716"></status>
</kw>
<status status="PASS" endtime="20170731 10:58:18.718" starttime="20170731 10:58:18.609"></status>
</kw>
<status status="PASS" endtime="20170731 10:58:18.718" starttime="20170731 10:58:18.608"></status>
</kw>
<kw name="Install XWtremWeb" library="XWCommon">
<kw name="List Directories In Directory" library="OperatingSystem">
<doc>Wrapper for `List Directory` that returns only directories.</doc>
<arguments>
<arg>${DIST_PATH}</arg>
<arg>xwhep-*</arg>
<arg>absolute</arg>
</arguments>
<assign>
<var>@{list_directories_dist_path}</var>
</assign>
<msg timestamp="20170731 10:58:18.719" html="yes" level="INFO">Listing contents of directory '&lt;a href="file:///Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist"&gt;/Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist&lt;/a&gt;'.</msg>
<msg timestamp="20170731 10:58:18.719" level="INFO">1 directory:
/Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2</msg>
<msg timestamp="20170731 10:58:18.719" level="INFO">@{list_directories_dist_path} = [ /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2 ]</msg>
<status status="PASS" endtime="20170731 10:58:18.719" starttime="20170731 10:58:18.718"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>@{list_directories_dist_path}[0]</arg>
</arguments>
<msg timestamp="20170731 10:58:18.720" level="INFO">/Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2</msg>
<status status="PASS" endtime="20170731 10:58:18.720" starttime="20170731 10:58:18.720"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}</arg>
<arg>@{list_directories_dist_path}[0]</arg>
</arguments>
<msg timestamp="20170731 10:58:18.721" level="INFO">${DIST_XWHEP_PATH} = /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2</msg>
<status status="PASS" endtime="20170731 10:58:18.721" starttime="20170731 10:58:18.720"></status>
</kw>
<kw name="Directory Should Exist" library="OperatingSystem">
<doc>Fails unless the given path points to an existing directory.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}</arg>
</arguments>
<msg timestamp="20170731 10:58:18.721" html="yes" level="INFO">Directory '&lt;a href="file:///Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2"&gt;/Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2&lt;/a&gt;' exists.</msg>
<status status="PASS" endtime="20170731 10:58:18.721" starttime="20170731 10:58:18.721"></status>
</kw>
<kw name="Create XWCONFIGURE.VALUES FILE" library="XWCommon">
<arguments>
<arg>${DIST_XWHEP_PATH}</arg>
</arguments>
<kw name="Directory Should Exist" library="OperatingSystem">
<doc>Fails unless the given path points to an existing directory.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf</arg>
</arguments>
<msg timestamp="20170731 10:58:18.722" html="yes" level="INFO">Directory '&lt;a href="file:///Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/conf"&gt;/Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/conf&lt;/a&gt;' exists.</msg>
<status status="PASS" endtime="20170731 10:58:18.722" starttime="20170731 10:58:18.722"></status>
</kw>
<kw name="Remove File" library="OperatingSystem">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
</arguments>
<msg timestamp="20170731 10:58:18.724" html="yes" level="INFO">Removed file '&lt;a href="file:///Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/conf/xwconfigure.values"&gt;/Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170731 10:58:18.724" starttime="20170731 10:58:18.722"></status>
</kw>
<kw name="Create File" library="OperatingSystem">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
</arguments>
<msg timestamp="20170731 10:58:18.725" html="yes" level="INFO">Created file '&lt;a href="file:///Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/conf/xwconfigure.values"&gt;/Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170731 10:58:18.725" starttime="20170731 10:58:18.724"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>XWUSER='${XWCONFIGURE.VALUES.XWUSER}'\n</arg>
</arguments>
<msg timestamp="20170731 10:58:18.726" html="yes" level="INFO">Appended to file '&lt;a href="file:///Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/conf/xwconfigure.values"&gt;/Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170731 10:58:18.726" starttime="20170731 10:58:18.725"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>DBVENDOR='${XWCONFIGURE.VALUES.DBVENDOR}'\n</arg>
</arguments>
<msg timestamp="20170731 10:58:18.727" html="yes" level="INFO">Appended to file '&lt;a href="file:///Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/conf/xwconfigure.values"&gt;/Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170731 10:58:18.727" starttime="20170731 10:58:18.726"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>DBENGINE='${XWCONFIGURE.VALUES.DBENGINE}'\n</arg>
</arguments>
<msg timestamp="20170731 10:58:18.727" html="yes" level="INFO">Appended to file '&lt;a href="file:///Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/conf/xwconfigure.values"&gt;/Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170731 10:58:18.728" starttime="20170731 10:58:18.727"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>DBHOST='${XWCONFIGURE.VALUES.DBHOST}'\n</arg>
</arguments>
<msg timestamp="20170731 10:58:18.728" html="yes" level="INFO">Appended to file '&lt;a href="file:///Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/conf/xwconfigure.values"&gt;/Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170731 10:58:18.728" starttime="20170731 10:58:18.728"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>DBADMINLOGIN='${XWCONFIGURE.VALUES.DBADMINLOGIN}'\n</arg>
</arguments>
<msg timestamp="20170731 10:58:18.729" html="yes" level="INFO">Appended to file '&lt;a href="file:///Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/conf/xwconfigure.values"&gt;/Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170731 10:58:18.729" starttime="20170731 10:58:18.728"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>DBADMINPASSWORD='${XWCONFIGURE.VALUES.DBADMINPASSWORD}'\n</arg>
</arguments>
<msg timestamp="20170731 10:58:18.729" html="yes" level="INFO">Appended to file '&lt;a href="file:///Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/conf/xwconfigure.values"&gt;/Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170731 10:58:18.729" starttime="20170731 10:58:18.729"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>DBNAME='${XWCONFIGURE.VALUES.DBNAME}'\n</arg>
</arguments>
<msg timestamp="20170731 10:58:18.730" html="yes" level="INFO">Appended to file '&lt;a href="file:///Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/conf/xwconfigure.values"&gt;/Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170731 10:58:18.730" starttime="20170731 10:58:18.730"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>DBUSERLOGIN='${XWCONFIGURE.VALUES.DBUSERLOGIN}'\n</arg>
</arguments>
<msg timestamp="20170731 10:58:18.731" html="yes" level="INFO">Appended to file '&lt;a href="file:///Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/conf/xwconfigure.values"&gt;/Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170731 10:58:18.731" starttime="20170731 10:58:18.730"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>DBUSERPASSWORD='${XWCONFIGURE.VALUES.DBUSERPASSWORD}'\n</arg>
</arguments>
<msg timestamp="20170731 10:58:18.731" html="yes" level="INFO">Appended to file '&lt;a href="file:///Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/conf/xwconfigure.values"&gt;/Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170731 10:58:18.731" starttime="20170731 10:58:18.731"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>XWADMINLOGIN='${XWCONFIGURE.VALUES.XWADMINLOGIN}'\n</arg>
</arguments>
<msg timestamp="20170731 10:58:18.732" html="yes" level="INFO">Appended to file '&lt;a href="file:///Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/conf/xwconfigure.values"&gt;/Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170731 10:58:18.732" starttime="20170731 10:58:18.732"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>XWADMINPASSWORD='${XWCONFIGURE.VALUES.XWADMINPASSWORD}'\n</arg>
</arguments>
<msg timestamp="20170731 10:58:18.733" html="yes" level="INFO">Appended to file '&lt;a href="file:///Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/conf/xwconfigure.values"&gt;/Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170731 10:58:18.733" starttime="20170731 10:58:18.732"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>XWWORKERLOGIN='${XWCONFIGURE.VALUES.XWWORKERLOGIN}'\n</arg>
</arguments>
<msg timestamp="20170731 10:58:18.733" html="yes" level="INFO">Appended to file '&lt;a href="file:///Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/conf/xwconfigure.values"&gt;/Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170731 10:58:18.733" starttime="20170731 10:58:18.733"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>XWWORKERPASSWORD='${XWCONFIGURE.VALUES.XWWORKERPASSWORD}'\n</arg>
</arguments>
<msg timestamp="20170731 10:58:18.734" html="yes" level="INFO">Appended to file '&lt;a href="file:///Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/conf/xwconfigure.values"&gt;/Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170731 10:58:18.734" starttime="20170731 10:58:18.734"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>XWSERVER='${XWCONFIGURE.VALUES.XWSERVER}'\n</arg>
</arguments>
<msg timestamp="20170731 10:58:18.735" html="yes" level="INFO">Appended to file '&lt;a href="file:///Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/conf/xwconfigure.values"&gt;/Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170731 10:58:18.735" starttime="20170731 10:58:18.735"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>CERTCN='${XWCONFIGURE.VALUES.CERTCN}'\n</arg>
</arguments>
<msg timestamp="20170731 10:58:18.736" html="yes" level="INFO">Appended to file '&lt;a href="file:///Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/conf/xwconfigure.values"&gt;/Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170731 10:58:18.736" starttime="20170731 10:58:18.735"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>CERTOU='${XWCONFIGURE.VALUES.CERTOU}'\n</arg>
</arguments>
<msg timestamp="20170731 10:58:18.736" html="yes" level="INFO">Appended to file '&lt;a href="file:///Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/conf/xwconfigure.values"&gt;/Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170731 10:58:18.736" starttime="20170731 10:58:18.736"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>CERTO='${XWCONFIGURE.VALUES.CERTO}'\n</arg>
</arguments>
<msg timestamp="20170731 10:58:18.737" html="yes" level="INFO">Appended to file '&lt;a href="file:///Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/conf/xwconfigure.values"&gt;/Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170731 10:58:18.737" starttime="20170731 10:58:18.737"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>CERTL='${XWCONFIGURE.VALUES.CERTL}'\n</arg>
</arguments>
<msg timestamp="20170731 10:58:18.738" html="yes" level="INFO">Appended to file '&lt;a href="file:///Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/conf/xwconfigure.values"&gt;/Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170731 10:58:18.738" starttime="20170731 10:58:18.737"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>CERTC='${XWCONFIGURE.VALUES.CERTC}'\n</arg>
</arguments>
<msg timestamp="20170731 10:58:18.738" html="yes" level="INFO">Appended to file '&lt;a href="file:///Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/conf/xwconfigure.values"&gt;/Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170731 10:58:18.738" starttime="20170731 10:58:18.738"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>CERTC='${XWCONFIGURE.VALUES.CERTC}'\n</arg>
</arguments>
<msg timestamp="20170731 10:58:18.739" html="yes" level="INFO">Appended to file '&lt;a href="file:///Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/conf/xwconfigure.values"&gt;/Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170731 10:58:18.739" starttime="20170731 10:58:18.739"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>SSLKEYPASSPHRASE='${XWCONFIGURE.VALUES.SSLKEYPASSPHRASE}'\n</arg>
</arguments>
<msg timestamp="20170731 10:58:18.740" html="yes" level="INFO">Appended to file '&lt;a href="file:///Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/conf/xwconfigure.values"&gt;/Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170731 10:58:18.740" starttime="20170731 10:58:18.739"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>SSLKEYSERVERPASSWORD='${XWCONFIGURE.VALUES.SSLKEYSERVERPASSWORD}'\n</arg>
</arguments>
<msg timestamp="20170731 10:58:18.740" html="yes" level="INFO">Appended to file '&lt;a href="file:///Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/conf/xwconfigure.values"&gt;/Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170731 10:58:18.740" starttime="20170731 10:58:18.740"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>SSLKEYWORKERPASSWORD='${XWCONFIGURE.VALUES.SSLKEYWORKERPASSWORD}'\n</arg>
</arguments>
<msg timestamp="20170731 10:58:18.741" html="yes" level="INFO">Appended to file '&lt;a href="file:///Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/conf/xwconfigure.values"&gt;/Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170731 10:58:18.741" starttime="20170731 10:58:18.741"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>SSLKEYCLIENTPASSWORD='${XWCONFIGURE.VALUES.SSLKEYCLIENTPASSWORD}'\n</arg>
</arguments>
<msg timestamp="20170731 10:58:18.742" html="yes" level="INFO">Appended to file '&lt;a href="file:///Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/conf/xwconfigure.values"&gt;/Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170731 10:58:18.742" starttime="20170731 10:58:18.741"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>X509CERTDIR='${XWCONFIGURE.VALUES.X509CERTDIR}'\n</arg>
</arguments>
<msg timestamp="20170731 10:58:18.742" html="yes" level="INFO">Appended to file '&lt;a href="file:///Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/conf/xwconfigure.values"&gt;/Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170731 10:58:18.742" starttime="20170731 10:58:18.742"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>USERCERTDIR='${XWCONFIGURE.VALUES.USERCERTDIR}'\n</arg>
</arguments>
<msg timestamp="20170731 10:58:18.743" html="yes" level="INFO">Appended to file '&lt;a href="file:///Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/conf/xwconfigure.values"&gt;/Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170731 10:58:18.743" starttime="20170731 10:58:18.743"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>XWUPGRADEURL='${XWCONFIGURE.VALUES.XWUPGRADEURL}'\n</arg>
</arguments>
<msg timestamp="20170731 10:58:18.744" html="yes" level="INFO">Appended to file '&lt;a href="file:///Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/conf/xwconfigure.values"&gt;/Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170731 10:58:18.744" starttime="20170731 10:58:18.743"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>HTTPSPORT='${XWCONFIGURE.VALUES.HTTPSPORT}'\n</arg>
</arguments>
<msg timestamp="20170731 10:58:18.744" html="yes" level="INFO">Appended to file '&lt;a href="file:///Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/conf/xwconfigure.values"&gt;/Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170731 10:58:18.745" starttime="20170731 10:58:18.744"></status>
</kw>
<kw name="Log File" library="OperatingSystem">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
</arguments>
<msg timestamp="20170731 10:58:18.745" html="yes" level="INFO">Getting file '&lt;a href="file:///Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/conf/xwconfigure.values"&gt;/Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<msg timestamp="20170731 10:58:18.746" level="INFO">XWUSER='root'
DBVENDOR='mysql'
DBENGINE='InnoDB'
DBHOST='localhost'
DBADMINLOGIN='root'
DBADMINPASSWORD='root'
DBNAME='xtremweb'
DBUSERLOGIN='xwuser'
DBUSERPASSWORD='xwuser'
XWADMINLOGIN='admin'
XWADMINPASSWORD='admin'
XWWORKERLOGIN='worker'
XWWORKERPASSWORD='worker'
XWSERVER='localhost'
CERTCN='localhost'
CERTOU='MrRobotFramework'
CERTO='MrRobotFramework'
CERTL='MrRobotFramework'
CERTC='fr'
CERTC='fr'
SSLKEYPASSPHRASE='MrRobotFramework'
SSLKEYSERVERPASSWORD='MrRobotFramework'
SSLKEYWORKERPASSWORD='MrRobotFramework'
SSLKEYCLIENTPASSWORD='MrRobotFramework'
X509CERTDIR='/tmp/castore'
USERCERTDIR=''
XWUPGRADEURL='http://localhost:8080/somewhere/xtremweb.jar'
HTTPSPORT='9443'
</msg>
<status status="PASS" endtime="20170731 10:58:18.746" starttime="20170731 10:58:18.745"></status>
</kw>
<status status="PASS" endtime="20170731 10:58:18.746" starttime="20170731 10:58:18.721"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd ${DIST_XWHEP_PATH} &amp;&amp; ./bin/xwconfigure --yes --nopkg --rmdb</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${install_result}</var>
</assign>
<msg timestamp="20170731 10:58:18.747" level="INFO">Starting process:
cd /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2 &amp;&amp; ./bin/xwconfigure --yes --nopkg --rmdb</msg>
<msg timestamp="20170731 10:58:18.752" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170731 10:58:35.622" level="INFO">Process completed.</msg>
<msg timestamp="20170731 10:58:35.623" level="INFO">${install_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170731 10:58:35.623" starttime="20170731 10:58:18.747"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${install_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170731 10:58:35.625" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170731 10:58:35.625" starttime="20170731 10:58:35.624"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${install_result.stdout}</arg>
</arguments>
<msg timestamp="20170731 10:58:35.626" level="INFO">
--------------------------------------------------
         XtremWeb-HEP 10.5.2 
         XWConfigurator

This script helps to configure an XtremWeb-HEP deployment 
--------------------------------------------------

This script aims to :
 - install a new database: Since 9.1. MySQL (http://www.mysql.com/) only is supported
 - creates electronic keys : 
   * server private key
   * client key store including server public key
   * worker key store including server public key
 - prepare installers
   * Win32 InnoSetup project (http://www.jrsoftware.org/isinfo.php)
   * Mac OS X Package Maker projects (http:/www.apple.com)
   * Linux RPM (http://www.rpm.org)
   * Linux Debian package (http://www.debian.org)

In order to complete configuration, several informations are needed :
 -1- MySQL administrator account (login and password)
     =&gt; If you don't know it, please ask your system administrator
 -1.1- Database server, if using MySQL
     =&gt; The name or IP address of your MySQL server
 -1.2- Database name
     =&gt; If you don't have a valid MySQL administrator account, you won't be able to perform this
     =&gt; In such a case, please ask your system administrator to create one new empty database for us
 -1.3- Database user (login and password), if using MySQL
     =&gt; This account must have insert/update/delete privileges to the previous database
     =&gt; This account will be used by the XW server to access database
     =&gt; If you don't have a valid MySQL administrator account, you won't be able to perform this
     =&gt; In such a case, please ask your system administrator to create one for you
 -2- Electronic key passphrase
     =&gt; This is free and up to you
 -3- Electronic key password for the server
     =&gt; This is free and up to you
 -4- Electronic key password for the worker
     =&gt; This is free and up to you
 -5- Electronic key password for the client
     =&gt; This is free and up to you

All informations are stored in /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/conf/xwconfigure.values
So that, you can stop this script when you want, and don't have to re-enter all informations

To reset any variable, edit or erase /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/conf/xwconfigure.values

You should be aware that /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/conf/xwconfigure.values stores some critical informations!!!

-----------------------------

DB vendor set to 'mysql'
DB engine set to 'InnoDB'
***********************
 Electronic keys found 
***********************
Upgrade URL is localhost : I guess this is for testing only...
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Can't download xtremweb.jar from 'http://localhost:8080/somewhere/xtremweb.jar'
You will have to ensure that xtremweb.jar can be downloaded from 'http://localhost:8080/somewhere/xtremweb.jar'
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

You entered :
**** Account to run the middleware : 
     USER                 = 'root'
**** Database configuration : 
     DBVENDOR             = 'mysql'
     DBENGINE             = 'InnoDB'
     DBHOST               = 'localhost'
     DBNAME               = 'xtremweb'
     DBADMINLOGIN         = 'root'
     DBADMINPASSWORD      = 'root'
     DBUSERLOGIN          = 'xwuser'
     DBUSERPASSWORD       = 'xwuser'
**** XtremWeb-HEP administrator client configuration : 
     XWADMINLOGIN         = 'admin'
     XWADMINPASSWORD      = 'admin'
**** XtremWeb-HEP public worker configuration : 
     XWWORKERLOGIN        = 'worker'
     XWWORKERPASSWORD     = 'worker'
**** XtremWeb-HEP server configuration : 
     XWSERVER             = 'localhost'
     XWUPGRADEURL         = 'http://localhost:8080/somewhere/xtremweb.jar'
**** CA certificates path : 
     X509CERTDIR          = '/tmp/castore'
**** Certificate configuration : 
     Keys found           = ''
     SSLKEYPASSPHRASE     = 'MrRobotFramework'
     SSLKEYCLIENTPASSWORD = 'MrRobotFramework'
     SSLKEYSERVERPASSWORD = 'MrRobotFramework'
     SSLKEYWORKERPASSWORD = 'MrRobotFramework'
     Common Name          = 'localhost'
     Organisation Unit    = 'MrRobotFramework'
     Organization Name    = 'MrRobotFramework'
     Locality Name        = 'MrRobotFramework'
     Country              = 'fr'

Database schema 'xtremweb' exists : DB reset forced
Resetting database schema 'xtremweb'
Preparing database script............Done
Preparing database schema 'xtremweb'
DB engine for 'xtremweb' is InnoDB :  Creating foreign keys for live tables ...
Creating DB triggers using xwhep-core-tables-create-triggers-for-data-coming-from-8.sql ...

Table "users"

Table "hosts"

Table "datas"

Table "works"

Table "tasks"

Table "apps"
Creating DB triggers using xwhep-core-tables-create-triggers-for-history-coming-from-8.sql ...

Table "users_history"

Table "hosts_history"

Table "datas_history"

Table "works_history"

Table "tasks_history"

Table "apps_history"
Create the SQL script for the creation of DB views in the current schema ...
Create the SQL script for the creation of DB users views in the current schema ...
Creating DB views using xwhep-core-tables-create-views-for-tables.sql ...
Creating DB views using xwhep-core-tables-create-users-views.sql ...
Creating DB views using xwhep-core-tables-create-views-for-sessions-and-groups.sql ...
Creating DB views using xwhep-core-tables-create-views-for-relationships.sql ...
Creating DB views using xwhep-core-tables-create-views-for-offering-and-billing.sql ...
Creating DB views using xwhep-core-tables-create-views-hosts-matching-works.sql ...
Granting access to DB schema 'xtremweb' ...
Database schema 'xtremweb' : checking compliance to '05.7.3'
Database schema 'xtremweb' : is compliant to 05.7.3
Database schema 'xtremweb' : checking compliance to '05.8.0'
Database schema 'xtremweb' : is compliant to 05.8.0
Database schema 'xtremweb' : checking compliance to '06.0.1'
Database schema 'xtremweb' : is compliant to 06.0.1
Database schema 'xtremweb' : checking compliance to '07.0.0'
Database schema 'xtremweb' : is compliant to 07.0.0
Database schema 'xtremweb' : checking compliance to '07.2.0'
Database schema 'xtremweb' : is compliant to 07.2.0
Database schema 'xtremweb' : checking compliance to '07.4.1'
Database schema 'xtremweb' : is compliant to 07.4.1
Database schema 'xtremweb' : checking compliance to '07.5.0'
Database schema 'xtremweb' : is compliant to 07.5.0
Database schema 'xtremweb' : checking compliance to '08.0.0'
Database schema 'xtremweb' : is compliant to 08.0.0
Database schema 'xtremweb' : checking compliance to '08.2.0'
Database schema 'xtremweb' : is compliant to 08.2.0
Database schema 'xtremweb' : checking compliance to '08.3.1'
Database schema 'xtremweb' : is compliant to 08.3.1
Database schema 'xtremweb' : checking compliance to '09.1.0'
Database schema 'xtremweb' : is compliant to 09.1.0
Database schema 'xtremweb' : checking compliance to '10.0.0'
Database schema 'xtremweb' : is compliant to 10.0.0
Database schema 'xtremweb' : checking compliance to '10.2.0'
Database schema 'xtremweb' : is compliant to 10.2.0
Set current version to '10.5.2'
Setting the account to run the middleware to 'root'..........................Done
Preparing server configuration file '/Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/conf/xtremweb.server.conf'................. Done
Preparing xtremweb.ganglia...Done
Generating script to manage keystores (/Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/bin/xwhepgenkeys)  Done
Generating script to manage OpenId server certificates (/Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/bin/xwhepupdateopenidcerts) Done
Preparing worker configuration file '/Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/conf/xtremweb.worker.conf'.... Done
Copying worker configuration file /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/conf/xtremweb.worker.conf to /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/installers/macosx/xwhep.worker/installer/PckRoot/private/etc/xwhep.worker/conf/xtremweb.worker.conf
Copying worker configuration file /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/conf/xtremweb.worker.conf to /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/installers/win32/xwhep.worker/innoSetup/worker/conf/xtremweb.worker.conf
Done
Preparing client configuration file '/Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/conf/xtremweb.client.conf'...Done
Copying client configuration file /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/conf/xtremweb.client.conf to /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/installers/win32/xwhep.client/innoSetup/client/conf/xtremweb.client.conf
****************************************************************************************
Done
*******************
Keystores unmodified
*******************

Preparing  client package to '/Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/installers/xwhep.client'.....Done
Copying client configuration file /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/installers/xwhep.client/10.5.2/conf/xtremweb.client.conf.template to /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/installers/macosx/xwhep.client/installer/PckRoot/Applications/xwhep.client/conf/xtremweb.client.conf
 Done

Preparing server RPM package to '/Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/installers/linux/rpm/xwhep.server'.... Done

Preparing server configuration RPM package to '/Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/installers/linux/rpm/xwhep.server.conf'.... Done

Preparing server Debian package
Server Debian package ready

Preparing server configuration Debian package
Server Configuration Debian package ready
Preparing DG to SG bridge RPM package to '/Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/installers/linux/rpm/xwhep.bridgedgsg'............ Done

Preparing bridgedgsg Debian package
Bridgedgsg Debian package ready
Preparing SG to DG bridge RPM package to '/Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/installers/linux/rpm/xwhep.bridgesgdg'........ Done

Preparing bridgesgdg Debian package
Bridgesgdg Debian package ready
Preparing client RPM package to '/Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/installers/linux/rpm/xwhep.client'.... Done

Preparing client Debian package
Client Debian package ready

Preparing worker RPM package to '/Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/installers/linux/rpm/xwhep.worker'.... Done

Preparing worker Debian package
Worker Debian package ready

&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;
! Everything is now prepared !
&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;

Available packages :
  * server
   - RedHat RPM  in /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/installers/linux/rpm/xwhep.server
   - Debian DPKG in /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/installers/linux/dpkg/xwhep.server
   - Apple  PKG  in /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/installers/macosx/xwhep.server

  * Desktop Grid to Service Grid bridge
   - RedHat RPM  in /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/installers/linux/rpm/xwhep.bridgedgsg
   - Debian DPKG in /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/installers/linux/dpkg/xwhep.bridgedgsg

  * Service Grid to Desktop Grid bridge
   - RedHat RPM  in /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/installers/linux/rpm/xwhep.bridgesgdg
   - Debian DPKG in /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/installers/linux/dpkg/xwhep.bridgesgdg

  * client
   - RedHat RPM  in /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/installers/linux/rpm/xwhep.client
   - Debian DPKG in /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/installers/linux/dpkg/xwhep.client
   - Apple  PKG  in /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/installers/macosx/xwhep.client
   - Windows installer  in /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/installers/win32/xwhep.client/innoSetup
                        (http://www.innosetup.com/isinfo.php)

  * worker
   - RedHat  RPM        in /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/installers/linux/rpm/xwhep.worker
   - Debian  DPKG       in /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/installers/linux/dpkg/xwhep.worker
   - Apple   PKG        in /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/installers/macosx/xwhep.worker
   - Windows installer  in /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/installers/win32/xwhep.worker/innoSetup
                        (http://www.innosetup.com/isinfo.php)

  * client
   - Zip file (platform independant)  in /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/installers/xwhep-client-10.5.2.zip


You can manually :
  * start the server
   - /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/bin/xwhep.server console
  * start a worker
   - /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/bin/xwhep.worker console
  * as soon as your server is started you can use the client
   - /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/bin/xwworkers : if you have started a worker, it is in the list
   - /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/bin/xwusers
   - /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/bin/xwapps
   - etc.

As soon as everything is ok you should :
  * install you server using its packages
  * deploy worker over your own volunteer PCs using its packages
  * install your worker packages on any of your web sites
    if you wish to enable anonymous volunteer power
  * install your client ZIP file on any of your web sites
    to allow registered users to use the platform

That's all folks
</msg>
<status status="PASS" endtime="20170731 10:58:35.626" starttime="20170731 10:58:35.625"></status>
</kw>
<kw name="Get Lines Containing String" library="String">
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<arguments>
<arg>${install_result.stdout}</arg>
<arg>That's all folks</arg>
</arguments>
<assign>
<var>${install_result_successful}</var>
</assign>
<msg timestamp="20170731 10:58:35.628" level="INFO">1 out of 268 lines matched</msg>
<msg timestamp="20170731 10:58:35.628" level="INFO">${install_result_successful} = That's all folks</msg>
<status status="PASS" endtime="20170731 10:58:35.628" starttime="20170731 10:58:35.627"></status>
</kw>
<kw name="Get Line Count" library="String">
<doc>Returns and logs the number of lines in the given string.</doc>
<arguments>
<arg>${install_result_successful}</arg>
</arguments>
<assign>
<var>${line_install_result_successful}</var>
</assign>
<msg timestamp="20170731 10:58:35.629" level="INFO">1 lines</msg>
<msg timestamp="20170731 10:58:35.629" level="INFO">${line_install_result_successful} = 1</msg>
<status status="PASS" endtime="20170731 10:58:35.629" starttime="20170731 10:58:35.628"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${line_install_result_successful}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20170731 10:58:35.630" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170731 10:58:35.630" starttime="20170731 10:58:35.629"></status>
</kw>
<status status="PASS" endtime="20170731 10:58:35.630" starttime="20170731 10:58:18.718"></status>
</kw>
<kw name="Start XtremWeb Server" library="XWServer">
<arguments>
<arg>${DIST_XWHEP_PATH}</arg>
</arguments>
<kw name="File Should Exist" library="OperatingSystem">
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xtremweb.server.conf</arg>
</arguments>
<msg timestamp="20170731 10:58:35.632" html="yes" level="INFO">File '&lt;a href="file:///Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/conf/xtremweb.server.conf"&gt;/Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/conf/xtremweb.server.conf&lt;/a&gt;' exists.</msg>
<status status="PASS" endtime="20170731 10:58:35.633" starttime="20170731 10:58:35.631"></status>
</kw>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xtremweb.server.conf</arg>
</arguments>
<assign>
<var>${config_content}</var>
</assign>
<msg timestamp="20170731 10:58:35.633" html="yes" level="INFO">Getting file '&lt;a href="file:///Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/conf/xtremweb.server.conf"&gt;/Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/conf/xtremweb.server.conf&lt;/a&gt;'.</msg>
<msg timestamp="20170731 10:58:35.634" level="INFO">${config_content} = #
# Copyrights     : CNRS
# Author         : Oleg Lodygensky
# Acknowledgment : XtremWeb-HEP is based on XtremWeb 1.8.0 by inria : http://www.xtremweb.net/
# Web            : http://www.xtremweb-hep.o...</msg>
<status status="PASS" endtime="20170731 10:58:35.634" starttime="20170731 10:58:35.633"></status>
</kw>
<kw name="Remove String Using Regexp" library="String">
<doc>Removes ``patterns`` from the given ``string``.</doc>
<arguments>
<arg>${config_content}</arg>
<arg>LAUNCHERURL=${XWCONFIGURE.VALUES.XWUPGRADEURL}</arg>
</arguments>
<assign>
<var>${config_content_filtered}</var>
</assign>
<msg timestamp="20170731 10:58:35.636" level="INFO">${config_content_filtered} = #
# Copyrights     : CNRS
# Author         : Oleg Lodygensky
# Acknowledgment : XtremWeb-HEP is based on XtremWeb 1.8.0 by inria : http://www.xtremweb.net/
# Web            : http://www.xtremweb-hep.o...</msg>
<status status="PASS" endtime="20170731 10:58:35.636" starttime="20170731 10:58:35.635"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${config_content_filtered}</arg>
<arg>\## HTTPSPORT=443</arg>
<arg>HTTPSPORT=${XWCONFIGURE.VALUES.HTTPSPORT}</arg>
</arguments>
<assign>
<var>${config_content_filtered}</var>
</assign>
<msg timestamp="20170731 10:58:35.637" level="INFO">${config_content_filtered} = #
# Copyrights     : CNRS
# Author         : Oleg Lodygensky
# Acknowledgment : XtremWeb-HEP is based on XtremWeb 1.8.0 by inria : http://www.xtremweb.net/
# Web            : http://www.xtremweb-hep.o...</msg>
<status status="PASS" endtime="20170731 10:58:35.637" starttime="20170731 10:58:35.636"></status>
</kw>
<kw name="Create File" library="OperatingSystem">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xtremweb.server.conf</arg>
<arg>content=${config_content_filtered}</arg>
</arguments>
<msg timestamp="20170731 10:58:35.638" html="yes" level="INFO">Created file '&lt;a href="file:///Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/conf/xtremweb.server.conf"&gt;/Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/conf/xtremweb.server.conf&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170731 10:58:35.638" starttime="20170731 10:58:35.637"></status>
</kw>
<kw name="Remove File" library="OperatingSystem">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<msg timestamp="20170731 10:58:35.640" html="yes" level="INFO">Removed file '&lt;a href="file:///Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/xwhep.server.process.log"&gt;/Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/xwhep.server.process.log&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170731 10:58:35.640" starttime="20170731 10:58:35.639"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/bin/xtremweb.server console</arg>
<arg>shell=yes</arg>
<arg>stderr=STDOUT</arg>
<arg>stdout=${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<assign>
<var>${created_process}</var>
</assign>
<msg timestamp="20170731 10:58:35.642" level="INFO">Starting process:
/Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/bin/xtremweb.server console</msg>
<msg timestamp="20170731 10:58:35.655" level="INFO">${created_process} = 3</msg>
<status status="PASS" endtime="20170731 10:58:35.655" starttime="20170731 10:58:35.641"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SERVER_PROCESS}</arg>
<arg>${created_process}</arg>
</arguments>
<msg timestamp="20170731 10:58:35.657" level="INFO">${SERVER_PROCESS} = 3</msg>
<status status="PASS" endtime="20170731 10:58:35.657" starttime="20170731 10:58:35.656"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2 min</arg>
<arg>5 sec</arg>
<arg>Check XtremWeb Server Start From Log</arg>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<kw name="Check XtremWeb Server Start From Log" library="XWServer">
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<kw name="Grep File" library="OperatingSystem">
<doc>Returns the lines of the specified file that match the ``pattern``.</doc>
<arguments>
<arg>${log}</arg>
<arg>listening on port : ${XWCONFIGURE.VALUES.HTTPSPORT}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20170731 10:58:35.659" html="yes" level="INFO">Reading file '&lt;a href="file:///Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/xwhep.server.process.log"&gt;/Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170731 10:58:35.661" level="INFO">0 out of 0 lines matched</msg>
<msg timestamp="20170731 10:58:35.662" level="INFO">${ret} = </msg>
<status status="PASS" endtime="20170731 10:58:35.662" starttime="20170731 10:58:35.659"></status>
</kw>
<kw name="Get Line Count" library="String">
<doc>Returns and logs the number of lines in the given string.</doc>
<arguments>
<arg>${ret}</arg>
</arguments>
<assign>
<var>${line_count}</var>
</assign>
<msg timestamp="20170731 10:58:35.663" level="INFO">0 lines</msg>
<msg timestamp="20170731 10:58:35.663" level="INFO">${line_count} = 0</msg>
<status status="PASS" endtime="20170731 10:58:35.663" starttime="20170731 10:58:35.662"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${line_count}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20170731 10:58:35.664" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20170731 10:58:35.664" level="FAIL">0 != 2</msg>
<status status="FAIL" endtime="20170731 10:58:35.665" starttime="20170731 10:58:35.663"></status>
</kw>
<status status="FAIL" endtime="20170731 10:58:35.665" starttime="20170731 10:58:35.658"></status>
</kw>
<kw name="Check XtremWeb Server Start From Log" library="XWServer">
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<kw name="Grep File" library="OperatingSystem">
<doc>Returns the lines of the specified file that match the ``pattern``.</doc>
<arguments>
<arg>${log}</arg>
<arg>listening on port : ${XWCONFIGURE.VALUES.HTTPSPORT}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20170731 10:58:40.668" html="yes" level="INFO">Reading file '&lt;a href="file:///Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/xwhep.server.process.log"&gt;/Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170731 10:58:40.669" level="INFO">0 out of 6 lines matched</msg>
<msg timestamp="20170731 10:58:40.669" level="INFO">${ret} = </msg>
<status status="PASS" endtime="20170731 10:58:40.669" starttime="20170731 10:58:40.667"></status>
</kw>
<kw name="Get Line Count" library="String">
<doc>Returns and logs the number of lines in the given string.</doc>
<arguments>
<arg>${ret}</arg>
</arguments>
<assign>
<var>${line_count}</var>
</assign>
<msg timestamp="20170731 10:58:40.670" level="INFO">0 lines</msg>
<msg timestamp="20170731 10:58:40.671" level="INFO">${line_count} = 0</msg>
<status status="PASS" endtime="20170731 10:58:40.671" starttime="20170731 10:58:40.670"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${line_count}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20170731 10:58:40.672" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20170731 10:58:40.673" level="FAIL">0 != 2</msg>
<status status="FAIL" endtime="20170731 10:58:40.673" starttime="20170731 10:58:40.672"></status>
</kw>
<status status="FAIL" endtime="20170731 10:58:40.673" starttime="20170731 10:58:40.666"></status>
</kw>
<kw name="Check XtremWeb Server Start From Log" library="XWServer">
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<kw name="Grep File" library="OperatingSystem">
<doc>Returns the lines of the specified file that match the ``pattern``.</doc>
<arguments>
<arg>${log}</arg>
<arg>listening on port : ${XWCONFIGURE.VALUES.HTTPSPORT}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20170731 10:58:45.675" html="yes" level="INFO">Reading file '&lt;a href="file:///Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/xwhep.server.process.log"&gt;/Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170731 10:58:45.676" level="INFO">2 out of 228 lines matched</msg>
<msg timestamp="20170731 10:58:45.677" level="INFO">${ret} = [31/Jul/2017:10:58:43 +0200] [xtremweb.communications.HTTPServer_main_1] INFO : started, listening on port : 9443
[31/Jul/2017:10:58:44 +0200] [xtremweb.communications.HTTPServer_HTTPServer_219] INFO ...</msg>
<status status="PASS" endtime="20170731 10:58:45.677" starttime="20170731 10:58:45.675"></status>
</kw>
<kw name="Get Line Count" library="String">
<doc>Returns and logs the number of lines in the given string.</doc>
<arguments>
<arg>${ret}</arg>
</arguments>
<assign>
<var>${line_count}</var>
</assign>
<msg timestamp="20170731 10:58:45.678" level="INFO">2 lines</msg>
<msg timestamp="20170731 10:58:45.678" level="INFO">${line_count} = 2</msg>
<status status="PASS" endtime="20170731 10:58:45.678" starttime="20170731 10:58:45.677"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${line_count}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20170731 10:58:45.678" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170731 10:58:45.679" starttime="20170731 10:58:45.678"></status>
</kw>
<status status="PASS" endtime="20170731 10:58:45.679" starttime="20170731 10:58:45.674"></status>
</kw>
<status status="PASS" endtime="20170731 10:58:45.679" starttime="20170731 10:58:35.657"></status>
</kw>
<kw name="Log XtremWeb Process Log File" library="XWServer">
<kw name="Log File" library="OperatingSystem">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<msg timestamp="20170731 10:58:45.680" html="yes" level="INFO">Getting file '&lt;a href="file:///Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/xwhep.server.process.log"&gt;/Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170731 10:58:45.680" level="INFO">touch: /var/log/xwhep-ibishub.log: Permission denied
Mon Jul 31 10:58:36 CEST 2017 [MacBook-Pro-de-francoisbranciard.local xtremweb.server] INFO : checking launch url
Mon Jul 31 10:58:36 CEST 2017 [MacBook-Pro-de-francoisbranciard.local xtremweb.server] WARNING : no launcher URL defined
Mon Jul 31 10:58:36 CEST 2017 [MacBook-Pro-de-francoisbranciard.local xtremweb.server] INFO : launching SmartSockets hub
rm: /var/log/xwhep-ibishub.log: Permission denied
[31/Jul/2017:10:58:40 +0200] [main_1] ERROR : setRole : role redefined ?! (was SERVER)
[31/Jul/2017:10:58:41 +0200] [xtremweb.database.DBConnPoolThread_main_1] INFO : Connection to database jdbc:mysql://localhost/xtremweb is ok, 70 created
[31/Jul/2017:10:58:41 +0200] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't create ProxyValidator
[31/Jul/2017:10:58:41 +0200] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.io.FileNotFoundException: /tmp/castore (No such file or directory) (/tmp/castore (No such file or directory))
[31/Jul/2017:10:58:41 +0200] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't add CA certificates to keystore
[31/Jul/2017:10:58:41 +0200] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.lang.NullPointerException (null)
[31/Jul/2017:10:58:41 +0200] [xtremweb.dispatcher.HashTaskSet_TaskSet_15] INFO : TaskSet started (300000)
[31/Jul/2017:10:58:42 +0200] [xtremweb.dispatcher.Dispatcher_main_1] INFO : still waiting task set...
[31/Jul/2017:10:58:43 +0200] [xtremweb.dispatcher.Dispatcher_main_1] WARN : UDP server not started
[31/Jul/2017:10:58:43 +0200] [xtremweb.communications.TCPServer_TCPServerNIO_16] INFO : started, listening on port : 4321
log4j:WARN No appenders could be found for logger (org.eclipse.jetty.util.log).
log4j:WARN Please initialize the log4j system properly.
log4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.
[31/Jul/2017:10:58:43 +0200] [xtremweb.communications.HTTPServer_main_1] INFO : started, listening on port : 9443
[31/Jul/2017:10:58:43 +0200] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : FACEBOOK : java.net.MalformedURLException: no protocol: 
[31/Jul/2017:10:58:43 +0200] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : GOOGLE : java.net.MalformedURLException: no protocol: 
[31/Jul/2017:10:58:43 +0200] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : TWITTER : java.net.MalformedURLException: no protocol: 
[31/Jul/2017:10:58:43 +0200] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : YAHOO : java.net.MalformedURLException: no protocol: 
[31/Jul/2017:10:58:43 +0200] [java.lang.Class_main_1] INFO : www.google.com : certs retrieved = 3
[31/Jul/2017:10:58:43 +0200] [java.lang.Class_main_1] INFO : CN        = CN=www.google.com,O=Google Inc,L=Mountain View,ST=California,C=US
[31/Jul/2017:10:58:43 +0200] [java.lang.Class_main_1] INFO : Issuer CN = CN=Google Internet Authority G2,O=Google Inc,C=US
-----BEGIN CERTIFICATE-----
MIIEgDCCA2igAwIBAgIIXs2UqSQjeX0wDQYJKoZIhvcNAQELBQAwSTELMAkGA1UEBhMCVVMxEzAR
BgNVBAoTCkdvb2dsZSBJbmMxJTAjBgNVBAMTHEdvb2dsZSBJbnRlcm5ldCBBdXRob3JpdHkgRzIw
HhcNMTcwNzE5MTE1NTU3WhcNMTcxMDExMTEzMTAwWjBoMQswCQYDVQQGEwJVUzETMBEGA1UECAwK
Q2FsaWZvcm5pYTEWMBQGA1UEBwwNTW91bnRhaW4gVmlldzETMBEGA1UECgwKR29vZ2xlIEluYzEX
MBUGA1UEAwwOd3d3Lmdvb2dsZS5jb20wggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDC
0ch69mIeccIcKfXTYdiuWRS2iXVPjM6m+u6JwQ0rNMaUyynZ4D7mxLzanOCavewgCKs+nt18RZ5k
ZOofE2dfl1YMmnPLDwAk2SQ3GRBTsltKRONto7Ub9AK5E9ZN+Zfg8VGfxaduT3gqE3telPCHEoiX
HfNhR0+qSXMhg35KXgU9EISTKo7tqPOhZg80qSkqItkPGkRsTOfyxGLrzlUliR8qxXVuhho/cQQh
M0eggHw176jgF0lasG7vxmx9qHILLx+X5xo0sJrb4D4E4xrmGEISy5VDAS0fgrr7IzeNVaypTzZm
zT9se/U7TjY2DVjQOHq+0vegFQuok0EmxzjpAgMBAAGjggFLMIIBRzAdBgNVHSUEFjAUBggrBgEF
BQcDAQYIKwYBBQUHAwIwGQYDVR0RBBIwEIIOd3d3Lmdvb2dsZS5jb20waAYIKwYBBQUHAQEEXDBa
MCsGCCsGAQUFBzAChh9odHRwOi8vcGtpLmdvb2dsZS5jb20vR0lBRzIuY3J0MCsGCCsGAQUFBzAB
hh9odHRwOi8vY2xpZW50czEuZ29vZ2xlLmNvbS9vY3NwMB0GA1UdDgQWBBSNLiWf5cflJjv+MCFR
KdjhWw1wPTAMBgNVHRMBAf8EAjAAMB8GA1UdIwQYMBaAFErdBhYbvPZotXb1gba7Yhq6WoEvMCEG
A1UdIAQaMBgwDAYKKwYBBAHWeQIFATAIBgZngQwBAgIwMAYDVR0fBCkwJzAloCOgIYYfaHR0cDov
L3BraS5nb29nbGUuY29tL0dJQUcyLmNybDANBgkqhkiG9w0BAQsFAAOCAQEAZbJp48Od2jwHn2jM
EDWLyuigWBR1oF+J8ntDkB8Sbvccx5Ihk+B5LjJWVbvUGkjlDwBhQbaUvBuUPgyhFdMptwL6YJ7O
HAJGQwjdloOiCoQQif2qaTbmYu1Y8akGXxuUdGd7KmtmvR6Id/lN5rnvj90+u1w/7HEybgzKvIPK
rwmobQc0sKNfFtTXcMI6KiFiVLQ0QCXsetfV4RMDEcN6RNRRK1eENq7UZAk7ZXsARw8Qf2ux5IWy
sycEgCV7wgTKrLhtNPXU/bxAAAENH6ao8RLiWT+GsCeQltF7E7ryDwXYbDnUpnFtERdcMQ+xD+wy
Waibr6WSSJ1IyEaGl2qTvw==
-----END CERTIFICATE-----
[31/Jul/2017:10:58:43 +0200] [java.lang.Class_main_1] INFO : CN        = CN=Google Internet Authority G2,O=Google Inc,C=US
[31/Jul/2017:10:58:43 +0200] [java.lang.Class_main_1] INFO : Issuer CN = CN=GeoTrust Global CA,O=GeoTrust Inc.,C=US
-----BEGIN CERTIFICATE-----
MIIEKDCCAxCgAwIBAgIQAQAhJYiw+lmnd+8Fe2Yn3zANBgkqhkiG9w0BAQsFADBCMQswCQYDVQQG
EwJVUzEWMBQGA1UEChMNR2VvVHJ1c3QgSW5jLjEbMBkGA1UEAxMSR2VvVHJ1c3QgR2xvYmFsIENB
MB4XDTE3MDUyMjExMzIzN1oXDTE4MTIzMTIzNTk1OVowSTELMAkGA1UEBhMCVVMxEzARBgNVBAoT
Ckdvb2dsZSBJbmMxJTAjBgNVBAMTHEdvb2dsZSBJbnRlcm5ldCBBdXRob3JpdHkgRzIwggEiMA0G
CSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCcKgR3XNhQkToGo4Lg2FBIvIk/8RlwGohGfuCPxfGJ
ziHuWv5hDbcyRImgdAtTT1WkzoJile7rWV/G4QWAEsRelD+8W0g49FP3JOb7kekVxM/0Uw30Svyf
VN59vqBrb4fA0FAfKDADQNoIc1Fsf/86PKc3Bo69SxEE630k3ub5/DFx+5TVYPMuSq9C0svqxGoa
ssxT3RVLix/IGWEfzZ2oPmMrhDVpZYTIGcVGIvhTlb7jgEoQxirsupcgEcc5mRAEoPBhepUljE5S
deK27QjKFPzOImqzTs9GA5eXA37Asd57r0Uzz7o+cbfe9CUlwg01iZ2d+w4ReYkeN8WvjnJpAgMB
AAGjggERMIIBDTAfBgNVHSMEGDAWgBTAephojYn7qwVkDBF9qn1luMrMTjAdBgNVHQ4EFgQUSt0G
Fhu89mi1dvWBtrtiGrpagS8wDgYDVR0PAQH/BAQDAgEGMC4GCCsGAQUFBwEBBCIwIDAeBggrBgEF
BQcwAYYSaHR0cDovL2cuc3ltY2QuY29tMBIGA1UdEwEB/wQIMAYBAf8CAQAwNQYDVR0fBC4wLDAq
oCigJoYkaHR0cDovL2cuc3ltY2IuY29tL2NybHMvZ3RnbG9iYWwuY3JsMCEGA1UdIAQaMBgwDAYK
KwYBBAHWeQIFATAIBgZngQwBAgIwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMA0GCSqG
SIb3DQEBCwUAA4IBAQDKSeWs12Rkd1u+cfrP9B4jx5ppY1Rf60zWGSgjZGaOHMeHgGRfBIsmr5jf
CnC8vBk97nszqX+99AXUcLsFJnnqmseYuQcZZTTMPOk/xQH6bwx+23pwXEz+LQDwyr4tjrSogPsB
E4jLnD/lu3fKOmc2887VJwJyQ6C9bgLxRwVxPgFZ6RGeGvOED4Cmong1L7bHon8XfOGLVq7uZ4hR
JzBgpWJSwzfVO+qFKgE4h6LPcK2kesnE58rF2rwjMvL+GMJ74N87L9TQEOaWTPtEtyFkDbkAlDAS
JodYmDkFOA/MgkgMCkdm7r+0X8T/cKjhf4t5K7hlMqO5tzHpCvX2HzLc
-----END CERTIFICATE-----
[31/Jul/2017:10:58:43 +0200] [java.lang.Class_main_1] INFO : CN        = CN=GeoTrust Global CA,O=GeoTrust Inc.,C=US
[31/Jul/2017:10:58:43 +0200] [java.lang.Class_main_1] INFO : Issuer CN = OU=Equifax Secure Certificate Authority,O=Equifax,C=US
-----BEGIN CERTIFICATE-----
MIIDfTCCAuagAwIBAgIDErvmMA0GCSqGSIb3DQEBBQUAME4xCzAJBgNVBAYTAlVTMRAwDgYDVQQK
EwdFcXVpZmF4MS0wKwYDVQQLEyRFcXVpZmF4IFNlY3VyZSBDZXJ0aWZpY2F0ZSBBdXRob3JpdHkw
HhcNMDIwNTIxMDQwMDAwWhcNMTgwODIxMDQwMDAwWjBCMQswCQYDVQQGEwJVUzEWMBQGA1UEChMN
R2VvVHJ1c3QgSW5jLjEbMBkGA1UEAxMSR2VvVHJ1c3QgR2xvYmFsIENBMIIBIjANBgkqhkiG9w0B
AQEFAAOCAQ8AMIIBCgKCAQEA2swYYzD99BcjGlZ+W988bDjkcbd4kdS8odhM+KhDtgPpTSEHCIja
WC9mOSm9BXiLnTjoBbdqfnGk5sRgprDvgOSJKA+eJdbtg/OtppHHmMlCGDUUna2YRpIuT8rxh0PB
FpVXLVDviS2Aelet8u5fa9IAjbkU+BQVNdnARqN7csiRv8lVK83Qlz6cJmTM386DGXHKTubU1Xup
Gc1V3sjs0l44U+VcT4wt/lAjNvxm5suOpDkZALeVAjmRCw7+OC7RHQWa9k0+bw8HHa8sHo9gOeL6
NlMTOdReJivbPagUvTLrGAMoUgRx5aszPeE4uwc2hGKceeoWMPRfwCvocWvk+QIDAQABo4HwMIHt
MB8GA1UdIwQYMBaAFEjmaPkr0rKV10fYIyAQTzOYkJ/UMB0GA1UdDgQWBBTAephojYn7qwVkDBF9
qn1luMrMTjAPBgNVHRMBAf8EBTADAQH/MA4GA1UdDwEB/wQEAwIBBjA6BgNVHR8EMzAxMC+gLaAr
hilodHRwOi8vY3JsLmdlb3RydXN0LmNvbS9jcmxzL3NlY3VyZWNhLmNybDBOBgNVHSAERzBFMEMG
BFUdIAAwOzA5BggrBgEFBQcCARYtaHR0cHM6Ly93d3cuZ2VvdHJ1c3QuY29tL3Jlc291cmNlcy9y
ZXBvc2l0b3J5MA0GCSqGSIb3DQEBBQUAA4GBAHbhEm5OSxYShjAGsoEIz/AIx8dxfmbuwu3UOx//
8PDITtZDOLC5MH0Y0FWDomrLNhGc6Ehmo21/uBPUR/6LWlxz/K7ZGzIZOKuXNBSqltLroxwUCEm2
u+WR74M26x1Wb8ravHNjkOR/ez4iyz0H7V84dJzjA1BOoa+Y7mHyhD8S
-----END CERTIFICATE-----
[31/Jul/2017:10:58:43 +0200] [java.lang.Class_main_1] INFO : www.yahoo.com : certs retrieved = 3
[31/Jul/2017:10:58:43 +0200] [java.lang.Class_main_1] INFO : CN        = CN=www.yahoo.com,OU=Information Technology,O=Yahoo Inc.,L=Sunnyvale,ST=California,C=US
[31/Jul/2017:10:58:43 +0200] [java.lang.Class_main_1] INFO : Issuer CN = CN=Symantec Class 3 Secure Server CA - G4,OU=Symantec Trust Network,O=Symantec Corporation,C=US
-----BEGIN CERTIFICATE-----
MIIJKzCCCBOgAwIBAgIQHCVDDtCmAujMOpd7BTnM5TANBgkqhkiG9w0BAQsFADB+MQswCQYDVQQG
EwJVUzEdMBsGA1UEChMUU3ltYW50ZWMgQ29ycG9yYXRpb24xHzAdBgNVBAsTFlN5bWFudGVjIFRy
dXN0IE5ldHdvcmsxLzAtBgNVBAMTJlN5bWFudGVjIENsYXNzIDMgU2VjdXJlIFNlcnZlciBDQSAt
IEc0MB4XDTE1MTAzMTAwMDAwMFoXDTE3MTAzMDIzNTk1OVowgYQxCzAJBgNVBAYTAlVTMRMwEQYD
VQQIDApDYWxpZm9ybmlhMRIwEAYDVQQHDAlTdW5ueXZhbGUxEzARBgNVBAoMCllhaG9vIEluYy4x
HzAdBgNVBAsMFkluZm9ybWF0aW9uIFRlY2hub2xvZ3kxFjAUBgNVBAMMDXd3dy55YWhvby5jb20w
ggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDQCDGY8Tsqwwg+YqP8ZcLSbr8uIvYolaOi
1p4pJbhE3sPgmb8wS5n9ZL+P/BF6s4BNVlA6W+ps9s3WaGp9DzoxQgrH354e0JXxOJidogRGq2xD
cyRf8klriX8clOWEVPd63omqwLSInx957povTsBYadcnC1uJO+cHu1QjENdxoF3VD/zccH13jKqD
XMZwB/UyqhEpbQwxbuPRp1BpQUQN0KhKH/JG9YqXeySc8CUGO9AZPtb6AWXcd+VA0xnnD6YKfPWB
LYbBWDHAlv/zJd3wDCNVS5F8zUlG3RM/TAwa3uR3S3v9swCcTkb6AVDgJknD9yDaPowEoyurG7ZF
KfFzAgMBAAGjggWcMIIFmDCCBFAGA1UdEQSCBEcwggRDgg13d3cueWFob28uY29tggl5YWhvby5j
b22CDmhzcmQueWFob28uY29tggx1cy55YWhvby5jb22CDGZyLnlhaG9vLmNvbYIMdWsueWFob28u
Y29tggx6YS55YWhvby5jb22CDGllLnlhaG9vLmNvbYIMaXQueWFob28uY29tggxlcy55YWhvby5j
b22CDGRlLnlhaG9vLmNvbYIMY2EueWFob28uY29tggxxYy55YWhvby5jb22CDGJyLnlhaG9vLmNv
bYIMcm8ueWFob28uY29tggxzZS55YWhvby5jb22CDGJlLnlhaG9vLmNvbYIPZnItYmUueWFob28u
Y29tggxhci55YWhvby5jb22CDG14LnlhaG9vLmNvbYIMY2wueWFob28uY29tggxjby55YWhvby5j
b22CDHZlLnlhaG9vLmNvbYIRZXNwYW5vbC55YWhvby5jb22CDHBlLnlhaG9vLmNvbYIMaW4ueWFo
b28uY29tggxzZy55YWhvby5jb22CDGlkLnlhaG9vLmNvbYISbWFsYXlzaWEueWFob28uY29tggxw
aC55YWhvby5jb22CDHZuLnlhaG9vLmNvbYIRbWFrdG9vYi55YWhvby5jb22CFGVuLW1ha3Rvb2Iu
eWFob28uY29tgg9jYS5teS55YWhvby5jb22CDGdyLnlhaG9vLmNvbYINYXR0LnlhaG9vLmNvbYIM
YXUueWFob28uY29tggxuei55YWhvby5jb22CDHR3LnlhaG9vLmNvbYIMaGsueWFob28uY29tgg1i
cmIueWFob28uY29tggxteS55YWhvby5jb22CEGFkZC5teS55YWhvby5jb22CEmZyb250aWVyLnlh
aG9vLmNvbYIRdmVyaXpvbi55YWhvby5jb22CE2NhLnJvZ2Vycy55YWhvby5jb22CFmZyLWNhLnJv
Z2Vycy55YWhvby5jb22CFHRhdGFkb2NvbW8ueWFob28uY29tghB0aWtvbmEueWFob28uY29tghdp
ZGVhbmV0c2V0dGVyLnlhaG9vLmNvbYISbXRzaW5kaWEueWFob28uY29tghNzbWFydGZyZW4ueWFo
b28uY29tgg8qLmF0dC55YWhvby5jb22CEioucGVvcGxlLnlhaG9vLmNvbYIVKi5jZWxlYnJpdHku
eWFob28uY29tghcqLnZpZGEtZXN0aWxvLnlhaG9vLmNvbYIRKi5zdHlsZS55YWhvby5jb22CEiou
bW92aWVzLnlhaG9vLmNvbYIRKi5zdGFycy55YWhvby5jb22CECoua2luby55YWhvby5jb22CECou
Y2luZS55YWhvby5jb22CEiouY2luZW1hLnlhaG9vLmNvbYIYKi5jZWxlYnJpZGFkZXMueWFob28u
Y29tghAqLmxpdmUueWFob28uY29tghIqLmJlYXV0eS55YWhvby5jb20wCQYDVR0TBAIwADAOBgNV
HQ8BAf8EBAMCBaAwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMGEGA1UdIARaMFgwVgYG
Z4EMAQICMEwwIwYIKwYBBQUHAgEWF2h0dHBzOi8vZC5zeW1jYi5jb20vY3BzMCUGCCsGAQUFBwIC
MBkaF2h0dHBzOi8vZC5zeW1jYi5jb20vcnBhMB8GA1UdIwQYMBaAFF9gz2GQVd+EQxSKYCqy9Xr0
QxjvMCsGA1UdHwQkMCIwIKAeoByGGmh0dHA6Ly9zcy5zeW1jYi5jb20vc3MuY3JsMFcGCCsGAQUF
BwEBBEswSTAfBggrBgEFBQcwAYYTaHR0cDovL3NzLnN5bWNkLmNvbTAmBggrBgEFBQcwAoYaaHR0
cDovL3NzLnN5bWNiLmNvbS9zcy5jcnQwDQYJKoZIhvcNAQELBQADggEBAG/q7lSPjely/GpDlCni
zkFcSZsk+xAAS4zn22JNVGSHR1r+mdgFFw0mzr8+sc8UpiMFMQ4jtEHtffbsw6U9YWjuCOJKZ6MQ
bS9qjr+60Bat2tYO8XK7gviQ9wgOQHn/L8ky5t3GAmgyVTAglJIIAUpKehHrC4n3ot/oudUftaPg
oA+34qGz8bq1GH+0+DbMblnf6EDBsz4MoDUJvkyGtlibf3FmfykPDCm0uaN2X/zRXjW48++feCuJ
eqCgCZl/0U2cmabKGDxLaiDf/xgnfQnCqn+Ka2PctGhsT4xKzLNH9d/66UeBUttqbonXPO34ac70
PJGT7dm+xgGCqSdoxXM=
-----END CERTIFICATE-----
[31/Jul/2017:10:58:43 +0200] [java.lang.Class_main_1] INFO : CN        = CN=Symantec Class 3 Secure Server CA - G4,OU=Symantec Trust Network,O=Symantec Corporation,C=US
[31/Jul/2017:10:58:43 +0200] [java.lang.Class_main_1] INFO : Issuer CN = CN=VeriSign Class 3 Public Primary Certification Authority - G5,OU=(c) 2006 VeriSign\, Inc. - For authorized use only,OU=VeriSign Trust Network,O=VeriSign\, Inc.,C=US
-----BEGIN CERTIFICATE-----
MIIFODCCBCCgAwIBAgIQUT+5dDhwtzRAQY0wkwaZ/zANBgkqhkiG9w0BAQsFADCByjELMAkGA1UE
BhMCVVMxFzAVBgNVBAoTDlZlcmlTaWduLCBJbmMuMR8wHQYDVQQLExZWZXJpU2lnbiBUcnVzdCBO
ZXR3b3JrMTowOAYDVQQLEzEoYykgMjAwNiBWZXJpU2lnbiwgSW5jLiAtIEZvciBhdXRob3JpemVk
IHVzZSBvbmx5MUUwQwYDVQQDEzxWZXJpU2lnbiBDbGFzcyAzIFB1YmxpYyBQcmltYXJ5IENlcnRp
ZmljYXRpb24gQXV0aG9yaXR5IC0gRzUwHhcNMTMxMDMxMDAwMDAwWhcNMjMxMDMwMjM1OTU5WjB+
MQswCQYDVQQGEwJVUzEdMBsGA1UEChMUU3ltYW50ZWMgQ29ycG9yYXRpb24xHzAdBgNVBAsTFlN5
bWFudGVjIFRydXN0IE5ldHdvcmsxLzAtBgNVBAMTJlN5bWFudGVjIENsYXNzIDMgU2VjdXJlIFNl
cnZlciBDQSAtIEc0MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAstgFyhx0LbUXVjnF
SlIJluhL2AzxaJ+aQihiw6UwU35VEYJbA3oNL+F5BMm0lncZgQGUWfm893qZJ4Itt4PdWid/sgN6
nFMl6UgfRk/InSn4vnlW9vf92Tpo2otLgjNBEsPIPMzWlnqEIRoiBAMnF4scaGGTDw5RgDMdtLXO
637QYqzus3sBdO9pNevK1T2p7peYyo2qRA4lmUoVlqTObQJUHypqJuIGOmNIrLRM0XWTUP8TL9ba
4cYY9Z/JJV3zADreJk20KQnNDz0jbxZKgRb78oMQw7jW2FUyPfG9D72MUpVKFpd6UiFjdS8W+cRm
vvW1Cdj/JwDNRHxvSz+w9wIDAQABo4IBYzCCAV8wEgYDVR0TAQH/BAgwBgEB/wIBADAwBgNVHR8E
KTAnMCWgI6Ahhh9odHRwOi8vczEuc3ltY2IuY29tL3BjYTMtZzUuY3JsMA4GA1UdDwEB/wQEAwIB
BjAvBggrBgEFBQcBAQQjMCEwHwYIKwYBBQUHMAGGE2h0dHA6Ly9zMi5zeW1jYi5jb20wawYDVR0g
BGQwYjBgBgpghkgBhvhFAQc2MFIwJgYIKwYBBQUHAgEWGmh0dHA6Ly93d3cuc3ltYXV0aC5jb20v
Y3BzMCgGCCsGAQUFBwICMBwaGmh0dHA6Ly93d3cuc3ltYXV0aC5jb20vcnBhMCkGA1UdEQQiMCCk
HjAcMRowGAYDVQQDExFTeW1hbnRlY1BLSS0xLTUzNDAdBgNVHQ4EFgQUX2DPYZBV34RDFIpgKrL1
evRDGO8wHwYDVR0jBBgwFoAUf9Nlp8Ld7LvwMAnzQzn6Aq8zMTMwDQYJKoZIhvcNAQELBQADggEB
AF6UVkndji1l9cE2UbYD49qecxnyH1mrWH5sJgUs+oHXXCMXIiw3k/eG7IXmsKP9H+IyqEVv4dn7
ua/ScKAyQmW/hP4WKo8/xabWo5N9Q+l0IZE1KPRj6S7t9/Vcf0uatSDpCr3gRRAMFJSaXaXjS5Ho
JJtGQGX0InLNmfiIEfXzf+YzguaoxX7+0AjiJVgIcWjmzaLmFN5OUiQt/eV5E1PnXi8tTRttQBVS
K/eHiXgSgW7ZTaoteNTCLD0IX4eRnh8OsN4wUmSGiaqdZpwOdgyA8nTYKvi4Os7X1g8RvmurFPW9
QaAiY4nxug9vKWNmLT+sjHLF+8fk1A/yO0+MKcc=
-----END CERTIFICATE-----
[31/Jul/2017:10:58:43 +0200] [java.lang.Class_main_1] INFO : CN        = CN=VeriSign Class 3 Public Primary Certification Authority - G5,OU=(c) 2006 VeriSign\, Inc. - For authorized use only,OU=VeriSign Trust Network,O=VeriSign\, Inc.,C=US
[31/Jul/2017:10:58:43 +0200] [java.lang.Class_main_1] INFO : Issuer CN = OU=Class 3 Public Primary Certification Authority,O=VeriSign\, Inc.,C=US
-----BEGIN CERTIFICATE-----
MIIE0DCCBDmgAwIBAgIQJQzo4DBhLp8rifcFTXz4/TANBgkqhkiG9w0BAQUFADBfMQswCQYDVQQG
EwJVUzEXMBUGA1UEChMOVmVyaVNpZ24sIEluYy4xNzA1BgNVBAsTLkNsYXNzIDMgUHVibGljIFBy
aW1hcnkgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkwHhcNMDYxMTA4MDAwMDAwWhcNMjExMTA3MjM1
OTU5WjCByjELMAkGA1UEBhMCVVMxFzAVBgNVBAoTDlZlcmlTaWduLCBJbmMuMR8wHQYDVQQLExZW
ZXJpU2lnbiBUcnVzdCBOZXR3b3JrMTowOAYDVQQLEzEoYykgMjAwNiBWZXJpU2lnbiwgSW5jLiAt
IEZvciBhdXRob3JpemVkIHVzZSBvbmx5MUUwQwYDVQQDEzxWZXJpU2lnbiBDbGFzcyAzIFB1Ymxp
YyBQcmltYXJ5IENlcnRpZmljYXRpb24gQXV0aG9yaXR5IC0gRzUwggEiMA0GCSqGSIb3DQEBAQUA
A4IBDwAwggEKAoIBAQCvJAgIKXo1nmAMqudLO07cfLw8RRy7K+D+KQL5VwijZIUVJ/XxrcgxiV0i
6CqqpkKzj/i5Vbext0uz/o9+B1fs70PbZmIVYc9gDaTY3vjgw2IIPVQT60nKWVSFJuUrjxuf6/Wh
kcIzSdhDY2pSS9KP6HBRTdGJaXvHcPaz3BJ023tdS1bTlr8Vd6Gw9KIl8q8ckmcY5fQGBO+QueQA
5N06tRn/Arr0PO7gi+s3i+z016zy9vA9r911kTMZHRxAy3QkGSGT2RT+rCpSx4/VBEnkjWNHiDxp
g8v+R70rfk/Fla4OndTRQ8Bnc+MUCH7lP59zuDMKz10/NIeWiu5T6CUVAgMBAAGjggGbMIIBlzAP
BgNVHRMBAf8EBTADAQH/MDEGA1UdHwQqMCgwJqAkoCKGIGh0dHA6Ly9jcmwudmVyaXNpZ24uY29t
L3BjYTMuY3JsMA4GA1UdDwEB/wQEAwIBBjA9BgNVHSAENjA0MDIGBFUdIAAwKjAoBggrBgEFBQcC
ARYcaHR0cHM6Ly93d3cudmVyaXNpZ24uY29tL2NwczAdBgNVHQ4EFgQUf9Nlp8Ld7LvwMAnzQzn6
Aq8zMTMwbQYIKwYBBQUHAQwEYTBfoV2gWzBZMFcwVRYJaW1hZ2UvZ2lmMCEwHzAHBgUrDgMCGgQU
j+XTGoasjY5rw8+AatRIGCx7GS4wJRYjaHR0cDovL2xvZ28udmVyaXNpZ24uY29tL3ZzbG9nby5n
aWYwNAYIKwYBBQUHAQEEKDAmMCQGCCsGAQUFBzABhhhodHRwOi8vb2NzcC52ZXJpc2lnbi5jb20w
PgYDVR0lBDcwNQYIKwYBBQUHAwEGCCsGAQUFBwMCBggrBgEFBQcDAwYJYIZIAYb4QgQBBgpghkgB
hvhFAQgBMA0GCSqGSIb3DQEBBQUAA4GBABMC3fjohgDyWvj4IAxZiGIHzs73Tvm7WaGY5eE43U68
ZhjTresY8g3JbT5KlCDDPLq9ZVTGr0SzEK0saz6r1we2uIFjxfleLuUqZ87NMwwq14lWAyMfs77o
OghZtOxFNfeKW/9mz1Cvxm1XjRl4t7mi0VfqH5pLr7rJjhJ+xr3/
-----END CERTIFICATE-----
[31/Jul/2017:10:58:43 +0200] [xtremweb.dispatcher.Dispatcher_main_1] INFO : XWHEP Dispatcher(10.5.2-head) started [Mon Jul 31 10:58:43 CEST 2017]
[31/Jul/2017:10:58:43 +0200] [xtremweb.dispatcher.Dispatcher_main_1] INFO : DB vendor  = mysql
[31/Jul/2017:10:58:43 +0200] [xtremweb.dispatcher.Dispatcher_main_1] INFO : mileStone  = 
[31/Jul/2017:10:58:43 +0200] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Time out   = 15000
[31/Jul/2017:10:58:43 +0200] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Disk opt'd = true
[31/Jul/2017:10:58:43 +0200] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Net  opt'd = true
[31/Jul/2017:10:58:43 +0200] [xtremweb.dispatcher.Dispatcher_main_1] INFO : NIO        = true
XWHEP Dispatcher started  Mon Jul 31 10:58:43 CEST 2017
Name             : MacBook-Pro-de-francoisbranciard.local
Version          : 10.5.2-head
Identity         : 
XWRole           : SERVER
Started on       : Mon Jul 31 10:58:39 CEST 2017
Scheduler        : xtremweb.dispatcher.MatchingScheduler
SmartSockets hub : 192.168.160.68-4329#9e.aa.72.f6.c3.7c.00.00.66.78.2e.b8.b7.06.2f.af~McFrancis
Server HTTP      : true
Alive            : 300
Alive time out   : 900
Polling time out : 15000
Optimize zip     : true
Optimize network : true
NIO              : true
Comm layer       : xtremweb.communications.TCPClient
Socket time out  : 60000
Socket retries   : 50
Max connections  : 200
TCP port         : 4321
UDP port         : 4323
HTPP  port       : 80
HTPPS port       : 9443
Sun RPC interposition port : 4328
Sandbox path : /usr/bin/sandbox-exec
Sandbox launch args : 
Host &lt;host&gt;&lt;uid&gt;590162c2-6b1a-48ed-a284-a2a0d9bf63f8&lt;/uid&gt;&lt;accessrights&gt;0x755&lt;/accessrights&gt;&lt;name&gt;MacBook-Pro-de-francoisbranciard.local&lt;/name&gt;&lt;cpuload&gt;50&lt;/cpuload&gt;&lt;natedipaddr&gt;192.168.160.68&lt;/natedipaddr&gt;&lt;ipaddr&gt;192.168.160.68&lt;/ipaddr&gt;&lt;hwaddr&gt;&lt;/hwaddr&gt;&lt;timezone&gt;Europe/Paris&lt;/timezone&gt;&lt;os&gt;MACOSX&lt;/os&gt;&lt;osversion&gt;10.12.6&lt;/osversion&gt;&lt;javaversion&gt;1.8.0_131&lt;/javaversion&gt;&lt;javadatamodel&gt;64&lt;/javadatamodel&gt;&lt;cputype&gt;X86_64&lt;/cputype&gt;&lt;cpunb&gt;1&lt;/cpunb&gt;&lt;cpumodel&gt;unknown&lt;/cpumodel&gt;&lt;cpuspeed&gt;0&lt;/cpuspeed&gt;&lt;totalmem&gt;0&lt;/totalmem&gt;&lt;totalswap&gt;0&lt;/totalswap&gt;&lt;totaltmp&gt;114544&lt;/totaltmp&gt;&lt;freetmp&gt;21829&lt;/freetmp&gt;&lt;project&gt;&lt;/project&gt;&lt;active&gt;true&lt;/active&gt;&lt;incomingconnections&gt;false&lt;/incomingconnections&gt;&lt;available&gt;false&lt;/available&gt;&lt;pilotjob&gt;false&lt;/pilotjob&gt;&lt;sgid&gt;&lt;/sgid&gt;&lt;timeout&gt;15000&lt;/timeout&gt;&lt;traces&gt;false&lt;/traces&gt;&lt;acceptbin&gt;false&lt;/acceptbin&gt;&lt;version&gt;10.5.2-head&lt;/version&gt;&lt;/host&gt;
[31/Jul/2017:10:58:44 +0200] [xtremweb.communications.HTTPServer_HTTPServer_219] INFO : started, listening on port : 9443
</msg>
<status status="PASS" endtime="20170731 10:58:45.682" starttime="20170731 10:58:45.680"></status>
</kw>
<status status="PASS" endtime="20170731 10:58:45.682" starttime="20170731 10:58:45.679"></status>
</kw>
<status status="PASS" endtime="20170731 10:58:45.682" starttime="20170731 10:58:35.631"></status>
</kw>
<kw name="Start XtremWeb Worker" library="XWWorker">
<arguments>
<arg>${DIST_XWHEP_PATH}</arg>
</arguments>
<kw name="File Should Exist" library="OperatingSystem">
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xtremweb.worker.conf</arg>
</arguments>
<msg timestamp="20170731 10:58:45.684" html="yes" level="INFO">File '&lt;a href="file:///Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/conf/xtremweb.worker.conf"&gt;/Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/conf/xtremweb.worker.conf&lt;/a&gt;' exists.</msg>
<status status="PASS" endtime="20170731 10:58:45.684" starttime="20170731 10:58:45.683"></status>
</kw>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xtremweb.worker.conf</arg>
</arguments>
<assign>
<var>${config_content}</var>
</assign>
<msg timestamp="20170731 10:58:45.685" html="yes" level="INFO">Getting file '&lt;a href="file:///Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/conf/xtremweb.worker.conf"&gt;/Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/conf/xtremweb.worker.conf&lt;/a&gt;'.</msg>
<msg timestamp="20170731 10:58:45.685" level="INFO">${config_content} = #
# Copyrights     : CNRS
# Author         : Oleg Lodygensky
# Acknowledgment : XtremWeb-HEP is based on XtremWeb 1.8.0 by inria : http://www.xtremweb.net/
# Web            : http://www.xtremweb-hep.o...</msg>
<status status="PASS" endtime="20170731 10:58:45.685" starttime="20170731 10:58:45.684"></status>
</kw>
<kw name="Remove String Using Regexp" library="String">
<doc>Removes ``patterns`` from the given ``string``.</doc>
<arguments>
<arg>${config_content}</arg>
<arg>LAUNCHERURL=${XWCONFIGURE.VALUES.XWUPGRADEURL}</arg>
</arguments>
<assign>
<var>${config_content_filtered}</var>
</assign>
<msg timestamp="20170731 10:58:45.687" level="INFO">${config_content_filtered} = #
# Copyrights     : CNRS
# Author         : Oleg Lodygensky
# Acknowledgment : XtremWeb-HEP is based on XtremWeb 1.8.0 by inria : http://www.xtremweb.net/
# Web            : http://www.xtremweb-hep.o...</msg>
<status status="PASS" endtime="20170731 10:58:45.687" starttime="20170731 10:58:45.686"></status>
</kw>
<kw name="Create File" library="OperatingSystem">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xtremweb.worker.conf</arg>
<arg>content=${config_content_filtered}</arg>
</arguments>
<msg timestamp="20170731 10:58:45.691" html="yes" level="INFO">Created file '&lt;a href="file:///Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/conf/xtremweb.worker.conf"&gt;/Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/conf/xtremweb.worker.conf&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170731 10:58:45.692" starttime="20170731 10:58:45.687"></status>
</kw>
<kw name="Remove File" library="OperatingSystem">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.worker.process.log</arg>
</arguments>
<msg timestamp="20170731 10:58:45.695" html="yes" level="INFO">Removed file '&lt;a href="file:///Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/xwhep.worker.process.log"&gt;/Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/xwhep.worker.process.log&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170731 10:58:45.695" starttime="20170731 10:58:45.692"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/bin/xtremweb.worker console</arg>
<arg>shell=yes</arg>
<arg>stderr=STDOUT</arg>
<arg>stdout=${DIST_XWHEP_PATH}/xwhep.worker.process.log</arg>
</arguments>
<assign>
<var>${created_process}</var>
</assign>
<msg timestamp="20170731 10:58:45.696" level="INFO">Starting process:
/Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/bin/xtremweb.worker console</msg>
<msg timestamp="20170731 10:58:45.706" level="INFO">${created_process} = 4</msg>
<status status="PASS" endtime="20170731 10:58:45.706" starttime="20170731 10:58:45.695"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${WORKER_PROCESS}</arg>
<arg>${created_process}</arg>
</arguments>
<msg timestamp="20170731 10:58:45.708" level="INFO">${WORKER_PROCESS} = 4</msg>
<status status="PASS" endtime="20170731 10:58:45.708" starttime="20170731 10:58:45.707"></status>
</kw>
<kw name="Log File" library="OperatingSystem">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.worker.process.log</arg>
</arguments>
<msg timestamp="20170731 10:58:45.709" html="yes" level="INFO">Getting file '&lt;a href="file:///Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/xwhep.worker.process.log"&gt;/Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/xwhep.worker.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170731 10:58:45.709" level="INFO"></msg>
<status status="PASS" endtime="20170731 10:58:45.709" starttime="20170731 10:58:45.708"></status>
</kw>
<status status="PASS" endtime="20170731 10:58:45.709" starttime="20170731 10:58:45.682"></status>
</kw>
<status status="PASS" endtime="20170731 10:58:45.709" starttime="20170731 10:57:51.909"></status>
</kw>
<test id="s1-s3-t1" name="Test envoyer des données">
<kw type="setup" name="Begin XWtremWeb Command Test" library="XWCommon">
<kw name="Ping XWtremWeb Database" library="XWServer">
<kw name="Xtremweb Tables Must Exist" library="MySql">
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170731 10:58:45.713" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170731 10:58:45.732" starttime="20170731 10:58:45.713"></status>
</kw>
<status status="PASS" endtime="20170731 10:58:45.732" starttime="20170731 10:58:45.712"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>appTypes</arg>
</arguments>
<msg timestamp="20170731 10:58:45.733" level="INFO">Executing : Table Must Exist  |  appTypes </msg>
<msg timestamp="20170731 10:58:45.733" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='appTypes' </msg>
<status status="PASS" endtime="20170731 10:58:45.738" starttime="20170731 10:58:45.733"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps</arg>
</arguments>
<msg timestamp="20170731 10:58:45.739" level="INFO">Executing : Table Must Exist  |  apps </msg>
<msg timestamp="20170731 10:58:45.740" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='apps' </msg>
<status status="PASS" endtime="20170731 10:58:45.750" starttime="20170731 10:58:45.739"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps_history</arg>
</arguments>
<msg timestamp="20170731 10:58:45.752" level="INFO">Executing : Table Must Exist  |  apps_history </msg>
<msg timestamp="20170731 10:58:45.752" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='apps_history' </msg>
<status status="PASS" endtime="20170731 10:58:45.766" starttime="20170731 10:58:45.751"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>cpuTypes</arg>
</arguments>
<msg timestamp="20170731 10:58:45.767" level="INFO">Executing : Table Must Exist  |  cpuTypes </msg>
<msg timestamp="20170731 10:58:45.767" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='cpuTypes' </msg>
<status status="PASS" endtime="20170731 10:58:45.779" starttime="20170731 10:58:45.766"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>dataTypes</arg>
</arguments>
<msg timestamp="20170731 10:58:45.783" level="INFO">Executing : Table Must Exist  |  dataTypes </msg>
<msg timestamp="20170731 10:58:45.783" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='dataTypes' </msg>
<status status="PASS" endtime="20170731 10:58:45.817" starttime="20170731 10:58:45.782"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas</arg>
</arguments>
<msg timestamp="20170731 10:58:45.818" level="INFO">Executing : Table Must Exist  |  datas </msg>
<msg timestamp="20170731 10:58:45.818" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='datas' </msg>
<status status="PASS" endtime="20170731 10:58:45.827" starttime="20170731 10:58:45.817"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas_history</arg>
</arguments>
<msg timestamp="20170731 10:58:45.828" level="INFO">Executing : Table Must Exist  |  datas_history </msg>
<msg timestamp="20170731 10:58:45.828" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='datas_history' </msg>
<status status="PASS" endtime="20170731 10:58:45.841" starttime="20170731 10:58:45.827"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables</arg>
</arguments>
<msg timestamp="20170731 10:58:45.846" level="INFO">Executing : Table Must Exist  |  executables </msg>
<msg timestamp="20170731 10:58:45.847" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='executables' </msg>
<status status="PASS" endtime="20170731 10:58:45.852" starttime="20170731 10:58:45.842"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables_history</arg>
</arguments>
<msg timestamp="20170731 10:58:45.855" level="INFO">Executing : Table Must Exist  |  executables_history </msg>
<msg timestamp="20170731 10:58:45.855" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='executables_history' </msg>
<status status="PASS" endtime="20170731 10:58:45.863" starttime="20170731 10:58:45.853"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups</arg>
</arguments>
<msg timestamp="20170731 10:58:45.863" level="INFO">Executing : Table Must Exist  |  groups </msg>
<msg timestamp="20170731 10:58:45.865" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='groups' </msg>
<status status="PASS" endtime="20170731 10:58:45.869" starttime="20170731 10:58:45.863"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups_history</arg>
</arguments>
<msg timestamp="20170731 10:58:45.870" level="INFO">Executing : Table Must Exist  |  groups_history </msg>
<msg timestamp="20170731 10:58:45.870" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='groups_history' </msg>
<status status="PASS" endtime="20170731 10:58:45.876" starttime="20170731 10:58:45.869"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts</arg>
</arguments>
<msg timestamp="20170731 10:58:45.877" level="INFO">Executing : Table Must Exist  |  hosts </msg>
<msg timestamp="20170731 10:58:45.878" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='hosts' </msg>
<status status="PASS" endtime="20170731 10:58:45.886" starttime="20170731 10:58:45.877"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts_history</arg>
</arguments>
<msg timestamp="20170731 10:58:45.887" level="INFO">Executing : Table Must Exist  |  hosts_history </msg>
<msg timestamp="20170731 10:58:45.888" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='hosts_history' </msg>
<status status="PASS" endtime="20170731 10:58:45.895" starttime="20170731 10:58:45.887"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships</arg>
</arguments>
<msg timestamp="20170731 10:58:45.896" level="INFO">Executing : Table Must Exist  |  memberships </msg>
<msg timestamp="20170731 10:58:45.896" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='memberships' </msg>
<status status="PASS" endtime="20170731 10:58:45.899" starttime="20170731 10:58:45.896"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships_history</arg>
</arguments>
<msg timestamp="20170731 10:58:45.899" level="INFO">Executing : Table Must Exist  |  memberships_history </msg>
<msg timestamp="20170731 10:58:45.899" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='memberships_history' </msg>
<status status="PASS" endtime="20170731 10:58:45.903" starttime="20170731 10:58:45.899"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>oses</arg>
</arguments>
<msg timestamp="20170731 10:58:45.904" level="INFO">Executing : Table Must Exist  |  oses </msg>
<msg timestamp="20170731 10:58:45.904" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='oses' </msg>
<status status="PASS" endtime="20170731 10:58:45.907" starttime="20170731 10:58:45.904"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>packageTypes</arg>
</arguments>
<msg timestamp="20170731 10:58:45.908" level="INFO">Executing : Table Must Exist  |  packageTypes </msg>
<msg timestamp="20170731 10:58:45.908" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='packageTypes' </msg>
<status status="PASS" endtime="20170731 10:58:45.911" starttime="20170731 10:58:45.908"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions</arg>
</arguments>
<msg timestamp="20170731 10:58:45.912" level="INFO">Executing : Table Must Exist  |  sessions </msg>
<msg timestamp="20170731 10:58:45.912" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sessions' </msg>
<status status="PASS" endtime="20170731 10:58:45.915" starttime="20170731 10:58:45.911"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions_history</arg>
</arguments>
<msg timestamp="20170731 10:58:45.915" level="INFO">Executing : Table Must Exist  |  sessions_history </msg>
<msg timestamp="20170731 10:58:45.915" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sessions_history' </msg>
<status status="PASS" endtime="20170731 10:58:45.919" starttime="20170731 10:58:45.915"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes</arg>
</arguments>
<msg timestamp="20170731 10:58:45.920" level="INFO">Executing : Table Must Exist  |  sharedAppTypes </msg>
<msg timestamp="20170731 10:58:45.920" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedAppTypes' </msg>
<status status="PASS" endtime="20170731 10:58:45.923" starttime="20170731 10:58:45.920"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes_history</arg>
</arguments>
<msg timestamp="20170731 10:58:45.924" level="INFO">Executing : Table Must Exist  |  sharedAppTypes_history </msg>
<msg timestamp="20170731 10:58:45.924" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedAppTypes_history' </msg>
<status status="PASS" endtime="20170731 10:58:45.929" starttime="20170731 10:58:45.923"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes</arg>
</arguments>
<msg timestamp="20170731 10:58:45.930" level="INFO">Executing : Table Must Exist  |  sharedPackageTypes </msg>
<msg timestamp="20170731 10:58:45.930" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedPackageTypes' </msg>
<status status="PASS" endtime="20170731 10:58:45.933" starttime="20170731 10:58:45.929"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes_history</arg>
</arguments>
<msg timestamp="20170731 10:58:45.933" level="INFO">Executing : Table Must Exist  |  sharedPackageTypes_history </msg>
<msg timestamp="20170731 10:58:45.933" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedPackageTypes_history' </msg>
<status status="PASS" endtime="20170731 10:58:45.939" starttime="20170731 10:58:45.933"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>statuses</arg>
</arguments>
<msg timestamp="20170731 10:58:45.940" level="INFO">Executing : Table Must Exist  |  statuses </msg>
<msg timestamp="20170731 10:58:45.940" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='statuses' </msg>
<status status="PASS" endtime="20170731 10:58:45.942" starttime="20170731 10:58:45.939"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks</arg>
</arguments>
<msg timestamp="20170731 10:58:45.943" level="INFO">Executing : Table Must Exist  |  tasks </msg>
<msg timestamp="20170731 10:58:45.943" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='tasks' </msg>
<status status="PASS" endtime="20170731 10:58:45.947" starttime="20170731 10:58:45.943"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks_history</arg>
</arguments>
<msg timestamp="20170731 10:58:45.948" level="INFO">Executing : Table Must Exist  |  tasks_history </msg>
<msg timestamp="20170731 10:58:45.948" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='tasks_history' </msg>
<status status="PASS" endtime="20170731 10:58:45.953" starttime="20170731 10:58:45.947"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces</arg>
</arguments>
<msg timestamp="20170731 10:58:45.954" level="INFO">Executing : Table Must Exist  |  traces </msg>
<msg timestamp="20170731 10:58:45.954" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='traces' </msg>
<status status="PASS" endtime="20170731 10:58:45.957" starttime="20170731 10:58:45.954"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces_history</arg>
</arguments>
<msg timestamp="20170731 10:58:45.958" level="INFO">Executing : Table Must Exist  |  traces_history </msg>
<msg timestamp="20170731 10:58:45.958" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='traces_history' </msg>
<status status="PASS" endtime="20170731 10:58:45.963" starttime="20170731 10:58:45.958"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>userRights</arg>
</arguments>
<msg timestamp="20170731 10:58:45.963" level="INFO">Executing : Table Must Exist  |  userRights </msg>
<msg timestamp="20170731 10:58:45.963" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='userRights' </msg>
<status status="PASS" endtime="20170731 10:58:45.966" starttime="20170731 10:58:45.963"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups</arg>
</arguments>
<msg timestamp="20170731 10:58:45.967" level="INFO">Executing : Table Must Exist  |  usergroups </msg>
<msg timestamp="20170731 10:58:45.967" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='usergroups' </msg>
<status status="PASS" endtime="20170731 10:58:45.969" starttime="20170731 10:58:45.966"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups_history</arg>
</arguments>
<msg timestamp="20170731 10:58:45.970" level="INFO">Executing : Table Must Exist  |  usergroups_history </msg>
<msg timestamp="20170731 10:58:45.970" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='usergroups_history' </msg>
<status status="PASS" endtime="20170731 10:58:45.974" starttime="20170731 10:58:45.969"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users</arg>
</arguments>
<msg timestamp="20170731 10:58:45.975" level="INFO">Executing : Table Must Exist  |  users </msg>
<msg timestamp="20170731 10:58:45.975" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='users' </msg>
<status status="PASS" endtime="20170731 10:58:45.977" starttime="20170731 10:58:45.974"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users_history</arg>
</arguments>
<msg timestamp="20170731 10:58:45.978" level="INFO">Executing : Table Must Exist  |  users_history </msg>
<msg timestamp="20170731 10:58:45.978" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='users_history' </msg>
<status status="PASS" endtime="20170731 10:58:45.984" starttime="20170731 10:58:45.978"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>version</arg>
</arguments>
<msg timestamp="20170731 10:58:45.985" level="INFO">Executing : Table Must Exist  |  version </msg>
<msg timestamp="20170731 10:58:45.985" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='version' </msg>
<status status="PASS" endtime="20170731 10:58:45.987" starttime="20170731 10:58:45.984"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>versions</arg>
</arguments>
<msg timestamp="20170731 10:58:45.988" level="INFO">Executing : Table Must Exist  |  versions </msg>
<msg timestamp="20170731 10:58:45.988" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='versions' </msg>
<status status="PASS" endtime="20170731 10:58:45.991" starttime="20170731 10:58:45.988"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps</arg>
</arguments>
<msg timestamp="20170731 10:58:45.992" level="INFO">Executing : Table Must Exist  |  view_apps </msg>
<msg timestamp="20170731 10:58:45.992" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps' </msg>
<status status="PASS" endtime="20170731 10:58:45.997" starttime="20170731 10:58:45.991"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps_for_offering</arg>
</arguments>
<msg timestamp="20170731 10:58:45.998" level="INFO">Executing : Table Must Exist  |  view_apps_for_offering </msg>
<msg timestamp="20170731 10:58:45.998" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps_for_offering' </msg>
<status status="PASS" endtime="20170731 10:58:46.000" starttime="20170731 10:58:45.997"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps_for_offering_with_file_sizes</arg>
</arguments>
<msg timestamp="20170731 10:58:46.001" level="INFO">Executing : Table Must Exist  |  view_apps_for_offering_with_file_sizes </msg>
<msg timestamp="20170731 10:58:46.001" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps_for_offering_with_file_sizes' </msg>
<status status="PASS" endtime="20170731 10:58:46.005" starttime="20170731 10:58:46.000"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_datas</arg>
</arguments>
<msg timestamp="20170731 10:58:46.006" level="INFO">Executing : Table Must Exist  |  view_datas </msg>
<msg timestamp="20170731 10:58:46.006" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_datas' </msg>
<status status="PASS" endtime="20170731 10:58:46.010" starttime="20170731 10:58:46.005"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_executables</arg>
</arguments>
<msg timestamp="20170731 10:58:46.012" level="INFO">Executing : Table Must Exist  |  view_executables </msg>
<msg timestamp="20170731 10:58:46.012" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_executables' </msg>
<status status="PASS" endtime="20170731 10:58:46.016" starttime="20170731 10:58:46.010"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_groups</arg>
</arguments>
<msg timestamp="20170731 10:58:46.016" level="INFO">Executing : Table Must Exist  |  view_groups </msg>
<msg timestamp="20170731 10:58:46.017" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_groups' </msg>
<status status="PASS" endtime="20170731 10:58:46.019" starttime="20170731 10:58:46.016"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts</arg>
</arguments>
<msg timestamp="20170731 10:58:46.020" level="INFO">Executing : Table Must Exist  |  view_hosts </msg>
<msg timestamp="20170731 10:58:46.020" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts' </msg>
<status status="PASS" endtime="20170731 10:58:46.025" starttime="20170731 10:58:46.019"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_deployable</arg>
</arguments>
<msg timestamp="20170731 10:58:46.025" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_deployable </msg>
<msg timestamp="20170731 10:58:46.025" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_deployable' </msg>
<status status="PASS" endtime="20170731 10:58:46.029" starttime="20170731 10:58:46.025"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_deployable_and_shared</arg>
</arguments>
<msg timestamp="20170731 10:58:46.029" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_deployable_and_shared </msg>
<msg timestamp="20170731 10:58:46.029" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_deployable_and_shared' </msg>
<status status="PASS" endtime="20170731 10:58:46.032" starttime="20170731 10:58:46.029"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_shared</arg>
</arguments>
<msg timestamp="20170731 10:58:46.033" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_shared </msg>
<msg timestamp="20170731 10:58:46.033" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_shared' </msg>
<status status="PASS" endtime="20170731 10:58:46.036" starttime="20170731 10:58:46.033"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_sessions</arg>
</arguments>
<msg timestamp="20170731 10:58:46.037" level="INFO">Executing : Table Must Exist  |  view_sessions </msg>
<msg timestamp="20170731 10:58:46.037" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_sessions' </msg>
<status status="PASS" endtime="20170731 10:58:46.040" starttime="20170731 10:58:46.037"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_sharedapptypes</arg>
</arguments>
<msg timestamp="20170731 10:58:46.040" level="INFO">Executing : Table Must Exist  |  view_sharedapptypes </msg>
<msg timestamp="20170731 10:58:46.040" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_sharedapptypes' </msg>
<status status="PASS" endtime="20170731 10:58:46.043" starttime="20170731 10:58:46.040"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_sharedpackagetypes</arg>
</arguments>
<msg timestamp="20170731 10:58:46.043" level="INFO">Executing : Table Must Exist  |  view_sharedpackagetypes </msg>
<msg timestamp="20170731 10:58:46.043" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_sharedpackagetypes' </msg>
<status status="PASS" endtime="20170731 10:58:46.045" starttime="20170731 10:58:46.043"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_tasks</arg>
</arguments>
<msg timestamp="20170731 10:58:46.046" level="INFO">Executing : Table Must Exist  |  view_tasks </msg>
<msg timestamp="20170731 10:58:46.046" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_tasks' </msg>
<status status="PASS" endtime="20170731 10:58:46.049" starttime="20170731 10:58:46.045"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_traces</arg>
</arguments>
<msg timestamp="20170731 10:58:46.049" level="INFO">Executing : Table Must Exist  |  view_traces </msg>
<msg timestamp="20170731 10:58:46.049" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_traces' </msg>
<status status="PASS" endtime="20170731 10:58:46.051" starttime="20170731 10:58:46.049"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_usergroups</arg>
</arguments>
<msg timestamp="20170731 10:58:46.052" level="INFO">Executing : Table Must Exist  |  view_usergroups </msg>
<msg timestamp="20170731 10:58:46.052" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_usergroups' </msg>
<status status="PASS" endtime="20170731 10:58:46.054" starttime="20170731 10:58:46.051"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users</arg>
</arguments>
<msg timestamp="20170731 10:58:46.055" level="INFO">Executing : Table Must Exist  |  view_users </msg>
<msg timestamp="20170731 10:58:46.055" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users' </msg>
<status status="PASS" endtime="20170731 10:58:46.058" starttime="20170731 10:58:46.055"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_apps</arg>
</arguments>
<msg timestamp="20170731 10:58:46.058" level="INFO">Executing : Table Must Exist  |  view_users_apps </msg>
<msg timestamp="20170731 10:58:46.059" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_apps' </msg>
<status status="PASS" endtime="20170731 10:58:46.061" starttime="20170731 10:58:46.058"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_datas</arg>
</arguments>
<msg timestamp="20170731 10:58:46.062" level="INFO">Executing : Table Must Exist  |  view_users_datas </msg>
<msg timestamp="20170731 10:58:46.062" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_datas' </msg>
<status status="PASS" endtime="20170731 10:58:46.064" starttime="20170731 10:58:46.062"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_groups</arg>
</arguments>
<msg timestamp="20170731 10:58:46.065" level="INFO">Executing : Table Must Exist  |  view_users_groups </msg>
<msg timestamp="20170731 10:58:46.065" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_groups' </msg>
<status status="PASS" endtime="20170731 10:58:46.068" starttime="20170731 10:58:46.065"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_hosts</arg>
</arguments>
<msg timestamp="20170731 10:58:46.068" level="INFO">Executing : Table Must Exist  |  view_users_hosts </msg>
<msg timestamp="20170731 10:58:46.068" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_hosts' </msg>
<status status="PASS" endtime="20170731 10:58:46.071" starttime="20170731 10:58:46.068"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_sessions</arg>
</arguments>
<msg timestamp="20170731 10:58:46.071" level="INFO">Executing : Table Must Exist  |  view_users_sessions </msg>
<msg timestamp="20170731 10:58:46.072" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_sessions' </msg>
<status status="PASS" endtime="20170731 10:58:46.074" starttime="20170731 10:58:46.071"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_tasks</arg>
</arguments>
<msg timestamp="20170731 10:58:46.074" level="INFO">Executing : Table Must Exist  |  view_users_tasks </msg>
<msg timestamp="20170731 10:58:46.074" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_tasks' </msg>
<status status="PASS" endtime="20170731 10:58:46.077" starttime="20170731 10:58:46.074"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_traces</arg>
</arguments>
<msg timestamp="20170731 10:58:46.077" level="INFO">Executing : Table Must Exist  |  view_users_traces </msg>
<msg timestamp="20170731 10:58:46.077" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_traces' </msg>
<status status="PASS" endtime="20170731 10:58:46.080" starttime="20170731 10:58:46.077"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_usergroups</arg>
</arguments>
<msg timestamp="20170731 10:58:46.081" level="INFO">Executing : Table Must Exist  |  view_users_usergroups </msg>
<msg timestamp="20170731 10:58:46.081" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_usergroups' </msg>
<status status="PASS" endtime="20170731 10:58:46.084" starttime="20170731 10:58:46.080"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_users</arg>
</arguments>
<msg timestamp="20170731 10:58:46.084" level="INFO">Executing : Table Must Exist  |  view_users_users </msg>
<msg timestamp="20170731 10:58:46.084" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_users' </msg>
<status status="PASS" endtime="20170731 10:58:46.087" starttime="20170731 10:58:46.084"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_works</arg>
</arguments>
<msg timestamp="20170731 10:58:46.087" level="INFO">Executing : Table Must Exist  |  view_users_works </msg>
<msg timestamp="20170731 10:58:46.087" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_works' </msg>
<status status="PASS" endtime="20170731 10:58:46.090" starttime="20170731 10:58:46.087"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works</arg>
</arguments>
<msg timestamp="20170731 10:58:46.090" level="INFO">Executing : Table Must Exist  |  view_works </msg>
<msg timestamp="20170731 10:58:46.090" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works' </msg>
<status status="PASS" endtime="20170731 10:58:46.093" starttime="20170731 10:58:46.090"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works_for_billing</arg>
</arguments>
<msg timestamp="20170731 10:58:46.093" level="INFO">Executing : Table Must Exist  |  view_works_for_billing </msg>
<msg timestamp="20170731 10:58:46.093" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works_for_billing' </msg>
<status status="PASS" endtime="20170731 10:58:46.095" starttime="20170731 10:58:46.093"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works_for_billing_with_file_sizes</arg>
</arguments>
<msg timestamp="20170731 10:58:46.096" level="INFO">Executing : Table Must Exist  |  view_works_for_billing_with_file_sizes </msg>
<msg timestamp="20170731 10:58:46.096" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works_for_billing_with_file_sizes' </msg>
<status status="PASS" endtime="20170731 10:58:46.098" starttime="20170731 10:58:46.095"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works</arg>
</arguments>
<msg timestamp="20170731 10:58:46.099" level="INFO">Executing : Table Must Exist  |  works </msg>
<msg timestamp="20170731 10:58:46.099" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='works' </msg>
<status status="PASS" endtime="20170731 10:58:46.101" starttime="20170731 10:58:46.099"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works_history</arg>
</arguments>
<msg timestamp="20170731 10:58:46.101" level="INFO">Executing : Table Must Exist  |  works_history </msg>
<msg timestamp="20170731 10:58:46.101" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='works_history' </msg>
<status status="PASS" endtime="20170731 10:58:46.105" starttime="20170731 10:58:46.101"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170731 10:58:46.106" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170731 10:58:46.106" starttime="20170731 10:58:46.106"></status>
</kw>
<status status="PASS" endtime="20170731 10:58:46.106" starttime="20170731 10:58:46.105"></status>
</kw>
<status status="PASS" endtime="20170731 10:58:46.106" starttime="20170731 10:58:45.712"></status>
</kw>
<status status="PASS" endtime="20170731 10:58:46.106" starttime="20170731 10:58:45.711"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>TODO ping XWtremWeb server up</arg>
</arguments>
<msg timestamp="20170731 10:58:46.107" level="INFO">TODO ping XWtremWeb server up</msg>
<status status="PASS" endtime="20170731 10:58:46.107" starttime="20170731 10:58:46.107"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>TODO ping XWtremWeb worker up before one test</arg>
</arguments>
<msg timestamp="20170731 10:58:46.108" level="INFO">TODO ping XWtremWeb worker up before one test</msg>
<status status="PASS" endtime="20170731 10:58:46.108" starttime="20170731 10:58:46.107"></status>
</kw>
<kw name="Delete Fonctionnal Xtremweb Tables" library="MySql">
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170731 10:58:46.110" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170731 10:58:46.112" starttime="20170731 10:58:46.109"></status>
</kw>
<status status="PASS" endtime="20170731 10:58:46.112" starttime="20170731 10:58:46.108"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps</arg>
</arguments>
<msg timestamp="20170731 10:58:46.112" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM apps; </msg>
<status status="PASS" endtime="20170731 10:58:46.114" starttime="20170731 10:58:46.112"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps_history</arg>
</arguments>
<msg timestamp="20170731 10:58:46.116" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM apps_history; </msg>
<status status="PASS" endtime="20170731 10:58:46.118" starttime="20170731 10:58:46.114"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas</arg>
</arguments>
<msg timestamp="20170731 10:58:46.119" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM datas; </msg>
<status status="PASS" endtime="20170731 10:58:46.120" starttime="20170731 10:58:46.118"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas_history</arg>
</arguments>
<msg timestamp="20170731 10:58:46.120" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM datas_history; </msg>
<status status="PASS" endtime="20170731 10:58:46.121" starttime="20170731 10:58:46.120"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables</arg>
</arguments>
<msg timestamp="20170731 10:58:46.122" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM executables; </msg>
<status status="PASS" endtime="20170731 10:58:46.123" starttime="20170731 10:58:46.122"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables_history</arg>
</arguments>
<msg timestamp="20170731 10:58:46.123" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM executables_history; </msg>
<status status="PASS" endtime="20170731 10:58:46.124" starttime="20170731 10:58:46.123"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups</arg>
</arguments>
<msg timestamp="20170731 10:58:46.124" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM groups; </msg>
<status status="PASS" endtime="20170731 10:58:46.125" starttime="20170731 10:58:46.124"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups_history</arg>
</arguments>
<msg timestamp="20170731 10:58:46.125" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM groups_history; </msg>
<status status="PASS" endtime="20170731 10:58:46.126" starttime="20170731 10:58:46.125"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts</arg>
</arguments>
<msg timestamp="20170731 10:58:46.126" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM hosts; </msg>
<status status="PASS" endtime="20170731 10:58:46.127" starttime="20170731 10:58:46.126"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts_history</arg>
</arguments>
<msg timestamp="20170731 10:58:46.128" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM hosts_history; </msg>
<status status="PASS" endtime="20170731 10:58:46.130" starttime="20170731 10:58:46.128"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships</arg>
</arguments>
<msg timestamp="20170731 10:58:46.131" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM memberships; </msg>
<status status="PASS" endtime="20170731 10:58:46.132" starttime="20170731 10:58:46.131"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships_history</arg>
</arguments>
<msg timestamp="20170731 10:58:46.133" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM memberships_history; </msg>
<status status="PASS" endtime="20170731 10:58:46.133" starttime="20170731 10:58:46.132"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions</arg>
</arguments>
<msg timestamp="20170731 10:58:46.134" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sessions; </msg>
<status status="PASS" endtime="20170731 10:58:46.135" starttime="20170731 10:58:46.134"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions_history</arg>
</arguments>
<msg timestamp="20170731 10:58:46.136" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sessions_history; </msg>
<status status="PASS" endtime="20170731 10:58:46.137" starttime="20170731 10:58:46.135"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes</arg>
</arguments>
<msg timestamp="20170731 10:58:46.138" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedAppTypes; </msg>
<status status="PASS" endtime="20170731 10:58:46.138" starttime="20170731 10:58:46.137"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes_history</arg>
</arguments>
<msg timestamp="20170731 10:58:46.139" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedAppTypes_history; </msg>
<status status="PASS" endtime="20170731 10:58:46.140" starttime="20170731 10:58:46.139"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes</arg>
</arguments>
<msg timestamp="20170731 10:58:46.141" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedPackageTypes; </msg>
<status status="PASS" endtime="20170731 10:58:46.141" starttime="20170731 10:58:46.140"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes_history</arg>
</arguments>
<msg timestamp="20170731 10:58:46.142" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedPackageTypes_history; </msg>
<status status="PASS" endtime="20170731 10:58:46.143" starttime="20170731 10:58:46.142"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks</arg>
</arguments>
<msg timestamp="20170731 10:58:46.143" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM tasks; </msg>
<status status="PASS" endtime="20170731 10:58:46.144" starttime="20170731 10:58:46.143"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks_history</arg>
</arguments>
<msg timestamp="20170731 10:58:46.145" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM tasks_history; </msg>
<status status="PASS" endtime="20170731 10:58:46.146" starttime="20170731 10:58:46.144"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces</arg>
</arguments>
<msg timestamp="20170731 10:58:46.146" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM traces; </msg>
<status status="PASS" endtime="20170731 10:58:46.147" starttime="20170731 10:58:46.146"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces_history</arg>
</arguments>
<msg timestamp="20170731 10:58:46.148" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM traces_history; </msg>
<status status="PASS" endtime="20170731 10:58:46.149" starttime="20170731 10:58:46.148"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups</arg>
</arguments>
<msg timestamp="20170731 10:58:46.149" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM usergroups; </msg>
<status status="PASS" endtime="20170731 10:58:46.150" starttime="20170731 10:58:46.149"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups_history</arg>
</arguments>
<msg timestamp="20170731 10:58:46.151" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM usergroups_history; </msg>
<status status="PASS" endtime="20170731 10:58:46.152" starttime="20170731 10:58:46.151"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users_history</arg>
</arguments>
<msg timestamp="20170731 10:58:46.152" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM users_history; </msg>
<status status="PASS" endtime="20170731 10:58:46.153" starttime="20170731 10:58:46.152"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works</arg>
</arguments>
<msg timestamp="20170731 10:58:46.154" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM works; </msg>
<status status="PASS" endtime="20170731 10:58:46.155" starttime="20170731 10:58:46.154"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works_history</arg>
</arguments>
<msg timestamp="20170731 10:58:46.155" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM works_history; </msg>
<status status="PASS" endtime="20170731 10:58:46.156" starttime="20170731 10:58:46.155"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170731 10:58:46.157" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170731 10:58:46.157" starttime="20170731 10:58:46.157"></status>
</kw>
<status status="PASS" endtime="20170731 10:58:46.157" starttime="20170731 10:58:46.156"></status>
</kw>
<status status="PASS" endtime="20170731 10:58:46.157" starttime="20170731 10:58:46.108"></status>
</kw>
<status status="PASS" endtime="20170731 10:58:46.157" starttime="20170731 10:58:45.711"></status>
</kw>
<kw name="XWSENDDATACommand">
<doc>Usage : SENDDATA dataName [cpuType] [osName] [dataType] [accessRigths] [dataFile | dataURI | dataUID] : sends data and uploads data if dataFile provided</doc>
<arguments>
<arg>ls</arg>
<arg>macosx</arg>
<arg>x86_64</arg>
<arg>binary</arg>
<arg>/bin/ls</arg>
</arguments>
<assign>
<var>${uid}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd ${DIST_XWHEP_PATH}/bin &amp;&amp; ./xwsenddata ${dataName} ${osName} ${cpuType} ${dataType} ${dataFile-dataURI-dataUID}</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${cmd_result}</var>
</assign>
<msg timestamp="20170731 10:58:46.159" level="INFO">Starting process:
cd /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/bin &amp;&amp; ./xwsenddata ls macosx x86_64 binary /bin/ls</msg>
<msg timestamp="20170731 10:58:46.167" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170731 10:58:48.368" level="INFO">Process completed.</msg>
<msg timestamp="20170731 10:58:48.369" level="INFO">${cmd_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170731 10:58:48.369" starttime="20170731 10:58:46.158"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stderr}</arg>
</arguments>
<msg timestamp="20170731 10:58:48.370" level="INFO"></msg>
<status status="PASS" endtime="20170731 10:58:48.370" starttime="20170731 10:58:48.370"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
</arguments>
<msg timestamp="20170731 10:58:48.370" level="INFO">xw://MacBook-Pro-de-francoisbranciard.local/6fa21bb6-2d63-4bef-9830-44346ad9f4bc</msg>
<status status="PASS" endtime="20170731 10:58:48.371" starttime="20170731 10:58:48.370"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${cmd_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170731 10:58:48.371" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170731 10:58:48.371" starttime="20170731 10:58:48.371"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
<arg>-36</arg>
</arguments>
<assign>
<var>${uid}</var>
</assign>
<msg timestamp="20170731 10:58:48.372" level="INFO">${uid} = 6fa21bb6-2d63-4bef-9830-44346ad9f4bc</msg>
<status status="PASS" endtime="20170731 10:58:48.372" starttime="20170731 10:58:48.371"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${uid}</arg>
</arguments>
<msg timestamp="20170731 10:58:48.372" level="INFO">6fa21bb6-2d63-4bef-9830-44346ad9f4bc</msg>
<status status="PASS" endtime="20170731 10:58:48.372" starttime="20170731 10:58:48.372"></status>
</kw>
<msg timestamp="20170731 10:58:48.372" level="INFO">${uid} = 6fa21bb6-2d63-4bef-9830-44346ad9f4bc</msg>
<status status="PASS" endtime="20170731 10:58:48.372" starttime="20170731 10:58:46.158"></status>
</kw>
<kw name="Count From Datas Where Uid" library="XWServer">
<arguments>
<arg>${uid}</arg>
<arg>1</arg>
</arguments>
<kw name="Count From Table Where Uid" library="MySql">
<arguments>
<arg>datas</arg>
<arg>${uid}</arg>
<arg>${countExpected}</arg>
</arguments>
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170731 10:58:48.375" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170731 10:58:48.378" starttime="20170731 10:58:48.374"></status>
</kw>
<status status="PASS" endtime="20170731 10:58:48.378" starttime="20170731 10:58:48.374"></status>
</kw>
<kw name="Row Count Is Equal To X" library="DatabaseLibrary">
<doc>Check if the number of rows returned from `selectStatement` is equal to the value submitted. If not, then this</doc>
<arguments>
<arg>SELECT * FROM ${table} WHERE uid = '${uid}'</arg>
<arg>${countExpected}</arg>
</arguments>
<msg timestamp="20170731 10:58:48.379" level="INFO">Executing : Row Count Is Equal To X  |  SELECT * FROM datas WHERE uid = '6fa21bb6-2d63-4bef-9830-44346ad9f4bc'  |  1 </msg>
<msg timestamp="20170731 10:58:48.379" level="INFO">Executing : Row Count  |  SELECT * FROM datas WHERE uid = '6fa21bb6-2d63-4bef-9830-44346ad9f4bc' </msg>
<status status="PASS" endtime="20170731 10:58:48.380" starttime="20170731 10:58:48.378"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170731 10:58:48.381" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170731 10:58:48.381" starttime="20170731 10:58:48.381"></status>
</kw>
<status status="PASS" endtime="20170731 10:58:48.381" starttime="20170731 10:58:48.380"></status>
</kw>
<status status="PASS" endtime="20170731 10:58:48.381" starttime="20170731 10:58:48.373"></status>
</kw>
<status status="PASS" endtime="20170731 10:58:48.381" starttime="20170731 10:58:48.373"></status>
</kw>
<kw type="teardown" name="End XWtremWeb Command Test" library="XWCommon">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Nothing to do</arg>
</arguments>
<msg timestamp="20170731 10:58:48.383" level="INFO">Nothing to do</msg>
<status status="PASS" endtime="20170731 10:58:48.383" starttime="20170731 10:58:48.383"></status>
</kw>
<status status="PASS" endtime="20170731 10:58:48.383" starttime="20170731 10:58:48.382"></status>
</kw>
<doc>Envoyer des données avec la commande senddata</doc>
<tags>
<tag>CommandLine Tests</tag>
</tags>
<status status="PASS" endtime="20170731 10:58:48.383" critical="yes" starttime="20170731 10:58:45.710"></status>
</test>
<test id="s1-s3-t2" name="Test 1.1 Enregistrer l’application">
<kw type="setup" name="Begin XWtremWeb Command Test" library="XWCommon">
<kw name="Ping XWtremWeb Database" library="XWServer">
<kw name="Xtremweb Tables Must Exist" library="MySql">
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170731 10:58:48.390" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170731 10:58:48.392" starttime="20170731 10:58:48.389"></status>
</kw>
<status status="PASS" endtime="20170731 10:58:48.392" starttime="20170731 10:58:48.389"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>appTypes</arg>
</arguments>
<msg timestamp="20170731 10:58:48.392" level="INFO">Executing : Table Must Exist  |  appTypes </msg>
<msg timestamp="20170731 10:58:48.393" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='appTypes' </msg>
<status status="PASS" endtime="20170731 10:58:48.395" starttime="20170731 10:58:48.392"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps</arg>
</arguments>
<msg timestamp="20170731 10:58:48.396" level="INFO">Executing : Table Must Exist  |  apps </msg>
<msg timestamp="20170731 10:58:48.396" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='apps' </msg>
<status status="PASS" endtime="20170731 10:58:48.398" starttime="20170731 10:58:48.395"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps_history</arg>
</arguments>
<msg timestamp="20170731 10:58:48.398" level="INFO">Executing : Table Must Exist  |  apps_history </msg>
<msg timestamp="20170731 10:58:48.399" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='apps_history' </msg>
<status status="PASS" endtime="20170731 10:58:48.402" starttime="20170731 10:58:48.398"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>cpuTypes</arg>
</arguments>
<msg timestamp="20170731 10:58:48.402" level="INFO">Executing : Table Must Exist  |  cpuTypes </msg>
<msg timestamp="20170731 10:58:48.402" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='cpuTypes' </msg>
<status status="PASS" endtime="20170731 10:58:48.404" starttime="20170731 10:58:48.402"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>dataTypes</arg>
</arguments>
<msg timestamp="20170731 10:58:48.404" level="INFO">Executing : Table Must Exist  |  dataTypes </msg>
<msg timestamp="20170731 10:58:48.404" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='dataTypes' </msg>
<status status="PASS" endtime="20170731 10:58:48.407" starttime="20170731 10:58:48.404"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas</arg>
</arguments>
<msg timestamp="20170731 10:58:48.408" level="INFO">Executing : Table Must Exist  |  datas </msg>
<msg timestamp="20170731 10:58:48.408" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='datas' </msg>
<status status="PASS" endtime="20170731 10:58:48.411" starttime="20170731 10:58:48.408"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas_history</arg>
</arguments>
<msg timestamp="20170731 10:58:48.412" level="INFO">Executing : Table Must Exist  |  datas_history </msg>
<msg timestamp="20170731 10:58:48.412" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='datas_history' </msg>
<status status="PASS" endtime="20170731 10:58:48.415" starttime="20170731 10:58:48.412"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables</arg>
</arguments>
<msg timestamp="20170731 10:58:48.415" level="INFO">Executing : Table Must Exist  |  executables </msg>
<msg timestamp="20170731 10:58:48.415" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='executables' </msg>
<status status="PASS" endtime="20170731 10:58:48.417" starttime="20170731 10:58:48.415"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables_history</arg>
</arguments>
<msg timestamp="20170731 10:58:48.418" level="INFO">Executing : Table Must Exist  |  executables_history </msg>
<msg timestamp="20170731 10:58:48.418" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='executables_history' </msg>
<status status="PASS" endtime="20170731 10:58:48.420" starttime="20170731 10:58:48.418"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups</arg>
</arguments>
<msg timestamp="20170731 10:58:48.420" level="INFO">Executing : Table Must Exist  |  groups </msg>
<msg timestamp="20170731 10:58:48.420" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='groups' </msg>
<status status="PASS" endtime="20170731 10:58:48.422" starttime="20170731 10:58:48.420"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups_history</arg>
</arguments>
<msg timestamp="20170731 10:58:48.424" level="INFO">Executing : Table Must Exist  |  groups_history </msg>
<msg timestamp="20170731 10:58:48.424" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='groups_history' </msg>
<status status="PASS" endtime="20170731 10:58:48.427" starttime="20170731 10:58:48.423"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts</arg>
</arguments>
<msg timestamp="20170731 10:58:48.428" level="INFO">Executing : Table Must Exist  |  hosts </msg>
<msg timestamp="20170731 10:58:48.428" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='hosts' </msg>
<status status="PASS" endtime="20170731 10:58:48.431" starttime="20170731 10:58:48.428"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts_history</arg>
</arguments>
<msg timestamp="20170731 10:58:48.431" level="INFO">Executing : Table Must Exist  |  hosts_history </msg>
<msg timestamp="20170731 10:58:48.432" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='hosts_history' </msg>
<status status="PASS" endtime="20170731 10:58:48.434" starttime="20170731 10:58:48.431"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships</arg>
</arguments>
<msg timestamp="20170731 10:58:48.435" level="INFO">Executing : Table Must Exist  |  memberships </msg>
<msg timestamp="20170731 10:58:48.435" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='memberships' </msg>
<status status="PASS" endtime="20170731 10:58:48.436" starttime="20170731 10:58:48.435"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships_history</arg>
</arguments>
<msg timestamp="20170731 10:58:48.437" level="INFO">Executing : Table Must Exist  |  memberships_history </msg>
<msg timestamp="20170731 10:58:48.437" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='memberships_history' </msg>
<status status="PASS" endtime="20170731 10:58:48.438" starttime="20170731 10:58:48.437"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>oses</arg>
</arguments>
<msg timestamp="20170731 10:58:48.439" level="INFO">Executing : Table Must Exist  |  oses </msg>
<msg timestamp="20170731 10:58:48.439" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='oses' </msg>
<status status="PASS" endtime="20170731 10:58:48.440" starttime="20170731 10:58:48.439"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>packageTypes</arg>
</arguments>
<msg timestamp="20170731 10:58:48.441" level="INFO">Executing : Table Must Exist  |  packageTypes </msg>
<msg timestamp="20170731 10:58:48.441" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='packageTypes' </msg>
<status status="PASS" endtime="20170731 10:58:48.442" starttime="20170731 10:58:48.440"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions</arg>
</arguments>
<msg timestamp="20170731 10:58:48.442" level="INFO">Executing : Table Must Exist  |  sessions </msg>
<msg timestamp="20170731 10:58:48.442" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sessions' </msg>
<status status="PASS" endtime="20170731 10:58:48.444" starttime="20170731 10:58:48.442"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions_history</arg>
</arguments>
<msg timestamp="20170731 10:58:48.444" level="INFO">Executing : Table Must Exist  |  sessions_history </msg>
<msg timestamp="20170731 10:58:48.444" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sessions_history' </msg>
<status status="PASS" endtime="20170731 10:58:48.446" starttime="20170731 10:58:48.444"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes</arg>
</arguments>
<msg timestamp="20170731 10:58:48.446" level="INFO">Executing : Table Must Exist  |  sharedAppTypes </msg>
<msg timestamp="20170731 10:58:48.446" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedAppTypes' </msg>
<status status="PASS" endtime="20170731 10:58:48.447" starttime="20170731 10:58:48.446"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes_history</arg>
</arguments>
<msg timestamp="20170731 10:58:48.448" level="INFO">Executing : Table Must Exist  |  sharedAppTypes_history </msg>
<msg timestamp="20170731 10:58:48.448" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedAppTypes_history' </msg>
<status status="PASS" endtime="20170731 10:58:48.449" starttime="20170731 10:58:48.447"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes</arg>
</arguments>
<msg timestamp="20170731 10:58:48.450" level="INFO">Executing : Table Must Exist  |  sharedPackageTypes </msg>
<msg timestamp="20170731 10:58:48.450" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedPackageTypes' </msg>
<status status="PASS" endtime="20170731 10:58:48.451" starttime="20170731 10:58:48.449"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes_history</arg>
</arguments>
<msg timestamp="20170731 10:58:48.452" level="INFO">Executing : Table Must Exist  |  sharedPackageTypes_history </msg>
<msg timestamp="20170731 10:58:48.452" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedPackageTypes_history' </msg>
<status status="PASS" endtime="20170731 10:58:48.453" starttime="20170731 10:58:48.451"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>statuses</arg>
</arguments>
<msg timestamp="20170731 10:58:48.453" level="INFO">Executing : Table Must Exist  |  statuses </msg>
<msg timestamp="20170731 10:58:48.454" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='statuses' </msg>
<status status="PASS" endtime="20170731 10:58:48.455" starttime="20170731 10:58:48.453"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks</arg>
</arguments>
<msg timestamp="20170731 10:58:48.455" level="INFO">Executing : Table Must Exist  |  tasks </msg>
<msg timestamp="20170731 10:58:48.455" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='tasks' </msg>
<status status="PASS" endtime="20170731 10:58:48.457" starttime="20170731 10:58:48.455"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks_history</arg>
</arguments>
<msg timestamp="20170731 10:58:48.458" level="INFO">Executing : Table Must Exist  |  tasks_history </msg>
<msg timestamp="20170731 10:58:48.458" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='tasks_history' </msg>
<status status="PASS" endtime="20170731 10:58:48.460" starttime="20170731 10:58:48.458"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces</arg>
</arguments>
<msg timestamp="20170731 10:58:48.461" level="INFO">Executing : Table Must Exist  |  traces </msg>
<msg timestamp="20170731 10:58:48.461" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='traces' </msg>
<status status="PASS" endtime="20170731 10:58:48.462" starttime="20170731 10:58:48.460"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces_history</arg>
</arguments>
<msg timestamp="20170731 10:58:48.463" level="INFO">Executing : Table Must Exist  |  traces_history </msg>
<msg timestamp="20170731 10:58:48.463" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='traces_history' </msg>
<status status="PASS" endtime="20170731 10:58:48.465" starttime="20170731 10:58:48.463"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>userRights</arg>
</arguments>
<msg timestamp="20170731 10:58:48.465" level="INFO">Executing : Table Must Exist  |  userRights </msg>
<msg timestamp="20170731 10:58:48.465" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='userRights' </msg>
<status status="PASS" endtime="20170731 10:58:48.619" starttime="20170731 10:58:48.465"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups</arg>
</arguments>
<msg timestamp="20170731 10:58:48.620" level="INFO">Executing : Table Must Exist  |  usergroups </msg>
<msg timestamp="20170731 10:58:48.620" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='usergroups' </msg>
<status status="PASS" endtime="20170731 10:58:48.622" starttime="20170731 10:58:48.619"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups_history</arg>
</arguments>
<msg timestamp="20170731 10:58:48.622" level="INFO">Executing : Table Must Exist  |  usergroups_history </msg>
<msg timestamp="20170731 10:58:48.623" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='usergroups_history' </msg>
<status status="PASS" endtime="20170731 10:58:48.624" starttime="20170731 10:58:48.622"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users</arg>
</arguments>
<msg timestamp="20170731 10:58:48.625" level="INFO">Executing : Table Must Exist  |  users </msg>
<msg timestamp="20170731 10:58:48.625" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='users' </msg>
<status status="PASS" endtime="20170731 10:58:48.626" starttime="20170731 10:58:48.624"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users_history</arg>
</arguments>
<msg timestamp="20170731 10:58:48.627" level="INFO">Executing : Table Must Exist  |  users_history </msg>
<msg timestamp="20170731 10:58:48.627" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='users_history' </msg>
<status status="PASS" endtime="20170731 10:58:48.629" starttime="20170731 10:58:48.626"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>version</arg>
</arguments>
<msg timestamp="20170731 10:58:48.629" level="INFO">Executing : Table Must Exist  |  version </msg>
<msg timestamp="20170731 10:58:48.629" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='version' </msg>
<status status="PASS" endtime="20170731 10:58:48.631" starttime="20170731 10:58:48.629"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>versions</arg>
</arguments>
<msg timestamp="20170731 10:58:48.631" level="INFO">Executing : Table Must Exist  |  versions </msg>
<msg timestamp="20170731 10:58:48.631" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='versions' </msg>
<status status="PASS" endtime="20170731 10:58:48.633" starttime="20170731 10:58:48.631"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps</arg>
</arguments>
<msg timestamp="20170731 10:58:48.633" level="INFO">Executing : Table Must Exist  |  view_apps </msg>
<msg timestamp="20170731 10:58:48.633" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps' </msg>
<status status="PASS" endtime="20170731 10:58:48.635" starttime="20170731 10:58:48.633"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps_for_offering</arg>
</arguments>
<msg timestamp="20170731 10:58:48.635" level="INFO">Executing : Table Must Exist  |  view_apps_for_offering </msg>
<msg timestamp="20170731 10:58:48.635" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps_for_offering' </msg>
<status status="PASS" endtime="20170731 10:58:48.637" starttime="20170731 10:58:48.635"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps_for_offering_with_file_sizes</arg>
</arguments>
<msg timestamp="20170731 10:58:48.637" level="INFO">Executing : Table Must Exist  |  view_apps_for_offering_with_file_sizes </msg>
<msg timestamp="20170731 10:58:48.637" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps_for_offering_with_file_sizes' </msg>
<status status="PASS" endtime="20170731 10:58:48.640" starttime="20170731 10:58:48.637"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_datas</arg>
</arguments>
<msg timestamp="20170731 10:58:48.640" level="INFO">Executing : Table Must Exist  |  view_datas </msg>
<msg timestamp="20170731 10:58:48.641" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_datas' </msg>
<status status="PASS" endtime="20170731 10:58:48.642" starttime="20170731 10:58:48.640"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_executables</arg>
</arguments>
<msg timestamp="20170731 10:58:48.642" level="INFO">Executing : Table Must Exist  |  view_executables </msg>
<msg timestamp="20170731 10:58:48.642" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_executables' </msg>
<status status="PASS" endtime="20170731 10:58:48.644" starttime="20170731 10:58:48.642"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_groups</arg>
</arguments>
<msg timestamp="20170731 10:58:48.644" level="INFO">Executing : Table Must Exist  |  view_groups </msg>
<msg timestamp="20170731 10:58:48.644" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_groups' </msg>
<status status="PASS" endtime="20170731 10:58:48.646" starttime="20170731 10:58:48.644"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts</arg>
</arguments>
<msg timestamp="20170731 10:58:48.646" level="INFO">Executing : Table Must Exist  |  view_hosts </msg>
<msg timestamp="20170731 10:58:48.646" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts' </msg>
<status status="PASS" endtime="20170731 10:58:48.648" starttime="20170731 10:58:48.646"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_deployable</arg>
</arguments>
<msg timestamp="20170731 10:58:48.648" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_deployable </msg>
<msg timestamp="20170731 10:58:48.648" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_deployable' </msg>
<status status="PASS" endtime="20170731 10:58:48.650" starttime="20170731 10:58:48.648"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_deployable_and_shared</arg>
</arguments>
<msg timestamp="20170731 10:58:48.650" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_deployable_and_shared </msg>
<msg timestamp="20170731 10:58:48.650" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_deployable_and_shared' </msg>
<status status="PASS" endtime="20170731 10:58:48.652" starttime="20170731 10:58:48.650"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_shared</arg>
</arguments>
<msg timestamp="20170731 10:58:48.652" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_shared </msg>
<msg timestamp="20170731 10:58:48.653" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_shared' </msg>
<status status="PASS" endtime="20170731 10:58:48.654" starttime="20170731 10:58:48.652"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_sessions</arg>
</arguments>
<msg timestamp="20170731 10:58:48.655" level="INFO">Executing : Table Must Exist  |  view_sessions </msg>
<msg timestamp="20170731 10:58:48.655" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_sessions' </msg>
<status status="PASS" endtime="20170731 10:58:48.656" starttime="20170731 10:58:48.654"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_sharedapptypes</arg>
</arguments>
<msg timestamp="20170731 10:58:48.656" level="INFO">Executing : Table Must Exist  |  view_sharedapptypes </msg>
<msg timestamp="20170731 10:58:48.656" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_sharedapptypes' </msg>
<status status="PASS" endtime="20170731 10:58:48.658" starttime="20170731 10:58:48.656"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_sharedpackagetypes</arg>
</arguments>
<msg timestamp="20170731 10:58:48.658" level="INFO">Executing : Table Must Exist  |  view_sharedpackagetypes </msg>
<msg timestamp="20170731 10:58:48.659" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_sharedpackagetypes' </msg>
<status status="PASS" endtime="20170731 10:58:48.660" starttime="20170731 10:58:48.658"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_tasks</arg>
</arguments>
<msg timestamp="20170731 10:58:48.660" level="INFO">Executing : Table Must Exist  |  view_tasks </msg>
<msg timestamp="20170731 10:58:48.660" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_tasks' </msg>
<status status="PASS" endtime="20170731 10:58:48.662" starttime="20170731 10:58:48.660"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_traces</arg>
</arguments>
<msg timestamp="20170731 10:58:48.663" level="INFO">Executing : Table Must Exist  |  view_traces </msg>
<msg timestamp="20170731 10:58:48.663" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_traces' </msg>
<status status="PASS" endtime="20170731 10:58:48.665" starttime="20170731 10:58:48.663"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_usergroups</arg>
</arguments>
<msg timestamp="20170731 10:58:48.666" level="INFO">Executing : Table Must Exist  |  view_usergroups </msg>
<msg timestamp="20170731 10:58:48.666" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_usergroups' </msg>
<status status="PASS" endtime="20170731 10:58:48.667" starttime="20170731 10:58:48.665"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users</arg>
</arguments>
<msg timestamp="20170731 10:58:48.668" level="INFO">Executing : Table Must Exist  |  view_users </msg>
<msg timestamp="20170731 10:58:48.668" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users' </msg>
<status status="PASS" endtime="20170731 10:58:48.669" starttime="20170731 10:58:48.668"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_apps</arg>
</arguments>
<msg timestamp="20170731 10:58:48.670" level="INFO">Executing : Table Must Exist  |  view_users_apps </msg>
<msg timestamp="20170731 10:58:48.670" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_apps' </msg>
<status status="PASS" endtime="20170731 10:58:48.671" starttime="20170731 10:58:48.670"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_datas</arg>
</arguments>
<msg timestamp="20170731 10:58:48.672" level="INFO">Executing : Table Must Exist  |  view_users_datas </msg>
<msg timestamp="20170731 10:58:48.672" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_datas' </msg>
<status status="PASS" endtime="20170731 10:58:48.674" starttime="20170731 10:58:48.672"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_groups</arg>
</arguments>
<msg timestamp="20170731 10:58:48.674" level="INFO">Executing : Table Must Exist  |  view_users_groups </msg>
<msg timestamp="20170731 10:58:48.674" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_groups' </msg>
<status status="PASS" endtime="20170731 10:58:48.676" starttime="20170731 10:58:48.674"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_hosts</arg>
</arguments>
<msg timestamp="20170731 10:58:48.676" level="INFO">Executing : Table Must Exist  |  view_users_hosts </msg>
<msg timestamp="20170731 10:58:48.676" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_hosts' </msg>
<status status="PASS" endtime="20170731 10:58:48.678" starttime="20170731 10:58:48.676"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_sessions</arg>
</arguments>
<msg timestamp="20170731 10:58:48.678" level="INFO">Executing : Table Must Exist  |  view_users_sessions </msg>
<msg timestamp="20170731 10:58:48.678" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_sessions' </msg>
<status status="PASS" endtime="20170731 10:58:48.680" starttime="20170731 10:58:48.678"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_tasks</arg>
</arguments>
<msg timestamp="20170731 10:58:48.680" level="INFO">Executing : Table Must Exist  |  view_users_tasks </msg>
<msg timestamp="20170731 10:58:48.680" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_tasks' </msg>
<status status="PASS" endtime="20170731 10:58:48.682" starttime="20170731 10:58:48.680"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_traces</arg>
</arguments>
<msg timestamp="20170731 10:58:48.682" level="INFO">Executing : Table Must Exist  |  view_users_traces </msg>
<msg timestamp="20170731 10:58:48.682" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_traces' </msg>
<status status="PASS" endtime="20170731 10:58:48.684" starttime="20170731 10:58:48.682"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_usergroups</arg>
</arguments>
<msg timestamp="20170731 10:58:48.685" level="INFO">Executing : Table Must Exist  |  view_users_usergroups </msg>
<msg timestamp="20170731 10:58:48.685" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_usergroups' </msg>
<status status="PASS" endtime="20170731 10:58:48.686" starttime="20170731 10:58:48.684"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_users</arg>
</arguments>
<msg timestamp="20170731 10:58:48.686" level="INFO">Executing : Table Must Exist  |  view_users_users </msg>
<msg timestamp="20170731 10:58:48.687" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_users' </msg>
<status status="PASS" endtime="20170731 10:58:48.688" starttime="20170731 10:58:48.686"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_works</arg>
</arguments>
<msg timestamp="20170731 10:58:48.689" level="INFO">Executing : Table Must Exist  |  view_users_works </msg>
<msg timestamp="20170731 10:58:48.689" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_works' </msg>
<status status="PASS" endtime="20170731 10:58:48.691" starttime="20170731 10:58:48.689"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works</arg>
</arguments>
<msg timestamp="20170731 10:58:48.691" level="INFO">Executing : Table Must Exist  |  view_works </msg>
<msg timestamp="20170731 10:58:48.691" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works' </msg>
<status status="PASS" endtime="20170731 10:58:48.693" starttime="20170731 10:58:48.691"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works_for_billing</arg>
</arguments>
<msg timestamp="20170731 10:58:48.693" level="INFO">Executing : Table Must Exist  |  view_works_for_billing </msg>
<msg timestamp="20170731 10:58:48.693" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works_for_billing' </msg>
<status status="PASS" endtime="20170731 10:58:48.695" starttime="20170731 10:58:48.693"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works_for_billing_with_file_sizes</arg>
</arguments>
<msg timestamp="20170731 10:58:48.695" level="INFO">Executing : Table Must Exist  |  view_works_for_billing_with_file_sizes </msg>
<msg timestamp="20170731 10:58:48.695" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works_for_billing_with_file_sizes' </msg>
<status status="PASS" endtime="20170731 10:58:48.697" starttime="20170731 10:58:48.695"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works</arg>
</arguments>
<msg timestamp="20170731 10:58:48.697" level="INFO">Executing : Table Must Exist  |  works </msg>
<msg timestamp="20170731 10:58:48.697" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='works' </msg>
<status status="PASS" endtime="20170731 10:58:48.698" starttime="20170731 10:58:48.697"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works_history</arg>
</arguments>
<msg timestamp="20170731 10:58:48.699" level="INFO">Executing : Table Must Exist  |  works_history </msg>
<msg timestamp="20170731 10:58:48.699" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='works_history' </msg>
<status status="PASS" endtime="20170731 10:58:48.700" starttime="20170731 10:58:48.698"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170731 10:58:48.701" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170731 10:58:48.701" starttime="20170731 10:58:48.701"></status>
</kw>
<status status="PASS" endtime="20170731 10:58:48.701" starttime="20170731 10:58:48.701"></status>
</kw>
<status status="PASS" endtime="20170731 10:58:48.701" starttime="20170731 10:58:48.388"></status>
</kw>
<status status="PASS" endtime="20170731 10:58:48.702" starttime="20170731 10:58:48.388"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>TODO ping XWtremWeb server up</arg>
</arguments>
<msg timestamp="20170731 10:58:48.702" level="INFO">TODO ping XWtremWeb server up</msg>
<status status="PASS" endtime="20170731 10:58:48.702" starttime="20170731 10:58:48.702"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>TODO ping XWtremWeb worker up before one test</arg>
</arguments>
<msg timestamp="20170731 10:58:48.702" level="INFO">TODO ping XWtremWeb worker up before one test</msg>
<status status="PASS" endtime="20170731 10:58:48.702" starttime="20170731 10:58:48.702"></status>
</kw>
<kw name="Delete Fonctionnal Xtremweb Tables" library="MySql">
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170731 10:58:48.703" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170731 10:58:48.705" starttime="20170731 10:58:48.703"></status>
</kw>
<status status="PASS" endtime="20170731 10:58:48.705" starttime="20170731 10:58:48.703"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps</arg>
</arguments>
<msg timestamp="20170731 10:58:48.706" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM apps; </msg>
<status status="PASS" endtime="20170731 10:58:48.709" starttime="20170731 10:58:48.706"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps_history</arg>
</arguments>
<msg timestamp="20170731 10:58:48.710" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM apps_history; </msg>
<status status="PASS" endtime="20170731 10:58:48.714" starttime="20170731 10:58:48.709"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas</arg>
</arguments>
<msg timestamp="20170731 10:58:48.714" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM datas; </msg>
<status status="PASS" endtime="20170731 10:58:48.715" starttime="20170731 10:58:48.714"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas_history</arg>
</arguments>
<msg timestamp="20170731 10:58:48.716" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM datas_history; </msg>
<status status="PASS" endtime="20170731 10:58:48.717" starttime="20170731 10:58:48.716"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables</arg>
</arguments>
<msg timestamp="20170731 10:58:48.718" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM executables; </msg>
<status status="PASS" endtime="20170731 10:58:48.719" starttime="20170731 10:58:48.717"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables_history</arg>
</arguments>
<msg timestamp="20170731 10:58:48.719" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM executables_history; </msg>
<status status="PASS" endtime="20170731 10:58:48.720" starttime="20170731 10:58:48.719"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups</arg>
</arguments>
<msg timestamp="20170731 10:58:48.720" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM groups; </msg>
<status status="PASS" endtime="20170731 10:58:48.721" starttime="20170731 10:58:48.720"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups_history</arg>
</arguments>
<msg timestamp="20170731 10:58:48.722" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM groups_history; </msg>
<status status="PASS" endtime="20170731 10:58:48.723" starttime="20170731 10:58:48.721"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts</arg>
</arguments>
<msg timestamp="20170731 10:58:48.723" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM hosts; </msg>
<status status="PASS" endtime="20170731 10:58:48.725" starttime="20170731 10:58:48.723"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts_history</arg>
</arguments>
<msg timestamp="20170731 10:58:48.725" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM hosts_history; </msg>
<status status="PASS" endtime="20170731 10:58:48.727" starttime="20170731 10:58:48.725"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships</arg>
</arguments>
<msg timestamp="20170731 10:58:48.728" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM memberships; </msg>
<status status="PASS" endtime="20170731 10:58:48.728" starttime="20170731 10:58:48.727"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships_history</arg>
</arguments>
<msg timestamp="20170731 10:58:48.729" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM memberships_history; </msg>
<status status="PASS" endtime="20170731 10:58:48.729" starttime="20170731 10:58:48.729"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions</arg>
</arguments>
<msg timestamp="20170731 10:58:48.730" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sessions; </msg>
<status status="PASS" endtime="20170731 10:58:48.731" starttime="20170731 10:58:48.730"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions_history</arg>
</arguments>
<msg timestamp="20170731 10:58:48.731" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sessions_history; </msg>
<status status="PASS" endtime="20170731 10:58:48.732" starttime="20170731 10:58:48.731"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes</arg>
</arguments>
<msg timestamp="20170731 10:58:48.732" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedAppTypes; </msg>
<status status="PASS" endtime="20170731 10:58:48.733" starttime="20170731 10:58:48.732"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes_history</arg>
</arguments>
<msg timestamp="20170731 10:58:48.734" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedAppTypes_history; </msg>
<status status="PASS" endtime="20170731 10:58:48.734" starttime="20170731 10:58:48.733"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes</arg>
</arguments>
<msg timestamp="20170731 10:58:48.735" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedPackageTypes; </msg>
<status status="PASS" endtime="20170731 10:58:48.735" starttime="20170731 10:58:48.734"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes_history</arg>
</arguments>
<msg timestamp="20170731 10:58:48.736" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedPackageTypes_history; </msg>
<status status="PASS" endtime="20170731 10:58:48.736" starttime="20170731 10:58:48.735"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks</arg>
</arguments>
<msg timestamp="20170731 10:58:48.737" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM tasks; </msg>
<status status="PASS" endtime="20170731 10:58:48.738" starttime="20170731 10:58:48.737"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks_history</arg>
</arguments>
<msg timestamp="20170731 10:58:48.738" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM tasks_history; </msg>
<status status="PASS" endtime="20170731 10:58:48.739" starttime="20170731 10:58:48.738"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces</arg>
</arguments>
<msg timestamp="20170731 10:58:48.740" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM traces; </msg>
<status status="PASS" endtime="20170731 10:58:48.740" starttime="20170731 10:58:48.739"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces_history</arg>
</arguments>
<msg timestamp="20170731 10:58:48.741" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM traces_history; </msg>
<status status="PASS" endtime="20170731 10:58:48.742" starttime="20170731 10:58:48.741"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups</arg>
</arguments>
<msg timestamp="20170731 10:58:48.742" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM usergroups; </msg>
<status status="PASS" endtime="20170731 10:58:48.743" starttime="20170731 10:58:48.742"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups_history</arg>
</arguments>
<msg timestamp="20170731 10:58:48.743" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM usergroups_history; </msg>
<status status="PASS" endtime="20170731 10:58:48.744" starttime="20170731 10:58:48.743"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users_history</arg>
</arguments>
<msg timestamp="20170731 10:58:48.744" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM users_history; </msg>
<status status="PASS" endtime="20170731 10:58:48.745" starttime="20170731 10:58:48.744"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works</arg>
</arguments>
<msg timestamp="20170731 10:58:48.746" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM works; </msg>
<status status="PASS" endtime="20170731 10:58:48.747" starttime="20170731 10:58:48.746"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works_history</arg>
</arguments>
<msg timestamp="20170731 10:58:48.747" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM works_history; </msg>
<status status="PASS" endtime="20170731 10:58:48.748" starttime="20170731 10:58:48.747"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170731 10:58:48.749" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170731 10:58:48.749" starttime="20170731 10:58:48.748"></status>
</kw>
<status status="PASS" endtime="20170731 10:58:48.749" starttime="20170731 10:58:48.748"></status>
</kw>
<status status="PASS" endtime="20170731 10:58:48.749" starttime="20170731 10:58:48.702"></status>
</kw>
<status status="PASS" endtime="20170731 10:58:48.749" starttime="20170731 10:58:48.387"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Test 1.1 Enregistrer l’application</arg>
</arguments>
<msg timestamp="20170731 10:58:48.750" level="INFO">Test 1.1 Enregistrer l’application</msg>
<status status="PASS" endtime="20170731 10:58:48.750" starttime="20170731 10:58:48.750"></status>
</kw>
<kw name="XWSENDAPPCommand">
<doc>Usage : SENDAPP appName appType cpuType osName URI | UID : inserts/updates an application; URI or UID points to binary file ; application name must be the first parameter</doc>
<arguments>
<arg>ls</arg>
<arg>deployable</arg>
<arg>macosx</arg>
<arg>x86_64</arg>
<arg>/bin/ls</arg>
</arguments>
<assign>
<var>${uid}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd ${DIST_XWHEP_PATH}/bin &amp;&amp; ./xwsendapp ${appName} ${appType} ${cpuType} ${osName} ${uri-udi}</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${cmd_result}</var>
</assign>
<msg timestamp="20170731 10:58:48.751" level="INFO">Starting process:
cd /Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/bin &amp;&amp; ./xwsendapp ls deployable macosx x86_64 /bin/ls</msg>
<msg timestamp="20170731 10:58:48.756" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170731 10:58:49.818" level="INFO">Process completed.</msg>
<msg timestamp="20170731 10:58:49.819" level="INFO">${cmd_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170731 10:58:49.819" starttime="20170731 10:58:48.751"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stderr}</arg>
</arguments>
<msg timestamp="20170731 10:58:49.820" level="INFO"></msg>
<status status="PASS" endtime="20170731 10:58:49.820" starttime="20170731 10:58:49.820"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
</arguments>
<msg timestamp="20170731 10:58:49.821" level="INFO">xw://MacBook-Pro-de-francoisbranciard.local/e6a2e4ad-0592-4e7b-a64c-037e9f61992c</msg>
<status status="PASS" endtime="20170731 10:58:49.821" starttime="20170731 10:58:49.820"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${cmd_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170731 10:58:49.821" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170731 10:58:49.821" starttime="20170731 10:58:49.821"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
<arg>-36</arg>
</arguments>
<assign>
<var>${uid}</var>
</assign>
<msg timestamp="20170731 10:58:49.822" level="INFO">${uid} = e6a2e4ad-0592-4e7b-a64c-037e9f61992c</msg>
<status status="PASS" endtime="20170731 10:58:49.822" starttime="20170731 10:58:49.822"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${uid}</arg>
</arguments>
<msg timestamp="20170731 10:58:49.822" level="INFO">e6a2e4ad-0592-4e7b-a64c-037e9f61992c</msg>
<status status="PASS" endtime="20170731 10:58:49.823" starttime="20170731 10:58:49.822"></status>
</kw>
<msg timestamp="20170731 10:58:49.823" level="INFO">${uid} = e6a2e4ad-0592-4e7b-a64c-037e9f61992c</msg>
<status status="PASS" endtime="20170731 10:58:49.823" starttime="20170731 10:58:48.750"></status>
</kw>
<kw name="Count From Apps Where Uid" library="XWServer">
<arguments>
<arg>${uid}</arg>
<arg>1</arg>
</arguments>
<kw name="Count From Table Where Uid" library="MySql">
<arguments>
<arg>apps</arg>
<arg>${uid}</arg>
<arg>${countExpected}</arg>
</arguments>
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170731 10:58:49.825" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170731 10:58:49.828" starttime="20170731 10:58:49.825"></status>
</kw>
<status status="PASS" endtime="20170731 10:58:49.828" starttime="20170731 10:58:49.824"></status>
</kw>
<kw name="Row Count Is Equal To X" library="DatabaseLibrary">
<doc>Check if the number of rows returned from `selectStatement` is equal to the value submitted. If not, then this</doc>
<arguments>
<arg>SELECT * FROM ${table} WHERE uid = '${uid}'</arg>
<arg>${countExpected}</arg>
</arguments>
<msg timestamp="20170731 10:58:49.828" level="INFO">Executing : Row Count Is Equal To X  |  SELECT * FROM apps WHERE uid = 'e6a2e4ad-0592-4e7b-a64c-037e9f61992c'  |  1 </msg>
<msg timestamp="20170731 10:58:49.828" level="INFO">Executing : Row Count  |  SELECT * FROM apps WHERE uid = 'e6a2e4ad-0592-4e7b-a64c-037e9f61992c' </msg>
<status status="PASS" endtime="20170731 10:58:49.832" starttime="20170731 10:58:49.828"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170731 10:58:49.833" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170731 10:58:49.833" starttime="20170731 10:58:49.833"></status>
</kw>
<status status="PASS" endtime="20170731 10:58:49.834" starttime="20170731 10:58:49.833"></status>
</kw>
<status status="PASS" endtime="20170731 10:58:49.834" starttime="20170731 10:58:49.824"></status>
</kw>
<status status="PASS" endtime="20170731 10:58:49.834" starttime="20170731 10:58:49.823"></status>
</kw>
<kw type="teardown" name="End XWtremWeb Command Test" library="XWCommon">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Nothing to do</arg>
</arguments>
<msg timestamp="20170731 10:58:49.835" level="INFO">Nothing to do</msg>
<status status="PASS" endtime="20170731 10:58:49.835" starttime="20170731 10:58:49.834"></status>
</kw>
<status status="PASS" endtime="20170731 10:58:49.835" starttime="20170731 10:58:49.834"></status>
</kw>
<doc>Les premiers tests doivent permettre de tester la prise en compte de la ligne de commande et de l’environnement, un ensemble de fichiers copiés dans le répertoire courant du job, du côté du worker. L’application “LS” correspond à ces pré requis.</doc>
<tags>
<tag>CommandLine Tests</tag>
</tags>
<status status="PASS" endtime="20170731 10:58:49.835" critical="yes" starttime="20170731 10:58:48.385"></status>
</test>
<test id="s1-s3-t3" name="Test 2.1 Soumettre un job sans ligne de commande">
<kw type="setup" name="Begin XWtremWeb Command Test" library="XWCommon">
<kw name="Ping XWtremWeb Database" library="XWServer">
<kw name="Xtremweb Tables Must Exist" library="MySql">
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170731 10:58:49.839" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170731 10:58:49.841" starttime="20170731 10:58:49.838"></status>
</kw>
<status status="PASS" endtime="20170731 10:58:49.841" starttime="20170731 10:58:49.837"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>appTypes</arg>
</arguments>
<msg timestamp="20170731 10:58:49.842" level="INFO">Executing : Table Must Exist  |  appTypes </msg>
<msg timestamp="20170731 10:58:49.842" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='appTypes' </msg>
<status status="PASS" endtime="20170731 10:58:49.843" starttime="20170731 10:58:49.841"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps</arg>
</arguments>
<msg timestamp="20170731 10:58:49.844" level="INFO">Executing : Table Must Exist  |  apps </msg>
<msg timestamp="20170731 10:58:49.844" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='apps' </msg>
<status status="PASS" endtime="20170731 10:58:49.846" starttime="20170731 10:58:49.844"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps_history</arg>
</arguments>
<msg timestamp="20170731 10:58:49.847" level="INFO">Executing : Table Must Exist  |  apps_history </msg>
<msg timestamp="20170731 10:58:49.847" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='apps_history' </msg>
<status status="PASS" endtime="20170731 10:58:49.854" starttime="20170731 10:58:49.847"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>cpuTypes</arg>
</arguments>
<msg timestamp="20170731 10:58:49.855" level="INFO">Executing : Table Must Exist  |  cpuTypes </msg>
<msg timestamp="20170731 10:58:49.855" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='cpuTypes' </msg>
<status status="PASS" endtime="20170731 10:58:49.859" starttime="20170731 10:58:49.854"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>dataTypes</arg>
</arguments>
<msg timestamp="20170731 10:58:49.860" level="INFO">Executing : Table Must Exist  |  dataTypes </msg>
<msg timestamp="20170731 10:58:49.860" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='dataTypes' </msg>
<status status="PASS" endtime="20170731 10:58:49.862" starttime="20170731 10:58:49.859"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas</arg>
</arguments>
<msg timestamp="20170731 10:58:49.862" level="INFO">Executing : Table Must Exist  |  datas </msg>
<msg timestamp="20170731 10:58:49.862" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='datas' </msg>
<status status="PASS" endtime="20170731 10:58:49.864" starttime="20170731 10:58:49.862"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas_history</arg>
</arguments>
<msg timestamp="20170731 10:58:49.865" level="INFO">Executing : Table Must Exist  |  datas_history </msg>
<msg timestamp="20170731 10:58:49.865" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='datas_history' </msg>
<status status="PASS" endtime="20170731 10:58:49.867" starttime="20170731 10:58:49.865"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables</arg>
</arguments>
<msg timestamp="20170731 10:58:49.867" level="INFO">Executing : Table Must Exist  |  executables </msg>
<msg timestamp="20170731 10:58:49.867" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='executables' </msg>
<status status="PASS" endtime="20170731 10:58:49.869" starttime="20170731 10:58:49.867"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables_history</arg>
</arguments>
<msg timestamp="20170731 10:58:49.869" level="INFO">Executing : Table Must Exist  |  executables_history </msg>
<msg timestamp="20170731 10:58:49.869" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='executables_history' </msg>
<status status="PASS" endtime="20170731 10:58:49.871" starttime="20170731 10:58:49.869"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups</arg>
</arguments>
<msg timestamp="20170731 10:58:49.871" level="INFO">Executing : Table Must Exist  |  groups </msg>
<msg timestamp="20170731 10:58:49.871" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='groups' </msg>
<status status="PASS" endtime="20170731 10:58:49.872" starttime="20170731 10:58:49.871"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups_history</arg>
</arguments>
<msg timestamp="20170731 10:58:49.873" level="INFO">Executing : Table Must Exist  |  groups_history </msg>
<msg timestamp="20170731 10:58:49.873" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='groups_history' </msg>
<status status="PASS" endtime="20170731 10:58:49.874" starttime="20170731 10:58:49.873"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts</arg>
</arguments>
<msg timestamp="20170731 10:58:49.875" level="INFO">Executing : Table Must Exist  |  hosts </msg>
<msg timestamp="20170731 10:58:49.875" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='hosts' </msg>
<status status="PASS" endtime="20170731 10:58:49.877" starttime="20170731 10:58:49.874"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts_history</arg>
</arguments>
<msg timestamp="20170731 10:58:49.877" level="INFO">Executing : Table Must Exist  |  hosts_history </msg>
<msg timestamp="20170731 10:58:49.877" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='hosts_history' </msg>
<status status="PASS" endtime="20170731 10:58:49.879" starttime="20170731 10:58:49.877"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships</arg>
</arguments>
<msg timestamp="20170731 10:58:49.880" level="INFO">Executing : Table Must Exist  |  memberships </msg>
<msg timestamp="20170731 10:58:49.880" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='memberships' </msg>
<status status="PASS" endtime="20170731 10:58:49.881" starttime="20170731 10:58:49.880"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships_history</arg>
</arguments>
<msg timestamp="20170731 10:58:49.882" level="INFO">Executing : Table Must Exist  |  memberships_history </msg>
<msg timestamp="20170731 10:58:49.882" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='memberships_history' </msg>
<status status="PASS" endtime="20170731 10:58:49.883" starttime="20170731 10:58:49.882"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>oses</arg>
</arguments>
<msg timestamp="20170731 10:58:49.884" level="INFO">Executing : Table Must Exist  |  oses </msg>
<msg timestamp="20170731 10:58:49.884" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='oses' </msg>
<status status="PASS" endtime="20170731 10:58:49.885" starttime="20170731 10:58:49.883"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>packageTypes</arg>
</arguments>
<msg timestamp="20170731 10:58:49.885" level="INFO">Executing : Table Must Exist  |  packageTypes </msg>
<msg timestamp="20170731 10:58:49.885" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='packageTypes' </msg>
<status status="PASS" endtime="20170731 10:58:49.887" starttime="20170731 10:58:49.885"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions</arg>
</arguments>
<msg timestamp="20170731 10:58:49.888" level="INFO">Executing : Table Must Exist  |  sessions </msg>
<msg timestamp="20170731 10:58:49.888" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sessions' </msg>
<status status="PASS" endtime="20170731 10:58:49.889" starttime="20170731 10:58:49.887"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions_history</arg>
</arguments>
<msg timestamp="20170731 10:58:49.889" level="INFO">Executing : Table Must Exist  |  sessions_history </msg>
<msg timestamp="20170731 10:58:49.889" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sessions_history' </msg>
<status status="PASS" endtime="20170731 10:58:49.891" starttime="20170731 10:58:49.889"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes</arg>
</arguments>
<msg timestamp="20170731 10:58:49.891" level="INFO">Executing : Table Must Exist  |  sharedAppTypes </msg>
<msg timestamp="20170731 10:58:49.891" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedAppTypes' </msg>
<status status="PASS" endtime="20170731 10:58:49.893" starttime="20170731 10:58:49.891"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes_history</arg>
</arguments>
<msg timestamp="20170731 10:58:49.893" level="INFO">Executing : Table Must Exist  |  sharedAppTypes_history </msg>
<msg timestamp="20170731 10:58:49.893" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedAppTypes_history' </msg>
<status status="PASS" endtime="20170731 10:58:49.895" starttime="20170731 10:58:49.893"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes</arg>
</arguments>
<msg timestamp="20170731 10:58:49.895" level="INFO">Executing : Table Must Exist  |  sharedPackageTypes </msg>
<msg timestamp="20170731 10:58:49.895" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedPackageTypes' </msg>
<status status="PASS" endtime="20170731 10:58:49.896" starttime="20170731 10:58:49.895"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes_history</arg>
</arguments>
<msg timestamp="20170731 10:58:49.897" level="INFO">Executing : Table Must Exist  |  sharedPackageTypes_history </msg>
<msg timestamp="20170731 10:58:49.897" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedPackageTypes_history' </msg>
<status status="PASS" endtime="20170731 10:58:49.898" starttime="20170731 10:58:49.897"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>statuses</arg>
</arguments>
<msg timestamp="20170731 10:58:49.899" level="INFO">Executing : Table Must Exist  |  statuses </msg>
<msg timestamp="20170731 10:58:49.899" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='statuses' </msg>
<status status="PASS" endtime="20170731 10:58:49.900" starttime="20170731 10:58:49.898"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks</arg>
</arguments>
<msg timestamp="20170731 10:58:49.901" level="INFO">Executing : Table Must Exist  |  tasks </msg>
<msg timestamp="20170731 10:58:49.901" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='tasks' </msg>
<status status="PASS" endtime="20170731 10:58:49.902" starttime="20170731 10:58:49.900"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks_history</arg>
</arguments>
<msg timestamp="20170731 10:58:49.903" level="INFO">Executing : Table Must Exist  |  tasks_history </msg>
<msg timestamp="20170731 10:58:49.903" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='tasks_history' </msg>
<status status="PASS" endtime="20170731 10:58:49.904" starttime="20170731 10:58:49.902"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces</arg>
</arguments>
<msg timestamp="20170731 10:58:49.905" level="INFO">Executing : Table Must Exist  |  traces </msg>
<msg timestamp="20170731 10:58:49.905" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='traces' </msg>
<status status="PASS" endtime="20170731 10:58:49.906" starttime="20170731 10:58:49.905"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces_history</arg>
</arguments>
<msg timestamp="20170731 10:58:49.907" level="INFO">Executing : Table Must Exist  |  traces_history </msg>
<msg timestamp="20170731 10:58:49.907" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='traces_history' </msg>
<status status="PASS" endtime="20170731 10:58:49.908" starttime="20170731 10:58:49.906"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>userRights</arg>
</arguments>
<msg timestamp="20170731 10:58:49.908" level="INFO">Executing : Table Must Exist  |  userRights </msg>
<msg timestamp="20170731 10:58:49.908" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='userRights' </msg>
<status status="PASS" endtime="20170731 10:58:49.910" starttime="20170731 10:58:49.908"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups</arg>
</arguments>
<msg timestamp="20170731 10:58:49.910" level="INFO">Executing : Table Must Exist  |  usergroups </msg>
<msg timestamp="20170731 10:58:49.910" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='usergroups' </msg>
<status status="PASS" endtime="20170731 10:58:49.912" starttime="20170731 10:58:49.910"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups_history</arg>
</arguments>
<msg timestamp="20170731 10:58:49.912" level="INFO">Executing : Table Must Exist  |  usergroups_history </msg>
<msg timestamp="20170731 10:58:49.912" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='usergroups_history' </msg>
<status status="PASS" endtime="20170731 10:58:49.913" starttime="20170731 10:58:49.912"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users</arg>
</arguments>
<msg timestamp="20170731 10:58:49.914" level="INFO">Executing : Table Must Exist  |  users </msg>
<msg timestamp="20170731 10:58:49.914" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='users' </msg>
<status status="PASS" endtime="20170731 10:58:49.915" starttime="20170731 10:58:49.913"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users_history</arg>
</arguments>
<msg timestamp="20170731 10:58:49.915" level="INFO">Executing : Table Must Exist  |  users_history </msg>
<msg timestamp="20170731 10:58:49.915" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='users_history' </msg>
<status status="PASS" endtime="20170731 10:58:49.917" starttime="20170731 10:58:49.915"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>version</arg>
</arguments>
<msg timestamp="20170731 10:58:49.918" level="INFO">Executing : Table Must Exist  |  version </msg>
<msg timestamp="20170731 10:58:49.918" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='version' </msg>
<status status="PASS" endtime="20170731 10:58:49.919" starttime="20170731 10:58:49.918"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>versions</arg>
</arguments>
<msg timestamp="20170731 10:58:49.920" level="INFO">Executing : Table Must Exist  |  versions </msg>
<msg timestamp="20170731 10:58:49.920" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='versions' </msg>
<status status="PASS" endtime="20170731 10:58:49.921" starttime="20170731 10:58:49.919"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps</arg>
</arguments>
<msg timestamp="20170731 10:58:49.921" level="INFO">Executing : Table Must Exist  |  view_apps </msg>
<msg timestamp="20170731 10:58:49.921" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps' </msg>
<status status="PASS" endtime="20170731 10:58:49.923" starttime="20170731 10:58:49.921"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps_for_offering</arg>
</arguments>
<msg timestamp="20170731 10:58:49.923" level="INFO">Executing : Table Must Exist  |  view_apps_for_offering </msg>
<msg timestamp="20170731 10:58:49.923" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps_for_offering' </msg>
<status status="PASS" endtime="20170731 10:58:49.925" starttime="20170731 10:58:49.923"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps_for_offering_with_file_sizes</arg>
</arguments>
<msg timestamp="20170731 10:58:49.926" level="INFO">Executing : Table Must Exist  |  view_apps_for_offering_with_file_sizes </msg>
<msg timestamp="20170731 10:58:49.926" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps_for_offering_with_file_sizes' </msg>
<status status="PASS" endtime="20170731 10:58:49.928" starttime="20170731 10:58:49.925"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_datas</arg>
</arguments>
<msg timestamp="20170731 10:58:49.929" level="INFO">Executing : Table Must Exist  |  view_datas </msg>
<msg timestamp="20170731 10:58:49.929" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_datas' </msg>
<status status="PASS" endtime="20170731 10:58:49.930" starttime="20170731 10:58:49.929"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_executables</arg>
</arguments>
<msg timestamp="20170731 10:58:49.931" level="INFO">Executing : Table Must Exist  |  view_executables </msg>
<msg timestamp="20170731 10:58:49.931" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_executables' </msg>
<status status="PASS" endtime="20170731 10:58:49.932" starttime="20170731 10:58:49.931"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_groups</arg>
</arguments>
<msg timestamp="20170731 10:58:49.933" level="INFO">Executing : Table Must Exist  |  view_groups </msg>
<msg timestamp="20170731 10:58:49.933" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_groups' </msg>
<status status="PASS" endtime="20170731 10:58:49.935" starttime="20170731 10:58:49.932"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts</arg>
</arguments>
<msg timestamp="20170731 10:58:49.936" level="INFO">Executing : Table Must Exist  |  view_hosts </msg>
<msg timestamp="20170731 10:58:49.936" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts' </msg>
<status status="PASS" endtime="20170731 10:58:49.938" starttime="20170731 10:58:49.935"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_deployable</arg>
</arguments>
<msg timestamp="20170731 10:58:49.938" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_deployable </msg>
<msg timestamp="20170731 10:58:49.938" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_deployable' </msg>
<status status="PASS" endtime="20170731 10:58:49.940" starttime="20170731 10:58:49.938"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_deployable_and_shared</arg>
</arguments>
<msg timestamp="20170731 10:58:49.940" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_deployable_and_shared </msg>
<msg timestamp="20170731 10:58:49.940" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_deployable_and_shared' </msg>
<status status="PASS" endtime="20170731 10:58:49.942" starttime="20170731 10:58:49.940"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_shared</arg>
</arguments>
<msg timestamp="20170731 10:58:49.942" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_shared </msg>
<msg timestamp="20170731 10:58:49.942" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_shared' </msg>
<status status="PASS" endtime="20170731 10:58:49.944" starttime="20170731 10:58:49.942"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_sessions</arg>
</arguments>
<msg timestamp="20170731 10:58:49.944" level="INFO">Executing : Table Must Exist  |  view_sessions </msg>
<msg timestamp="20170731 10:58:49.944" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_sessions' </msg>
<status status="PASS" endtime="20170731 10:58:49.946" starttime="20170731 10:58:49.944"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_sharedapptypes</arg>
</arguments>
<msg timestamp="20170731 10:58:49.946" level="INFO">Executing : Table Must Exist  |  view_sharedapptypes </msg>
<msg timestamp="20170731 10:58:49.946" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_sharedapptypes' </msg>
<status status="PASS" endtime="20170731 10:58:49.948" starttime="20170731 10:58:49.946"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_sharedpackagetypes</arg>
</arguments>
<msg timestamp="20170731 10:58:49.948" level="INFO">Executing : Table Must Exist  |  view_sharedpackagetypes </msg>
<msg timestamp="20170731 10:58:49.948" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_sharedpackagetypes' </msg>
<status status="PASS" endtime="20170731 10:58:49.950" starttime="20170731 10:58:49.948"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_tasks</arg>
</arguments>
<msg timestamp="20170731 10:58:49.950" level="INFO">Executing : Table Must Exist  |  view_tasks </msg>
<msg timestamp="20170731 10:58:49.950" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_tasks' </msg>
<status status="PASS" endtime="20170731 10:58:49.952" starttime="20170731 10:58:49.950"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_traces</arg>
</arguments>
<msg timestamp="20170731 10:58:49.952" level="INFO">Executing : Table Must Exist  |  view_traces </msg>
<msg timestamp="20170731 10:58:49.952" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_traces' </msg>
<status status="PASS" endtime="20170731 10:58:49.954" starttime="20170731 10:58:49.952"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_usergroups</arg>
</arguments>
<msg timestamp="20170731 10:58:49.954" level="INFO">Executing : Table Must Exist  |  view_usergroups </msg>
<msg timestamp="20170731 10:58:49.954" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_usergroups' </msg>
<status status="PASS" endtime="20170731 10:58:49.956" starttime="20170731 10:58:49.954"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users</arg>
</arguments>
<msg timestamp="20170731 10:58:49.956" level="INFO">Executing : Table Must Exist  |  view_users </msg>
<msg timestamp="20170731 10:58:49.956" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users' </msg>
<status status="PASS" endtime="20170731 10:58:49.957" starttime="20170731 10:58:49.956"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_apps</arg>
</arguments>
<msg timestamp="20170731 10:58:49.958" level="INFO">Executing : Table Must Exist  |  view_users_apps </msg>
<msg timestamp="20170731 10:58:49.958" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_apps' </msg>
<status status="PASS" endtime="20170731 10:58:49.959" starttime="20170731 10:58:49.958"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_datas</arg>
</arguments>
<msg timestamp="20170731 10:58:49.960" level="INFO">Executing : Table Must Exist  |  view_users_datas </msg>
<msg timestamp="20170731 10:58:49.960" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_datas' </msg>
<status status="PASS" endtime="20170731 10:58:49.962" starttime="20170731 10:58:49.960"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_groups</arg>
</arguments>
<msg timestamp="20170731 10:58:49.962" level="INFO">Executing : Table Must Exist  |  view_users_groups </msg>
<msg timestamp="20170731 10:58:49.962" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_groups' </msg>
<status status="PASS" endtime="20170731 10:58:49.963" starttime="20170731 10:58:49.962"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_hosts</arg>
</arguments>
<msg timestamp="20170731 10:58:49.964" level="INFO">Executing : Table Must Exist  |  view_users_hosts </msg>
<msg timestamp="20170731 10:58:49.964" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_hosts' </msg>
<status status="PASS" endtime="20170731 10:58:49.965" starttime="20170731 10:58:49.964"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_sessions</arg>
</arguments>
<msg timestamp="20170731 10:58:49.966" level="INFO">Executing : Table Must Exist  |  view_users_sessions </msg>
<msg timestamp="20170731 10:58:49.966" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_sessions' </msg>
<status status="PASS" endtime="20170731 10:58:49.967" starttime="20170731 10:58:49.966"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_tasks</arg>
</arguments>
<msg timestamp="20170731 10:58:49.968" level="INFO">Executing : Table Must Exist  |  view_users_tasks </msg>
<msg timestamp="20170731 10:58:49.968" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_tasks' </msg>
<status status="PASS" endtime="20170731 10:58:49.969" starttime="20170731 10:58:49.967"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_traces</arg>
</arguments>
<msg timestamp="20170731 10:58:49.970" level="INFO">Executing : Table Must Exist  |  view_users_traces </msg>
<msg timestamp="20170731 10:58:49.970" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_traces' </msg>
<status status="PASS" endtime="20170731 10:58:49.971" starttime="20170731 10:58:49.969"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_usergroups</arg>
</arguments>
<msg timestamp="20170731 10:58:49.972" level="INFO">Executing : Table Must Exist  |  view_users_usergroups </msg>
<msg timestamp="20170731 10:58:49.972" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_usergroups' </msg>
<status status="PASS" endtime="20170731 10:58:49.973" starttime="20170731 10:58:49.971"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_users</arg>
</arguments>
<msg timestamp="20170731 10:58:49.973" level="INFO">Executing : Table Must Exist  |  view_users_users </msg>
<msg timestamp="20170731 10:58:49.974" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_users' </msg>
<status status="PASS" endtime="20170731 10:58:49.975" starttime="20170731 10:58:49.973"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_works</arg>
</arguments>
<msg timestamp="20170731 10:58:49.976" level="INFO">Executing : Table Must Exist  |  view_users_works </msg>
<msg timestamp="20170731 10:58:49.976" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_works' </msg>
<status status="PASS" endtime="20170731 10:58:49.977" starttime="20170731 10:58:49.976"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works</arg>
</arguments>
<msg timestamp="20170731 10:58:49.978" level="INFO">Executing : Table Must Exist  |  view_works </msg>
<msg timestamp="20170731 10:58:49.978" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works' </msg>
<status status="PASS" endtime="20170731 10:58:49.979" starttime="20170731 10:58:49.978"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works_for_billing</arg>
</arguments>
<msg timestamp="20170731 10:58:49.980" level="INFO">Executing : Table Must Exist  |  view_works_for_billing </msg>
<msg timestamp="20170731 10:58:49.980" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works_for_billing' </msg>
<status status="PASS" endtime="20170731 10:58:49.981" starttime="20170731 10:58:49.980"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works_for_billing_with_file_sizes</arg>
</arguments>
<msg timestamp="20170731 10:58:49.982" level="INFO">Executing : Table Must Exist  |  view_works_for_billing_with_file_sizes </msg>
<msg timestamp="20170731 10:58:49.982" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works_for_billing_with_file_sizes' </msg>
<status status="PASS" endtime="20170731 10:58:49.983" starttime="20170731 10:58:49.981"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works</arg>
</arguments>
<msg timestamp="20170731 10:58:49.983" level="INFO">Executing : Table Must Exist  |  works </msg>
<msg timestamp="20170731 10:58:49.983" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='works' </msg>
<status status="PASS" endtime="20170731 10:58:49.985" starttime="20170731 10:58:49.983"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works_history</arg>
</arguments>
<msg timestamp="20170731 10:58:49.985" level="INFO">Executing : Table Must Exist  |  works_history </msg>
<msg timestamp="20170731 10:58:49.985" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='works_history' </msg>
<status status="PASS" endtime="20170731 10:58:49.987" starttime="20170731 10:58:49.985"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170731 10:58:49.988" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170731 10:58:49.988" starttime="20170731 10:58:49.987"></status>
</kw>
<status status="PASS" endtime="20170731 10:58:49.988" starttime="20170731 10:58:49.987"></status>
</kw>
<status status="PASS" endtime="20170731 10:58:49.988" starttime="20170731 10:58:49.837"></status>
</kw>
<status status="PASS" endtime="20170731 10:58:49.988" starttime="20170731 10:58:49.836"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>TODO ping XWtremWeb server up</arg>
</arguments>
<msg timestamp="20170731 10:58:49.988" level="INFO">TODO ping XWtremWeb server up</msg>
<status status="PASS" endtime="20170731 10:58:49.988" starttime="20170731 10:58:49.988"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>TODO ping XWtremWeb worker up before one test</arg>
</arguments>
<msg timestamp="20170731 10:58:49.989" level="INFO">TODO ping XWtremWeb worker up before one test</msg>
<status status="PASS" endtime="20170731 10:58:49.989" starttime="20170731 10:58:49.989"></status>
</kw>
<kw name="Delete Fonctionnal Xtremweb Tables" library="MySql">
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170731 10:58:49.990" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170731 10:58:49.992" starttime="20170731 10:58:49.990"></status>
</kw>
<status status="PASS" endtime="20170731 10:58:49.992" starttime="20170731 10:58:49.989"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps</arg>
</arguments>
<msg timestamp="20170731 10:58:49.992" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM apps; </msg>
<status status="PASS" endtime="20170731 10:58:49.995" starttime="20170731 10:58:49.992"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps_history</arg>
</arguments>
<msg timestamp="20170731 10:58:49.996" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM apps_history; </msg>
<status status="PASS" endtime="20170731 10:58:49.999" starttime="20170731 10:58:49.996"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas</arg>
</arguments>
<msg timestamp="20170731 10:58:49.999" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM datas; </msg>
<status status="PASS" endtime="20170731 10:58:50.000" starttime="20170731 10:58:49.999"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas_history</arg>
</arguments>
<msg timestamp="20170731 10:58:50.001" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM datas_history; </msg>
<status status="PASS" endtime="20170731 10:58:50.002" starttime="20170731 10:58:50.001"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables</arg>
</arguments>
<msg timestamp="20170731 10:58:50.003" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM executables; </msg>
<status status="PASS" endtime="20170731 10:58:50.004" starttime="20170731 10:58:50.003"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables_history</arg>
</arguments>
<msg timestamp="20170731 10:58:50.004" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM executables_history; </msg>
<status status="PASS" endtime="20170731 10:58:50.005" starttime="20170731 10:58:50.004"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups</arg>
</arguments>
<msg timestamp="20170731 10:58:50.005" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM groups; </msg>
<status status="PASS" endtime="20170731 10:58:50.006" starttime="20170731 10:58:50.005"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups_history</arg>
</arguments>
<msg timestamp="20170731 10:58:50.007" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM groups_history; </msg>
<status status="PASS" endtime="20170731 10:58:50.008" starttime="20170731 10:58:50.007"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts</arg>
</arguments>
<msg timestamp="20170731 10:58:50.009" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM hosts; </msg>
<status status="PASS" endtime="20170731 10:58:50.011" starttime="20170731 10:58:50.008"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts_history</arg>
</arguments>
<msg timestamp="20170731 10:58:50.011" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM hosts_history; </msg>
<status status="PASS" endtime="20170731 10:58:50.014" starttime="20170731 10:58:50.011"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships</arg>
</arguments>
<msg timestamp="20170731 10:58:50.014" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM memberships; </msg>
<status status="PASS" endtime="20170731 10:58:50.015" starttime="20170731 10:58:50.014"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships_history</arg>
</arguments>
<msg timestamp="20170731 10:58:50.016" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM memberships_history; </msg>
<status status="PASS" endtime="20170731 10:58:50.018" starttime="20170731 10:58:50.016"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions</arg>
</arguments>
<msg timestamp="20170731 10:58:50.019" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sessions; </msg>
<status status="PASS" endtime="20170731 10:58:50.020" starttime="20170731 10:58:50.018"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions_history</arg>
</arguments>
<msg timestamp="20170731 10:58:50.020" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sessions_history; </msg>
<status status="PASS" endtime="20170731 10:58:50.021" starttime="20170731 10:58:50.020"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes</arg>
</arguments>
<msg timestamp="20170731 10:58:50.021" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedAppTypes; </msg>
<status status="PASS" endtime="20170731 10:58:50.022" starttime="20170731 10:58:50.021"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes_history</arg>
</arguments>
<msg timestamp="20170731 10:58:50.023" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedAppTypes_history; </msg>
<status status="PASS" endtime="20170731 10:58:50.024" starttime="20170731 10:58:50.022"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes</arg>
</arguments>
<msg timestamp="20170731 10:58:50.024" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedPackageTypes; </msg>
<status status="PASS" endtime="20170731 10:58:50.025" starttime="20170731 10:58:50.024"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes_history</arg>
</arguments>
<msg timestamp="20170731 10:58:50.025" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedPackageTypes_history; </msg>
<status status="PASS" endtime="20170731 10:58:50.026" starttime="20170731 10:58:50.025"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks</arg>
</arguments>
<msg timestamp="20170731 10:58:50.026" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM tasks; </msg>
<status status="PASS" endtime="20170731 10:58:50.027" starttime="20170731 10:58:50.026"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks_history</arg>
</arguments>
<msg timestamp="20170731 10:58:50.028" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM tasks_history; </msg>
<status status="PASS" endtime="20170731 10:58:50.029" starttime="20170731 10:58:50.028"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces</arg>
</arguments>
<msg timestamp="20170731 10:58:50.029" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM traces; </msg>
<status status="PASS" endtime="20170731 10:58:50.030" starttime="20170731 10:58:50.029"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces_history</arg>
</arguments>
<msg timestamp="20170731 10:58:50.031" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM traces_history; </msg>
<status status="PASS" endtime="20170731 10:58:50.031" starttime="20170731 10:58:50.030"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups</arg>
</arguments>
<msg timestamp="20170731 10:58:50.032" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM usergroups; </msg>
<status status="PASS" endtime="20170731 10:58:50.032" starttime="20170731 10:58:50.032"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups_history</arg>
</arguments>
<msg timestamp="20170731 10:58:50.033" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM usergroups_history; </msg>
<status status="PASS" endtime="20170731 10:58:50.034" starttime="20170731 10:58:50.033"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users_history</arg>
</arguments>
<msg timestamp="20170731 10:58:50.034" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM users_history; </msg>
<status status="PASS" endtime="20170731 10:58:50.035" starttime="20170731 10:58:50.034"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works</arg>
</arguments>
<msg timestamp="20170731 10:58:50.036" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM works; </msg>
<status status="PASS" endtime="20170731 10:58:50.037" starttime="20170731 10:58:50.035"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works_history</arg>
</arguments>
<msg timestamp="20170731 10:58:50.037" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM works_history; </msg>
<status status="PASS" endtime="20170731 10:58:50.038" starttime="20170731 10:58:50.037"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170731 10:58:50.039" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170731 10:58:50.039" starttime="20170731 10:58:50.039"></status>
</kw>
<status status="PASS" endtime="20170731 10:58:50.039" starttime="20170731 10:58:50.039"></status>
</kw>
<status status="PASS" endtime="20170731 10:58:50.040" starttime="20170731 10:58:49.989"></status>
</kw>
<status status="PASS" endtime="20170731 10:58:50.040" starttime="20170731 10:58:49.836"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>TODO</arg>
</arguments>
<msg timestamp="20170731 10:58:50.040" level="INFO">TODO</msg>
<status status="PASS" endtime="20170731 10:58:50.040" starttime="20170731 10:58:50.040"></status>
</kw>
<kw type="teardown" name="End XWtremWeb Command Test" library="XWCommon">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Nothing to do</arg>
</arguments>
<msg timestamp="20170731 10:58:50.041" level="INFO">Nothing to do</msg>
<status status="PASS" endtime="20170731 10:58:50.041" starttime="20170731 10:58:50.041"></status>
</kw>
<status status="PASS" endtime="20170731 10:58:50.041" starttime="20170731 10:58:50.041"></status>
</kw>
<doc>Ces tests doivent prouver que la ligne de commande est prise en charge correctement.</doc>
<tags>
<tag>CommandLine Tests</tag>
</tags>
<status status="PASS" endtime="20170731 10:58:50.041" critical="yes" starttime="20170731 10:58:49.835"></status>
</test>
<test id="s1-s3-t4" name="Test 2.2 Soumettre un job avec ligne de commande">
<kw type="setup" name="Begin XWtremWeb Command Test" library="XWCommon">
<kw name="Ping XWtremWeb Database" library="XWServer">
<kw name="Xtremweb Tables Must Exist" library="MySql">
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170731 10:58:50.044" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170731 10:58:50.046" starttime="20170731 10:58:50.044"></status>
</kw>
<status status="PASS" endtime="20170731 10:58:50.046" starttime="20170731 10:58:50.044"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>appTypes</arg>
</arguments>
<msg timestamp="20170731 10:58:50.047" level="INFO">Executing : Table Must Exist  |  appTypes </msg>
<msg timestamp="20170731 10:58:50.047" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='appTypes' </msg>
<status status="PASS" endtime="20170731 10:58:50.048" starttime="20170731 10:58:50.046"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps</arg>
</arguments>
<msg timestamp="20170731 10:58:50.049" level="INFO">Executing : Table Must Exist  |  apps </msg>
<msg timestamp="20170731 10:58:50.049" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='apps' </msg>
<status status="PASS" endtime="20170731 10:58:50.050" starttime="20170731 10:58:50.049"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps_history</arg>
</arguments>
<msg timestamp="20170731 10:58:50.051" level="INFO">Executing : Table Must Exist  |  apps_history </msg>
<msg timestamp="20170731 10:58:50.051" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='apps_history' </msg>
<status status="PASS" endtime="20170731 10:58:50.054" starttime="20170731 10:58:50.050"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>cpuTypes</arg>
</arguments>
<msg timestamp="20170731 10:58:50.054" level="INFO">Executing : Table Must Exist  |  cpuTypes </msg>
<msg timestamp="20170731 10:58:50.054" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='cpuTypes' </msg>
<status status="PASS" endtime="20170731 10:58:50.056" starttime="20170731 10:58:50.054"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>dataTypes</arg>
</arguments>
<msg timestamp="20170731 10:58:50.056" level="INFO">Executing : Table Must Exist  |  dataTypes </msg>
<msg timestamp="20170731 10:58:50.056" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='dataTypes' </msg>
<status status="PASS" endtime="20170731 10:58:50.058" starttime="20170731 10:58:50.056"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas</arg>
</arguments>
<msg timestamp="20170731 10:58:50.059" level="INFO">Executing : Table Must Exist  |  datas </msg>
<msg timestamp="20170731 10:58:50.059" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='datas' </msg>
<status status="PASS" endtime="20170731 10:58:50.061" starttime="20170731 10:58:50.058"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas_history</arg>
</arguments>
<msg timestamp="20170731 10:58:50.062" level="INFO">Executing : Table Must Exist  |  datas_history </msg>
<msg timestamp="20170731 10:58:50.062" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='datas_history' </msg>
<status status="PASS" endtime="20170731 10:58:50.064" starttime="20170731 10:58:50.061"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables</arg>
</arguments>
<msg timestamp="20170731 10:58:50.065" level="INFO">Executing : Table Must Exist  |  executables </msg>
<msg timestamp="20170731 10:58:50.065" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='executables' </msg>
<status status="PASS" endtime="20170731 10:58:50.066" starttime="20170731 10:58:50.064"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables_history</arg>
</arguments>
<msg timestamp="20170731 10:58:50.067" level="INFO">Executing : Table Must Exist  |  executables_history </msg>
<msg timestamp="20170731 10:58:50.067" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='executables_history' </msg>
<status status="PASS" endtime="20170731 10:58:50.068" starttime="20170731 10:58:50.066"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups</arg>
</arguments>
<msg timestamp="20170731 10:58:50.069" level="INFO">Executing : Table Must Exist  |  groups </msg>
<msg timestamp="20170731 10:58:50.069" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='groups' </msg>
<status status="PASS" endtime="20170731 10:58:50.072" starttime="20170731 10:58:50.068"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups_history</arg>
</arguments>
<msg timestamp="20170731 10:58:50.073" level="INFO">Executing : Table Must Exist  |  groups_history </msg>
<msg timestamp="20170731 10:58:50.073" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='groups_history' </msg>
<status status="PASS" endtime="20170731 10:58:50.077" starttime="20170731 10:58:50.073"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts</arg>
</arguments>
<msg timestamp="20170731 10:58:50.078" level="INFO">Executing : Table Must Exist  |  hosts </msg>
<msg timestamp="20170731 10:58:50.078" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='hosts' </msg>
<status status="PASS" endtime="20170731 10:58:50.081" starttime="20170731 10:58:50.078"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts_history</arg>
</arguments>
<msg timestamp="20170731 10:58:50.081" level="INFO">Executing : Table Must Exist  |  hosts_history </msg>
<msg timestamp="20170731 10:58:50.081" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='hosts_history' </msg>
<status status="PASS" endtime="20170731 10:58:50.084" starttime="20170731 10:58:50.081"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships</arg>
</arguments>
<msg timestamp="20170731 10:58:50.084" level="INFO">Executing : Table Must Exist  |  memberships </msg>
<msg timestamp="20170731 10:58:50.084" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='memberships' </msg>
<status status="PASS" endtime="20170731 10:58:50.086" starttime="20170731 10:58:50.084"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships_history</arg>
</arguments>
<msg timestamp="20170731 10:58:50.086" level="INFO">Executing : Table Must Exist  |  memberships_history </msg>
<msg timestamp="20170731 10:58:50.086" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='memberships_history' </msg>
<status status="PASS" endtime="20170731 10:58:50.087" starttime="20170731 10:58:50.086"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>oses</arg>
</arguments>
<msg timestamp="20170731 10:58:50.088" level="INFO">Executing : Table Must Exist  |  oses </msg>
<msg timestamp="20170731 10:58:50.088" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='oses' </msg>
<status status="PASS" endtime="20170731 10:58:50.089" starttime="20170731 10:58:50.088"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>packageTypes</arg>
</arguments>
<msg timestamp="20170731 10:58:50.090" level="INFO">Executing : Table Must Exist  |  packageTypes </msg>
<msg timestamp="20170731 10:58:50.090" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='packageTypes' </msg>
<status status="PASS" endtime="20170731 10:58:50.091" starttime="20170731 10:58:50.089"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions</arg>
</arguments>
<msg timestamp="20170731 10:58:50.091" level="INFO">Executing : Table Must Exist  |  sessions </msg>
<msg timestamp="20170731 10:58:50.091" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sessions' </msg>
<status status="PASS" endtime="20170731 10:58:50.093" starttime="20170731 10:58:50.091"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions_history</arg>
</arguments>
<msg timestamp="20170731 10:58:50.093" level="INFO">Executing : Table Must Exist  |  sessions_history </msg>
<msg timestamp="20170731 10:58:50.093" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sessions_history' </msg>
<status status="PASS" endtime="20170731 10:58:50.095" starttime="20170731 10:58:50.093"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes</arg>
</arguments>
<msg timestamp="20170731 10:58:50.095" level="INFO">Executing : Table Must Exist  |  sharedAppTypes </msg>
<msg timestamp="20170731 10:58:50.095" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedAppTypes' </msg>
<status status="PASS" endtime="20170731 10:58:50.096" starttime="20170731 10:58:50.095"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes_history</arg>
</arguments>
<msg timestamp="20170731 10:58:50.097" level="INFO">Executing : Table Must Exist  |  sharedAppTypes_history </msg>
<msg timestamp="20170731 10:58:50.097" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedAppTypes_history' </msg>
<status status="PASS" endtime="20170731 10:58:50.098" starttime="20170731 10:58:50.097"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes</arg>
</arguments>
<msg timestamp="20170731 10:58:50.099" level="INFO">Executing : Table Must Exist  |  sharedPackageTypes </msg>
<msg timestamp="20170731 10:58:50.099" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedPackageTypes' </msg>
<status status="PASS" endtime="20170731 10:58:50.100" starttime="20170731 10:58:50.098"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes_history</arg>
</arguments>
<msg timestamp="20170731 10:58:50.100" level="INFO">Executing : Table Must Exist  |  sharedPackageTypes_history </msg>
<msg timestamp="20170731 10:58:50.101" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedPackageTypes_history' </msg>
<status status="PASS" endtime="20170731 10:58:50.102" starttime="20170731 10:58:50.100"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>statuses</arg>
</arguments>
<msg timestamp="20170731 10:58:50.102" level="INFO">Executing : Table Must Exist  |  statuses </msg>
<msg timestamp="20170731 10:58:50.102" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='statuses' </msg>
<status status="PASS" endtime="20170731 10:58:50.104" starttime="20170731 10:58:50.102"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks</arg>
</arguments>
<msg timestamp="20170731 10:58:50.104" level="INFO">Executing : Table Must Exist  |  tasks </msg>
<msg timestamp="20170731 10:58:50.104" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='tasks' </msg>
<status status="PASS" endtime="20170731 10:58:50.106" starttime="20170731 10:58:50.104"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks_history</arg>
</arguments>
<msg timestamp="20170731 10:58:50.107" level="INFO">Executing : Table Must Exist  |  tasks_history </msg>
<msg timestamp="20170731 10:58:50.107" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='tasks_history' </msg>
<status status="PASS" endtime="20170731 10:58:50.109" starttime="20170731 10:58:50.106"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces</arg>
</arguments>
<msg timestamp="20170731 10:58:50.109" level="INFO">Executing : Table Must Exist  |  traces </msg>
<msg timestamp="20170731 10:58:50.109" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='traces' </msg>
<status status="PASS" endtime="20170731 10:58:50.111" starttime="20170731 10:58:50.109"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces_history</arg>
</arguments>
<msg timestamp="20170731 10:58:50.111" level="INFO">Executing : Table Must Exist  |  traces_history </msg>
<msg timestamp="20170731 10:58:50.111" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='traces_history' </msg>
<status status="PASS" endtime="20170731 10:58:50.113" starttime="20170731 10:58:50.111"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>userRights</arg>
</arguments>
<msg timestamp="20170731 10:58:50.113" level="INFO">Executing : Table Must Exist  |  userRights </msg>
<msg timestamp="20170731 10:58:50.113" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='userRights' </msg>
<status status="PASS" endtime="20170731 10:58:50.115" starttime="20170731 10:58:50.113"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups</arg>
</arguments>
<msg timestamp="20170731 10:58:50.116" level="INFO">Executing : Table Must Exist  |  usergroups </msg>
<msg timestamp="20170731 10:58:50.116" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='usergroups' </msg>
<status status="PASS" endtime="20170731 10:58:50.118" starttime="20170731 10:58:50.115"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups_history</arg>
</arguments>
<msg timestamp="20170731 10:58:50.118" level="INFO">Executing : Table Must Exist  |  usergroups_history </msg>
<msg timestamp="20170731 10:58:50.119" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='usergroups_history' </msg>
<status status="PASS" endtime="20170731 10:58:50.121" starttime="20170731 10:58:50.118"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users</arg>
</arguments>
<msg timestamp="20170731 10:58:50.121" level="INFO">Executing : Table Must Exist  |  users </msg>
<msg timestamp="20170731 10:58:50.121" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='users' </msg>
<status status="PASS" endtime="20170731 10:58:50.123" starttime="20170731 10:58:50.121"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users_history</arg>
</arguments>
<msg timestamp="20170731 10:58:50.124" level="INFO">Executing : Table Must Exist  |  users_history </msg>
<msg timestamp="20170731 10:58:50.124" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='users_history' </msg>
<status status="PASS" endtime="20170731 10:58:50.127" starttime="20170731 10:58:50.124"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>version</arg>
</arguments>
<msg timestamp="20170731 10:58:50.127" level="INFO">Executing : Table Must Exist  |  version </msg>
<msg timestamp="20170731 10:58:50.127" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='version' </msg>
<status status="PASS" endtime="20170731 10:58:50.129" starttime="20170731 10:58:50.127"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>versions</arg>
</arguments>
<msg timestamp="20170731 10:58:50.130" level="INFO">Executing : Table Must Exist  |  versions </msg>
<msg timestamp="20170731 10:58:50.130" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='versions' </msg>
<status status="PASS" endtime="20170731 10:58:50.132" starttime="20170731 10:58:50.129"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps</arg>
</arguments>
<msg timestamp="20170731 10:58:50.133" level="INFO">Executing : Table Must Exist  |  view_apps </msg>
<msg timestamp="20170731 10:58:50.133" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps' </msg>
<status status="PASS" endtime="20170731 10:58:50.137" starttime="20170731 10:58:50.132"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps_for_offering</arg>
</arguments>
<msg timestamp="20170731 10:58:50.138" level="INFO">Executing : Table Must Exist  |  view_apps_for_offering </msg>
<msg timestamp="20170731 10:58:50.138" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps_for_offering' </msg>
<status status="PASS" endtime="20170731 10:58:50.140" starttime="20170731 10:58:50.137"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps_for_offering_with_file_sizes</arg>
</arguments>
<msg timestamp="20170731 10:58:50.141" level="INFO">Executing : Table Must Exist  |  view_apps_for_offering_with_file_sizes </msg>
<msg timestamp="20170731 10:58:50.141" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps_for_offering_with_file_sizes' </msg>
<status status="PASS" endtime="20170731 10:58:50.148" starttime="20170731 10:58:50.141"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_datas</arg>
</arguments>
<msg timestamp="20170731 10:58:50.149" level="INFO">Executing : Table Must Exist  |  view_datas </msg>
<msg timestamp="20170731 10:58:50.149" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_datas' </msg>
<status status="PASS" endtime="20170731 10:58:50.154" starttime="20170731 10:58:50.148"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_executables</arg>
</arguments>
<msg timestamp="20170731 10:58:50.155" level="INFO">Executing : Table Must Exist  |  view_executables </msg>
<msg timestamp="20170731 10:58:50.155" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_executables' </msg>
<status status="PASS" endtime="20170731 10:58:50.159" starttime="20170731 10:58:50.155"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_groups</arg>
</arguments>
<msg timestamp="20170731 10:58:50.160" level="INFO">Executing : Table Must Exist  |  view_groups </msg>
<msg timestamp="20170731 10:58:50.160" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_groups' </msg>
<status status="PASS" endtime="20170731 10:58:50.163" starttime="20170731 10:58:50.160"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts</arg>
</arguments>
<msg timestamp="20170731 10:58:50.164" level="INFO">Executing : Table Must Exist  |  view_hosts </msg>
<msg timestamp="20170731 10:58:50.164" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts' </msg>
<status status="PASS" endtime="20170731 10:58:50.167" starttime="20170731 10:58:50.164"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_deployable</arg>
</arguments>
<msg timestamp="20170731 10:58:50.167" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_deployable </msg>
<msg timestamp="20170731 10:58:50.167" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_deployable' </msg>
<status status="PASS" endtime="20170731 10:58:50.169" starttime="20170731 10:58:50.167"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_deployable_and_shared</arg>
</arguments>
<msg timestamp="20170731 10:58:50.170" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_deployable_and_shared </msg>
<msg timestamp="20170731 10:58:50.170" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_deployable_and_shared' </msg>
<status status="PASS" endtime="20170731 10:58:50.172" starttime="20170731 10:58:50.170"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_shared</arg>
</arguments>
<msg timestamp="20170731 10:58:50.173" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_shared </msg>
<msg timestamp="20170731 10:58:50.173" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_shared' </msg>
<status status="PASS" endtime="20170731 10:58:50.176" starttime="20170731 10:58:50.172"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_sessions</arg>
</arguments>
<msg timestamp="20170731 10:58:50.176" level="INFO">Executing : Table Must Exist  |  view_sessions </msg>
<msg timestamp="20170731 10:58:50.177" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_sessions' </msg>
<status status="PASS" endtime="20170731 10:58:50.180" starttime="20170731 10:58:50.176"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_sharedapptypes</arg>
</arguments>
<msg timestamp="20170731 10:58:50.181" level="INFO">Executing : Table Must Exist  |  view_sharedapptypes </msg>
<msg timestamp="20170731 10:58:50.181" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_sharedapptypes' </msg>
<status status="PASS" endtime="20170731 10:58:50.183" starttime="20170731 10:58:50.181"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_sharedpackagetypes</arg>
</arguments>
<msg timestamp="20170731 10:58:50.183" level="INFO">Executing : Table Must Exist  |  view_sharedpackagetypes </msg>
<msg timestamp="20170731 10:58:50.183" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_sharedpackagetypes' </msg>
<status status="PASS" endtime="20170731 10:58:50.185" starttime="20170731 10:58:50.183"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_tasks</arg>
</arguments>
<msg timestamp="20170731 10:58:50.185" level="INFO">Executing : Table Must Exist  |  view_tasks </msg>
<msg timestamp="20170731 10:58:50.185" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_tasks' </msg>
<status status="PASS" endtime="20170731 10:58:50.187" starttime="20170731 10:58:50.185"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_traces</arg>
</arguments>
<msg timestamp="20170731 10:58:50.187" level="INFO">Executing : Table Must Exist  |  view_traces </msg>
<msg timestamp="20170731 10:58:50.188" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_traces' </msg>
<status status="PASS" endtime="20170731 10:58:50.189" starttime="20170731 10:58:50.187"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_usergroups</arg>
</arguments>
<msg timestamp="20170731 10:58:50.189" level="INFO">Executing : Table Must Exist  |  view_usergroups </msg>
<msg timestamp="20170731 10:58:50.189" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_usergroups' </msg>
<status status="PASS" endtime="20170731 10:58:50.191" starttime="20170731 10:58:50.189"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users</arg>
</arguments>
<msg timestamp="20170731 10:58:50.191" level="INFO">Executing : Table Must Exist  |  view_users </msg>
<msg timestamp="20170731 10:58:50.191" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users' </msg>
<status status="PASS" endtime="20170731 10:58:50.193" starttime="20170731 10:58:50.191"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_apps</arg>
</arguments>
<msg timestamp="20170731 10:58:50.194" level="INFO">Executing : Table Must Exist  |  view_users_apps </msg>
<msg timestamp="20170731 10:58:50.194" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_apps' </msg>
<status status="PASS" endtime="20170731 10:58:50.195" starttime="20170731 10:58:50.193"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_datas</arg>
</arguments>
<msg timestamp="20170731 10:58:50.196" level="INFO">Executing : Table Must Exist  |  view_users_datas </msg>
<msg timestamp="20170731 10:58:50.196" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_datas' </msg>
<status status="PASS" endtime="20170731 10:58:50.197" starttime="20170731 10:58:50.195"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_groups</arg>
</arguments>
<msg timestamp="20170731 10:58:50.197" level="INFO">Executing : Table Must Exist  |  view_users_groups </msg>
<msg timestamp="20170731 10:58:50.198" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_groups' </msg>
<status status="PASS" endtime="20170731 10:58:50.199" starttime="20170731 10:58:50.197"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_hosts</arg>
</arguments>
<msg timestamp="20170731 10:58:50.199" level="INFO">Executing : Table Must Exist  |  view_users_hosts </msg>
<msg timestamp="20170731 10:58:50.199" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_hosts' </msg>
<status status="PASS" endtime="20170731 10:58:50.201" starttime="20170731 10:58:50.199"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_sessions</arg>
</arguments>
<msg timestamp="20170731 10:58:50.201" level="INFO">Executing : Table Must Exist  |  view_users_sessions </msg>
<msg timestamp="20170731 10:58:50.201" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_sessions' </msg>
<status status="PASS" endtime="20170731 10:58:50.203" starttime="20170731 10:58:50.201"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_tasks</arg>
</arguments>
<msg timestamp="20170731 10:58:50.203" level="INFO">Executing : Table Must Exist  |  view_users_tasks </msg>
<msg timestamp="20170731 10:58:50.203" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_tasks' </msg>
<status status="PASS" endtime="20170731 10:58:50.205" starttime="20170731 10:58:50.203"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_traces</arg>
</arguments>
<msg timestamp="20170731 10:58:50.205" level="INFO">Executing : Table Must Exist  |  view_users_traces </msg>
<msg timestamp="20170731 10:58:50.205" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_traces' </msg>
<status status="PASS" endtime="20170731 10:58:50.207" starttime="20170731 10:58:50.205"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_usergroups</arg>
</arguments>
<msg timestamp="20170731 10:58:50.207" level="INFO">Executing : Table Must Exist  |  view_users_usergroups </msg>
<msg timestamp="20170731 10:58:50.207" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_usergroups' </msg>
<status status="PASS" endtime="20170731 10:58:50.209" starttime="20170731 10:58:50.207"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_users</arg>
</arguments>
<msg timestamp="20170731 10:58:50.209" level="INFO">Executing : Table Must Exist  |  view_users_users </msg>
<msg timestamp="20170731 10:58:50.209" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_users' </msg>
<status status="PASS" endtime="20170731 10:58:50.212" starttime="20170731 10:58:50.209"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_works</arg>
</arguments>
<msg timestamp="20170731 10:58:50.212" level="INFO">Executing : Table Must Exist  |  view_users_works </msg>
<msg timestamp="20170731 10:58:50.212" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_works' </msg>
<status status="PASS" endtime="20170731 10:58:50.214" starttime="20170731 10:58:50.212"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works</arg>
</arguments>
<msg timestamp="20170731 10:58:50.215" level="INFO">Executing : Table Must Exist  |  view_works </msg>
<msg timestamp="20170731 10:58:50.215" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works' </msg>
<status status="PASS" endtime="20170731 10:58:50.217" starttime="20170731 10:58:50.214"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works_for_billing</arg>
</arguments>
<msg timestamp="20170731 10:58:50.217" level="INFO">Executing : Table Must Exist  |  view_works_for_billing </msg>
<msg timestamp="20170731 10:58:50.217" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works_for_billing' </msg>
<status status="PASS" endtime="20170731 10:58:50.219" starttime="20170731 10:58:50.217"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works_for_billing_with_file_sizes</arg>
</arguments>
<msg timestamp="20170731 10:58:50.219" level="INFO">Executing : Table Must Exist  |  view_works_for_billing_with_file_sizes </msg>
<msg timestamp="20170731 10:58:50.219" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works_for_billing_with_file_sizes' </msg>
<status status="PASS" endtime="20170731 10:58:50.221" starttime="20170731 10:58:50.219"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works</arg>
</arguments>
<msg timestamp="20170731 10:58:50.221" level="INFO">Executing : Table Must Exist  |  works </msg>
<msg timestamp="20170731 10:58:50.221" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='works' </msg>
<status status="PASS" endtime="20170731 10:58:50.223" starttime="20170731 10:58:50.221"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works_history</arg>
</arguments>
<msg timestamp="20170731 10:58:50.223" level="INFO">Executing : Table Must Exist  |  works_history </msg>
<msg timestamp="20170731 10:58:50.223" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='works_history' </msg>
<status status="PASS" endtime="20170731 10:58:50.225" starttime="20170731 10:58:50.223"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170731 10:58:50.225" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170731 10:58:50.225" starttime="20170731 10:58:50.225"></status>
</kw>
<status status="PASS" endtime="20170731 10:58:50.226" starttime="20170731 10:58:50.225"></status>
</kw>
<status status="PASS" endtime="20170731 10:58:50.226" starttime="20170731 10:58:50.043"></status>
</kw>
<status status="PASS" endtime="20170731 10:58:50.226" starttime="20170731 10:58:50.043"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>TODO ping XWtremWeb server up</arg>
</arguments>
<msg timestamp="20170731 10:58:50.226" level="INFO">TODO ping XWtremWeb server up</msg>
<status status="PASS" endtime="20170731 10:58:50.226" starttime="20170731 10:58:50.226"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>TODO ping XWtremWeb worker up before one test</arg>
</arguments>
<msg timestamp="20170731 10:58:50.226" level="INFO">TODO ping XWtremWeb worker up before one test</msg>
<status status="PASS" endtime="20170731 10:58:50.226" starttime="20170731 10:58:50.226"></status>
</kw>
<kw name="Delete Fonctionnal Xtremweb Tables" library="MySql">
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170731 10:58:50.228" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170731 10:58:50.230" starttime="20170731 10:58:50.227"></status>
</kw>
<status status="PASS" endtime="20170731 10:58:50.230" starttime="20170731 10:58:50.227"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps</arg>
</arguments>
<msg timestamp="20170731 10:58:50.230" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM apps; </msg>
<status status="PASS" endtime="20170731 10:58:50.233" starttime="20170731 10:58:50.230"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps_history</arg>
</arguments>
<msg timestamp="20170731 10:58:50.233" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM apps_history; </msg>
<status status="PASS" endtime="20170731 10:58:50.236" starttime="20170731 10:58:50.233"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas</arg>
</arguments>
<msg timestamp="20170731 10:58:50.236" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM datas; </msg>
<status status="PASS" endtime="20170731 10:58:50.238" starttime="20170731 10:58:50.236"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas_history</arg>
</arguments>
<msg timestamp="20170731 10:58:50.238" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM datas_history; </msg>
<status status="PASS" endtime="20170731 10:58:50.239" starttime="20170731 10:58:50.238"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables</arg>
</arguments>
<msg timestamp="20170731 10:58:50.240" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM executables; </msg>
<status status="PASS" endtime="20170731 10:58:50.241" starttime="20170731 10:58:50.240"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables_history</arg>
</arguments>
<msg timestamp="20170731 10:58:50.241" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM executables_history; </msg>
<status status="PASS" endtime="20170731 10:58:50.242" starttime="20170731 10:58:50.241"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups</arg>
</arguments>
<msg timestamp="20170731 10:58:50.242" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM groups; </msg>
<status status="PASS" endtime="20170731 10:58:50.243" starttime="20170731 10:58:50.242"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups_history</arg>
</arguments>
<msg timestamp="20170731 10:58:50.243" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM groups_history; </msg>
<status status="PASS" endtime="20170731 10:58:50.244" starttime="20170731 10:58:50.243"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts</arg>
</arguments>
<msg timestamp="20170731 10:58:50.244" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM hosts; </msg>
<status status="PASS" endtime="20170731 10:58:50.245" starttime="20170731 10:58:50.244"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts_history</arg>
</arguments>
<msg timestamp="20170731 10:58:50.246" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM hosts_history; </msg>
<status status="PASS" endtime="20170731 10:58:50.248" starttime="20170731 10:58:50.246"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships</arg>
</arguments>
<msg timestamp="20170731 10:58:50.248" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM memberships; </msg>
<status status="PASS" endtime="20170731 10:58:50.249" starttime="20170731 10:58:50.248"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships_history</arg>
</arguments>
<msg timestamp="20170731 10:58:50.249" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM memberships_history; </msg>
<status status="PASS" endtime="20170731 10:58:50.250" starttime="20170731 10:58:50.249"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions</arg>
</arguments>
<msg timestamp="20170731 10:58:50.250" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sessions; </msg>
<status status="PASS" endtime="20170731 10:58:50.251" starttime="20170731 10:58:50.250"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions_history</arg>
</arguments>
<msg timestamp="20170731 10:58:50.252" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sessions_history; </msg>
<status status="PASS" endtime="20170731 10:58:50.253" starttime="20170731 10:58:50.251"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes</arg>
</arguments>
<msg timestamp="20170731 10:58:50.253" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedAppTypes; </msg>
<status status="PASS" endtime="20170731 10:58:50.254" starttime="20170731 10:58:50.253"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes_history</arg>
</arguments>
<msg timestamp="20170731 10:58:50.254" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedAppTypes_history; </msg>
<status status="PASS" endtime="20170731 10:58:50.255" starttime="20170731 10:58:50.254"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes</arg>
</arguments>
<msg timestamp="20170731 10:58:50.255" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedPackageTypes; </msg>
<status status="PASS" endtime="20170731 10:58:50.256" starttime="20170731 10:58:50.255"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes_history</arg>
</arguments>
<msg timestamp="20170731 10:58:50.256" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedPackageTypes_history; </msg>
<status status="PASS" endtime="20170731 10:58:50.257" starttime="20170731 10:58:50.256"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks</arg>
</arguments>
<msg timestamp="20170731 10:58:50.257" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM tasks; </msg>
<status status="PASS" endtime="20170731 10:58:50.258" starttime="20170731 10:58:50.257"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks_history</arg>
</arguments>
<msg timestamp="20170731 10:58:50.259" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM tasks_history; </msg>
<status status="PASS" endtime="20170731 10:58:50.260" starttime="20170731 10:58:50.259"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces</arg>
</arguments>
<msg timestamp="20170731 10:58:50.260" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM traces; </msg>
<status status="PASS" endtime="20170731 10:58:50.261" starttime="20170731 10:58:50.260"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces_history</arg>
</arguments>
<msg timestamp="20170731 10:58:50.261" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM traces_history; </msg>
<status status="PASS" endtime="20170731 10:58:50.262" starttime="20170731 10:58:50.261"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups</arg>
</arguments>
<msg timestamp="20170731 10:58:50.263" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM usergroups; </msg>
<status status="PASS" endtime="20170731 10:58:50.263" starttime="20170731 10:58:50.262"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups_history</arg>
</arguments>
<msg timestamp="20170731 10:58:50.264" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM usergroups_history; </msg>
<status status="PASS" endtime="20170731 10:58:50.265" starttime="20170731 10:58:50.264"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users_history</arg>
</arguments>
<msg timestamp="20170731 10:58:50.265" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM users_history; </msg>
<status status="PASS" endtime="20170731 10:58:50.266" starttime="20170731 10:58:50.265"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works</arg>
</arguments>
<msg timestamp="20170731 10:58:50.267" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM works; </msg>
<status status="PASS" endtime="20170731 10:58:50.268" starttime="20170731 10:58:50.266"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works_history</arg>
</arguments>
<msg timestamp="20170731 10:58:50.268" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM works_history; </msg>
<status status="PASS" endtime="20170731 10:58:50.269" starttime="20170731 10:58:50.268"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170731 10:58:50.270" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170731 10:58:50.270" starttime="20170731 10:58:50.270"></status>
</kw>
<status status="PASS" endtime="20170731 10:58:50.270" starttime="20170731 10:58:50.270"></status>
</kw>
<status status="PASS" endtime="20170731 10:58:50.271" starttime="20170731 10:58:50.227"></status>
</kw>
<status status="PASS" endtime="20170731 10:58:50.271" starttime="20170731 10:58:50.043"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>TODO</arg>
</arguments>
<msg timestamp="20170731 10:58:50.271" level="INFO">TODO</msg>
<status status="PASS" endtime="20170731 10:58:50.271" starttime="20170731 10:58:50.271"></status>
</kw>
<kw type="teardown" name="End XWtremWeb Command Test" library="XWCommon">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Nothing to do</arg>
</arguments>
<msg timestamp="20170731 10:58:50.272" level="INFO">Nothing to do</msg>
<status status="PASS" endtime="20170731 10:58:50.272" starttime="20170731 10:58:50.272"></status>
</kw>
<status status="PASS" endtime="20170731 10:58:50.272" starttime="20170731 10:58:50.272"></status>
</kw>
<doc>Ces tests doivent prouver que la ligne de commande est prise en charge correctement. Ces tests doivent se faire avec un application qui accepte des arguments sur la ligne de commande</doc>
<tags>
<tag>CommandLine Tests</tag>
</tags>
<status status="PASS" endtime="20170731 10:58:50.272" critical="yes" starttime="20170731 10:58:50.042"></status>
</test>
<test id="s1-s3-t5" name="Test 3.2 Soumettre un job avec un petit environnement">
<kw type="setup" name="Begin XWtremWeb Command Test" library="XWCommon">
<kw name="Ping XWtremWeb Database" library="XWServer">
<kw name="Xtremweb Tables Must Exist" library="MySql">
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170731 10:58:50.275" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170731 10:58:50.277" starttime="20170731 10:58:50.275"></status>
</kw>
<status status="PASS" endtime="20170731 10:58:50.277" starttime="20170731 10:58:50.275"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>appTypes</arg>
</arguments>
<msg timestamp="20170731 10:58:50.278" level="INFO">Executing : Table Must Exist  |  appTypes </msg>
<msg timestamp="20170731 10:58:50.278" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='appTypes' </msg>
<status status="PASS" endtime="20170731 10:58:50.279" starttime="20170731 10:58:50.278"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps</arg>
</arguments>
<msg timestamp="20170731 10:58:50.280" level="INFO">Executing : Table Must Exist  |  apps </msg>
<msg timestamp="20170731 10:58:50.280" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='apps' </msg>
<status status="PASS" endtime="20170731 10:58:50.281" starttime="20170731 10:58:50.280"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps_history</arg>
</arguments>
<msg timestamp="20170731 10:58:50.282" level="INFO">Executing : Table Must Exist  |  apps_history </msg>
<msg timestamp="20170731 10:58:50.282" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='apps_history' </msg>
<status status="PASS" endtime="20170731 10:58:50.285" starttime="20170731 10:58:50.282"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>cpuTypes</arg>
</arguments>
<msg timestamp="20170731 10:58:50.285" level="INFO">Executing : Table Must Exist  |  cpuTypes </msg>
<msg timestamp="20170731 10:58:50.285" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='cpuTypes' </msg>
<status status="PASS" endtime="20170731 10:58:50.286" starttime="20170731 10:58:50.285"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>dataTypes</arg>
</arguments>
<msg timestamp="20170731 10:58:50.287" level="INFO">Executing : Table Must Exist  |  dataTypes </msg>
<msg timestamp="20170731 10:58:50.287" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='dataTypes' </msg>
<status status="PASS" endtime="20170731 10:58:50.289" starttime="20170731 10:58:50.287"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas</arg>
</arguments>
<msg timestamp="20170731 10:58:50.289" level="INFO">Executing : Table Must Exist  |  datas </msg>
<msg timestamp="20170731 10:58:50.290" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='datas' </msg>
<status status="PASS" endtime="20170731 10:58:50.292" starttime="20170731 10:58:50.289"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas_history</arg>
</arguments>
<msg timestamp="20170731 10:58:50.292" level="INFO">Executing : Table Must Exist  |  datas_history </msg>
<msg timestamp="20170731 10:58:50.292" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='datas_history' </msg>
<status status="PASS" endtime="20170731 10:58:50.295" starttime="20170731 10:58:50.292"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables</arg>
</arguments>
<msg timestamp="20170731 10:58:50.295" level="INFO">Executing : Table Must Exist  |  executables </msg>
<msg timestamp="20170731 10:58:50.295" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='executables' </msg>
<status status="PASS" endtime="20170731 10:58:50.297" starttime="20170731 10:58:50.295"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables_history</arg>
</arguments>
<msg timestamp="20170731 10:58:50.297" level="INFO">Executing : Table Must Exist  |  executables_history </msg>
<msg timestamp="20170731 10:58:50.297" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='executables_history' </msg>
<status status="PASS" endtime="20170731 10:58:50.299" starttime="20170731 10:58:50.297"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups</arg>
</arguments>
<msg timestamp="20170731 10:58:50.300" level="INFO">Executing : Table Must Exist  |  groups </msg>
<msg timestamp="20170731 10:58:50.300" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='groups' </msg>
<status status="PASS" endtime="20170731 10:58:50.303" starttime="20170731 10:58:50.300"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups_history</arg>
</arguments>
<msg timestamp="20170731 10:58:50.304" level="INFO">Executing : Table Must Exist  |  groups_history </msg>
<msg timestamp="20170731 10:58:50.304" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='groups_history' </msg>
<status status="PASS" endtime="20170731 10:58:50.307" starttime="20170731 10:58:50.304"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts</arg>
</arguments>
<msg timestamp="20170731 10:58:50.308" level="INFO">Executing : Table Must Exist  |  hosts </msg>
<msg timestamp="20170731 10:58:50.308" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='hosts' </msg>
<status status="PASS" endtime="20170731 10:58:50.311" starttime="20170731 10:58:50.307"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts_history</arg>
</arguments>
<msg timestamp="20170731 10:58:50.312" level="INFO">Executing : Table Must Exist  |  hosts_history </msg>
<msg timestamp="20170731 10:58:50.312" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='hosts_history' </msg>
<status status="PASS" endtime="20170731 10:58:50.314" starttime="20170731 10:58:50.312"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships</arg>
</arguments>
<msg timestamp="20170731 10:58:50.315" level="INFO">Executing : Table Must Exist  |  memberships </msg>
<msg timestamp="20170731 10:58:50.315" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='memberships' </msg>
<status status="PASS" endtime="20170731 10:58:50.316" starttime="20170731 10:58:50.314"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships_history</arg>
</arguments>
<msg timestamp="20170731 10:58:50.317" level="INFO">Executing : Table Must Exist  |  memberships_history </msg>
<msg timestamp="20170731 10:58:50.317" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='memberships_history' </msg>
<status status="PASS" endtime="20170731 10:58:50.318" starttime="20170731 10:58:50.316"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>oses</arg>
</arguments>
<msg timestamp="20170731 10:58:50.319" level="INFO">Executing : Table Must Exist  |  oses </msg>
<msg timestamp="20170731 10:58:50.319" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='oses' </msg>
<status status="PASS" endtime="20170731 10:58:50.320" starttime="20170731 10:58:50.318"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>packageTypes</arg>
</arguments>
<msg timestamp="20170731 10:58:50.320" level="INFO">Executing : Table Must Exist  |  packageTypes </msg>
<msg timestamp="20170731 10:58:50.320" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='packageTypes' </msg>
<status status="PASS" endtime="20170731 10:58:50.322" starttime="20170731 10:58:50.320"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions</arg>
</arguments>
<msg timestamp="20170731 10:58:50.322" level="INFO">Executing : Table Must Exist  |  sessions </msg>
<msg timestamp="20170731 10:58:50.322" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sessions' </msg>
<status status="PASS" endtime="20170731 10:58:50.324" starttime="20170731 10:58:50.322"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions_history</arg>
</arguments>
<msg timestamp="20170731 10:58:50.324" level="INFO">Executing : Table Must Exist  |  sessions_history </msg>
<msg timestamp="20170731 10:58:50.324" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sessions_history' </msg>
<status status="PASS" endtime="20170731 10:58:50.325" starttime="20170731 10:58:50.324"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes</arg>
</arguments>
<msg timestamp="20170731 10:58:50.326" level="INFO">Executing : Table Must Exist  |  sharedAppTypes </msg>
<msg timestamp="20170731 10:58:50.326" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedAppTypes' </msg>
<status status="PASS" endtime="20170731 10:58:50.327" starttime="20170731 10:58:50.326"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes_history</arg>
</arguments>
<msg timestamp="20170731 10:58:50.328" level="INFO">Executing : Table Must Exist  |  sharedAppTypes_history </msg>
<msg timestamp="20170731 10:58:50.328" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedAppTypes_history' </msg>
<status status="PASS" endtime="20170731 10:58:50.329" starttime="20170731 10:58:50.327"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes</arg>
</arguments>
<msg timestamp="20170731 10:58:50.330" level="INFO">Executing : Table Must Exist  |  sharedPackageTypes </msg>
<msg timestamp="20170731 10:58:50.330" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedPackageTypes' </msg>
<status status="PASS" endtime="20170731 10:58:50.332" starttime="20170731 10:58:50.330"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes_history</arg>
</arguments>
<msg timestamp="20170731 10:58:50.333" level="INFO">Executing : Table Must Exist  |  sharedPackageTypes_history </msg>
<msg timestamp="20170731 10:58:50.333" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedPackageTypes_history' </msg>
<status status="PASS" endtime="20170731 10:58:50.334" starttime="20170731 10:58:50.332"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>statuses</arg>
</arguments>
<msg timestamp="20170731 10:58:50.335" level="INFO">Executing : Table Must Exist  |  statuses </msg>
<msg timestamp="20170731 10:58:50.335" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='statuses' </msg>
<status status="PASS" endtime="20170731 10:58:50.336" starttime="20170731 10:58:50.335"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks</arg>
</arguments>
<msg timestamp="20170731 10:58:50.337" level="INFO">Executing : Table Must Exist  |  tasks </msg>
<msg timestamp="20170731 10:58:50.337" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='tasks' </msg>
<status status="PASS" endtime="20170731 10:58:50.338" starttime="20170731 10:58:50.336"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks_history</arg>
</arguments>
<msg timestamp="20170731 10:58:50.339" level="INFO">Executing : Table Must Exist  |  tasks_history </msg>
<msg timestamp="20170731 10:58:50.339" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='tasks_history' </msg>
<status status="PASS" endtime="20170731 10:58:50.341" starttime="20170731 10:58:50.339"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces</arg>
</arguments>
<msg timestamp="20170731 10:58:50.341" level="INFO">Executing : Table Must Exist  |  traces </msg>
<msg timestamp="20170731 10:58:50.341" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='traces' </msg>
<status status="PASS" endtime="20170731 10:58:50.343" starttime="20170731 10:58:50.341"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces_history</arg>
</arguments>
<msg timestamp="20170731 10:58:50.343" level="INFO">Executing : Table Must Exist  |  traces_history </msg>
<msg timestamp="20170731 10:58:50.343" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='traces_history' </msg>
<status status="PASS" endtime="20170731 10:58:50.344" starttime="20170731 10:58:50.343"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>userRights</arg>
</arguments>
<msg timestamp="20170731 10:58:50.345" level="INFO">Executing : Table Must Exist  |  userRights </msg>
<msg timestamp="20170731 10:58:50.345" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='userRights' </msg>
<status status="PASS" endtime="20170731 10:58:50.346" starttime="20170731 10:58:50.345"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups</arg>
</arguments>
<msg timestamp="20170731 10:58:50.347" level="INFO">Executing : Table Must Exist  |  usergroups </msg>
<msg timestamp="20170731 10:58:50.347" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='usergroups' </msg>
<status status="PASS" endtime="20170731 10:58:50.348" starttime="20170731 10:58:50.347"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups_history</arg>
</arguments>
<msg timestamp="20170731 10:58:50.349" level="INFO">Executing : Table Must Exist  |  usergroups_history </msg>
<msg timestamp="20170731 10:58:50.349" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='usergroups_history' </msg>
<status status="PASS" endtime="20170731 10:58:50.350" starttime="20170731 10:58:50.348"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users</arg>
</arguments>
<msg timestamp="20170731 10:58:50.351" level="INFO">Executing : Table Must Exist  |  users </msg>
<msg timestamp="20170731 10:58:50.351" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='users' </msg>
<status status="PASS" endtime="20170731 10:58:50.352" starttime="20170731 10:58:50.350"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users_history</arg>
</arguments>
<msg timestamp="20170731 10:58:50.353" level="INFO">Executing : Table Must Exist  |  users_history </msg>
<msg timestamp="20170731 10:58:50.353" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='users_history' </msg>
<status status="PASS" endtime="20170731 10:58:50.354" starttime="20170731 10:58:50.352"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>version</arg>
</arguments>
<msg timestamp="20170731 10:58:50.355" level="INFO">Executing : Table Must Exist  |  version </msg>
<msg timestamp="20170731 10:58:50.355" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='version' </msg>
<status status="PASS" endtime="20170731 10:58:50.356" starttime="20170731 10:58:50.355"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>versions</arg>
</arguments>
<msg timestamp="20170731 10:58:50.357" level="INFO">Executing : Table Must Exist  |  versions </msg>
<msg timestamp="20170731 10:58:50.357" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='versions' </msg>
<status status="PASS" endtime="20170731 10:58:50.358" starttime="20170731 10:58:50.357"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps</arg>
</arguments>
<msg timestamp="20170731 10:58:50.358" level="INFO">Executing : Table Must Exist  |  view_apps </msg>
<msg timestamp="20170731 10:58:50.359" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps' </msg>
<status status="PASS" endtime="20170731 10:58:50.360" starttime="20170731 10:58:50.358"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps_for_offering</arg>
</arguments>
<msg timestamp="20170731 10:58:50.361" level="INFO">Executing : Table Must Exist  |  view_apps_for_offering </msg>
<msg timestamp="20170731 10:58:50.361" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps_for_offering' </msg>
<status status="PASS" endtime="20170731 10:58:50.362" starttime="20170731 10:58:50.360"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps_for_offering_with_file_sizes</arg>
</arguments>
<msg timestamp="20170731 10:58:50.363" level="INFO">Executing : Table Must Exist  |  view_apps_for_offering_with_file_sizes </msg>
<msg timestamp="20170731 10:58:50.363" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps_for_offering_with_file_sizes' </msg>
<status status="PASS" endtime="20170731 10:58:50.366" starttime="20170731 10:58:50.363"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_datas</arg>
</arguments>
<msg timestamp="20170731 10:58:50.366" level="INFO">Executing : Table Must Exist  |  view_datas </msg>
<msg timestamp="20170731 10:58:50.366" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_datas' </msg>
<status status="PASS" endtime="20170731 10:58:50.368" starttime="20170731 10:58:50.366"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_executables</arg>
</arguments>
<msg timestamp="20170731 10:58:50.369" level="INFO">Executing : Table Must Exist  |  view_executables </msg>
<msg timestamp="20170731 10:58:50.369" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_executables' </msg>
<status status="PASS" endtime="20170731 10:58:50.371" starttime="20170731 10:58:50.369"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_groups</arg>
</arguments>
<msg timestamp="20170731 10:58:50.371" level="INFO">Executing : Table Must Exist  |  view_groups </msg>
<msg timestamp="20170731 10:58:50.371" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_groups' </msg>
<status status="PASS" endtime="20170731 10:58:50.374" starttime="20170731 10:58:50.371"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts</arg>
</arguments>
<msg timestamp="20170731 10:58:50.375" level="INFO">Executing : Table Must Exist  |  view_hosts </msg>
<msg timestamp="20170731 10:58:50.375" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts' </msg>
<status status="PASS" endtime="20170731 10:58:50.377" starttime="20170731 10:58:50.374"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_deployable</arg>
</arguments>
<msg timestamp="20170731 10:58:50.377" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_deployable </msg>
<msg timestamp="20170731 10:58:50.378" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_deployable' </msg>
<status status="PASS" endtime="20170731 10:58:50.380" starttime="20170731 10:58:50.377"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_deployable_and_shared</arg>
</arguments>
<msg timestamp="20170731 10:58:50.381" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_deployable_and_shared </msg>
<msg timestamp="20170731 10:58:50.381" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_deployable_and_shared' </msg>
<status status="PASS" endtime="20170731 10:58:50.382" starttime="20170731 10:58:50.380"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_shared</arg>
</arguments>
<msg timestamp="20170731 10:58:50.383" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_shared </msg>
<msg timestamp="20170731 10:58:50.383" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_shared' </msg>
<status status="PASS" endtime="20170731 10:58:50.385" starttime="20170731 10:58:50.383"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_sessions</arg>
</arguments>
<msg timestamp="20170731 10:58:50.385" level="INFO">Executing : Table Must Exist  |  view_sessions </msg>
<msg timestamp="20170731 10:58:50.385" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_sessions' </msg>
<status status="PASS" endtime="20170731 10:58:50.387" starttime="20170731 10:58:50.385"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_sharedapptypes</arg>
</arguments>
<msg timestamp="20170731 10:58:50.387" level="INFO">Executing : Table Must Exist  |  view_sharedapptypes </msg>
<msg timestamp="20170731 10:58:50.387" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_sharedapptypes' </msg>
<status status="PASS" endtime="20170731 10:58:50.388" starttime="20170731 10:58:50.387"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_sharedpackagetypes</arg>
</arguments>
<msg timestamp="20170731 10:58:50.389" level="INFO">Executing : Table Must Exist  |  view_sharedpackagetypes </msg>
<msg timestamp="20170731 10:58:50.389" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_sharedpackagetypes' </msg>
<status status="PASS" endtime="20170731 10:58:50.390" starttime="20170731 10:58:50.389"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_tasks</arg>
</arguments>
<msg timestamp="20170731 10:58:50.391" level="INFO">Executing : Table Must Exist  |  view_tasks </msg>
<msg timestamp="20170731 10:58:50.391" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_tasks' </msg>
<status status="PASS" endtime="20170731 10:58:50.393" starttime="20170731 10:58:50.391"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_traces</arg>
</arguments>
<msg timestamp="20170731 10:58:50.393" level="INFO">Executing : Table Must Exist  |  view_traces </msg>
<msg timestamp="20170731 10:58:50.393" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_traces' </msg>
<status status="PASS" endtime="20170731 10:58:50.395" starttime="20170731 10:58:50.393"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_usergroups</arg>
</arguments>
<msg timestamp="20170731 10:58:50.395" level="INFO">Executing : Table Must Exist  |  view_usergroups </msg>
<msg timestamp="20170731 10:58:50.395" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_usergroups' </msg>
<status status="PASS" endtime="20170731 10:58:50.397" starttime="20170731 10:58:50.395"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users</arg>
</arguments>
<msg timestamp="20170731 10:58:50.397" level="INFO">Executing : Table Must Exist  |  view_users </msg>
<msg timestamp="20170731 10:58:50.397" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users' </msg>
<status status="PASS" endtime="20170731 10:58:50.398" starttime="20170731 10:58:50.397"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_apps</arg>
</arguments>
<msg timestamp="20170731 10:58:50.399" level="INFO">Executing : Table Must Exist  |  view_users_apps </msg>
<msg timestamp="20170731 10:58:50.399" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_apps' </msg>
<status status="PASS" endtime="20170731 10:58:50.400" starttime="20170731 10:58:50.398"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_datas</arg>
</arguments>
<msg timestamp="20170731 10:58:50.401" level="INFO">Executing : Table Must Exist  |  view_users_datas </msg>
<msg timestamp="20170731 10:58:50.401" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_datas' </msg>
<status status="PASS" endtime="20170731 10:58:50.402" starttime="20170731 10:58:50.401"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_groups</arg>
</arguments>
<msg timestamp="20170731 10:58:50.403" level="INFO">Executing : Table Must Exist  |  view_users_groups </msg>
<msg timestamp="20170731 10:58:50.403" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_groups' </msg>
<status status="PASS" endtime="20170731 10:58:50.404" starttime="20170731 10:58:50.403"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_hosts</arg>
</arguments>
<msg timestamp="20170731 10:58:50.405" level="INFO">Executing : Table Must Exist  |  view_users_hosts </msg>
<msg timestamp="20170731 10:58:50.405" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_hosts' </msg>
<status status="PASS" endtime="20170731 10:58:50.406" starttime="20170731 10:58:50.404"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_sessions</arg>
</arguments>
<msg timestamp="20170731 10:58:50.407" level="INFO">Executing : Table Must Exist  |  view_users_sessions </msg>
<msg timestamp="20170731 10:58:50.407" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_sessions' </msg>
<status status="PASS" endtime="20170731 10:58:50.409" starttime="20170731 10:58:50.407"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_tasks</arg>
</arguments>
<msg timestamp="20170731 10:58:50.409" level="INFO">Executing : Table Must Exist  |  view_users_tasks </msg>
<msg timestamp="20170731 10:58:50.409" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_tasks' </msg>
<status status="PASS" endtime="20170731 10:58:50.411" starttime="20170731 10:58:50.409"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_traces</arg>
</arguments>
<msg timestamp="20170731 10:58:50.411" level="INFO">Executing : Table Must Exist  |  view_users_traces </msg>
<msg timestamp="20170731 10:58:50.411" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_traces' </msg>
<status status="PASS" endtime="20170731 10:58:50.413" starttime="20170731 10:58:50.411"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_usergroups</arg>
</arguments>
<msg timestamp="20170731 10:58:50.413" level="INFO">Executing : Table Must Exist  |  view_users_usergroups </msg>
<msg timestamp="20170731 10:58:50.413" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_usergroups' </msg>
<status status="PASS" endtime="20170731 10:58:50.414" starttime="20170731 10:58:50.413"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_users</arg>
</arguments>
<msg timestamp="20170731 10:58:50.415" level="INFO">Executing : Table Must Exist  |  view_users_users </msg>
<msg timestamp="20170731 10:58:50.415" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_users' </msg>
<status status="PASS" endtime="20170731 10:58:50.417" starttime="20170731 10:58:50.415"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_works</arg>
</arguments>
<msg timestamp="20170731 10:58:50.417" level="INFO">Executing : Table Must Exist  |  view_users_works </msg>
<msg timestamp="20170731 10:58:50.417" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_works' </msg>
<status status="PASS" endtime="20170731 10:58:50.419" starttime="20170731 10:58:50.417"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works</arg>
</arguments>
<msg timestamp="20170731 10:58:50.419" level="INFO">Executing : Table Must Exist  |  view_works </msg>
<msg timestamp="20170731 10:58:50.419" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works' </msg>
<status status="PASS" endtime="20170731 10:58:50.421" starttime="20170731 10:58:50.419"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works_for_billing</arg>
</arguments>
<msg timestamp="20170731 10:58:50.421" level="INFO">Executing : Table Must Exist  |  view_works_for_billing </msg>
<msg timestamp="20170731 10:58:50.422" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works_for_billing' </msg>
<status status="PASS" endtime="20170731 10:58:50.423" starttime="20170731 10:58:50.421"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works_for_billing_with_file_sizes</arg>
</arguments>
<msg timestamp="20170731 10:58:50.423" level="INFO">Executing : Table Must Exist  |  view_works_for_billing_with_file_sizes </msg>
<msg timestamp="20170731 10:58:50.423" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works_for_billing_with_file_sizes' </msg>
<status status="PASS" endtime="20170731 10:58:50.425" starttime="20170731 10:58:50.423"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works</arg>
</arguments>
<msg timestamp="20170731 10:58:50.425" level="INFO">Executing : Table Must Exist  |  works </msg>
<msg timestamp="20170731 10:58:50.425" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='works' </msg>
<status status="PASS" endtime="20170731 10:58:50.427" starttime="20170731 10:58:50.425"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works_history</arg>
</arguments>
<msg timestamp="20170731 10:58:50.427" level="INFO">Executing : Table Must Exist  |  works_history </msg>
<msg timestamp="20170731 10:58:50.427" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='works_history' </msg>
<status status="PASS" endtime="20170731 10:58:50.429" starttime="20170731 10:58:50.427"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170731 10:58:50.429" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170731 10:58:50.429" starttime="20170731 10:58:50.429"></status>
</kw>
<status status="PASS" endtime="20170731 10:58:50.430" starttime="20170731 10:58:50.429"></status>
</kw>
<status status="PASS" endtime="20170731 10:58:50.430" starttime="20170731 10:58:50.274"></status>
</kw>
<status status="PASS" endtime="20170731 10:58:50.430" starttime="20170731 10:58:50.274"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>TODO ping XWtremWeb server up</arg>
</arguments>
<msg timestamp="20170731 10:58:50.430" level="INFO">TODO ping XWtremWeb server up</msg>
<status status="PASS" endtime="20170731 10:58:50.430" starttime="20170731 10:58:50.430"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>TODO ping XWtremWeb worker up before one test</arg>
</arguments>
<msg timestamp="20170731 10:58:50.431" level="INFO">TODO ping XWtremWeb worker up before one test</msg>
<status status="PASS" endtime="20170731 10:58:50.431" starttime="20170731 10:58:50.430"></status>
</kw>
<kw name="Delete Fonctionnal Xtremweb Tables" library="MySql">
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170731 10:58:50.432" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170731 10:58:50.434" starttime="20170731 10:58:50.431"></status>
</kw>
<status status="PASS" endtime="20170731 10:58:50.434" starttime="20170731 10:58:50.431"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps</arg>
</arguments>
<msg timestamp="20170731 10:58:50.434" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM apps; </msg>
<status status="PASS" endtime="20170731 10:58:50.437" starttime="20170731 10:58:50.434"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps_history</arg>
</arguments>
<msg timestamp="20170731 10:58:50.437" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM apps_history; </msg>
<status status="PASS" endtime="20170731 10:58:50.440" starttime="20170731 10:58:50.437"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas</arg>
</arguments>
<msg timestamp="20170731 10:58:50.441" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM datas; </msg>
<status status="PASS" endtime="20170731 10:58:50.442" starttime="20170731 10:58:50.441"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas_history</arg>
</arguments>
<msg timestamp="20170731 10:58:50.442" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM datas_history; </msg>
<status status="PASS" endtime="20170731 10:58:50.444" starttime="20170731 10:58:50.442"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables</arg>
</arguments>
<msg timestamp="20170731 10:58:50.444" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM executables; </msg>
<status status="PASS" endtime="20170731 10:58:50.445" starttime="20170731 10:58:50.444"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables_history</arg>
</arguments>
<msg timestamp="20170731 10:58:50.445" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM executables_history; </msg>
<status status="PASS" endtime="20170731 10:58:50.446" starttime="20170731 10:58:50.445"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups</arg>
</arguments>
<msg timestamp="20170731 10:58:50.446" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM groups; </msg>
<status status="PASS" endtime="20170731 10:58:50.447" starttime="20170731 10:58:50.446"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups_history</arg>
</arguments>
<msg timestamp="20170731 10:58:50.448" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM groups_history; </msg>
<status status="PASS" endtime="20170731 10:58:50.449" starttime="20170731 10:58:50.448"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts</arg>
</arguments>
<msg timestamp="20170731 10:58:50.449" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM hosts; </msg>
<status status="PASS" endtime="20170731 10:58:50.450" starttime="20170731 10:58:50.449"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts_history</arg>
</arguments>
<msg timestamp="20170731 10:58:50.450" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM hosts_history; </msg>
<status status="PASS" endtime="20170731 10:58:50.452" starttime="20170731 10:58:50.450"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships</arg>
</arguments>
<msg timestamp="20170731 10:58:50.453" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM memberships; </msg>
<status status="PASS" endtime="20170731 10:58:50.453" starttime="20170731 10:58:50.452"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships_history</arg>
</arguments>
<msg timestamp="20170731 10:58:50.454" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM memberships_history; </msg>
<status status="PASS" endtime="20170731 10:58:50.455" starttime="20170731 10:58:50.454"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions</arg>
</arguments>
<msg timestamp="20170731 10:58:50.455" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sessions; </msg>
<status status="PASS" endtime="20170731 10:58:50.456" starttime="20170731 10:58:50.455"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions_history</arg>
</arguments>
<msg timestamp="20170731 10:58:50.456" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sessions_history; </msg>
<status status="PASS" endtime="20170731 10:58:50.457" starttime="20170731 10:58:50.456"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes</arg>
</arguments>
<msg timestamp="20170731 10:58:50.457" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedAppTypes; </msg>
<status status="PASS" endtime="20170731 10:58:50.458" starttime="20170731 10:58:50.457"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes_history</arg>
</arguments>
<msg timestamp="20170731 10:58:50.458" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedAppTypes_history; </msg>
<status status="PASS" endtime="20170731 10:58:50.459" starttime="20170731 10:58:50.458"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes</arg>
</arguments>
<msg timestamp="20170731 10:58:50.459" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedPackageTypes; </msg>
<status status="PASS" endtime="20170731 10:58:50.460" starttime="20170731 10:58:50.459"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes_history</arg>
</arguments>
<msg timestamp="20170731 10:58:50.460" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedPackageTypes_history; </msg>
<status status="PASS" endtime="20170731 10:58:50.461" starttime="20170731 10:58:50.460"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks</arg>
</arguments>
<msg timestamp="20170731 10:58:50.461" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM tasks; </msg>
<status status="PASS" endtime="20170731 10:58:50.462" starttime="20170731 10:58:50.461"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks_history</arg>
</arguments>
<msg timestamp="20170731 10:58:50.463" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM tasks_history; </msg>
<status status="PASS" endtime="20170731 10:58:50.464" starttime="20170731 10:58:50.463"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces</arg>
</arguments>
<msg timestamp="20170731 10:58:50.464" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM traces; </msg>
<status status="PASS" endtime="20170731 10:58:50.465" starttime="20170731 10:58:50.464"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces_history</arg>
</arguments>
<msg timestamp="20170731 10:58:50.465" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM traces_history; </msg>
<status status="PASS" endtime="20170731 10:58:50.467" starttime="20170731 10:58:50.465"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups</arg>
</arguments>
<msg timestamp="20170731 10:58:50.467" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM usergroups; </msg>
<status status="PASS" endtime="20170731 10:58:50.468" starttime="20170731 10:58:50.467"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups_history</arg>
</arguments>
<msg timestamp="20170731 10:58:50.468" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM usergroups_history; </msg>
<status status="PASS" endtime="20170731 10:58:50.469" starttime="20170731 10:58:50.468"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users_history</arg>
</arguments>
<msg timestamp="20170731 10:58:50.470" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM users_history; </msg>
<status status="PASS" endtime="20170731 10:58:50.472" starttime="20170731 10:58:50.469"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works</arg>
</arguments>
<msg timestamp="20170731 10:58:50.472" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM works; </msg>
<status status="PASS" endtime="20170731 10:58:50.474" starttime="20170731 10:58:50.472"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works_history</arg>
</arguments>
<msg timestamp="20170731 10:58:50.475" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM works_history; </msg>
<status status="PASS" endtime="20170731 10:58:50.477" starttime="20170731 10:58:50.474"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170731 10:58:50.477" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170731 10:58:50.478" starttime="20170731 10:58:50.477"></status>
</kw>
<status status="PASS" endtime="20170731 10:58:50.478" starttime="20170731 10:58:50.477"></status>
</kw>
<status status="PASS" endtime="20170731 10:58:50.478" starttime="20170731 10:58:50.431"></status>
</kw>
<status status="PASS" endtime="20170731 10:58:50.478" starttime="20170731 10:58:50.273"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>TODO</arg>
</arguments>
<msg timestamp="20170731 10:58:50.479" level="INFO">TODO</msg>
<status status="PASS" endtime="20170731 10:58:50.479" starttime="20170731 10:58:50.479"></status>
</kw>
<kw type="teardown" name="End XWtremWeb Command Test" library="XWCommon">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Nothing to do</arg>
</arguments>
<msg timestamp="20170731 10:58:50.480" level="INFO">Nothing to do</msg>
<status status="PASS" endtime="20170731 10:58:50.480" starttime="20170731 10:58:50.480"></status>
</kw>
<status status="PASS" endtime="20170731 10:58:50.481" starttime="20170731 10:58:50.480"></status>
</kw>
<doc>Typiquement un fichier ou un répertoire de moins de 10Kb.</doc>
<tags>
<tag>CommandLine Tests</tag>
</tags>
<status status="PASS" endtime="20170731 10:58:50.481" critical="yes" starttime="20170731 10:58:50.273"></status>
</test>
<test id="s1-s3-t6" name="Test 3.3 Soumettre un job avec un gros environnement">
<kw type="setup" name="Begin XWtremWeb Command Test" library="XWCommon">
<kw name="Ping XWtremWeb Database" library="XWServer">
<kw name="Xtremweb Tables Must Exist" library="MySql">
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170731 10:58:50.483" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170731 10:58:50.485" starttime="20170731 10:58:50.483"></status>
</kw>
<status status="PASS" endtime="20170731 10:58:50.485" starttime="20170731 10:58:50.482"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>appTypes</arg>
</arguments>
<msg timestamp="20170731 10:58:50.486" level="INFO">Executing : Table Must Exist  |  appTypes </msg>
<msg timestamp="20170731 10:58:50.486" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='appTypes' </msg>
<status status="PASS" endtime="20170731 10:58:50.487" starttime="20170731 10:58:50.485"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps</arg>
</arguments>
<msg timestamp="20170731 10:58:50.488" level="INFO">Executing : Table Must Exist  |  apps </msg>
<msg timestamp="20170731 10:58:50.488" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='apps' </msg>
<status status="PASS" endtime="20170731 10:58:50.491" starttime="20170731 10:58:50.488"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps_history</arg>
</arguments>
<msg timestamp="20170731 10:58:50.492" level="INFO">Executing : Table Must Exist  |  apps_history </msg>
<msg timestamp="20170731 10:58:50.492" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='apps_history' </msg>
<status status="PASS" endtime="20170731 10:58:50.495" starttime="20170731 10:58:50.492"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>cpuTypes</arg>
</arguments>
<msg timestamp="20170731 10:58:50.496" level="INFO">Executing : Table Must Exist  |  cpuTypes </msg>
<msg timestamp="20170731 10:58:50.496" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='cpuTypes' </msg>
<status status="PASS" endtime="20170731 10:58:50.497" starttime="20170731 10:58:50.495"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>dataTypes</arg>
</arguments>
<msg timestamp="20170731 10:58:50.498" level="INFO">Executing : Table Must Exist  |  dataTypes </msg>
<msg timestamp="20170731 10:58:50.498" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='dataTypes' </msg>
<status status="PASS" endtime="20170731 10:58:50.500" starttime="20170731 10:58:50.498"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas</arg>
</arguments>
<msg timestamp="20170731 10:58:50.500" level="INFO">Executing : Table Must Exist  |  datas </msg>
<msg timestamp="20170731 10:58:50.500" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='datas' </msg>
<status status="PASS" endtime="20170731 10:58:50.502" starttime="20170731 10:58:50.500"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas_history</arg>
</arguments>
<msg timestamp="20170731 10:58:50.503" level="INFO">Executing : Table Must Exist  |  datas_history </msg>
<msg timestamp="20170731 10:58:50.503" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='datas_history' </msg>
<status status="PASS" endtime="20170731 10:58:50.506" starttime="20170731 10:58:50.503"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables</arg>
</arguments>
<msg timestamp="20170731 10:58:50.508" level="INFO">Executing : Table Must Exist  |  executables </msg>
<msg timestamp="20170731 10:58:50.508" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='executables' </msg>
<status status="PASS" endtime="20170731 10:58:50.511" starttime="20170731 10:58:50.506"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables_history</arg>
</arguments>
<msg timestamp="20170731 10:58:50.512" level="INFO">Executing : Table Must Exist  |  executables_history </msg>
<msg timestamp="20170731 10:58:50.512" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='executables_history' </msg>
<status status="PASS" endtime="20170731 10:58:50.515" starttime="20170731 10:58:50.512"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups</arg>
</arguments>
<msg timestamp="20170731 10:58:50.516" level="INFO">Executing : Table Must Exist  |  groups </msg>
<msg timestamp="20170731 10:58:50.516" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='groups' </msg>
<status status="PASS" endtime="20170731 10:58:50.518" starttime="20170731 10:58:50.515"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups_history</arg>
</arguments>
<msg timestamp="20170731 10:58:50.518" level="INFO">Executing : Table Must Exist  |  groups_history </msg>
<msg timestamp="20170731 10:58:50.518" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='groups_history' </msg>
<status status="PASS" endtime="20170731 10:58:50.520" starttime="20170731 10:58:50.518"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts</arg>
</arguments>
<msg timestamp="20170731 10:58:50.520" level="INFO">Executing : Table Must Exist  |  hosts </msg>
<msg timestamp="20170731 10:58:50.520" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='hosts' </msg>
<status status="PASS" endtime="20170731 10:58:50.522" starttime="20170731 10:58:50.520"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts_history</arg>
</arguments>
<msg timestamp="20170731 10:58:50.523" level="INFO">Executing : Table Must Exist  |  hosts_history </msg>
<msg timestamp="20170731 10:58:50.523" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='hosts_history' </msg>
<status status="PASS" endtime="20170731 10:58:50.525" starttime="20170731 10:58:50.523"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships</arg>
</arguments>
<msg timestamp="20170731 10:58:50.526" level="INFO">Executing : Table Must Exist  |  memberships </msg>
<msg timestamp="20170731 10:58:50.526" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='memberships' </msg>
<status status="PASS" endtime="20170731 10:58:50.527" starttime="20170731 10:58:50.525"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships_history</arg>
</arguments>
<msg timestamp="20170731 10:58:50.527" level="INFO">Executing : Table Must Exist  |  memberships_history </msg>
<msg timestamp="20170731 10:58:50.527" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='memberships_history' </msg>
<status status="PASS" endtime="20170731 10:58:50.529" starttime="20170731 10:58:50.527"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>oses</arg>
</arguments>
<msg timestamp="20170731 10:58:50.529" level="INFO">Executing : Table Must Exist  |  oses </msg>
<msg timestamp="20170731 10:58:50.529" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='oses' </msg>
<status status="PASS" endtime="20170731 10:58:50.530" starttime="20170731 10:58:50.529"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>packageTypes</arg>
</arguments>
<msg timestamp="20170731 10:58:50.531" level="INFO">Executing : Table Must Exist  |  packageTypes </msg>
<msg timestamp="20170731 10:58:50.531" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='packageTypes' </msg>
<status status="PASS" endtime="20170731 10:58:50.532" starttime="20170731 10:58:50.531"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions</arg>
</arguments>
<msg timestamp="20170731 10:58:50.533" level="INFO">Executing : Table Must Exist  |  sessions </msg>
<msg timestamp="20170731 10:58:50.533" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sessions' </msg>
<status status="PASS" endtime="20170731 10:58:50.534" starttime="20170731 10:58:50.533"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions_history</arg>
</arguments>
<msg timestamp="20170731 10:58:50.535" level="INFO">Executing : Table Must Exist  |  sessions_history </msg>
<msg timestamp="20170731 10:58:50.535" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sessions_history' </msg>
<status status="PASS" endtime="20170731 10:58:50.536" starttime="20170731 10:58:50.534"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes</arg>
</arguments>
<msg timestamp="20170731 10:58:50.536" level="INFO">Executing : Table Must Exist  |  sharedAppTypes </msg>
<msg timestamp="20170731 10:58:50.536" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedAppTypes' </msg>
<status status="PASS" endtime="20170731 10:58:50.538" starttime="20170731 10:58:50.536"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes_history</arg>
</arguments>
<msg timestamp="20170731 10:58:50.538" level="INFO">Executing : Table Must Exist  |  sharedAppTypes_history </msg>
<msg timestamp="20170731 10:58:50.538" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedAppTypes_history' </msg>
<status status="PASS" endtime="20170731 10:58:50.540" starttime="20170731 10:58:50.538"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes</arg>
</arguments>
<msg timestamp="20170731 10:58:50.540" level="INFO">Executing : Table Must Exist  |  sharedPackageTypes </msg>
<msg timestamp="20170731 10:58:50.540" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedPackageTypes' </msg>
<status status="PASS" endtime="20170731 10:58:50.541" starttime="20170731 10:58:50.540"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes_history</arg>
</arguments>
<msg timestamp="20170731 10:58:50.542" level="INFO">Executing : Table Must Exist  |  sharedPackageTypes_history </msg>
<msg timestamp="20170731 10:58:50.542" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedPackageTypes_history' </msg>
<status status="PASS" endtime="20170731 10:58:50.543" starttime="20170731 10:58:50.542"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>statuses</arg>
</arguments>
<msg timestamp="20170731 10:58:50.544" level="INFO">Executing : Table Must Exist  |  statuses </msg>
<msg timestamp="20170731 10:58:50.544" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='statuses' </msg>
<status status="PASS" endtime="20170731 10:58:50.545" starttime="20170731 10:58:50.543"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks</arg>
</arguments>
<msg timestamp="20170731 10:58:50.545" level="INFO">Executing : Table Must Exist  |  tasks </msg>
<msg timestamp="20170731 10:58:50.545" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='tasks' </msg>
<status status="PASS" endtime="20170731 10:58:50.547" starttime="20170731 10:58:50.545"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks_history</arg>
</arguments>
<msg timestamp="20170731 10:58:50.547" level="INFO">Executing : Table Must Exist  |  tasks_history </msg>
<msg timestamp="20170731 10:58:50.547" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='tasks_history' </msg>
<status status="PASS" endtime="20170731 10:58:50.549" starttime="20170731 10:58:50.547"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces</arg>
</arguments>
<msg timestamp="20170731 10:58:50.549" level="INFO">Executing : Table Must Exist  |  traces </msg>
<msg timestamp="20170731 10:58:50.549" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='traces' </msg>
<status status="PASS" endtime="20170731 10:58:50.551" starttime="20170731 10:58:50.549"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces_history</arg>
</arguments>
<msg timestamp="20170731 10:58:50.551" level="INFO">Executing : Table Must Exist  |  traces_history </msg>
<msg timestamp="20170731 10:58:50.551" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='traces_history' </msg>
<status status="PASS" endtime="20170731 10:58:50.552" starttime="20170731 10:58:50.551"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>userRights</arg>
</arguments>
<msg timestamp="20170731 10:58:50.553" level="INFO">Executing : Table Must Exist  |  userRights </msg>
<msg timestamp="20170731 10:58:50.553" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='userRights' </msg>
<status status="PASS" endtime="20170731 10:58:50.554" starttime="20170731 10:58:50.553"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups</arg>
</arguments>
<msg timestamp="20170731 10:58:50.555" level="INFO">Executing : Table Must Exist  |  usergroups </msg>
<msg timestamp="20170731 10:58:50.555" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='usergroups' </msg>
<status status="PASS" endtime="20170731 10:58:50.556" starttime="20170731 10:58:50.554"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups_history</arg>
</arguments>
<msg timestamp="20170731 10:58:50.556" level="INFO">Executing : Table Must Exist  |  usergroups_history </msg>
<msg timestamp="20170731 10:58:50.556" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='usergroups_history' </msg>
<status status="PASS" endtime="20170731 10:58:50.558" starttime="20170731 10:58:50.556"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users</arg>
</arguments>
<msg timestamp="20170731 10:58:50.558" level="INFO">Executing : Table Must Exist  |  users </msg>
<msg timestamp="20170731 10:58:50.558" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='users' </msg>
<status status="PASS" endtime="20170731 10:58:50.559" starttime="20170731 10:58:50.558"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users_history</arg>
</arguments>
<msg timestamp="20170731 10:58:50.560" level="INFO">Executing : Table Must Exist  |  users_history </msg>
<msg timestamp="20170731 10:58:50.560" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='users_history' </msg>
<status status="PASS" endtime="20170731 10:58:50.562" starttime="20170731 10:58:50.560"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>version</arg>
</arguments>
<msg timestamp="20170731 10:58:50.562" level="INFO">Executing : Table Must Exist  |  version </msg>
<msg timestamp="20170731 10:58:50.562" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='version' </msg>
<status status="PASS" endtime="20170731 10:58:50.563" starttime="20170731 10:58:50.562"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>versions</arg>
</arguments>
<msg timestamp="20170731 10:58:50.564" level="INFO">Executing : Table Must Exist  |  versions </msg>
<msg timestamp="20170731 10:58:50.564" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='versions' </msg>
<status status="PASS" endtime="20170731 10:58:50.565" starttime="20170731 10:58:50.564"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps</arg>
</arguments>
<msg timestamp="20170731 10:58:50.566" level="INFO">Executing : Table Must Exist  |  view_apps </msg>
<msg timestamp="20170731 10:58:50.566" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps' </msg>
<status status="PASS" endtime="20170731 10:58:50.567" starttime="20170731 10:58:50.565"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps_for_offering</arg>
</arguments>
<msg timestamp="20170731 10:58:50.568" level="INFO">Executing : Table Must Exist  |  view_apps_for_offering </msg>
<msg timestamp="20170731 10:58:50.568" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps_for_offering' </msg>
<status status="PASS" endtime="20170731 10:58:50.569" starttime="20170731 10:58:50.567"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps_for_offering_with_file_sizes</arg>
</arguments>
<msg timestamp="20170731 10:58:50.569" level="INFO">Executing : Table Must Exist  |  view_apps_for_offering_with_file_sizes </msg>
<msg timestamp="20170731 10:58:50.569" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps_for_offering_with_file_sizes' </msg>
<status status="PASS" endtime="20170731 10:58:50.572" starttime="20170731 10:58:50.569"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_datas</arg>
</arguments>
<msg timestamp="20170731 10:58:50.573" level="INFO">Executing : Table Must Exist  |  view_datas </msg>
<msg timestamp="20170731 10:58:50.573" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_datas' </msg>
<status status="PASS" endtime="20170731 10:58:50.574" starttime="20170731 10:58:50.572"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_executables</arg>
</arguments>
<msg timestamp="20170731 10:58:50.574" level="INFO">Executing : Table Must Exist  |  view_executables </msg>
<msg timestamp="20170731 10:58:50.575" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_executables' </msg>
<status status="PASS" endtime="20170731 10:58:50.576" starttime="20170731 10:58:50.574"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_groups</arg>
</arguments>
<msg timestamp="20170731 10:58:50.577" level="INFO">Executing : Table Must Exist  |  view_groups </msg>
<msg timestamp="20170731 10:58:50.577" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_groups' </msg>
<status status="PASS" endtime="20170731 10:58:50.578" starttime="20170731 10:58:50.576"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts</arg>
</arguments>
<msg timestamp="20170731 10:58:50.579" level="INFO">Executing : Table Must Exist  |  view_hosts </msg>
<msg timestamp="20170731 10:58:50.579" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts' </msg>
<status status="PASS" endtime="20170731 10:58:50.581" starttime="20170731 10:58:50.579"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_deployable</arg>
</arguments>
<msg timestamp="20170731 10:58:50.581" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_deployable </msg>
<msg timestamp="20170731 10:58:50.581" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_deployable' </msg>
<status status="PASS" endtime="20170731 10:58:50.583" starttime="20170731 10:58:50.581"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_deployable_and_shared</arg>
</arguments>
<msg timestamp="20170731 10:58:50.583" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_deployable_and_shared </msg>
<msg timestamp="20170731 10:58:50.583" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_deployable_and_shared' </msg>
<status status="PASS" endtime="20170731 10:58:50.585" starttime="20170731 10:58:50.583"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_shared</arg>
</arguments>
<msg timestamp="20170731 10:58:50.586" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_shared </msg>
<msg timestamp="20170731 10:58:50.586" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_shared' </msg>
<status status="PASS" endtime="20170731 10:58:50.587" starttime="20170731 10:58:50.585"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_sessions</arg>
</arguments>
<msg timestamp="20170731 10:58:50.587" level="INFO">Executing : Table Must Exist  |  view_sessions </msg>
<msg timestamp="20170731 10:58:50.588" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_sessions' </msg>
<status status="PASS" endtime="20170731 10:58:50.589" starttime="20170731 10:58:50.587"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_sharedapptypes</arg>
</arguments>
<msg timestamp="20170731 10:58:50.589" level="INFO">Executing : Table Must Exist  |  view_sharedapptypes </msg>
<msg timestamp="20170731 10:58:50.589" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_sharedapptypes' </msg>
<status status="PASS" endtime="20170731 10:58:50.591" starttime="20170731 10:58:50.589"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_sharedpackagetypes</arg>
</arguments>
<msg timestamp="20170731 10:58:50.591" level="INFO">Executing : Table Must Exist  |  view_sharedpackagetypes </msg>
<msg timestamp="20170731 10:58:50.591" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_sharedpackagetypes' </msg>
<status status="PASS" endtime="20170731 10:58:50.593" starttime="20170731 10:58:50.591"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_tasks</arg>
</arguments>
<msg timestamp="20170731 10:58:50.593" level="INFO">Executing : Table Must Exist  |  view_tasks </msg>
<msg timestamp="20170731 10:58:50.593" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_tasks' </msg>
<status status="PASS" endtime="20170731 10:58:50.595" starttime="20170731 10:58:50.593"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_traces</arg>
</arguments>
<msg timestamp="20170731 10:58:50.595" level="INFO">Executing : Table Must Exist  |  view_traces </msg>
<msg timestamp="20170731 10:58:50.595" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_traces' </msg>
<status status="PASS" endtime="20170731 10:58:50.597" starttime="20170731 10:58:50.595"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_usergroups</arg>
</arguments>
<msg timestamp="20170731 10:58:50.597" level="INFO">Executing : Table Must Exist  |  view_usergroups </msg>
<msg timestamp="20170731 10:58:50.597" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_usergroups' </msg>
<status status="PASS" endtime="20170731 10:58:50.599" starttime="20170731 10:58:50.597"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users</arg>
</arguments>
<msg timestamp="20170731 10:58:50.599" level="INFO">Executing : Table Must Exist  |  view_users </msg>
<msg timestamp="20170731 10:58:50.599" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users' </msg>
<status status="PASS" endtime="20170731 10:58:50.601" starttime="20170731 10:58:50.599"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_apps</arg>
</arguments>
<msg timestamp="20170731 10:58:50.601" level="INFO">Executing : Table Must Exist  |  view_users_apps </msg>
<msg timestamp="20170731 10:58:50.601" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_apps' </msg>
<status status="PASS" endtime="20170731 10:58:50.603" starttime="20170731 10:58:50.601"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_datas</arg>
</arguments>
<msg timestamp="20170731 10:58:50.603" level="INFO">Executing : Table Must Exist  |  view_users_datas </msg>
<msg timestamp="20170731 10:58:50.603" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_datas' </msg>
<status status="PASS" endtime="20170731 10:58:50.605" starttime="20170731 10:58:50.603"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_groups</arg>
</arguments>
<msg timestamp="20170731 10:58:50.605" level="INFO">Executing : Table Must Exist  |  view_users_groups </msg>
<msg timestamp="20170731 10:58:50.605" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_groups' </msg>
<status status="PASS" endtime="20170731 10:58:50.607" starttime="20170731 10:58:50.605"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_hosts</arg>
</arguments>
<msg timestamp="20170731 10:58:50.607" level="INFO">Executing : Table Must Exist  |  view_users_hosts </msg>
<msg timestamp="20170731 10:58:50.607" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_hosts' </msg>
<status status="PASS" endtime="20170731 10:58:50.609" starttime="20170731 10:58:50.607"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_sessions</arg>
</arguments>
<msg timestamp="20170731 10:58:50.609" level="INFO">Executing : Table Must Exist  |  view_users_sessions </msg>
<msg timestamp="20170731 10:58:50.609" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_sessions' </msg>
<status status="PASS" endtime="20170731 10:58:50.610" starttime="20170731 10:58:50.609"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_tasks</arg>
</arguments>
<msg timestamp="20170731 10:58:50.611" level="INFO">Executing : Table Must Exist  |  view_users_tasks </msg>
<msg timestamp="20170731 10:58:50.611" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_tasks' </msg>
<status status="PASS" endtime="20170731 10:58:50.612" starttime="20170731 10:58:50.611"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_traces</arg>
</arguments>
<msg timestamp="20170731 10:58:50.613" level="INFO">Executing : Table Must Exist  |  view_users_traces </msg>
<msg timestamp="20170731 10:58:50.613" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_traces' </msg>
<status status="PASS" endtime="20170731 10:58:50.614" starttime="20170731 10:58:50.613"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_usergroups</arg>
</arguments>
<msg timestamp="20170731 10:58:50.615" level="INFO">Executing : Table Must Exist  |  view_users_usergroups </msg>
<msg timestamp="20170731 10:58:50.615" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_usergroups' </msg>
<status status="PASS" endtime="20170731 10:58:50.616" starttime="20170731 10:58:50.615"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_users</arg>
</arguments>
<msg timestamp="20170731 10:58:50.617" level="INFO">Executing : Table Must Exist  |  view_users_users </msg>
<msg timestamp="20170731 10:58:50.617" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_users' </msg>
<status status="PASS" endtime="20170731 10:58:50.618" starttime="20170731 10:58:50.616"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_works</arg>
</arguments>
<msg timestamp="20170731 10:58:50.619" level="INFO">Executing : Table Must Exist  |  view_users_works </msg>
<msg timestamp="20170731 10:58:50.619" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_works' </msg>
<status status="PASS" endtime="20170731 10:58:50.621" starttime="20170731 10:58:50.619"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works</arg>
</arguments>
<msg timestamp="20170731 10:58:50.621" level="INFO">Executing : Table Must Exist  |  view_works </msg>
<msg timestamp="20170731 10:58:50.621" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works' </msg>
<status status="PASS" endtime="20170731 10:58:50.623" starttime="20170731 10:58:50.621"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works_for_billing</arg>
</arguments>
<msg timestamp="20170731 10:58:50.623" level="INFO">Executing : Table Must Exist  |  view_works_for_billing </msg>
<msg timestamp="20170731 10:58:50.623" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works_for_billing' </msg>
<status status="PASS" endtime="20170731 10:58:50.625" starttime="20170731 10:58:50.623"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works_for_billing_with_file_sizes</arg>
</arguments>
<msg timestamp="20170731 10:58:50.626" level="INFO">Executing : Table Must Exist  |  view_works_for_billing_with_file_sizes </msg>
<msg timestamp="20170731 10:58:50.626" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works_for_billing_with_file_sizes' </msg>
<status status="PASS" endtime="20170731 10:58:50.627" starttime="20170731 10:58:50.625"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works</arg>
</arguments>
<msg timestamp="20170731 10:58:50.627" level="INFO">Executing : Table Must Exist  |  works </msg>
<msg timestamp="20170731 10:58:50.627" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='works' </msg>
<status status="PASS" endtime="20170731 10:58:50.629" starttime="20170731 10:58:50.627"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works_history</arg>
</arguments>
<msg timestamp="20170731 10:58:50.629" level="INFO">Executing : Table Must Exist  |  works_history </msg>
<msg timestamp="20170731 10:58:50.629" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='works_history' </msg>
<status status="PASS" endtime="20170731 10:58:50.631" starttime="20170731 10:58:50.629"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170731 10:58:50.631" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170731 10:58:50.632" starttime="20170731 10:58:50.631"></status>
</kw>
<status status="PASS" endtime="20170731 10:58:50.632" starttime="20170731 10:58:50.631"></status>
</kw>
<status status="PASS" endtime="20170731 10:58:50.632" starttime="20170731 10:58:50.482"></status>
</kw>
<status status="PASS" endtime="20170731 10:58:50.632" starttime="20170731 10:58:50.482"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>TODO ping XWtremWeb server up</arg>
</arguments>
<msg timestamp="20170731 10:58:50.632" level="INFO">TODO ping XWtremWeb server up</msg>
<status status="PASS" endtime="20170731 10:58:50.632" starttime="20170731 10:58:50.632"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>TODO ping XWtremWeb worker up before one test</arg>
</arguments>
<msg timestamp="20170731 10:58:50.633" level="INFO">TODO ping XWtremWeb worker up before one test</msg>
<status status="PASS" endtime="20170731 10:58:50.633" starttime="20170731 10:58:50.633"></status>
</kw>
<kw name="Delete Fonctionnal Xtremweb Tables" library="MySql">
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170731 10:58:50.634" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170731 10:58:50.636" starttime="20170731 10:58:50.634"></status>
</kw>
<status status="PASS" endtime="20170731 10:58:50.636" starttime="20170731 10:58:50.633"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps</arg>
</arguments>
<msg timestamp="20170731 10:58:50.637" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM apps; </msg>
<status status="PASS" endtime="20170731 10:58:50.638" starttime="20170731 10:58:50.636"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps_history</arg>
</arguments>
<msg timestamp="20170731 10:58:50.638" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM apps_history; </msg>
<status status="PASS" endtime="20170731 10:58:50.642" starttime="20170731 10:58:50.638"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas</arg>
</arguments>
<msg timestamp="20170731 10:58:50.642" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM datas; </msg>
<status status="PASS" endtime="20170731 10:58:50.644" starttime="20170731 10:58:50.642"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas_history</arg>
</arguments>
<msg timestamp="20170731 10:58:50.644" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM datas_history; </msg>
<status status="PASS" endtime="20170731 10:58:50.645" starttime="20170731 10:58:50.644"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables</arg>
</arguments>
<msg timestamp="20170731 10:58:50.646" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM executables; </msg>
<status status="PASS" endtime="20170731 10:58:50.647" starttime="20170731 10:58:50.646"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables_history</arg>
</arguments>
<msg timestamp="20170731 10:58:50.647" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM executables_history; </msg>
<status status="PASS" endtime="20170731 10:58:50.648" starttime="20170731 10:58:50.647"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups</arg>
</arguments>
<msg timestamp="20170731 10:58:50.648" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM groups; </msg>
<status status="PASS" endtime="20170731 10:58:50.649" starttime="20170731 10:58:50.648"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups_history</arg>
</arguments>
<msg timestamp="20170731 10:58:50.650" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM groups_history; </msg>
<status status="PASS" endtime="20170731 10:58:50.651" starttime="20170731 10:58:50.650"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts</arg>
</arguments>
<msg timestamp="20170731 10:58:50.651" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM hosts; </msg>
<status status="PASS" endtime="20170731 10:58:50.653" starttime="20170731 10:58:50.651"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts_history</arg>
</arguments>
<msg timestamp="20170731 10:58:50.653" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM hosts_history; </msg>
<status status="PASS" endtime="20170731 10:58:50.655" starttime="20170731 10:58:50.653"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships</arg>
</arguments>
<msg timestamp="20170731 10:58:50.655" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM memberships; </msg>
<status status="PASS" endtime="20170731 10:58:50.656" starttime="20170731 10:58:50.655"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships_history</arg>
</arguments>
<msg timestamp="20170731 10:58:50.656" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM memberships_history; </msg>
<status status="PASS" endtime="20170731 10:58:50.657" starttime="20170731 10:58:50.656"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions</arg>
</arguments>
<msg timestamp="20170731 10:58:50.657" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sessions; </msg>
<status status="PASS" endtime="20170731 10:58:50.658" starttime="20170731 10:58:50.657"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions_history</arg>
</arguments>
<msg timestamp="20170731 10:58:50.659" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sessions_history; </msg>
<status status="PASS" endtime="20170731 10:58:50.660" starttime="20170731 10:58:50.658"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes</arg>
</arguments>
<msg timestamp="20170731 10:58:50.660" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedAppTypes; </msg>
<status status="PASS" endtime="20170731 10:58:50.661" starttime="20170731 10:58:50.660"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes_history</arg>
</arguments>
<msg timestamp="20170731 10:58:50.661" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedAppTypes_history; </msg>
<status status="PASS" endtime="20170731 10:58:50.662" starttime="20170731 10:58:50.661"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes</arg>
</arguments>
<msg timestamp="20170731 10:58:50.662" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedPackageTypes; </msg>
<status status="PASS" endtime="20170731 10:58:50.663" starttime="20170731 10:58:50.662"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes_history</arg>
</arguments>
<msg timestamp="20170731 10:58:50.663" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedPackageTypes_history; </msg>
<status status="PASS" endtime="20170731 10:58:50.664" starttime="20170731 10:58:50.663"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks</arg>
</arguments>
<msg timestamp="20170731 10:58:50.665" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM tasks; </msg>
<status status="PASS" endtime="20170731 10:58:50.666" starttime="20170731 10:58:50.664"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks_history</arg>
</arguments>
<msg timestamp="20170731 10:58:50.666" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM tasks_history; </msg>
<status status="PASS" endtime="20170731 10:58:50.667" starttime="20170731 10:58:50.666"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces</arg>
</arguments>
<msg timestamp="20170731 10:58:50.668" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM traces; </msg>
<status status="PASS" endtime="20170731 10:58:50.669" starttime="20170731 10:58:50.668"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces_history</arg>
</arguments>
<msg timestamp="20170731 10:58:50.669" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM traces_history; </msg>
<status status="PASS" endtime="20170731 10:58:50.670" starttime="20170731 10:58:50.669"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups</arg>
</arguments>
<msg timestamp="20170731 10:58:50.670" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM usergroups; </msg>
<status status="PASS" endtime="20170731 10:58:50.671" starttime="20170731 10:58:50.670"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups_history</arg>
</arguments>
<msg timestamp="20170731 10:58:50.671" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM usergroups_history; </msg>
<status status="PASS" endtime="20170731 10:58:50.672" starttime="20170731 10:58:50.671"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users_history</arg>
</arguments>
<msg timestamp="20170731 10:58:50.673" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM users_history; </msg>
<status status="PASS" endtime="20170731 10:58:50.674" starttime="20170731 10:58:50.672"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works</arg>
</arguments>
<msg timestamp="20170731 10:58:50.674" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM works; </msg>
<status status="PASS" endtime="20170731 10:58:50.675" starttime="20170731 10:58:50.674"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works_history</arg>
</arguments>
<msg timestamp="20170731 10:58:50.676" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM works_history; </msg>
<status status="PASS" endtime="20170731 10:58:50.677" starttime="20170731 10:58:50.676"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170731 10:58:50.678" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170731 10:58:50.678" starttime="20170731 10:58:50.677"></status>
</kw>
<status status="PASS" endtime="20170731 10:58:50.678" starttime="20170731 10:58:50.677"></status>
</kw>
<status status="PASS" endtime="20170731 10:58:50.678" starttime="20170731 10:58:50.633"></status>
</kw>
<status status="PASS" endtime="20170731 10:58:50.678" starttime="20170731 10:58:50.482"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>TODO</arg>
</arguments>
<msg timestamp="20170731 10:58:50.679" level="INFO">TODO</msg>
<status status="PASS" endtime="20170731 10:58:50.679" starttime="20170731 10:58:50.678"></status>
</kw>
<kw type="teardown" name="End XWtremWeb Command Test" library="XWCommon">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Nothing to do</arg>
</arguments>
<msg timestamp="20170731 10:58:50.679" level="INFO">Nothing to do</msg>
<status status="PASS" endtime="20170731 10:58:50.680" starttime="20170731 10:58:50.679"></status>
</kw>
<status status="PASS" endtime="20170731 10:58:50.680" starttime="20170731 10:58:50.679"></status>
</kw>
<doc>Typiquement un fichier ou un répertoire de plus de 1Mb.</doc>
<tags>
<tag>CommandLine Tests</tag>
</tags>
<status status="PASS" endtime="20170731 10:58:50.680" critical="yes" starttime="20170731 10:58:50.481"></status>
</test>
<test id="s1-s3-t7" name="Test 4 Tester la ligne de commande et l’environnement">
<kw type="setup" name="Begin XWtremWeb Command Test" library="XWCommon">
<kw name="Ping XWtremWeb Database" library="XWServer">
<kw name="Xtremweb Tables Must Exist" library="MySql">
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170731 10:58:50.682" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170731 10:58:50.684" starttime="20170731 10:58:50.682"></status>
</kw>
<status status="PASS" endtime="20170731 10:58:50.684" starttime="20170731 10:58:50.682"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>appTypes</arg>
</arguments>
<msg timestamp="20170731 10:58:50.685" level="INFO">Executing : Table Must Exist  |  appTypes </msg>
<msg timestamp="20170731 10:58:50.685" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='appTypes' </msg>
<status status="PASS" endtime="20170731 10:58:50.686" starttime="20170731 10:58:50.685"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps</arg>
</arguments>
<msg timestamp="20170731 10:58:50.687" level="INFO">Executing : Table Must Exist  |  apps </msg>
<msg timestamp="20170731 10:58:50.687" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='apps' </msg>
<status status="PASS" endtime="20170731 10:58:50.689" starttime="20170731 10:58:50.687"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps_history</arg>
</arguments>
<msg timestamp="20170731 10:58:50.689" level="INFO">Executing : Table Must Exist  |  apps_history </msg>
<msg timestamp="20170731 10:58:50.689" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='apps_history' </msg>
<status status="PASS" endtime="20170731 10:58:50.694" starttime="20170731 10:58:50.689"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>cpuTypes</arg>
</arguments>
<msg timestamp="20170731 10:58:50.694" level="INFO">Executing : Table Must Exist  |  cpuTypes </msg>
<msg timestamp="20170731 10:58:50.694" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='cpuTypes' </msg>
<status status="PASS" endtime="20170731 10:58:50.696" starttime="20170731 10:58:50.694"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>dataTypes</arg>
</arguments>
<msg timestamp="20170731 10:58:50.697" level="INFO">Executing : Table Must Exist  |  dataTypes </msg>
<msg timestamp="20170731 10:58:50.697" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='dataTypes' </msg>
<status status="PASS" endtime="20170731 10:58:50.698" starttime="20170731 10:58:50.696"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas</arg>
</arguments>
<msg timestamp="20170731 10:58:50.699" level="INFO">Executing : Table Must Exist  |  datas </msg>
<msg timestamp="20170731 10:58:50.699" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='datas' </msg>
<status status="PASS" endtime="20170731 10:58:50.704" starttime="20170731 10:58:50.699"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas_history</arg>
</arguments>
<msg timestamp="20170731 10:58:50.706" level="INFO">Executing : Table Must Exist  |  datas_history </msg>
<msg timestamp="20170731 10:58:50.706" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='datas_history' </msg>
<status status="PASS" endtime="20170731 10:58:50.711" starttime="20170731 10:58:50.705"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables</arg>
</arguments>
<msg timestamp="20170731 10:58:50.712" level="INFO">Executing : Table Must Exist  |  executables </msg>
<msg timestamp="20170731 10:58:50.712" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='executables' </msg>
<status status="PASS" endtime="20170731 10:58:50.714" starttime="20170731 10:58:50.711"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables_history</arg>
</arguments>
<msg timestamp="20170731 10:58:50.714" level="INFO">Executing : Table Must Exist  |  executables_history </msg>
<msg timestamp="20170731 10:58:50.714" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='executables_history' </msg>
<status status="PASS" endtime="20170731 10:58:50.716" starttime="20170731 10:58:50.714"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups</arg>
</arguments>
<msg timestamp="20170731 10:58:50.716" level="INFO">Executing : Table Must Exist  |  groups </msg>
<msg timestamp="20170731 10:58:50.716" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='groups' </msg>
<status status="PASS" endtime="20170731 10:58:50.718" starttime="20170731 10:58:50.716"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups_history</arg>
</arguments>
<msg timestamp="20170731 10:58:50.719" level="INFO">Executing : Table Must Exist  |  groups_history </msg>
<msg timestamp="20170731 10:58:50.719" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='groups_history' </msg>
<status status="PASS" endtime="20170731 10:58:50.720" starttime="20170731 10:58:50.719"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts</arg>
</arguments>
<msg timestamp="20170731 10:58:50.721" level="INFO">Executing : Table Must Exist  |  hosts </msg>
<msg timestamp="20170731 10:58:50.721" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='hosts' </msg>
<status status="PASS" endtime="20170731 10:58:50.723" starttime="20170731 10:58:50.721"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts_history</arg>
</arguments>
<msg timestamp="20170731 10:58:50.723" level="INFO">Executing : Table Must Exist  |  hosts_history </msg>
<msg timestamp="20170731 10:58:50.723" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='hosts_history' </msg>
<status status="PASS" endtime="20170731 10:58:50.726" starttime="20170731 10:58:50.723"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships</arg>
</arguments>
<msg timestamp="20170731 10:58:50.727" level="INFO">Executing : Table Must Exist  |  memberships </msg>
<msg timestamp="20170731 10:58:50.727" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='memberships' </msg>
<status status="PASS" endtime="20170731 10:58:50.729" starttime="20170731 10:58:50.727"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships_history</arg>
</arguments>
<msg timestamp="20170731 10:58:50.729" level="INFO">Executing : Table Must Exist  |  memberships_history </msg>
<msg timestamp="20170731 10:58:50.729" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='memberships_history' </msg>
<status status="PASS" endtime="20170731 10:58:50.731" starttime="20170731 10:58:50.729"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>oses</arg>
</arguments>
<msg timestamp="20170731 10:58:50.731" level="INFO">Executing : Table Must Exist  |  oses </msg>
<msg timestamp="20170731 10:58:50.731" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='oses' </msg>
<status status="PASS" endtime="20170731 10:58:50.733" starttime="20170731 10:58:50.731"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>packageTypes</arg>
</arguments>
<msg timestamp="20170731 10:58:50.733" level="INFO">Executing : Table Must Exist  |  packageTypes </msg>
<msg timestamp="20170731 10:58:50.734" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='packageTypes' </msg>
<status status="PASS" endtime="20170731 10:58:50.736" starttime="20170731 10:58:50.733"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions</arg>
</arguments>
<msg timestamp="20170731 10:58:50.737" level="INFO">Executing : Table Must Exist  |  sessions </msg>
<msg timestamp="20170731 10:58:50.737" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sessions' </msg>
<status status="PASS" endtime="20170731 10:58:50.739" starttime="20170731 10:58:50.737"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions_history</arg>
</arguments>
<msg timestamp="20170731 10:58:50.739" level="INFO">Executing : Table Must Exist  |  sessions_history </msg>
<msg timestamp="20170731 10:58:50.739" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sessions_history' </msg>
<status status="PASS" endtime="20170731 10:58:50.741" starttime="20170731 10:58:50.739"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes</arg>
</arguments>
<msg timestamp="20170731 10:58:50.741" level="INFO">Executing : Table Must Exist  |  sharedAppTypes </msg>
<msg timestamp="20170731 10:58:50.742" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedAppTypes' </msg>
<status status="PASS" endtime="20170731 10:58:50.743" starttime="20170731 10:58:50.741"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes_history</arg>
</arguments>
<msg timestamp="20170731 10:58:50.744" level="INFO">Executing : Table Must Exist  |  sharedAppTypes_history </msg>
<msg timestamp="20170731 10:58:50.744" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedAppTypes_history' </msg>
<status status="PASS" endtime="20170731 10:58:50.745" starttime="20170731 10:58:50.743"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes</arg>
</arguments>
<msg timestamp="20170731 10:58:50.746" level="INFO">Executing : Table Must Exist  |  sharedPackageTypes </msg>
<msg timestamp="20170731 10:58:50.746" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedPackageTypes' </msg>
<status status="PASS" endtime="20170731 10:58:50.747" starttime="20170731 10:58:50.745"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes_history</arg>
</arguments>
<msg timestamp="20170731 10:58:50.747" level="INFO">Executing : Table Must Exist  |  sharedPackageTypes_history </msg>
<msg timestamp="20170731 10:58:50.748" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedPackageTypes_history' </msg>
<status status="PASS" endtime="20170731 10:58:50.749" starttime="20170731 10:58:50.747"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>statuses</arg>
</arguments>
<msg timestamp="20170731 10:58:50.750" level="INFO">Executing : Table Must Exist  |  statuses </msg>
<msg timestamp="20170731 10:58:50.750" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='statuses' </msg>
<status status="PASS" endtime="20170731 10:58:50.751" starttime="20170731 10:58:50.749"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks</arg>
</arguments>
<msg timestamp="20170731 10:58:50.752" level="INFO">Executing : Table Must Exist  |  tasks </msg>
<msg timestamp="20170731 10:58:50.752" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='tasks' </msg>
<status status="PASS" endtime="20170731 10:58:50.754" starttime="20170731 10:58:50.751"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks_history</arg>
</arguments>
<msg timestamp="20170731 10:58:50.754" level="INFO">Executing : Table Must Exist  |  tasks_history </msg>
<msg timestamp="20170731 10:58:50.754" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='tasks_history' </msg>
<status status="PASS" endtime="20170731 10:58:50.756" starttime="20170731 10:58:50.754"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces</arg>
</arguments>
<msg timestamp="20170731 10:58:50.756" level="INFO">Executing : Table Must Exist  |  traces </msg>
<msg timestamp="20170731 10:58:50.757" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='traces' </msg>
<status status="PASS" endtime="20170731 10:58:50.758" starttime="20170731 10:58:50.756"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces_history</arg>
</arguments>
<msg timestamp="20170731 10:58:50.759" level="INFO">Executing : Table Must Exist  |  traces_history </msg>
<msg timestamp="20170731 10:58:50.759" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='traces_history' </msg>
<status status="PASS" endtime="20170731 10:58:50.760" starttime="20170731 10:58:50.758"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>userRights</arg>
</arguments>
<msg timestamp="20170731 10:58:50.761" level="INFO">Executing : Table Must Exist  |  userRights </msg>
<msg timestamp="20170731 10:58:50.761" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='userRights' </msg>
<status status="PASS" endtime="20170731 10:58:50.762" starttime="20170731 10:58:50.760"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups</arg>
</arguments>
<msg timestamp="20170731 10:58:50.763" level="INFO">Executing : Table Must Exist  |  usergroups </msg>
<msg timestamp="20170731 10:58:50.763" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='usergroups' </msg>
<status status="PASS" endtime="20170731 10:58:50.764" starttime="20170731 10:58:50.762"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups_history</arg>
</arguments>
<msg timestamp="20170731 10:58:50.764" level="INFO">Executing : Table Must Exist  |  usergroups_history </msg>
<msg timestamp="20170731 10:58:50.765" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='usergroups_history' </msg>
<status status="PASS" endtime="20170731 10:58:50.766" starttime="20170731 10:58:50.764"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users</arg>
</arguments>
<msg timestamp="20170731 10:58:50.767" level="INFO">Executing : Table Must Exist  |  users </msg>
<msg timestamp="20170731 10:58:50.767" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='users' </msg>
<status status="PASS" endtime="20170731 10:58:50.768" starttime="20170731 10:58:50.766"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users_history</arg>
</arguments>
<msg timestamp="20170731 10:58:50.769" level="INFO">Executing : Table Must Exist  |  users_history </msg>
<msg timestamp="20170731 10:58:50.769" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='users_history' </msg>
<status status="PASS" endtime="20170731 10:58:50.771" starttime="20170731 10:58:50.768"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>version</arg>
</arguments>
<msg timestamp="20170731 10:58:50.772" level="INFO">Executing : Table Must Exist  |  version </msg>
<msg timestamp="20170731 10:58:50.772" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='version' </msg>
<status status="PASS" endtime="20170731 10:58:50.774" starttime="20170731 10:58:50.771"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>versions</arg>
</arguments>
<msg timestamp="20170731 10:58:50.774" level="INFO">Executing : Table Must Exist  |  versions </msg>
<msg timestamp="20170731 10:58:50.775" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='versions' </msg>
<status status="PASS" endtime="20170731 10:58:50.776" starttime="20170731 10:58:50.774"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps</arg>
</arguments>
<msg timestamp="20170731 10:58:50.777" level="INFO">Executing : Table Must Exist  |  view_apps </msg>
<msg timestamp="20170731 10:58:50.777" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps' </msg>
<status status="PASS" endtime="20170731 10:58:50.779" starttime="20170731 10:58:50.777"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps_for_offering</arg>
</arguments>
<msg timestamp="20170731 10:58:50.779" level="INFO">Executing : Table Must Exist  |  view_apps_for_offering </msg>
<msg timestamp="20170731 10:58:50.779" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps_for_offering' </msg>
<status status="PASS" endtime="20170731 10:58:50.781" starttime="20170731 10:58:50.779"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps_for_offering_with_file_sizes</arg>
</arguments>
<msg timestamp="20170731 10:58:50.781" level="INFO">Executing : Table Must Exist  |  view_apps_for_offering_with_file_sizes </msg>
<msg timestamp="20170731 10:58:50.781" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps_for_offering_with_file_sizes' </msg>
<status status="PASS" endtime="20170731 10:58:50.784" starttime="20170731 10:58:50.781"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_datas</arg>
</arguments>
<msg timestamp="20170731 10:58:50.785" level="INFO">Executing : Table Must Exist  |  view_datas </msg>
<msg timestamp="20170731 10:58:50.785" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_datas' </msg>
<status status="PASS" endtime="20170731 10:58:50.787" starttime="20170731 10:58:50.785"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_executables</arg>
</arguments>
<msg timestamp="20170731 10:58:50.787" level="INFO">Executing : Table Must Exist  |  view_executables </msg>
<msg timestamp="20170731 10:58:50.787" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_executables' </msg>
<status status="PASS" endtime="20170731 10:58:50.789" starttime="20170731 10:58:50.787"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_groups</arg>
</arguments>
<msg timestamp="20170731 10:58:50.789" level="INFO">Executing : Table Must Exist  |  view_groups </msg>
<msg timestamp="20170731 10:58:50.789" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_groups' </msg>
<status status="PASS" endtime="20170731 10:58:50.791" starttime="20170731 10:58:50.789"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts</arg>
</arguments>
<msg timestamp="20170731 10:58:50.791" level="INFO">Executing : Table Must Exist  |  view_hosts </msg>
<msg timestamp="20170731 10:58:50.791" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts' </msg>
<status status="PASS" endtime="20170731 10:58:50.793" starttime="20170731 10:58:50.791"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_deployable</arg>
</arguments>
<msg timestamp="20170731 10:58:50.794" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_deployable </msg>
<msg timestamp="20170731 10:58:50.794" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_deployable' </msg>
<status status="PASS" endtime="20170731 10:58:50.796" starttime="20170731 10:58:50.793"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_deployable_and_shared</arg>
</arguments>
<msg timestamp="20170731 10:58:50.796" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_deployable_and_shared </msg>
<msg timestamp="20170731 10:58:50.796" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_deployable_and_shared' </msg>
<status status="PASS" endtime="20170731 10:58:50.798" starttime="20170731 10:58:50.796"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_shared</arg>
</arguments>
<msg timestamp="20170731 10:58:50.798" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_shared </msg>
<msg timestamp="20170731 10:58:50.799" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_shared' </msg>
<status status="PASS" endtime="20170731 10:58:50.800" starttime="20170731 10:58:50.798"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_sessions</arg>
</arguments>
<msg timestamp="20170731 10:58:50.801" level="INFO">Executing : Table Must Exist  |  view_sessions </msg>
<msg timestamp="20170731 10:58:50.801" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_sessions' </msg>
<status status="PASS" endtime="20170731 10:58:50.802" starttime="20170731 10:58:50.800"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_sharedapptypes</arg>
</arguments>
<msg timestamp="20170731 10:58:50.803" level="INFO">Executing : Table Must Exist  |  view_sharedapptypes </msg>
<msg timestamp="20170731 10:58:50.803" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_sharedapptypes' </msg>
<status status="PASS" endtime="20170731 10:58:50.805" starttime="20170731 10:58:50.803"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_sharedpackagetypes</arg>
</arguments>
<msg timestamp="20170731 10:58:50.805" level="INFO">Executing : Table Must Exist  |  view_sharedpackagetypes </msg>
<msg timestamp="20170731 10:58:50.805" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_sharedpackagetypes' </msg>
<status status="PASS" endtime="20170731 10:58:50.808" starttime="20170731 10:58:50.805"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_tasks</arg>
</arguments>
<msg timestamp="20170731 10:58:50.808" level="INFO">Executing : Table Must Exist  |  view_tasks </msg>
<msg timestamp="20170731 10:58:50.809" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_tasks' </msg>
<status status="PASS" endtime="20170731 10:58:50.811" starttime="20170731 10:58:50.808"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_traces</arg>
</arguments>
<msg timestamp="20170731 10:58:50.811" level="INFO">Executing : Table Must Exist  |  view_traces </msg>
<msg timestamp="20170731 10:58:50.811" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_traces' </msg>
<status status="PASS" endtime="20170731 10:58:50.814" starttime="20170731 10:58:50.811"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_usergroups</arg>
</arguments>
<msg timestamp="20170731 10:58:50.814" level="INFO">Executing : Table Must Exist  |  view_usergroups </msg>
<msg timestamp="20170731 10:58:50.814" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_usergroups' </msg>
<status status="PASS" endtime="20170731 10:58:50.816" starttime="20170731 10:58:50.814"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users</arg>
</arguments>
<msg timestamp="20170731 10:58:50.816" level="INFO">Executing : Table Must Exist  |  view_users </msg>
<msg timestamp="20170731 10:58:50.816" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users' </msg>
<status status="PASS" endtime="20170731 10:58:50.818" starttime="20170731 10:58:50.816"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_apps</arg>
</arguments>
<msg timestamp="20170731 10:58:50.818" level="INFO">Executing : Table Must Exist  |  view_users_apps </msg>
<msg timestamp="20170731 10:58:50.818" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_apps' </msg>
<status status="PASS" endtime="20170731 10:58:50.821" starttime="20170731 10:58:50.818"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_datas</arg>
</arguments>
<msg timestamp="20170731 10:58:50.821" level="INFO">Executing : Table Must Exist  |  view_users_datas </msg>
<msg timestamp="20170731 10:58:50.821" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_datas' </msg>
<status status="PASS" endtime="20170731 10:58:50.823" starttime="20170731 10:58:50.821"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_groups</arg>
</arguments>
<msg timestamp="20170731 10:58:50.823" level="INFO">Executing : Table Must Exist  |  view_users_groups </msg>
<msg timestamp="20170731 10:58:50.823" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_groups' </msg>
<status status="PASS" endtime="20170731 10:58:50.825" starttime="20170731 10:58:50.823"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_hosts</arg>
</arguments>
<msg timestamp="20170731 10:58:50.826" level="INFO">Executing : Table Must Exist  |  view_users_hosts </msg>
<msg timestamp="20170731 10:58:50.826" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_hosts' </msg>
<status status="PASS" endtime="20170731 10:58:50.827" starttime="20170731 10:58:50.825"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_sessions</arg>
</arguments>
<msg timestamp="20170731 10:58:50.828" level="INFO">Executing : Table Must Exist  |  view_users_sessions </msg>
<msg timestamp="20170731 10:58:50.828" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_sessions' </msg>
<status status="PASS" endtime="20170731 10:58:50.830" starttime="20170731 10:58:50.828"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_tasks</arg>
</arguments>
<msg timestamp="20170731 10:58:50.830" level="INFO">Executing : Table Must Exist  |  view_users_tasks </msg>
<msg timestamp="20170731 10:58:50.830" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_tasks' </msg>
<status status="PASS" endtime="20170731 10:58:50.832" starttime="20170731 10:58:50.830"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_traces</arg>
</arguments>
<msg timestamp="20170731 10:58:50.832" level="INFO">Executing : Table Must Exist  |  view_users_traces </msg>
<msg timestamp="20170731 10:58:50.832" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_traces' </msg>
<status status="PASS" endtime="20170731 10:58:50.834" starttime="20170731 10:58:50.832"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_usergroups</arg>
</arguments>
<msg timestamp="20170731 10:58:50.834" level="INFO">Executing : Table Must Exist  |  view_users_usergroups </msg>
<msg timestamp="20170731 10:58:50.834" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_usergroups' </msg>
<status status="PASS" endtime="20170731 10:58:50.836" starttime="20170731 10:58:50.834"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_users</arg>
</arguments>
<msg timestamp="20170731 10:58:50.837" level="INFO">Executing : Table Must Exist  |  view_users_users </msg>
<msg timestamp="20170731 10:58:50.837" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_users' </msg>
<status status="PASS" endtime="20170731 10:58:50.840" starttime="20170731 10:58:50.836"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_works</arg>
</arguments>
<msg timestamp="20170731 10:58:50.841" level="INFO">Executing : Table Must Exist  |  view_users_works </msg>
<msg timestamp="20170731 10:58:50.841" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_works' </msg>
<status status="PASS" endtime="20170731 10:58:50.846" starttime="20170731 10:58:50.840"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works</arg>
</arguments>
<msg timestamp="20170731 10:58:50.847" level="INFO">Executing : Table Must Exist  |  view_works </msg>
<msg timestamp="20170731 10:58:50.847" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works' </msg>
<status status="PASS" endtime="20170731 10:58:50.851" starttime="20170731 10:58:50.847"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works_for_billing</arg>
</arguments>
<msg timestamp="20170731 10:58:50.852" level="INFO">Executing : Table Must Exist  |  view_works_for_billing </msg>
<msg timestamp="20170731 10:58:50.852" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works_for_billing' </msg>
<status status="PASS" endtime="20170731 10:58:50.854" starttime="20170731 10:58:50.852"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works_for_billing_with_file_sizes</arg>
</arguments>
<msg timestamp="20170731 10:58:50.855" level="INFO">Executing : Table Must Exist  |  view_works_for_billing_with_file_sizes </msg>
<msg timestamp="20170731 10:58:50.855" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works_for_billing_with_file_sizes' </msg>
<status status="PASS" endtime="20170731 10:58:50.859" starttime="20170731 10:58:50.855"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works</arg>
</arguments>
<msg timestamp="20170731 10:58:50.859" level="INFO">Executing : Table Must Exist  |  works </msg>
<msg timestamp="20170731 10:58:50.860" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='works' </msg>
<status status="PASS" endtime="20170731 10:58:50.862" starttime="20170731 10:58:50.859"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works_history</arg>
</arguments>
<msg timestamp="20170731 10:58:50.863" level="INFO">Executing : Table Must Exist  |  works_history </msg>
<msg timestamp="20170731 10:58:50.863" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='works_history' </msg>
<status status="PASS" endtime="20170731 10:58:50.866" starttime="20170731 10:58:50.862"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170731 10:58:50.867" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170731 10:58:50.867" starttime="20170731 10:58:50.866"></status>
</kw>
<status status="PASS" endtime="20170731 10:58:50.867" starttime="20170731 10:58:50.866"></status>
</kw>
<status status="PASS" endtime="20170731 10:58:50.867" starttime="20170731 10:58:50.681"></status>
</kw>
<status status="PASS" endtime="20170731 10:58:50.867" starttime="20170731 10:58:50.681"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>TODO ping XWtremWeb server up</arg>
</arguments>
<msg timestamp="20170731 10:58:50.868" level="INFO">TODO ping XWtremWeb server up</msg>
<status status="PASS" endtime="20170731 10:58:50.868" starttime="20170731 10:58:50.868"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>TODO ping XWtremWeb worker up before one test</arg>
</arguments>
<msg timestamp="20170731 10:58:50.869" level="INFO">TODO ping XWtremWeb worker up before one test</msg>
<status status="PASS" endtime="20170731 10:58:50.869" starttime="20170731 10:58:50.868"></status>
</kw>
<kw name="Delete Fonctionnal Xtremweb Tables" library="MySql">
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170731 10:58:50.871" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170731 10:58:50.877" starttime="20170731 10:58:50.870"></status>
</kw>
<status status="PASS" endtime="20170731 10:58:50.877" starttime="20170731 10:58:50.869"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps</arg>
</arguments>
<msg timestamp="20170731 10:58:50.878" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM apps; </msg>
<status status="PASS" endtime="20170731 10:58:50.881" starttime="20170731 10:58:50.878"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps_history</arg>
</arguments>
<msg timestamp="20170731 10:58:50.881" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM apps_history; </msg>
<status status="PASS" endtime="20170731 10:58:50.885" starttime="20170731 10:58:50.881"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas</arg>
</arguments>
<msg timestamp="20170731 10:58:50.886" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM datas; </msg>
<status status="PASS" endtime="20170731 10:58:50.887" starttime="20170731 10:58:50.885"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas_history</arg>
</arguments>
<msg timestamp="20170731 10:58:50.888" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM datas_history; </msg>
<status status="PASS" endtime="20170731 10:58:50.890" starttime="20170731 10:58:50.887"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables</arg>
</arguments>
<msg timestamp="20170731 10:58:50.890" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM executables; </msg>
<status status="PASS" endtime="20170731 10:58:50.891" starttime="20170731 10:58:50.890"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables_history</arg>
</arguments>
<msg timestamp="20170731 10:58:50.891" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM executables_history; </msg>
<status status="PASS" endtime="20170731 10:58:50.892" starttime="20170731 10:58:50.891"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups</arg>
</arguments>
<msg timestamp="20170731 10:58:50.893" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM groups; </msg>
<status status="PASS" endtime="20170731 10:58:50.894" starttime="20170731 10:58:50.892"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups_history</arg>
</arguments>
<msg timestamp="20170731 10:58:50.894" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM groups_history; </msg>
<status status="PASS" endtime="20170731 10:58:50.897" starttime="20170731 10:58:50.894"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts</arg>
</arguments>
<msg timestamp="20170731 10:58:50.897" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM hosts; </msg>
<status status="PASS" endtime="20170731 10:58:50.899" starttime="20170731 10:58:50.897"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts_history</arg>
</arguments>
<msg timestamp="20170731 10:58:50.899" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM hosts_history; </msg>
<status status="PASS" endtime="20170731 10:58:50.903" starttime="20170731 10:58:50.899"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships</arg>
</arguments>
<msg timestamp="20170731 10:58:50.904" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM memberships; </msg>
<status status="PASS" endtime="20170731 10:58:50.907" starttime="20170731 10:58:50.904"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships_history</arg>
</arguments>
<msg timestamp="20170731 10:58:50.908" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM memberships_history; </msg>
<status status="PASS" endtime="20170731 10:58:50.909" starttime="20170731 10:58:50.907"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions</arg>
</arguments>
<msg timestamp="20170731 10:58:50.910" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sessions; </msg>
<status status="PASS" endtime="20170731 10:58:50.911" starttime="20170731 10:58:50.910"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions_history</arg>
</arguments>
<msg timestamp="20170731 10:58:50.912" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sessions_history; </msg>
<status status="PASS" endtime="20170731 10:58:50.915" starttime="20170731 10:58:50.912"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes</arg>
</arguments>
<msg timestamp="20170731 10:58:50.915" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedAppTypes; </msg>
<status status="PASS" endtime="20170731 10:58:50.917" starttime="20170731 10:58:50.915"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes_history</arg>
</arguments>
<msg timestamp="20170731 10:58:50.917" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedAppTypes_history; </msg>
<status status="PASS" endtime="20170731 10:58:50.918" starttime="20170731 10:58:50.917"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes</arg>
</arguments>
<msg timestamp="20170731 10:58:50.919" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedPackageTypes; </msg>
<status status="PASS" endtime="20170731 10:58:50.920" starttime="20170731 10:58:50.919"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes_history</arg>
</arguments>
<msg timestamp="20170731 10:58:50.921" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedPackageTypes_history; </msg>
<status status="PASS" endtime="20170731 10:58:50.922" starttime="20170731 10:58:50.920"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks</arg>
</arguments>
<msg timestamp="20170731 10:58:50.922" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM tasks; </msg>
<status status="PASS" endtime="20170731 10:58:50.924" starttime="20170731 10:58:50.922"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks_history</arg>
</arguments>
<msg timestamp="20170731 10:58:50.924" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM tasks_history; </msg>
<status status="PASS" endtime="20170731 10:58:50.926" starttime="20170731 10:58:50.924"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces</arg>
</arguments>
<msg timestamp="20170731 10:58:50.927" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM traces; </msg>
<status status="PASS" endtime="20170731 10:58:50.930" starttime="20170731 10:58:50.927"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces_history</arg>
</arguments>
<msg timestamp="20170731 10:58:50.930" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM traces_history; </msg>
<status status="PASS" endtime="20170731 10:58:50.931" starttime="20170731 10:58:50.930"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups</arg>
</arguments>
<msg timestamp="20170731 10:58:50.931" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM usergroups; </msg>
<status status="PASS" endtime="20170731 10:58:50.933" starttime="20170731 10:58:50.931"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups_history</arg>
</arguments>
<msg timestamp="20170731 10:58:50.933" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM usergroups_history; </msg>
<status status="PASS" endtime="20170731 10:58:50.936" starttime="20170731 10:58:50.933"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users_history</arg>
</arguments>
<msg timestamp="20170731 10:58:50.937" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM users_history; </msg>
<status status="PASS" endtime="20170731 10:58:50.938" starttime="20170731 10:58:50.936"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works</arg>
</arguments>
<msg timestamp="20170731 10:58:50.939" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM works; </msg>
<status status="PASS" endtime="20170731 10:58:50.940" starttime="20170731 10:58:50.939"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works_history</arg>
</arguments>
<msg timestamp="20170731 10:58:50.940" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM works_history; </msg>
<status status="PASS" endtime="20170731 10:58:50.942" starttime="20170731 10:58:50.940"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170731 10:58:50.943" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170731 10:58:50.943" starttime="20170731 10:58:50.943"></status>
</kw>
<status status="PASS" endtime="20170731 10:58:50.943" starttime="20170731 10:58:50.942"></status>
</kw>
<status status="PASS" endtime="20170731 10:58:50.943" starttime="20170731 10:58:50.869"></status>
</kw>
<status status="PASS" endtime="20170731 10:58:50.943" starttime="20170731 10:58:50.681"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>TODO</arg>
</arguments>
<msg timestamp="20170731 10:58:50.944" level="INFO">TODO</msg>
<status status="PASS" endtime="20170731 10:58:50.944" starttime="20170731 10:58:50.944"></status>
</kw>
<kw type="teardown" name="End XWtremWeb Command Test" library="XWCommon">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Nothing to do</arg>
</arguments>
<msg timestamp="20170731 10:58:50.946" level="INFO">Nothing to do</msg>
<status status="PASS" endtime="20170731 10:58:50.946" starttime="20170731 10:58:50.945"></status>
</kw>
<status status="PASS" endtime="20170731 10:58:50.946" starttime="20170731 10:58:50.945"></status>
</kw>
<tags>
<tag>CommandLine Tests</tag>
</tags>
<status status="PASS" endtime="20170731 10:58:50.946" critical="yes" starttime="20170731 10:58:50.680"></status>
</test>
<test id="s1-s3-t8" name="Test 5 Tester le matchmaking">
<kw type="setup" name="Begin XWtremWeb Command Test" library="XWCommon">
<kw name="Ping XWtremWeb Database" library="XWServer">
<kw name="Xtremweb Tables Must Exist" library="MySql">
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170731 10:58:50.951" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170731 10:58:50.953" starttime="20170731 10:58:50.950"></status>
</kw>
<status status="PASS" endtime="20170731 10:58:50.953" starttime="20170731 10:58:50.950"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>appTypes</arg>
</arguments>
<msg timestamp="20170731 10:58:50.953" level="INFO">Executing : Table Must Exist  |  appTypes </msg>
<msg timestamp="20170731 10:58:50.953" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='appTypes' </msg>
<status status="PASS" endtime="20170731 10:58:50.955" starttime="20170731 10:58:50.953"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps</arg>
</arguments>
<msg timestamp="20170731 10:58:50.955" level="INFO">Executing : Table Must Exist  |  apps </msg>
<msg timestamp="20170731 10:58:50.955" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='apps' </msg>
<status status="PASS" endtime="20170731 10:58:50.957" starttime="20170731 10:58:50.955"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps_history</arg>
</arguments>
<msg timestamp="20170731 10:58:50.957" level="INFO">Executing : Table Must Exist  |  apps_history </msg>
<msg timestamp="20170731 10:58:50.957" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='apps_history' </msg>
<status status="PASS" endtime="20170731 10:58:50.959" starttime="20170731 10:58:50.957"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>cpuTypes</arg>
</arguments>
<msg timestamp="20170731 10:58:50.960" level="INFO">Executing : Table Must Exist  |  cpuTypes </msg>
<msg timestamp="20170731 10:58:50.960" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='cpuTypes' </msg>
<status status="PASS" endtime="20170731 10:58:50.962" starttime="20170731 10:58:50.959"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>dataTypes</arg>
</arguments>
<msg timestamp="20170731 10:58:50.962" level="INFO">Executing : Table Must Exist  |  dataTypes </msg>
<msg timestamp="20170731 10:58:50.963" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='dataTypes' </msg>
<status status="PASS" endtime="20170731 10:58:50.966" starttime="20170731 10:58:50.962"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas</arg>
</arguments>
<msg timestamp="20170731 10:58:50.967" level="INFO">Executing : Table Must Exist  |  datas </msg>
<msg timestamp="20170731 10:58:50.967" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='datas' </msg>
<status status="PASS" endtime="20170731 10:58:50.970" starttime="20170731 10:58:50.967"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas_history</arg>
</arguments>
<msg timestamp="20170731 10:58:50.971" level="INFO">Executing : Table Must Exist  |  datas_history </msg>
<msg timestamp="20170731 10:58:50.971" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='datas_history' </msg>
<status status="PASS" endtime="20170731 10:58:50.973" starttime="20170731 10:58:50.970"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables</arg>
</arguments>
<msg timestamp="20170731 10:58:50.974" level="INFO">Executing : Table Must Exist  |  executables </msg>
<msg timestamp="20170731 10:58:50.974" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='executables' </msg>
<status status="PASS" endtime="20170731 10:58:50.976" starttime="20170731 10:58:50.973"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables_history</arg>
</arguments>
<msg timestamp="20170731 10:58:50.978" level="INFO">Executing : Table Must Exist  |  executables_history </msg>
<msg timestamp="20170731 10:58:50.978" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='executables_history' </msg>
<status status="PASS" endtime="20170731 10:58:50.981" starttime="20170731 10:58:50.977"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups</arg>
</arguments>
<msg timestamp="20170731 10:58:50.981" level="INFO">Executing : Table Must Exist  |  groups </msg>
<msg timestamp="20170731 10:58:50.981" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='groups' </msg>
<status status="PASS" endtime="20170731 10:58:50.983" starttime="20170731 10:58:50.981"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups_history</arg>
</arguments>
<msg timestamp="20170731 10:58:50.983" level="INFO">Executing : Table Must Exist  |  groups_history </msg>
<msg timestamp="20170731 10:58:50.983" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='groups_history' </msg>
<status status="PASS" endtime="20170731 10:58:50.985" starttime="20170731 10:58:50.983"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts</arg>
</arguments>
<msg timestamp="20170731 10:58:50.985" level="INFO">Executing : Table Must Exist  |  hosts </msg>
<msg timestamp="20170731 10:58:50.986" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='hosts' </msg>
<status status="PASS" endtime="20170731 10:58:50.987" starttime="20170731 10:58:50.985"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts_history</arg>
</arguments>
<msg timestamp="20170731 10:58:50.988" level="INFO">Executing : Table Must Exist  |  hosts_history </msg>
<msg timestamp="20170731 10:58:50.988" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='hosts_history' </msg>
<status status="PASS" endtime="20170731 10:58:50.991" starttime="20170731 10:58:50.987"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships</arg>
</arguments>
<msg timestamp="20170731 10:58:50.992" level="INFO">Executing : Table Must Exist  |  memberships </msg>
<msg timestamp="20170731 10:58:50.992" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='memberships' </msg>
<status status="PASS" endtime="20170731 10:58:50.998" starttime="20170731 10:58:50.991"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships_history</arg>
</arguments>
<msg timestamp="20170731 10:58:50.999" level="INFO">Executing : Table Must Exist  |  memberships_history </msg>
<msg timestamp="20170731 10:58:50.999" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='memberships_history' </msg>
<status status="PASS" endtime="20170731 10:58:51.001" starttime="20170731 10:58:50.998"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>oses</arg>
</arguments>
<msg timestamp="20170731 10:58:51.002" level="INFO">Executing : Table Must Exist  |  oses </msg>
<msg timestamp="20170731 10:58:51.002" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='oses' </msg>
<status status="PASS" endtime="20170731 10:58:51.004" starttime="20170731 10:58:51.002"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>packageTypes</arg>
</arguments>
<msg timestamp="20170731 10:58:51.004" level="INFO">Executing : Table Must Exist  |  packageTypes </msg>
<msg timestamp="20170731 10:58:51.004" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='packageTypes' </msg>
<status status="PASS" endtime="20170731 10:58:51.006" starttime="20170731 10:58:51.004"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions</arg>
</arguments>
<msg timestamp="20170731 10:58:51.007" level="INFO">Executing : Table Must Exist  |  sessions </msg>
<msg timestamp="20170731 10:58:51.007" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sessions' </msg>
<status status="PASS" endtime="20170731 10:58:51.008" starttime="20170731 10:58:51.007"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions_history</arg>
</arguments>
<msg timestamp="20170731 10:58:51.009" level="INFO">Executing : Table Must Exist  |  sessions_history </msg>
<msg timestamp="20170731 10:58:51.009" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sessions_history' </msg>
<status status="PASS" endtime="20170731 10:58:51.010" starttime="20170731 10:58:51.009"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes</arg>
</arguments>
<msg timestamp="20170731 10:58:51.011" level="INFO">Executing : Table Must Exist  |  sharedAppTypes </msg>
<msg timestamp="20170731 10:58:51.011" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedAppTypes' </msg>
<status status="PASS" endtime="20170731 10:58:51.012" starttime="20170731 10:58:51.011"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes_history</arg>
</arguments>
<msg timestamp="20170731 10:58:51.013" level="INFO">Executing : Table Must Exist  |  sharedAppTypes_history </msg>
<msg timestamp="20170731 10:58:51.013" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedAppTypes_history' </msg>
<status status="PASS" endtime="20170731 10:58:51.016" starttime="20170731 10:58:51.013"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes</arg>
</arguments>
<msg timestamp="20170731 10:58:51.016" level="INFO">Executing : Table Must Exist  |  sharedPackageTypes </msg>
<msg timestamp="20170731 10:58:51.017" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedPackageTypes' </msg>
<status status="PASS" endtime="20170731 10:58:51.018" starttime="20170731 10:58:51.016"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes_history</arg>
</arguments>
<msg timestamp="20170731 10:58:51.019" level="INFO">Executing : Table Must Exist  |  sharedPackageTypes_history </msg>
<msg timestamp="20170731 10:58:51.019" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedPackageTypes_history' </msg>
<status status="PASS" endtime="20170731 10:58:51.021" starttime="20170731 10:58:51.018"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>statuses</arg>
</arguments>
<msg timestamp="20170731 10:58:51.022" level="INFO">Executing : Table Must Exist  |  statuses </msg>
<msg timestamp="20170731 10:58:51.022" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='statuses' </msg>
<status status="PASS" endtime="20170731 10:58:51.025" starttime="20170731 10:58:51.022"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks</arg>
</arguments>
<msg timestamp="20170731 10:58:51.026" level="INFO">Executing : Table Must Exist  |  tasks </msg>
<msg timestamp="20170731 10:58:51.026" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='tasks' </msg>
<status status="PASS" endtime="20170731 10:58:51.028" starttime="20170731 10:58:51.025"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks_history</arg>
</arguments>
<msg timestamp="20170731 10:58:51.028" level="INFO">Executing : Table Must Exist  |  tasks_history </msg>
<msg timestamp="20170731 10:58:51.028" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='tasks_history' </msg>
<status status="PASS" endtime="20170731 10:58:51.031" starttime="20170731 10:58:51.028"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces</arg>
</arguments>
<msg timestamp="20170731 10:58:51.032" level="INFO">Executing : Table Must Exist  |  traces </msg>
<msg timestamp="20170731 10:58:51.032" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='traces' </msg>
<status status="PASS" endtime="20170731 10:58:51.035" starttime="20170731 10:58:51.031"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces_history</arg>
</arguments>
<msg timestamp="20170731 10:58:51.036" level="INFO">Executing : Table Must Exist  |  traces_history </msg>
<msg timestamp="20170731 10:58:51.036" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='traces_history' </msg>
<status status="PASS" endtime="20170731 10:58:51.038" starttime="20170731 10:58:51.035"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>userRights</arg>
</arguments>
<msg timestamp="20170731 10:58:51.039" level="INFO">Executing : Table Must Exist  |  userRights </msg>
<msg timestamp="20170731 10:58:51.039" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='userRights' </msg>
<status status="PASS" endtime="20170731 10:58:51.042" starttime="20170731 10:58:51.039"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups</arg>
</arguments>
<msg timestamp="20170731 10:58:51.043" level="INFO">Executing : Table Must Exist  |  usergroups </msg>
<msg timestamp="20170731 10:58:51.043" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='usergroups' </msg>
<status status="PASS" endtime="20170731 10:58:51.046" starttime="20170731 10:58:51.043"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups_history</arg>
</arguments>
<msg timestamp="20170731 10:58:51.047" level="INFO">Executing : Table Must Exist  |  usergroups_history </msg>
<msg timestamp="20170731 10:58:51.047" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='usergroups_history' </msg>
<status status="PASS" endtime="20170731 10:58:51.049" starttime="20170731 10:58:51.047"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users</arg>
</arguments>
<msg timestamp="20170731 10:58:51.050" level="INFO">Executing : Table Must Exist  |  users </msg>
<msg timestamp="20170731 10:58:51.050" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='users' </msg>
<status status="PASS" endtime="20170731 10:58:51.051" starttime="20170731 10:58:51.049"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users_history</arg>
</arguments>
<msg timestamp="20170731 10:58:51.052" level="INFO">Executing : Table Must Exist  |  users_history </msg>
<msg timestamp="20170731 10:58:51.052" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='users_history' </msg>
<status status="PASS" endtime="20170731 10:58:51.054" starttime="20170731 10:58:51.052"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>version</arg>
</arguments>
<msg timestamp="20170731 10:58:51.054" level="INFO">Executing : Table Must Exist  |  version </msg>
<msg timestamp="20170731 10:58:51.054" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='version' </msg>
<status status="PASS" endtime="20170731 10:58:51.056" starttime="20170731 10:58:51.054"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>versions</arg>
</arguments>
<msg timestamp="20170731 10:58:51.057" level="INFO">Executing : Table Must Exist  |  versions </msg>
<msg timestamp="20170731 10:58:51.057" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='versions' </msg>
<status status="PASS" endtime="20170731 10:58:51.059" starttime="20170731 10:58:51.056"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps</arg>
</arguments>
<msg timestamp="20170731 10:58:51.059" level="INFO">Executing : Table Must Exist  |  view_apps </msg>
<msg timestamp="20170731 10:58:51.059" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps' </msg>
<status status="PASS" endtime="20170731 10:58:51.061" starttime="20170731 10:58:51.059"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps_for_offering</arg>
</arguments>
<msg timestamp="20170731 10:58:51.062" level="INFO">Executing : Table Must Exist  |  view_apps_for_offering </msg>
<msg timestamp="20170731 10:58:51.062" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps_for_offering' </msg>
<status status="PASS" endtime="20170731 10:58:51.063" starttime="20170731 10:58:51.061"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps_for_offering_with_file_sizes</arg>
</arguments>
<msg timestamp="20170731 10:58:51.064" level="INFO">Executing : Table Must Exist  |  view_apps_for_offering_with_file_sizes </msg>
<msg timestamp="20170731 10:58:51.064" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps_for_offering_with_file_sizes' </msg>
<status status="PASS" endtime="20170731 10:58:51.066" starttime="20170731 10:58:51.064"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_datas</arg>
</arguments>
<msg timestamp="20170731 10:58:51.067" level="INFO">Executing : Table Must Exist  |  view_datas </msg>
<msg timestamp="20170731 10:58:51.067" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_datas' </msg>
<status status="PASS" endtime="20170731 10:58:51.069" starttime="20170731 10:58:51.067"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_executables</arg>
</arguments>
<msg timestamp="20170731 10:58:51.070" level="INFO">Executing : Table Must Exist  |  view_executables </msg>
<msg timestamp="20170731 10:58:51.070" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_executables' </msg>
<status status="PASS" endtime="20170731 10:58:51.072" starttime="20170731 10:58:51.069"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_groups</arg>
</arguments>
<msg timestamp="20170731 10:58:51.073" level="INFO">Executing : Table Must Exist  |  view_groups </msg>
<msg timestamp="20170731 10:58:51.073" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_groups' </msg>
<status status="PASS" endtime="20170731 10:58:51.075" starttime="20170731 10:58:51.072"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts</arg>
</arguments>
<msg timestamp="20170731 10:58:51.075" level="INFO">Executing : Table Must Exist  |  view_hosts </msg>
<msg timestamp="20170731 10:58:51.075" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts' </msg>
<status status="PASS" endtime="20170731 10:58:51.078" starttime="20170731 10:58:51.075"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_deployable</arg>
</arguments>
<msg timestamp="20170731 10:58:51.078" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_deployable </msg>
<msg timestamp="20170731 10:58:51.079" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_deployable' </msg>
<status status="PASS" endtime="20170731 10:58:51.080" starttime="20170731 10:58:51.078"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_deployable_and_shared</arg>
</arguments>
<msg timestamp="20170731 10:58:51.081" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_deployable_and_shared </msg>
<msg timestamp="20170731 10:58:51.081" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_deployable_and_shared' </msg>
<status status="PASS" endtime="20170731 10:58:51.084" starttime="20170731 10:58:51.081"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_shared</arg>
</arguments>
<msg timestamp="20170731 10:58:51.084" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_shared </msg>
<msg timestamp="20170731 10:58:51.084" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_shared' </msg>
<status status="PASS" endtime="20170731 10:58:51.086" starttime="20170731 10:58:51.084"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_sessions</arg>
</arguments>
<msg timestamp="20170731 10:58:51.087" level="INFO">Executing : Table Must Exist  |  view_sessions </msg>
<msg timestamp="20170731 10:58:51.087" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_sessions' </msg>
<status status="PASS" endtime="20170731 10:58:51.089" starttime="20170731 10:58:51.087"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_sharedapptypes</arg>
</arguments>
<msg timestamp="20170731 10:58:51.089" level="INFO">Executing : Table Must Exist  |  view_sharedapptypes </msg>
<msg timestamp="20170731 10:58:51.089" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_sharedapptypes' </msg>
<status status="PASS" endtime="20170731 10:58:51.091" starttime="20170731 10:58:51.089"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_sharedpackagetypes</arg>
</arguments>
<msg timestamp="20170731 10:58:51.092" level="INFO">Executing : Table Must Exist  |  view_sharedpackagetypes </msg>
<msg timestamp="20170731 10:58:51.092" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_sharedpackagetypes' </msg>
<status status="PASS" endtime="20170731 10:58:51.096" starttime="20170731 10:58:51.091"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_tasks</arg>
</arguments>
<msg timestamp="20170731 10:58:51.096" level="INFO">Executing : Table Must Exist  |  view_tasks </msg>
<msg timestamp="20170731 10:58:51.096" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_tasks' </msg>
<status status="PASS" endtime="20170731 10:58:51.098" starttime="20170731 10:58:51.096"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_traces</arg>
</arguments>
<msg timestamp="20170731 10:58:51.099" level="INFO">Executing : Table Must Exist  |  view_traces </msg>
<msg timestamp="20170731 10:58:51.099" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_traces' </msg>
<status status="PASS" endtime="20170731 10:58:51.102" starttime="20170731 10:58:51.099"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_usergroups</arg>
</arguments>
<msg timestamp="20170731 10:58:51.102" level="INFO">Executing : Table Must Exist  |  view_usergroups </msg>
<msg timestamp="20170731 10:58:51.102" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_usergroups' </msg>
<status status="PASS" endtime="20170731 10:58:51.104" starttime="20170731 10:58:51.102"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users</arg>
</arguments>
<msg timestamp="20170731 10:58:51.105" level="INFO">Executing : Table Must Exist  |  view_users </msg>
<msg timestamp="20170731 10:58:51.105" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users' </msg>
<status status="PASS" endtime="20170731 10:58:51.108" starttime="20170731 10:58:51.105"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_apps</arg>
</arguments>
<msg timestamp="20170731 10:58:51.108" level="INFO">Executing : Table Must Exist  |  view_users_apps </msg>
<msg timestamp="20170731 10:58:51.108" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_apps' </msg>
<status status="PASS" endtime="20170731 10:58:51.111" starttime="20170731 10:58:51.108"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_datas</arg>
</arguments>
<msg timestamp="20170731 10:58:51.112" level="INFO">Executing : Table Must Exist  |  view_users_datas </msg>
<msg timestamp="20170731 10:58:51.112" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_datas' </msg>
<status status="PASS" endtime="20170731 10:58:51.118" starttime="20170731 10:58:51.112"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_groups</arg>
</arguments>
<msg timestamp="20170731 10:58:51.118" level="INFO">Executing : Table Must Exist  |  view_users_groups </msg>
<msg timestamp="20170731 10:58:51.118" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_groups' </msg>
<status status="PASS" endtime="20170731 10:58:51.121" starttime="20170731 10:58:51.118"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_hosts</arg>
</arguments>
<msg timestamp="20170731 10:58:51.122" level="INFO">Executing : Table Must Exist  |  view_users_hosts </msg>
<msg timestamp="20170731 10:58:51.122" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_hosts' </msg>
<status status="PASS" endtime="20170731 10:58:51.125" starttime="20170731 10:58:51.121"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_sessions</arg>
</arguments>
<msg timestamp="20170731 10:58:51.126" level="INFO">Executing : Table Must Exist  |  view_users_sessions </msg>
<msg timestamp="20170731 10:58:51.126" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_sessions' </msg>
<status status="PASS" endtime="20170731 10:58:51.129" starttime="20170731 10:58:51.126"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_tasks</arg>
</arguments>
<msg timestamp="20170731 10:58:51.129" level="INFO">Executing : Table Must Exist  |  view_users_tasks </msg>
<msg timestamp="20170731 10:58:51.129" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_tasks' </msg>
<status status="PASS" endtime="20170731 10:58:51.131" starttime="20170731 10:58:51.129"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_traces</arg>
</arguments>
<msg timestamp="20170731 10:58:51.132" level="INFO">Executing : Table Must Exist  |  view_users_traces </msg>
<msg timestamp="20170731 10:58:51.132" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_traces' </msg>
<status status="PASS" endtime="20170731 10:58:51.134" starttime="20170731 10:58:51.131"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_usergroups</arg>
</arguments>
<msg timestamp="20170731 10:58:51.134" level="INFO">Executing : Table Must Exist  |  view_users_usergroups </msg>
<msg timestamp="20170731 10:58:51.134" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_usergroups' </msg>
<status status="PASS" endtime="20170731 10:58:51.138" starttime="20170731 10:58:51.134"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_users</arg>
</arguments>
<msg timestamp="20170731 10:58:51.138" level="INFO">Executing : Table Must Exist  |  view_users_users </msg>
<msg timestamp="20170731 10:58:51.138" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_users' </msg>
<status status="PASS" endtime="20170731 10:58:51.140" starttime="20170731 10:58:51.138"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_works</arg>
</arguments>
<msg timestamp="20170731 10:58:51.141" level="INFO">Executing : Table Must Exist  |  view_users_works </msg>
<msg timestamp="20170731 10:58:51.141" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_works' </msg>
<status status="PASS" endtime="20170731 10:58:51.143" starttime="20170731 10:58:51.140"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works</arg>
</arguments>
<msg timestamp="20170731 10:58:51.144" level="INFO">Executing : Table Must Exist  |  view_works </msg>
<msg timestamp="20170731 10:58:51.144" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works' </msg>
<status status="PASS" endtime="20170731 10:58:51.146" starttime="20170731 10:58:51.143"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works_for_billing</arg>
</arguments>
<msg timestamp="20170731 10:58:51.147" level="INFO">Executing : Table Must Exist  |  view_works_for_billing </msg>
<msg timestamp="20170731 10:58:51.147" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works_for_billing' </msg>
<status status="PASS" endtime="20170731 10:58:51.149" starttime="20170731 10:58:51.146"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works_for_billing_with_file_sizes</arg>
</arguments>
<msg timestamp="20170731 10:58:51.150" level="INFO">Executing : Table Must Exist  |  view_works_for_billing_with_file_sizes </msg>
<msg timestamp="20170731 10:58:51.150" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works_for_billing_with_file_sizes' </msg>
<status status="PASS" endtime="20170731 10:58:51.153" starttime="20170731 10:58:51.150"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works</arg>
</arguments>
<msg timestamp="20170731 10:58:51.154" level="INFO">Executing : Table Must Exist  |  works </msg>
<msg timestamp="20170731 10:58:51.154" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='works' </msg>
<status status="PASS" endtime="20170731 10:58:51.156" starttime="20170731 10:58:51.153"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works_history</arg>
</arguments>
<msg timestamp="20170731 10:58:51.157" level="INFO">Executing : Table Must Exist  |  works_history </msg>
<msg timestamp="20170731 10:58:51.157" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='works_history' </msg>
<status status="PASS" endtime="20170731 10:58:51.159" starttime="20170731 10:58:51.157"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170731 10:58:51.160" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170731 10:58:51.160" starttime="20170731 10:58:51.160"></status>
</kw>
<status status="PASS" endtime="20170731 10:58:51.160" starttime="20170731 10:58:51.159"></status>
</kw>
<status status="PASS" endtime="20170731 10:58:51.160" starttime="20170731 10:58:50.949"></status>
</kw>
<status status="PASS" endtime="20170731 10:58:51.160" starttime="20170731 10:58:50.949"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>TODO ping XWtremWeb server up</arg>
</arguments>
<msg timestamp="20170731 10:58:51.161" level="INFO">TODO ping XWtremWeb server up</msg>
<status status="PASS" endtime="20170731 10:58:51.161" starttime="20170731 10:58:51.161"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>TODO ping XWtremWeb worker up before one test</arg>
</arguments>
<msg timestamp="20170731 10:58:51.161" level="INFO">TODO ping XWtremWeb worker up before one test</msg>
<status status="PASS" endtime="20170731 10:58:51.162" starttime="20170731 10:58:51.161"></status>
</kw>
<kw name="Delete Fonctionnal Xtremweb Tables" library="MySql">
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170731 10:58:51.163" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170731 10:58:51.166" starttime="20170731 10:58:51.163"></status>
</kw>
<status status="PASS" endtime="20170731 10:58:51.166" starttime="20170731 10:58:51.162"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps</arg>
</arguments>
<msg timestamp="20170731 10:58:51.167" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM apps; </msg>
<status status="PASS" endtime="20170731 10:58:51.168" starttime="20170731 10:58:51.166"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps_history</arg>
</arguments>
<msg timestamp="20170731 10:58:51.169" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM apps_history; </msg>
<status status="PASS" endtime="20170731 10:58:51.170" starttime="20170731 10:58:51.168"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas</arg>
</arguments>
<msg timestamp="20170731 10:58:51.171" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM datas; </msg>
<status status="PASS" endtime="20170731 10:58:51.172" starttime="20170731 10:58:51.170"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas_history</arg>
</arguments>
<msg timestamp="20170731 10:58:51.172" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM datas_history; </msg>
<status status="PASS" endtime="20170731 10:58:51.173" starttime="20170731 10:58:51.172"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables</arg>
</arguments>
<msg timestamp="20170731 10:58:51.173" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM executables; </msg>
<status status="PASS" endtime="20170731 10:58:51.174" starttime="20170731 10:58:51.173"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables_history</arg>
</arguments>
<msg timestamp="20170731 10:58:51.175" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM executables_history; </msg>
<status status="PASS" endtime="20170731 10:58:51.176" starttime="20170731 10:58:51.175"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups</arg>
</arguments>
<msg timestamp="20170731 10:58:51.176" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM groups; </msg>
<status status="PASS" endtime="20170731 10:58:51.177" starttime="20170731 10:58:51.176"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups_history</arg>
</arguments>
<msg timestamp="20170731 10:58:51.177" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM groups_history; </msg>
<status status="PASS" endtime="20170731 10:58:51.178" starttime="20170731 10:58:51.177"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts</arg>
</arguments>
<msg timestamp="20170731 10:58:51.179" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM hosts; </msg>
<status status="PASS" endtime="20170731 10:58:51.180" starttime="20170731 10:58:51.178"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts_history</arg>
</arguments>
<msg timestamp="20170731 10:58:51.180" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM hosts_history; </msg>
<status status="PASS" endtime="20170731 10:58:51.181" starttime="20170731 10:58:51.180"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships</arg>
</arguments>
<msg timestamp="20170731 10:58:51.182" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM memberships; </msg>
<status status="PASS" endtime="20170731 10:58:51.183" starttime="20170731 10:58:51.181"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships_history</arg>
</arguments>
<msg timestamp="20170731 10:58:51.184" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM memberships_history; </msg>
<status status="PASS" endtime="20170731 10:58:51.185" starttime="20170731 10:58:51.183"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions</arg>
</arguments>
<msg timestamp="20170731 10:58:51.186" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sessions; </msg>
<status status="PASS" endtime="20170731 10:58:51.187" starttime="20170731 10:58:51.186"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions_history</arg>
</arguments>
<msg timestamp="20170731 10:58:51.188" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sessions_history; </msg>
<status status="PASS" endtime="20170731 10:58:51.189" starttime="20170731 10:58:51.187"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes</arg>
</arguments>
<msg timestamp="20170731 10:58:51.190" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedAppTypes; </msg>
<status status="PASS" endtime="20170731 10:58:51.191" starttime="20170731 10:58:51.189"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes_history</arg>
</arguments>
<msg timestamp="20170731 10:58:51.192" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedAppTypes_history; </msg>
<status status="PASS" endtime="20170731 10:58:51.193" starttime="20170731 10:58:51.192"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes</arg>
</arguments>
<msg timestamp="20170731 10:58:51.194" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedPackageTypes; </msg>
<status status="PASS" endtime="20170731 10:58:51.195" starttime="20170731 10:58:51.193"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes_history</arg>
</arguments>
<msg timestamp="20170731 10:58:51.195" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedPackageTypes_history; </msg>
<status status="PASS" endtime="20170731 10:58:51.196" starttime="20170731 10:58:51.195"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks</arg>
</arguments>
<msg timestamp="20170731 10:58:51.197" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM tasks; </msg>
<status status="PASS" endtime="20170731 10:58:51.198" starttime="20170731 10:58:51.197"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks_history</arg>
</arguments>
<msg timestamp="20170731 10:58:51.198" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM tasks_history; </msg>
<status status="PASS" endtime="20170731 10:58:51.199" starttime="20170731 10:58:51.198"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces</arg>
</arguments>
<msg timestamp="20170731 10:58:51.199" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM traces; </msg>
<status status="PASS" endtime="20170731 10:58:51.200" starttime="20170731 10:58:51.199"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces_history</arg>
</arguments>
<msg timestamp="20170731 10:58:51.200" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM traces_history; </msg>
<status status="PASS" endtime="20170731 10:58:51.201" starttime="20170731 10:58:51.200"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups</arg>
</arguments>
<msg timestamp="20170731 10:58:51.202" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM usergroups; </msg>
<status status="PASS" endtime="20170731 10:58:51.203" starttime="20170731 10:58:51.201"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups_history</arg>
</arguments>
<msg timestamp="20170731 10:58:51.203" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM usergroups_history; </msg>
<status status="PASS" endtime="20170731 10:58:51.204" starttime="20170731 10:58:51.203"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users_history</arg>
</arguments>
<msg timestamp="20170731 10:58:51.204" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM users_history; </msg>
<status status="PASS" endtime="20170731 10:58:51.205" starttime="20170731 10:58:51.204"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works</arg>
</arguments>
<msg timestamp="20170731 10:58:51.206" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM works; </msg>
<status status="PASS" endtime="20170731 10:58:51.207" starttime="20170731 10:58:51.206"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works_history</arg>
</arguments>
<msg timestamp="20170731 10:58:51.208" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM works_history; </msg>
<status status="PASS" endtime="20170731 10:58:51.211" starttime="20170731 10:58:51.208"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170731 10:58:51.212" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170731 10:58:51.212" starttime="20170731 10:58:51.212"></status>
</kw>
<status status="PASS" endtime="20170731 10:58:51.213" starttime="20170731 10:58:51.211"></status>
</kw>
<status status="PASS" endtime="20170731 10:58:51.213" starttime="20170731 10:58:51.162"></status>
</kw>
<status status="PASS" endtime="20170731 10:58:51.213" starttime="20170731 10:58:50.949"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>TODO</arg>
</arguments>
<msg timestamp="20170731 10:58:51.214" level="INFO">TODO</msg>
<status status="PASS" endtime="20170731 10:58:51.214" starttime="20170731 10:58:51.213"></status>
</kw>
<kw type="teardown" name="End XWtremWeb Command Test" library="XWCommon">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Nothing to do</arg>
</arguments>
<msg timestamp="20170731 10:58:51.215" level="INFO">Nothing to do</msg>
<status status="PASS" endtime="20170731 10:58:51.215" starttime="20170731 10:58:51.215"></status>
</kw>
<status status="PASS" endtime="20170731 10:58:51.216" starttime="20170731 10:58:51.214"></status>
</kw>
<doc>Ces test doivent prouver que le scheduler fonctionne correctement.Pour ce faire, il faut insérer une application avec un binaire qui ne correspond à aucun worker du déploiement. Pour ce test nous pouvons utiliser n’importe quelle application avec n’importe quel binaire. Il convient cependant de s’assurer qu’on enregistre l’application avec un type de binaire inutilisable pour le déploiement présenté dans l’introduction.</doc>
<tags>
<tag>CommandLine Tests</tag>
</tags>
<status status="PASS" endtime="20170731 10:58:51.216" critical="yes" starttime="20170731 10:58:50.947"></status>
</test>
<test id="s1-s3-t9" name="Test 6 Récupérer les résultats un job">
<kw type="setup" name="Begin XWtremWeb Command Test" library="XWCommon">
<kw name="Ping XWtremWeb Database" library="XWServer">
<kw name="Xtremweb Tables Must Exist" library="MySql">
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170731 10:58:51.220" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170731 10:58:51.225" starttime="20170731 10:58:51.219"></status>
</kw>
<status status="PASS" endtime="20170731 10:58:51.225" starttime="20170731 10:58:51.219"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>appTypes</arg>
</arguments>
<msg timestamp="20170731 10:58:51.226" level="INFO">Executing : Table Must Exist  |  appTypes </msg>
<msg timestamp="20170731 10:58:51.226" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='appTypes' </msg>
<status status="PASS" endtime="20170731 10:58:51.228" starttime="20170731 10:58:51.225"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps</arg>
</arguments>
<msg timestamp="20170731 10:58:51.229" level="INFO">Executing : Table Must Exist  |  apps </msg>
<msg timestamp="20170731 10:58:51.229" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='apps' </msg>
<status status="PASS" endtime="20170731 10:58:51.232" starttime="20170731 10:58:51.229"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps_history</arg>
</arguments>
<msg timestamp="20170731 10:58:51.232" level="INFO">Executing : Table Must Exist  |  apps_history </msg>
<msg timestamp="20170731 10:58:51.232" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='apps_history' </msg>
<status status="PASS" endtime="20170731 10:58:51.237" starttime="20170731 10:58:51.232"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>cpuTypes</arg>
</arguments>
<msg timestamp="20170731 10:58:51.237" level="INFO">Executing : Table Must Exist  |  cpuTypes </msg>
<msg timestamp="20170731 10:58:51.237" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='cpuTypes' </msg>
<status status="PASS" endtime="20170731 10:58:51.240" starttime="20170731 10:58:51.237"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>dataTypes</arg>
</arguments>
<msg timestamp="20170731 10:58:51.240" level="INFO">Executing : Table Must Exist  |  dataTypes </msg>
<msg timestamp="20170731 10:58:51.240" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='dataTypes' </msg>
<status status="PASS" endtime="20170731 10:58:51.242" starttime="20170731 10:58:51.240"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas</arg>
</arguments>
<msg timestamp="20170731 10:58:51.245" level="INFO">Executing : Table Must Exist  |  datas </msg>
<msg timestamp="20170731 10:58:51.245" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='datas' </msg>
<status status="PASS" endtime="20170731 10:58:51.250" starttime="20170731 10:58:51.243"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas_history</arg>
</arguments>
<msg timestamp="20170731 10:58:51.252" level="INFO">Executing : Table Must Exist  |  datas_history </msg>
<msg timestamp="20170731 10:58:51.252" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='datas_history' </msg>
<status status="PASS" endtime="20170731 10:58:51.268" starttime="20170731 10:58:51.251"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables</arg>
</arguments>
<msg timestamp="20170731 10:58:51.274" level="INFO">Executing : Table Must Exist  |  executables </msg>
<msg timestamp="20170731 10:58:51.275" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='executables' </msg>
<status status="PASS" endtime="20170731 10:58:51.280" starttime="20170731 10:58:51.271"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables_history</arg>
</arguments>
<msg timestamp="20170731 10:58:51.281" level="INFO">Executing : Table Must Exist  |  executables_history </msg>
<msg timestamp="20170731 10:58:51.281" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='executables_history' </msg>
<status status="PASS" endtime="20170731 10:58:51.284" starttime="20170731 10:58:51.280"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups</arg>
</arguments>
<msg timestamp="20170731 10:58:51.284" level="INFO">Executing : Table Must Exist  |  groups </msg>
<msg timestamp="20170731 10:58:51.284" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='groups' </msg>
<status status="PASS" endtime="20170731 10:58:51.287" starttime="20170731 10:58:51.284"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups_history</arg>
</arguments>
<msg timestamp="20170731 10:58:51.288" level="INFO">Executing : Table Must Exist  |  groups_history </msg>
<msg timestamp="20170731 10:58:51.288" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='groups_history' </msg>
<status status="PASS" endtime="20170731 10:58:51.292" starttime="20170731 10:58:51.288"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts</arg>
</arguments>
<msg timestamp="20170731 10:58:51.293" level="INFO">Executing : Table Must Exist  |  hosts </msg>
<msg timestamp="20170731 10:58:51.293" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='hosts' </msg>
<status status="PASS" endtime="20170731 10:58:51.296" starttime="20170731 10:58:51.292"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts_history</arg>
</arguments>
<msg timestamp="20170731 10:58:51.296" level="INFO">Executing : Table Must Exist  |  hosts_history </msg>
<msg timestamp="20170731 10:58:51.296" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='hosts_history' </msg>
<status status="PASS" endtime="20170731 10:58:51.302" starttime="20170731 10:58:51.296"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships</arg>
</arguments>
<msg timestamp="20170731 10:58:51.302" level="INFO">Executing : Table Must Exist  |  memberships </msg>
<msg timestamp="20170731 10:58:51.303" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='memberships' </msg>
<status status="PASS" endtime="20170731 10:58:51.305" starttime="20170731 10:58:51.302"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships_history</arg>
</arguments>
<msg timestamp="20170731 10:58:51.306" level="INFO">Executing : Table Must Exist  |  memberships_history </msg>
<msg timestamp="20170731 10:58:51.306" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='memberships_history' </msg>
<status status="PASS" endtime="20170731 10:58:51.308" starttime="20170731 10:58:51.305"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>oses</arg>
</arguments>
<msg timestamp="20170731 10:58:51.308" level="INFO">Executing : Table Must Exist  |  oses </msg>
<msg timestamp="20170731 10:58:51.308" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='oses' </msg>
<status status="PASS" endtime="20170731 10:58:51.310" starttime="20170731 10:58:51.308"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>packageTypes</arg>
</arguments>
<msg timestamp="20170731 10:58:51.310" level="INFO">Executing : Table Must Exist  |  packageTypes </msg>
<msg timestamp="20170731 10:58:51.310" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='packageTypes' </msg>
<status status="PASS" endtime="20170731 10:58:51.312" starttime="20170731 10:58:51.310"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions</arg>
</arguments>
<msg timestamp="20170731 10:58:51.313" level="INFO">Executing : Table Must Exist  |  sessions </msg>
<msg timestamp="20170731 10:58:51.313" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sessions' </msg>
<status status="PASS" endtime="20170731 10:58:51.315" starttime="20170731 10:58:51.313"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions_history</arg>
</arguments>
<msg timestamp="20170731 10:58:51.315" level="INFO">Executing : Table Must Exist  |  sessions_history </msg>
<msg timestamp="20170731 10:58:51.315" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sessions_history' </msg>
<status status="PASS" endtime="20170731 10:58:51.317" starttime="20170731 10:58:51.315"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes</arg>
</arguments>
<msg timestamp="20170731 10:58:51.318" level="INFO">Executing : Table Must Exist  |  sharedAppTypes </msg>
<msg timestamp="20170731 10:58:51.318" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedAppTypes' </msg>
<status status="PASS" endtime="20170731 10:58:51.319" starttime="20170731 10:58:51.317"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes_history</arg>
</arguments>
<msg timestamp="20170731 10:58:51.320" level="INFO">Executing : Table Must Exist  |  sharedAppTypes_history </msg>
<msg timestamp="20170731 10:58:51.320" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedAppTypes_history' </msg>
<status status="PASS" endtime="20170731 10:58:51.321" starttime="20170731 10:58:51.319"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes</arg>
</arguments>
<msg timestamp="20170731 10:58:51.322" level="INFO">Executing : Table Must Exist  |  sharedPackageTypes </msg>
<msg timestamp="20170731 10:58:51.322" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedPackageTypes' </msg>
<status status="PASS" endtime="20170731 10:58:51.326" starttime="20170731 10:58:51.322"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes_history</arg>
</arguments>
<msg timestamp="20170731 10:58:51.326" level="INFO">Executing : Table Must Exist  |  sharedPackageTypes_history </msg>
<msg timestamp="20170731 10:58:51.326" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedPackageTypes_history' </msg>
<status status="PASS" endtime="20170731 10:58:51.329" starttime="20170731 10:58:51.326"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>statuses</arg>
</arguments>
<msg timestamp="20170731 10:58:51.330" level="INFO">Executing : Table Must Exist  |  statuses </msg>
<msg timestamp="20170731 10:58:51.330" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='statuses' </msg>
<status status="PASS" endtime="20170731 10:58:51.333" starttime="20170731 10:58:51.330"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks</arg>
</arguments>
<msg timestamp="20170731 10:58:51.333" level="INFO">Executing : Table Must Exist  |  tasks </msg>
<msg timestamp="20170731 10:58:51.333" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='tasks' </msg>
<status status="PASS" endtime="20170731 10:58:51.335" starttime="20170731 10:58:51.333"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks_history</arg>
</arguments>
<msg timestamp="20170731 10:58:51.336" level="INFO">Executing : Table Must Exist  |  tasks_history </msg>
<msg timestamp="20170731 10:58:51.336" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='tasks_history' </msg>
<status status="PASS" endtime="20170731 10:58:51.340" starttime="20170731 10:58:51.336"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces</arg>
</arguments>
<msg timestamp="20170731 10:58:51.342" level="INFO">Executing : Table Must Exist  |  traces </msg>
<msg timestamp="20170731 10:58:51.343" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='traces' </msg>
<status status="PASS" endtime="20170731 10:58:51.348" starttime="20170731 10:58:51.340"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces_history</arg>
</arguments>
<msg timestamp="20170731 10:58:51.349" level="INFO">Executing : Table Must Exist  |  traces_history </msg>
<msg timestamp="20170731 10:58:51.349" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='traces_history' </msg>
<status status="PASS" endtime="20170731 10:58:51.352" starttime="20170731 10:58:51.349"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>userRights</arg>
</arguments>
<msg timestamp="20170731 10:58:51.353" level="INFO">Executing : Table Must Exist  |  userRights </msg>
<msg timestamp="20170731 10:58:51.353" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='userRights' </msg>
<status status="PASS" endtime="20170731 10:58:51.359" starttime="20170731 10:58:51.353"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups</arg>
</arguments>
<msg timestamp="20170731 10:58:51.360" level="INFO">Executing : Table Must Exist  |  usergroups </msg>
<msg timestamp="20170731 10:58:51.360" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='usergroups' </msg>
<status status="PASS" endtime="20170731 10:58:51.363" starttime="20170731 10:58:51.359"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups_history</arg>
</arguments>
<msg timestamp="20170731 10:58:51.364" level="INFO">Executing : Table Must Exist  |  usergroups_history </msg>
<msg timestamp="20170731 10:58:51.364" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='usergroups_history' </msg>
<status status="PASS" endtime="20170731 10:58:51.366" starttime="20170731 10:58:51.364"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users</arg>
</arguments>
<msg timestamp="20170731 10:58:51.367" level="INFO">Executing : Table Must Exist  |  users </msg>
<msg timestamp="20170731 10:58:51.367" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='users' </msg>
<status status="PASS" endtime="20170731 10:58:51.369" starttime="20170731 10:58:51.367"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users_history</arg>
</arguments>
<msg timestamp="20170731 10:58:51.369" level="INFO">Executing : Table Must Exist  |  users_history </msg>
<msg timestamp="20170731 10:58:51.369" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='users_history' </msg>
<status status="PASS" endtime="20170731 10:58:51.389" starttime="20170731 10:58:51.369"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>version</arg>
</arguments>
<msg timestamp="20170731 10:58:51.390" level="INFO">Executing : Table Must Exist  |  version </msg>
<msg timestamp="20170731 10:58:51.390" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='version' </msg>
<status status="PASS" endtime="20170731 10:58:51.393" starttime="20170731 10:58:51.390"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>versions</arg>
</arguments>
<msg timestamp="20170731 10:58:51.393" level="INFO">Executing : Table Must Exist  |  versions </msg>
<msg timestamp="20170731 10:58:51.393" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='versions' </msg>
<status status="PASS" endtime="20170731 10:58:51.395" starttime="20170731 10:58:51.393"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps</arg>
</arguments>
<msg timestamp="20170731 10:58:51.396" level="INFO">Executing : Table Must Exist  |  view_apps </msg>
<msg timestamp="20170731 10:58:51.396" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps' </msg>
<status status="PASS" endtime="20170731 10:58:51.399" starttime="20170731 10:58:51.395"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps_for_offering</arg>
</arguments>
<msg timestamp="20170731 10:58:51.400" level="INFO">Executing : Table Must Exist  |  view_apps_for_offering </msg>
<msg timestamp="20170731 10:58:51.400" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps_for_offering' </msg>
<status status="PASS" endtime="20170731 10:58:51.402" starttime="20170731 10:58:51.400"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps_for_offering_with_file_sizes</arg>
</arguments>
<msg timestamp="20170731 10:58:51.403" level="INFO">Executing : Table Must Exist  |  view_apps_for_offering_with_file_sizes </msg>
<msg timestamp="20170731 10:58:51.403" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps_for_offering_with_file_sizes' </msg>
<status status="PASS" endtime="20170731 10:58:51.406" starttime="20170731 10:58:51.403"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_datas</arg>
</arguments>
<msg timestamp="20170731 10:58:51.407" level="INFO">Executing : Table Must Exist  |  view_datas </msg>
<msg timestamp="20170731 10:58:51.408" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_datas' </msg>
<status status="PASS" endtime="20170731 10:58:51.411" starttime="20170731 10:58:51.407"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_executables</arg>
</arguments>
<msg timestamp="20170731 10:58:51.411" level="INFO">Executing : Table Must Exist  |  view_executables </msg>
<msg timestamp="20170731 10:58:51.412" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_executables' </msg>
<status status="PASS" endtime="20170731 10:58:51.414" starttime="20170731 10:58:51.411"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_groups</arg>
</arguments>
<msg timestamp="20170731 10:58:51.415" level="INFO">Executing : Table Must Exist  |  view_groups </msg>
<msg timestamp="20170731 10:58:51.415" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_groups' </msg>
<status status="PASS" endtime="20170731 10:58:51.417" starttime="20170731 10:58:51.414"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts</arg>
</arguments>
<msg timestamp="20170731 10:58:51.418" level="INFO">Executing : Table Must Exist  |  view_hosts </msg>
<msg timestamp="20170731 10:58:51.418" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts' </msg>
<status status="PASS" endtime="20170731 10:58:51.420" starttime="20170731 10:58:51.417"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_deployable</arg>
</arguments>
<msg timestamp="20170731 10:58:51.421" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_deployable </msg>
<msg timestamp="20170731 10:58:51.421" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_deployable' </msg>
<status status="PASS" endtime="20170731 10:58:51.424" starttime="20170731 10:58:51.421"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_deployable_and_shared</arg>
</arguments>
<msg timestamp="20170731 10:58:51.425" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_deployable_and_shared </msg>
<msg timestamp="20170731 10:58:51.425" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_deployable_and_shared' </msg>
<status status="PASS" endtime="20170731 10:58:51.429" starttime="20170731 10:58:51.424"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_shared</arg>
</arguments>
<msg timestamp="20170731 10:58:51.429" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_shared </msg>
<msg timestamp="20170731 10:58:51.429" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_shared' </msg>
<status status="PASS" endtime="20170731 10:58:51.435" starttime="20170731 10:58:51.429"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_sessions</arg>
</arguments>
<msg timestamp="20170731 10:58:51.435" level="INFO">Executing : Table Must Exist  |  view_sessions </msg>
<msg timestamp="20170731 10:58:51.436" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_sessions' </msg>
<status status="PASS" endtime="20170731 10:58:51.438" starttime="20170731 10:58:51.435"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_sharedapptypes</arg>
</arguments>
<msg timestamp="20170731 10:58:51.438" level="INFO">Executing : Table Must Exist  |  view_sharedapptypes </msg>
<msg timestamp="20170731 10:58:51.438" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_sharedapptypes' </msg>
<status status="PASS" endtime="20170731 10:58:51.441" starttime="20170731 10:58:51.438"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_sharedpackagetypes</arg>
</arguments>
<msg timestamp="20170731 10:58:51.442" level="INFO">Executing : Table Must Exist  |  view_sharedpackagetypes </msg>
<msg timestamp="20170731 10:58:51.442" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_sharedpackagetypes' </msg>
<status status="PASS" endtime="20170731 10:58:51.444" starttime="20170731 10:58:51.441"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_tasks</arg>
</arguments>
<msg timestamp="20170731 10:58:51.445" level="INFO">Executing : Table Must Exist  |  view_tasks </msg>
<msg timestamp="20170731 10:58:51.445" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_tasks' </msg>
<status status="PASS" endtime="20170731 10:58:51.447" starttime="20170731 10:58:51.444"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_traces</arg>
</arguments>
<msg timestamp="20170731 10:58:51.447" level="INFO">Executing : Table Must Exist  |  view_traces </msg>
<msg timestamp="20170731 10:58:51.447" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_traces' </msg>
<status status="PASS" endtime="20170731 10:58:51.449" starttime="20170731 10:58:51.447"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_usergroups</arg>
</arguments>
<msg timestamp="20170731 10:58:51.449" level="INFO">Executing : Table Must Exist  |  view_usergroups </msg>
<msg timestamp="20170731 10:58:51.449" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_usergroups' </msg>
<status status="PASS" endtime="20170731 10:58:51.451" starttime="20170731 10:58:51.449"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users</arg>
</arguments>
<msg timestamp="20170731 10:58:51.452" level="INFO">Executing : Table Must Exist  |  view_users </msg>
<msg timestamp="20170731 10:58:51.452" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users' </msg>
<status status="PASS" endtime="20170731 10:58:51.454" starttime="20170731 10:58:51.451"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_apps</arg>
</arguments>
<msg timestamp="20170731 10:58:51.454" level="INFO">Executing : Table Must Exist  |  view_users_apps </msg>
<msg timestamp="20170731 10:58:51.454" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_apps' </msg>
<status status="PASS" endtime="20170731 10:58:51.457" starttime="20170731 10:58:51.454"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_datas</arg>
</arguments>
<msg timestamp="20170731 10:58:51.458" level="INFO">Executing : Table Must Exist  |  view_users_datas </msg>
<msg timestamp="20170731 10:58:51.458" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_datas' </msg>
<status status="PASS" endtime="20170731 10:58:51.460" starttime="20170731 10:58:51.458"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_groups</arg>
</arguments>
<msg timestamp="20170731 10:58:51.461" level="INFO">Executing : Table Must Exist  |  view_users_groups </msg>
<msg timestamp="20170731 10:58:51.461" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_groups' </msg>
<status status="PASS" endtime="20170731 10:58:51.463" starttime="20170731 10:58:51.460"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_hosts</arg>
</arguments>
<msg timestamp="20170731 10:58:51.463" level="INFO">Executing : Table Must Exist  |  view_users_hosts </msg>
<msg timestamp="20170731 10:58:51.463" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_hosts' </msg>
<status status="PASS" endtime="20170731 10:58:51.466" starttime="20170731 10:58:51.463"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_sessions</arg>
</arguments>
<msg timestamp="20170731 10:58:51.467" level="INFO">Executing : Table Must Exist  |  view_users_sessions </msg>
<msg timestamp="20170731 10:58:51.467" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_sessions' </msg>
<status status="PASS" endtime="20170731 10:58:51.469" starttime="20170731 10:58:51.466"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_tasks</arg>
</arguments>
<msg timestamp="20170731 10:58:51.470" level="INFO">Executing : Table Must Exist  |  view_users_tasks </msg>
<msg timestamp="20170731 10:58:51.470" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_tasks' </msg>
<status status="PASS" endtime="20170731 10:58:51.480" starttime="20170731 10:58:51.470"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_traces</arg>
</arguments>
<msg timestamp="20170731 10:58:51.481" level="INFO">Executing : Table Must Exist  |  view_users_traces </msg>
<msg timestamp="20170731 10:58:51.481" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_traces' </msg>
<status status="PASS" endtime="20170731 10:58:51.483" starttime="20170731 10:58:51.480"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_usergroups</arg>
</arguments>
<msg timestamp="20170731 10:58:51.484" level="INFO">Executing : Table Must Exist  |  view_users_usergroups </msg>
<msg timestamp="20170731 10:58:51.484" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_usergroups' </msg>
<status status="PASS" endtime="20170731 10:58:51.486" starttime="20170731 10:58:51.483"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_users</arg>
</arguments>
<msg timestamp="20170731 10:58:51.486" level="INFO">Executing : Table Must Exist  |  view_users_users </msg>
<msg timestamp="20170731 10:58:51.486" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_users' </msg>
<status status="PASS" endtime="20170731 10:58:51.488" starttime="20170731 10:58:51.486"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_works</arg>
</arguments>
<msg timestamp="20170731 10:58:51.489" level="INFO">Executing : Table Must Exist  |  view_users_works </msg>
<msg timestamp="20170731 10:58:51.489" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_works' </msg>
<status status="PASS" endtime="20170731 10:58:51.492" starttime="20170731 10:58:51.488"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works</arg>
</arguments>
<msg timestamp="20170731 10:58:51.492" level="INFO">Executing : Table Must Exist  |  view_works </msg>
<msg timestamp="20170731 10:58:51.493" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works' </msg>
<status status="PASS" endtime="20170731 10:58:51.497" starttime="20170731 10:58:51.492"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works_for_billing</arg>
</arguments>
<msg timestamp="20170731 10:58:51.498" level="INFO">Executing : Table Must Exist  |  view_works_for_billing </msg>
<msg timestamp="20170731 10:58:51.498" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works_for_billing' </msg>
<status status="PASS" endtime="20170731 10:58:51.499" starttime="20170731 10:58:51.497"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works_for_billing_with_file_sizes</arg>
</arguments>
<msg timestamp="20170731 10:58:51.500" level="INFO">Executing : Table Must Exist  |  view_works_for_billing_with_file_sizes </msg>
<msg timestamp="20170731 10:58:51.500" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works_for_billing_with_file_sizes' </msg>
<status status="PASS" endtime="20170731 10:58:51.502" starttime="20170731 10:58:51.500"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works</arg>
</arguments>
<msg timestamp="20170731 10:58:51.503" level="INFO">Executing : Table Must Exist  |  works </msg>
<msg timestamp="20170731 10:58:51.503" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='works' </msg>
<status status="PASS" endtime="20170731 10:58:51.504" starttime="20170731 10:58:51.502"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works_history</arg>
</arguments>
<msg timestamp="20170731 10:58:51.505" level="INFO">Executing : Table Must Exist  |  works_history </msg>
<msg timestamp="20170731 10:58:51.505" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='works_history' </msg>
<status status="PASS" endtime="20170731 10:58:51.509" starttime="20170731 10:58:51.505"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170731 10:58:51.510" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170731 10:58:51.510" starttime="20170731 10:58:51.509"></status>
</kw>
<status status="PASS" endtime="20170731 10:58:51.510" starttime="20170731 10:58:51.509"></status>
</kw>
<status status="PASS" endtime="20170731 10:58:51.511" starttime="20170731 10:58:51.218"></status>
</kw>
<status status="PASS" endtime="20170731 10:58:51.511" starttime="20170731 10:58:51.218"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>TODO ping XWtremWeb server up</arg>
</arguments>
<msg timestamp="20170731 10:58:51.512" level="INFO">TODO ping XWtremWeb server up</msg>
<status status="PASS" endtime="20170731 10:58:51.512" starttime="20170731 10:58:51.511"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>TODO ping XWtremWeb worker up before one test</arg>
</arguments>
<msg timestamp="20170731 10:58:51.512" level="INFO">TODO ping XWtremWeb worker up before one test</msg>
<status status="PASS" endtime="20170731 10:58:51.512" starttime="20170731 10:58:51.512"></status>
</kw>
<kw name="Delete Fonctionnal Xtremweb Tables" library="MySql">
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170731 10:58:51.513" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170731 10:58:51.515" starttime="20170731 10:58:51.513"></status>
</kw>
<status status="PASS" endtime="20170731 10:58:51.515" starttime="20170731 10:58:51.513"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps</arg>
</arguments>
<msg timestamp="20170731 10:58:51.516" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM apps; </msg>
<status status="PASS" endtime="20170731 10:58:51.517" starttime="20170731 10:58:51.516"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps_history</arg>
</arguments>
<msg timestamp="20170731 10:58:51.519" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM apps_history; </msg>
<status status="PASS" endtime="20170731 10:58:51.521" starttime="20170731 10:58:51.518"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas</arg>
</arguments>
<msg timestamp="20170731 10:58:51.522" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM datas; </msg>
<status status="PASS" endtime="20170731 10:58:51.523" starttime="20170731 10:58:51.522"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas_history</arg>
</arguments>
<msg timestamp="20170731 10:58:51.524" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM datas_history; </msg>
<status status="PASS" endtime="20170731 10:58:51.525" starttime="20170731 10:58:51.523"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables</arg>
</arguments>
<msg timestamp="20170731 10:58:51.526" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM executables; </msg>
<status status="PASS" endtime="20170731 10:58:51.526" starttime="20170731 10:58:51.525"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables_history</arg>
</arguments>
<msg timestamp="20170731 10:58:51.527" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM executables_history; </msg>
<status status="PASS" endtime="20170731 10:58:51.528" starttime="20170731 10:58:51.527"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups</arg>
</arguments>
<msg timestamp="20170731 10:58:51.528" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM groups; </msg>
<status status="PASS" endtime="20170731 10:58:51.529" starttime="20170731 10:58:51.528"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups_history</arg>
</arguments>
<msg timestamp="20170731 10:58:51.530" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM groups_history; </msg>
<status status="PASS" endtime="20170731 10:58:51.531" starttime="20170731 10:58:51.530"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts</arg>
</arguments>
<msg timestamp="20170731 10:58:51.531" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM hosts; </msg>
<status status="PASS" endtime="20170731 10:58:51.532" starttime="20170731 10:58:51.531"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts_history</arg>
</arguments>
<msg timestamp="20170731 10:58:51.533" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM hosts_history; </msg>
<status status="PASS" endtime="20170731 10:58:51.534" starttime="20170731 10:58:51.533"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships</arg>
</arguments>
<msg timestamp="20170731 10:58:51.535" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM memberships; </msg>
<status status="PASS" endtime="20170731 10:58:51.536" starttime="20170731 10:58:51.535"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships_history</arg>
</arguments>
<msg timestamp="20170731 10:58:51.537" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM memberships_history; </msg>
<status status="PASS" endtime="20170731 10:58:51.538" starttime="20170731 10:58:51.537"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions</arg>
</arguments>
<msg timestamp="20170731 10:58:51.539" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sessions; </msg>
<status status="PASS" endtime="20170731 10:58:51.541" starttime="20170731 10:58:51.539"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions_history</arg>
</arguments>
<msg timestamp="20170731 10:58:51.542" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sessions_history; </msg>
<status status="PASS" endtime="20170731 10:58:51.544" starttime="20170731 10:58:51.541"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes</arg>
</arguments>
<msg timestamp="20170731 10:58:51.545" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedAppTypes; </msg>
<status status="PASS" endtime="20170731 10:58:51.546" starttime="20170731 10:58:51.544"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes_history</arg>
</arguments>
<msg timestamp="20170731 10:58:51.546" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedAppTypes_history; </msg>
<status status="PASS" endtime="20170731 10:58:51.547" starttime="20170731 10:58:51.546"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes</arg>
</arguments>
<msg timestamp="20170731 10:58:51.548" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedPackageTypes; </msg>
<status status="PASS" endtime="20170731 10:58:51.549" starttime="20170731 10:58:51.548"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes_history</arg>
</arguments>
<msg timestamp="20170731 10:58:51.550" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedPackageTypes_history; </msg>
<status status="PASS" endtime="20170731 10:58:51.551" starttime="20170731 10:58:51.550"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks</arg>
</arguments>
<msg timestamp="20170731 10:58:51.552" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM tasks; </msg>
<status status="PASS" endtime="20170731 10:58:51.553" starttime="20170731 10:58:51.551"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks_history</arg>
</arguments>
<msg timestamp="20170731 10:58:51.553" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM tasks_history; </msg>
<status status="PASS" endtime="20170731 10:58:51.554" starttime="20170731 10:58:51.553"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces</arg>
</arguments>
<msg timestamp="20170731 10:58:51.554" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM traces; </msg>
<status status="PASS" endtime="20170731 10:58:51.556" starttime="20170731 10:58:51.554"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces_history</arg>
</arguments>
<msg timestamp="20170731 10:58:51.557" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM traces_history; </msg>
<status status="PASS" endtime="20170731 10:58:51.559" starttime="20170731 10:58:51.556"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups</arg>
</arguments>
<msg timestamp="20170731 10:58:51.561" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM usergroups; </msg>
<status status="PASS" endtime="20170731 10:58:51.562" starttime="20170731 10:58:51.559"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups_history</arg>
</arguments>
<msg timestamp="20170731 10:58:51.562" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM usergroups_history; </msg>
<status status="PASS" endtime="20170731 10:58:51.563" starttime="20170731 10:58:51.562"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users_history</arg>
</arguments>
<msg timestamp="20170731 10:58:51.564" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM users_history; </msg>
<status status="PASS" endtime="20170731 10:58:51.565" starttime="20170731 10:58:51.563"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works</arg>
</arguments>
<msg timestamp="20170731 10:58:51.565" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM works; </msg>
<status status="PASS" endtime="20170731 10:58:51.566" starttime="20170731 10:58:51.565"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works_history</arg>
</arguments>
<msg timestamp="20170731 10:58:51.567" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM works_history; </msg>
<status status="PASS" endtime="20170731 10:58:51.568" starttime="20170731 10:58:51.567"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170731 10:58:51.569" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170731 10:58:51.570" starttime="20170731 10:58:51.569"></status>
</kw>
<status status="PASS" endtime="20170731 10:58:51.570" starttime="20170731 10:58:51.568"></status>
</kw>
<status status="PASS" endtime="20170731 10:58:51.570" starttime="20170731 10:58:51.512"></status>
</kw>
<status status="PASS" endtime="20170731 10:58:51.570" starttime="20170731 10:58:51.218"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>TODO</arg>
</arguments>
<msg timestamp="20170731 10:58:51.571" level="INFO">TODO</msg>
<status status="PASS" endtime="20170731 10:58:51.572" starttime="20170731 10:58:51.571"></status>
</kw>
<kw type="teardown" name="End XWtremWeb Command Test" library="XWCommon">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Nothing to do</arg>
</arguments>
<msg timestamp="20170731 10:58:51.577" level="INFO">Nothing to do</msg>
<status status="PASS" endtime="20170731 10:58:51.626" starttime="20170731 10:58:51.577"></status>
</kw>
<status status="PASS" endtime="20170731 10:58:51.627" starttime="20170731 10:58:51.574"></status>
</kw>
<doc>Récupérer les résultats un job. Vérifier les résultats. Vérifier que le job est bien supprimé.</doc>
<tags>
<tag>CommandLine Tests</tag>
</tags>
<status status="PASS" endtime="20170731 10:58:51.627" critical="yes" starttime="20170731 10:58:51.216"></status>
</test>
<test id="s1-s3-t10" name="Test 7 Tester la durée d’exécution">
<kw type="setup" name="Begin XWtremWeb Command Test" library="XWCommon">
<kw name="Ping XWtremWeb Database" library="XWServer">
<kw name="Xtremweb Tables Must Exist" library="MySql">
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170731 10:58:51.671" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170731 10:58:51.674" starttime="20170731 10:58:51.669"></status>
</kw>
<status status="PASS" endtime="20170731 10:58:51.674" starttime="20170731 10:58:51.668"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>appTypes</arg>
</arguments>
<msg timestamp="20170731 10:58:51.675" level="INFO">Executing : Table Must Exist  |  appTypes </msg>
<msg timestamp="20170731 10:58:51.675" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='appTypes' </msg>
<status status="PASS" endtime="20170731 10:58:51.678" starttime="20170731 10:58:51.674"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps</arg>
</arguments>
<msg timestamp="20170731 10:58:51.680" level="INFO">Executing : Table Must Exist  |  apps </msg>
<msg timestamp="20170731 10:58:51.680" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='apps' </msg>
<status status="PASS" endtime="20170731 10:58:51.688" starttime="20170731 10:58:51.679"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps_history</arg>
</arguments>
<msg timestamp="20170731 10:58:51.688" level="INFO">Executing : Table Must Exist  |  apps_history </msg>
<msg timestamp="20170731 10:58:51.689" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='apps_history' </msg>
<status status="PASS" endtime="20170731 10:58:51.692" starttime="20170731 10:58:51.688"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>cpuTypes</arg>
</arguments>
<msg timestamp="20170731 10:58:51.693" level="INFO">Executing : Table Must Exist  |  cpuTypes </msg>
<msg timestamp="20170731 10:58:51.693" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='cpuTypes' </msg>
<status status="PASS" endtime="20170731 10:58:51.695" starttime="20170731 10:58:51.693"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>dataTypes</arg>
</arguments>
<msg timestamp="20170731 10:58:51.695" level="INFO">Executing : Table Must Exist  |  dataTypes </msg>
<msg timestamp="20170731 10:58:51.696" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='dataTypes' </msg>
<status status="PASS" endtime="20170731 10:58:51.698" starttime="20170731 10:58:51.695"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas</arg>
</arguments>
<msg timestamp="20170731 10:58:51.698" level="INFO">Executing : Table Must Exist  |  datas </msg>
<msg timestamp="20170731 10:58:51.698" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='datas' </msg>
<status status="PASS" endtime="20170731 10:58:51.700" starttime="20170731 10:58:51.698"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas_history</arg>
</arguments>
<msg timestamp="20170731 10:58:51.700" level="INFO">Executing : Table Must Exist  |  datas_history </msg>
<msg timestamp="20170731 10:58:51.700" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='datas_history' </msg>
<status status="PASS" endtime="20170731 10:58:51.702" starttime="20170731 10:58:51.700"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables</arg>
</arguments>
<msg timestamp="20170731 10:58:51.703" level="INFO">Executing : Table Must Exist  |  executables </msg>
<msg timestamp="20170731 10:58:51.703" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='executables' </msg>
<status status="PASS" endtime="20170731 10:58:51.704" starttime="20170731 10:58:51.702"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables_history</arg>
</arguments>
<msg timestamp="20170731 10:58:51.705" level="INFO">Executing : Table Must Exist  |  executables_history </msg>
<msg timestamp="20170731 10:58:51.705" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='executables_history' </msg>
<status status="PASS" endtime="20170731 10:58:51.706" starttime="20170731 10:58:51.705"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups</arg>
</arguments>
<msg timestamp="20170731 10:58:51.707" level="INFO">Executing : Table Must Exist  |  groups </msg>
<msg timestamp="20170731 10:58:51.707" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='groups' </msg>
<status status="PASS" endtime="20170731 10:58:51.709" starttime="20170731 10:58:51.707"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups_history</arg>
</arguments>
<msg timestamp="20170731 10:58:51.709" level="INFO">Executing : Table Must Exist  |  groups_history </msg>
<msg timestamp="20170731 10:58:51.709" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='groups_history' </msg>
<status status="PASS" endtime="20170731 10:58:51.711" starttime="20170731 10:58:51.709"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts</arg>
</arguments>
<msg timestamp="20170731 10:58:51.712" level="INFO">Executing : Table Must Exist  |  hosts </msg>
<msg timestamp="20170731 10:58:51.712" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='hosts' </msg>
<status status="PASS" endtime="20170731 10:58:51.714" starttime="20170731 10:58:51.711"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts_history</arg>
</arguments>
<msg timestamp="20170731 10:58:51.714" level="INFO">Executing : Table Must Exist  |  hosts_history </msg>
<msg timestamp="20170731 10:58:51.715" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='hosts_history' </msg>
<status status="PASS" endtime="20170731 10:58:51.716" starttime="20170731 10:58:51.714"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships</arg>
</arguments>
<msg timestamp="20170731 10:58:51.717" level="INFO">Executing : Table Must Exist  |  memberships </msg>
<msg timestamp="20170731 10:58:51.717" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='memberships' </msg>
<status status="PASS" endtime="20170731 10:58:51.721" starttime="20170731 10:58:51.717"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships_history</arg>
</arguments>
<msg timestamp="20170731 10:58:51.722" level="INFO">Executing : Table Must Exist  |  memberships_history </msg>
<msg timestamp="20170731 10:58:51.722" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='memberships_history' </msg>
<status status="PASS" endtime="20170731 10:58:51.726" starttime="20170731 10:58:51.721"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>oses</arg>
</arguments>
<msg timestamp="20170731 10:58:51.726" level="INFO">Executing : Table Must Exist  |  oses </msg>
<msg timestamp="20170731 10:58:51.726" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='oses' </msg>
<status status="PASS" endtime="20170731 10:58:51.728" starttime="20170731 10:58:51.726"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>packageTypes</arg>
</arguments>
<msg timestamp="20170731 10:58:51.729" level="INFO">Executing : Table Must Exist  |  packageTypes </msg>
<msg timestamp="20170731 10:58:51.729" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='packageTypes' </msg>
<status status="PASS" endtime="20170731 10:58:51.731" starttime="20170731 10:58:51.728"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions</arg>
</arguments>
<msg timestamp="20170731 10:58:51.732" level="INFO">Executing : Table Must Exist  |  sessions </msg>
<msg timestamp="20170731 10:58:51.732" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sessions' </msg>
<status status="PASS" endtime="20170731 10:58:51.734" starttime="20170731 10:58:51.732"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions_history</arg>
</arguments>
<msg timestamp="20170731 10:58:51.735" level="INFO">Executing : Table Must Exist  |  sessions_history </msg>
<msg timestamp="20170731 10:58:51.735" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sessions_history' </msg>
<status status="PASS" endtime="20170731 10:58:51.738" starttime="20170731 10:58:51.735"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes</arg>
</arguments>
<msg timestamp="20170731 10:58:51.738" level="INFO">Executing : Table Must Exist  |  sharedAppTypes </msg>
<msg timestamp="20170731 10:58:51.738" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedAppTypes' </msg>
<status status="PASS" endtime="20170731 10:58:51.740" starttime="20170731 10:58:51.738"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes_history</arg>
</arguments>
<msg timestamp="20170731 10:58:51.740" level="INFO">Executing : Table Must Exist  |  sharedAppTypes_history </msg>
<msg timestamp="20170731 10:58:51.740" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedAppTypes_history' </msg>
<status status="PASS" endtime="20170731 10:58:51.742" starttime="20170731 10:58:51.740"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes</arg>
</arguments>
<msg timestamp="20170731 10:58:51.742" level="INFO">Executing : Table Must Exist  |  sharedPackageTypes </msg>
<msg timestamp="20170731 10:58:51.743" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedPackageTypes' </msg>
<status status="PASS" endtime="20170731 10:58:51.746" starttime="20170731 10:58:51.742"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes_history</arg>
</arguments>
<msg timestamp="20170731 10:58:51.746" level="INFO">Executing : Table Must Exist  |  sharedPackageTypes_history </msg>
<msg timestamp="20170731 10:58:51.746" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedPackageTypes_history' </msg>
<status status="PASS" endtime="20170731 10:58:51.749" starttime="20170731 10:58:51.746"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>statuses</arg>
</arguments>
<msg timestamp="20170731 10:58:51.750" level="INFO">Executing : Table Must Exist  |  statuses </msg>
<msg timestamp="20170731 10:58:51.750" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='statuses' </msg>
<status status="PASS" endtime="20170731 10:58:51.752" starttime="20170731 10:58:51.749"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks</arg>
</arguments>
<msg timestamp="20170731 10:58:51.752" level="INFO">Executing : Table Must Exist  |  tasks </msg>
<msg timestamp="20170731 10:58:51.752" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='tasks' </msg>
<status status="PASS" endtime="20170731 10:58:51.754" starttime="20170731 10:58:51.752"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks_history</arg>
</arguments>
<msg timestamp="20170731 10:58:51.754" level="INFO">Executing : Table Must Exist  |  tasks_history </msg>
<msg timestamp="20170731 10:58:51.754" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='tasks_history' </msg>
<status status="PASS" endtime="20170731 10:58:51.758" starttime="20170731 10:58:51.754"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces</arg>
</arguments>
<msg timestamp="20170731 10:58:51.758" level="INFO">Executing : Table Must Exist  |  traces </msg>
<msg timestamp="20170731 10:58:51.758" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='traces' </msg>
<status status="PASS" endtime="20170731 10:58:51.763" starttime="20170731 10:58:51.758"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces_history</arg>
</arguments>
<msg timestamp="20170731 10:58:51.763" level="INFO">Executing : Table Must Exist  |  traces_history </msg>
<msg timestamp="20170731 10:58:51.763" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='traces_history' </msg>
<status status="PASS" endtime="20170731 10:58:51.765" starttime="20170731 10:58:51.763"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>userRights</arg>
</arguments>
<msg timestamp="20170731 10:58:51.766" level="INFO">Executing : Table Must Exist  |  userRights </msg>
<msg timestamp="20170731 10:58:51.766" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='userRights' </msg>
<status status="PASS" endtime="20170731 10:58:51.768" starttime="20170731 10:58:51.766"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups</arg>
</arguments>
<msg timestamp="20170731 10:58:51.769" level="INFO">Executing : Table Must Exist  |  usergroups </msg>
<msg timestamp="20170731 10:58:51.769" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='usergroups' </msg>
<status status="PASS" endtime="20170731 10:58:51.771" starttime="20170731 10:58:51.768"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups_history</arg>
</arguments>
<msg timestamp="20170731 10:58:51.772" level="INFO">Executing : Table Must Exist  |  usergroups_history </msg>
<msg timestamp="20170731 10:58:51.772" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='usergroups_history' </msg>
<status status="PASS" endtime="20170731 10:58:51.777" starttime="20170731 10:58:51.771"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users</arg>
</arguments>
<msg timestamp="20170731 10:58:51.778" level="INFO">Executing : Table Must Exist  |  users </msg>
<msg timestamp="20170731 10:58:51.778" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='users' </msg>
<status status="PASS" endtime="20170731 10:58:51.782" starttime="20170731 10:58:51.777"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users_history</arg>
</arguments>
<msg timestamp="20170731 10:58:51.783" level="INFO">Executing : Table Must Exist  |  users_history </msg>
<msg timestamp="20170731 10:58:51.783" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='users_history' </msg>
<status status="PASS" endtime="20170731 10:58:51.785" starttime="20170731 10:58:51.782"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>version</arg>
</arguments>
<msg timestamp="20170731 10:58:51.786" level="INFO">Executing : Table Must Exist  |  version </msg>
<msg timestamp="20170731 10:58:51.786" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='version' </msg>
<status status="PASS" endtime="20170731 10:58:51.789" starttime="20170731 10:58:51.786"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>versions</arg>
</arguments>
<msg timestamp="20170731 10:58:51.790" level="INFO">Executing : Table Must Exist  |  versions </msg>
<msg timestamp="20170731 10:58:51.790" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='versions' </msg>
<status status="PASS" endtime="20170731 10:58:51.793" starttime="20170731 10:58:51.790"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps</arg>
</arguments>
<msg timestamp="20170731 10:58:51.793" level="INFO">Executing : Table Must Exist  |  view_apps </msg>
<msg timestamp="20170731 10:58:51.793" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps' </msg>
<status status="PASS" endtime="20170731 10:58:51.795" starttime="20170731 10:58:51.793"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps_for_offering</arg>
</arguments>
<msg timestamp="20170731 10:58:51.796" level="INFO">Executing : Table Must Exist  |  view_apps_for_offering </msg>
<msg timestamp="20170731 10:58:51.796" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps_for_offering' </msg>
<status status="PASS" endtime="20170731 10:58:51.799" starttime="20170731 10:58:51.796"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps_for_offering_with_file_sizes</arg>
</arguments>
<msg timestamp="20170731 10:58:51.800" level="INFO">Executing : Table Must Exist  |  view_apps_for_offering_with_file_sizes </msg>
<msg timestamp="20170731 10:58:51.800" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps_for_offering_with_file_sizes' </msg>
<status status="PASS" endtime="20170731 10:58:51.804" starttime="20170731 10:58:51.799"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_datas</arg>
</arguments>
<msg timestamp="20170731 10:58:51.805" level="INFO">Executing : Table Must Exist  |  view_datas </msg>
<msg timestamp="20170731 10:58:51.805" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_datas' </msg>
<status status="PASS" endtime="20170731 10:58:51.807" starttime="20170731 10:58:51.804"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_executables</arg>
</arguments>
<msg timestamp="20170731 10:58:51.808" level="INFO">Executing : Table Must Exist  |  view_executables </msg>
<msg timestamp="20170731 10:58:51.808" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_executables' </msg>
<status status="PASS" endtime="20170731 10:58:51.816" starttime="20170731 10:58:51.807"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_groups</arg>
</arguments>
<msg timestamp="20170731 10:58:51.816" level="INFO">Executing : Table Must Exist  |  view_groups </msg>
<msg timestamp="20170731 10:58:51.817" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_groups' </msg>
<status status="PASS" endtime="20170731 10:58:51.819" starttime="20170731 10:58:51.816"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts</arg>
</arguments>
<msg timestamp="20170731 10:58:51.820" level="INFO">Executing : Table Must Exist  |  view_hosts </msg>
<msg timestamp="20170731 10:58:51.820" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts' </msg>
<status status="PASS" endtime="20170731 10:58:51.823" starttime="20170731 10:58:51.820"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_deployable</arg>
</arguments>
<msg timestamp="20170731 10:58:51.824" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_deployable </msg>
<msg timestamp="20170731 10:58:51.824" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_deployable' </msg>
<status status="PASS" endtime="20170731 10:58:51.827" starttime="20170731 10:58:51.824"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_deployable_and_shared</arg>
</arguments>
<msg timestamp="20170731 10:58:51.827" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_deployable_and_shared </msg>
<msg timestamp="20170731 10:58:51.828" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_deployable_and_shared' </msg>
<status status="PASS" endtime="20170731 10:58:51.831" starttime="20170731 10:58:51.827"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_shared</arg>
</arguments>
<msg timestamp="20170731 10:58:51.831" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_shared </msg>
<msg timestamp="20170731 10:58:51.831" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_shared' </msg>
<status status="PASS" endtime="20170731 10:58:51.835" starttime="20170731 10:58:51.831"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_sessions</arg>
</arguments>
<msg timestamp="20170731 10:58:51.836" level="INFO">Executing : Table Must Exist  |  view_sessions </msg>
<msg timestamp="20170731 10:58:51.836" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_sessions' </msg>
<status status="PASS" endtime="20170731 10:58:51.839" starttime="20170731 10:58:51.835"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_sharedapptypes</arg>
</arguments>
<msg timestamp="20170731 10:58:51.840" level="INFO">Executing : Table Must Exist  |  view_sharedapptypes </msg>
<msg timestamp="20170731 10:58:51.841" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_sharedapptypes' </msg>
<status status="PASS" endtime="20170731 10:58:51.843" starttime="20170731 10:58:51.840"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_sharedpackagetypes</arg>
</arguments>
<msg timestamp="20170731 10:58:51.844" level="INFO">Executing : Table Must Exist  |  view_sharedpackagetypes </msg>
<msg timestamp="20170731 10:58:51.844" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_sharedpackagetypes' </msg>
<status status="PASS" endtime="20170731 10:58:51.846" starttime="20170731 10:58:51.844"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_tasks</arg>
</arguments>
<msg timestamp="20170731 10:58:51.847" level="INFO">Executing : Table Must Exist  |  view_tasks </msg>
<msg timestamp="20170731 10:58:51.847" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_tasks' </msg>
<status status="PASS" endtime="20170731 10:58:51.848" starttime="20170731 10:58:51.846"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_traces</arg>
</arguments>
<msg timestamp="20170731 10:58:51.849" level="INFO">Executing : Table Must Exist  |  view_traces </msg>
<msg timestamp="20170731 10:58:51.849" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_traces' </msg>
<status status="PASS" endtime="20170731 10:58:51.851" starttime="20170731 10:58:51.848"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_usergroups</arg>
</arguments>
<msg timestamp="20170731 10:58:51.852" level="INFO">Executing : Table Must Exist  |  view_usergroups </msg>
<msg timestamp="20170731 10:58:51.852" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_usergroups' </msg>
<status status="PASS" endtime="20170731 10:58:51.854" starttime="20170731 10:58:51.851"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users</arg>
</arguments>
<msg timestamp="20170731 10:58:51.855" level="INFO">Executing : Table Must Exist  |  view_users </msg>
<msg timestamp="20170731 10:58:51.855" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users' </msg>
<status status="PASS" endtime="20170731 10:58:51.858" starttime="20170731 10:58:51.854"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_apps</arg>
</arguments>
<msg timestamp="20170731 10:58:51.858" level="INFO">Executing : Table Must Exist  |  view_users_apps </msg>
<msg timestamp="20170731 10:58:51.858" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_apps' </msg>
<status status="PASS" endtime="20170731 10:58:51.862" starttime="20170731 10:58:51.858"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_datas</arg>
</arguments>
<msg timestamp="20170731 10:58:51.862" level="INFO">Executing : Table Must Exist  |  view_users_datas </msg>
<msg timestamp="20170731 10:58:51.862" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_datas' </msg>
<status status="PASS" endtime="20170731 10:58:51.865" starttime="20170731 10:58:51.862"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_groups</arg>
</arguments>
<msg timestamp="20170731 10:58:51.866" level="INFO">Executing : Table Must Exist  |  view_users_groups </msg>
<msg timestamp="20170731 10:58:51.866" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_groups' </msg>
<status status="PASS" endtime="20170731 10:58:51.869" starttime="20170731 10:58:51.865"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_hosts</arg>
</arguments>
<msg timestamp="20170731 10:58:51.870" level="INFO">Executing : Table Must Exist  |  view_users_hosts </msg>
<msg timestamp="20170731 10:58:51.870" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_hosts' </msg>
<status status="PASS" endtime="20170731 10:58:51.873" starttime="20170731 10:58:51.869"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_sessions</arg>
</arguments>
<msg timestamp="20170731 10:58:51.874" level="INFO">Executing : Table Must Exist  |  view_users_sessions </msg>
<msg timestamp="20170731 10:58:51.874" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_sessions' </msg>
<status status="PASS" endtime="20170731 10:58:51.877" starttime="20170731 10:58:51.874"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_tasks</arg>
</arguments>
<msg timestamp="20170731 10:58:51.878" level="INFO">Executing : Table Must Exist  |  view_users_tasks </msg>
<msg timestamp="20170731 10:58:51.878" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_tasks' </msg>
<status status="PASS" endtime="20170731 10:58:51.881" starttime="20170731 10:58:51.877"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_traces</arg>
</arguments>
<msg timestamp="20170731 10:58:51.883" level="INFO">Executing : Table Must Exist  |  view_users_traces </msg>
<msg timestamp="20170731 10:58:51.883" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_traces' </msg>
<status status="PASS" endtime="20170731 10:58:51.887" starttime="20170731 10:58:51.882"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_usergroups</arg>
</arguments>
<msg timestamp="20170731 10:58:51.888" level="INFO">Executing : Table Must Exist  |  view_users_usergroups </msg>
<msg timestamp="20170731 10:58:51.888" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_usergroups' </msg>
<status status="PASS" endtime="20170731 10:58:51.892" starttime="20170731 10:58:51.887"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_users</arg>
</arguments>
<msg timestamp="20170731 10:58:51.893" level="INFO">Executing : Table Must Exist  |  view_users_users </msg>
<msg timestamp="20170731 10:58:51.893" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_users' </msg>
<status status="PASS" endtime="20170731 10:58:51.896" starttime="20170731 10:58:51.892"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_works</arg>
</arguments>
<msg timestamp="20170731 10:58:51.897" level="INFO">Executing : Table Must Exist  |  view_users_works </msg>
<msg timestamp="20170731 10:58:51.897" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_works' </msg>
<status status="PASS" endtime="20170731 10:58:51.904" starttime="20170731 10:58:51.897"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works</arg>
</arguments>
<msg timestamp="20170731 10:58:51.904" level="INFO">Executing : Table Must Exist  |  view_works </msg>
<msg timestamp="20170731 10:58:51.904" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works' </msg>
<status status="PASS" endtime="20170731 10:58:51.910" starttime="20170731 10:58:51.904"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works_for_billing</arg>
</arguments>
<msg timestamp="20170731 10:58:51.910" level="INFO">Executing : Table Must Exist  |  view_works_for_billing </msg>
<msg timestamp="20170731 10:58:51.911" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works_for_billing' </msg>
<status status="PASS" endtime="20170731 10:58:51.934" starttime="20170731 10:58:51.910"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works_for_billing_with_file_sizes</arg>
</arguments>
<msg timestamp="20170731 10:58:51.935" level="INFO">Executing : Table Must Exist  |  view_works_for_billing_with_file_sizes </msg>
<msg timestamp="20170731 10:58:51.935" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works_for_billing_with_file_sizes' </msg>
<status status="PASS" endtime="20170731 10:58:51.945" starttime="20170731 10:58:51.934"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works</arg>
</arguments>
<msg timestamp="20170731 10:58:51.946" level="INFO">Executing : Table Must Exist  |  works </msg>
<msg timestamp="20170731 10:58:51.946" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='works' </msg>
<status status="PASS" endtime="20170731 10:58:51.951" starttime="20170731 10:58:51.946"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works_history</arg>
</arguments>
<msg timestamp="20170731 10:58:51.952" level="INFO">Executing : Table Must Exist  |  works_history </msg>
<msg timestamp="20170731 10:58:51.952" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='works_history' </msg>
<status status="PASS" endtime="20170731 10:58:51.960" starttime="20170731 10:58:51.952"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170731 10:58:51.961" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170731 10:58:51.961" starttime="20170731 10:58:51.961"></status>
</kw>
<status status="PASS" endtime="20170731 10:58:51.981" starttime="20170731 10:58:51.960"></status>
</kw>
<status status="PASS" endtime="20170731 10:58:51.981" starttime="20170731 10:58:51.647"></status>
</kw>
<status status="PASS" endtime="20170731 10:58:51.982" starttime="20170731 10:58:51.641"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>TODO ping XWtremWeb server up</arg>
</arguments>
<msg timestamp="20170731 10:58:51.982" level="INFO">TODO ping XWtremWeb server up</msg>
<status status="PASS" endtime="20170731 10:58:51.983" starttime="20170731 10:58:51.982"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>TODO ping XWtremWeb worker up before one test</arg>
</arguments>
<msg timestamp="20170731 10:58:51.983" level="INFO">TODO ping XWtremWeb worker up before one test</msg>
<status status="PASS" endtime="20170731 10:58:51.984" starttime="20170731 10:58:51.983"></status>
</kw>
<kw name="Delete Fonctionnal Xtremweb Tables" library="MySql">
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170731 10:58:51.987" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170731 10:58:51.992" starttime="20170731 10:58:51.985"></status>
</kw>
<status status="PASS" endtime="20170731 10:58:51.993" starttime="20170731 10:58:51.984"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps</arg>
</arguments>
<msg timestamp="20170731 10:58:51.994" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM apps; </msg>
<status status="PASS" endtime="20170731 10:58:51.995" starttime="20170731 10:58:51.993"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps_history</arg>
</arguments>
<msg timestamp="20170731 10:58:51.996" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM apps_history; </msg>
<status status="PASS" endtime="20170731 10:58:51.999" starttime="20170731 10:58:51.995"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas</arg>
</arguments>
<msg timestamp="20170731 10:58:52.000" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM datas; </msg>
<status status="PASS" endtime="20170731 10:58:52.002" starttime="20170731 10:58:51.999"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas_history</arg>
</arguments>
<msg timestamp="20170731 10:58:52.003" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM datas_history; </msg>
<status status="PASS" endtime="20170731 10:58:52.006" starttime="20170731 10:58:52.003"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables</arg>
</arguments>
<msg timestamp="20170731 10:58:52.007" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM executables; </msg>
<status status="PASS" endtime="20170731 10:58:52.008" starttime="20170731 10:58:52.006"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables_history</arg>
</arguments>
<msg timestamp="20170731 10:58:52.008" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM executables_history; </msg>
<status status="PASS" endtime="20170731 10:58:52.009" starttime="20170731 10:58:52.008"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups</arg>
</arguments>
<msg timestamp="20170731 10:58:52.010" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM groups; </msg>
<status status="PASS" endtime="20170731 10:58:52.011" starttime="20170731 10:58:52.009"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups_history</arg>
</arguments>
<msg timestamp="20170731 10:58:52.011" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM groups_history; </msg>
<status status="PASS" endtime="20170731 10:58:52.012" starttime="20170731 10:58:52.011"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts</arg>
</arguments>
<msg timestamp="20170731 10:58:52.012" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM hosts; </msg>
<status status="PASS" endtime="20170731 10:58:52.015" starttime="20170731 10:58:52.012"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts_history</arg>
</arguments>
<msg timestamp="20170731 10:58:52.016" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM hosts_history; </msg>
<status status="PASS" endtime="20170731 10:58:52.020" starttime="20170731 10:58:52.015"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships</arg>
</arguments>
<msg timestamp="20170731 10:58:52.022" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM memberships; </msg>
<status status="PASS" endtime="20170731 10:58:52.024" starttime="20170731 10:58:52.021"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships_history</arg>
</arguments>
<msg timestamp="20170731 10:58:52.029" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM memberships_history; </msg>
<status status="PASS" endtime="20170731 10:58:52.033" starttime="20170731 10:58:52.025"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions</arg>
</arguments>
<msg timestamp="20170731 10:58:52.035" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sessions; </msg>
<status status="PASS" endtime="20170731 10:58:52.040" starttime="20170731 10:58:52.034"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions_history</arg>
</arguments>
<msg timestamp="20170731 10:58:52.041" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sessions_history; </msg>
<status status="PASS" endtime="20170731 10:58:52.043" starttime="20170731 10:58:52.040"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes</arg>
</arguments>
<msg timestamp="20170731 10:58:52.044" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedAppTypes; </msg>
<status status="PASS" endtime="20170731 10:58:52.050" starttime="20170731 10:58:52.044"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes_history</arg>
</arguments>
<msg timestamp="20170731 10:58:52.052" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedAppTypes_history; </msg>
<status status="PASS" endtime="20170731 10:58:52.053" starttime="20170731 10:58:52.051"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes</arg>
</arguments>
<msg timestamp="20170731 10:58:52.054" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedPackageTypes; </msg>
<status status="PASS" endtime="20170731 10:58:52.056" starttime="20170731 10:58:52.054"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes_history</arg>
</arguments>
<msg timestamp="20170731 10:58:52.057" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedPackageTypes_history; </msg>
<status status="PASS" endtime="20170731 10:58:52.058" starttime="20170731 10:58:52.056"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks</arg>
</arguments>
<msg timestamp="20170731 10:58:52.058" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM tasks; </msg>
<status status="PASS" endtime="20170731 10:58:52.061" starttime="20170731 10:58:52.058"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks_history</arg>
</arguments>
<msg timestamp="20170731 10:58:52.062" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM tasks_history; </msg>
<status status="PASS" endtime="20170731 10:58:52.066" starttime="20170731 10:58:52.061"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces</arg>
</arguments>
<msg timestamp="20170731 10:58:52.066" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM traces; </msg>
<status status="PASS" endtime="20170731 10:58:52.068" starttime="20170731 10:58:52.066"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces_history</arg>
</arguments>
<msg timestamp="20170731 10:58:52.070" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM traces_history; </msg>
<status status="PASS" endtime="20170731 10:58:52.075" starttime="20170731 10:58:52.070"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups</arg>
</arguments>
<msg timestamp="20170731 10:58:52.076" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM usergroups; </msg>
<status status="PASS" endtime="20170731 10:58:52.084" starttime="20170731 10:58:52.076"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups_history</arg>
</arguments>
<msg timestamp="20170731 10:58:52.085" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM usergroups_history; </msg>
<status status="PASS" endtime="20170731 10:58:52.087" starttime="20170731 10:58:52.085"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users_history</arg>
</arguments>
<msg timestamp="20170731 10:58:52.087" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM users_history; </msg>
<status status="PASS" endtime="20170731 10:58:52.089" starttime="20170731 10:58:52.087"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works</arg>
</arguments>
<msg timestamp="20170731 10:58:52.090" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM works; </msg>
<status status="PASS" endtime="20170731 10:58:52.093" starttime="20170731 10:58:52.090"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works_history</arg>
</arguments>
<msg timestamp="20170731 10:58:52.093" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM works_history; </msg>
<status status="PASS" endtime="20170731 10:58:52.096" starttime="20170731 10:58:52.093"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170731 10:58:52.097" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170731 10:58:52.097" starttime="20170731 10:58:52.096"></status>
</kw>
<status status="PASS" endtime="20170731 10:58:52.097" starttime="20170731 10:58:52.096"></status>
</kw>
<status status="PASS" endtime="20170731 10:58:52.097" starttime="20170731 10:58:51.984"></status>
</kw>
<status status="PASS" endtime="20170731 10:58:52.098" starttime="20170731 10:58:51.640"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>TODO</arg>
</arguments>
<msg timestamp="20170731 10:58:52.098" level="INFO">TODO</msg>
<status status="PASS" endtime="20170731 10:58:52.098" starttime="20170731 10:58:52.098"></status>
</kw>
<kw type="teardown" name="End XWtremWeb Command Test" library="XWCommon">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Nothing to do</arg>
</arguments>
<msg timestamp="20170731 10:58:52.100" level="INFO">Nothing to do</msg>
<status status="PASS" endtime="20170731 10:58:52.100" starttime="20170731 10:58:52.100"></status>
</kw>
<status status="PASS" endtime="20170731 10:58:52.101" starttime="20170731 10:58:52.099"></status>
</kw>
<doc>Ces tests doivent prouver que la synchronisation scheduler/worker est correcte. Par défaut les messages de synchronisation worker/scheduler se font toutes les 5mn. Au bout de trois messages non reçus par le scheduler, le job est considéré comme perdu et doit être reschédulé.</doc>
<tags>
<tag>CommandLine Tests</tag>
</tags>
<status status="PASS" endtime="20170731 10:58:52.101" critical="yes" starttime="20170731 10:58:51.630"></status>
</test>
<test id="s1-s3-t11" name="Test 8 Tester la perte des jobs">
<kw type="setup" name="Begin XWtremWeb Command Test" library="XWCommon">
<kw name="Ping XWtremWeb Database" library="XWServer">
<kw name="Xtremweb Tables Must Exist" library="MySql">
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170731 10:58:52.105" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170731 10:58:52.108" starttime="20170731 10:58:52.104"></status>
</kw>
<status status="PASS" endtime="20170731 10:58:52.108" starttime="20170731 10:58:52.104"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>appTypes</arg>
</arguments>
<msg timestamp="20170731 10:58:52.108" level="INFO">Executing : Table Must Exist  |  appTypes </msg>
<msg timestamp="20170731 10:58:52.108" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='appTypes' </msg>
<status status="PASS" endtime="20170731 10:58:52.110" starttime="20170731 10:58:52.108"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps</arg>
</arguments>
<msg timestamp="20170731 10:58:52.110" level="INFO">Executing : Table Must Exist  |  apps </msg>
<msg timestamp="20170731 10:58:52.110" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='apps' </msg>
<status status="PASS" endtime="20170731 10:58:52.111" starttime="20170731 10:58:52.110"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps_history</arg>
</arguments>
<msg timestamp="20170731 10:58:52.112" level="INFO">Executing : Table Must Exist  |  apps_history </msg>
<msg timestamp="20170731 10:58:52.112" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='apps_history' </msg>
<status status="PASS" endtime="20170731 10:58:52.113" starttime="20170731 10:58:52.112"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>cpuTypes</arg>
</arguments>
<msg timestamp="20170731 10:58:52.114" level="INFO">Executing : Table Must Exist  |  cpuTypes </msg>
<msg timestamp="20170731 10:58:52.114" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='cpuTypes' </msg>
<status status="PASS" endtime="20170731 10:58:52.115" starttime="20170731 10:58:52.113"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>dataTypes</arg>
</arguments>
<msg timestamp="20170731 10:58:52.116" level="INFO">Executing : Table Must Exist  |  dataTypes </msg>
<msg timestamp="20170731 10:58:52.116" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='dataTypes' </msg>
<status status="PASS" endtime="20170731 10:58:52.118" starttime="20170731 10:58:52.115"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas</arg>
</arguments>
<msg timestamp="20170731 10:58:52.119" level="INFO">Executing : Table Must Exist  |  datas </msg>
<msg timestamp="20170731 10:58:52.119" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='datas' </msg>
<status status="PASS" endtime="20170731 10:58:52.121" starttime="20170731 10:58:52.119"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas_history</arg>
</arguments>
<msg timestamp="20170731 10:58:52.122" level="INFO">Executing : Table Must Exist  |  datas_history </msg>
<msg timestamp="20170731 10:58:52.122" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='datas_history' </msg>
<status status="PASS" endtime="20170731 10:58:52.126" starttime="20170731 10:58:52.122"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables</arg>
</arguments>
<msg timestamp="20170731 10:58:52.127" level="INFO">Executing : Table Must Exist  |  executables </msg>
<msg timestamp="20170731 10:58:52.127" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='executables' </msg>
<status status="PASS" endtime="20170731 10:58:52.128" starttime="20170731 10:58:52.126"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables_history</arg>
</arguments>
<msg timestamp="20170731 10:58:52.129" level="INFO">Executing : Table Must Exist  |  executables_history </msg>
<msg timestamp="20170731 10:58:52.129" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='executables_history' </msg>
<status status="PASS" endtime="20170731 10:58:52.135" starttime="20170731 10:58:52.128"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups</arg>
</arguments>
<msg timestamp="20170731 10:58:52.136" level="INFO">Executing : Table Must Exist  |  groups </msg>
<msg timestamp="20170731 10:58:52.136" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='groups' </msg>
<status status="PASS" endtime="20170731 10:58:52.141" starttime="20170731 10:58:52.135"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups_history</arg>
</arguments>
<msg timestamp="20170731 10:58:52.142" level="INFO">Executing : Table Must Exist  |  groups_history </msg>
<msg timestamp="20170731 10:58:52.142" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='groups_history' </msg>
<status status="PASS" endtime="20170731 10:58:52.144" starttime="20170731 10:58:52.142"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts</arg>
</arguments>
<msg timestamp="20170731 10:58:52.145" level="INFO">Executing : Table Must Exist  |  hosts </msg>
<msg timestamp="20170731 10:58:52.145" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='hosts' </msg>
<status status="PASS" endtime="20170731 10:58:52.148" starttime="20170731 10:58:52.145"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts_history</arg>
</arguments>
<msg timestamp="20170731 10:58:52.148" level="INFO">Executing : Table Must Exist  |  hosts_history </msg>
<msg timestamp="20170731 10:58:52.148" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='hosts_history' </msg>
<status status="PASS" endtime="20170731 10:58:52.151" starttime="20170731 10:58:52.148"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships</arg>
</arguments>
<msg timestamp="20170731 10:58:52.151" level="INFO">Executing : Table Must Exist  |  memberships </msg>
<msg timestamp="20170731 10:58:52.152" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='memberships' </msg>
<status status="PASS" endtime="20170731 10:58:52.154" starttime="20170731 10:58:52.151"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships_history</arg>
</arguments>
<msg timestamp="20170731 10:58:52.154" level="INFO">Executing : Table Must Exist  |  memberships_history </msg>
<msg timestamp="20170731 10:58:52.155" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='memberships_history' </msg>
<status status="PASS" endtime="20170731 10:58:52.158" starttime="20170731 10:58:52.154"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>oses</arg>
</arguments>
<msg timestamp="20170731 10:58:52.159" level="INFO">Executing : Table Must Exist  |  oses </msg>
<msg timestamp="20170731 10:58:52.159" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='oses' </msg>
<status status="PASS" endtime="20170731 10:58:52.162" starttime="20170731 10:58:52.158"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>packageTypes</arg>
</arguments>
<msg timestamp="20170731 10:58:52.163" level="INFO">Executing : Table Must Exist  |  packageTypes </msg>
<msg timestamp="20170731 10:58:52.163" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='packageTypes' </msg>
<status status="PASS" endtime="20170731 10:58:52.169" starttime="20170731 10:58:52.163"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions</arg>
</arguments>
<msg timestamp="20170731 10:58:52.170" level="INFO">Executing : Table Must Exist  |  sessions </msg>
<msg timestamp="20170731 10:58:52.170" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sessions' </msg>
<status status="PASS" endtime="20170731 10:58:52.171" starttime="20170731 10:58:52.170"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions_history</arg>
</arguments>
<msg timestamp="20170731 10:58:52.172" level="INFO">Executing : Table Must Exist  |  sessions_history </msg>
<msg timestamp="20170731 10:58:52.172" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sessions_history' </msg>
<status status="PASS" endtime="20170731 10:58:52.173" starttime="20170731 10:58:52.172"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes</arg>
</arguments>
<msg timestamp="20170731 10:58:52.174" level="INFO">Executing : Table Must Exist  |  sharedAppTypes </msg>
<msg timestamp="20170731 10:58:52.174" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedAppTypes' </msg>
<status status="PASS" endtime="20170731 10:58:52.176" starttime="20170731 10:58:52.174"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes_history</arg>
</arguments>
<msg timestamp="20170731 10:58:52.176" level="INFO">Executing : Table Must Exist  |  sharedAppTypes_history </msg>
<msg timestamp="20170731 10:58:52.176" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedAppTypes_history' </msg>
<status status="PASS" endtime="20170731 10:58:52.178" starttime="20170731 10:58:52.176"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes</arg>
</arguments>
<msg timestamp="20170731 10:58:52.178" level="INFO">Executing : Table Must Exist  |  sharedPackageTypes </msg>
<msg timestamp="20170731 10:58:52.178" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedPackageTypes' </msg>
<status status="PASS" endtime="20170731 10:58:52.180" starttime="20170731 10:58:52.178"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes_history</arg>
</arguments>
<msg timestamp="20170731 10:58:52.181" level="INFO">Executing : Table Must Exist  |  sharedPackageTypes_history </msg>
<msg timestamp="20170731 10:58:52.181" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedPackageTypes_history' </msg>
<status status="PASS" endtime="20170731 10:58:52.183" starttime="20170731 10:58:52.181"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>statuses</arg>
</arguments>
<msg timestamp="20170731 10:58:52.184" level="INFO">Executing : Table Must Exist  |  statuses </msg>
<msg timestamp="20170731 10:58:52.184" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='statuses' </msg>
<status status="PASS" endtime="20170731 10:58:52.187" starttime="20170731 10:58:52.184"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks</arg>
</arguments>
<msg timestamp="20170731 10:58:52.188" level="INFO">Executing : Table Must Exist  |  tasks </msg>
<msg timestamp="20170731 10:58:52.188" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='tasks' </msg>
<status status="PASS" endtime="20170731 10:58:52.191" starttime="20170731 10:58:52.188"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks_history</arg>
</arguments>
<msg timestamp="20170731 10:58:52.191" level="INFO">Executing : Table Must Exist  |  tasks_history </msg>
<msg timestamp="20170731 10:58:52.191" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='tasks_history' </msg>
<status status="PASS" endtime="20170731 10:58:52.193" starttime="20170731 10:58:52.191"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces</arg>
</arguments>
<msg timestamp="20170731 10:58:52.194" level="INFO">Executing : Table Must Exist  |  traces </msg>
<msg timestamp="20170731 10:58:52.194" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='traces' </msg>
<status status="PASS" endtime="20170731 10:58:52.196" starttime="20170731 10:58:52.194"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces_history</arg>
</arguments>
<msg timestamp="20170731 10:58:52.196" level="INFO">Executing : Table Must Exist  |  traces_history </msg>
<msg timestamp="20170731 10:58:52.196" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='traces_history' </msg>
<status status="PASS" endtime="20170731 10:58:52.226" starttime="20170731 10:58:52.196"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>userRights</arg>
</arguments>
<msg timestamp="20170731 10:58:52.249" level="INFO">Executing : Table Must Exist  |  userRights </msg>
<msg timestamp="20170731 10:58:52.249" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='userRights' </msg>
<status status="PASS" endtime="20170731 10:58:52.277" starttime="20170731 10:58:52.248"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups</arg>
</arguments>
<msg timestamp="20170731 10:58:52.278" level="INFO">Executing : Table Must Exist  |  usergroups </msg>
<msg timestamp="20170731 10:58:52.278" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='usergroups' </msg>
<status status="PASS" endtime="20170731 10:58:52.284" starttime="20170731 10:58:52.277"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups_history</arg>
</arguments>
<msg timestamp="20170731 10:58:52.284" level="INFO">Executing : Table Must Exist  |  usergroups_history </msg>
<msg timestamp="20170731 10:58:52.284" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='usergroups_history' </msg>
<status status="PASS" endtime="20170731 10:58:52.289" starttime="20170731 10:58:52.284"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users</arg>
</arguments>
<msg timestamp="20170731 10:58:52.290" level="INFO">Executing : Table Must Exist  |  users </msg>
<msg timestamp="20170731 10:58:52.290" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='users' </msg>
<status status="PASS" endtime="20170731 10:58:52.293" starttime="20170731 10:58:52.289"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users_history</arg>
</arguments>
<msg timestamp="20170731 10:58:52.293" level="INFO">Executing : Table Must Exist  |  users_history </msg>
<msg timestamp="20170731 10:58:52.293" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='users_history' </msg>
<status status="PASS" endtime="20170731 10:58:52.296" starttime="20170731 10:58:52.293"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>version</arg>
</arguments>
<msg timestamp="20170731 10:58:52.297" level="INFO">Executing : Table Must Exist  |  version </msg>
<msg timestamp="20170731 10:58:52.297" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='version' </msg>
<status status="PASS" endtime="20170731 10:58:52.309" starttime="20170731 10:58:52.296"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>versions</arg>
</arguments>
<msg timestamp="20170731 10:58:52.310" level="INFO">Executing : Table Must Exist  |  versions </msg>
<msg timestamp="20170731 10:58:52.310" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='versions' </msg>
<status status="PASS" endtime="20170731 10:58:52.312" starttime="20170731 10:58:52.309"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps</arg>
</arguments>
<msg timestamp="20170731 10:58:52.313" level="INFO">Executing : Table Must Exist  |  view_apps </msg>
<msg timestamp="20170731 10:58:52.313" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps' </msg>
<status status="PASS" endtime="20170731 10:58:52.316" starttime="20170731 10:58:52.313"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps_for_offering</arg>
</arguments>
<msg timestamp="20170731 10:58:52.317" level="INFO">Executing : Table Must Exist  |  view_apps_for_offering </msg>
<msg timestamp="20170731 10:58:52.317" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps_for_offering' </msg>
<status status="PASS" endtime="20170731 10:58:52.319" starttime="20170731 10:58:52.317"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps_for_offering_with_file_sizes</arg>
</arguments>
<msg timestamp="20170731 10:58:52.319" level="INFO">Executing : Table Must Exist  |  view_apps_for_offering_with_file_sizes </msg>
<msg timestamp="20170731 10:58:52.319" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps_for_offering_with_file_sizes' </msg>
<status status="PASS" endtime="20170731 10:58:52.325" starttime="20170731 10:58:52.319"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_datas</arg>
</arguments>
<msg timestamp="20170731 10:58:52.326" level="INFO">Executing : Table Must Exist  |  view_datas </msg>
<msg timestamp="20170731 10:58:52.326" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_datas' </msg>
<status status="PASS" endtime="20170731 10:58:52.329" starttime="20170731 10:58:52.325"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_executables</arg>
</arguments>
<msg timestamp="20170731 10:58:52.329" level="INFO">Executing : Table Must Exist  |  view_executables </msg>
<msg timestamp="20170731 10:58:52.329" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_executables' </msg>
<status status="PASS" endtime="20170731 10:58:52.331" starttime="20170731 10:58:52.329"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_groups</arg>
</arguments>
<msg timestamp="20170731 10:58:52.332" level="INFO">Executing : Table Must Exist  |  view_groups </msg>
<msg timestamp="20170731 10:58:52.332" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_groups' </msg>
<status status="PASS" endtime="20170731 10:58:52.334" starttime="20170731 10:58:52.332"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts</arg>
</arguments>
<msg timestamp="20170731 10:58:52.335" level="INFO">Executing : Table Must Exist  |  view_hosts </msg>
<msg timestamp="20170731 10:58:52.335" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts' </msg>
<status status="PASS" endtime="20170731 10:58:52.337" starttime="20170731 10:58:52.334"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_deployable</arg>
</arguments>
<msg timestamp="20170731 10:58:52.337" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_deployable </msg>
<msg timestamp="20170731 10:58:52.337" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_deployable' </msg>
<status status="PASS" endtime="20170731 10:58:52.340" starttime="20170731 10:58:52.337"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_deployable_and_shared</arg>
</arguments>
<msg timestamp="20170731 10:58:52.340" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_deployable_and_shared </msg>
<msg timestamp="20170731 10:58:52.340" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_deployable_and_shared' </msg>
<status status="PASS" endtime="20170731 10:58:52.342" starttime="20170731 10:58:52.340"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_shared</arg>
</arguments>
<msg timestamp="20170731 10:58:52.343" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_shared </msg>
<msg timestamp="20170731 10:58:52.343" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_shared' </msg>
<status status="PASS" endtime="20170731 10:58:52.345" starttime="20170731 10:58:52.343"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_sessions</arg>
</arguments>
<msg timestamp="20170731 10:58:52.345" level="INFO">Executing : Table Must Exist  |  view_sessions </msg>
<msg timestamp="20170731 10:58:52.346" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_sessions' </msg>
<status status="PASS" endtime="20170731 10:58:52.347" starttime="20170731 10:58:52.345"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_sharedapptypes</arg>
</arguments>
<msg timestamp="20170731 10:58:52.348" level="INFO">Executing : Table Must Exist  |  view_sharedapptypes </msg>
<msg timestamp="20170731 10:58:52.348" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_sharedapptypes' </msg>
<status status="PASS" endtime="20170731 10:58:52.349" starttime="20170731 10:58:52.347"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_sharedpackagetypes</arg>
</arguments>
<msg timestamp="20170731 10:58:52.350" level="INFO">Executing : Table Must Exist  |  view_sharedpackagetypes </msg>
<msg timestamp="20170731 10:58:52.350" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_sharedpackagetypes' </msg>
<status status="PASS" endtime="20170731 10:58:52.351" starttime="20170731 10:58:52.349"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_tasks</arg>
</arguments>
<msg timestamp="20170731 10:58:52.352" level="INFO">Executing : Table Must Exist  |  view_tasks </msg>
<msg timestamp="20170731 10:58:52.352" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_tasks' </msg>
<status status="PASS" endtime="20170731 10:58:52.354" starttime="20170731 10:58:52.351"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_traces</arg>
</arguments>
<msg timestamp="20170731 10:58:52.354" level="INFO">Executing : Table Must Exist  |  view_traces </msg>
<msg timestamp="20170731 10:58:52.354" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_traces' </msg>
<status status="PASS" endtime="20170731 10:58:52.356" starttime="20170731 10:58:52.354"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_usergroups</arg>
</arguments>
<msg timestamp="20170731 10:58:52.357" level="INFO">Executing : Table Must Exist  |  view_usergroups </msg>
<msg timestamp="20170731 10:58:52.357" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_usergroups' </msg>
<status status="PASS" endtime="20170731 10:58:52.359" starttime="20170731 10:58:52.357"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users</arg>
</arguments>
<msg timestamp="20170731 10:58:52.360" level="INFO">Executing : Table Must Exist  |  view_users </msg>
<msg timestamp="20170731 10:58:52.360" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users' </msg>
<status status="PASS" endtime="20170731 10:58:52.361" starttime="20170731 10:58:52.359"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_apps</arg>
</arguments>
<msg timestamp="20170731 10:58:52.362" level="INFO">Executing : Table Must Exist  |  view_users_apps </msg>
<msg timestamp="20170731 10:58:52.362" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_apps' </msg>
<status status="PASS" endtime="20170731 10:58:52.365" starttime="20170731 10:58:52.362"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_datas</arg>
</arguments>
<msg timestamp="20170731 10:58:52.365" level="INFO">Executing : Table Must Exist  |  view_users_datas </msg>
<msg timestamp="20170731 10:58:52.365" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_datas' </msg>
<status status="PASS" endtime="20170731 10:58:52.367" starttime="20170731 10:58:52.365"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_groups</arg>
</arguments>
<msg timestamp="20170731 10:58:52.367" level="INFO">Executing : Table Must Exist  |  view_users_groups </msg>
<msg timestamp="20170731 10:58:52.367" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_groups' </msg>
<status status="PASS" endtime="20170731 10:58:52.369" starttime="20170731 10:58:52.367"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_hosts</arg>
</arguments>
<msg timestamp="20170731 10:58:52.370" level="INFO">Executing : Table Must Exist  |  view_users_hosts </msg>
<msg timestamp="20170731 10:58:52.370" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_hosts' </msg>
<status status="PASS" endtime="20170731 10:58:52.371" starttime="20170731 10:58:52.369"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_sessions</arg>
</arguments>
<msg timestamp="20170731 10:58:52.372" level="INFO">Executing : Table Must Exist  |  view_users_sessions </msg>
<msg timestamp="20170731 10:58:52.372" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_sessions' </msg>
<status status="PASS" endtime="20170731 10:58:52.374" starttime="20170731 10:58:52.372"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_tasks</arg>
</arguments>
<msg timestamp="20170731 10:58:52.374" level="INFO">Executing : Table Must Exist  |  view_users_tasks </msg>
<msg timestamp="20170731 10:58:52.374" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_tasks' </msg>
<status status="PASS" endtime="20170731 10:58:52.379" starttime="20170731 10:58:52.374"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_traces</arg>
</arguments>
<msg timestamp="20170731 10:58:52.379" level="INFO">Executing : Table Must Exist  |  view_users_traces </msg>
<msg timestamp="20170731 10:58:52.379" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_traces' </msg>
<status status="PASS" endtime="20170731 10:58:52.382" starttime="20170731 10:58:52.379"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_usergroups</arg>
</arguments>
<msg timestamp="20170731 10:58:52.382" level="INFO">Executing : Table Must Exist  |  view_users_usergroups </msg>
<msg timestamp="20170731 10:58:52.382" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_usergroups' </msg>
<status status="PASS" endtime="20170731 10:58:52.384" starttime="20170731 10:58:52.382"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_users</arg>
</arguments>
<msg timestamp="20170731 10:58:52.385" level="INFO">Executing : Table Must Exist  |  view_users_users </msg>
<msg timestamp="20170731 10:58:52.385" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_users' </msg>
<status status="PASS" endtime="20170731 10:58:52.387" starttime="20170731 10:58:52.384"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_works</arg>
</arguments>
<msg timestamp="20170731 10:58:52.387" level="INFO">Executing : Table Must Exist  |  view_users_works </msg>
<msg timestamp="20170731 10:58:52.387" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_works' </msg>
<status status="PASS" endtime="20170731 10:58:52.389" starttime="20170731 10:58:52.387"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works</arg>
</arguments>
<msg timestamp="20170731 10:58:52.390" level="INFO">Executing : Table Must Exist  |  view_works </msg>
<msg timestamp="20170731 10:58:52.390" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works' </msg>
<status status="PASS" endtime="20170731 10:58:52.392" starttime="20170731 10:58:52.389"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works_for_billing</arg>
</arguments>
<msg timestamp="20170731 10:58:52.392" level="INFO">Executing : Table Must Exist  |  view_works_for_billing </msg>
<msg timestamp="20170731 10:58:52.392" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works_for_billing' </msg>
<status status="PASS" endtime="20170731 10:58:52.394" starttime="20170731 10:58:52.392"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works_for_billing_with_file_sizes</arg>
</arguments>
<msg timestamp="20170731 10:58:52.394" level="INFO">Executing : Table Must Exist  |  view_works_for_billing_with_file_sizes </msg>
<msg timestamp="20170731 10:58:52.394" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works_for_billing_with_file_sizes' </msg>
<status status="PASS" endtime="20170731 10:58:52.396" starttime="20170731 10:58:52.394"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works</arg>
</arguments>
<msg timestamp="20170731 10:58:52.398" level="INFO">Executing : Table Must Exist  |  works </msg>
<msg timestamp="20170731 10:58:52.398" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='works' </msg>
<status status="PASS" endtime="20170731 10:58:52.403" starttime="20170731 10:58:52.396"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works_history</arg>
</arguments>
<msg timestamp="20170731 10:58:52.405" level="INFO">Executing : Table Must Exist  |  works_history </msg>
<msg timestamp="20170731 10:58:52.405" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='works_history' </msg>
<status status="PASS" endtime="20170731 10:58:52.407" starttime="20170731 10:58:52.403"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170731 10:58:52.408" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170731 10:58:52.408" starttime="20170731 10:58:52.408"></status>
</kw>
<status status="PASS" endtime="20170731 10:58:52.408" starttime="20170731 10:58:52.407"></status>
</kw>
<status status="PASS" endtime="20170731 10:58:52.408" starttime="20170731 10:58:52.103"></status>
</kw>
<status status="PASS" endtime="20170731 10:58:52.409" starttime="20170731 10:58:52.103"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>TODO ping XWtremWeb server up</arg>
</arguments>
<msg timestamp="20170731 10:58:52.409" level="INFO">TODO ping XWtremWeb server up</msg>
<status status="PASS" endtime="20170731 10:58:52.409" starttime="20170731 10:58:52.409"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>TODO ping XWtremWeb worker up before one test</arg>
</arguments>
<msg timestamp="20170731 10:58:52.410" level="INFO">TODO ping XWtremWeb worker up before one test</msg>
<status status="PASS" endtime="20170731 10:58:52.410" starttime="20170731 10:58:52.409"></status>
</kw>
<kw name="Delete Fonctionnal Xtremweb Tables" library="MySql">
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170731 10:58:52.412" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170731 10:58:52.414" starttime="20170731 10:58:52.411"></status>
</kw>
<status status="PASS" endtime="20170731 10:58:52.414" starttime="20170731 10:58:52.411"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps</arg>
</arguments>
<msg timestamp="20170731 10:58:52.415" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM apps; </msg>
<status status="PASS" endtime="20170731 10:58:52.416" starttime="20170731 10:58:52.415"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps_history</arg>
</arguments>
<msg timestamp="20170731 10:58:52.417" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM apps_history; </msg>
<status status="PASS" endtime="20170731 10:58:52.418" starttime="20170731 10:58:52.416"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas</arg>
</arguments>
<msg timestamp="20170731 10:58:52.419" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM datas; </msg>
<status status="PASS" endtime="20170731 10:58:52.420" starttime="20170731 10:58:52.419"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas_history</arg>
</arguments>
<msg timestamp="20170731 10:58:52.421" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM datas_history; </msg>
<status status="PASS" endtime="20170731 10:58:52.422" starttime="20170731 10:58:52.421"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables</arg>
</arguments>
<msg timestamp="20170731 10:58:52.423" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM executables; </msg>
<status status="PASS" endtime="20170731 10:58:52.424" starttime="20170731 10:58:52.423"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables_history</arg>
</arguments>
<msg timestamp="20170731 10:58:52.425" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM executables_history; </msg>
<status status="PASS" endtime="20170731 10:58:52.426" starttime="20170731 10:58:52.425"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups</arg>
</arguments>
<msg timestamp="20170731 10:58:52.427" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM groups; </msg>
<status status="PASS" endtime="20170731 10:58:52.428" starttime="20170731 10:58:52.426"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups_history</arg>
</arguments>
<msg timestamp="20170731 10:58:52.428" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM groups_history; </msg>
<status status="PASS" endtime="20170731 10:58:52.429" starttime="20170731 10:58:52.428"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts</arg>
</arguments>
<msg timestamp="20170731 10:58:52.429" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM hosts; </msg>
<status status="PASS" endtime="20170731 10:58:52.431" starttime="20170731 10:58:52.429"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts_history</arg>
</arguments>
<msg timestamp="20170731 10:58:52.431" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM hosts_history; </msg>
<status status="PASS" endtime="20170731 10:58:52.433" starttime="20170731 10:58:52.431"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships</arg>
</arguments>
<msg timestamp="20170731 10:58:52.434" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM memberships; </msg>
<status status="PASS" endtime="20170731 10:58:52.435" starttime="20170731 10:58:52.434"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships_history</arg>
</arguments>
<msg timestamp="20170731 10:58:52.435" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM memberships_history; </msg>
<status status="PASS" endtime="20170731 10:58:52.436" starttime="20170731 10:58:52.435"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions</arg>
</arguments>
<msg timestamp="20170731 10:58:52.437" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sessions; </msg>
<status status="PASS" endtime="20170731 10:58:52.438" starttime="20170731 10:58:52.436"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions_history</arg>
</arguments>
<msg timestamp="20170731 10:58:52.439" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sessions_history; </msg>
<status status="PASS" endtime="20170731 10:58:52.440" starttime="20170731 10:58:52.438"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes</arg>
</arguments>
<msg timestamp="20170731 10:58:52.441" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedAppTypes; </msg>
<status status="PASS" endtime="20170731 10:58:52.442" starttime="20170731 10:58:52.441"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes_history</arg>
</arguments>
<msg timestamp="20170731 10:58:52.442" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedAppTypes_history; </msg>
<status status="PASS" endtime="20170731 10:58:52.444" starttime="20170731 10:58:52.442"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes</arg>
</arguments>
<msg timestamp="20170731 10:58:52.444" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedPackageTypes; </msg>
<status status="PASS" endtime="20170731 10:58:52.445" starttime="20170731 10:58:52.444"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes_history</arg>
</arguments>
<msg timestamp="20170731 10:58:52.446" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedPackageTypes_history; </msg>
<status status="PASS" endtime="20170731 10:58:52.447" starttime="20170731 10:58:52.446"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks</arg>
</arguments>
<msg timestamp="20170731 10:58:52.447" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM tasks; </msg>
<status status="PASS" endtime="20170731 10:58:52.448" starttime="20170731 10:58:52.447"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks_history</arg>
</arguments>
<msg timestamp="20170731 10:58:52.448" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM tasks_history; </msg>
<status status="PASS" endtime="20170731 10:58:52.449" starttime="20170731 10:58:52.448"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces</arg>
</arguments>
<msg timestamp="20170731 10:58:52.449" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM traces; </msg>
<status status="PASS" endtime="20170731 10:58:52.450" starttime="20170731 10:58:52.449"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces_history</arg>
</arguments>
<msg timestamp="20170731 10:58:52.450" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM traces_history; </msg>
<status status="PASS" endtime="20170731 10:58:52.451" starttime="20170731 10:58:52.450"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups</arg>
</arguments>
<msg timestamp="20170731 10:58:52.452" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM usergroups; </msg>
<status status="PASS" endtime="20170731 10:58:52.452" starttime="20170731 10:58:52.451"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups_history</arg>
</arguments>
<msg timestamp="20170731 10:58:52.453" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM usergroups_history; </msg>
<status status="PASS" endtime="20170731 10:58:52.453" starttime="20170731 10:58:52.452"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users_history</arg>
</arguments>
<msg timestamp="20170731 10:58:52.454" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM users_history; </msg>
<status status="PASS" endtime="20170731 10:58:52.455" starttime="20170731 10:58:52.454"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works</arg>
</arguments>
<msg timestamp="20170731 10:58:52.455" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM works; </msg>
<status status="PASS" endtime="20170731 10:58:52.456" starttime="20170731 10:58:52.455"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works_history</arg>
</arguments>
<msg timestamp="20170731 10:58:52.456" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM works_history; </msg>
<status status="PASS" endtime="20170731 10:58:52.457" starttime="20170731 10:58:52.456"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170731 10:58:52.458" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170731 10:58:52.458" starttime="20170731 10:58:52.457"></status>
</kw>
<status status="PASS" endtime="20170731 10:58:52.458" starttime="20170731 10:58:52.457"></status>
</kw>
<status status="PASS" endtime="20170731 10:58:52.458" starttime="20170731 10:58:52.410"></status>
</kw>
<status status="PASS" endtime="20170731 10:58:52.458" starttime="20170731 10:58:52.102"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>TODO</arg>
</arguments>
<msg timestamp="20170731 10:58:52.459" level="INFO">TODO</msg>
<status status="PASS" endtime="20170731 10:58:52.459" starttime="20170731 10:58:52.458"></status>
</kw>
<kw type="teardown" name="End XWtremWeb Command Test" library="XWCommon">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Nothing to do</arg>
</arguments>
<msg timestamp="20170731 10:58:52.460" level="INFO">Nothing to do</msg>
<status status="PASS" endtime="20170731 10:58:52.460" starttime="20170731 10:58:52.459"></status>
</kw>
<status status="PASS" endtime="20170731 10:58:52.460" starttime="20170731 10:58:52.459"></status>
</kw>
<tags>
<tag>CommandLine Tests</tag>
</tags>
<status status="PASS" endtime="20170731 10:58:52.460" critical="yes" starttime="20170731 10:58:52.101"></status>
</test>
<kw type="teardown" name="Stop XWtremWeb Server And XWtremWeb Worker" library="XWCommon">
<kw name="Stop XtremWeb Server" library="XWServer">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${SERVER_PROCESS}</arg>
</arguments>
<msg timestamp="20170731 10:58:52.462" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20170731 10:58:52.565" level="INFO">Process completed.</msg>
<status status="PASS" endtime="20170731 10:58:52.565" starttime="20170731 10:58:52.462"></status>
</kw>
<status status="PASS" endtime="20170731 10:58:52.565" starttime="20170731 10:58:52.461"></status>
</kw>
<kw name="Log XtremWeb Server" library="XWCommon">
<kw name="Log XtremWeb Process Log File" library="XWServer">
<kw name="Log File" library="OperatingSystem">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<msg timestamp="20170731 10:58:52.567" html="yes" level="INFO">Getting file '&lt;a href="file:///Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/xwhep.server.process.log"&gt;/Users/McFrancis/IdeaProjects/xtremweb-hep-iexec/build/dist/xwhep-10.5.2/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170731 10:58:52.568" level="INFO">touch: /var/log/xwhep-ibishub.log: Permission denied
Mon Jul 31 10:58:36 CEST 2017 [MacBook-Pro-de-francoisbranciard.local xtremweb.server] INFO : checking launch url
Mon Jul 31 10:58:36 CEST 2017 [MacBook-Pro-de-francoisbranciard.local xtremweb.server] WARNING : no launcher URL defined
Mon Jul 31 10:58:36 CEST 2017 [MacBook-Pro-de-francoisbranciard.local xtremweb.server] INFO : launching SmartSockets hub
rm: /var/log/xwhep-ibishub.log: Permission denied
[31/Jul/2017:10:58:40 +0200] [main_1] ERROR : setRole : role redefined ?! (was SERVER)
[31/Jul/2017:10:58:41 +0200] [xtremweb.database.DBConnPoolThread_main_1] INFO : Connection to database jdbc:mysql://localhost/xtremweb is ok, 70 created
[31/Jul/2017:10:58:41 +0200] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't create ProxyValidator
[31/Jul/2017:10:58:41 +0200] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.io.FileNotFoundException: /tmp/castore (No such file or directory) (/tmp/castore (No such file or directory))
[31/Jul/2017:10:58:41 +0200] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't add CA certificates to keystore
[31/Jul/2017:10:58:41 +0200] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.lang.NullPointerException (null)
[31/Jul/2017:10:58:41 +0200] [xtremweb.dispatcher.HashTaskSet_TaskSet_15] INFO : TaskSet started (300000)
[31/Jul/2017:10:58:42 +0200] [xtremweb.dispatcher.Dispatcher_main_1] INFO : still waiting task set...
[31/Jul/2017:10:58:43 +0200] [xtremweb.dispatcher.Dispatcher_main_1] WARN : UDP server not started
[31/Jul/2017:10:58:43 +0200] [xtremweb.communications.TCPServer_TCPServerNIO_16] INFO : started, listening on port : 4321
log4j:WARN No appenders could be found for logger (org.eclipse.jetty.util.log).
log4j:WARN Please initialize the log4j system properly.
log4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.
[31/Jul/2017:10:58:43 +0200] [xtremweb.communications.HTTPServer_main_1] INFO : started, listening on port : 9443
[31/Jul/2017:10:58:43 +0200] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : FACEBOOK : java.net.MalformedURLException: no protocol: 
[31/Jul/2017:10:58:43 +0200] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : GOOGLE : java.net.MalformedURLException: no protocol: 
[31/Jul/2017:10:58:43 +0200] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : TWITTER : java.net.MalformedURLException: no protocol: 
[31/Jul/2017:10:58:43 +0200] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : YAHOO : java.net.MalformedURLException: no protocol: 
[31/Jul/2017:10:58:43 +0200] [java.lang.Class_main_1] INFO : www.google.com : certs retrieved = 3
[31/Jul/2017:10:58:43 +0200] [java.lang.Class_main_1] INFO : CN        = CN=www.google.com,O=Google Inc,L=Mountain View,ST=California,C=US
[31/Jul/2017:10:58:43 +0200] [java.lang.Class_main_1] INFO : Issuer CN = CN=Google Internet Authority G2,O=Google Inc,C=US
-----BEGIN CERTIFICATE-----
MIIEgDCCA2igAwIBAgIIXs2UqSQjeX0wDQYJKoZIhvcNAQELBQAwSTELMAkGA1UEBhMCVVMxEzAR
BgNVBAoTCkdvb2dsZSBJbmMxJTAjBgNVBAMTHEdvb2dsZSBJbnRlcm5ldCBBdXRob3JpdHkgRzIw
HhcNMTcwNzE5MTE1NTU3WhcNMTcxMDExMTEzMTAwWjBoMQswCQYDVQQGEwJVUzETMBEGA1UECAwK
Q2FsaWZvcm5pYTEWMBQGA1UEBwwNTW91bnRhaW4gVmlldzETMBEGA1UECgwKR29vZ2xlIEluYzEX
MBUGA1UEAwwOd3d3Lmdvb2dsZS5jb20wggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDC
0ch69mIeccIcKfXTYdiuWRS2iXVPjM6m+u6JwQ0rNMaUyynZ4D7mxLzanOCavewgCKs+nt18RZ5k
ZOofE2dfl1YMmnPLDwAk2SQ3GRBTsltKRONto7Ub9AK5E9ZN+Zfg8VGfxaduT3gqE3telPCHEoiX
HfNhR0+qSXMhg35KXgU9EISTKo7tqPOhZg80qSkqItkPGkRsTOfyxGLrzlUliR8qxXVuhho/cQQh
M0eggHw176jgF0lasG7vxmx9qHILLx+X5xo0sJrb4D4E4xrmGEISy5VDAS0fgrr7IzeNVaypTzZm
zT9se/U7TjY2DVjQOHq+0vegFQuok0EmxzjpAgMBAAGjggFLMIIBRzAdBgNVHSUEFjAUBggrBgEF
BQcDAQYIKwYBBQUHAwIwGQYDVR0RBBIwEIIOd3d3Lmdvb2dsZS5jb20waAYIKwYBBQUHAQEEXDBa
MCsGCCsGAQUFBzAChh9odHRwOi8vcGtpLmdvb2dsZS5jb20vR0lBRzIuY3J0MCsGCCsGAQUFBzAB
hh9odHRwOi8vY2xpZW50czEuZ29vZ2xlLmNvbS9vY3NwMB0GA1UdDgQWBBSNLiWf5cflJjv+MCFR
KdjhWw1wPTAMBgNVHRMBAf8EAjAAMB8GA1UdIwQYMBaAFErdBhYbvPZotXb1gba7Yhq6WoEvMCEG
A1UdIAQaMBgwDAYKKwYBBAHWeQIFATAIBgZngQwBAgIwMAYDVR0fBCkwJzAloCOgIYYfaHR0cDov
L3BraS5nb29nbGUuY29tL0dJQUcyLmNybDANBgkqhkiG9w0BAQsFAAOCAQEAZbJp48Od2jwHn2jM
EDWLyuigWBR1oF+J8ntDkB8Sbvccx5Ihk+B5LjJWVbvUGkjlDwBhQbaUvBuUPgyhFdMptwL6YJ7O
HAJGQwjdloOiCoQQif2qaTbmYu1Y8akGXxuUdGd7KmtmvR6Id/lN5rnvj90+u1w/7HEybgzKvIPK
rwmobQc0sKNfFtTXcMI6KiFiVLQ0QCXsetfV4RMDEcN6RNRRK1eENq7UZAk7ZXsARw8Qf2ux5IWy
sycEgCV7wgTKrLhtNPXU/bxAAAENH6ao8RLiWT+GsCeQltF7E7ryDwXYbDnUpnFtERdcMQ+xD+wy
Waibr6WSSJ1IyEaGl2qTvw==
-----END CERTIFICATE-----
[31/Jul/2017:10:58:43 +0200] [java.lang.Class_main_1] INFO : CN        = CN=Google Internet Authority G2,O=Google Inc,C=US
[31/Jul/2017:10:58:43 +0200] [java.lang.Class_main_1] INFO : Issuer CN = CN=GeoTrust Global CA,O=GeoTrust Inc.,C=US
-----BEGIN CERTIFICATE-----
MIIEKDCCAxCgAwIBAgIQAQAhJYiw+lmnd+8Fe2Yn3zANBgkqhkiG9w0BAQsFADBCMQswCQYDVQQG
EwJVUzEWMBQGA1UEChMNR2VvVHJ1c3QgSW5jLjEbMBkGA1UEAxMSR2VvVHJ1c3QgR2xvYmFsIENB
MB4XDTE3MDUyMjExMzIzN1oXDTE4MTIzMTIzNTk1OVowSTELMAkGA1UEBhMCVVMxEzARBgNVBAoT
Ckdvb2dsZSBJbmMxJTAjBgNVBAMTHEdvb2dsZSBJbnRlcm5ldCBBdXRob3JpdHkgRzIwggEiMA0G
CSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCcKgR3XNhQkToGo4Lg2FBIvIk/8RlwGohGfuCPxfGJ
ziHuWv5hDbcyRImgdAtTT1WkzoJile7rWV/G4QWAEsRelD+8W0g49FP3JOb7kekVxM/0Uw30Svyf
VN59vqBrb4fA0FAfKDADQNoIc1Fsf/86PKc3Bo69SxEE630k3ub5/DFx+5TVYPMuSq9C0svqxGoa
ssxT3RVLix/IGWEfzZ2oPmMrhDVpZYTIGcVGIvhTlb7jgEoQxirsupcgEcc5mRAEoPBhepUljE5S
deK27QjKFPzOImqzTs9GA5eXA37Asd57r0Uzz7o+cbfe9CUlwg01iZ2d+w4ReYkeN8WvjnJpAgMB
AAGjggERMIIBDTAfBgNVHSMEGDAWgBTAephojYn7qwVkDBF9qn1luMrMTjAdBgNVHQ4EFgQUSt0G
Fhu89mi1dvWBtrtiGrpagS8wDgYDVR0PAQH/BAQDAgEGMC4GCCsGAQUFBwEBBCIwIDAeBggrBgEF
BQcwAYYSaHR0cDovL2cuc3ltY2QuY29tMBIGA1UdEwEB/wQIMAYBAf8CAQAwNQYDVR0fBC4wLDAq
oCigJoYkaHR0cDovL2cuc3ltY2IuY29tL2NybHMvZ3RnbG9iYWwuY3JsMCEGA1UdIAQaMBgwDAYK
KwYBBAHWeQIFATAIBgZngQwBAgIwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMA0GCSqG
SIb3DQEBCwUAA4IBAQDKSeWs12Rkd1u+cfrP9B4jx5ppY1Rf60zWGSgjZGaOHMeHgGRfBIsmr5jf
CnC8vBk97nszqX+99AXUcLsFJnnqmseYuQcZZTTMPOk/xQH6bwx+23pwXEz+LQDwyr4tjrSogPsB
E4jLnD/lu3fKOmc2887VJwJyQ6C9bgLxRwVxPgFZ6RGeGvOED4Cmong1L7bHon8XfOGLVq7uZ4hR
JzBgpWJSwzfVO+qFKgE4h6LPcK2kesnE58rF2rwjMvL+GMJ74N87L9TQEOaWTPtEtyFkDbkAlDAS
JodYmDkFOA/MgkgMCkdm7r+0X8T/cKjhf4t5K7hlMqO5tzHpCvX2HzLc
-----END CERTIFICATE-----
[31/Jul/2017:10:58:43 +0200] [java.lang.Class_main_1] INFO : CN        = CN=GeoTrust Global CA,O=GeoTrust Inc.,C=US
[31/Jul/2017:10:58:43 +0200] [java.lang.Class_main_1] INFO : Issuer CN = OU=Equifax Secure Certificate Authority,O=Equifax,C=US
-----BEGIN CERTIFICATE-----
MIIDfTCCAuagAwIBAgIDErvmMA0GCSqGSIb3DQEBBQUAME4xCzAJBgNVBAYTAlVTMRAwDgYDVQQK
EwdFcXVpZmF4MS0wKwYDVQQLEyRFcXVpZmF4IFNlY3VyZSBDZXJ0aWZpY2F0ZSBBdXRob3JpdHkw
HhcNMDIwNTIxMDQwMDAwWhcNMTgwODIxMDQwMDAwWjBCMQswCQYDVQQGEwJVUzEWMBQGA1UEChMN
R2VvVHJ1c3QgSW5jLjEbMBkGA1UEAxMSR2VvVHJ1c3QgR2xvYmFsIENBMIIBIjANBgkqhkiG9w0B
AQEFAAOCAQ8AMIIBCgKCAQEA2swYYzD99BcjGlZ+W988bDjkcbd4kdS8odhM+KhDtgPpTSEHCIja
WC9mOSm9BXiLnTjoBbdqfnGk5sRgprDvgOSJKA+eJdbtg/OtppHHmMlCGDUUna2YRpIuT8rxh0PB
FpVXLVDviS2Aelet8u5fa9IAjbkU+BQVNdnARqN7csiRv8lVK83Qlz6cJmTM386DGXHKTubU1Xup
Gc1V3sjs0l44U+VcT4wt/lAjNvxm5suOpDkZALeVAjmRCw7+OC7RHQWa9k0+bw8HHa8sHo9gOeL6
NlMTOdReJivbPagUvTLrGAMoUgRx5aszPeE4uwc2hGKceeoWMPRfwCvocWvk+QIDAQABo4HwMIHt
MB8GA1UdIwQYMBaAFEjmaPkr0rKV10fYIyAQTzOYkJ/UMB0GA1UdDgQWBBTAephojYn7qwVkDBF9
qn1luMrMTjAPBgNVHRMBAf8EBTADAQH/MA4GA1UdDwEB/wQEAwIBBjA6BgNVHR8EMzAxMC+gLaAr
hilodHRwOi8vY3JsLmdlb3RydXN0LmNvbS9jcmxzL3NlY3VyZWNhLmNybDBOBgNVHSAERzBFMEMG
BFUdIAAwOzA5BggrBgEFBQcCARYtaHR0cHM6Ly93d3cuZ2VvdHJ1c3QuY29tL3Jlc291cmNlcy9y
ZXBvc2l0b3J5MA0GCSqGSIb3DQEBBQUAA4GBAHbhEm5OSxYShjAGsoEIz/AIx8dxfmbuwu3UOx//
8PDITtZDOLC5MH0Y0FWDomrLNhGc6Ehmo21/uBPUR/6LWlxz/K7ZGzIZOKuXNBSqltLroxwUCEm2
u+WR74M26x1Wb8ravHNjkOR/ez4iyz0H7V84dJzjA1BOoa+Y7mHyhD8S
-----END CERTIFICATE-----
[31/Jul/2017:10:58:43 +0200] [java.lang.Class_main_1] INFO : www.yahoo.com : certs retrieved = 3
[31/Jul/2017:10:58:43 +0200] [java.lang.Class_main_1] INFO : CN        = CN=www.yahoo.com,OU=Information Technology,O=Yahoo Inc.,L=Sunnyvale,ST=California,C=US
[31/Jul/2017:10:58:43 +0200] [java.lang.Class_main_1] INFO : Issuer CN = CN=Symantec Class 3 Secure Server CA - G4,OU=Symantec Trust Network,O=Symantec Corporation,C=US
-----BEGIN CERTIFICATE-----
MIIJKzCCCBOgAwIBAgIQHCVDDtCmAujMOpd7BTnM5TANBgkqhkiG9w0BAQsFADB+MQswCQYDVQQG
EwJVUzEdMBsGA1UEChMUU3ltYW50ZWMgQ29ycG9yYXRpb24xHzAdBgNVBAsTFlN5bWFudGVjIFRy
dXN0IE5ldHdvcmsxLzAtBgNVBAMTJlN5bWFudGVjIENsYXNzIDMgU2VjdXJlIFNlcnZlciBDQSAt
IEc0MB4XDTE1MTAzMTAwMDAwMFoXDTE3MTAzMDIzNTk1OVowgYQxCzAJBgNVBAYTAlVTMRMwEQYD
VQQIDApDYWxpZm9ybmlhMRIwEAYDVQQHDAlTdW5ueXZhbGUxEzARBgNVBAoMCllhaG9vIEluYy4x
HzAdBgNVBAsMFkluZm9ybWF0aW9uIFRlY2hub2xvZ3kxFjAUBgNVBAMMDXd3dy55YWhvby5jb20w
ggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDQCDGY8Tsqwwg+YqP8ZcLSbr8uIvYolaOi
1p4pJbhE3sPgmb8wS5n9ZL+P/BF6s4BNVlA6W+ps9s3WaGp9DzoxQgrH354e0JXxOJidogRGq2xD
cyRf8klriX8clOWEVPd63omqwLSInx957povTsBYadcnC1uJO+cHu1QjENdxoF3VD/zccH13jKqD
XMZwB/UyqhEpbQwxbuPRp1BpQUQN0KhKH/JG9YqXeySc8CUGO9AZPtb6AWXcd+VA0xnnD6YKfPWB
LYbBWDHAlv/zJd3wDCNVS5F8zUlG3RM/TAwa3uR3S3v9swCcTkb6AVDgJknD9yDaPowEoyurG7ZF
KfFzAgMBAAGjggWcMIIFmDCCBFAGA1UdEQSCBEcwggRDgg13d3cueWFob28uY29tggl5YWhvby5j
b22CDmhzcmQueWFob28uY29tggx1cy55YWhvby5jb22CDGZyLnlhaG9vLmNvbYIMdWsueWFob28u
Y29tggx6YS55YWhvby5jb22CDGllLnlhaG9vLmNvbYIMaXQueWFob28uY29tggxlcy55YWhvby5j
b22CDGRlLnlhaG9vLmNvbYIMY2EueWFob28uY29tggxxYy55YWhvby5jb22CDGJyLnlhaG9vLmNv
bYIMcm8ueWFob28uY29tggxzZS55YWhvby5jb22CDGJlLnlhaG9vLmNvbYIPZnItYmUueWFob28u
Y29tggxhci55YWhvby5jb22CDG14LnlhaG9vLmNvbYIMY2wueWFob28uY29tggxjby55YWhvby5j
b22CDHZlLnlhaG9vLmNvbYIRZXNwYW5vbC55YWhvby5jb22CDHBlLnlhaG9vLmNvbYIMaW4ueWFo
b28uY29tggxzZy55YWhvby5jb22CDGlkLnlhaG9vLmNvbYISbWFsYXlzaWEueWFob28uY29tggxw
aC55YWhvby5jb22CDHZuLnlhaG9vLmNvbYIRbWFrdG9vYi55YWhvby5jb22CFGVuLW1ha3Rvb2Iu
eWFob28uY29tgg9jYS5teS55YWhvby5jb22CDGdyLnlhaG9vLmNvbYINYXR0LnlhaG9vLmNvbYIM
YXUueWFob28uY29tggxuei55YWhvby5jb22CDHR3LnlhaG9vLmNvbYIMaGsueWFob28uY29tgg1i
cmIueWFob28uY29tggxteS55YWhvby5jb22CEGFkZC5teS55YWhvby5jb22CEmZyb250aWVyLnlh
aG9vLmNvbYIRdmVyaXpvbi55YWhvby5jb22CE2NhLnJvZ2Vycy55YWhvby5jb22CFmZyLWNhLnJv
Z2Vycy55YWhvby5jb22CFHRhdGFkb2NvbW8ueWFob28uY29tghB0aWtvbmEueWFob28uY29tghdp
ZGVhbmV0c2V0dGVyLnlhaG9vLmNvbYISbXRzaW5kaWEueWFob28uY29tghNzbWFydGZyZW4ueWFo
b28uY29tgg8qLmF0dC55YWhvby5jb22CEioucGVvcGxlLnlhaG9vLmNvbYIVKi5jZWxlYnJpdHku
eWFob28uY29tghcqLnZpZGEtZXN0aWxvLnlhaG9vLmNvbYIRKi5zdHlsZS55YWhvby5jb22CEiou
bW92aWVzLnlhaG9vLmNvbYIRKi5zdGFycy55YWhvby5jb22CECoua2luby55YWhvby5jb22CECou
Y2luZS55YWhvby5jb22CEiouY2luZW1hLnlhaG9vLmNvbYIYKi5jZWxlYnJpZGFkZXMueWFob28u
Y29tghAqLmxpdmUueWFob28uY29tghIqLmJlYXV0eS55YWhvby5jb20wCQYDVR0TBAIwADAOBgNV
HQ8BAf8EBAMCBaAwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMGEGA1UdIARaMFgwVgYG
Z4EMAQICMEwwIwYIKwYBBQUHAgEWF2h0dHBzOi8vZC5zeW1jYi5jb20vY3BzMCUGCCsGAQUFBwIC
MBkaF2h0dHBzOi8vZC5zeW1jYi5jb20vcnBhMB8GA1UdIwQYMBaAFF9gz2GQVd+EQxSKYCqy9Xr0
QxjvMCsGA1UdHwQkMCIwIKAeoByGGmh0dHA6Ly9zcy5zeW1jYi5jb20vc3MuY3JsMFcGCCsGAQUF
BwEBBEswSTAfBggrBgEFBQcwAYYTaHR0cDovL3NzLnN5bWNkLmNvbTAmBggrBgEFBQcwAoYaaHR0
cDovL3NzLnN5bWNiLmNvbS9zcy5jcnQwDQYJKoZIhvcNAQELBQADggEBAG/q7lSPjely/GpDlCni
zkFcSZsk+xAAS4zn22JNVGSHR1r+mdgFFw0mzr8+sc8UpiMFMQ4jtEHtffbsw6U9YWjuCOJKZ6MQ
bS9qjr+60Bat2tYO8XK7gviQ9wgOQHn/L8ky5t3GAmgyVTAglJIIAUpKehHrC4n3ot/oudUftaPg
oA+34qGz8bq1GH+0+DbMblnf6EDBsz4MoDUJvkyGtlibf3FmfykPDCm0uaN2X/zRXjW48++feCuJ
eqCgCZl/0U2cmabKGDxLaiDf/xgnfQnCqn+Ka2PctGhsT4xKzLNH9d/66UeBUttqbonXPO34ac70
PJGT7dm+xgGCqSdoxXM=
-----END CERTIFICATE-----
[31/Jul/2017:10:58:43 +0200] [java.lang.Class_main_1] INFO : CN        = CN=Symantec Class 3 Secure Server CA - G4,OU=Symantec Trust Network,O=Symantec Corporation,C=US
[31/Jul/2017:10:58:43 +0200] [java.lang.Class_main_1] INFO : Issuer CN = CN=VeriSign Class 3 Public Primary Certification Authority - G5,OU=(c) 2006 VeriSign\, Inc. - For authorized use only,OU=VeriSign Trust Network,O=VeriSign\, Inc.,C=US
-----BEGIN CERTIFICATE-----
MIIFODCCBCCgAwIBAgIQUT+5dDhwtzRAQY0wkwaZ/zANBgkqhkiG9w0BAQsFADCByjELMAkGA1UE
BhMCVVMxFzAVBgNVBAoTDlZlcmlTaWduLCBJbmMuMR8wHQYDVQQLExZWZXJpU2lnbiBUcnVzdCBO
ZXR3b3JrMTowOAYDVQQLEzEoYykgMjAwNiBWZXJpU2lnbiwgSW5jLiAtIEZvciBhdXRob3JpemVk
IHVzZSBvbmx5MUUwQwYDVQQDEzxWZXJpU2lnbiBDbGFzcyAzIFB1YmxpYyBQcmltYXJ5IENlcnRp
ZmljYXRpb24gQXV0aG9yaXR5IC0gRzUwHhcNMTMxMDMxMDAwMDAwWhcNMjMxMDMwMjM1OTU5WjB+
MQswCQYDVQQGEwJVUzEdMBsGA1UEChMUU3ltYW50ZWMgQ29ycG9yYXRpb24xHzAdBgNVBAsTFlN5
bWFudGVjIFRydXN0IE5ldHdvcmsxLzAtBgNVBAMTJlN5bWFudGVjIENsYXNzIDMgU2VjdXJlIFNl
cnZlciBDQSAtIEc0MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAstgFyhx0LbUXVjnF
SlIJluhL2AzxaJ+aQihiw6UwU35VEYJbA3oNL+F5BMm0lncZgQGUWfm893qZJ4Itt4PdWid/sgN6
nFMl6UgfRk/InSn4vnlW9vf92Tpo2otLgjNBEsPIPMzWlnqEIRoiBAMnF4scaGGTDw5RgDMdtLXO
637QYqzus3sBdO9pNevK1T2p7peYyo2qRA4lmUoVlqTObQJUHypqJuIGOmNIrLRM0XWTUP8TL9ba
4cYY9Z/JJV3zADreJk20KQnNDz0jbxZKgRb78oMQw7jW2FUyPfG9D72MUpVKFpd6UiFjdS8W+cRm
vvW1Cdj/JwDNRHxvSz+w9wIDAQABo4IBYzCCAV8wEgYDVR0TAQH/BAgwBgEB/wIBADAwBgNVHR8E
KTAnMCWgI6Ahhh9odHRwOi8vczEuc3ltY2IuY29tL3BjYTMtZzUuY3JsMA4GA1UdDwEB/wQEAwIB
BjAvBggrBgEFBQcBAQQjMCEwHwYIKwYBBQUHMAGGE2h0dHA6Ly9zMi5zeW1jYi5jb20wawYDVR0g
BGQwYjBgBgpghkgBhvhFAQc2MFIwJgYIKwYBBQUHAgEWGmh0dHA6Ly93d3cuc3ltYXV0aC5jb20v
Y3BzMCgGCCsGAQUFBwICMBwaGmh0dHA6Ly93d3cuc3ltYXV0aC5jb20vcnBhMCkGA1UdEQQiMCCk
HjAcMRowGAYDVQQDExFTeW1hbnRlY1BLSS0xLTUzNDAdBgNVHQ4EFgQUX2DPYZBV34RDFIpgKrL1
evRDGO8wHwYDVR0jBBgwFoAUf9Nlp8Ld7LvwMAnzQzn6Aq8zMTMwDQYJKoZIhvcNAQELBQADggEB
AF6UVkndji1l9cE2UbYD49qecxnyH1mrWH5sJgUs+oHXXCMXIiw3k/eG7IXmsKP9H+IyqEVv4dn7
ua/ScKAyQmW/hP4WKo8/xabWo5N9Q+l0IZE1KPRj6S7t9/Vcf0uatSDpCr3gRRAMFJSaXaXjS5Ho
JJtGQGX0InLNmfiIEfXzf+YzguaoxX7+0AjiJVgIcWjmzaLmFN5OUiQt/eV5E1PnXi8tTRttQBVS
K/eHiXgSgW7ZTaoteNTCLD0IX4eRnh8OsN4wUmSGiaqdZpwOdgyA8nTYKvi4Os7X1g8RvmurFPW9
QaAiY4nxug9vKWNmLT+sjHLF+8fk1A/yO0+MKcc=
-----END CERTIFICATE-----
[31/Jul/2017:10:58:43 +0200] [java.lang.Class_main_1] INFO : CN        = CN=VeriSign Class 3 Public Primary Certification Authority - G5,OU=(c) 2006 VeriSign\, Inc. - For authorized use only,OU=VeriSign Trust Network,O=VeriSign\, Inc.,C=US
[31/Jul/2017:10:58:43 +0200] [java.lang.Class_main_1] INFO : Issuer CN = OU=Class 3 Public Primary Certification Authority,O=VeriSign\, Inc.,C=US
-----BEGIN CERTIFICATE-----
MIIE0DCCBDmgAwIBAgIQJQzo4DBhLp8rifcFTXz4/TANBgkqhkiG9w0BAQUFADBfMQswCQYDVQQG
EwJVUzEXMBUGA1UEChMOVmVyaVNpZ24sIEluYy4xNzA1BgNVBAsTLkNsYXNzIDMgUHVibGljIFBy
aW1hcnkgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkwHhcNMDYxMTA4MDAwMDAwWhcNMjExMTA3MjM1
OTU5WjCByjELMAkGA1UEBhMCVVMxFzAVBgNVBAoTDlZlcmlTaWduLCBJbmMuMR8wHQYDVQQLExZW
ZXJpU2lnbiBUcnVzdCBOZXR3b3JrMTowOAYDVQQLEzEoYykgMjAwNiBWZXJpU2lnbiwgSW5jLiAt
IEZvciBhdXRob3JpemVkIHVzZSBvbmx5MUUwQwYDVQQDEzxWZXJpU2lnbiBDbGFzcyAzIFB1Ymxp
YyBQcmltYXJ5IENlcnRpZmljYXRpb24gQXV0aG9yaXR5IC0gRzUwggEiMA0GCSqGSIb3DQEBAQUA
A4IBDwAwggEKAoIBAQCvJAgIKXo1nmAMqudLO07cfLw8RRy7K+D+KQL5VwijZIUVJ/XxrcgxiV0i
6CqqpkKzj/i5Vbext0uz/o9+B1fs70PbZmIVYc9gDaTY3vjgw2IIPVQT60nKWVSFJuUrjxuf6/Wh
kcIzSdhDY2pSS9KP6HBRTdGJaXvHcPaz3BJ023tdS1bTlr8Vd6Gw9KIl8q8ckmcY5fQGBO+QueQA
5N06tRn/Arr0PO7gi+s3i+z016zy9vA9r911kTMZHRxAy3QkGSGT2RT+rCpSx4/VBEnkjWNHiDxp
g8v+R70rfk/Fla4OndTRQ8Bnc+MUCH7lP59zuDMKz10/NIeWiu5T6CUVAgMBAAGjggGbMIIBlzAP
BgNVHRMBAf8EBTADAQH/MDEGA1UdHwQqMCgwJqAkoCKGIGh0dHA6Ly9jcmwudmVyaXNpZ24uY29t
L3BjYTMuY3JsMA4GA1UdDwEB/wQEAwIBBjA9BgNVHSAENjA0MDIGBFUdIAAwKjAoBggrBgEFBQcC
ARYcaHR0cHM6Ly93d3cudmVyaXNpZ24uY29tL2NwczAdBgNVHQ4EFgQUf9Nlp8Ld7LvwMAnzQzn6
Aq8zMTMwbQYIKwYBBQUHAQwEYTBfoV2gWzBZMFcwVRYJaW1hZ2UvZ2lmMCEwHzAHBgUrDgMCGgQU
j+XTGoasjY5rw8+AatRIGCx7GS4wJRYjaHR0cDovL2xvZ28udmVyaXNpZ24uY29tL3ZzbG9nby5n
aWYwNAYIKwYBBQUHAQEEKDAmMCQGCCsGAQUFBzABhhhodHRwOi8vb2NzcC52ZXJpc2lnbi5jb20w
PgYDVR0lBDcwNQYIKwYBBQUHAwEGCCsGAQUFBwMCBggrBgEFBQcDAwYJYIZIAYb4QgQBBgpghkgB
hvhFAQgBMA0GCSqGSIb3DQEBBQUAA4GBABMC3fjohgDyWvj4IAxZiGIHzs73Tvm7WaGY5eE43U68
ZhjTresY8g3JbT5KlCDDPLq9ZVTGr0SzEK0saz6r1we2uIFjxfleLuUqZ87NMwwq14lWAyMfs77o
OghZtOxFNfeKW/9mz1Cvxm1XjRl4t7mi0VfqH5pLr7rJjhJ+xr3/
-----END CERTIFICATE-----
[31/Jul/2017:10:58:43 +0200] [xtremweb.dispatcher.Dispatcher_main_1] INFO : XWHEP Dispatcher(10.5.2-head) started [Mon Jul 31 10:58:43 CEST 2017]
[31/Jul/2017:10:58:43 +0200] [xtremweb.dispatcher.Dispatcher_main_1] INFO : DB vendor  = mysql
[31/Jul/2017:10:58:43 +0200] [xtremweb.dispatcher.Dispatcher_main_1] INFO : mileStone  = 
[31/Jul/2017:10:58:43 +0200] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Time out   = 15000
[31/Jul/2017:10:58:43 +0200] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Disk opt'd = true
[31/Jul/2017:10:58:43 +0200] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Net  opt'd = true
[31/Jul/2017:10:58:43 +0200] [xtremweb.dispatcher.Dispatcher_main_1] INFO : NIO        = true
XWHEP Dispatcher started  Mon Jul 31 10:58:43 CEST 2017
Name             : MacBook-Pro-de-francoisbranciard.local
Version          : 10.5.2-head
Identity         : 
XWRole           : SERVER
Started on       : Mon Jul 31 10:58:39 CEST 2017
Scheduler        : xtremweb.dispatcher.MatchingScheduler
SmartSockets hub : 192.168.160.68-4329#9e.aa.72.f6.c3.7c.00.00.66.78.2e.b8.b7.06.2f.af~McFrancis
Server HTTP      : true
Alive            : 300
Alive time out   : 900
Polling time out : 15000
Optimize zip     : true
Optimize network : true
NIO              : true
Comm layer       : xtremweb.communications.TCPClient
Socket time out  : 60000
Socket retries   : 50
Max connections  : 200
TCP port         : 4321
UDP port         : 4323
HTPP  port       : 80
HTPPS port       : 9443
Sun RPC interposition port : 4328
Sandbox path : /usr/bin/sandbox-exec
Sandbox launch args : 
Host &lt;host&gt;&lt;uid&gt;590162c2-6b1a-48ed-a284-a2a0d9bf63f8&lt;/uid&gt;&lt;accessrights&gt;0x755&lt;/accessrights&gt;&lt;name&gt;MacBook-Pro-de-francoisbranciard.local&lt;/name&gt;&lt;cpuload&gt;50&lt;/cpuload&gt;&lt;natedipaddr&gt;192.168.160.68&lt;/natedipaddr&gt;&lt;ipaddr&gt;192.168.160.68&lt;/ipaddr&gt;&lt;hwaddr&gt;&lt;/hwaddr&gt;&lt;timezone&gt;Europe/Paris&lt;/timezone&gt;&lt;os&gt;MACOSX&lt;/os&gt;&lt;osversion&gt;10.12.6&lt;/osversion&gt;&lt;javaversion&gt;1.8.0_131&lt;/javaversion&gt;&lt;javadatamodel&gt;64&lt;/javadatamodel&gt;&lt;cputype&gt;X86_64&lt;/cputype&gt;&lt;cpunb&gt;1&lt;/cpunb&gt;&lt;cpumodel&gt;unknown&lt;/cpumodel&gt;&lt;cpuspeed&gt;0&lt;/cpuspeed&gt;&lt;totalmem&gt;0&lt;/totalmem&gt;&lt;totalswap&gt;0&lt;/totalswap&gt;&lt;totaltmp&gt;114544&lt;/totaltmp&gt;&lt;freetmp&gt;21829&lt;/freetmp&gt;&lt;project&gt;&lt;/project&gt;&lt;active&gt;true&lt;/active&gt;&lt;incomingconnections&gt;false&lt;/incomingconnections&gt;&lt;available&gt;false&lt;/available&gt;&lt;pilotjob&gt;false&lt;/pilotjob&gt;&lt;sgid&gt;&lt;/sgid&gt;&lt;timeout&gt;15000&lt;/timeout&gt;&lt;traces&gt;false&lt;/traces&gt;&lt;acceptbin&gt;false&lt;/acceptbin&gt;&lt;version&gt;10.5.2-head&lt;/version&gt;&lt;/host&gt;
[31/Jul/2017:10:58:44 +0200] [xtremweb.communications.HTTPServer_HTTPServer_219] INFO : started, listening on port : 9443
[31/Jul/2017:10:58:52 +0200] [xtremweb.dispatcher.DBInterface_TCPHandler_23] INFO : MacBook-Pro-de-francoisbranciard.local not in DB; inserting 39b517c4-4850-4638-968c-c1c30a6ff7fe
[31/Jul/2017:10:58:52 +0200] [xtremweb.communications.TCPServer_TCPServerNIO_16] WARN : java.net.SocketException: Socket closed (Socket closed)
</msg>
<status status="PASS" endtime="20170731 10:58:52.569" starttime="20170731 10:58:52.567"></status>
</kw>
<status status="PASS" endtime="20170731 10:58:52.569" starttime="20170731 10:58:52.566"></status>
</kw>
<status status="PASS" endtime="20170731 10:58:52.569" starttime="20170731 10:58:52.566"></status>
</kw>
<kw name="Stop XtremWeb Worker" library="XWWorker">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Stop XtremWeb Worker</arg>
</arguments>
<msg timestamp="20170731 10:58:52.570" level="INFO">Stop XtremWeb Worker</msg>
<status status="PASS" endtime="20170731 10:58:52.570" starttime="20170731 10:58:52.569"></status>
</kw>
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${WORKER_PROCESS}</arg>
</arguments>
<msg timestamp="20170731 10:58:52.570" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20170731 10:58:52.573" level="INFO">Process completed.</msg>
<status status="PASS" endtime="20170731 10:58:52.574" starttime="20170731 10:58:52.570"></status>
</kw>
<status status="PASS" endtime="20170731 10:58:52.574" starttime="20170731 10:58:52.569"></status>
</kw>
<status status="PASS" endtime="20170731 10:58:52.574" starttime="20170731 10:58:52.461"></status>
</kw>
<doc>All XtremWeb commands line tests</doc>
<status status="PASS" endtime="20170731 10:58:52.574" starttime="20170731 10:57:51.775"></status>
</suite>
<status status="PASS" endtime="20170731 10:58:52.580" starttime="20170731 10:57:51.737"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="14">Critical Tests</stat>
<stat fail="0" pass="14">All Tests</stat>
</total>
<tag>
<stat fail="0" pass="11">CommandLine Tests</stat>
<stat fail="0" pass="1">Mobile Tests</stat>
<stat fail="0" pass="1">Smart contract Tests</stat>
<stat fail="0" pass="1">Web Tests</stat>
</tag>
<suite>
<stat fail="0" id="s1" name="Tests" pass="14">Tests</stat>
<stat fail="0" id="s1-s1" name="interfaceSuite" pass="2">Tests.interfaceSuite</stat>
<stat fail="0" id="s1-s2" name="smartContractSuite" pass="1">Tests.smartContractSuite</stat>
<stat fail="0" id="s1-s3" name="xwcommandsSuite" pass="11">Tests.xwcommandsSuite</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
