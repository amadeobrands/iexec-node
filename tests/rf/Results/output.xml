<?xml version="1.0" encoding="UTF-8"?>
<robot generated="20170902 20:22:44.913" generator="Robot 3.0.2 (Python 2.7.6 on linux2)">
<suite source="/home/vagrant/iexecdev/iexec-node/tests/rf/Tests" id="s1" name="Tests">
<suite source="/home/vagrant/iexecdev/iexec-node/tests/rf/Tests/interfaceSuite.robot" id="s1-s1" name="interfaceSuite">
<test id="s1-s1-t1" name="Test Interface Web">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>TODO</arg>
</arguments>
<msg timestamp="20170902 20:22:44.947" level="INFO">TODO</msg>
<status status="PASS" endtime="20170902 20:22:44.947" starttime="20170902 20:22:44.947"></status>
</kw>
<doc>We can use via http://robotframework.org/#libraries External Selenium2Library : http://robotframework.org/Selenium2Library/Selenium2Library.html</doc>
<tags>
<tag>Web Tests</tag>
</tags>
<status status="PASS" endtime="20170902 20:22:44.948" critical="yes" starttime="20170902 20:22:44.945"></status>
</test>
<test id="s1-s1-t2" name="Test Mobile">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>TODO</arg>
</arguments>
<msg timestamp="20170902 20:22:44.952" level="INFO">TODO</msg>
<status status="PASS" endtime="20170902 20:22:44.953" starttime="20170902 20:22:44.951"></status>
</kw>
<doc>We can use via http://robotframework.org/#libraries External AppiumLibrary : Library for Android- and iOS-testing. http://serhatbolsu.github.io/robotframework-appiumlibrary/AppiumLibrary.html</doc>
<tags>
<tag>Mobile Tests</tag>
</tags>
<status status="PASS" endtime="20170902 20:22:44.953" critical="yes" starttime="20170902 20:22:44.949"></status>
</test>
<doc>All user interfaces tests</doc>
<status status="PASS" endtime="20170902 20:22:44.955" starttime="20170902 20:22:44.942"></status>
</suite>
<suite source="/home/vagrant/iexecdev/iexec-node/tests/rf/Tests/smartContractSuite.robot" id="s1-s2" name="smartContractSuite">
<kw type="setup" name="Start Testrpc">
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>testrpc</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${created_process}</var>
</assign>
<msg timestamp="20170902 20:22:44.993" level="INFO">Starting process:
testrpc</msg>
<msg timestamp="20170902 20:22:44.997" level="INFO">${created_process} = 1</msg>
<status status="PASS" endtime="20170902 20:22:44.998" starttime="20170902 20:22:44.992"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TESTRPC_PROCESS}</arg>
<arg>${created_process}</arg>
</arguments>
<msg timestamp="20170902 20:22:44.999" level="INFO">${TESTRPC_PROCESS} = 1</msg>
<status status="PASS" endtime="20170902 20:22:44.999" starttime="20170902 20:22:44.998"></status>
</kw>
<status status="PASS" endtime="20170902 20:22:45.000" starttime="20170902 20:22:44.991"></status>
</kw>
<test id="s1-s2-t1" name="Test Iexec Oracle smart contract">
<kw name="Remove Directory" library="OperatingSystem">
<doc>Removes the directory pointed to by the given ``path``.</doc>
<arguments>
<arg>iexec-oracle</arg>
<arg>recursive=true</arg>
</arguments>
<msg timestamp="20170902 20:22:47.269" html="yes" level="INFO">Removed directory '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/iexec-oracle"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/iexec-oracle&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170902 20:22:47.270" starttime="20170902 20:22:45.003"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>git clone ${IEXEC_ORACLE_GIT_BRANCH}</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${git_result}</var>
</assign>
<msg timestamp="20170902 20:22:47.271" level="INFO">Starting process:
git clone https://github.com/iExecBlockchainComputing/iexec-oracle.git</msg>
<msg timestamp="20170902 20:22:47.275" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170902 20:22:50.645" level="INFO">Process completed.</msg>
<msg timestamp="20170902 20:22:50.646" level="INFO">${git_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170902 20:22:50.646" starttime="20170902 20:22:47.270"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${git_result.stderr}</arg>
</arguments>
<msg timestamp="20170902 20:22:50.647" level="INFO">Cloning into 'iexec-oracle'...</msg>
<status status="PASS" endtime="20170902 20:22:50.647" starttime="20170902 20:22:50.647"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${git_result.stdout}</arg>
</arguments>
<msg timestamp="20170902 20:22:50.648" level="INFO"></msg>
<status status="PASS" endtime="20170902 20:22:50.648" starttime="20170902 20:22:50.648"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${git_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170902 20:22:50.650" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170902 20:22:50.650" starttime="20170902 20:22:50.649"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd iexec-oracle/API &amp;&amp; npm install</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${npm_result}</var>
</assign>
<msg timestamp="20170902 20:22:50.651" level="INFO">Starting process:
cd iexec-oracle/API &amp;&amp; npm install</msg>
<msg timestamp="20170902 20:22:50.655" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170902 20:23:21.348" level="INFO">Process completed.</msg>
<msg timestamp="20170902 20:23:21.349" level="INFO">${npm_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170902 20:23:21.349" starttime="20170902 20:22:50.650"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${npm_result.stderr}</arg>
</arguments>
<msg timestamp="20170902 20:23:21.352" level="INFO">npm WARN xtremwebinterface@1.0.0 No description
npm WARN xtremwebinterface@1.0.0 No repository field.</msg>
<status status="PASS" endtime="20170902 20:23:21.352" starttime="20170902 20:23:21.350"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${npm_result.stdout}</arg>
</arguments>
<msg timestamp="20170902 20:23:21.354" level="INFO">xtremwebinterface@1.0.0 /home/vagrant/iexecdev/iexec-node/tests/rf/iexec-oracle/API
├── bluebird@3.5.0 
├── lodash@4.17.4 
├─┬ truffle@3.4.7 
│ ├─┬ mocha@3.5.0 
│ │ ├── browser-stdout@1.3.0 
│ │ ├─┬ commander@2.9.0 
│ │ │ └── graceful-readlink@1.0.1 
│ │ ├─┬ debug@2.6.8 
│ │ │ └── ms@2.0.0 
│ │ ├── diff@3.2.0 
│ │ ├── escape-string-regexp@1.0.5 
│ │ ├─┬ glob@7.1.1 
│ │ │ ├── fs.realpath@1.0.0 
│ │ │ ├─┬ inflight@1.0.6 
│ │ │ │ └── wrappy@1.0.2 
│ │ │ ├── inherits@2.0.3 
│ │ │ ├─┬ minimatch@3.0.4 
│ │ │ │ └─┬ brace-expansion@1.1.8 
│ │ │ │   ├── balanced-match@1.0.0 
│ │ │ │   └── concat-map@0.0.1 
│ │ │ ├── once@1.4.0 
│ │ │ └── path-is-absolute@1.0.1 
│ │ ├── growl@1.9.2 
│ │ ├── json3@3.3.2 
│ │ ├─┬ lodash.create@3.1.1 
│ │ │ ├─┬ lodash._baseassign@3.2.0 
│ │ │ │ ├── lodash._basecopy@3.0.1 
│ │ │ │ └─┬ lodash.keys@3.1.2 
│ │ │ │   ├── lodash._getnative@3.9.1 
│ │ │ │   ├── lodash.isarguments@3.1.0 
│ │ │ │   └── lodash.isarray@3.0.4 
│ │ │ ├── lodash._basecreate@3.0.3 
│ │ │ └── lodash._isiterateecall@3.0.9 
│ │ ├─┬ mkdirp@0.5.1 
│ │ │ └── minimist@0.0.8 
│ │ └─┬ supports-color@3.1.2 
│ │   └── has-flag@1.0.0 
│ ├── original-require@1.0.1 
│ └─┬ solc@0.4.13 
│   ├─┬ fs-extra@0.30.0 
│   │ ├── graceful-fs@4.1.11 
│   │ ├── jsonfile@2.4.0 
│   │ ├── klaw@1.3.1 
│   │ └── rimraf@2.6.1 
│   ├── memorystream@0.3.1 
│   ├── require-from-string@1.2.1 
│   ├── semver@5.4.1 
│   └─┬ yargs@4.8.1 
│     ├─┬ cliui@3.2.0 
│     │ ├─┬ strip-ansi@3.0.1 
│     │ │ └── ansi-regex@2.1.1 
│     │ └── wrap-ansi@2.1.0 
│     ├── decamelize@1.2.0 
│     ├── get-caller-file@1.0.2 
│     ├── lodash.assign@4.2.0 
│     ├─┬ os-locale@1.4.0 
│     │ └─┬ lcid@1.0.0 
│     │   └── invert-kv@1.0.0 
│     ├─┬ read-pkg-up@1.0.1 
│     │ ├─┬ find-up@1.1.2 
│     │ │ ├── path-exists@2.1.0 
│     │ │ └─┬ pinkie-promise@2.0.1 
│     │ │   └── pinkie@2.0.4 
│     │ └─┬ read-pkg@1.1.0 
│     │   ├─┬ load-json-file@1.1.0 
│     │   │ ├─┬ parse-json@2.2.0 
│     │   │ │ └─┬ error-ex@1.3.1 
│     │   │ │   └── is-arrayish@0.2.1 
│     │   │ ├── pify@2.3.0 
│     │   │ └─┬ strip-bom@2.0.0 
│     │   │   └── is-utf8@0.2.1 
│     │   ├─┬ normalize-package-data@2.4.0 
│     │   │ ├── hosted-git-info@2.5.0 
│     │   │ ├─┬ is-builtin-module@1.0.0 
│     │   │ │ └── builtin-modules@1.1.1 
│     │   │ └─┬ validate-npm-package-license@3.0.1 
│     │   │   ├─┬ spdx-correct@1.0.2 
│     │   │   │ └── spdx-license-ids@1.2.2 
│     │   │   └── spdx-expression-parse@1.0.4 
│     │   └── path-type@1.1.0 
│     ├── require-directory@2.1.1 
│     ├── require-main-filename@1.0.1 
│     ├── set-blocking@2.0.0 
│     ├─┬ string-width@1.0.2 
│     │ ├── code-point-at@1.1.0 
│     │ └─┬ is-fullwidth-code-point@1.0.0 
│     │   └── number-is-nan@1.0.1 
│     ├── which-module@1.0.0 
│     ├── window-size@0.2.0 
│     ├── y18n@3.2.1 
│     └─┬ yargs-parser@2.4.1 
│       └── camelcase@3.0.0 
├─┬ truffle-contract@2.0.0 
│ ├─┬ ethjs-abi@0.1.8 
│ │ ├── bn.js@4.11.6 
│ │ ├── js-sha3@0.5.5 
│ │ └─┬ number-to-bn@1.7.0 
│ │   └─┬ strip-hex-prefix@1.0.0 
│ │     └── is-hex-prefixed@1.0.0 
│ ├── truffle-blockchain-utils@0.0.1 
│ └─┬ truffle-contract-schema@0.0.5 
│   └── crypto-js@3.1.9-1 
└─┬ web3@0.18.4 
  ├── bignumber.js@2.0.7  (git+https://github.com/debris/bignumber.js.git#94d7146671b9719e00a09c29b01a691bc85048c2)
  ├── crypto-js@3.1.8 
  ├── utf8@2.1.2 
  ├── xhr2@0.1.4 
  └── xmlhttprequest@1.8.0 
</msg>
<status status="PASS" endtime="20170902 20:23:21.354" starttime="20170902 20:23:21.353"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${npm_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170902 20:23:21.356" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170902 20:23:21.356" starttime="20170902 20:23:21.355"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd iexec-oracle/API &amp;&amp; ./node_modules/.bin/truffle test test/iexecoracleapi.js</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${truffletest_result}</var>
</assign>
<msg timestamp="20170902 20:23:21.359" level="INFO">Starting process:
cd iexec-oracle/API &amp;&amp; ./node_modules/.bin/truffle test test/iexecoracleapi.js</msg>
<msg timestamp="20170902 20:23:21.365" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170902 20:23:41.748" level="INFO">Process completed.</msg>
<msg timestamp="20170902 20:23:41.748" level="INFO">${truffletest_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170902 20:23:41.748" starttime="20170902 20:23:21.358"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stderr}</arg>
</arguments>
<msg timestamp="20170902 20:23:41.749" level="INFO"></msg>
<status status="PASS" endtime="20170902 20:23:41.749" starttime="20170902 20:23:41.749"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${truffletest_result.stdout}</arg>
</arguments>
<msg timestamp="20170902 20:23:41.750" level="INFO">Compiling ./contracts/IexecOracle.sol...
Compiling ./contracts/IexecOracleAPI.sol...
Compiling ./contracts/LS.sol...
Compiling ./contracts/Migrations.sol...
Compiling ./contracts/SafeMath.sol...

Compilation warnings encountered:

/home/vagrant/iexecdev/iexec-node/tests/rf/iexec-oracle/API/contracts/IexecOracle.sol:15:30: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (msg.sender != a) throw;
                             ^---^
,/home/vagrant/iexecdev/iexec-node/tests/rf/iexec-oracle/API/contracts/IexecOracle.sol:24:7: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
      string name;
      ^---------^
,/home/vagrant/iexecdev/iexec-node/tests/rf/iexec-oracle/API/contracts/IexecOracle.sol:27:7: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
      string stdout;
      ^-----------^
,/home/vagrant/iexecdev/iexec-node/tests/rf/iexec-oracle/API/contracts/IexecOracle.sol:28:7: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
      string stderr;
      ^-----------^
,/home/vagrant/iexecdev/iexec-node/tests/rf/iexec-oracle/API/contracts/IexecOracle.sol:122:21: Warning: Unused local variable
    function submit(string appName, string param) {// param = commandline
                    ^------------^
,/home/vagrant/iexecdev/iexec-node/tests/rf/iexec-oracle/API/contracts/IexecOracle.sol:126:28: Warning: Unused local variable
    function submitAndWait(string appName, string param, string pattern) {
                           ^------------^
,/home/vagrant/iexecdev/iexec-node/tests/rf/iexec-oracle/API/contracts/IexecOracle.sol:126:44: Warning: Unused local variable
    function submitAndWait(string appName, string param, string pattern) {
                                           ^----------^

IexecOracle deployed at address :0x6833fcd258dd3d6561b97b4a9c2a96838401df80
LS deployed at address :0x188ddc071145eccbe03949b04311d858490fe229

[0m[0m
[0m  Contract: IexecOracleAPI[0m
TestRPC mode : Error: VM Exception. throw expected ?
  [32m  ✓[0m[90m Test call registerSmartContractAndCreator with tx.origin = msg.sender[0m[31m (119ms)[0m
[0m    Test IexecOracle on IexecOracle well initialized[0m
    [32m  ✓[0m[90m Test Launch Event when call iexecRegister[0m[31m (298ms)[0m
[0m    Test Register function call then simulate bridge response[0m
TestRPC mode : Error: VM Exception. throw expected ?
    [32m  ✓[0m[90m Only bridge can call registerCallback fonction[0m[33m (39ms)[0m
    [32m  ✓[0m[90m Simulate bridge response OK and test event Register[0m[31m (735ms)[0m
    [32m  ✓[0m[90m Simulate bridge response KO and test event Register[0m[31m (555ms)[0m
    [32m  ✓[0m[90m Simulate bridge registerCallback and test event Register, then next registerCallback call do not generate event Register[0m[31m (146ms)[0m
[0m    Test IexecOracleAPI on IexecOracle well initialized[0m
    [32m  ✓[0m[90m Test creator and creator of IexecOracleAPI are set correctly in IexecOracle[0m[33m (46ms)[0m
    [32m  ✓[0m[90m Test provider count for the creator  increment of by 1 in IexecOracle[0m[31m (101ms)[0m
TestRPC mode : Error: VM Exception. throw expected ?
    [32m  ✓[0m[90m Cannot change creator in aIexecOracleInstance after first call by IexecOracleAPI constructor[0m


[92m [0m[32m 9 passing[0m[90m (4s)[0m
</msg>
<status status="PASS" endtime="20170902 20:23:41.750" starttime="20170902 20:23:41.749"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${truffletest_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170902 20:23:41.751" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170902 20:23:41.751" starttime="20170902 20:23:41.751"></status>
</kw>
<doc>call truffle test and show the result here.</doc>
<tags>
<tag>Smart contract Tests</tag>
</tags>
<status status="PASS" endtime="20170902 20:23:41.751" critical="yes" starttime="20170902 20:22:45.000"></status>
</test>
<kw type="teardown" name="Stop Testrpc">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${TESTRPC_PROCESS}</arg>
</arguments>
<msg timestamp="20170902 20:23:41.753" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20170902 20:23:41.765" level="INFO">Process completed.</msg>
<status status="PASS" endtime="20170902 20:23:41.766" starttime="20170902 20:23:41.752"></status>
</kw>
<status status="PASS" endtime="20170902 20:23:41.766" starttime="20170902 20:23:41.752"></status>
</kw>
<doc>All smart contract tests</doc>
<status status="PASS" endtime="20170902 20:23:41.766" starttime="20170902 20:22:44.959"></status>
</suite>
<suite source="/home/vagrant/iexecdev/iexec-node/tests/rf/Tests/xwcommandsSuite.robot" id="s1-s3" name="xwcommandsSuite">
<kw type="setup" name="Start XWtremWeb Server And XWtremWeb Worker" library="XWCommon">
<kw name="Compile XWtremWeb" library="XWCommon">
<kw name="Remove Directory" library="OperatingSystem">
<doc>Removes the directory pointed to by the given ``path``.</doc>
<arguments>
<arg>xtremweb-hep</arg>
<arg>recursive=true</arg>
</arguments>
<msg timestamp="20170902 20:23:41.821" html="yes" level="INFO">Directory '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep&lt;/a&gt;' does not exist.</msg>
<status status="PASS" endtime="20170902 20:23:41.821" starttime="20170902 20:23:41.821"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>git clone ${XW_GIT_BRANCH}</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${git_result}</var>
</assign>
<msg timestamp="20170902 20:23:41.822" level="INFO">Starting process:
git clone https://github.com/iExecBlockchainComputing/xtremweb-hep.git</msg>
<msg timestamp="20170902 20:23:41.826" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170902 20:24:59.342" level="INFO">Process completed.</msg>
<msg timestamp="20170902 20:24:59.343" level="INFO">${git_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170902 20:24:59.343" starttime="20170902 20:23:41.822"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${git_result.stderr}</arg>
</arguments>
<msg timestamp="20170902 20:24:59.343" level="INFO">Cloning into 'xtremweb-hep'...
Checking out files:   7% (123/1618)   Checking out files:   8% (130/1618)   Checking out files:   9% (146/1618)   Checking out files:  10% (162/1618)   Checking out files:  11% (178/1618)   Checking out files:  12% (195/1618)   Checking out files:  13% (211/1618)   Checking out files:  13% (213/1618)   Checking out files:  14% (227/1618)   Checking out files:  15% (243/1618)   Checking out files:  15% (251/1618)   Checking out files:  16% (259/1618)   Checking out files:  17% (276/1618)   Checking out files:  18% (292/1618)   Checking out files:  19% (308/1618)   Checking out files:  20% (324/1618)   Checking out files:  20% (329/1618)   Checking out files:  21% (340/1618)   Checking out files:  22% (356/1618)   Checking out files:  22% (368/1618)   Checking out files:  23% (373/1618)   Checking out files:  23% (375/1618)   Checking out files:  23% (379/1618)   Checking out files:  24% (389/1618)   Checking out files:  24% (397/1618)   Checking out files:  25% (405/1618)   Checking out files:  25% (413/1618)   Checking out files:  26% (421/1618)   Checking out files:  26% (423/1618)   Checking out files:  27% (437/1618)   Checking out files:  27% (443/1618)   Checking out files:  28% (454/1618)   Checking out files:  28% (466/1618)   Checking out files:  29% (470/1618)   Checking out files:  30% (486/1618)   Checking out files:  30% (496/1618)   Checking out files:  31% (502/1618)   Checking out files:  31% (510/1618)   Checking out files:  32% (518/1618)   Checking out files:  33% (534/1618)   Checking out files:  33% (539/1618)   Checking out files:  34% (551/1618)   Checking out files:  34% (556/1618)   Checking out files:  34% (559/1618)   Checking out files:  35% (567/1618)   Checking out files:  35% (574/1618)   Checking out files:  36% (583/1618)   Checking out files:  37% (599/1618)   Checking out files:  38% (615/1618)   Checking out files:  38% (624/1618)   Checking out files:  39% (632/1618)   Checking out files:  40% (648/1618)   Checking out files:  41% (664/1618)   Checking out files:  42% (680/1618)   Checking out files:  42% (687/1618)   Checking out files:  43% (696/1618)   Checking out files:  44% (712/1618)   Checking out files:  45% (729/1618)   Checking out files:  46% (745/1618)   Checking out files:  47% (761/1618)   Checking out files:  48% (777/1618)   Checking out files:  49% (793/1618)   Checking out files:  50% (809/1618)   Checking out files:  51% (826/1618)   Checking out files:  52% (842/1618)   Checking out files:  53% (858/1618)   Checking out files:  53% (870/1618)   Checking out files:  54% (874/1618)   Checking out files:  55% (890/1618)   Checking out files:  56% (907/1618)   Checking out files:  57% (923/1618)   Checking out files:  58% (939/1618)   Checking out files:  59% (955/1618)   Checking out files:  59% (967/1618)   Checking out files:  60% (971/1618)   Checking out files:  61% (987/1618)   Checking out files:  62% (1004/1618)   Checking out files:  63% (1020/1618)   Checking out files:  64% (1036/1618)   Checking out files:  65% (1052/1618)   Checking out files:  66% (1068/1618)   Checking out files:  67% (1085/1618)   Checking out files:  68% (1101/1618)   Checking out files:  69% (1117/1618)   Checking out files:  70% (1133/1618)   Checking out files:  71% (1149/1618)   Checking out files:  72% (1165/1618)   Checking out files:  73% (1182/1618)   Checking out files:  73% (1189/1618)   Checking out files:  74% (1198/1618)   Checking out files:  75% (1214/1618)   Checking out files:  76% (1230/1618)   Checking out files:  77% (1246/1618)   Checking out files:  78% (1263/1618)   Checking out files:  79% (1279/1618)   Checking out files:  80% (1295/1618)   Checking out files:  81% (1311/1618)   Checking out files:  82% (1327/1618)   Checking out files:  83% (1343/1618)   Checking out files:  84% (1360/1618)   Checking out files:  85% (1376/1618)   Checking out files:  85% (1386/1618)   Checking out files:  86% (1392/1618)   Checking out files:  87% (1408/1618)   Checking out files:  88% (1424/1618)   Checking out files:  89% (1441/1618)   Checking out files:  90% (1457/1618)   Checking out files:  91% (1473/1618)   Checking out files:  92% (1489/1618)   Checking out files:  93% (1505/1618)   Checking out files:  94% (1521/1618)   Checking out files:  95% (1538/1618)   Checking out files:  96% (1554/1618)   Checking out files:  96% (1557/1618)   Checking out files:  97% (1570/1618)   Checking out files:  98% (1586/1618)   Checking out files:  99% (1602/1618)   Checking out files: 100% (1618/1618)   Checking out files: 100% (1618/1618), done.</msg>
<status status="PASS" endtime="20170902 20:24:59.344" starttime="20170902 20:24:59.343"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${git_result.stdout}</arg>
</arguments>
<msg timestamp="20170902 20:24:59.344" level="INFO"></msg>
<status status="PASS" endtime="20170902 20:24:59.344" starttime="20170902 20:24:59.344"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${git_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170902 20:24:59.345" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170902 20:24:59.345" starttime="20170902 20:24:59.344"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd ${BUILD_PATH} &amp;&amp; make clean &amp;&amp; make</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${compile_result}</var>
</assign>
<msg timestamp="20170902 20:24:59.346" level="INFO">Starting process:
cd ./xtremweb-hep/build &amp;&amp; make clean &amp;&amp; make</msg>
<msg timestamp="20170902 20:24:59.349" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170902 20:25:35.895" level="INFO">Process completed.</msg>
<msg timestamp="20170902 20:25:35.895" level="INFO">${compile_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170902 20:25:35.895" starttime="20170902 20:24:59.345"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${compile_result.stderr}</arg>
</arguments>
<msg timestamp="20170902 20:25:35.896" level="INFO">     [copy] Warning: Could not find file /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/keystore/xwhepworker.keys to copy.
     [copy] Warning: Could not find file /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/keystore/xwhepclient.keys to copy.
     [copy] Warning: Could not find file /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/keystore/xwhepserver.keys to copy.</msg>
<status status="PASS" endtime="20170902 20:25:35.896" starttime="20170902 20:25:35.896"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${compile_result.stdout}</arg>
</arguments>
<msg timestamp="20170902 20:25:35.897" level="INFO">./build.sh -f build.xml clean 
Buildfile: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/build.xml

tstamp:
[echoproperties] #Ant properties
[echoproperties] #Sat Sep 02 20:24:59 UTC 2017
[echoproperties] v.branch=head
[echoproperties] v.build=201709022024
[echoproperties] v.major=10
[echoproperties] v.micro=0
[echoproperties] v.minor=6

version:

clean:
   [delete] Deleting: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/.build
     [exec] make[1]: Entering directory `/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/natif'
     [exec] rm -f XWInterruptsImpl.h PortMapper.h XWUtilImpl.h XWTracerImpl.h
     [exec] make[1]: Leaving directory `/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/natif'
     [exec] mkdir: cannot create directory ‘../../build/classes/obj/’: No such file or directory

BUILD SUCCESSFUL
Total time: 0 seconds
./build.sh distrib 
Buildfile: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/build.xml

tstamp:
[echoproperties] #Ant properties
[echoproperties] #Sat Sep 02 20:25:01 UTC 2017
[echoproperties] v.branch=head
[echoproperties] v.build=201709022025
[echoproperties] v.major=10
[echoproperties] v.micro=0
[echoproperties] v.minor=6

version:

configure:
     [echo] 
     [echo]       ant version = Apache Ant(TM) version 1.8.4 compiled on May 22 2012
     [echo] 
     [echo]       os         = Linux
     [echo]       os.arch    = amd64
     [echo]       target     = Linux
     [echo]       xwarch     = amd64
     [echo]       xwsuffix   = linux-amd64
     [echo]       debug      = true
     [echo]       debuglevel = source,lines
     [echo] 
     [echo]         cross=${cross.prefix}
     [echo]         target java home =${cross.java.home}
     [echo]     	target           =Linux
     [echo]     	xwversion=10.6.0

templates:
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common

prepare:
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes/obj
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes/obj/linux-amd64
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes/jni
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes/xwclasses
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/lib
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/doc
     [echo] 
     [echo]       classpath=/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/test:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/JOpenId-1.08.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/JSON-java.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/MinML.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/activation.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/antlr.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/attic-all-0.3.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/bcpkix-jdk15on-151.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/bcprov-jdk15on-151.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/bcprov-jdk16-140.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/commons-codec-1.3.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/commons-fileupload-1.2.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/commons-httpclient-3.0.1.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/commons-io-1.3.2.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/commons-logging-1.1.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/ibis-util-2.1.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/jcert.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/jetty-http-9.3.8.v20160314.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/jetty-io-9.3.8.v20160314.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/jetty-server-9.3.8.v20160314.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/jetty-util-9.3.8.v20160314.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/jose4j-0.5.5.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/junit-4.10.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/log4j-1.2.17.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/mail.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/mysql-connector-java-5.1.6-bin.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/scribejava-apis-3.3.1-SNAPSHOT.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/scribejava-core-3.3.1-SNAPSHOT.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/servlet-api-3.1.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/slf4j-api-1.7.2.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/slf4j-log4j12-1.7.2.jar:/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/classes/smartsockets-1.4.jar
     [echo]     

common:
    [javac] Compiling 277 source files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/XWTools.java:61: warning: [deprecation] HTTPOpenIdHandler in xtremweb.dispatcher has been deprecated
    [javac] import xtremweb.dispatcher.HTTPOpenIdHandler;
    [javac]                           ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/security/ACLConnect.java:36: warning: AclEntryImpl is internal proprietary API and may be removed in a future release
    [javac] import sun.security.acl.AclEntryImpl;
    [javac]                        ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/security/ACLConnect.java:37: warning: AclImpl is internal proprietary API and may be removed in a future release
    [javac] import sun.security.acl.AclImpl;
    [javac]                        ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/security/ACLConnect.java:38: warning: PermissionImpl is internal proprietary API and may be removed in a future release
    [javac] import sun.security.acl.PermissionImpl;
    [javac]                        ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/security/ACLConnect.java:39: warning: PrincipalImpl is internal proprietary API and may be removed in a future release
    [javac] import sun.security.acl.PrincipalImpl;
    [javac]                        ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/communications/CommClient.java:870: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] 		return version(new XMLRPCCommandVersion(newURI()));
    [javac] 		                   ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/communications/CommClient.java:881: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] 	public Version version(final XMLRPCCommandVersion command)
    [javac] 	                             ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/DataInterface.java:625: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/communications/IdRpc.java:89: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] 		public XMLRPCCommandVersion newCommand(final URI uri, final UserInterface client, final Table obj)
    [javac] 		       ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/communications/IdRpc.java:91: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] 			return new XMLRPCCommandVersion(uri, client);
    [javac] 			           ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/communications/XMLRPCCommand.java:614: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] 			return new XMLRPCCommandVersion(input);
    [javac] 			           ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/AppInterface.java:1446: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/UserInterface.java:577: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/GroupInterface.java:319: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/HostInterface.java:1212: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/SessionInterface.java:264: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/TaskInterface.java:441: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/TraceInterface.java:348: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/UserGroupInterface.java:365: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/WorkInterface.java:933: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/AppType.java:263: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/CPUType.java:223: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/DataType.java:265: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/Executable.java:294: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/JobInterface.java:409: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/OSType.java:243: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/Status.java:245: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/UserRightsType.java:243: warning: [deprecation] fromXml(Attributes) in Type has been deprecated
    [javac] 		super.fromXml(attrs);
    [javac] 		     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/XWTools.java:805: warning: [deprecation] HTTPOpenIdHandler in xtremweb.dispatcher has been deprecated
    [javac] 		final Logger logger = new Logger(HTTPOpenIdHandler.class);
    [javac] 		                                 ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/common/XWTools.java:817: warning: BASE64Encoder is internal proprietary API and may be removed in a future release
    [javac] 			out.println(new sun.misc.BASE64Encoder().encode(cert.getEncoded()));
    [javac] 			                        ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/communications/HTTPClient.java:238: warning: [deprecation] Protocol(String,SecureProtocolSocketFactory,int) in Protocol has been deprecated
    [javac] 				xwssl = new Protocol(uri.getScheme(), new AuthSSLProtocolSocketFactory(uri.getScheme(), keyStore,
    [javac] 				        ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/dispatcher/Dispatcher.java:216: warning: [deprecation] HTTPOpenIdHandler in xtremweb.dispatcher has been deprecated
    [javac] 				HTTPOpenIdHandler.setCACertificateEntries(getConfig().getKeyStore());
    [javac] 				^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/security/ACLConnect.java:65: warning: PermissionImpl is internal proprietary API and may be removed in a future release
    [javac] 	private final Permission _connect = new PermissionImpl("CONNECT");
    [javac] 	                                        ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/security/ACLConnect.java:66: warning: PrincipalImpl is internal proprietary API and may be removed in a future release
    [javac] 	private final Principal _owner = new PrincipalImpl("localhost");
    [javac] 	                                     ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/security/ACLConnect.java:67: warning: AclImpl is internal proprietary API and may be removed in a future release
    [javac] 	private Acl _acl = new AclImpl(_owner, "ConnectACL");
    [javac] 	                       ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/security/ACLConnect.java:80: warning: AclImpl is internal proprietary API and may be removed in a future release
    [javac] 		_acl = new AclImpl(_owner, "ConnectACL");
    [javac] 		           ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/security/ACLConnect.java:81: warning: AclEntryImpl is internal proprietary API and may be removed in a future release
    [javac] 		final AclEntry allowConnections = new AclEntryImpl(_owner);
    [javac] 		                                      ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/security/ACLConnect.java:104: warning: PrincipalImpl is internal proprietary API and may be removed in a future release
    [javac] 			final Principal prince = new PrincipalImpl(regexp);
    [javac] 			                             ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/security/ACLConnect.java:105: warning: AclEntryImpl is internal proprietary API and may be removed in a future release
    [javac] 			final AclEntry entry = new AclEntryImpl(prince);
    [javac] 			                           ^
    [javac] Note: Some input files use unchecked or unsafe operations.
    [javac] Note: Recompile with -Xlint:unchecked for details.
    [javac] 39 warnings
    [javac] Creating empty /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes/database/package-info.class

obj:

iface:

communications:
    [javac] Compiling 60 source files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/communications/IdRpc.java:89: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] 		public XMLRPCCommandVersion newCommand(final URI uri, final UserInterface client, final Table obj)
    [javac] 		       ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/communications/IdRpc.java:91: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] 			return new XMLRPCCommandVersion(uri, client);
    [javac] 			           ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/communications/XMLRPCCommand.java:614: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] 			return new XMLRPCCommandVersion(input);
    [javac] 			           ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/communications/CommClient.java:870: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] 		return version(new XMLRPCCommandVersion(newURI()));
    [javac] 		                   ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/communications/CommClient.java:881: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] 	public Version version(final XMLRPCCommandVersion command)
    [javac] 	                             ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/communications/HTTPClient.java:238: warning: [deprecation] Protocol(String,SecureProtocolSocketFactory,int) in Protocol has been deprecated
    [javac] 				xwssl = new Protocol(uri.getScheme(), new AuthSSLProtocolSocketFactory(uri.getScheme(), keyStore,
    [javac] 				        ^
    [javac] Note: Some input files use unchecked or unsafe operations.
    [javac] Note: Recompile with -Xlint:unchecked for details.
    [javac] 6 warnings

services:
    [javac] Compiling 7 source files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes

archdep:
    [javac] Compiling 20 source files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes

upgrade:

worker:
    [javac] Compiling 42 source files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes
    [javac] Note: Some input files use unchecked or unsafe operations.
    [javac] Note: Recompile with -Xlint:unchecked for details.

dispatcher:
    [javac] Compiling 14 source files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/xtremweb/dispatcher/Dispatcher.java:216: warning: [deprecation] HTTPOpenIdHandler in xtremweb.dispatcher has been deprecated
    [javac] 				HTTPOpenIdHandler.setCACertificateEntries(getConfig().getKeyStore());
    [javac] 				^
    [javac] Note: Some input files use unchecked or unsafe operations.
    [javac] Note: Recompile with -Xlint:unchecked for details.
    [javac] 1 warning

worker.manifest:

jni:
     [copy] Copying 10 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/natif
     [exec] make[1]: Entering directory `/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/natif'
     [exec] gcc -c  -fPIC -g -Wall -I'/usr/lib/jvm/java-8-openjdk-amd64/include/linux' -fPIC -I'/usr/lib/jvm/java-8-openjdk-amd64/include' -o ../../build/classes/obj/linux-amd64/XWUtilUnix.o XWUtilUnix.c
     [exec] gcc -shared  -fPIC  -L'/usr/lib/jvm/java-8-openjdk-amd64/lib' -o ../../build/classes/obj/linux-amd64/XWUtil.jni ../../build/classes/obj/linux-amd64/XWUtilUnix.o 
     [exec] cp ../../build/classes/obj/linux-amd64/XWUtil.jni ../../build/classes/jni/XWUtil.jni.10.6.0.linux-amd64
     [exec] gcc -c  -fPIC -g -Wall -I'/usr/lib/jvm/java-8-openjdk-amd64/include/linux' -fPIC -I'/usr/lib/jvm/java-8-openjdk-amd64/include' -o ../../build/classes/obj/linux-amd64/XWTracerUnixlib.o XWTracerUnixlib.c
     [exec] mkdir: cannot create directory ‘../../build/classes/obj/linux-amd64’: File exists
     [exec] XWTracerUnixlib.c: In function ‘processCpustate’:
     [exec] XWTracerUnixlib.c:194:19: warning: variable ‘relative_jiffies’ set but not used [-Wunused-but-set-variable]
     [exec]      idle_jiffies, relative_jiffies, absolute_jiffies;
     [exec]                    ^
     [exec] XWTracerUnixlib.c:191:49: warning: variable ‘cpu_idle’ set but not used [-Wunused-but-set-variable]
     [exec]    static double cpu_user, cpu_nice, cpu_system, cpu_idle;
     [exec]                                                  ^
     [exec] XWTracerUnixlib.c:191:37: warning: variable ‘cpu_system’ set but not used [-Wunused-but-set-variable]
     [exec]    static double cpu_user, cpu_nice, cpu_system, cpu_idle;
     [exec]                                      ^
     [exec] XWTracerUnixlib.c:191:27: warning: variable ‘cpu_nice’ set but not used [-Wunused-but-set-variable]
     [exec]    static double cpu_user, cpu_nice, cpu_system, cpu_idle;
     [exec]                            ^
     [exec] XWTracerUnixlib.c:191:17: warning: variable ‘cpu_user’ set but not used [-Wunused-but-set-variable]
     [exec]    static double cpu_user, cpu_nice, cpu_system, cpu_idle;
     [exec]                  ^
     [exec] XWTracerUnixlib.c: In function ‘writeState’:
     [exec] XWTracerUnixlib.c:589:7: warning: variable ‘test’ set but not used [-Wunused-but-set-variable]
     [exec]    int test;
     [exec]        ^
     [exec] XWTracerUnixlib.c:587:8: warning: variable ‘k’ set but not used [-Wunused-but-set-variable]
     [exec]    char k[1];
     [exec]         ^
     [exec] XWTracerUnixlib.c:584:9: warning: variable ‘c’ set but not used [-Wunused-but-set-variable]
     [exec]    char* c;
     [exec]          ^
     [exec] gcc -c  -fPIC -g -Wall -I'/usr/lib/jvm/java-8-openjdk-amd64/include/linux' -fPIC -I'/usr/lib/jvm/java-8-openjdk-amd64/include' -o ../../build/classes/obj/linux-amd64/XWTracerUnixImpl.o XWTracerUnixImpl.c
     [exec] gcc -shared  -fPIC  -L'/usr/lib/jvm/java-8-openjdk-amd64/lib' -o ../../build/classes/obj/linux-amd64/XwTracer.jni ../../build/classes/obj/linux-amd64/XWTracerUnixlib.o ../../build/classes/obj/linux-amd64/XWTracerUnixImpl.o 
     [exec] cp ../../build/classes/obj/linux-amd64/XwTracer.jni ../../build/classes/jni/XwTracer.jni.10.6.0.linux-amd64
     [exec] gcc -c  -fPIC -g -Wall -I'/usr/lib/jvm/java-8-openjdk-amd64/include/linux' -fPIC -I'/usr/lib/jvm/java-8-openjdk-amd64/include' -o ../../build/classes/obj/linux-amd64/PortMapper.o PortMapper.c
     [exec] gcc -shared  -fPIC  -L'/usr/lib/jvm/java-8-openjdk-amd64/lib' -o ../../build/classes/obj/linux-amd64/PortMapper.jni ../../build/classes/obj/linux-amd64/PortMapper.o 
     [exec] cp ../../build/classes/obj/linux-amd64/PortMapper.jni ../../build/classes/jni/PortMapper.jni.10.6.0.linux-amd64
     [exec] make[1]: Leaving directory `/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/src/natif'
     [exec] PortMapper.c: In function ‘getport’:
     [exec] PortMapper.c:29:2: warning: implicit declaration of function ‘pmap_getport’ [-Wimplicit-function-declaration]
     [exec]   return pmap_getport (&amp;addr, prog, version, protocol);
     [exec]   ^

Worker:
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes/data
     [copy] Copying 23 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes/data

tests:
    [javac] Compiling 50 source files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/test/xtremweb/communications/XMLRPCCommandVersionTest.java:29: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] import xtremweb.communications.XMLRPCCommandVersion;
    [javac]                               ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/test/xtremweb/communications/XMLRPCCommandVersionTest.java:47: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] 			setCmd(new XMLRPCCommandVersion());
    [javac] 			           ^
    [javac] /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/test/xtremweb/communications/XMLRPCCommandVersionTest.java:48: warning: [deprecation] XMLRPCCommandVersion in xtremweb.communications has been deprecated
    [javac] 			setCmd2(new XMLRPCCommandVersion());
    [javac] 			            ^
    [javac] Note: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/test/xtremweb/common/XMLHashtableTest.java uses unchecked or unsafe operations.
    [javac] Note: Recompile with -Xlint:unchecked for details.
    [javac] 3 warnings

client:

allservices:

Dispatcher:
     [echo]  
     [echo] 	JAR JAR JAR
     [echo] 	basedir="/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/classes"
     [echo] 	jarfile="/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/lib/xtremweb.jar"
     [echo] 	manifest="/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/misc/worker.manifest"
     [echo]       
      [jar] Building jar: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/lib/xtremweb.jar

rpcv:

all:

copylibs:
     [copy] Copying 31 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/lib

distrib:

BUILD SUCCESSFUL
Total time: 23 seconds
./build.sh -f install.xml install 
Buildfile: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/install.xml

tstamp:

version:

prepare:

configure:
     [echo] 
     [echo] user  login : ${xtremweb.admin.login} ${xtremweb.admin.password}
     [echo] admin login : ${xtremweb.admin.login} ${xtremweb.admin.password}
     [echo] DB su login :  
     [echo] ENGINE : ""
     [echo] launcher.url = http://nohost/
     [echo] system.user  = xwhep
     [echo] xwsuffix=LINUX-AMD64
     [echo] xwarch=AMD64
     [echo] target.os=Linux
     [echo] cross.prefix=${cross.prefix}
     [echo] cross.java.home=${cross.java.home}
     [echo] version=10.6.0

installConfig:
     [echo] 
     [echo]        ==&gt; version    = 10.6.0
     [echo]        ==&gt; dist.dir   = /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0
     [echo]        ==&gt; installDir = /opt/xwhep-10.6.0
     [echo]     

installFiles:
     [copy] Copying 98 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/doc
     [copy] Copying 17 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/docker
     [copy] Copying 31 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/lib
     [copy] Copying 31 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.server/installer/PckRoot/private/etc/xwhep.server/lib
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf
     [echo] 
     [echo]       xtremweb.admin.login=${xtremweb.admin.login}
     [echo]       xtremweb.admin.password=${xtremweb.admin.password}
     [echo]     
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf
     [echo] 
     [echo]       xtremweb.worker.login=${xtremweb.worker.login}
     [echo]       xtremweb.worker.password=${xtremweb.worker.password}
     [echo]     
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/keystore
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.worker/installer/PckRoot/private/etc/xwhep.worker/conf
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.worker/installer/PckRoot/Applications/xwhep.worker
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.worker/installer/PckRoot/private/etc/xwhep.worker/conf
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.vworker/installer/PckRoot/Applications/xwhep.vworker
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.vworker/installer/PckRoot/private/etc/xwhep.vworker/bin
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.client/installer/PckRoot/Applications/xwhep.client/conf
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.server/installer/PckRoot/private/etc/xwhep.server/conf
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.server/installer/PckRoot/Applications/xwhep.server/doc
     [copy] Copying 98 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.server/installer/PckRoot/Applications/xwhep.server/doc
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.client/conf
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.client/innoSetup/client/bin
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.client/innoSetup/client/conf
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.client/innoSetup/client/doc
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.client/innoSetup/client/keystore
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.client/innoSetup/client/lib
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.client/innoSetup/client/conf
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/conf
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/innoSetup/worker/bin
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/innoSetup/worker/conf
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/innoSetup/worker/doc
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/innoSetup/worker/keystore
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/innoSetup/worker/lib
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/innoSetup/worker/misc
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/innoSetup/worker/conf
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/conf
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/innoSetup/worker/conf
     [copy] Copying 2 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/lib
     [copy] Copying 2 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/innoSetup/worker/lib
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/innoSetup/worker/lib
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/innoSetup/worker/lib
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/innoSetup/worker/misc
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/innoSetup/worker/doc
     [copy] Copying 8 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/bin
     [copy] Copying 5 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/innoSetup/worker/bin
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/doc
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.server/conf
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.server/innoSetup/server/bin
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.server/innoSetup/server/conf
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.server/innoSetup/server/doc
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.server/innoSetup/server/keystore
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.server/innoSetup/server/lib
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.server/innoSetup/server/misc
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.server/innoSetup/server/conf
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.server/conf
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.server/innoSetup/server/conf
     [copy] Copying 2 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.server/lib
     [copy] Copying 2 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.server/innoSetup/server/lib
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.server/innoSetup/server/misc
     [copy] Copying 2 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.server/innoSetup/server/bin

setupScripts:
     [copy] Copying 266 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/db-maintenance

installScripts:

createDownload:
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.client/installer/PckRoot/Applications/xwhep.client/lib
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.client/installer/PckRoot/Applications/xwhep.client/lib
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/db-maintenance
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/db-maintenance
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin
     [copy] Copying 98 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/doc/xwhep.client/doc
[jarbundler] Creating application bundle: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/xwhep.client.app
     [copy] Copying 5 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/xwhep.client.app
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.bridgedgsg
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.client
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.server
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.server.conf
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.worker
     [copy] Copying 20 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.worker
     [copy] Copying 17 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.vworker
     [copy] Copying 12 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.client
     [copy] Copying 19 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.server
     [copy] Copying 3 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/innoSetup
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker
     [copy] Copying 3 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.server/innoSetup
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.server
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.server.conf
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.server/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.server/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.server/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.server/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.server/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.server/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.server/DEBIAN
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.server.conf/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.server.conf/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.server.conf/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.server.conf/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.server.conf/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.server.conf/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.server.conf/DEBIAN
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.bridgedgsg/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.bridgedgsg
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.bridgedgsg/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.bridgedgsg/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.bridgedgsg/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.bridgedgsg/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.bridgedgsg/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.bridgedgsg/DEBIAN
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.client/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.client
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.client/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.client/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.client/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.client/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.client/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.client/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.worker
    [mkdir] Created dir: /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.worker/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.worker/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.worker/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.worker/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.worker/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.worker/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.worker/DEBIAN
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.client/innoSetup/client/lib
     [copy] Copying 1 file to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.client/innoSetup/client/lib
     [copy] Copying 11 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0
     [copy] Copying 6 files to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/apptest

ganglia:

install:
     [echo] 
     [echo]       Installation done
     [echo]     

BUILD SUCCESSFUL
Total time: 11 seconds</msg>
<status status="PASS" endtime="20170902 20:25:35.897" starttime="20170902 20:25:35.896"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${compile_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170902 20:25:35.898" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170902 20:25:35.898" starttime="20170902 20:25:35.898"></status>
</kw>
<kw name="Get Lines Containing String" library="String">
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<arguments>
<arg>${compile_result.stdout}</arg>
<arg>BUILD SUCCESSFUL</arg>
</arguments>
<assign>
<var>${extract_build_successful}</var>
</assign>
<msg timestamp="20170902 20:25:35.899" level="INFO">3 out of 516 lines matched</msg>
<msg timestamp="20170902 20:25:35.899" level="INFO">${extract_build_successful} = BUILD SUCCESSFUL
BUILD SUCCESSFUL
BUILD SUCCESSFUL</msg>
<status status="PASS" endtime="20170902 20:25:35.899" starttime="20170902 20:25:35.898"></status>
</kw>
<kw name="Get Line Count" library="String">
<doc>Returns and logs the number of lines in the given string.</doc>
<arguments>
<arg>${extract_build_successful}</arg>
</arguments>
<assign>
<var>${line_count_build_successful}</var>
</assign>
<msg timestamp="20170902 20:25:35.899" level="INFO">3 lines</msg>
<msg timestamp="20170902 20:25:35.899" level="INFO">${line_count_build_successful} = 3</msg>
<status status="PASS" endtime="20170902 20:25:35.899" starttime="20170902 20:25:35.899"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${line_count_build_successful}</arg>
<arg>3</arg>
</arguments>
<msg timestamp="20170902 20:25:35.900" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170902 20:25:35.900" starttime="20170902 20:25:35.899"></status>
</kw>
<status status="PASS" endtime="20170902 20:25:35.900" starttime="20170902 20:23:41.820"></status>
</kw>
<kw name="Install XWtremWeb" library="XWCommon">
<kw name="List Directories In Directory" library="OperatingSystem">
<doc>Wrapper for `List Directory` that returns only directories.</doc>
<arguments>
<arg>${DIST_PATH}</arg>
<arg>xwhep-*</arg>
<arg>absolute</arg>
</arguments>
<assign>
<var>@{list_directories_dist_path}</var>
</assign>
<msg timestamp="20170902 20:25:35.901" html="yes" level="INFO">Listing contents of directory '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist&lt;/a&gt;'.</msg>
<msg timestamp="20170902 20:25:35.906" level="INFO">1 directory:
/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0</msg>
<msg timestamp="20170902 20:25:35.906" level="INFO">@{list_directories_dist_path} = [ /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0 ]</msg>
<status status="PASS" endtime="20170902 20:25:35.906" starttime="20170902 20:25:35.900"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>@{list_directories_dist_path}[0]</arg>
</arguments>
<msg timestamp="20170902 20:25:35.906" level="INFO">/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0</msg>
<status status="PASS" endtime="20170902 20:25:35.907" starttime="20170902 20:25:35.906"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}</arg>
<arg>@{list_directories_dist_path}[0]</arg>
</arguments>
<msg timestamp="20170902 20:25:35.907" level="INFO">${DIST_XWHEP_PATH} = /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0</msg>
<status status="PASS" endtime="20170902 20:25:35.907" starttime="20170902 20:25:35.907"></status>
</kw>
<kw name="Directory Should Exist" library="OperatingSystem">
<doc>Fails unless the given path points to an existing directory.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}</arg>
</arguments>
<msg timestamp="20170902 20:25:35.908" html="yes" level="INFO">Directory '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0&lt;/a&gt;' exists.</msg>
<status status="PASS" endtime="20170902 20:25:35.908" starttime="20170902 20:25:35.907"></status>
</kw>
<kw name="Create XWCONFIGURE.VALUES FILE" library="XWCommon">
<arguments>
<arg>${DIST_XWHEP_PATH}</arg>
</arguments>
<kw name="Directory Should Exist" library="OperatingSystem">
<doc>Fails unless the given path points to an existing directory.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf</arg>
</arguments>
<msg timestamp="20170902 20:25:35.909" html="yes" level="INFO">Directory '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf&lt;/a&gt;' exists.</msg>
<status status="PASS" endtime="20170902 20:25:35.909" starttime="20170902 20:25:35.908"></status>
</kw>
<kw name="Remove File" library="OperatingSystem">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
</arguments>
<msg timestamp="20170902 20:25:35.911" html="yes" level="INFO">File '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;' does not exist.</msg>
<status status="PASS" endtime="20170902 20:25:35.911" starttime="20170902 20:25:35.909"></status>
</kw>
<kw name="Create File" library="OperatingSystem">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
</arguments>
<msg timestamp="20170902 20:25:35.912" html="yes" level="INFO">Created file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170902 20:25:35.913" starttime="20170902 20:25:35.911"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>XWUSER='${XWCONFIGURE.VALUES.XWUSER}'\n</arg>
</arguments>
<msg timestamp="20170902 20:25:35.914" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170902 20:25:35.915" starttime="20170902 20:25:35.913"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>DBVENDOR='${XWCONFIGURE.VALUES.DBVENDOR}'\n</arg>
</arguments>
<msg timestamp="20170902 20:25:35.916" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170902 20:25:35.916" starttime="20170902 20:25:35.915"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>DBENGINE='${XWCONFIGURE.VALUES.DBENGINE}'\n</arg>
</arguments>
<msg timestamp="20170902 20:25:35.918" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170902 20:25:35.918" starttime="20170902 20:25:35.916"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>DBHOST='${XWCONFIGURE.VALUES.DBHOST}'\n</arg>
</arguments>
<msg timestamp="20170902 20:25:35.919" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170902 20:25:35.919" starttime="20170902 20:25:35.918"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>DBADMINLOGIN='${XWCONFIGURE.VALUES.DBADMINLOGIN}'\n</arg>
</arguments>
<msg timestamp="20170902 20:25:35.921" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170902 20:25:35.921" starttime="20170902 20:25:35.920"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>DBADMINPASSWORD='${XWCONFIGURE.VALUES.DBADMINPASSWORD}'\n</arg>
</arguments>
<msg timestamp="20170902 20:25:35.923" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170902 20:25:35.923" starttime="20170902 20:25:35.921"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>DBNAME='${XWCONFIGURE.VALUES.DBNAME}'\n</arg>
</arguments>
<msg timestamp="20170902 20:25:35.925" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170902 20:25:35.925" starttime="20170902 20:25:35.923"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>DBUSERLOGIN='${XWCONFIGURE.VALUES.DBUSERLOGIN}'\n</arg>
</arguments>
<msg timestamp="20170902 20:25:35.926" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170902 20:25:35.926" starttime="20170902 20:25:35.925"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>DBUSERPASSWORD='${XWCONFIGURE.VALUES.DBUSERPASSWORD}'\n</arg>
</arguments>
<msg timestamp="20170902 20:25:35.928" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170902 20:25:35.928" starttime="20170902 20:25:35.926"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>XWADMINLOGIN='${XWCONFIGURE.VALUES.XWADMINLOGIN}'\n</arg>
</arguments>
<msg timestamp="20170902 20:25:35.930" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170902 20:25:35.930" starttime="20170902 20:25:35.928"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>XWADMINPASSWORD='${XWCONFIGURE.VALUES.XWADMINPASSWORD}'\n</arg>
</arguments>
<msg timestamp="20170902 20:25:35.931" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170902 20:25:35.931" starttime="20170902 20:25:35.930"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>XWWORKERLOGIN='${XWCONFIGURE.VALUES.XWWORKERLOGIN}'\n</arg>
</arguments>
<msg timestamp="20170902 20:25:35.933" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170902 20:25:35.933" starttime="20170902 20:25:35.931"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>XWWORKERPASSWORD='${XWCONFIGURE.VALUES.XWWORKERPASSWORD}'\n</arg>
</arguments>
<msg timestamp="20170902 20:25:35.934" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170902 20:25:35.934" starttime="20170902 20:25:35.933"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>XWSERVER='${XWCONFIGURE.VALUES.XWSERVER}'\n</arg>
</arguments>
<msg timestamp="20170902 20:25:35.935" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170902 20:25:35.936" starttime="20170902 20:25:35.934"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>CERTCN='${XWCONFIGURE.VALUES.CERTCN}'\n</arg>
</arguments>
<msg timestamp="20170902 20:25:35.937" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170902 20:25:35.937" starttime="20170902 20:25:35.936"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>CERTOU='${XWCONFIGURE.VALUES.CERTOU}'\n</arg>
</arguments>
<msg timestamp="20170902 20:25:35.939" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170902 20:25:35.939" starttime="20170902 20:25:35.938"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>CERTO='${XWCONFIGURE.VALUES.CERTO}'\n</arg>
</arguments>
<msg timestamp="20170902 20:25:35.940" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170902 20:25:35.940" starttime="20170902 20:25:35.939"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>CERTL='${XWCONFIGURE.VALUES.CERTL}'\n</arg>
</arguments>
<msg timestamp="20170902 20:25:35.942" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170902 20:25:35.942" starttime="20170902 20:25:35.940"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>CERTC='${XWCONFIGURE.VALUES.CERTC}'\n</arg>
</arguments>
<msg timestamp="20170902 20:25:35.943" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170902 20:25:35.943" starttime="20170902 20:25:35.942"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>CERTC='${XWCONFIGURE.VALUES.CERTC}'\n</arg>
</arguments>
<msg timestamp="20170902 20:25:35.945" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170902 20:25:35.945" starttime="20170902 20:25:35.944"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>SSLKEYPASSPHRASE='${XWCONFIGURE.VALUES.SSLKEYPASSPHRASE}'\n</arg>
</arguments>
<msg timestamp="20170902 20:25:35.946" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170902 20:25:35.946" starttime="20170902 20:25:35.945"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>SSLKEYSERVERPASSWORD='${XWCONFIGURE.VALUES.SSLKEYSERVERPASSWORD}'\n</arg>
</arguments>
<msg timestamp="20170902 20:25:35.948" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170902 20:25:35.948" starttime="20170902 20:25:35.947"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>SSLKEYWORKERPASSWORD='${XWCONFIGURE.VALUES.SSLKEYWORKERPASSWORD}'\n</arg>
</arguments>
<msg timestamp="20170902 20:25:35.949" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170902 20:25:35.949" starttime="20170902 20:25:35.948"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>SSLKEYCLIENTPASSWORD='${XWCONFIGURE.VALUES.SSLKEYCLIENTPASSWORD}'\n</arg>
</arguments>
<msg timestamp="20170902 20:25:35.951" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170902 20:25:35.951" starttime="20170902 20:25:35.950"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>X509CERTDIR='${XWCONFIGURE.VALUES.X509CERTDIR}'\n</arg>
</arguments>
<msg timestamp="20170902 20:25:35.953" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170902 20:25:35.953" starttime="20170902 20:25:35.951"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>USERCERTDIR='${XWCONFIGURE.VALUES.USERCERTDIR}'\n</arg>
</arguments>
<msg timestamp="20170902 20:25:35.954" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170902 20:25:35.954" starttime="20170902 20:25:35.953"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>XWUPGRADEURL='${XWCONFIGURE.VALUES.XWUPGRADEURL}'\n</arg>
</arguments>
<msg timestamp="20170902 20:25:35.956" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170902 20:25:35.956" starttime="20170902 20:25:35.955"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
<arg>HTTPSPORT='${XWCONFIGURE.VALUES.HTTPSPORT}'\n</arg>
</arguments>
<msg timestamp="20170902 20:25:35.957" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170902 20:25:35.958" starttime="20170902 20:25:35.956"></status>
</kw>
<kw name="Log File" library="OperatingSystem">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xwconfigure.values</arg>
</arguments>
<msg timestamp="20170902 20:25:35.958" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values&lt;/a&gt;'.</msg>
<msg timestamp="20170902 20:25:35.959" level="INFO">XWUSER='root'
DBVENDOR='mysql'
DBENGINE='InnoDB'
DBHOST='localhost'
DBADMINLOGIN='root'
DBADMINPASSWORD='root'
DBNAME='xtremweb'
DBUSERLOGIN='xwuser'
DBUSERPASSWORD='xwuser'
XWADMINLOGIN='admin'
XWADMINPASSWORD='admin'
XWWORKERLOGIN='worker'
XWWORKERPASSWORD='worker'
XWSERVER='localhost'
CERTCN='localhost'
CERTOU='MrRobotFramework'
CERTO='MrRobotFramework'
CERTL='MrRobotFramework'
CERTC='fr'
CERTC='fr'
SSLKEYPASSPHRASE='MrRobotFramework'
SSLKEYSERVERPASSWORD='MrRobotFramework'
SSLKEYWORKERPASSWORD='MrRobotFramework'
SSLKEYCLIENTPASSWORD='MrRobotFramework'
X509CERTDIR='/tmp/castore'
USERCERTDIR=''
XWUPGRADEURL='http://localhost:8080/somewhere/xtremweb.jar'
HTTPSPORT='9443'
</msg>
<status status="PASS" endtime="20170902 20:25:35.959" starttime="20170902 20:25:35.958"></status>
</kw>
<status status="PASS" endtime="20170902 20:25:35.959" starttime="20170902 20:25:35.908"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd ${DIST_XWHEP_PATH} &amp;&amp; ./bin/xwconfigure --yes --nopkg --rmdb</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${install_result}</var>
</assign>
<msg timestamp="20170902 20:25:35.959" level="INFO">Starting process:
cd /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0 &amp;&amp; ./bin/xwconfigure --yes --nopkg --rmdb</msg>
<msg timestamp="20170902 20:25:35.963" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170902 20:26:28.300" level="INFO">Process completed.</msg>
<msg timestamp="20170902 20:26:28.301" level="INFO">${install_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170902 20:26:28.301" starttime="20170902 20:25:35.959"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${install_result.stdout}</arg>
</arguments>
<msg timestamp="20170902 20:26:28.302" level="INFO">
--------------------------------------------------
         XtremWeb-HEP 10.6.0 
         XWConfigurator

This script helps to configure an XtremWeb-HEP deployment 
--------------------------------------------------

This script aims to :
 - install a new database: Since 9.1. MySQL (http://www.mysql.com/) only is supported
 - creates electronic keys : 
   * server private key
   * client key store including server public key
   * worker key store including server public key
 - prepare installers
   * Win32 InnoSetup project (http://www.jrsoftware.org/isinfo.php)
   * Mac OS X Package Maker projects (http:/www.apple.com)
   * Linux RPM (http://www.rpm.org)
   * Linux Debian package (http://www.debian.org)

In order to complete configuration, several informations are needed :
 -1- MySQL administrator account (login and password)
     =&gt; If you don't know it, please ask your system administrator
 -1.1- Database server, if using MySQL
     =&gt; The name or IP address of your MySQL server
 -1.2- Database name
     =&gt; If you don't have a valid MySQL administrator account, you won't be able to perform this
     =&gt; In such a case, please ask your system administrator to create one new empty database for us
 -1.3- Database user (login and password), if using MySQL
     =&gt; This account must have insert/update/delete privileges to the previous database
     =&gt; This account will be used by the XW server to access database
     =&gt; If you don't have a valid MySQL administrator account, you won't be able to perform this
     =&gt; In such a case, please ask your system administrator to create one for you
 -2- Electronic key passphrase
     =&gt; This is free and up to you
 -3- Electronic key password for the server
     =&gt; This is free and up to you
 -4- Electronic key password for the worker
     =&gt; This is free and up to you
 -5- Electronic key password for the client
     =&gt; This is free and up to you

All informations are stored in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values
So that, you can stop this script when you want, and don't have to re-enter all informations

To reset any variable, edit or erase /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values

You should be aware that /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xwconfigure.values stores some critical informations!!!

-----------------------------

DB vendor set to 'mysql'
DB engine set to 'InnoDB'
***************************************
 No electronic key found               
 Will generate self signed certificate 
***************************************
Upgrade URL is localhost : I guess this is for testing only...
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Can't download xtremweb.jar from 'http://localhost:8080/somewhere/xtremweb.jar'
You will have to ensure that xtremweb.jar can be downloaded from 'http://localhost:8080/somewhere/xtremweb.jar'
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

You entered :
**** Account to run the middleware : 
     USER                 = 'root'
**** Database configuration : 
     DBVENDOR             = 'mysql'
     DBENGINE             = 'InnoDB'
     DBHOST               = 'localhost'
     DBNAME               = 'xtremweb'
     DBADMINLOGIN         = 'root'
     DBADMINPASSWORD      = 'root'
     DBUSERLOGIN          = 'xwuser'
     DBUSERPASSWORD       = 'xwuser'
**** XtremWeb-HEP administrator client configuration : 
     XWADMINLOGIN         = 'admin'
     XWADMINPASSWORD      = 'admin'
**** XtremWeb-HEP public worker configuration : 
     XWWORKERLOGIN        = 'worker'
     XWWORKERPASSWORD     = 'worker'
**** XtremWeb-HEP server configuration : 
     XWSERVER             = 'localhost'
     XWUPGRADEURL         = 'http://localhost:8080/somewhere/xtremweb.jar'
**** CA certificates path : 
     X509CERTDIR          = '/tmp/castore'
**** Certificate configuration : 
     Keys found           = ''
     SSLKEYPASSPHRASE     = 'MrRobotFramework'
     SSLKEYCLIENTPASSWORD = 'MrRobotFramework'
     SSLKEYSERVERPASSWORD = 'MrRobotFramework'
     SSLKEYWORKERPASSWORD = 'MrRobotFramework'
     Common Name          = 'localhost'
     Organisation Unit    = 'MrRobotFramework'
     Organization Name    = 'MrRobotFramework'
     Locality Name        = 'MrRobotFramework'
     Country              = 'fr'

Database schema 'xtremweb' exists : DB reset forced
Resetting database schema 'xtremweb'
Preparing database script............Done
Preparing database schema 'xtremweb'
DB engine for 'xtremweb' is InnoDB :  Creating foreign keys for live tables ...
Creating DB triggers using xwhep-core-tables-create-triggers-for-data-coming-from-8.sql ...

Table "users"

Table "hosts"

Table "datas"

Table "works"

Table "tasks"

Table "apps"
Creating DB triggers using xwhep-core-tables-create-triggers-for-history-coming-from-8.sql ...

Table "users_history"

Table "hosts_history"

Table "datas_history"

Table "works_history"

Table "tasks_history"

Table "apps_history"
Create the SQL script for the creation of DB views in the current schema ...
Create the SQL script for the creation of DB users views in the current schema ...
Creating DB views using xwhep-core-tables-create-views-for-tables.sql ...
Creating DB views using xwhep-core-tables-create-users-views.sql ...
Creating DB views using xwhep-core-tables-create-views-for-sessions-and-groups.sql ...
Creating DB views using xwhep-core-tables-create-views-for-relationships.sql ...
Creating DB views using xwhep-core-tables-create-views-for-offering-and-billing.sql ...
Creating DB views using xwhep-core-tables-create-views-hosts-matching-works.sql ...
Granting access to DB schema 'xtremweb' ...
Database schema 'xtremweb' : checking compliance to '05.7.3'
Database schema 'xtremweb' : is compliant to 05.7.3
Database schema 'xtremweb' : checking compliance to '05.8.0'
Database schema 'xtremweb' : is compliant to 05.8.0
Database schema 'xtremweb' : checking compliance to '06.0.1'
Database schema 'xtremweb' : is compliant to 06.0.1
Database schema 'xtremweb' : checking compliance to '07.0.0'
Database schema 'xtremweb' : is compliant to 07.0.0
Database schema 'xtremweb' : checking compliance to '07.2.0'
Database schema 'xtremweb' : is compliant to 07.2.0
Database schema 'xtremweb' : checking compliance to '07.4.1'
Database schema 'xtremweb' : is compliant to 07.4.1
Database schema 'xtremweb' : checking compliance to '07.5.0'
Database schema 'xtremweb' : is compliant to 07.5.0
Database schema 'xtremweb' : checking compliance to '08.0.0'
Database schema 'xtremweb' : is compliant to 08.0.0
Database schema 'xtremweb' : checking compliance to '08.2.0'
Database schema 'xtremweb' : is compliant to 08.2.0
Database schema 'xtremweb' : checking compliance to '08.3.1'
Database schema 'xtremweb' : is compliant to 08.3.1
Database schema 'xtremweb' : checking compliance to '09.1.0'
Database schema 'xtremweb' : is compliant to 09.1.0
Database schema 'xtremweb' : checking compliance to '10.0.0'
Database schema 'xtremweb' : is compliant to 10.0.0
Database schema 'xtremweb' : checking compliance to '10.2.0'
Database schema 'xtremweb' : is compliant to 10.2.0
Database schema 'xtremweb' : checking compliance to '10.6.0'
Database schema 'xtremweb' : is not compliant to '10.6.0'; updating
10.6.0 is compliant, dont worry
10.6.0 is compliant, dont worry
Database schema 'xtremweb' : updated to '10.6.0'
Set current version to '10.6.0'
Setting the account to run the middleware to 'root'..........................Done
Preparing server configuration file '/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf'................. Done
Preparing xtremweb.ganglia...Done
Generating script to manage keystores (/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/xwhepgenkeys)  Done
Generating script to manage OpenId server certificates (/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/xwhepupdateopenidcerts) Done
Preparing worker configuration file '/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf'.... Done
Copying worker configuration file /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.worker/installer/PckRoot/private/etc/xwhep.worker/conf/xtremweb.worker.conf
Copying worker configuration file /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/innoSetup/worker/conf/xtremweb.worker.conf
Done
Preparing client configuration file '/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.client.conf'...Done
Copying client configuration file /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.client.conf to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.client/innoSetup/client/conf/xtremweb.client.conf
****************************************************************************************
Done
[Sat Sep  2 20:25:39 UTC 2017] xwhepgenkeys - [INFO] : Generating server keystore file /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/../keystore/xwhepserver.keys
[Sat Sep  2 20:25:39 UTC 2017] xwhepgenkeys - [INFO] : No certificate found; creating self signed ones

Keystore type: JKS
Keystore provider: SUN

Your keystore contains 1 entry

localhost, Sep 2, 2017, PrivateKeyEntry, 
Certificate fingerprint (SHA1): 2B:2E:1A:45:69:06:18:7E:23:C9:2B:94:69:08:A4:5F:A5:92:E5:11
Owner: CN=localhost, O=MrRobotFramework, C=fr, OU=MrRobotFramework, L=MrRobotFramework
Issuer: CN=localhost, O=MrRobotFramework, C=fr, OU=MrRobotFramework, L=MrRobotFramework
Serial number: 4e6ea59f
Valid from: Sat Sep 02 20:25:40 UTC 2017 until: Sun Sep 02 20:25:40 UTC 2018
Certificate fingerprints:
	 MD5:  29:8B:F9:A3:44:97:B0:62:E0:A7:7C:6B:D1:40:A1:6B
	 SHA1: 2B:2E:1A:45:69:06:18:7E:23:C9:2B:94:69:08:A4:5F:A5:92:E5:11
	 SHA256: D3:CE:E4:CD:67:0F:D6:54:D5:B5:77:DA:91:FC:B7:CC:9E:0F:45:FA:F5:8A:B0:90:97:50:9F:AC:2E:0F:63:CB
	 Signature algorithm name: SHA256withRSA
	 Version: 3

Extensions: 

#1: ObjectId: 2.5.29.14 Criticality=false
SubjectKeyIdentifier [
KeyIdentifier [
0000: FB 7E 1D 50 EB 95 AC 8D   FF 14 E0 B6 CF 4B 52 D7  ...P.........KR.
0010: A0 F4 EE 80                                        ....
]
]

[Sat Sep  2 20:25:41 UTC 2017] xwhepgenkeys - [INFO] : Generating worker keystore file /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/../keystore/xwhepworker.keys
[Sat Sep  2 20:25:42 UTC 2017] xwhepgenkeys - [INFO] : Importing server public key into worker keystore (/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/../keystore/xwhepworker.keys)

Keystore type: JKS
Keystore provider: SUN

Your keystore contains 2 entries

xtremweb-hep.worker.20170902202539, Sep 2, 2017, PrivateKeyEntry, 
Certificate fingerprint (SHA1): CF:A7:7F:9F:29:D9:76:D0:31:9A:F5:11:19:37:10:49:35:56:14:F6
localhost, Sep 2, 2017, trustedCertEntry, 
Certificate fingerprint (SHA1): 2B:2E:1A:45:69:06:18:7E:23:C9:2B:94:69:08:A4:5F:A5:92:E5:11
[Sat Sep  2 20:25:42 UTC 2017] xwhepgenkeys - [INFO] : Generating client keystore file /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/../keystore/xwhepclient.keys
[Sat Sep  2 20:25:43 UTC 2017] xwhepgenkeys - [INFO] : Importing server public key into client keystore (/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/../keystore/xwhepworker.keys)

Keystore type: JKS
Keystore provider: SUN

Your keystore contains 2 entries

xtremweb-hep.client.20170902202539, Sep 2, 2017, PrivateKeyEntry, 
Certificate fingerprint (SHA1): 3D:16:F4:26:D2:A8:F5:D3:80:8C:F3:A6:2D:09:1B:3E:10:87:A5:7B
localhost, Sep 2, 2017, trustedCertEntry, 
Certificate fingerprint (SHA1): 2B:2E:1A:45:69:06:18:7E:23:C9:2B:94:69:08:A4:5F:A5:92:E5:11
[Sat Sep  2 20:25:43 UTC 2017] xwhepgenkeys - [INFO] : Signing jar file /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/../lib/xtremweb.jar
jar signed.

Warning: 
No -tsa or -tsacert is provided and this jar is not timestamped. Without a timestamp, users may not be able to validate this jar after the signer certificate's expiration date (2018-09-02) or after any future revocation date.

jar verified.

Warning: 
This jar contains signatures that does not include a timestamp. Without a timestamp, users may not be able to validate this jar after the signer certificate's expiration date (2018-09-02) or after any future revocation date.

Re-run with the -verbose and -certs options for more details.
[Sat Sep  2 20:25:45 UTC 2017] xwhepgenkeys - [INFO] : Done
GKRC=0
*******************
Keystores generated
*******************
Inserting known OpenId servers certificate paths into server keystore
 - google
 - yahoo
 - facebook
keytool error: java.io.FileNotFoundException: www.yahoo.com_0.pem (No such file or directory)
keytool error: java.io.FileNotFoundException: www.yahoo.com_1.pem (No such file or directory)
keytool error: java.io.FileNotFoundException: www.yahoo.com_2.pem (No such file or directory)
keytool error: java.io.FileNotFoundException: www.google.com_0.pem (No such file or directory)
keytool error: java.io.FileNotFoundException: www.google.com_1.pem (No such file or directory)
keytool error: java.io.FileNotFoundException: www.facebook.com_0.pem (No such file or directory)
keytool error: java.io.FileNotFoundException: www.facebook.com_1.pem (No such file or directory)
*******************
ERROR : can't insert OpenID server certificates into XWHEP server keystore
*******************

Preparing  client package to '/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/xwhep.client'.....Done
Copying client configuration file /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/xwhep.client/10.6.0/conf/xtremweb.client.conf.template to /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.client/installer/PckRoot/Applications/xwhep.client/conf/xtremweb.client.conf
 Done

Preparing server RPM package to '/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.server'.... Done

Preparing server configuration RPM package to '/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.server.conf'.... Done

Preparing server Debian package
Server Debian package ready

Preparing server configuration Debian package
Server Configuration Debian package ready
Preparing DG to SG bridge RPM package to '/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.bridgedgsg'............ Done

Preparing bridgedgsg Debian package
Bridgedgsg Debian package ready
Preparing SG to DG bridge RPM package to '/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.bridgesgdg'........ Done

Preparing bridgesgdg Debian package
Bridgesgdg Debian package ready
Preparing client RPM package to '/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.client'.... Done

Preparing client Debian package
Client Debian package ready

Preparing worker RPM package to '/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.worker'.... Done

Preparing worker Debian package
Worker Debian package ready

&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;
! Everything is now prepared !
&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;

Available packages :
  * server
   - RedHat RPM  in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.server
   - Debian DPKG in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.server
   - Apple  PKG  in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.server

  * Desktop Grid to Service Grid bridge
   - RedHat RPM  in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.bridgedgsg
   - Debian DPKG in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.bridgedgsg

  * Service Grid to Desktop Grid bridge
   - RedHat RPM  in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.bridgesgdg
   - Debian DPKG in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.bridgesgdg

  * client
   - RedHat RPM  in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.client
   - Debian DPKG in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.client
   - Apple  PKG  in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.client
   - Windows installer  in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.client/innoSetup
                        (http://www.innosetup.com/isinfo.php)

  * worker
   - RedHat  RPM        in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/rpm/xwhep.worker
   - Debian  DPKG       in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/linux/dpkg/xwhep.worker
   - Apple   PKG        in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/macosx/xwhep.worker
   - Windows installer  in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/win32/xwhep.worker/innoSetup
                        (http://www.innosetup.com/isinfo.php)

  * client
   - Zip file (platform independant)  in /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/installers/xwhep-client-10.6.0.zip


You can manually :
  * start the server
   - ./bin/../bin/xwhep.server console
  * start a worker
   - ./bin/../bin/xwhep.worker console
  * as soon as your server is started you can use the client
   - ./bin/../bin/xwworkers : if you have started a worker, it is in the list
   - ./bin/../bin/xwusers
   - ./bin/../bin/xwapps
   - etc.

As soon as everything is ok you should :
  * install you server using its packages
  * deploy worker over your own volunteer PCs using its packages
  * install your worker packages on any of your web sites
    if you wish to enable anonymous volunteer power
  * install your client ZIP file on any of your web sites
    to allow registered users to use the platform

That's all folks
</msg>
<status status="PASS" endtime="20170902 20:26:28.302" starttime="20170902 20:26:28.301"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${install_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170902 20:26:28.302" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170902 20:26:28.303" starttime="20170902 20:26:28.302"></status>
</kw>
<kw name="Get Lines Containing String" library="String">
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<arguments>
<arg>${install_result.stdout}</arg>
<arg>That's all folks</arg>
</arguments>
<assign>
<var>${install_result_successful}</var>
</assign>
<msg timestamp="20170902 20:26:28.303" level="INFO">1 out of 357 lines matched</msg>
<msg timestamp="20170902 20:26:28.303" level="INFO">${install_result_successful} = That's all folks</msg>
<status status="PASS" endtime="20170902 20:26:28.303" starttime="20170902 20:26:28.303"></status>
</kw>
<kw name="Get Line Count" library="String">
<doc>Returns and logs the number of lines in the given string.</doc>
<arguments>
<arg>${install_result_successful}</arg>
</arguments>
<assign>
<var>${line_install_result_successful}</var>
</assign>
<msg timestamp="20170902 20:26:28.304" level="INFO">1 lines</msg>
<msg timestamp="20170902 20:26:28.304" level="INFO">${line_install_result_successful} = 1</msg>
<status status="PASS" endtime="20170902 20:26:28.304" starttime="20170902 20:26:28.303"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${line_install_result_successful}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20170902 20:26:28.304" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170902 20:26:28.304" starttime="20170902 20:26:28.304"></status>
</kw>
<status status="PASS" endtime="20170902 20:26:28.304" starttime="20170902 20:25:35.900"></status>
</kw>
<kw name="Ping XWtremWeb Database" library="XWServer">
<kw name="Xtremweb Tables Must Exist" library="MySql">
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170902 20:26:28.316" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170902 20:26:28.317" starttime="20170902 20:26:28.306"></status>
</kw>
<status status="PASS" endtime="20170902 20:26:28.318" starttime="20170902 20:26:28.305"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>appTypes</arg>
</arguments>
<msg timestamp="20170902 20:26:28.318" level="INFO">Executing : Table Must Exist  |  appTypes </msg>
<msg timestamp="20170902 20:26:28.318" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='appTypes' </msg>
<status status="PASS" endtime="20170902 20:26:28.319" starttime="20170902 20:26:28.318"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps</arg>
</arguments>
<msg timestamp="20170902 20:26:28.320" level="INFO">Executing : Table Must Exist  |  apps </msg>
<msg timestamp="20170902 20:26:28.320" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='apps' </msg>
<status status="PASS" endtime="20170902 20:26:28.322" starttime="20170902 20:26:28.319"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps_history</arg>
</arguments>
<msg timestamp="20170902 20:26:28.322" level="INFO">Executing : Table Must Exist  |  apps_history </msg>
<msg timestamp="20170902 20:26:28.322" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='apps_history' </msg>
<status status="PASS" endtime="20170902 20:26:28.323" starttime="20170902 20:26:28.322"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>cpuTypes</arg>
</arguments>
<msg timestamp="20170902 20:26:28.323" level="INFO">Executing : Table Must Exist  |  cpuTypes </msg>
<msg timestamp="20170902 20:26:28.323" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='cpuTypes' </msg>
<status status="PASS" endtime="20170902 20:26:28.324" starttime="20170902 20:26:28.323"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>dataTypes</arg>
</arguments>
<msg timestamp="20170902 20:26:28.324" level="INFO">Executing : Table Must Exist  |  dataTypes </msg>
<msg timestamp="20170902 20:26:28.325" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='dataTypes' </msg>
<status status="PASS" endtime="20170902 20:26:28.326" starttime="20170902 20:26:28.324"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas</arg>
</arguments>
<msg timestamp="20170902 20:26:28.326" level="INFO">Executing : Table Must Exist  |  datas </msg>
<msg timestamp="20170902 20:26:28.326" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='datas' </msg>
<status status="PASS" endtime="20170902 20:26:28.327" starttime="20170902 20:26:28.326"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas_history</arg>
</arguments>
<msg timestamp="20170902 20:26:28.327" level="INFO">Executing : Table Must Exist  |  datas_history </msg>
<msg timestamp="20170902 20:26:28.327" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='datas_history' </msg>
<status status="PASS" endtime="20170902 20:26:28.330" starttime="20170902 20:26:28.327"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables</arg>
</arguments>
<msg timestamp="20170902 20:26:28.330" level="INFO">Executing : Table Must Exist  |  executables </msg>
<msg timestamp="20170902 20:26:28.330" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='executables' </msg>
<status status="PASS" endtime="20170902 20:26:28.331" starttime="20170902 20:26:28.330"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables_history</arg>
</arguments>
<msg timestamp="20170902 20:26:28.331" level="INFO">Executing : Table Must Exist  |  executables_history </msg>
<msg timestamp="20170902 20:26:28.331" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='executables_history' </msg>
<status status="PASS" endtime="20170902 20:26:28.332" starttime="20170902 20:26:28.331"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups</arg>
</arguments>
<msg timestamp="20170902 20:26:28.333" level="INFO">Executing : Table Must Exist  |  groups </msg>
<msg timestamp="20170902 20:26:28.333" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='groups' </msg>
<status status="PASS" endtime="20170902 20:26:28.334" starttime="20170902 20:26:28.332"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups_history</arg>
</arguments>
<msg timestamp="20170902 20:26:28.334" level="INFO">Executing : Table Must Exist  |  groups_history </msg>
<msg timestamp="20170902 20:26:28.334" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='groups_history' </msg>
<status status="PASS" endtime="20170902 20:26:28.335" starttime="20170902 20:26:28.334"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts</arg>
</arguments>
<msg timestamp="20170902 20:26:28.335" level="INFO">Executing : Table Must Exist  |  hosts </msg>
<msg timestamp="20170902 20:26:28.335" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='hosts' </msg>
<status status="PASS" endtime="20170902 20:26:28.336" starttime="20170902 20:26:28.335"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts_history</arg>
</arguments>
<msg timestamp="20170902 20:26:28.336" level="INFO">Executing : Table Must Exist  |  hosts_history </msg>
<msg timestamp="20170902 20:26:28.336" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='hosts_history' </msg>
<status status="PASS" endtime="20170902 20:26:28.338" starttime="20170902 20:26:28.336"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships</arg>
</arguments>
<msg timestamp="20170902 20:26:28.338" level="INFO">Executing : Table Must Exist  |  memberships </msg>
<msg timestamp="20170902 20:26:28.338" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='memberships' </msg>
<status status="PASS" endtime="20170902 20:26:28.339" starttime="20170902 20:26:28.338"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships_history</arg>
</arguments>
<msg timestamp="20170902 20:26:28.340" level="INFO">Executing : Table Must Exist  |  memberships_history </msg>
<msg timestamp="20170902 20:26:28.340" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='memberships_history' </msg>
<status status="PASS" endtime="20170902 20:26:28.341" starttime="20170902 20:26:28.339"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>oses</arg>
</arguments>
<msg timestamp="20170902 20:26:28.341" level="INFO">Executing : Table Must Exist  |  oses </msg>
<msg timestamp="20170902 20:26:28.341" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='oses' </msg>
<status status="PASS" endtime="20170902 20:26:28.342" starttime="20170902 20:26:28.341"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>packageTypes</arg>
</arguments>
<msg timestamp="20170902 20:26:28.342" level="INFO">Executing : Table Must Exist  |  packageTypes </msg>
<msg timestamp="20170902 20:26:28.342" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='packageTypes' </msg>
<status status="PASS" endtime="20170902 20:26:28.343" starttime="20170902 20:26:28.342"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions</arg>
</arguments>
<msg timestamp="20170902 20:26:28.344" level="INFO">Executing : Table Must Exist  |  sessions </msg>
<msg timestamp="20170902 20:26:28.344" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sessions' </msg>
<status status="PASS" endtime="20170902 20:26:28.345" starttime="20170902 20:26:28.343"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions_history</arg>
</arguments>
<msg timestamp="20170902 20:26:28.345" level="INFO">Executing : Table Must Exist  |  sessions_history </msg>
<msg timestamp="20170902 20:26:28.345" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sessions_history' </msg>
<status status="PASS" endtime="20170902 20:26:28.346" starttime="20170902 20:26:28.345"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes</arg>
</arguments>
<msg timestamp="20170902 20:26:28.347" level="INFO">Executing : Table Must Exist  |  sharedAppTypes </msg>
<msg timestamp="20170902 20:26:28.347" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedAppTypes' </msg>
<status status="PASS" endtime="20170902 20:26:28.347" starttime="20170902 20:26:28.346"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes_history</arg>
</arguments>
<msg timestamp="20170902 20:26:28.348" level="INFO">Executing : Table Must Exist  |  sharedAppTypes_history </msg>
<msg timestamp="20170902 20:26:28.348" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedAppTypes_history' </msg>
<status status="PASS" endtime="20170902 20:26:28.349" starttime="20170902 20:26:28.348"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes</arg>
</arguments>
<msg timestamp="20170902 20:26:28.350" level="INFO">Executing : Table Must Exist  |  sharedPackageTypes </msg>
<msg timestamp="20170902 20:26:28.350" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedPackageTypes' </msg>
<status status="PASS" endtime="20170902 20:26:28.351" starttime="20170902 20:26:28.349"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes_history</arg>
</arguments>
<msg timestamp="20170902 20:26:28.351" level="INFO">Executing : Table Must Exist  |  sharedPackageTypes_history </msg>
<msg timestamp="20170902 20:26:28.351" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedPackageTypes_history' </msg>
<status status="PASS" endtime="20170902 20:26:28.352" starttime="20170902 20:26:28.351"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>statuses</arg>
</arguments>
<msg timestamp="20170902 20:26:28.352" level="INFO">Executing : Table Must Exist  |  statuses </msg>
<msg timestamp="20170902 20:26:28.353" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='statuses' </msg>
<status status="PASS" endtime="20170902 20:26:28.353" starttime="20170902 20:26:28.352"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks</arg>
</arguments>
<msg timestamp="20170902 20:26:28.354" level="INFO">Executing : Table Must Exist  |  tasks </msg>
<msg timestamp="20170902 20:26:28.354" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='tasks' </msg>
<status status="PASS" endtime="20170902 20:26:28.355" starttime="20170902 20:26:28.354"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks_history</arg>
</arguments>
<msg timestamp="20170902 20:26:28.355" level="INFO">Executing : Table Must Exist  |  tasks_history </msg>
<msg timestamp="20170902 20:26:28.355" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='tasks_history' </msg>
<status status="PASS" endtime="20170902 20:26:28.356" starttime="20170902 20:26:28.355"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces</arg>
</arguments>
<msg timestamp="20170902 20:26:28.356" level="INFO">Executing : Table Must Exist  |  traces </msg>
<msg timestamp="20170902 20:26:28.357" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='traces' </msg>
<status status="PASS" endtime="20170902 20:26:28.357" starttime="20170902 20:26:28.356"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces_history</arg>
</arguments>
<msg timestamp="20170902 20:26:28.358" level="INFO">Executing : Table Must Exist  |  traces_history </msg>
<msg timestamp="20170902 20:26:28.358" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='traces_history' </msg>
<status status="PASS" endtime="20170902 20:26:28.359" starttime="20170902 20:26:28.358"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>userRights</arg>
</arguments>
<msg timestamp="20170902 20:26:28.359" level="INFO">Executing : Table Must Exist  |  userRights </msg>
<msg timestamp="20170902 20:26:28.359" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='userRights' </msg>
<status status="PASS" endtime="20170902 20:26:28.360" starttime="20170902 20:26:28.359"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups</arg>
</arguments>
<msg timestamp="20170902 20:26:28.360" level="INFO">Executing : Table Must Exist  |  usergroups </msg>
<msg timestamp="20170902 20:26:28.360" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='usergroups' </msg>
<status status="PASS" endtime="20170902 20:26:28.361" starttime="20170902 20:26:28.360"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups_history</arg>
</arguments>
<msg timestamp="20170902 20:26:28.362" level="INFO">Executing : Table Must Exist  |  usergroups_history </msg>
<msg timestamp="20170902 20:26:28.362" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='usergroups_history' </msg>
<status status="PASS" endtime="20170902 20:26:28.363" starttime="20170902 20:26:28.362"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users</arg>
</arguments>
<msg timestamp="20170902 20:26:28.363" level="INFO">Executing : Table Must Exist  |  users </msg>
<msg timestamp="20170902 20:26:28.363" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='users' </msg>
<status status="PASS" endtime="20170902 20:26:28.364" starttime="20170902 20:26:28.363"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users_history</arg>
</arguments>
<msg timestamp="20170902 20:26:28.364" level="INFO">Executing : Table Must Exist  |  users_history </msg>
<msg timestamp="20170902 20:26:28.364" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='users_history' </msg>
<status status="PASS" endtime="20170902 20:26:28.365" starttime="20170902 20:26:28.364"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>version</arg>
</arguments>
<msg timestamp="20170902 20:26:28.366" level="INFO">Executing : Table Must Exist  |  version </msg>
<msg timestamp="20170902 20:26:28.366" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='version' </msg>
<status status="PASS" endtime="20170902 20:26:28.367" starttime="20170902 20:26:28.365"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>versions</arg>
</arguments>
<msg timestamp="20170902 20:26:28.367" level="INFO">Executing : Table Must Exist  |  versions </msg>
<msg timestamp="20170902 20:26:28.367" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='versions' </msg>
<status status="PASS" endtime="20170902 20:26:28.368" starttime="20170902 20:26:28.367"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps</arg>
</arguments>
<msg timestamp="20170902 20:26:28.368" level="INFO">Executing : Table Must Exist  |  view_apps </msg>
<msg timestamp="20170902 20:26:28.369" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps' </msg>
<status status="PASS" endtime="20170902 20:26:28.370" starttime="20170902 20:26:28.368"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps_for_offering</arg>
</arguments>
<msg timestamp="20170902 20:26:28.370" level="INFO">Executing : Table Must Exist  |  view_apps_for_offering </msg>
<msg timestamp="20170902 20:26:28.370" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps_for_offering' </msg>
<status status="PASS" endtime="20170902 20:26:28.371" starttime="20170902 20:26:28.370"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps_for_offering_with_file_sizes</arg>
</arguments>
<msg timestamp="20170902 20:26:28.371" level="INFO">Executing : Table Must Exist  |  view_apps_for_offering_with_file_sizes </msg>
<msg timestamp="20170902 20:26:28.372" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps_for_offering_with_file_sizes' </msg>
<status status="PASS" endtime="20170902 20:26:28.373" starttime="20170902 20:26:28.371"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_datas</arg>
</arguments>
<msg timestamp="20170902 20:26:28.373" level="INFO">Executing : Table Must Exist  |  view_datas </msg>
<msg timestamp="20170902 20:26:28.373" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_datas' </msg>
<status status="PASS" endtime="20170902 20:26:28.374" starttime="20170902 20:26:28.373"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_executables</arg>
</arguments>
<msg timestamp="20170902 20:26:28.374" level="INFO">Executing : Table Must Exist  |  view_executables </msg>
<msg timestamp="20170902 20:26:28.374" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_executables' </msg>
<status status="PASS" endtime="20170902 20:26:28.375" starttime="20170902 20:26:28.374"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_groups</arg>
</arguments>
<msg timestamp="20170902 20:26:28.376" level="INFO">Executing : Table Must Exist  |  view_groups </msg>
<msg timestamp="20170902 20:26:28.376" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_groups' </msg>
<status status="PASS" endtime="20170902 20:26:28.377" starttime="20170902 20:26:28.376"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts</arg>
</arguments>
<msg timestamp="20170902 20:26:28.377" level="INFO">Executing : Table Must Exist  |  view_hosts </msg>
<msg timestamp="20170902 20:26:28.377" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts' </msg>
<status status="PASS" endtime="20170902 20:26:28.378" starttime="20170902 20:26:28.377"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_deployable</arg>
</arguments>
<msg timestamp="20170902 20:26:28.379" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_deployable </msg>
<msg timestamp="20170902 20:26:28.379" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_deployable' </msg>
<status status="PASS" endtime="20170902 20:26:28.380" starttime="20170902 20:26:28.378"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_deployable_and_shared</arg>
</arguments>
<msg timestamp="20170902 20:26:28.380" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_deployable_and_shared </msg>
<msg timestamp="20170902 20:26:28.380" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_deployable_and_shared' </msg>
<status status="PASS" endtime="20170902 20:26:28.381" starttime="20170902 20:26:28.380"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_shared</arg>
</arguments>
<msg timestamp="20170902 20:26:28.381" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_shared </msg>
<msg timestamp="20170902 20:26:28.382" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_shared' </msg>
<status status="PASS" endtime="20170902 20:26:28.383" starttime="20170902 20:26:28.381"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_sessions</arg>
</arguments>
<msg timestamp="20170902 20:26:28.383" level="INFO">Executing : Table Must Exist  |  view_sessions </msg>
<msg timestamp="20170902 20:26:28.383" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_sessions' </msg>
<status status="PASS" endtime="20170902 20:26:28.384" starttime="20170902 20:26:28.383"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_tasks</arg>
</arguments>
<msg timestamp="20170902 20:26:28.384" level="INFO">Executing : Table Must Exist  |  view_tasks </msg>
<msg timestamp="20170902 20:26:28.384" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_tasks' </msg>
<status status="PASS" endtime="20170902 20:26:28.385" starttime="20170902 20:26:28.384"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_traces</arg>
</arguments>
<msg timestamp="20170902 20:26:28.386" level="INFO">Executing : Table Must Exist  |  view_traces </msg>
<msg timestamp="20170902 20:26:28.386" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_traces' </msg>
<status status="PASS" endtime="20170902 20:26:28.387" starttime="20170902 20:26:28.385"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_usergroups</arg>
</arguments>
<msg timestamp="20170902 20:26:28.387" level="INFO">Executing : Table Must Exist  |  view_usergroups </msg>
<msg timestamp="20170902 20:26:28.387" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_usergroups' </msg>
<status status="PASS" endtime="20170902 20:26:28.388" starttime="20170902 20:26:28.387"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users</arg>
</arguments>
<msg timestamp="20170902 20:26:28.388" level="INFO">Executing : Table Must Exist  |  view_users </msg>
<msg timestamp="20170902 20:26:28.388" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users' </msg>
<status status="PASS" endtime="20170902 20:26:28.390" starttime="20170902 20:26:28.388"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_apps</arg>
</arguments>
<msg timestamp="20170902 20:26:28.390" level="INFO">Executing : Table Must Exist  |  view_users_apps </msg>
<msg timestamp="20170902 20:26:28.390" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_apps' </msg>
<status status="PASS" endtime="20170902 20:26:28.391" starttime="20170902 20:26:28.390"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_datas</arg>
</arguments>
<msg timestamp="20170902 20:26:28.391" level="INFO">Executing : Table Must Exist  |  view_users_datas </msg>
<msg timestamp="20170902 20:26:28.391" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_datas' </msg>
<status status="PASS" endtime="20170902 20:26:28.393" starttime="20170902 20:26:28.391"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_groups</arg>
</arguments>
<msg timestamp="20170902 20:26:28.394" level="INFO">Executing : Table Must Exist  |  view_users_groups </msg>
<msg timestamp="20170902 20:26:28.394" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_groups' </msg>
<status status="PASS" endtime="20170902 20:26:28.396" starttime="20170902 20:26:28.394"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_hosts</arg>
</arguments>
<msg timestamp="20170902 20:26:28.397" level="INFO">Executing : Table Must Exist  |  view_users_hosts </msg>
<msg timestamp="20170902 20:26:28.397" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_hosts' </msg>
<status status="PASS" endtime="20170902 20:26:28.399" starttime="20170902 20:26:28.397"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_sessions</arg>
</arguments>
<msg timestamp="20170902 20:26:28.399" level="INFO">Executing : Table Must Exist  |  view_users_sessions </msg>
<msg timestamp="20170902 20:26:28.399" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_sessions' </msg>
<status status="PASS" endtime="20170902 20:26:28.400" starttime="20170902 20:26:28.399"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_tasks</arg>
</arguments>
<msg timestamp="20170902 20:26:28.401" level="INFO">Executing : Table Must Exist  |  view_users_tasks </msg>
<msg timestamp="20170902 20:26:28.401" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_tasks' </msg>
<status status="PASS" endtime="20170902 20:26:28.402" starttime="20170902 20:26:28.400"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_traces</arg>
</arguments>
<msg timestamp="20170902 20:26:28.402" level="INFO">Executing : Table Must Exist  |  view_users_traces </msg>
<msg timestamp="20170902 20:26:28.402" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_traces' </msg>
<status status="PASS" endtime="20170902 20:26:28.404" starttime="20170902 20:26:28.402"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_usergroups</arg>
</arguments>
<msg timestamp="20170902 20:26:28.404" level="INFO">Executing : Table Must Exist  |  view_users_usergroups </msg>
<msg timestamp="20170902 20:26:28.404" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_usergroups' </msg>
<status status="PASS" endtime="20170902 20:26:28.405" starttime="20170902 20:26:28.404"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_users</arg>
</arguments>
<msg timestamp="20170902 20:26:28.405" level="INFO">Executing : Table Must Exist  |  view_users_users </msg>
<msg timestamp="20170902 20:26:28.405" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_users' </msg>
<status status="PASS" endtime="20170902 20:26:28.407" starttime="20170902 20:26:28.405"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_works</arg>
</arguments>
<msg timestamp="20170902 20:26:28.407" level="INFO">Executing : Table Must Exist  |  view_users_works </msg>
<msg timestamp="20170902 20:26:28.407" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_works' </msg>
<status status="PASS" endtime="20170902 20:26:28.408" starttime="20170902 20:26:28.407"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works</arg>
</arguments>
<msg timestamp="20170902 20:26:28.408" level="INFO">Executing : Table Must Exist  |  view_works </msg>
<msg timestamp="20170902 20:26:28.409" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works' </msg>
<status status="PASS" endtime="20170902 20:26:28.410" starttime="20170902 20:26:28.408"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works_for_billing</arg>
</arguments>
<msg timestamp="20170902 20:26:28.410" level="INFO">Executing : Table Must Exist  |  view_works_for_billing </msg>
<msg timestamp="20170902 20:26:28.410" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works_for_billing' </msg>
<status status="PASS" endtime="20170902 20:26:28.411" starttime="20170902 20:26:28.410"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works_for_billing_with_file_sizes</arg>
</arguments>
<msg timestamp="20170902 20:26:28.411" level="INFO">Executing : Table Must Exist  |  view_works_for_billing_with_file_sizes </msg>
<msg timestamp="20170902 20:26:28.412" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works_for_billing_with_file_sizes' </msg>
<status status="PASS" endtime="20170902 20:26:28.413" starttime="20170902 20:26:28.411"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works</arg>
</arguments>
<msg timestamp="20170902 20:26:28.413" level="INFO">Executing : Table Must Exist  |  works </msg>
<msg timestamp="20170902 20:26:28.413" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='works' </msg>
<status status="PASS" endtime="20170902 20:26:28.414" starttime="20170902 20:26:28.413"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works_history</arg>
</arguments>
<msg timestamp="20170902 20:26:28.414" level="INFO">Executing : Table Must Exist  |  works_history </msg>
<msg timestamp="20170902 20:26:28.414" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='works_history' </msg>
<status status="PASS" endtime="20170902 20:26:28.416" starttime="20170902 20:26:28.414"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170902 20:26:28.417" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170902 20:26:28.417" starttime="20170902 20:26:28.417"></status>
</kw>
<status status="PASS" endtime="20170902 20:26:28.418" starttime="20170902 20:26:28.416"></status>
</kw>
<status status="PASS" endtime="20170902 20:26:28.418" starttime="20170902 20:26:28.305"></status>
</kw>
<status status="PASS" endtime="20170902 20:26:28.418" starttime="20170902 20:26:28.305"></status>
</kw>
<kw name="Start XtremWeb Server" library="XWServer">
<arguments>
<arg>${DIST_XWHEP_PATH}</arg>
</arguments>
<kw name="File Should Exist" library="OperatingSystem">
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xtremweb.server.conf</arg>
</arguments>
<msg timestamp="20170902 20:26:28.420" html="yes" level="INFO">File '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf&lt;/a&gt;' exists.</msg>
<status status="PASS" endtime="20170902 20:26:28.421" starttime="20170902 20:26:28.418"></status>
</kw>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xtremweb.server.conf</arg>
</arguments>
<assign>
<var>${config_content}</var>
</assign>
<msg timestamp="20170902 20:26:28.421" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf&lt;/a&gt;'.</msg>
<msg timestamp="20170902 20:26:28.422" level="INFO">${config_content} = #
# Copyrights     : CNRS
# Author         : Oleg Lodygensky
# Acknowledgment : XtremWeb-HEP is based on XtremWeb 1.8.0 by inria : http://www.xtremweb.net/
# Web            : http://www.xtremweb-hep.o...</msg>
<status status="PASS" endtime="20170902 20:26:28.422" starttime="20170902 20:26:28.421"></status>
</kw>
<kw name="Remove String Using Regexp" library="String">
<doc>Removes ``patterns`` from the given ``string``.</doc>
<arguments>
<arg>${config_content}</arg>
<arg>LAUNCHERURL=${XWCONFIGURE.VALUES.XWUPGRADEURL}</arg>
</arguments>
<assign>
<var>${config_content_filtered}</var>
</assign>
<msg timestamp="20170902 20:26:28.423" level="INFO">${config_content_filtered} = #
# Copyrights     : CNRS
# Author         : Oleg Lodygensky
# Acknowledgment : XtremWeb-HEP is based on XtremWeb 1.8.0 by inria : http://www.xtremweb.net/
# Web            : http://www.xtremweb-hep.o...</msg>
<status status="PASS" endtime="20170902 20:26:28.423" starttime="20170902 20:26:28.422"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${config_content_filtered}</arg>
<arg>\## HTTPSPORT=443</arg>
<arg>HTTPSPORT=${XWCONFIGURE.VALUES.HTTPSPORT}</arg>
</arguments>
<assign>
<var>${config_content_filtered}</var>
</assign>
<msg timestamp="20170902 20:26:28.424" level="INFO">${config_content_filtered} = #
# Copyrights     : CNRS
# Author         : Oleg Lodygensky
# Acknowledgment : XtremWeb-HEP is based on XtremWeb 1.8.0 by inria : http://www.xtremweb.net/
# Web            : http://www.xtremweb-hep.o...</msg>
<status status="PASS" endtime="20170902 20:26:28.424" starttime="20170902 20:26:28.423"></status>
</kw>
<kw name="Create File" library="OperatingSystem">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xtremweb.server.conf</arg>
<arg>content=${config_content_filtered}</arg>
</arguments>
<msg timestamp="20170902 20:26:28.439" html="yes" level="INFO">Created file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.server.conf&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170902 20:26:28.439" starttime="20170902 20:26:28.424"></status>
</kw>
<kw name="Remove File" library="OperatingSystem">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<msg timestamp="20170902 20:26:28.440" html="yes" level="INFO">File '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;' does not exist.</msg>
<status status="PASS" endtime="20170902 20:26:28.440" starttime="20170902 20:26:28.439"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/bin/xtremweb.server console</arg>
<arg>shell=yes</arg>
<arg>stderr=STDOUT</arg>
<arg>stdout=${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<assign>
<var>${created_process}</var>
</assign>
<msg timestamp="20170902 20:26:28.442" level="INFO">Starting process:
/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/xtremweb.server console</msg>
<msg timestamp="20170902 20:26:28.445" level="INFO">${created_process} = 8</msg>
<status status="PASS" endtime="20170902 20:26:28.445" starttime="20170902 20:26:28.441"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SERVER_PROCESS}</arg>
<arg>${created_process}</arg>
</arguments>
<msg timestamp="20170902 20:26:28.446" level="INFO">${SERVER_PROCESS} = 8</msg>
<status status="PASS" endtime="20170902 20:26:28.446" starttime="20170902 20:26:28.445"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2 min</arg>
<arg>5 sec</arg>
<arg>Check XtremWeb Server Start From Log</arg>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<kw name="Check XtremWeb Server Start From Log" library="XWServer">
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<kw name="Log XtremWeb Process Log File" library="XWServer">
<kw name="Log File" library="OperatingSystem">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<msg timestamp="20170902 20:26:28.448" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170902 20:26:28.449" level="INFO"></msg>
<status status="PASS" endtime="20170902 20:26:28.450" starttime="20170902 20:26:28.447"></status>
</kw>
<status status="PASS" endtime="20170902 20:26:28.450" starttime="20170902 20:26:28.447"></status>
</kw>
<kw name="Grep File" library="OperatingSystem">
<doc>Returns the lines of the specified file that match the ``pattern``.</doc>
<arguments>
<arg>${log}</arg>
<arg>listening on port : ${XWCONFIGURE.VALUES.HTTPSPORT}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20170902 20:26:28.451" html="yes" level="INFO">Reading file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170902 20:26:28.452" level="INFO">0 out of 0 lines matched</msg>
<msg timestamp="20170902 20:26:28.453" level="INFO">${ret} = </msg>
<status status="PASS" endtime="20170902 20:26:28.454" starttime="20170902 20:26:28.450"></status>
</kw>
<kw name="Get Line Count" library="String">
<doc>Returns and logs the number of lines in the given string.</doc>
<arguments>
<arg>${ret}</arg>
</arguments>
<assign>
<var>${line_count}</var>
</assign>
<msg timestamp="20170902 20:26:28.455" level="INFO">0 lines</msg>
<msg timestamp="20170902 20:26:28.455" level="INFO">${line_count} = 0</msg>
<status status="PASS" endtime="20170902 20:26:28.455" starttime="20170902 20:26:28.455"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${line_count}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20170902 20:26:28.456" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20170902 20:26:28.456" level="FAIL">0 != 2</msg>
<status status="FAIL" endtime="20170902 20:26:28.457" starttime="20170902 20:26:28.456"></status>
</kw>
<status status="FAIL" endtime="20170902 20:26:28.457" starttime="20170902 20:26:28.447"></status>
</kw>
<kw name="Check XtremWeb Server Start From Log" library="XWServer">
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<kw name="Log XtremWeb Process Log File" library="XWServer">
<kw name="Log File" library="OperatingSystem">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<msg timestamp="20170902 20:26:33.459" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170902 20:26:33.469" level="INFO">Sat Sep  2 20:26:28 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : checking launch url
Sat Sep  2 20:26:28 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] WARNING : no launcher URL defined
Sat Sep  2 20:26:28 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : launching SmartSockets hub
[02/Sep/2017:20:26:31 +0000] [main_1] ERROR : setRole : role redefined ?! (was SERVER)
[02/Sep/2017:20:26:31 +0000] [xtremweb.database.DBConnPoolThread_main_1] INFO : Connection to database jdbc:mysql://localhost/xtremweb is ok, 70 created
[02/Sep/2017:20:26:31 +0000] [xtremweb.dispatcher.DBInterface_main_1] WARN : Can't retrieve any app
[02/Sep/2017:20:26:31 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't create ProxyValidator
[02/Sep/2017:20:26:31 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.io.FileNotFoundException: /tmp/castore (No such file or directory) (/tmp/castore (No such file or directory))
[02/Sep/2017:20:26:31 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't add CA certificates to keystore
[02/Sep/2017:20:26:31 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.lang.NullPointerException (null)
[02/Sep/2017:20:26:31 +0000] [xtremweb.dispatcher.HashTaskSet_TaskSet_14] INFO : TaskSet started (300000)
[02/Sep/2017:20:26:32 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : still waiting task set...
[02/Sep/2017:20:26:32 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : UDP server not started
[02/Sep/2017:20:26:32 +0000] [xtremweb.communications.TCPServer_TCPServerNIO_15] INFO : started, listening on port : 4321
log4j:WARN No appenders could be found for logger (org.eclipse.jetty.util.log).
log4j:WARN Please initialize the log4j system properly.
log4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.
[02/Sep/2017:20:26:33 +0000] [xtremweb.communications.HTTPServer_main_1] INFO : started, listening on port : 9443
[02/Sep/2017:20:26:33 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : FACEBOOK : java.net.MalformedURLException: no protocol: 
[02/Sep/2017:20:26:33 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : GOOGLE : java.net.MalformedURLException: no protocol: 
[02/Sep/2017:20:26:33 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : TWITTER : java.net.MalformedURLException: no protocol: 
[02/Sep/2017:20:26:33 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : YAHOO : java.net.MalformedURLException: no protocol: 
[02/Sep/2017:20:26:33 +0000] [main_1] ERROR : Can't add new entry to keystore
[02/Sep/2017:20:26:33 +0000] [main_1] WARN : javax.net.ssl.SSLHandshakeException: sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target (sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target)
[02/Sep/2017:20:26:33 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : XWHEP Dispatcher(10.6.0-head) started [Sat Sep 02 20:26:33 UTC 2017]
[02/Sep/2017:20:26:33 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : DB vendor  = mysql
[02/Sep/2017:20:26:33 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : mileStone  = 
[02/Sep/2017:20:26:33 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Time out   = 15000
[02/Sep/2017:20:26:33 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Disk opt'd = true
[02/Sep/2017:20:26:33 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Net  opt'd = true
[02/Sep/2017:20:26:33 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : NIO        = true
XWHEP Dispatcher started  Sat Sep 02 20:26:33 UTC 2017
Name             : vagrant-ubuntu-trusty-64
Version          : 10.6.0-head
Identity         : 
XWRole           : SERVER
Started on       : Sat Sep 02 20:26:30 UTC 2017
Scheduler        : xtremweb.dispatcher.MatchingScheduler
SmartSockets hub : 172.28.128.3/172.17.0.1/10.0.2.15-4329#d2.b9.7e.b2.ca.7c.00.00.be.b9.02.42.ec.75.e8.e2~vagrant
Server HTTP      : true
Alive            : 300
Alive time out   : 900
Polling time out : 15000
Optimize zip     : true
Optimize network : true
NIO              : true
Comm layer       : xtremweb.communications.TCPClient
Socket time out  : 60000
Socket retries   : 50
Max connections  : 200
TCP port         : 4321
UDP port         : 4323
HTPP  port       : 80
HTPPS port       : 9443
Sun RPC interposition port : 4328
Sandbox path : /usr/bin/lxc
Sandbox launch args : 
Host &lt;host&gt;&lt;uid&gt;755a37b0-e147-4c85-bb4e-ada53e38342a&lt;/uid&gt;&lt;accessrights&gt;0x755&lt;/accessrights&gt;&lt;name&gt;vagrant-ubuntu-trusty-64&lt;/name&gt;&lt;cpuload&gt;50&lt;/cpuload&gt;&lt;natedipaddr&gt;10.0.2.15&lt;/natedipaddr&gt;&lt;ipaddr&gt;10.0.2.15&lt;/ipaddr&gt;&lt;hwaddr&gt;&lt;/hwaddr&gt;&lt;timezone&gt;Etc/UTC&lt;/timezone&gt;&lt;os&gt;LINUX&lt;/os&gt;&lt;osversion&gt;3.13.0-129-generic&lt;/osversion&gt;&lt;javaversion&gt;1.8.0_141&lt;/javaversion&gt;&lt;javadatamodel&gt;64&lt;/javadatamodel&gt;&lt;cputype&gt;AMD64&lt;/cputype&gt;&lt;cpunb&gt;1&lt;/cpunb&gt;&lt;cpumodel&gt;unknown&lt;/cpumodel&gt;&lt;cpuspeed&gt;0&lt;/cpuspeed&gt;&lt;totalmem&gt;0&lt;/totalmem&gt;&lt;totalswap&gt;0&lt;/totalswap&gt;&lt;totaltmp&gt;40284&lt;/totaltmp&gt;&lt;freetmp&gt;37303&lt;/freetmp&gt;&lt;project&gt;&lt;/project&gt;&lt;active&gt;true&lt;/active&gt;&lt;incomingconnections&gt;false&lt;/incomingconnections&gt;&lt;available&gt;false&lt;/available&gt;&lt;pilotjob&gt;false&lt;/pilotjob&gt;&lt;sgid&gt;&lt;/sgid&gt;&lt;timeout&gt;15000&lt;/timeout&gt;&lt;traces&gt;false&lt;/traces&gt;&lt;acceptbin&gt;false&lt;/acceptbin&gt;&lt;version&gt;10.6.0-head&lt;/version&gt;&lt;/host&gt;
[02/Sep/2017:20:26:33 +0000] [xtremweb.communications.HTTPServer_HTTPServer_218] INFO : started, listening on port : 9443
</msg>
<status status="PASS" endtime="20170902 20:26:33.470" starttime="20170902 20:26:33.459"></status>
</kw>
<status status="PASS" endtime="20170902 20:26:33.470" starttime="20170902 20:26:33.458"></status>
</kw>
<kw name="Grep File" library="OperatingSystem">
<doc>Returns the lines of the specified file that match the ``pattern``.</doc>
<arguments>
<arg>${log}</arg>
<arg>listening on port : ${XWCONFIGURE.VALUES.HTTPSPORT}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20170902 20:26:33.470" html="yes" level="INFO">Reading file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170902 20:26:33.472" level="INFO">2 out of 59 lines matched</msg>
<msg timestamp="20170902 20:26:33.472" level="INFO">${ret} = [02/Sep/2017:20:26:33 +0000] [xtremweb.communications.HTTPServer_main_1] INFO : started, listening on port : 9443
[02/Sep/2017:20:26:33 +0000] [xtremweb.communications.HTTPServer_HTTPServer_218] INFO ...</msg>
<status status="PASS" endtime="20170902 20:26:33.472" starttime="20170902 20:26:33.470"></status>
</kw>
<kw name="Get Line Count" library="String">
<doc>Returns and logs the number of lines in the given string.</doc>
<arguments>
<arg>${ret}</arg>
</arguments>
<assign>
<var>${line_count}</var>
</assign>
<msg timestamp="20170902 20:26:33.473" level="INFO">2 lines</msg>
<msg timestamp="20170902 20:26:33.473" level="INFO">${line_count} = 2</msg>
<status status="PASS" endtime="20170902 20:26:33.473" starttime="20170902 20:26:33.473"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${line_count}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20170902 20:26:33.474" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170902 20:26:33.474" starttime="20170902 20:26:33.474"></status>
</kw>
<status status="PASS" endtime="20170902 20:26:33.474" starttime="20170902 20:26:33.458"></status>
</kw>
<status status="PASS" endtime="20170902 20:26:33.474" starttime="20170902 20:26:28.446"></status>
</kw>
<kw name="Log XtremWeb Process Log File" library="XWServer">
<kw name="Log File" library="OperatingSystem">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<msg timestamp="20170902 20:26:33.475" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170902 20:26:33.475" level="INFO">Sat Sep  2 20:26:28 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : checking launch url
Sat Sep  2 20:26:28 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] WARNING : no launcher URL defined
Sat Sep  2 20:26:28 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : launching SmartSockets hub
[02/Sep/2017:20:26:31 +0000] [main_1] ERROR : setRole : role redefined ?! (was SERVER)
[02/Sep/2017:20:26:31 +0000] [xtremweb.database.DBConnPoolThread_main_1] INFO : Connection to database jdbc:mysql://localhost/xtremweb is ok, 70 created
[02/Sep/2017:20:26:31 +0000] [xtremweb.dispatcher.DBInterface_main_1] WARN : Can't retrieve any app
[02/Sep/2017:20:26:31 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't create ProxyValidator
[02/Sep/2017:20:26:31 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.io.FileNotFoundException: /tmp/castore (No such file or directory) (/tmp/castore (No such file or directory))
[02/Sep/2017:20:26:31 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't add CA certificates to keystore
[02/Sep/2017:20:26:31 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.lang.NullPointerException (null)
[02/Sep/2017:20:26:31 +0000] [xtremweb.dispatcher.HashTaskSet_TaskSet_14] INFO : TaskSet started (300000)
[02/Sep/2017:20:26:32 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : still waiting task set...
[02/Sep/2017:20:26:32 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : UDP server not started
[02/Sep/2017:20:26:32 +0000] [xtremweb.communications.TCPServer_TCPServerNIO_15] INFO : started, listening on port : 4321
log4j:WARN No appenders could be found for logger (org.eclipse.jetty.util.log).
log4j:WARN Please initialize the log4j system properly.
log4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.
[02/Sep/2017:20:26:33 +0000] [xtremweb.communications.HTTPServer_main_1] INFO : started, listening on port : 9443
[02/Sep/2017:20:26:33 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : FACEBOOK : java.net.MalformedURLException: no protocol: 
[02/Sep/2017:20:26:33 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : GOOGLE : java.net.MalformedURLException: no protocol: 
[02/Sep/2017:20:26:33 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : TWITTER : java.net.MalformedURLException: no protocol: 
[02/Sep/2017:20:26:33 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : YAHOO : java.net.MalformedURLException: no protocol: 
[02/Sep/2017:20:26:33 +0000] [main_1] ERROR : Can't add new entry to keystore
[02/Sep/2017:20:26:33 +0000] [main_1] WARN : javax.net.ssl.SSLHandshakeException: sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target (sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target)
[02/Sep/2017:20:26:33 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : XWHEP Dispatcher(10.6.0-head) started [Sat Sep 02 20:26:33 UTC 2017]
[02/Sep/2017:20:26:33 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : DB vendor  = mysql
[02/Sep/2017:20:26:33 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : mileStone  = 
[02/Sep/2017:20:26:33 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Time out   = 15000
[02/Sep/2017:20:26:33 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Disk opt'd = true
[02/Sep/2017:20:26:33 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Net  opt'd = true
[02/Sep/2017:20:26:33 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : NIO        = true
XWHEP Dispatcher started  Sat Sep 02 20:26:33 UTC 2017
Name             : vagrant-ubuntu-trusty-64
Version          : 10.6.0-head
Identity         : 
XWRole           : SERVER
Started on       : Sat Sep 02 20:26:30 UTC 2017
Scheduler        : xtremweb.dispatcher.MatchingScheduler
SmartSockets hub : 172.28.128.3/172.17.0.1/10.0.2.15-4329#d2.b9.7e.b2.ca.7c.00.00.be.b9.02.42.ec.75.e8.e2~vagrant
Server HTTP      : true
Alive            : 300
Alive time out   : 900
Polling time out : 15000
Optimize zip     : true
Optimize network : true
NIO              : true
Comm layer       : xtremweb.communications.TCPClient
Socket time out  : 60000
Socket retries   : 50
Max connections  : 200
TCP port         : 4321
UDP port         : 4323
HTPP  port       : 80
HTPPS port       : 9443
Sun RPC interposition port : 4328
Sandbox path : /usr/bin/lxc
Sandbox launch args : 
Host &lt;host&gt;&lt;uid&gt;755a37b0-e147-4c85-bb4e-ada53e38342a&lt;/uid&gt;&lt;accessrights&gt;0x755&lt;/accessrights&gt;&lt;name&gt;vagrant-ubuntu-trusty-64&lt;/name&gt;&lt;cpuload&gt;50&lt;/cpuload&gt;&lt;natedipaddr&gt;10.0.2.15&lt;/natedipaddr&gt;&lt;ipaddr&gt;10.0.2.15&lt;/ipaddr&gt;&lt;hwaddr&gt;&lt;/hwaddr&gt;&lt;timezone&gt;Etc/UTC&lt;/timezone&gt;&lt;os&gt;LINUX&lt;/os&gt;&lt;osversion&gt;3.13.0-129-generic&lt;/osversion&gt;&lt;javaversion&gt;1.8.0_141&lt;/javaversion&gt;&lt;javadatamodel&gt;64&lt;/javadatamodel&gt;&lt;cputype&gt;AMD64&lt;/cputype&gt;&lt;cpunb&gt;1&lt;/cpunb&gt;&lt;cpumodel&gt;unknown&lt;/cpumodel&gt;&lt;cpuspeed&gt;0&lt;/cpuspeed&gt;&lt;totalmem&gt;0&lt;/totalmem&gt;&lt;totalswap&gt;0&lt;/totalswap&gt;&lt;totaltmp&gt;40284&lt;/totaltmp&gt;&lt;freetmp&gt;37303&lt;/freetmp&gt;&lt;project&gt;&lt;/project&gt;&lt;active&gt;true&lt;/active&gt;&lt;incomingconnections&gt;false&lt;/incomingconnections&gt;&lt;available&gt;false&lt;/available&gt;&lt;pilotjob&gt;false&lt;/pilotjob&gt;&lt;sgid&gt;&lt;/sgid&gt;&lt;timeout&gt;15000&lt;/timeout&gt;&lt;traces&gt;false&lt;/traces&gt;&lt;acceptbin&gt;false&lt;/acceptbin&gt;&lt;version&gt;10.6.0-head&lt;/version&gt;&lt;/host&gt;
[02/Sep/2017:20:26:33 +0000] [xtremweb.communications.HTTPServer_HTTPServer_218] INFO : started, listening on port : 9443
</msg>
<status status="PASS" endtime="20170902 20:26:33.475" starttime="20170902 20:26:33.475"></status>
</kw>
<status status="PASS" endtime="20170902 20:26:33.476" starttime="20170902 20:26:33.474"></status>
</kw>
<status status="PASS" endtime="20170902 20:26:33.476" starttime="20170902 20:26:28.418"></status>
</kw>
<kw name="Start XtremWeb Worker" library="XWWorker">
<arguments>
<arg>${DIST_XWHEP_PATH}</arg>
</arguments>
<kw name="File Should Exist" library="OperatingSystem">
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xtremweb.worker.conf</arg>
</arguments>
<msg timestamp="20170902 20:26:33.477" html="yes" level="INFO">File '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf&lt;/a&gt;' exists.</msg>
<status status="PASS" endtime="20170902 20:26:33.477" starttime="20170902 20:26:33.476"></status>
</kw>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xtremweb.worker.conf</arg>
</arguments>
<assign>
<var>${config_content}</var>
</assign>
<msg timestamp="20170902 20:26:33.477" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf&lt;/a&gt;'.</msg>
<msg timestamp="20170902 20:26:33.478" level="INFO">${config_content} = #
# Copyrights     : CNRS
# Author         : Oleg Lodygensky
# Acknowledgment : XtremWeb-HEP is based on XtremWeb 1.8.0 by inria : http://www.xtremweb.net/
# Web            : http://www.xtremweb-hep.o...</msg>
<status status="PASS" endtime="20170902 20:26:33.478" starttime="20170902 20:26:33.477"></status>
</kw>
<kw name="Remove String Using Regexp" library="String">
<doc>Removes ``patterns`` from the given ``string``.</doc>
<arguments>
<arg>${config_content}</arg>
<arg>LAUNCHERURL=${XWCONFIGURE.VALUES.XWUPGRADEURL}</arg>
</arguments>
<assign>
<var>${config_content_filtered}</var>
</assign>
<msg timestamp="20170902 20:26:33.479" level="INFO">${config_content_filtered} = #
# Copyrights     : CNRS
# Author         : Oleg Lodygensky
# Acknowledgment : XtremWeb-HEP is based on XtremWeb 1.8.0 by inria : http://www.xtremweb.net/
# Web            : http://www.xtremweb-hep.o...</msg>
<status status="PASS" endtime="20170902 20:26:33.479" starttime="20170902 20:26:33.478"></status>
</kw>
<kw name="Create File" library="OperatingSystem">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/conf/xtremweb.worker.conf</arg>
<arg>content=${config_content_filtered}</arg>
</arguments>
<msg timestamp="20170902 20:26:33.483" html="yes" level="INFO">Created file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/conf/xtremweb.worker.conf&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170902 20:26:33.483" starttime="20170902 20:26:33.479"></status>
</kw>
<kw name="Remove File" library="OperatingSystem">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.worker.process.log</arg>
</arguments>
<msg timestamp="20170902 20:26:33.484" html="yes" level="INFO">File '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.worker.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.worker.process.log&lt;/a&gt;' does not exist.</msg>
<status status="PASS" endtime="20170902 20:26:33.485" starttime="20170902 20:26:33.484"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/bin/xtremweb.worker console</arg>
<arg>shell=yes</arg>
<arg>stderr=STDOUT</arg>
<arg>stdout=${DIST_XWHEP_PATH}/xwhep.worker.process.log</arg>
</arguments>
<assign>
<var>${created_process}</var>
</assign>
<msg timestamp="20170902 20:26:33.486" level="INFO">Starting process:
/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin/xtremweb.worker console</msg>
<msg timestamp="20170902 20:26:33.489" level="INFO">${created_process} = 9</msg>
<status status="PASS" endtime="20170902 20:26:33.489" starttime="20170902 20:26:33.485"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${WORKER_PROCESS}</arg>
<arg>${created_process}</arg>
</arguments>
<msg timestamp="20170902 20:26:33.490" level="INFO">${WORKER_PROCESS} = 9</msg>
<status status="PASS" endtime="20170902 20:26:33.490" starttime="20170902 20:26:33.489"></status>
</kw>
<kw name="Log File" library="OperatingSystem">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.worker.process.log</arg>
</arguments>
<msg timestamp="20170902 20:26:33.490" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.worker.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.worker.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170902 20:26:33.492" level="INFO"></msg>
<status status="PASS" endtime="20170902 20:26:33.492" starttime="20170902 20:26:33.490"></status>
</kw>
<status status="PASS" endtime="20170902 20:26:33.492" starttime="20170902 20:26:33.476"></status>
</kw>
<status status="PASS" endtime="20170902 20:26:33.492" starttime="20170902 20:23:41.820"></status>
</kw>
<test id="s1-s3-t1" name="Test envoyer des données">
<kw type="setup" name="Begin XWtremWeb Command Test" library="XWCommon">
<kw name="Ping XWtremWeb Database" library="XWServer">
<kw name="Xtremweb Tables Must Exist" library="MySql">
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170902 20:26:33.497" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170902 20:26:33.499" starttime="20170902 20:26:33.496"></status>
</kw>
<status status="PASS" endtime="20170902 20:26:33.499" starttime="20170902 20:26:33.496"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>appTypes</arg>
</arguments>
<msg timestamp="20170902 20:26:33.500" level="INFO">Executing : Table Must Exist  |  appTypes </msg>
<msg timestamp="20170902 20:26:33.501" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='appTypes' </msg>
<status status="PASS" endtime="20170902 20:26:33.503" starttime="20170902 20:26:33.500"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps</arg>
</arguments>
<msg timestamp="20170902 20:26:33.505" level="INFO">Executing : Table Must Exist  |  apps </msg>
<msg timestamp="20170902 20:26:33.505" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='apps' </msg>
<status status="PASS" endtime="20170902 20:26:33.507" starttime="20170902 20:26:33.503"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps_history</arg>
</arguments>
<msg timestamp="20170902 20:26:33.508" level="INFO">Executing : Table Must Exist  |  apps_history </msg>
<msg timestamp="20170902 20:26:33.508" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='apps_history' </msg>
<status status="PASS" endtime="20170902 20:26:33.509" starttime="20170902 20:26:33.507"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>cpuTypes</arg>
</arguments>
<msg timestamp="20170902 20:26:33.509" level="INFO">Executing : Table Must Exist  |  cpuTypes </msg>
<msg timestamp="20170902 20:26:33.510" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='cpuTypes' </msg>
<status status="PASS" endtime="20170902 20:26:33.511" starttime="20170902 20:26:33.509"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>dataTypes</arg>
</arguments>
<msg timestamp="20170902 20:26:33.511" level="INFO">Executing : Table Must Exist  |  dataTypes </msg>
<msg timestamp="20170902 20:26:33.511" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='dataTypes' </msg>
<status status="PASS" endtime="20170902 20:26:33.512" starttime="20170902 20:26:33.511"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas</arg>
</arguments>
<msg timestamp="20170902 20:26:33.513" level="INFO">Executing : Table Must Exist  |  datas </msg>
<msg timestamp="20170902 20:26:33.513" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='datas' </msg>
<status status="PASS" endtime="20170902 20:26:33.514" starttime="20170902 20:26:33.512"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas_history</arg>
</arguments>
<msg timestamp="20170902 20:26:33.515" level="INFO">Executing : Table Must Exist  |  datas_history </msg>
<msg timestamp="20170902 20:26:33.515" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='datas_history' </msg>
<status status="PASS" endtime="20170902 20:26:33.517" starttime="20170902 20:26:33.514"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables</arg>
</arguments>
<msg timestamp="20170902 20:26:33.518" level="INFO">Executing : Table Must Exist  |  executables </msg>
<msg timestamp="20170902 20:26:33.518" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='executables' </msg>
<status status="PASS" endtime="20170902 20:26:33.520" starttime="20170902 20:26:33.517"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables_history</arg>
</arguments>
<msg timestamp="20170902 20:26:33.521" level="INFO">Executing : Table Must Exist  |  executables_history </msg>
<msg timestamp="20170902 20:26:33.521" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='executables_history' </msg>
<status status="PASS" endtime="20170902 20:26:33.522" starttime="20170902 20:26:33.520"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups</arg>
</arguments>
<msg timestamp="20170902 20:26:33.523" level="INFO">Executing : Table Must Exist  |  groups </msg>
<msg timestamp="20170902 20:26:33.523" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='groups' </msg>
<status status="PASS" endtime="20170902 20:26:33.526" starttime="20170902 20:26:33.523"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups_history</arg>
</arguments>
<msg timestamp="20170902 20:26:33.527" level="INFO">Executing : Table Must Exist  |  groups_history </msg>
<msg timestamp="20170902 20:26:33.527" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='groups_history' </msg>
<status status="PASS" endtime="20170902 20:26:33.529" starttime="20170902 20:26:33.527"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts</arg>
</arguments>
<msg timestamp="20170902 20:26:33.530" level="INFO">Executing : Table Must Exist  |  hosts </msg>
<msg timestamp="20170902 20:26:33.530" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='hosts' </msg>
<status status="PASS" endtime="20170902 20:26:33.531" starttime="20170902 20:26:33.529"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts_history</arg>
</arguments>
<msg timestamp="20170902 20:26:33.531" level="INFO">Executing : Table Must Exist  |  hosts_history </msg>
<msg timestamp="20170902 20:26:33.532" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='hosts_history' </msg>
<status status="PASS" endtime="20170902 20:26:33.533" starttime="20170902 20:26:33.531"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships</arg>
</arguments>
<msg timestamp="20170902 20:26:33.533" level="INFO">Executing : Table Must Exist  |  memberships </msg>
<msg timestamp="20170902 20:26:33.533" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='memberships' </msg>
<status status="PASS" endtime="20170902 20:26:33.534" starttime="20170902 20:26:33.533"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships_history</arg>
</arguments>
<msg timestamp="20170902 20:26:33.535" level="INFO">Executing : Table Must Exist  |  memberships_history </msg>
<msg timestamp="20170902 20:26:33.535" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='memberships_history' </msg>
<status status="PASS" endtime="20170902 20:26:33.537" starttime="20170902 20:26:33.535"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>oses</arg>
</arguments>
<msg timestamp="20170902 20:26:33.537" level="INFO">Executing : Table Must Exist  |  oses </msg>
<msg timestamp="20170902 20:26:33.537" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='oses' </msg>
<status status="PASS" endtime="20170902 20:26:33.539" starttime="20170902 20:26:33.537"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>packageTypes</arg>
</arguments>
<msg timestamp="20170902 20:26:33.540" level="INFO">Executing : Table Must Exist  |  packageTypes </msg>
<msg timestamp="20170902 20:26:33.540" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='packageTypes' </msg>
<status status="PASS" endtime="20170902 20:26:33.544" starttime="20170902 20:26:33.539"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions</arg>
</arguments>
<msg timestamp="20170902 20:26:33.545" level="INFO">Executing : Table Must Exist  |  sessions </msg>
<msg timestamp="20170902 20:26:33.545" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sessions' </msg>
<status status="PASS" endtime="20170902 20:26:33.546" starttime="20170902 20:26:33.545"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions_history</arg>
</arguments>
<msg timestamp="20170902 20:26:33.547" level="INFO">Executing : Table Must Exist  |  sessions_history </msg>
<msg timestamp="20170902 20:26:33.547" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sessions_history' </msg>
<status status="PASS" endtime="20170902 20:26:33.548" starttime="20170902 20:26:33.547"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes</arg>
</arguments>
<msg timestamp="20170902 20:26:33.549" level="INFO">Executing : Table Must Exist  |  sharedAppTypes </msg>
<msg timestamp="20170902 20:26:33.549" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedAppTypes' </msg>
<status status="PASS" endtime="20170902 20:26:33.550" starttime="20170902 20:26:33.549"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes_history</arg>
</arguments>
<msg timestamp="20170902 20:26:33.551" level="INFO">Executing : Table Must Exist  |  sharedAppTypes_history </msg>
<msg timestamp="20170902 20:26:33.551" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedAppTypes_history' </msg>
<status status="PASS" endtime="20170902 20:26:33.552" starttime="20170902 20:26:33.551"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes</arg>
</arguments>
<msg timestamp="20170902 20:26:33.553" level="INFO">Executing : Table Must Exist  |  sharedPackageTypes </msg>
<msg timestamp="20170902 20:26:33.553" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedPackageTypes' </msg>
<status status="PASS" endtime="20170902 20:26:33.554" starttime="20170902 20:26:33.552"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes_history</arg>
</arguments>
<msg timestamp="20170902 20:26:33.554" level="INFO">Executing : Table Must Exist  |  sharedPackageTypes_history </msg>
<msg timestamp="20170902 20:26:33.554" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedPackageTypes_history' </msg>
<status status="PASS" endtime="20170902 20:26:33.556" starttime="20170902 20:26:33.554"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>statuses</arg>
</arguments>
<msg timestamp="20170902 20:26:33.556" level="INFO">Executing : Table Must Exist  |  statuses </msg>
<msg timestamp="20170902 20:26:33.556" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='statuses' </msg>
<status status="PASS" endtime="20170902 20:26:33.558" starttime="20170902 20:26:33.556"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks</arg>
</arguments>
<msg timestamp="20170902 20:26:33.558" level="INFO">Executing : Table Must Exist  |  tasks </msg>
<msg timestamp="20170902 20:26:33.558" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='tasks' </msg>
<status status="PASS" endtime="20170902 20:26:33.559" starttime="20170902 20:26:33.558"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks_history</arg>
</arguments>
<msg timestamp="20170902 20:26:33.560" level="INFO">Executing : Table Must Exist  |  tasks_history </msg>
<msg timestamp="20170902 20:26:33.560" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='tasks_history' </msg>
<status status="PASS" endtime="20170902 20:26:33.561" starttime="20170902 20:26:33.560"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces</arg>
</arguments>
<msg timestamp="20170902 20:26:33.562" level="INFO">Executing : Table Must Exist  |  traces </msg>
<msg timestamp="20170902 20:26:33.562" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='traces' </msg>
<status status="PASS" endtime="20170902 20:26:33.563" starttime="20170902 20:26:33.562"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces_history</arg>
</arguments>
<msg timestamp="20170902 20:26:33.564" level="INFO">Executing : Table Must Exist  |  traces_history </msg>
<msg timestamp="20170902 20:26:33.564" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='traces_history' </msg>
<status status="PASS" endtime="20170902 20:26:33.565" starttime="20170902 20:26:33.563"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>userRights</arg>
</arguments>
<msg timestamp="20170902 20:26:33.566" level="INFO">Executing : Table Must Exist  |  userRights </msg>
<msg timestamp="20170902 20:26:33.566" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='userRights' </msg>
<status status="PASS" endtime="20170902 20:26:33.567" starttime="20170902 20:26:33.565"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups</arg>
</arguments>
<msg timestamp="20170902 20:26:33.568" level="INFO">Executing : Table Must Exist  |  usergroups </msg>
<msg timestamp="20170902 20:26:33.568" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='usergroups' </msg>
<status status="PASS" endtime="20170902 20:26:33.570" starttime="20170902 20:26:33.567"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups_history</arg>
</arguments>
<msg timestamp="20170902 20:26:33.570" level="INFO">Executing : Table Must Exist  |  usergroups_history </msg>
<msg timestamp="20170902 20:26:33.570" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='usergroups_history' </msg>
<status status="PASS" endtime="20170902 20:26:33.572" starttime="20170902 20:26:33.570"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users</arg>
</arguments>
<msg timestamp="20170902 20:26:33.572" level="INFO">Executing : Table Must Exist  |  users </msg>
<msg timestamp="20170902 20:26:33.572" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='users' </msg>
<status status="PASS" endtime="20170902 20:26:33.573" starttime="20170902 20:26:33.572"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users_history</arg>
</arguments>
<msg timestamp="20170902 20:26:33.574" level="INFO">Executing : Table Must Exist  |  users_history </msg>
<msg timestamp="20170902 20:26:33.574" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='users_history' </msg>
<status status="PASS" endtime="20170902 20:26:33.575" starttime="20170902 20:26:33.573"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>version</arg>
</arguments>
<msg timestamp="20170902 20:26:33.575" level="INFO">Executing : Table Must Exist  |  version </msg>
<msg timestamp="20170902 20:26:33.575" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='version' </msg>
<status status="PASS" endtime="20170902 20:26:33.576" starttime="20170902 20:26:33.575"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>versions</arg>
</arguments>
<msg timestamp="20170902 20:26:33.577" level="INFO">Executing : Table Must Exist  |  versions </msg>
<msg timestamp="20170902 20:26:33.577" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='versions' </msg>
<status status="PASS" endtime="20170902 20:26:33.578" starttime="20170902 20:26:33.576"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps</arg>
</arguments>
<msg timestamp="20170902 20:26:33.578" level="INFO">Executing : Table Must Exist  |  view_apps </msg>
<msg timestamp="20170902 20:26:33.578" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps' </msg>
<status status="PASS" endtime="20170902 20:26:33.580" starttime="20170902 20:26:33.578"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps_for_offering</arg>
</arguments>
<msg timestamp="20170902 20:26:33.581" level="INFO">Executing : Table Must Exist  |  view_apps_for_offering </msg>
<msg timestamp="20170902 20:26:33.581" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps_for_offering' </msg>
<status status="PASS" endtime="20170902 20:26:33.582" starttime="20170902 20:26:33.580"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps_for_offering_with_file_sizes</arg>
</arguments>
<msg timestamp="20170902 20:26:33.583" level="INFO">Executing : Table Must Exist  |  view_apps_for_offering_with_file_sizes </msg>
<msg timestamp="20170902 20:26:33.583" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps_for_offering_with_file_sizes' </msg>
<status status="PASS" endtime="20170902 20:26:33.584" starttime="20170902 20:26:33.582"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_datas</arg>
</arguments>
<msg timestamp="20170902 20:26:33.584" level="INFO">Executing : Table Must Exist  |  view_datas </msg>
<msg timestamp="20170902 20:26:33.584" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_datas' </msg>
<status status="PASS" endtime="20170902 20:26:33.586" starttime="20170902 20:26:33.584"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_executables</arg>
</arguments>
<msg timestamp="20170902 20:26:33.586" level="INFO">Executing : Table Must Exist  |  view_executables </msg>
<msg timestamp="20170902 20:26:33.586" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_executables' </msg>
<status status="PASS" endtime="20170902 20:26:33.587" starttime="20170902 20:26:33.586"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_groups</arg>
</arguments>
<msg timestamp="20170902 20:26:33.588" level="INFO">Executing : Table Must Exist  |  view_groups </msg>
<msg timestamp="20170902 20:26:33.588" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_groups' </msg>
<status status="PASS" endtime="20170902 20:26:33.589" starttime="20170902 20:26:33.588"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts</arg>
</arguments>
<msg timestamp="20170902 20:26:33.590" level="INFO">Executing : Table Must Exist  |  view_hosts </msg>
<msg timestamp="20170902 20:26:33.590" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts' </msg>
<status status="PASS" endtime="20170902 20:26:33.591" starttime="20170902 20:26:33.589"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_deployable</arg>
</arguments>
<msg timestamp="20170902 20:26:33.592" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_deployable </msg>
<msg timestamp="20170902 20:26:33.592" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_deployable' </msg>
<status status="PASS" endtime="20170902 20:26:33.593" starttime="20170902 20:26:33.591"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_deployable_and_shared</arg>
</arguments>
<msg timestamp="20170902 20:26:33.594" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_deployable_and_shared </msg>
<msg timestamp="20170902 20:26:33.594" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_deployable_and_shared' </msg>
<status status="PASS" endtime="20170902 20:26:33.595" starttime="20170902 20:26:33.593"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_shared</arg>
</arguments>
<msg timestamp="20170902 20:26:33.596" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_shared </msg>
<msg timestamp="20170902 20:26:33.596" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_shared' </msg>
<status status="PASS" endtime="20170902 20:26:33.598" starttime="20170902 20:26:33.596"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_sessions</arg>
</arguments>
<msg timestamp="20170902 20:26:33.598" level="INFO">Executing : Table Must Exist  |  view_sessions </msg>
<msg timestamp="20170902 20:26:33.598" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_sessions' </msg>
<status status="PASS" endtime="20170902 20:26:33.599" starttime="20170902 20:26:33.598"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_tasks</arg>
</arguments>
<msg timestamp="20170902 20:26:33.600" level="INFO">Executing : Table Must Exist  |  view_tasks </msg>
<msg timestamp="20170902 20:26:33.600" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_tasks' </msg>
<status status="PASS" endtime="20170902 20:26:33.601" starttime="20170902 20:26:33.599"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_traces</arg>
</arguments>
<msg timestamp="20170902 20:26:33.601" level="INFO">Executing : Table Must Exist  |  view_traces </msg>
<msg timestamp="20170902 20:26:33.601" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_traces' </msg>
<status status="PASS" endtime="20170902 20:26:33.603" starttime="20170902 20:26:33.601"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_usergroups</arg>
</arguments>
<msg timestamp="20170902 20:26:33.603" level="INFO">Executing : Table Must Exist  |  view_usergroups </msg>
<msg timestamp="20170902 20:26:33.603" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_usergroups' </msg>
<status status="PASS" endtime="20170902 20:26:33.604" starttime="20170902 20:26:33.603"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users</arg>
</arguments>
<msg timestamp="20170902 20:26:33.604" level="INFO">Executing : Table Must Exist  |  view_users </msg>
<msg timestamp="20170902 20:26:33.605" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users' </msg>
<status status="PASS" endtime="20170902 20:26:33.607" starttime="20170902 20:26:33.604"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_apps</arg>
</arguments>
<msg timestamp="20170902 20:26:33.607" level="INFO">Executing : Table Must Exist  |  view_users_apps </msg>
<msg timestamp="20170902 20:26:33.607" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_apps' </msg>
<status status="PASS" endtime="20170902 20:26:33.609" starttime="20170902 20:26:33.607"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_datas</arg>
</arguments>
<msg timestamp="20170902 20:26:33.609" level="INFO">Executing : Table Must Exist  |  view_users_datas </msg>
<msg timestamp="20170902 20:26:33.609" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_datas' </msg>
<status status="PASS" endtime="20170902 20:26:33.611" starttime="20170902 20:26:33.609"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_groups</arg>
</arguments>
<msg timestamp="20170902 20:26:33.611" level="INFO">Executing : Table Must Exist  |  view_users_groups </msg>
<msg timestamp="20170902 20:26:33.611" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_groups' </msg>
<status status="PASS" endtime="20170902 20:26:33.612" starttime="20170902 20:26:33.611"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_hosts</arg>
</arguments>
<msg timestamp="20170902 20:26:33.613" level="INFO">Executing : Table Must Exist  |  view_users_hosts </msg>
<msg timestamp="20170902 20:26:33.613" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_hosts' </msg>
<status status="PASS" endtime="20170902 20:26:33.614" starttime="20170902 20:26:33.613"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_sessions</arg>
</arguments>
<msg timestamp="20170902 20:26:33.615" level="INFO">Executing : Table Must Exist  |  view_users_sessions </msg>
<msg timestamp="20170902 20:26:33.615" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_sessions' </msg>
<status status="PASS" endtime="20170902 20:26:33.616" starttime="20170902 20:26:33.614"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_tasks</arg>
</arguments>
<msg timestamp="20170902 20:26:33.616" level="INFO">Executing : Table Must Exist  |  view_users_tasks </msg>
<msg timestamp="20170902 20:26:33.616" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_tasks' </msg>
<status status="PASS" endtime="20170902 20:26:33.617" starttime="20170902 20:26:33.616"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_traces</arg>
</arguments>
<msg timestamp="20170902 20:26:33.618" level="INFO">Executing : Table Must Exist  |  view_users_traces </msg>
<msg timestamp="20170902 20:26:33.618" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_traces' </msg>
<status status="PASS" endtime="20170902 20:26:33.619" starttime="20170902 20:26:33.618"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_usergroups</arg>
</arguments>
<msg timestamp="20170902 20:26:33.620" level="INFO">Executing : Table Must Exist  |  view_users_usergroups </msg>
<msg timestamp="20170902 20:26:33.620" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_usergroups' </msg>
<status status="PASS" endtime="20170902 20:26:33.621" starttime="20170902 20:26:33.620"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_users</arg>
</arguments>
<msg timestamp="20170902 20:26:33.622" level="INFO">Executing : Table Must Exist  |  view_users_users </msg>
<msg timestamp="20170902 20:26:33.622" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_users' </msg>
<status status="PASS" endtime="20170902 20:26:33.623" starttime="20170902 20:26:33.621"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_works</arg>
</arguments>
<msg timestamp="20170902 20:26:33.624" level="INFO">Executing : Table Must Exist  |  view_users_works </msg>
<msg timestamp="20170902 20:26:33.624" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_works' </msg>
<status status="PASS" endtime="20170902 20:26:33.625" starttime="20170902 20:26:33.623"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works</arg>
</arguments>
<msg timestamp="20170902 20:26:33.626" level="INFO">Executing : Table Must Exist  |  view_works </msg>
<msg timestamp="20170902 20:26:33.626" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works' </msg>
<status status="PASS" endtime="20170902 20:26:33.628" starttime="20170902 20:26:33.626"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works_for_billing</arg>
</arguments>
<msg timestamp="20170902 20:26:33.628" level="INFO">Executing : Table Must Exist  |  view_works_for_billing </msg>
<msg timestamp="20170902 20:26:33.628" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works_for_billing' </msg>
<status status="PASS" endtime="20170902 20:26:33.629" starttime="20170902 20:26:33.628"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works_for_billing_with_file_sizes</arg>
</arguments>
<msg timestamp="20170902 20:26:33.630" level="INFO">Executing : Table Must Exist  |  view_works_for_billing_with_file_sizes </msg>
<msg timestamp="20170902 20:26:33.630" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works_for_billing_with_file_sizes' </msg>
<status status="PASS" endtime="20170902 20:26:33.631" starttime="20170902 20:26:33.630"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works</arg>
</arguments>
<msg timestamp="20170902 20:26:33.632" level="INFO">Executing : Table Must Exist  |  works </msg>
<msg timestamp="20170902 20:26:33.632" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='works' </msg>
<status status="PASS" endtime="20170902 20:26:33.633" starttime="20170902 20:26:33.632"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works_history</arg>
</arguments>
<msg timestamp="20170902 20:26:33.634" level="INFO">Executing : Table Must Exist  |  works_history </msg>
<msg timestamp="20170902 20:26:33.634" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='works_history' </msg>
<status status="PASS" endtime="20170902 20:26:33.635" starttime="20170902 20:26:33.634"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170902 20:26:33.636" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170902 20:26:33.636" starttime="20170902 20:26:33.636"></status>
</kw>
<status status="PASS" endtime="20170902 20:26:33.637" starttime="20170902 20:26:33.635"></status>
</kw>
<status status="PASS" endtime="20170902 20:26:33.637" starttime="20170902 20:26:33.496"></status>
</kw>
<status status="PASS" endtime="20170902 20:26:33.637" starttime="20170902 20:26:33.495"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>TODO ping XWtremWeb server up</arg>
</arguments>
<msg timestamp="20170902 20:26:33.637" level="INFO">TODO ping XWtremWeb server up</msg>
<status status="PASS" endtime="20170902 20:26:33.637" starttime="20170902 20:26:33.637"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>TODO ping XWtremWeb worker up before one test</arg>
</arguments>
<msg timestamp="20170902 20:26:33.638" level="INFO">TODO ping XWtremWeb worker up before one test</msg>
<status status="PASS" endtime="20170902 20:26:33.638" starttime="20170902 20:26:33.638"></status>
</kw>
<kw name="Delete Fonctionnal Xtremweb Tables" library="MySql">
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170902 20:26:33.639" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170902 20:26:33.641" starttime="20170902 20:26:33.639"></status>
</kw>
<status status="PASS" endtime="20170902 20:26:33.641" starttime="20170902 20:26:33.639"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps</arg>
</arguments>
<msg timestamp="20170902 20:26:33.641" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM apps; </msg>
<status status="PASS" endtime="20170902 20:26:33.642" starttime="20170902 20:26:33.641"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps_history</arg>
</arguments>
<msg timestamp="20170902 20:26:33.643" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM apps_history; </msg>
<status status="PASS" endtime="20170902 20:26:33.644" starttime="20170902 20:26:33.643"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas</arg>
</arguments>
<msg timestamp="20170902 20:26:33.644" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM datas; </msg>
<status status="PASS" endtime="20170902 20:26:33.645" starttime="20170902 20:26:33.644"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas_history</arg>
</arguments>
<msg timestamp="20170902 20:26:33.645" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM datas_history; </msg>
<status status="PASS" endtime="20170902 20:26:33.645" starttime="20170902 20:26:33.645"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables</arg>
</arguments>
<msg timestamp="20170902 20:26:33.646" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM executables; </msg>
<status status="PASS" endtime="20170902 20:26:33.646" starttime="20170902 20:26:33.646"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables_history</arg>
</arguments>
<msg timestamp="20170902 20:26:33.647" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM executables_history; </msg>
<status status="PASS" endtime="20170902 20:26:33.647" starttime="20170902 20:26:33.646"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups</arg>
</arguments>
<msg timestamp="20170902 20:26:33.648" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM groups; </msg>
<status status="PASS" endtime="20170902 20:26:33.648" starttime="20170902 20:26:33.647"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups_history</arg>
</arguments>
<msg timestamp="20170902 20:26:33.649" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM groups_history; </msg>
<status status="PASS" endtime="20170902 20:26:33.649" starttime="20170902 20:26:33.648"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts</arg>
</arguments>
<msg timestamp="20170902 20:26:33.650" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM hosts; </msg>
<status status="PASS" endtime="20170902 20:26:33.650" starttime="20170902 20:26:33.650"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts_history</arg>
</arguments>
<msg timestamp="20170902 20:26:33.651" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM hosts_history; </msg>
<status status="PASS" endtime="20170902 20:26:33.651" starttime="20170902 20:26:33.651"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships</arg>
</arguments>
<msg timestamp="20170902 20:26:33.652" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM memberships; </msg>
<status status="PASS" endtime="20170902 20:26:33.652" starttime="20170902 20:26:33.651"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships_history</arg>
</arguments>
<msg timestamp="20170902 20:26:33.652" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM memberships_history; </msg>
<status status="PASS" endtime="20170902 20:26:33.653" starttime="20170902 20:26:33.652"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions</arg>
</arguments>
<msg timestamp="20170902 20:26:33.653" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sessions; </msg>
<status status="PASS" endtime="20170902 20:26:33.654" starttime="20170902 20:26:33.653"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions_history</arg>
</arguments>
<msg timestamp="20170902 20:26:33.654" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sessions_history; </msg>
<status status="PASS" endtime="20170902 20:26:33.654" starttime="20170902 20:26:33.654"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes</arg>
</arguments>
<msg timestamp="20170902 20:26:33.655" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedAppTypes; </msg>
<status status="PASS" endtime="20170902 20:26:33.655" starttime="20170902 20:26:33.655"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes_history</arg>
</arguments>
<msg timestamp="20170902 20:26:33.655" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedAppTypes_history; </msg>
<status status="PASS" endtime="20170902 20:26:33.656" starttime="20170902 20:26:33.655"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes</arg>
</arguments>
<msg timestamp="20170902 20:26:33.656" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedPackageTypes; </msg>
<status status="PASS" endtime="20170902 20:26:33.657" starttime="20170902 20:26:33.656"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes_history</arg>
</arguments>
<msg timestamp="20170902 20:26:33.657" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedPackageTypes_history; </msg>
<status status="PASS" endtime="20170902 20:26:33.657" starttime="20170902 20:26:33.657"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks</arg>
</arguments>
<msg timestamp="20170902 20:26:33.658" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM tasks; </msg>
<status status="PASS" endtime="20170902 20:26:33.658" starttime="20170902 20:26:33.658"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks_history</arg>
</arguments>
<msg timestamp="20170902 20:26:33.658" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM tasks_history; </msg>
<status status="PASS" endtime="20170902 20:26:33.659" starttime="20170902 20:26:33.658"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces</arg>
</arguments>
<msg timestamp="20170902 20:26:33.659" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM traces; </msg>
<status status="PASS" endtime="20170902 20:26:33.660" starttime="20170902 20:26:33.659"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces_history</arg>
</arguments>
<msg timestamp="20170902 20:26:33.660" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM traces_history; </msg>
<status status="PASS" endtime="20170902 20:26:33.661" starttime="20170902 20:26:33.660"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups</arg>
</arguments>
<msg timestamp="20170902 20:26:33.661" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM usergroups; </msg>
<status status="PASS" endtime="20170902 20:26:33.661" starttime="20170902 20:26:33.661"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups_history</arg>
</arguments>
<msg timestamp="20170902 20:26:33.662" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM usergroups_history; </msg>
<status status="PASS" endtime="20170902 20:26:33.662" starttime="20170902 20:26:33.661"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users_history</arg>
</arguments>
<msg timestamp="20170902 20:26:33.662" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM users_history; </msg>
<status status="PASS" endtime="20170902 20:26:33.663" starttime="20170902 20:26:33.662"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works</arg>
</arguments>
<msg timestamp="20170902 20:26:33.663" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM works; </msg>
<status status="PASS" endtime="20170902 20:26:33.664" starttime="20170902 20:26:33.663"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works_history</arg>
</arguments>
<msg timestamp="20170902 20:26:33.665" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM works_history; </msg>
<status status="PASS" endtime="20170902 20:26:33.665" starttime="20170902 20:26:33.664"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170902 20:26:33.666" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170902 20:26:33.666" starttime="20170902 20:26:33.666"></status>
</kw>
<status status="PASS" endtime="20170902 20:26:33.667" starttime="20170902 20:26:33.666"></status>
</kw>
<status status="PASS" endtime="20170902 20:26:33.667" starttime="20170902 20:26:33.638"></status>
</kw>
<status status="PASS" endtime="20170902 20:26:33.667" starttime="20170902 20:26:33.495"></status>
</kw>
<kw name="XWSENDDATACommand">
<doc>Usage : SENDDATA dataName [cpuType] [osName] [dataType] [accessRigths] [dataFile | dataURI | dataUID] : sends data and uploads data if dataFile provided</doc>
<arguments>
<arg>ls</arg>
<arg>macosx</arg>
<arg>x86_64</arg>
<arg>binary</arg>
<arg>/bin/ls</arg>
</arguments>
<assign>
<var>${uid}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd ${DIST_XWHEP_PATH}/bin &amp;&amp; ./xwsenddata ${dataName} ${osName} ${cpuType} ${dataType} ${dataFile-dataURI-dataUID}</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${cmd_result}</var>
</assign>
<msg timestamp="20170902 20:26:33.669" level="INFO">Starting process:
cd /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin &amp;&amp; ./xwsenddata ls macosx x86_64 binary /bin/ls</msg>
<msg timestamp="20170902 20:26:33.672" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170902 20:26:35.354" level="INFO">Process completed.</msg>
<msg timestamp="20170902 20:26:35.354" level="INFO">${cmd_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170902 20:26:35.354" starttime="20170902 20:26:33.668"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stderr}</arg>
</arguments>
<msg timestamp="20170902 20:26:35.355" level="INFO"></msg>
<status status="PASS" endtime="20170902 20:26:35.355" starttime="20170902 20:26:35.354"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
</arguments>
<msg timestamp="20170902 20:26:35.355" level="INFO">xw://vagrant-ubuntu-trusty-64/a3e09751-6a48-4b69-97c9-011b721c664c</msg>
<status status="PASS" endtime="20170902 20:26:35.356" starttime="20170902 20:26:35.355"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${cmd_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170902 20:26:35.356" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170902 20:26:35.356" starttime="20170902 20:26:35.356"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
<arg>-36</arg>
</arguments>
<assign>
<var>${uid}</var>
</assign>
<msg timestamp="20170902 20:26:35.357" level="INFO">${uid} = a3e09751-6a48-4b69-97c9-011b721c664c</msg>
<status status="PASS" endtime="20170902 20:26:35.357" starttime="20170902 20:26:35.356"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${uid}</arg>
</arguments>
<msg timestamp="20170902 20:26:35.357" level="INFO">a3e09751-6a48-4b69-97c9-011b721c664c</msg>
<status status="PASS" endtime="20170902 20:26:35.357" starttime="20170902 20:26:35.357"></status>
</kw>
<msg timestamp="20170902 20:26:35.357" level="INFO">${uid} = a3e09751-6a48-4b69-97c9-011b721c664c</msg>
<status status="PASS" endtime="20170902 20:26:35.357" starttime="20170902 20:26:33.668"></status>
</kw>
<kw name="Count From Datas Where Uid" library="XWServer">
<arguments>
<arg>${uid}</arg>
<arg>1</arg>
</arguments>
<kw name="Count From Table Where Uid" library="MySql">
<arguments>
<arg>datas</arg>
<arg>${uid}</arg>
<arg>${countExpected}</arg>
</arguments>
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170902 20:26:35.361" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170902 20:26:35.363" starttime="20170902 20:26:35.360"></status>
</kw>
<status status="PASS" endtime="20170902 20:26:35.363" starttime="20170902 20:26:35.359"></status>
</kw>
<kw name="Row Count Is Equal To X" library="DatabaseLibrary">
<doc>Check if the number of rows returned from `selectStatement` is equal to the value submitted. If not, then this</doc>
<arguments>
<arg>SELECT * FROM ${table} WHERE uid = '${uid}'</arg>
<arg>${countExpected}</arg>
</arguments>
<msg timestamp="20170902 20:26:35.364" level="INFO">Executing : Row Count Is Equal To X  |  SELECT * FROM datas WHERE uid = 'a3e09751-6a48-4b69-97c9-011b721c664c'  |  1 </msg>
<msg timestamp="20170902 20:26:35.364" level="INFO">Executing : Row Count  |  SELECT * FROM datas WHERE uid = 'a3e09751-6a48-4b69-97c9-011b721c664c' </msg>
<status status="PASS" endtime="20170902 20:26:35.365" starttime="20170902 20:26:35.363"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170902 20:26:35.366" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170902 20:26:35.366" starttime="20170902 20:26:35.366"></status>
</kw>
<status status="PASS" endtime="20170902 20:26:35.366" starttime="20170902 20:26:35.365"></status>
</kw>
<status status="PASS" endtime="20170902 20:26:35.366" starttime="20170902 20:26:35.359"></status>
</kw>
<status status="PASS" endtime="20170902 20:26:35.366" starttime="20170902 20:26:35.358"></status>
</kw>
<kw type="teardown" name="End XWtremWeb Command Test" library="XWCommon">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Nothing to do</arg>
</arguments>
<msg timestamp="20170902 20:26:35.369" level="INFO">Nothing to do</msg>
<status status="PASS" endtime="20170902 20:26:35.369" starttime="20170902 20:26:35.368"></status>
</kw>
<status status="PASS" endtime="20170902 20:26:35.369" starttime="20170902 20:26:35.367"></status>
</kw>
<doc>Envoyer des données avec la commande senddata</doc>
<tags>
<tag>CommandLine Tests</tag>
</tags>
<status status="PASS" endtime="20170902 20:26:35.370" critical="yes" starttime="20170902 20:26:33.492"></status>
</test>
<test id="s1-s3-t2" name="Test 1.1 Enregistrer l’application">
<kw type="setup" name="Begin XWtremWeb Command Test" library="XWCommon">
<kw name="Ping XWtremWeb Database" library="XWServer">
<kw name="Xtremweb Tables Must Exist" library="MySql">
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170902 20:26:35.376" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170902 20:26:35.378" starttime="20170902 20:26:35.376"></status>
</kw>
<status status="PASS" endtime="20170902 20:26:35.378" starttime="20170902 20:26:35.376"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>appTypes</arg>
</arguments>
<msg timestamp="20170902 20:26:35.378" level="INFO">Executing : Table Must Exist  |  appTypes </msg>
<msg timestamp="20170902 20:26:35.378" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='appTypes' </msg>
<status status="PASS" endtime="20170902 20:26:35.379" starttime="20170902 20:26:35.378"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps</arg>
</arguments>
<msg timestamp="20170902 20:26:35.380" level="INFO">Executing : Table Must Exist  |  apps </msg>
<msg timestamp="20170902 20:26:35.380" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='apps' </msg>
<status status="PASS" endtime="20170902 20:26:35.381" starttime="20170902 20:26:35.379"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps_history</arg>
</arguments>
<msg timestamp="20170902 20:26:35.381" level="INFO">Executing : Table Must Exist  |  apps_history </msg>
<msg timestamp="20170902 20:26:35.381" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='apps_history' </msg>
<status status="PASS" endtime="20170902 20:26:35.384" starttime="20170902 20:26:35.381"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>cpuTypes</arg>
</arguments>
<msg timestamp="20170902 20:26:35.386" level="INFO">Executing : Table Must Exist  |  cpuTypes </msg>
<msg timestamp="20170902 20:26:35.386" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='cpuTypes' </msg>
<status status="PASS" endtime="20170902 20:26:35.387" starttime="20170902 20:26:35.385"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>dataTypes</arg>
</arguments>
<msg timestamp="20170902 20:26:35.387" level="INFO">Executing : Table Must Exist  |  dataTypes </msg>
<msg timestamp="20170902 20:26:35.387" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='dataTypes' </msg>
<status status="PASS" endtime="20170902 20:26:35.389" starttime="20170902 20:26:35.387"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas</arg>
</arguments>
<msg timestamp="20170902 20:26:35.390" level="INFO">Executing : Table Must Exist  |  datas </msg>
<msg timestamp="20170902 20:26:35.390" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='datas' </msg>
<status status="PASS" endtime="20170902 20:26:35.391" starttime="20170902 20:26:35.389"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas_history</arg>
</arguments>
<msg timestamp="20170902 20:26:35.391" level="INFO">Executing : Table Must Exist  |  datas_history </msg>
<msg timestamp="20170902 20:26:35.391" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='datas_history' </msg>
<status status="PASS" endtime="20170902 20:26:35.392" starttime="20170902 20:26:35.391"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables</arg>
</arguments>
<msg timestamp="20170902 20:26:35.393" level="INFO">Executing : Table Must Exist  |  executables </msg>
<msg timestamp="20170902 20:26:35.393" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='executables' </msg>
<status status="PASS" endtime="20170902 20:26:35.394" starttime="20170902 20:26:35.392"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables_history</arg>
</arguments>
<msg timestamp="20170902 20:26:35.394" level="INFO">Executing : Table Must Exist  |  executables_history </msg>
<msg timestamp="20170902 20:26:35.394" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='executables_history' </msg>
<status status="PASS" endtime="20170902 20:26:35.395" starttime="20170902 20:26:35.394"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups</arg>
</arguments>
<msg timestamp="20170902 20:26:35.395" level="INFO">Executing : Table Must Exist  |  groups </msg>
<msg timestamp="20170902 20:26:35.395" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='groups' </msg>
<status status="PASS" endtime="20170902 20:26:35.396" starttime="20170902 20:26:35.395"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups_history</arg>
</arguments>
<msg timestamp="20170902 20:26:35.396" level="INFO">Executing : Table Must Exist  |  groups_history </msg>
<msg timestamp="20170902 20:26:35.396" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='groups_history' </msg>
<status status="PASS" endtime="20170902 20:26:35.397" starttime="20170902 20:26:35.396"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts</arg>
</arguments>
<msg timestamp="20170902 20:26:35.398" level="INFO">Executing : Table Must Exist  |  hosts </msg>
<msg timestamp="20170902 20:26:35.398" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='hosts' </msg>
<status status="PASS" endtime="20170902 20:26:35.399" starttime="20170902 20:26:35.397"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts_history</arg>
</arguments>
<msg timestamp="20170902 20:26:35.399" level="INFO">Executing : Table Must Exist  |  hosts_history </msg>
<msg timestamp="20170902 20:26:35.399" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='hosts_history' </msg>
<status status="PASS" endtime="20170902 20:26:35.400" starttime="20170902 20:26:35.399"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships</arg>
</arguments>
<msg timestamp="20170902 20:26:35.400" level="INFO">Executing : Table Must Exist  |  memberships </msg>
<msg timestamp="20170902 20:26:35.401" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='memberships' </msg>
<status status="PASS" endtime="20170902 20:26:35.401" starttime="20170902 20:26:35.400"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships_history</arg>
</arguments>
<msg timestamp="20170902 20:26:35.402" level="INFO">Executing : Table Must Exist  |  memberships_history </msg>
<msg timestamp="20170902 20:26:35.402" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='memberships_history' </msg>
<status status="PASS" endtime="20170902 20:26:35.403" starttime="20170902 20:26:35.402"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>oses</arg>
</arguments>
<msg timestamp="20170902 20:26:35.403" level="INFO">Executing : Table Must Exist  |  oses </msg>
<msg timestamp="20170902 20:26:35.403" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='oses' </msg>
<status status="PASS" endtime="20170902 20:26:35.404" starttime="20170902 20:26:35.403"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>packageTypes</arg>
</arguments>
<msg timestamp="20170902 20:26:35.404" level="INFO">Executing : Table Must Exist  |  packageTypes </msg>
<msg timestamp="20170902 20:26:35.404" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='packageTypes' </msg>
<status status="PASS" endtime="20170902 20:26:35.405" starttime="20170902 20:26:35.404"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions</arg>
</arguments>
<msg timestamp="20170902 20:26:35.406" level="INFO">Executing : Table Must Exist  |  sessions </msg>
<msg timestamp="20170902 20:26:35.406" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sessions' </msg>
<status status="PASS" endtime="20170902 20:26:35.408" starttime="20170902 20:26:35.405"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions_history</arg>
</arguments>
<msg timestamp="20170902 20:26:35.408" level="INFO">Executing : Table Must Exist  |  sessions_history </msg>
<msg timestamp="20170902 20:26:35.408" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sessions_history' </msg>
<status status="PASS" endtime="20170902 20:26:35.409" starttime="20170902 20:26:35.408"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes</arg>
</arguments>
<msg timestamp="20170902 20:26:35.410" level="INFO">Executing : Table Must Exist  |  sharedAppTypes </msg>
<msg timestamp="20170902 20:26:35.411" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedAppTypes' </msg>
<status status="PASS" endtime="20170902 20:26:35.412" starttime="20170902 20:26:35.409"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes_history</arg>
</arguments>
<msg timestamp="20170902 20:26:35.412" level="INFO">Executing : Table Must Exist  |  sharedAppTypes_history </msg>
<msg timestamp="20170902 20:26:35.412" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedAppTypes_history' </msg>
<status status="PASS" endtime="20170902 20:26:35.414" starttime="20170902 20:26:35.412"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes</arg>
</arguments>
<msg timestamp="20170902 20:26:35.414" level="INFO">Executing : Table Must Exist  |  sharedPackageTypes </msg>
<msg timestamp="20170902 20:26:35.414" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedPackageTypes' </msg>
<status status="PASS" endtime="20170902 20:26:35.415" starttime="20170902 20:26:35.414"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes_history</arg>
</arguments>
<msg timestamp="20170902 20:26:35.416" level="INFO">Executing : Table Must Exist  |  sharedPackageTypes_history </msg>
<msg timestamp="20170902 20:26:35.416" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedPackageTypes_history' </msg>
<status status="PASS" endtime="20170902 20:26:35.417" starttime="20170902 20:26:35.415"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>statuses</arg>
</arguments>
<msg timestamp="20170902 20:26:35.417" level="INFO">Executing : Table Must Exist  |  statuses </msg>
<msg timestamp="20170902 20:26:35.417" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='statuses' </msg>
<status status="PASS" endtime="20170902 20:26:35.418" starttime="20170902 20:26:35.417"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks</arg>
</arguments>
<msg timestamp="20170902 20:26:35.420" level="INFO">Executing : Table Must Exist  |  tasks </msg>
<msg timestamp="20170902 20:26:35.420" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='tasks' </msg>
<status status="PASS" endtime="20170902 20:26:35.422" starttime="20170902 20:26:35.418"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks_history</arg>
</arguments>
<msg timestamp="20170902 20:26:35.424" level="INFO">Executing : Table Must Exist  |  tasks_history </msg>
<msg timestamp="20170902 20:26:35.424" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='tasks_history' </msg>
<status status="PASS" endtime="20170902 20:26:35.425" starttime="20170902 20:26:35.423"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces</arg>
</arguments>
<msg timestamp="20170902 20:26:35.426" level="INFO">Executing : Table Must Exist  |  traces </msg>
<msg timestamp="20170902 20:26:35.426" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='traces' </msg>
<status status="PASS" endtime="20170902 20:26:35.428" starttime="20170902 20:26:35.426"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces_history</arg>
</arguments>
<msg timestamp="20170902 20:26:35.428" level="INFO">Executing : Table Must Exist  |  traces_history </msg>
<msg timestamp="20170902 20:26:35.428" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='traces_history' </msg>
<status status="PASS" endtime="20170902 20:26:35.431" starttime="20170902 20:26:35.428"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>userRights</arg>
</arguments>
<msg timestamp="20170902 20:26:35.434" level="INFO">Executing : Table Must Exist  |  userRights </msg>
<msg timestamp="20170902 20:26:35.434" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='userRights' </msg>
<status status="PASS" endtime="20170902 20:26:35.438" starttime="20170902 20:26:35.431"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups</arg>
</arguments>
<msg timestamp="20170902 20:26:35.439" level="INFO">Executing : Table Must Exist  |  usergroups </msg>
<msg timestamp="20170902 20:26:35.439" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='usergroups' </msg>
<status status="PASS" endtime="20170902 20:26:35.440" starttime="20170902 20:26:35.439"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups_history</arg>
</arguments>
<msg timestamp="20170902 20:26:35.442" level="INFO">Executing : Table Must Exist  |  usergroups_history </msg>
<msg timestamp="20170902 20:26:35.442" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='usergroups_history' </msg>
<status status="PASS" endtime="20170902 20:26:35.443" starttime="20170902 20:26:35.441"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users</arg>
</arguments>
<msg timestamp="20170902 20:26:35.443" level="INFO">Executing : Table Must Exist  |  users </msg>
<msg timestamp="20170902 20:26:35.443" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='users' </msg>
<status status="PASS" endtime="20170902 20:26:35.444" starttime="20170902 20:26:35.443"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users_history</arg>
</arguments>
<msg timestamp="20170902 20:26:35.445" level="INFO">Executing : Table Must Exist  |  users_history </msg>
<msg timestamp="20170902 20:26:35.445" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='users_history' </msg>
<status status="PASS" endtime="20170902 20:26:35.446" starttime="20170902 20:26:35.444"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>version</arg>
</arguments>
<msg timestamp="20170902 20:26:35.446" level="INFO">Executing : Table Must Exist  |  version </msg>
<msg timestamp="20170902 20:26:35.446" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='version' </msg>
<status status="PASS" endtime="20170902 20:26:35.447" starttime="20170902 20:26:35.446"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>versions</arg>
</arguments>
<msg timestamp="20170902 20:26:35.448" level="INFO">Executing : Table Must Exist  |  versions </msg>
<msg timestamp="20170902 20:26:35.448" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='versions' </msg>
<status status="PASS" endtime="20170902 20:26:35.449" starttime="20170902 20:26:35.447"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps</arg>
</arguments>
<msg timestamp="20170902 20:26:35.449" level="INFO">Executing : Table Must Exist  |  view_apps </msg>
<msg timestamp="20170902 20:26:35.449" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps' </msg>
<status status="PASS" endtime="20170902 20:26:35.450" starttime="20170902 20:26:35.449"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps_for_offering</arg>
</arguments>
<msg timestamp="20170902 20:26:35.451" level="INFO">Executing : Table Must Exist  |  view_apps_for_offering </msg>
<msg timestamp="20170902 20:26:35.451" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps_for_offering' </msg>
<status status="PASS" endtime="20170902 20:26:35.452" starttime="20170902 20:26:35.450"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps_for_offering_with_file_sizes</arg>
</arguments>
<msg timestamp="20170902 20:26:35.452" level="INFO">Executing : Table Must Exist  |  view_apps_for_offering_with_file_sizes </msg>
<msg timestamp="20170902 20:26:35.452" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps_for_offering_with_file_sizes' </msg>
<status status="PASS" endtime="20170902 20:26:35.453" starttime="20170902 20:26:35.452"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_datas</arg>
</arguments>
<msg timestamp="20170902 20:26:35.454" level="INFO">Executing : Table Must Exist  |  view_datas </msg>
<msg timestamp="20170902 20:26:35.454" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_datas' </msg>
<status status="PASS" endtime="20170902 20:26:35.455" starttime="20170902 20:26:35.453"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_executables</arg>
</arguments>
<msg timestamp="20170902 20:26:35.455" level="INFO">Executing : Table Must Exist  |  view_executables </msg>
<msg timestamp="20170902 20:26:35.455" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_executables' </msg>
<status status="PASS" endtime="20170902 20:26:35.456" starttime="20170902 20:26:35.455"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_groups</arg>
</arguments>
<msg timestamp="20170902 20:26:35.457" level="INFO">Executing : Table Must Exist  |  view_groups </msg>
<msg timestamp="20170902 20:26:35.457" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_groups' </msg>
<status status="PASS" endtime="20170902 20:26:35.458" starttime="20170902 20:26:35.457"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts</arg>
</arguments>
<msg timestamp="20170902 20:26:35.458" level="INFO">Executing : Table Must Exist  |  view_hosts </msg>
<msg timestamp="20170902 20:26:35.458" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts' </msg>
<status status="PASS" endtime="20170902 20:26:35.459" starttime="20170902 20:26:35.458"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_deployable</arg>
</arguments>
<msg timestamp="20170902 20:26:35.460" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_deployable </msg>
<msg timestamp="20170902 20:26:35.460" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_deployable' </msg>
<status status="PASS" endtime="20170902 20:26:35.461" starttime="20170902 20:26:35.459"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_deployable_and_shared</arg>
</arguments>
<msg timestamp="20170902 20:26:35.461" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_deployable_and_shared </msg>
<msg timestamp="20170902 20:26:35.461" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_deployable_and_shared' </msg>
<status status="PASS" endtime="20170902 20:26:35.463" starttime="20170902 20:26:35.461"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_shared</arg>
</arguments>
<msg timestamp="20170902 20:26:35.463" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_shared </msg>
<msg timestamp="20170902 20:26:35.463" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_shared' </msg>
<status status="PASS" endtime="20170902 20:26:35.465" starttime="20170902 20:26:35.463"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_sessions</arg>
</arguments>
<msg timestamp="20170902 20:26:35.465" level="INFO">Executing : Table Must Exist  |  view_sessions </msg>
<msg timestamp="20170902 20:26:35.465" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_sessions' </msg>
<status status="PASS" endtime="20170902 20:26:35.466" starttime="20170902 20:26:35.465"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_tasks</arg>
</arguments>
<msg timestamp="20170902 20:26:35.467" level="INFO">Executing : Table Must Exist  |  view_tasks </msg>
<msg timestamp="20170902 20:26:35.467" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_tasks' </msg>
<status status="PASS" endtime="20170902 20:26:35.468" starttime="20170902 20:26:35.466"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_traces</arg>
</arguments>
<msg timestamp="20170902 20:26:35.468" level="INFO">Executing : Table Must Exist  |  view_traces </msg>
<msg timestamp="20170902 20:26:35.468" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_traces' </msg>
<status status="PASS" endtime="20170902 20:26:35.469" starttime="20170902 20:26:35.468"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_usergroups</arg>
</arguments>
<msg timestamp="20170902 20:26:35.470" level="INFO">Executing : Table Must Exist  |  view_usergroups </msg>
<msg timestamp="20170902 20:26:35.470" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_usergroups' </msg>
<status status="PASS" endtime="20170902 20:26:35.470" starttime="20170902 20:26:35.469"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users</arg>
</arguments>
<msg timestamp="20170902 20:26:35.471" level="INFO">Executing : Table Must Exist  |  view_users </msg>
<msg timestamp="20170902 20:26:35.471" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users' </msg>
<status status="PASS" endtime="20170902 20:26:35.472" starttime="20170902 20:26:35.471"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_apps</arg>
</arguments>
<msg timestamp="20170902 20:26:35.472" level="INFO">Executing : Table Must Exist  |  view_users_apps </msg>
<msg timestamp="20170902 20:26:35.473" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_apps' </msg>
<status status="PASS" endtime="20170902 20:26:35.474" starttime="20170902 20:26:35.472"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_datas</arg>
</arguments>
<msg timestamp="20170902 20:26:35.474" level="INFO">Executing : Table Must Exist  |  view_users_datas </msg>
<msg timestamp="20170902 20:26:35.474" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_datas' </msg>
<status status="PASS" endtime="20170902 20:26:35.475" starttime="20170902 20:26:35.474"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_groups</arg>
</arguments>
<msg timestamp="20170902 20:26:35.476" level="INFO">Executing : Table Must Exist  |  view_users_groups </msg>
<msg timestamp="20170902 20:26:35.476" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_groups' </msg>
<status status="PASS" endtime="20170902 20:26:35.477" starttime="20170902 20:26:35.476"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_hosts</arg>
</arguments>
<msg timestamp="20170902 20:26:35.477" level="INFO">Executing : Table Must Exist  |  view_users_hosts </msg>
<msg timestamp="20170902 20:26:35.477" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_hosts' </msg>
<status status="PASS" endtime="20170902 20:26:35.478" starttime="20170902 20:26:35.477"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_sessions</arg>
</arguments>
<msg timestamp="20170902 20:26:35.479" level="INFO">Executing : Table Must Exist  |  view_users_sessions </msg>
<msg timestamp="20170902 20:26:35.479" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_sessions' </msg>
<status status="PASS" endtime="20170902 20:26:35.480" starttime="20170902 20:26:35.479"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_tasks</arg>
</arguments>
<msg timestamp="20170902 20:26:35.480" level="INFO">Executing : Table Must Exist  |  view_users_tasks </msg>
<msg timestamp="20170902 20:26:35.480" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_tasks' </msg>
<status status="PASS" endtime="20170902 20:26:35.481" starttime="20170902 20:26:35.480"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_traces</arg>
</arguments>
<msg timestamp="20170902 20:26:35.482" level="INFO">Executing : Table Must Exist  |  view_users_traces </msg>
<msg timestamp="20170902 20:26:35.482" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_traces' </msg>
<status status="PASS" endtime="20170902 20:26:35.483" starttime="20170902 20:26:35.481"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_usergroups</arg>
</arguments>
<msg timestamp="20170902 20:26:35.483" level="INFO">Executing : Table Must Exist  |  view_users_usergroups </msg>
<msg timestamp="20170902 20:26:35.483" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_usergroups' </msg>
<status status="PASS" endtime="20170902 20:26:35.484" starttime="20170902 20:26:35.483"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_users</arg>
</arguments>
<msg timestamp="20170902 20:26:35.485" level="INFO">Executing : Table Must Exist  |  view_users_users </msg>
<msg timestamp="20170902 20:26:35.485" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_users' </msg>
<status status="PASS" endtime="20170902 20:26:35.486" starttime="20170902 20:26:35.485"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_works</arg>
</arguments>
<msg timestamp="20170902 20:26:35.486" level="INFO">Executing : Table Must Exist  |  view_users_works </msg>
<msg timestamp="20170902 20:26:35.486" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_works' </msg>
<status status="PASS" endtime="20170902 20:26:35.488" starttime="20170902 20:26:35.486"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works</arg>
</arguments>
<msg timestamp="20170902 20:26:35.488" level="INFO">Executing : Table Must Exist  |  view_works </msg>
<msg timestamp="20170902 20:26:35.488" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works' </msg>
<status status="PASS" endtime="20170902 20:26:35.489" starttime="20170902 20:26:35.488"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works_for_billing</arg>
</arguments>
<msg timestamp="20170902 20:26:35.490" level="INFO">Executing : Table Must Exist  |  view_works_for_billing </msg>
<msg timestamp="20170902 20:26:35.490" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works_for_billing' </msg>
<status status="PASS" endtime="20170902 20:26:35.491" starttime="20170902 20:26:35.490"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works_for_billing_with_file_sizes</arg>
</arguments>
<msg timestamp="20170902 20:26:35.491" level="INFO">Executing : Table Must Exist  |  view_works_for_billing_with_file_sizes </msg>
<msg timestamp="20170902 20:26:35.491" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works_for_billing_with_file_sizes' </msg>
<status status="PASS" endtime="20170902 20:26:35.492" starttime="20170902 20:26:35.491"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works</arg>
</arguments>
<msg timestamp="20170902 20:26:35.493" level="INFO">Executing : Table Must Exist  |  works </msg>
<msg timestamp="20170902 20:26:35.493" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='works' </msg>
<status status="PASS" endtime="20170902 20:26:35.493" starttime="20170902 20:26:35.492"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works_history</arg>
</arguments>
<msg timestamp="20170902 20:26:35.494" level="INFO">Executing : Table Must Exist  |  works_history </msg>
<msg timestamp="20170902 20:26:35.494" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='works_history' </msg>
<status status="PASS" endtime="20170902 20:26:35.495" starttime="20170902 20:26:35.494"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170902 20:26:35.495" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170902 20:26:35.496" starttime="20170902 20:26:35.495"></status>
</kw>
<status status="PASS" endtime="20170902 20:26:35.496" starttime="20170902 20:26:35.495"></status>
</kw>
<status status="PASS" endtime="20170902 20:26:35.496" starttime="20170902 20:26:35.375"></status>
</kw>
<status status="PASS" endtime="20170902 20:26:35.496" starttime="20170902 20:26:35.375"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>TODO ping XWtremWeb server up</arg>
</arguments>
<msg timestamp="20170902 20:26:35.496" level="INFO">TODO ping XWtremWeb server up</msg>
<status status="PASS" endtime="20170902 20:26:35.496" starttime="20170902 20:26:35.496"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>TODO ping XWtremWeb worker up before one test</arg>
</arguments>
<msg timestamp="20170902 20:26:35.497" level="INFO">TODO ping XWtremWeb worker up before one test</msg>
<status status="PASS" endtime="20170902 20:26:35.497" starttime="20170902 20:26:35.497"></status>
</kw>
<kw name="Delete Fonctionnal Xtremweb Tables" library="MySql">
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170902 20:26:35.499" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170902 20:26:35.500" starttime="20170902 20:26:35.498"></status>
</kw>
<status status="PASS" endtime="20170902 20:26:35.500" starttime="20170902 20:26:35.497"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps</arg>
</arguments>
<msg timestamp="20170902 20:26:35.500" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM apps; </msg>
<status status="PASS" endtime="20170902 20:26:35.501" starttime="20170902 20:26:35.500"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps_history</arg>
</arguments>
<msg timestamp="20170902 20:26:35.501" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM apps_history; </msg>
<status status="PASS" endtime="20170902 20:26:35.502" starttime="20170902 20:26:35.501"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas</arg>
</arguments>
<msg timestamp="20170902 20:26:35.502" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM datas; </msg>
<status status="PASS" endtime="20170902 20:26:35.504" starttime="20170902 20:26:35.502"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas_history</arg>
</arguments>
<msg timestamp="20170902 20:26:35.504" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM datas_history; </msg>
<status status="PASS" endtime="20170902 20:26:35.505" starttime="20170902 20:26:35.504"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables</arg>
</arguments>
<msg timestamp="20170902 20:26:35.505" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM executables; </msg>
<status status="PASS" endtime="20170902 20:26:35.505" starttime="20170902 20:26:35.505"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables_history</arg>
</arguments>
<msg timestamp="20170902 20:26:35.506" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM executables_history; </msg>
<status status="PASS" endtime="20170902 20:26:35.506" starttime="20170902 20:26:35.506"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups</arg>
</arguments>
<msg timestamp="20170902 20:26:35.506" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM groups; </msg>
<status status="PASS" endtime="20170902 20:26:35.507" starttime="20170902 20:26:35.506"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups_history</arg>
</arguments>
<msg timestamp="20170902 20:26:35.507" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM groups_history; </msg>
<status status="PASS" endtime="20170902 20:26:35.507" starttime="20170902 20:26:35.507"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts</arg>
</arguments>
<msg timestamp="20170902 20:26:35.508" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM hosts; </msg>
<status status="PASS" endtime="20170902 20:26:35.508" starttime="20170902 20:26:35.508"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts_history</arg>
</arguments>
<msg timestamp="20170902 20:26:35.509" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM hosts_history; </msg>
<status status="PASS" endtime="20170902 20:26:35.509" starttime="20170902 20:26:35.508"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships</arg>
</arguments>
<msg timestamp="20170902 20:26:35.509" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM memberships; </msg>
<status status="PASS" endtime="20170902 20:26:35.510" starttime="20170902 20:26:35.509"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships_history</arg>
</arguments>
<msg timestamp="20170902 20:26:35.510" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM memberships_history; </msg>
<status status="PASS" endtime="20170902 20:26:35.510" starttime="20170902 20:26:35.510"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions</arg>
</arguments>
<msg timestamp="20170902 20:26:35.511" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sessions; </msg>
<status status="PASS" endtime="20170902 20:26:35.511" starttime="20170902 20:26:35.510"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions_history</arg>
</arguments>
<msg timestamp="20170902 20:26:35.511" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sessions_history; </msg>
<status status="PASS" endtime="20170902 20:26:35.512" starttime="20170902 20:26:35.511"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes</arg>
</arguments>
<msg timestamp="20170902 20:26:35.512" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedAppTypes; </msg>
<status status="PASS" endtime="20170902 20:26:35.512" starttime="20170902 20:26:35.512"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes_history</arg>
</arguments>
<msg timestamp="20170902 20:26:35.513" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedAppTypes_history; </msg>
<status status="PASS" endtime="20170902 20:26:35.513" starttime="20170902 20:26:35.513"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes</arg>
</arguments>
<msg timestamp="20170902 20:26:35.514" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedPackageTypes; </msg>
<status status="PASS" endtime="20170902 20:26:35.514" starttime="20170902 20:26:35.514"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes_history</arg>
</arguments>
<msg timestamp="20170902 20:26:35.515" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedPackageTypes_history; </msg>
<status status="PASS" endtime="20170902 20:26:35.515" starttime="20170902 20:26:35.514"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks</arg>
</arguments>
<msg timestamp="20170902 20:26:35.515" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM tasks; </msg>
<status status="PASS" endtime="20170902 20:26:35.516" starttime="20170902 20:26:35.515"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks_history</arg>
</arguments>
<msg timestamp="20170902 20:26:35.516" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM tasks_history; </msg>
<status status="PASS" endtime="20170902 20:26:35.516" starttime="20170902 20:26:35.516"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces</arg>
</arguments>
<msg timestamp="20170902 20:26:35.517" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM traces; </msg>
<status status="PASS" endtime="20170902 20:26:35.517" starttime="20170902 20:26:35.517"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces_history</arg>
</arguments>
<msg timestamp="20170902 20:26:35.518" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM traces_history; </msg>
<status status="PASS" endtime="20170902 20:26:35.518" starttime="20170902 20:26:35.517"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups</arg>
</arguments>
<msg timestamp="20170902 20:26:35.518" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM usergroups; </msg>
<status status="PASS" endtime="20170902 20:26:35.519" starttime="20170902 20:26:35.518"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups_history</arg>
</arguments>
<msg timestamp="20170902 20:26:35.519" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM usergroups_history; </msg>
<status status="PASS" endtime="20170902 20:26:35.519" starttime="20170902 20:26:35.519"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users_history</arg>
</arguments>
<msg timestamp="20170902 20:26:35.520" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM users_history; </msg>
<status status="PASS" endtime="20170902 20:26:35.520" starttime="20170902 20:26:35.520"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works</arg>
</arguments>
<msg timestamp="20170902 20:26:35.520" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM works; </msg>
<status status="PASS" endtime="20170902 20:26:35.521" starttime="20170902 20:26:35.520"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works_history</arg>
</arguments>
<msg timestamp="20170902 20:26:35.521" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM works_history; </msg>
<status status="PASS" endtime="20170902 20:26:35.522" starttime="20170902 20:26:35.521"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170902 20:26:35.522" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170902 20:26:35.522" starttime="20170902 20:26:35.522"></status>
</kw>
<status status="PASS" endtime="20170902 20:26:35.523" starttime="20170902 20:26:35.522"></status>
</kw>
<status status="PASS" endtime="20170902 20:26:35.523" starttime="20170902 20:26:35.497"></status>
</kw>
<status status="PASS" endtime="20170902 20:26:35.523" starttime="20170902 20:26:35.374"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Test 1.1 Enregistrer l’application</arg>
</arguments>
<msg timestamp="20170902 20:26:35.524" level="INFO">Test 1.1 Enregistrer l’application</msg>
<status status="PASS" endtime="20170902 20:26:35.524" starttime="20170902 20:26:35.524"></status>
</kw>
<kw name="XWSENDAPPCommand">
<doc>Usage : SENDAPP appName appType cpuType osName URI | UID : inserts/updates an application; URI or UID points to binary file ; application name must be the first parameter</doc>
<arguments>
<arg>ls</arg>
<arg>deployable</arg>
<arg>macosx</arg>
<arg>x86_64</arg>
<arg>/bin/ls</arg>
</arguments>
<assign>
<var>${uid}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cd ${DIST_XWHEP_PATH}/bin &amp;&amp; ./xwsendapp ${appName} ${appType} ${cpuType} ${osName} ${uri-udi}</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${cmd_result}</var>
</assign>
<msg timestamp="20170902 20:26:35.526" level="INFO">Starting process:
cd /home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/bin &amp;&amp; ./xwsendapp ls deployable macosx x86_64 /bin/ls</msg>
<msg timestamp="20170902 20:26:35.529" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20170902 20:26:36.563" level="INFO">Process completed.</msg>
<msg timestamp="20170902 20:26:36.564" level="INFO">${cmd_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20170902 20:26:36.564" starttime="20170902 20:26:35.525"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stderr}</arg>
</arguments>
<msg timestamp="20170902 20:26:36.565" level="INFO"></msg>
<status status="PASS" endtime="20170902 20:26:36.565" starttime="20170902 20:26:36.564"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
</arguments>
<msg timestamp="20170902 20:26:36.565" level="INFO">xw://vagrant-ubuntu-trusty-64/29a4a6b9-58d6-48b8-886d-3f59a7c46fd3</msg>
<status status="PASS" endtime="20170902 20:26:36.565" starttime="20170902 20:26:36.565"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${cmd_result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170902 20:26:36.566" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170902 20:26:36.566" starttime="20170902 20:26:36.565"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${cmd_result.stdout}</arg>
<arg>-36</arg>
</arguments>
<assign>
<var>${uid}</var>
</assign>
<msg timestamp="20170902 20:26:36.566" level="INFO">${uid} = 29a4a6b9-58d6-48b8-886d-3f59a7c46fd3</msg>
<status status="PASS" endtime="20170902 20:26:36.566" starttime="20170902 20:26:36.566"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${uid}</arg>
</arguments>
<msg timestamp="20170902 20:26:36.567" level="INFO">29a4a6b9-58d6-48b8-886d-3f59a7c46fd3</msg>
<status status="PASS" endtime="20170902 20:26:36.567" starttime="20170902 20:26:36.566"></status>
</kw>
<msg timestamp="20170902 20:26:36.567" level="INFO">${uid} = 29a4a6b9-58d6-48b8-886d-3f59a7c46fd3</msg>
<status status="PASS" endtime="20170902 20:26:36.567" starttime="20170902 20:26:35.524"></status>
</kw>
<kw name="Count From Apps Where Uid" library="XWServer">
<arguments>
<arg>${uid}</arg>
<arg>1</arg>
</arguments>
<kw name="Count From Table Where Uid" library="MySql">
<arguments>
<arg>apps</arg>
<arg>${uid}</arg>
<arg>${countExpected}</arg>
</arguments>
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170902 20:26:36.570" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170902 20:26:36.571" starttime="20170902 20:26:36.570"></status>
</kw>
<status status="PASS" endtime="20170902 20:26:36.572" starttime="20170902 20:26:36.569"></status>
</kw>
<kw name="Row Count Is Equal To X" library="DatabaseLibrary">
<doc>Check if the number of rows returned from `selectStatement` is equal to the value submitted. If not, then this</doc>
<arguments>
<arg>SELECT * FROM ${table} WHERE uid = '${uid}'</arg>
<arg>${countExpected}</arg>
</arguments>
<msg timestamp="20170902 20:26:36.572" level="INFO">Executing : Row Count Is Equal To X  |  SELECT * FROM apps WHERE uid = '29a4a6b9-58d6-48b8-886d-3f59a7c46fd3'  |  1 </msg>
<msg timestamp="20170902 20:26:36.572" level="INFO">Executing : Row Count  |  SELECT * FROM apps WHERE uid = '29a4a6b9-58d6-48b8-886d-3f59a7c46fd3' </msg>
<status status="PASS" endtime="20170902 20:26:36.576" starttime="20170902 20:26:36.572"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170902 20:26:36.577" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170902 20:26:36.577" starttime="20170902 20:26:36.576"></status>
</kw>
<status status="PASS" endtime="20170902 20:26:36.577" starttime="20170902 20:26:36.576"></status>
</kw>
<status status="PASS" endtime="20170902 20:26:36.577" starttime="20170902 20:26:36.569"></status>
</kw>
<status status="PASS" endtime="20170902 20:26:36.577" starttime="20170902 20:26:36.568"></status>
</kw>
<kw type="teardown" name="End XWtremWeb Command Test" library="XWCommon">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Nothing to do</arg>
</arguments>
<msg timestamp="20170902 20:26:36.579" level="INFO">Nothing to do</msg>
<status status="PASS" endtime="20170902 20:26:36.579" starttime="20170902 20:26:36.578"></status>
</kw>
<status status="PASS" endtime="20170902 20:26:36.579" starttime="20170902 20:26:36.578"></status>
</kw>
<doc>Les premiers tests doivent permettre de tester la prise en compte de la ligne de commande et de l’environnement, un ensemble de fichiers copiés dans le répertoire courant du job, du côté du worker. L’application “LS” correspond à ces pré requis.</doc>
<tags>
<tag>CommandLine Tests</tag>
</tags>
<status status="PASS" endtime="20170902 20:26:36.580" critical="yes" starttime="20170902 20:26:35.373"></status>
</test>
<test id="s1-s3-t3" name="Test 2.1 Soumettre un job sans ligne de commande">
<kw type="setup" name="Begin XWtremWeb Command Test" library="XWCommon">
<kw name="Ping XWtremWeb Database" library="XWServer">
<kw name="Xtremweb Tables Must Exist" library="MySql">
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170902 20:26:36.584" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170902 20:26:36.586" starttime="20170902 20:26:36.583"></status>
</kw>
<status status="PASS" endtime="20170902 20:26:36.586" starttime="20170902 20:26:36.583"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>appTypes</arg>
</arguments>
<msg timestamp="20170902 20:26:36.587" level="INFO">Executing : Table Must Exist  |  appTypes </msg>
<msg timestamp="20170902 20:26:36.587" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='appTypes' </msg>
<status status="PASS" endtime="20170902 20:26:36.588" starttime="20170902 20:26:36.586"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps</arg>
</arguments>
<msg timestamp="20170902 20:26:36.588" level="INFO">Executing : Table Must Exist  |  apps </msg>
<msg timestamp="20170902 20:26:36.588" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='apps' </msg>
<status status="PASS" endtime="20170902 20:26:36.589" starttime="20170902 20:26:36.588"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps_history</arg>
</arguments>
<msg timestamp="20170902 20:26:36.590" level="INFO">Executing : Table Must Exist  |  apps_history </msg>
<msg timestamp="20170902 20:26:36.590" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='apps_history' </msg>
<status status="PASS" endtime="20170902 20:26:36.591" starttime="20170902 20:26:36.590"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>cpuTypes</arg>
</arguments>
<msg timestamp="20170902 20:26:36.591" level="INFO">Executing : Table Must Exist  |  cpuTypes </msg>
<msg timestamp="20170902 20:26:36.591" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='cpuTypes' </msg>
<status status="PASS" endtime="20170902 20:26:36.592" starttime="20170902 20:26:36.591"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>dataTypes</arg>
</arguments>
<msg timestamp="20170902 20:26:36.592" level="INFO">Executing : Table Must Exist  |  dataTypes </msg>
<msg timestamp="20170902 20:26:36.592" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='dataTypes' </msg>
<status status="PASS" endtime="20170902 20:26:36.593" starttime="20170902 20:26:36.592"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas</arg>
</arguments>
<msg timestamp="20170902 20:26:36.594" level="INFO">Executing : Table Must Exist  |  datas </msg>
<msg timestamp="20170902 20:26:36.594" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='datas' </msg>
<status status="PASS" endtime="20170902 20:26:36.595" starttime="20170902 20:26:36.594"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas_history</arg>
</arguments>
<msg timestamp="20170902 20:26:36.595" level="INFO">Executing : Table Must Exist  |  datas_history </msg>
<msg timestamp="20170902 20:26:36.595" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='datas_history' </msg>
<status status="PASS" endtime="20170902 20:26:36.596" starttime="20170902 20:26:36.595"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables</arg>
</arguments>
<msg timestamp="20170902 20:26:36.596" level="INFO">Executing : Table Must Exist  |  executables </msg>
<msg timestamp="20170902 20:26:36.596" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='executables' </msg>
<status status="PASS" endtime="20170902 20:26:36.597" starttime="20170902 20:26:36.596"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables_history</arg>
</arguments>
<msg timestamp="20170902 20:26:36.598" level="INFO">Executing : Table Must Exist  |  executables_history </msg>
<msg timestamp="20170902 20:26:36.598" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='executables_history' </msg>
<status status="PASS" endtime="20170902 20:26:36.599" starttime="20170902 20:26:36.597"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups</arg>
</arguments>
<msg timestamp="20170902 20:26:36.599" level="INFO">Executing : Table Must Exist  |  groups </msg>
<msg timestamp="20170902 20:26:36.599" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='groups' </msg>
<status status="PASS" endtime="20170902 20:26:36.601" starttime="20170902 20:26:36.599"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups_history</arg>
</arguments>
<msg timestamp="20170902 20:26:36.601" level="INFO">Executing : Table Must Exist  |  groups_history </msg>
<msg timestamp="20170902 20:26:36.601" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='groups_history' </msg>
<status status="PASS" endtime="20170902 20:26:36.602" starttime="20170902 20:26:36.601"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts</arg>
</arguments>
<msg timestamp="20170902 20:26:36.602" level="INFO">Executing : Table Must Exist  |  hosts </msg>
<msg timestamp="20170902 20:26:36.602" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='hosts' </msg>
<status status="PASS" endtime="20170902 20:26:36.603" starttime="20170902 20:26:36.602"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts_history</arg>
</arguments>
<msg timestamp="20170902 20:26:36.603" level="INFO">Executing : Table Must Exist  |  hosts_history </msg>
<msg timestamp="20170902 20:26:36.604" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='hosts_history' </msg>
<status status="PASS" endtime="20170902 20:26:36.604" starttime="20170902 20:26:36.603"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships</arg>
</arguments>
<msg timestamp="20170902 20:26:36.605" level="INFO">Executing : Table Must Exist  |  memberships </msg>
<msg timestamp="20170902 20:26:36.605" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='memberships' </msg>
<status status="PASS" endtime="20170902 20:26:36.605" starttime="20170902 20:26:36.604"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships_history</arg>
</arguments>
<msg timestamp="20170902 20:26:36.606" level="INFO">Executing : Table Must Exist  |  memberships_history </msg>
<msg timestamp="20170902 20:26:36.606" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='memberships_history' </msg>
<status status="PASS" endtime="20170902 20:26:36.607" starttime="20170902 20:26:36.606"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>oses</arg>
</arguments>
<msg timestamp="20170902 20:26:36.607" level="INFO">Executing : Table Must Exist  |  oses </msg>
<msg timestamp="20170902 20:26:36.607" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='oses' </msg>
<status status="PASS" endtime="20170902 20:26:36.608" starttime="20170902 20:26:36.607"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>packageTypes</arg>
</arguments>
<msg timestamp="20170902 20:26:36.609" level="INFO">Executing : Table Must Exist  |  packageTypes </msg>
<msg timestamp="20170902 20:26:36.609" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='packageTypes' </msg>
<status status="PASS" endtime="20170902 20:26:36.610" starttime="20170902 20:26:36.608"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions</arg>
</arguments>
<msg timestamp="20170902 20:26:36.610" level="INFO">Executing : Table Must Exist  |  sessions </msg>
<msg timestamp="20170902 20:26:36.610" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sessions' </msg>
<status status="PASS" endtime="20170902 20:26:36.611" starttime="20170902 20:26:36.610"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions_history</arg>
</arguments>
<msg timestamp="20170902 20:26:36.611" level="INFO">Executing : Table Must Exist  |  sessions_history </msg>
<msg timestamp="20170902 20:26:36.611" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sessions_history' </msg>
<status status="PASS" endtime="20170902 20:26:36.613" starttime="20170902 20:26:36.611"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes</arg>
</arguments>
<msg timestamp="20170902 20:26:36.613" level="INFO">Executing : Table Must Exist  |  sharedAppTypes </msg>
<msg timestamp="20170902 20:26:36.613" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedAppTypes' </msg>
<status status="PASS" endtime="20170902 20:26:36.615" starttime="20170902 20:26:36.613"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes_history</arg>
</arguments>
<msg timestamp="20170902 20:26:36.615" level="INFO">Executing : Table Must Exist  |  sharedAppTypes_history </msg>
<msg timestamp="20170902 20:26:36.615" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedAppTypes_history' </msg>
<status status="PASS" endtime="20170902 20:26:36.616" starttime="20170902 20:26:36.615"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes</arg>
</arguments>
<msg timestamp="20170902 20:26:36.616" level="INFO">Executing : Table Must Exist  |  sharedPackageTypes </msg>
<msg timestamp="20170902 20:26:36.616" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedPackageTypes' </msg>
<status status="PASS" endtime="20170902 20:26:36.617" starttime="20170902 20:26:36.616"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes_history</arg>
</arguments>
<msg timestamp="20170902 20:26:36.618" level="INFO">Executing : Table Must Exist  |  sharedPackageTypes_history </msg>
<msg timestamp="20170902 20:26:36.618" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedPackageTypes_history' </msg>
<status status="PASS" endtime="20170902 20:26:36.620" starttime="20170902 20:26:36.617"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>statuses</arg>
</arguments>
<msg timestamp="20170902 20:26:36.621" level="INFO">Executing : Table Must Exist  |  statuses </msg>
<msg timestamp="20170902 20:26:36.621" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='statuses' </msg>
<status status="PASS" endtime="20170902 20:26:36.622" starttime="20170902 20:26:36.620"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks</arg>
</arguments>
<msg timestamp="20170902 20:26:36.623" level="INFO">Executing : Table Must Exist  |  tasks </msg>
<msg timestamp="20170902 20:26:36.623" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='tasks' </msg>
<status status="PASS" endtime="20170902 20:26:36.625" starttime="20170902 20:26:36.623"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks_history</arg>
</arguments>
<msg timestamp="20170902 20:26:36.625" level="INFO">Executing : Table Must Exist  |  tasks_history </msg>
<msg timestamp="20170902 20:26:36.625" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='tasks_history' </msg>
<status status="PASS" endtime="20170902 20:26:36.626" starttime="20170902 20:26:36.625"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces</arg>
</arguments>
<msg timestamp="20170902 20:26:36.627" level="INFO">Executing : Table Must Exist  |  traces </msg>
<msg timestamp="20170902 20:26:36.627" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='traces' </msg>
<status status="PASS" endtime="20170902 20:26:36.628" starttime="20170902 20:26:36.626"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces_history</arg>
</arguments>
<msg timestamp="20170902 20:26:36.628" level="INFO">Executing : Table Must Exist  |  traces_history </msg>
<msg timestamp="20170902 20:26:36.628" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='traces_history' </msg>
<status status="PASS" endtime="20170902 20:26:36.629" starttime="20170902 20:26:36.628"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>userRights</arg>
</arguments>
<msg timestamp="20170902 20:26:36.629" level="INFO">Executing : Table Must Exist  |  userRights </msg>
<msg timestamp="20170902 20:26:36.630" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='userRights' </msg>
<status status="PASS" endtime="20170902 20:26:36.630" starttime="20170902 20:26:36.629"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups</arg>
</arguments>
<msg timestamp="20170902 20:26:36.631" level="INFO">Executing : Table Must Exist  |  usergroups </msg>
<msg timestamp="20170902 20:26:36.631" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='usergroups' </msg>
<status status="PASS" endtime="20170902 20:26:36.632" starttime="20170902 20:26:36.631"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups_history</arg>
</arguments>
<msg timestamp="20170902 20:26:36.632" level="INFO">Executing : Table Must Exist  |  usergroups_history </msg>
<msg timestamp="20170902 20:26:36.632" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='usergroups_history' </msg>
<status status="PASS" endtime="20170902 20:26:36.637" starttime="20170902 20:26:36.632"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users</arg>
</arguments>
<msg timestamp="20170902 20:26:36.640" level="INFO">Executing : Table Must Exist  |  users </msg>
<msg timestamp="20170902 20:26:36.640" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='users' </msg>
<status status="PASS" endtime="20170902 20:26:36.641" starttime="20170902 20:26:36.639"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users_history</arg>
</arguments>
<msg timestamp="20170902 20:26:36.642" level="INFO">Executing : Table Must Exist  |  users_history </msg>
<msg timestamp="20170902 20:26:36.642" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='users_history' </msg>
<status status="PASS" endtime="20170902 20:26:36.643" starttime="20170902 20:26:36.641"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>version</arg>
</arguments>
<msg timestamp="20170902 20:26:36.643" level="INFO">Executing : Table Must Exist  |  version </msg>
<msg timestamp="20170902 20:26:36.643" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='version' </msg>
<status status="PASS" endtime="20170902 20:26:36.644" starttime="20170902 20:26:36.643"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>versions</arg>
</arguments>
<msg timestamp="20170902 20:26:36.645" level="INFO">Executing : Table Must Exist  |  versions </msg>
<msg timestamp="20170902 20:26:36.645" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='versions' </msg>
<status status="PASS" endtime="20170902 20:26:36.646" starttime="20170902 20:26:36.644"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps</arg>
</arguments>
<msg timestamp="20170902 20:26:36.647" level="INFO">Executing : Table Must Exist  |  view_apps </msg>
<msg timestamp="20170902 20:26:36.647" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps' </msg>
<status status="PASS" endtime="20170902 20:26:36.648" starttime="20170902 20:26:36.647"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps_for_offering</arg>
</arguments>
<msg timestamp="20170902 20:26:36.649" level="INFO">Executing : Table Must Exist  |  view_apps_for_offering </msg>
<msg timestamp="20170902 20:26:36.649" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps_for_offering' </msg>
<status status="PASS" endtime="20170902 20:26:36.650" starttime="20170902 20:26:36.649"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps_for_offering_with_file_sizes</arg>
</arguments>
<msg timestamp="20170902 20:26:36.650" level="INFO">Executing : Table Must Exist  |  view_apps_for_offering_with_file_sizes </msg>
<msg timestamp="20170902 20:26:36.650" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps_for_offering_with_file_sizes' </msg>
<status status="PASS" endtime="20170902 20:26:36.652" starttime="20170902 20:26:36.650"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_datas</arg>
</arguments>
<msg timestamp="20170902 20:26:36.652" level="INFO">Executing : Table Must Exist  |  view_datas </msg>
<msg timestamp="20170902 20:26:36.652" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_datas' </msg>
<status status="PASS" endtime="20170902 20:26:36.653" starttime="20170902 20:26:36.652"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_executables</arg>
</arguments>
<msg timestamp="20170902 20:26:36.654" level="INFO">Executing : Table Must Exist  |  view_executables </msg>
<msg timestamp="20170902 20:26:36.654" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_executables' </msg>
<status status="PASS" endtime="20170902 20:26:36.655" starttime="20170902 20:26:36.654"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_groups</arg>
</arguments>
<msg timestamp="20170902 20:26:36.656" level="INFO">Executing : Table Must Exist  |  view_groups </msg>
<msg timestamp="20170902 20:26:36.656" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_groups' </msg>
<status status="PASS" endtime="20170902 20:26:36.657" starttime="20170902 20:26:36.655"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts</arg>
</arguments>
<msg timestamp="20170902 20:26:36.658" level="INFO">Executing : Table Must Exist  |  view_hosts </msg>
<msg timestamp="20170902 20:26:36.658" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts' </msg>
<status status="PASS" endtime="20170902 20:26:36.659" starttime="20170902 20:26:36.657"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_deployable</arg>
</arguments>
<msg timestamp="20170902 20:26:36.659" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_deployable </msg>
<msg timestamp="20170902 20:26:36.659" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_deployable' </msg>
<status status="PASS" endtime="20170902 20:26:36.662" starttime="20170902 20:26:36.659"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_deployable_and_shared</arg>
</arguments>
<msg timestamp="20170902 20:26:36.663" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_deployable_and_shared </msg>
<msg timestamp="20170902 20:26:36.663" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_deployable_and_shared' </msg>
<status status="PASS" endtime="20170902 20:26:36.666" starttime="20170902 20:26:36.663"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_shared</arg>
</arguments>
<msg timestamp="20170902 20:26:36.667" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_shared </msg>
<msg timestamp="20170902 20:26:36.667" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_shared' </msg>
<status status="PASS" endtime="20170902 20:26:36.670" starttime="20170902 20:26:36.666"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_sessions</arg>
</arguments>
<msg timestamp="20170902 20:26:36.670" level="INFO">Executing : Table Must Exist  |  view_sessions </msg>
<msg timestamp="20170902 20:26:36.671" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_sessions' </msg>
<status status="PASS" endtime="20170902 20:26:36.672" starttime="20170902 20:26:36.670"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_tasks</arg>
</arguments>
<msg timestamp="20170902 20:26:36.672" level="INFO">Executing : Table Must Exist  |  view_tasks </msg>
<msg timestamp="20170902 20:26:36.673" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_tasks' </msg>
<status status="PASS" endtime="20170902 20:26:36.674" starttime="20170902 20:26:36.672"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_traces</arg>
</arguments>
<msg timestamp="20170902 20:26:36.674" level="INFO">Executing : Table Must Exist  |  view_traces </msg>
<msg timestamp="20170902 20:26:36.674" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_traces' </msg>
<status status="PASS" endtime="20170902 20:26:36.675" starttime="20170902 20:26:36.674"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_usergroups</arg>
</arguments>
<msg timestamp="20170902 20:26:36.676" level="INFO">Executing : Table Must Exist  |  view_usergroups </msg>
<msg timestamp="20170902 20:26:36.676" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_usergroups' </msg>
<status status="PASS" endtime="20170902 20:26:36.677" starttime="20170902 20:26:36.675"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users</arg>
</arguments>
<msg timestamp="20170902 20:26:36.678" level="INFO">Executing : Table Must Exist  |  view_users </msg>
<msg timestamp="20170902 20:26:36.678" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users' </msg>
<status status="PASS" endtime="20170902 20:26:36.679" starttime="20170902 20:26:36.677"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_apps</arg>
</arguments>
<msg timestamp="20170902 20:26:36.680" level="INFO">Executing : Table Must Exist  |  view_users_apps </msg>
<msg timestamp="20170902 20:26:36.680" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_apps' </msg>
<status status="PASS" endtime="20170902 20:26:36.682" starttime="20170902 20:26:36.680"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_datas</arg>
</arguments>
<msg timestamp="20170902 20:26:36.682" level="INFO">Executing : Table Must Exist  |  view_users_datas </msg>
<msg timestamp="20170902 20:26:36.682" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_datas' </msg>
<status status="PASS" endtime="20170902 20:26:36.684" starttime="20170902 20:26:36.682"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_groups</arg>
</arguments>
<msg timestamp="20170902 20:26:36.684" level="INFO">Executing : Table Must Exist  |  view_users_groups </msg>
<msg timestamp="20170902 20:26:36.684" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_groups' </msg>
<status status="PASS" endtime="20170902 20:26:36.685" starttime="20170902 20:26:36.684"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_hosts</arg>
</arguments>
<msg timestamp="20170902 20:26:36.686" level="INFO">Executing : Table Must Exist  |  view_users_hosts </msg>
<msg timestamp="20170902 20:26:36.686" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_hosts' </msg>
<status status="PASS" endtime="20170902 20:26:36.687" starttime="20170902 20:26:36.685"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_sessions</arg>
</arguments>
<msg timestamp="20170902 20:26:36.688" level="INFO">Executing : Table Must Exist  |  view_users_sessions </msg>
<msg timestamp="20170902 20:26:36.688" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_sessions' </msg>
<status status="PASS" endtime="20170902 20:26:36.689" starttime="20170902 20:26:36.687"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_tasks</arg>
</arguments>
<msg timestamp="20170902 20:26:36.689" level="INFO">Executing : Table Must Exist  |  view_users_tasks </msg>
<msg timestamp="20170902 20:26:36.689" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_tasks' </msg>
<status status="PASS" endtime="20170902 20:26:36.690" starttime="20170902 20:26:36.689"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_traces</arg>
</arguments>
<msg timestamp="20170902 20:26:36.691" level="INFO">Executing : Table Must Exist  |  view_users_traces </msg>
<msg timestamp="20170902 20:26:36.691" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_traces' </msg>
<status status="PASS" endtime="20170902 20:26:36.692" starttime="20170902 20:26:36.690"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_usergroups</arg>
</arguments>
<msg timestamp="20170902 20:26:36.693" level="INFO">Executing : Table Must Exist  |  view_users_usergroups </msg>
<msg timestamp="20170902 20:26:36.693" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_usergroups' </msg>
<status status="PASS" endtime="20170902 20:26:36.694" starttime="20170902 20:26:36.692"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_users</arg>
</arguments>
<msg timestamp="20170902 20:26:36.694" level="INFO">Executing : Table Must Exist  |  view_users_users </msg>
<msg timestamp="20170902 20:26:36.694" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_users' </msg>
<status status="PASS" endtime="20170902 20:26:36.696" starttime="20170902 20:26:36.694"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_works</arg>
</arguments>
<msg timestamp="20170902 20:26:36.696" level="INFO">Executing : Table Must Exist  |  view_users_works </msg>
<msg timestamp="20170902 20:26:36.696" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_works' </msg>
<status status="PASS" endtime="20170902 20:26:36.698" starttime="20170902 20:26:36.696"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works</arg>
</arguments>
<msg timestamp="20170902 20:26:36.698" level="INFO">Executing : Table Must Exist  |  view_works </msg>
<msg timestamp="20170902 20:26:36.698" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works' </msg>
<status status="PASS" endtime="20170902 20:26:36.699" starttime="20170902 20:26:36.698"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works_for_billing</arg>
</arguments>
<msg timestamp="20170902 20:26:36.700" level="INFO">Executing : Table Must Exist  |  view_works_for_billing </msg>
<msg timestamp="20170902 20:26:36.700" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works_for_billing' </msg>
<status status="PASS" endtime="20170902 20:26:36.701" starttime="20170902 20:26:36.700"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works_for_billing_with_file_sizes</arg>
</arguments>
<msg timestamp="20170902 20:26:36.701" level="INFO">Executing : Table Must Exist  |  view_works_for_billing_with_file_sizes </msg>
<msg timestamp="20170902 20:26:36.702" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works_for_billing_with_file_sizes' </msg>
<status status="PASS" endtime="20170902 20:26:36.702" starttime="20170902 20:26:36.701"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works</arg>
</arguments>
<msg timestamp="20170902 20:26:36.703" level="INFO">Executing : Table Must Exist  |  works </msg>
<msg timestamp="20170902 20:26:36.703" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='works' </msg>
<status status="PASS" endtime="20170902 20:26:36.704" starttime="20170902 20:26:36.703"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works_history</arg>
</arguments>
<msg timestamp="20170902 20:26:36.704" level="INFO">Executing : Table Must Exist  |  works_history </msg>
<msg timestamp="20170902 20:26:36.704" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='works_history' </msg>
<status status="PASS" endtime="20170902 20:26:36.705" starttime="20170902 20:26:36.704"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170902 20:26:36.706" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170902 20:26:36.706" starttime="20170902 20:26:36.706"></status>
</kw>
<status status="PASS" endtime="20170902 20:26:36.706" starttime="20170902 20:26:36.706"></status>
</kw>
<status status="PASS" endtime="20170902 20:26:36.707" starttime="20170902 20:26:36.583"></status>
</kw>
<status status="PASS" endtime="20170902 20:26:36.707" starttime="20170902 20:26:36.582"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>TODO ping XWtremWeb server up</arg>
</arguments>
<msg timestamp="20170902 20:26:36.707" level="INFO">TODO ping XWtremWeb server up</msg>
<status status="PASS" endtime="20170902 20:26:36.707" starttime="20170902 20:26:36.707"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>TODO ping XWtremWeb worker up before one test</arg>
</arguments>
<msg timestamp="20170902 20:26:36.707" level="INFO">TODO ping XWtremWeb worker up before one test</msg>
<status status="PASS" endtime="20170902 20:26:36.707" starttime="20170902 20:26:36.707"></status>
</kw>
<kw name="Delete Fonctionnal Xtremweb Tables" library="MySql">
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170902 20:26:36.709" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170902 20:26:36.709" starttime="20170902 20:26:36.708"></status>
</kw>
<status status="PASS" endtime="20170902 20:26:36.710" starttime="20170902 20:26:36.708"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps</arg>
</arguments>
<msg timestamp="20170902 20:26:36.710" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM apps; </msg>
<status status="PASS" endtime="20170902 20:26:36.712" starttime="20170902 20:26:36.710"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps_history</arg>
</arguments>
<msg timestamp="20170902 20:26:36.713" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM apps_history; </msg>
<status status="PASS" endtime="20170902 20:26:36.714" starttime="20170902 20:26:36.713"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas</arg>
</arguments>
<msg timestamp="20170902 20:26:36.714" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM datas; </msg>
<status status="PASS" endtime="20170902 20:26:36.716" starttime="20170902 20:26:36.714"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas_history</arg>
</arguments>
<msg timestamp="20170902 20:26:36.716" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM datas_history; </msg>
<status status="PASS" endtime="20170902 20:26:36.717" starttime="20170902 20:26:36.716"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables</arg>
</arguments>
<msg timestamp="20170902 20:26:36.717" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM executables; </msg>
<status status="PASS" endtime="20170902 20:26:36.718" starttime="20170902 20:26:36.717"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables_history</arg>
</arguments>
<msg timestamp="20170902 20:26:36.718" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM executables_history; </msg>
<status status="PASS" endtime="20170902 20:26:36.719" starttime="20170902 20:26:36.718"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups</arg>
</arguments>
<msg timestamp="20170902 20:26:36.719" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM groups; </msg>
<status status="PASS" endtime="20170902 20:26:36.719" starttime="20170902 20:26:36.719"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups_history</arg>
</arguments>
<msg timestamp="20170902 20:26:36.720" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM groups_history; </msg>
<status status="PASS" endtime="20170902 20:26:36.720" starttime="20170902 20:26:36.720"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts</arg>
</arguments>
<msg timestamp="20170902 20:26:36.721" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM hosts; </msg>
<status status="PASS" endtime="20170902 20:26:36.721" starttime="20170902 20:26:36.720"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts_history</arg>
</arguments>
<msg timestamp="20170902 20:26:36.721" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM hosts_history; </msg>
<status status="PASS" endtime="20170902 20:26:36.722" starttime="20170902 20:26:36.721"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships</arg>
</arguments>
<msg timestamp="20170902 20:26:36.722" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM memberships; </msg>
<status status="PASS" endtime="20170902 20:26:36.722" starttime="20170902 20:26:36.722"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships_history</arg>
</arguments>
<msg timestamp="20170902 20:26:36.723" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM memberships_history; </msg>
<status status="PASS" endtime="20170902 20:26:36.723" starttime="20170902 20:26:36.723"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions</arg>
</arguments>
<msg timestamp="20170902 20:26:36.723" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sessions; </msg>
<status status="PASS" endtime="20170902 20:26:36.724" starttime="20170902 20:26:36.723"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions_history</arg>
</arguments>
<msg timestamp="20170902 20:26:36.724" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sessions_history; </msg>
<status status="PASS" endtime="20170902 20:26:36.724" starttime="20170902 20:26:36.724"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes</arg>
</arguments>
<msg timestamp="20170902 20:26:36.725" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedAppTypes; </msg>
<status status="PASS" endtime="20170902 20:26:36.725" starttime="20170902 20:26:36.724"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes_history</arg>
</arguments>
<msg timestamp="20170902 20:26:36.725" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedAppTypes_history; </msg>
<status status="PASS" endtime="20170902 20:26:36.726" starttime="20170902 20:26:36.725"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes</arg>
</arguments>
<msg timestamp="20170902 20:26:36.726" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedPackageTypes; </msg>
<status status="PASS" endtime="20170902 20:26:36.726" starttime="20170902 20:26:36.726"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes_history</arg>
</arguments>
<msg timestamp="20170902 20:26:36.727" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedPackageTypes_history; </msg>
<status status="PASS" endtime="20170902 20:26:36.727" starttime="20170902 20:26:36.727"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks</arg>
</arguments>
<msg timestamp="20170902 20:26:36.728" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM tasks; </msg>
<status status="PASS" endtime="20170902 20:26:36.728" starttime="20170902 20:26:36.727"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks_history</arg>
</arguments>
<msg timestamp="20170902 20:26:36.728" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM tasks_history; </msg>
<status status="PASS" endtime="20170902 20:26:36.729" starttime="20170902 20:26:36.728"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces</arg>
</arguments>
<msg timestamp="20170902 20:26:36.729" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM traces; </msg>
<status status="PASS" endtime="20170902 20:26:36.729" starttime="20170902 20:26:36.729"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces_history</arg>
</arguments>
<msg timestamp="20170902 20:26:36.730" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM traces_history; </msg>
<status status="PASS" endtime="20170902 20:26:36.730" starttime="20170902 20:26:36.730"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups</arg>
</arguments>
<msg timestamp="20170902 20:26:36.731" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM usergroups; </msg>
<status status="PASS" endtime="20170902 20:26:36.731" starttime="20170902 20:26:36.730"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups_history</arg>
</arguments>
<msg timestamp="20170902 20:26:36.731" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM usergroups_history; </msg>
<status status="PASS" endtime="20170902 20:26:36.732" starttime="20170902 20:26:36.731"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users_history</arg>
</arguments>
<msg timestamp="20170902 20:26:36.732" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM users_history; </msg>
<status status="PASS" endtime="20170902 20:26:36.732" starttime="20170902 20:26:36.732"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works</arg>
</arguments>
<msg timestamp="20170902 20:26:36.733" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM works; </msg>
<status status="PASS" endtime="20170902 20:26:36.733" starttime="20170902 20:26:36.732"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works_history</arg>
</arguments>
<msg timestamp="20170902 20:26:36.733" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM works_history; </msg>
<status status="PASS" endtime="20170902 20:26:36.734" starttime="20170902 20:26:36.733"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170902 20:26:36.734" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170902 20:26:36.735" starttime="20170902 20:26:36.734"></status>
</kw>
<status status="PASS" endtime="20170902 20:26:36.735" starttime="20170902 20:26:36.734"></status>
</kw>
<status status="PASS" endtime="20170902 20:26:36.735" starttime="20170902 20:26:36.708"></status>
</kw>
<status status="PASS" endtime="20170902 20:26:36.735" starttime="20170902 20:26:36.582"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>TODO</arg>
</arguments>
<msg timestamp="20170902 20:26:36.736" level="INFO">TODO</msg>
<status status="PASS" endtime="20170902 20:26:36.736" starttime="20170902 20:26:36.735"></status>
</kw>
<kw type="teardown" name="End XWtremWeb Command Test" library="XWCommon">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Nothing to do</arg>
</arguments>
<msg timestamp="20170902 20:26:36.737" level="INFO">Nothing to do</msg>
<status status="PASS" endtime="20170902 20:26:36.737" starttime="20170902 20:26:36.737"></status>
</kw>
<status status="PASS" endtime="20170902 20:26:36.737" starttime="20170902 20:26:36.736"></status>
</kw>
<doc>Ces tests doivent prouver que la ligne de commande est prise en charge correctement.</doc>
<tags>
<tag>CommandLine Tests</tag>
</tags>
<status status="PASS" endtime="20170902 20:26:36.737" critical="yes" starttime="20170902 20:26:36.581"></status>
</test>
<test id="s1-s3-t4" name="Test 2.2 Soumettre un job avec ligne de commande">
<kw type="setup" name="Begin XWtremWeb Command Test" library="XWCommon">
<kw name="Ping XWtremWeb Database" library="XWServer">
<kw name="Xtremweb Tables Must Exist" library="MySql">
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170902 20:26:36.741" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170902 20:26:36.742" starttime="20170902 20:26:36.740"></status>
</kw>
<status status="PASS" endtime="20170902 20:26:36.742" starttime="20170902 20:26:36.740"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>appTypes</arg>
</arguments>
<msg timestamp="20170902 20:26:36.742" level="INFO">Executing : Table Must Exist  |  appTypes </msg>
<msg timestamp="20170902 20:26:36.742" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='appTypes' </msg>
<status status="PASS" endtime="20170902 20:26:36.743" starttime="20170902 20:26:36.742"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps</arg>
</arguments>
<msg timestamp="20170902 20:26:36.744" level="INFO">Executing : Table Must Exist  |  apps </msg>
<msg timestamp="20170902 20:26:36.744" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='apps' </msg>
<status status="PASS" endtime="20170902 20:26:36.745" starttime="20170902 20:26:36.744"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps_history</arg>
</arguments>
<msg timestamp="20170902 20:26:36.745" level="INFO">Executing : Table Must Exist  |  apps_history </msg>
<msg timestamp="20170902 20:26:36.745" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='apps_history' </msg>
<status status="PASS" endtime="20170902 20:26:36.746" starttime="20170902 20:26:36.745"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>cpuTypes</arg>
</arguments>
<msg timestamp="20170902 20:26:36.746" level="INFO">Executing : Table Must Exist  |  cpuTypes </msg>
<msg timestamp="20170902 20:26:36.746" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='cpuTypes' </msg>
<status status="PASS" endtime="20170902 20:26:36.747" starttime="20170902 20:26:36.746"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>dataTypes</arg>
</arguments>
<msg timestamp="20170902 20:26:36.748" level="INFO">Executing : Table Must Exist  |  dataTypes </msg>
<msg timestamp="20170902 20:26:36.748" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='dataTypes' </msg>
<status status="PASS" endtime="20170902 20:26:36.749" starttime="20170902 20:26:36.747"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas</arg>
</arguments>
<msg timestamp="20170902 20:26:36.749" level="INFO">Executing : Table Must Exist  |  datas </msg>
<msg timestamp="20170902 20:26:36.749" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='datas' </msg>
<status status="PASS" endtime="20170902 20:26:36.750" starttime="20170902 20:26:36.749"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas_history</arg>
</arguments>
<msg timestamp="20170902 20:26:36.750" level="INFO">Executing : Table Must Exist  |  datas_history </msg>
<msg timestamp="20170902 20:26:36.750" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='datas_history' </msg>
<status status="PASS" endtime="20170902 20:26:36.751" starttime="20170902 20:26:36.750"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables</arg>
</arguments>
<msg timestamp="20170902 20:26:36.752" level="INFO">Executing : Table Must Exist  |  executables </msg>
<msg timestamp="20170902 20:26:36.752" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='executables' </msg>
<status status="PASS" endtime="20170902 20:26:36.754" starttime="20170902 20:26:36.751"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables_history</arg>
</arguments>
<msg timestamp="20170902 20:26:36.754" level="INFO">Executing : Table Must Exist  |  executables_history </msg>
<msg timestamp="20170902 20:26:36.754" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='executables_history' </msg>
<status status="PASS" endtime="20170902 20:26:36.755" starttime="20170902 20:26:36.754"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups</arg>
</arguments>
<msg timestamp="20170902 20:26:36.755" level="INFO">Executing : Table Must Exist  |  groups </msg>
<msg timestamp="20170902 20:26:36.755" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='groups' </msg>
<status status="PASS" endtime="20170902 20:26:36.756" starttime="20170902 20:26:36.755"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups_history</arg>
</arguments>
<msg timestamp="20170902 20:26:36.757" level="INFO">Executing : Table Must Exist  |  groups_history </msg>
<msg timestamp="20170902 20:26:36.757" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='groups_history' </msg>
<status status="PASS" endtime="20170902 20:26:36.758" starttime="20170902 20:26:36.757"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts</arg>
</arguments>
<msg timestamp="20170902 20:26:36.758" level="INFO">Executing : Table Must Exist  |  hosts </msg>
<msg timestamp="20170902 20:26:36.758" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='hosts' </msg>
<status status="PASS" endtime="20170902 20:26:36.759" starttime="20170902 20:26:36.758"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts_history</arg>
</arguments>
<msg timestamp="20170902 20:26:36.759" level="INFO">Executing : Table Must Exist  |  hosts_history </msg>
<msg timestamp="20170902 20:26:36.759" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='hosts_history' </msg>
<status status="PASS" endtime="20170902 20:26:36.760" starttime="20170902 20:26:36.759"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships</arg>
</arguments>
<msg timestamp="20170902 20:26:36.760" level="INFO">Executing : Table Must Exist  |  memberships </msg>
<msg timestamp="20170902 20:26:36.761" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='memberships' </msg>
<status status="PASS" endtime="20170902 20:26:36.761" starttime="20170902 20:26:36.760"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships_history</arg>
</arguments>
<msg timestamp="20170902 20:26:36.762" level="INFO">Executing : Table Must Exist  |  memberships_history </msg>
<msg timestamp="20170902 20:26:36.762" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='memberships_history' </msg>
<status status="PASS" endtime="20170902 20:26:36.763" starttime="20170902 20:26:36.762"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>oses</arg>
</arguments>
<msg timestamp="20170902 20:26:36.763" level="INFO">Executing : Table Must Exist  |  oses </msg>
<msg timestamp="20170902 20:26:36.763" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='oses' </msg>
<status status="PASS" endtime="20170902 20:26:36.764" starttime="20170902 20:26:36.763"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>packageTypes</arg>
</arguments>
<msg timestamp="20170902 20:26:36.764" level="INFO">Executing : Table Must Exist  |  packageTypes </msg>
<msg timestamp="20170902 20:26:36.764" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='packageTypes' </msg>
<status status="PASS" endtime="20170902 20:26:36.765" starttime="20170902 20:26:36.764"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions</arg>
</arguments>
<msg timestamp="20170902 20:26:36.766" level="INFO">Executing : Table Must Exist  |  sessions </msg>
<msg timestamp="20170902 20:26:36.766" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sessions' </msg>
<status status="PASS" endtime="20170902 20:26:36.767" starttime="20170902 20:26:36.765"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions_history</arg>
</arguments>
<msg timestamp="20170902 20:26:36.767" level="INFO">Executing : Table Must Exist  |  sessions_history </msg>
<msg timestamp="20170902 20:26:36.767" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sessions_history' </msg>
<status status="PASS" endtime="20170902 20:26:36.768" starttime="20170902 20:26:36.767"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes</arg>
</arguments>
<msg timestamp="20170902 20:26:36.769" level="INFO">Executing : Table Must Exist  |  sharedAppTypes </msg>
<msg timestamp="20170902 20:26:36.769" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedAppTypes' </msg>
<status status="PASS" endtime="20170902 20:26:36.771" starttime="20170902 20:26:36.768"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes_history</arg>
</arguments>
<msg timestamp="20170902 20:26:36.771" level="INFO">Executing : Table Must Exist  |  sharedAppTypes_history </msg>
<msg timestamp="20170902 20:26:36.772" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedAppTypes_history' </msg>
<status status="PASS" endtime="20170902 20:26:36.775" starttime="20170902 20:26:36.771"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes</arg>
</arguments>
<msg timestamp="20170902 20:26:36.775" level="INFO">Executing : Table Must Exist  |  sharedPackageTypes </msg>
<msg timestamp="20170902 20:26:36.775" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedPackageTypes' </msg>
<status status="PASS" endtime="20170902 20:26:36.776" starttime="20170902 20:26:36.775"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes_history</arg>
</arguments>
<msg timestamp="20170902 20:26:36.777" level="INFO">Executing : Table Must Exist  |  sharedPackageTypes_history </msg>
<msg timestamp="20170902 20:26:36.777" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedPackageTypes_history' </msg>
<status status="PASS" endtime="20170902 20:26:36.778" starttime="20170902 20:26:36.776"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>statuses</arg>
</arguments>
<msg timestamp="20170902 20:26:36.778" level="INFO">Executing : Table Must Exist  |  statuses </msg>
<msg timestamp="20170902 20:26:36.778" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='statuses' </msg>
<status status="PASS" endtime="20170902 20:26:36.779" starttime="20170902 20:26:36.778"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks</arg>
</arguments>
<msg timestamp="20170902 20:26:36.779" level="INFO">Executing : Table Must Exist  |  tasks </msg>
<msg timestamp="20170902 20:26:36.779" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='tasks' </msg>
<status status="PASS" endtime="20170902 20:26:36.780" starttime="20170902 20:26:36.779"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks_history</arg>
</arguments>
<msg timestamp="20170902 20:26:36.781" level="INFO">Executing : Table Must Exist  |  tasks_history </msg>
<msg timestamp="20170902 20:26:36.781" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='tasks_history' </msg>
<status status="PASS" endtime="20170902 20:26:36.782" starttime="20170902 20:26:36.780"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces</arg>
</arguments>
<msg timestamp="20170902 20:26:36.782" level="INFO">Executing : Table Must Exist  |  traces </msg>
<msg timestamp="20170902 20:26:36.783" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='traces' </msg>
<status status="PASS" endtime="20170902 20:26:36.788" starttime="20170902 20:26:36.782"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces_history</arg>
</arguments>
<msg timestamp="20170902 20:26:36.789" level="INFO">Executing : Table Must Exist  |  traces_history </msg>
<msg timestamp="20170902 20:26:36.790" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='traces_history' </msg>
<status status="PASS" endtime="20170902 20:26:36.791" starttime="20170902 20:26:36.789"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>userRights</arg>
</arguments>
<msg timestamp="20170902 20:26:36.792" level="INFO">Executing : Table Must Exist  |  userRights </msg>
<msg timestamp="20170902 20:26:36.792" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='userRights' </msg>
<status status="PASS" endtime="20170902 20:26:36.793" starttime="20170902 20:26:36.791"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups</arg>
</arguments>
<msg timestamp="20170902 20:26:36.793" level="INFO">Executing : Table Must Exist  |  usergroups </msg>
<msg timestamp="20170902 20:26:36.793" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='usergroups' </msg>
<status status="PASS" endtime="20170902 20:26:36.794" starttime="20170902 20:26:36.793"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups_history</arg>
</arguments>
<msg timestamp="20170902 20:26:36.795" level="INFO">Executing : Table Must Exist  |  usergroups_history </msg>
<msg timestamp="20170902 20:26:36.795" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='usergroups_history' </msg>
<status status="PASS" endtime="20170902 20:26:36.796" starttime="20170902 20:26:36.794"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users</arg>
</arguments>
<msg timestamp="20170902 20:26:36.796" level="INFO">Executing : Table Must Exist  |  users </msg>
<msg timestamp="20170902 20:26:36.796" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='users' </msg>
<status status="PASS" endtime="20170902 20:26:36.797" starttime="20170902 20:26:36.796"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users_history</arg>
</arguments>
<msg timestamp="20170902 20:26:36.797" level="INFO">Executing : Table Must Exist  |  users_history </msg>
<msg timestamp="20170902 20:26:36.797" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='users_history' </msg>
<status status="PASS" endtime="20170902 20:26:36.798" starttime="20170902 20:26:36.797"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>version</arg>
</arguments>
<msg timestamp="20170902 20:26:36.799" level="INFO">Executing : Table Must Exist  |  version </msg>
<msg timestamp="20170902 20:26:36.799" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='version' </msg>
<status status="PASS" endtime="20170902 20:26:36.800" starttime="20170902 20:26:36.798"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>versions</arg>
</arguments>
<msg timestamp="20170902 20:26:36.800" level="INFO">Executing : Table Must Exist  |  versions </msg>
<msg timestamp="20170902 20:26:36.800" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='versions' </msg>
<status status="PASS" endtime="20170902 20:26:36.801" starttime="20170902 20:26:36.800"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps</arg>
</arguments>
<msg timestamp="20170902 20:26:36.801" level="INFO">Executing : Table Must Exist  |  view_apps </msg>
<msg timestamp="20170902 20:26:36.801" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps' </msg>
<status status="PASS" endtime="20170902 20:26:36.802" starttime="20170902 20:26:36.801"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps_for_offering</arg>
</arguments>
<msg timestamp="20170902 20:26:36.803" level="INFO">Executing : Table Must Exist  |  view_apps_for_offering </msg>
<msg timestamp="20170902 20:26:36.803" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps_for_offering' </msg>
<status status="PASS" endtime="20170902 20:26:36.804" starttime="20170902 20:26:36.803"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps_for_offering_with_file_sizes</arg>
</arguments>
<msg timestamp="20170902 20:26:36.804" level="INFO">Executing : Table Must Exist  |  view_apps_for_offering_with_file_sizes </msg>
<msg timestamp="20170902 20:26:36.804" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps_for_offering_with_file_sizes' </msg>
<status status="PASS" endtime="20170902 20:26:36.805" starttime="20170902 20:26:36.804"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_datas</arg>
</arguments>
<msg timestamp="20170902 20:26:36.806" level="INFO">Executing : Table Must Exist  |  view_datas </msg>
<msg timestamp="20170902 20:26:36.806" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_datas' </msg>
<status status="PASS" endtime="20170902 20:26:36.807" starttime="20170902 20:26:36.805"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_executables</arg>
</arguments>
<msg timestamp="20170902 20:26:36.807" level="INFO">Executing : Table Must Exist  |  view_executables </msg>
<msg timestamp="20170902 20:26:36.807" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_executables' </msg>
<status status="PASS" endtime="20170902 20:26:36.808" starttime="20170902 20:26:36.807"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_groups</arg>
</arguments>
<msg timestamp="20170902 20:26:36.808" level="INFO">Executing : Table Must Exist  |  view_groups </msg>
<msg timestamp="20170902 20:26:36.808" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_groups' </msg>
<status status="PASS" endtime="20170902 20:26:36.810" starttime="20170902 20:26:36.808"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts</arg>
</arguments>
<msg timestamp="20170902 20:26:36.810" level="INFO">Executing : Table Must Exist  |  view_hosts </msg>
<msg timestamp="20170902 20:26:36.810" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts' </msg>
<status status="PASS" endtime="20170902 20:26:36.812" starttime="20170902 20:26:36.810"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_deployable</arg>
</arguments>
<msg timestamp="20170902 20:26:36.812" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_deployable </msg>
<msg timestamp="20170902 20:26:36.812" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_deployable' </msg>
<status status="PASS" endtime="20170902 20:26:36.813" starttime="20170902 20:26:36.812"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_deployable_and_shared</arg>
</arguments>
<msg timestamp="20170902 20:26:36.814" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_deployable_and_shared </msg>
<msg timestamp="20170902 20:26:36.814" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_deployable_and_shared' </msg>
<status status="PASS" endtime="20170902 20:26:36.815" starttime="20170902 20:26:36.813"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_shared</arg>
</arguments>
<msg timestamp="20170902 20:26:36.816" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_shared </msg>
<msg timestamp="20170902 20:26:36.816" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_shared' </msg>
<status status="PASS" endtime="20170902 20:26:36.817" starttime="20170902 20:26:36.815"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_sessions</arg>
</arguments>
<msg timestamp="20170902 20:26:36.817" level="INFO">Executing : Table Must Exist  |  view_sessions </msg>
<msg timestamp="20170902 20:26:36.817" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_sessions' </msg>
<status status="PASS" endtime="20170902 20:26:36.818" starttime="20170902 20:26:36.817"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_tasks</arg>
</arguments>
<msg timestamp="20170902 20:26:36.819" level="INFO">Executing : Table Must Exist  |  view_tasks </msg>
<msg timestamp="20170902 20:26:36.819" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_tasks' </msg>
<status status="PASS" endtime="20170902 20:26:36.820" starttime="20170902 20:26:36.818"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_traces</arg>
</arguments>
<msg timestamp="20170902 20:26:36.820" level="INFO">Executing : Table Must Exist  |  view_traces </msg>
<msg timestamp="20170902 20:26:36.820" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_traces' </msg>
<status status="PASS" endtime="20170902 20:26:36.822" starttime="20170902 20:26:36.820"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_usergroups</arg>
</arguments>
<msg timestamp="20170902 20:26:36.822" level="INFO">Executing : Table Must Exist  |  view_usergroups </msg>
<msg timestamp="20170902 20:26:36.822" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_usergroups' </msg>
<status status="PASS" endtime="20170902 20:26:36.824" starttime="20170902 20:26:36.822"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users</arg>
</arguments>
<msg timestamp="20170902 20:26:36.824" level="INFO">Executing : Table Must Exist  |  view_users </msg>
<msg timestamp="20170902 20:26:36.824" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users' </msg>
<status status="PASS" endtime="20170902 20:26:36.826" starttime="20170902 20:26:36.824"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_apps</arg>
</arguments>
<msg timestamp="20170902 20:26:36.826" level="INFO">Executing : Table Must Exist  |  view_users_apps </msg>
<msg timestamp="20170902 20:26:36.826" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_apps' </msg>
<status status="PASS" endtime="20170902 20:26:36.827" starttime="20170902 20:26:36.826"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_datas</arg>
</arguments>
<msg timestamp="20170902 20:26:36.828" level="INFO">Executing : Table Must Exist  |  view_users_datas </msg>
<msg timestamp="20170902 20:26:36.828" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_datas' </msg>
<status status="PASS" endtime="20170902 20:26:36.829" starttime="20170902 20:26:36.828"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_groups</arg>
</arguments>
<msg timestamp="20170902 20:26:36.830" level="INFO">Executing : Table Must Exist  |  view_users_groups </msg>
<msg timestamp="20170902 20:26:36.830" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_groups' </msg>
<status status="PASS" endtime="20170902 20:26:36.831" starttime="20170902 20:26:36.830"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_hosts</arg>
</arguments>
<msg timestamp="20170902 20:26:36.831" level="INFO">Executing : Table Must Exist  |  view_users_hosts </msg>
<msg timestamp="20170902 20:26:36.832" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_hosts' </msg>
<status status="PASS" endtime="20170902 20:26:36.833" starttime="20170902 20:26:36.831"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_sessions</arg>
</arguments>
<msg timestamp="20170902 20:26:36.833" level="INFO">Executing : Table Must Exist  |  view_users_sessions </msg>
<msg timestamp="20170902 20:26:36.833" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_sessions' </msg>
<status status="PASS" endtime="20170902 20:26:36.834" starttime="20170902 20:26:36.833"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_tasks</arg>
</arguments>
<msg timestamp="20170902 20:26:36.835" level="INFO">Executing : Table Must Exist  |  view_users_tasks </msg>
<msg timestamp="20170902 20:26:36.835" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_tasks' </msg>
<status status="PASS" endtime="20170902 20:26:36.836" starttime="20170902 20:26:36.834"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_traces</arg>
</arguments>
<msg timestamp="20170902 20:26:36.836" level="INFO">Executing : Table Must Exist  |  view_users_traces </msg>
<msg timestamp="20170902 20:26:36.836" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_traces' </msg>
<status status="PASS" endtime="20170902 20:26:36.837" starttime="20170902 20:26:36.836"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_usergroups</arg>
</arguments>
<msg timestamp="20170902 20:26:36.838" level="INFO">Executing : Table Must Exist  |  view_users_usergroups </msg>
<msg timestamp="20170902 20:26:36.838" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_usergroups' </msg>
<status status="PASS" endtime="20170902 20:26:36.838" starttime="20170902 20:26:36.837"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_users</arg>
</arguments>
<msg timestamp="20170902 20:26:36.839" level="INFO">Executing : Table Must Exist  |  view_users_users </msg>
<msg timestamp="20170902 20:26:36.839" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_users' </msg>
<status status="PASS" endtime="20170902 20:26:36.841" starttime="20170902 20:26:36.839"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_works</arg>
</arguments>
<msg timestamp="20170902 20:26:36.841" level="INFO">Executing : Table Must Exist  |  view_users_works </msg>
<msg timestamp="20170902 20:26:36.841" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_works' </msg>
<status status="PASS" endtime="20170902 20:26:36.843" starttime="20170902 20:26:36.841"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works</arg>
</arguments>
<msg timestamp="20170902 20:26:36.843" level="INFO">Executing : Table Must Exist  |  view_works </msg>
<msg timestamp="20170902 20:26:36.843" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works' </msg>
<status status="PASS" endtime="20170902 20:26:36.844" starttime="20170902 20:26:36.843"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works_for_billing</arg>
</arguments>
<msg timestamp="20170902 20:26:36.844" level="INFO">Executing : Table Must Exist  |  view_works_for_billing </msg>
<msg timestamp="20170902 20:26:36.845" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works_for_billing' </msg>
<status status="PASS" endtime="20170902 20:26:36.845" starttime="20170902 20:26:36.844"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works_for_billing_with_file_sizes</arg>
</arguments>
<msg timestamp="20170902 20:26:36.846" level="INFO">Executing : Table Must Exist  |  view_works_for_billing_with_file_sizes </msg>
<msg timestamp="20170902 20:26:36.846" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works_for_billing_with_file_sizes' </msg>
<status status="PASS" endtime="20170902 20:26:36.847" starttime="20170902 20:26:36.846"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works</arg>
</arguments>
<msg timestamp="20170902 20:26:36.847" level="INFO">Executing : Table Must Exist  |  works </msg>
<msg timestamp="20170902 20:26:36.847" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='works' </msg>
<status status="PASS" endtime="20170902 20:26:36.848" starttime="20170902 20:26:36.847"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works_history</arg>
</arguments>
<msg timestamp="20170902 20:26:36.849" level="INFO">Executing : Table Must Exist  |  works_history </msg>
<msg timestamp="20170902 20:26:36.849" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='works_history' </msg>
<status status="PASS" endtime="20170902 20:26:36.850" starttime="20170902 20:26:36.848"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170902 20:26:36.850" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170902 20:26:36.850" starttime="20170902 20:26:36.850"></status>
</kw>
<status status="PASS" endtime="20170902 20:26:36.851" starttime="20170902 20:26:36.850"></status>
</kw>
<status status="PASS" endtime="20170902 20:26:36.851" starttime="20170902 20:26:36.740"></status>
</kw>
<status status="PASS" endtime="20170902 20:26:36.851" starttime="20170902 20:26:36.739"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>TODO ping XWtremWeb server up</arg>
</arguments>
<msg timestamp="20170902 20:26:36.851" level="INFO">TODO ping XWtremWeb server up</msg>
<status status="PASS" endtime="20170902 20:26:36.851" starttime="20170902 20:26:36.851"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>TODO ping XWtremWeb worker up before one test</arg>
</arguments>
<msg timestamp="20170902 20:26:36.851" level="INFO">TODO ping XWtremWeb worker up before one test</msg>
<status status="PASS" endtime="20170902 20:26:36.851" starttime="20170902 20:26:36.851"></status>
</kw>
<kw name="Delete Fonctionnal Xtremweb Tables" library="MySql">
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170902 20:26:36.853" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170902 20:26:36.854" starttime="20170902 20:26:36.852"></status>
</kw>
<status status="PASS" endtime="20170902 20:26:36.854" starttime="20170902 20:26:36.852"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps</arg>
</arguments>
<msg timestamp="20170902 20:26:36.854" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM apps; </msg>
<status status="PASS" endtime="20170902 20:26:36.855" starttime="20170902 20:26:36.854"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps_history</arg>
</arguments>
<msg timestamp="20170902 20:26:36.855" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM apps_history; </msg>
<status status="PASS" endtime="20170902 20:26:36.856" starttime="20170902 20:26:36.855"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas</arg>
</arguments>
<msg timestamp="20170902 20:26:36.860" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM datas; </msg>
<status status="PASS" endtime="20170902 20:26:36.860" starttime="20170902 20:26:36.859"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas_history</arg>
</arguments>
<msg timestamp="20170902 20:26:36.861" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM datas_history; </msg>
<status status="PASS" endtime="20170902 20:26:36.861" starttime="20170902 20:26:36.861"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables</arg>
</arguments>
<msg timestamp="20170902 20:26:36.862" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM executables; </msg>
<status status="PASS" endtime="20170902 20:26:36.862" starttime="20170902 20:26:36.861"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables_history</arg>
</arguments>
<msg timestamp="20170902 20:26:36.862" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM executables_history; </msg>
<status status="PASS" endtime="20170902 20:26:36.863" starttime="20170902 20:26:36.862"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups</arg>
</arguments>
<msg timestamp="20170902 20:26:36.863" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM groups; </msg>
<status status="PASS" endtime="20170902 20:26:36.863" starttime="20170902 20:26:36.863"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups_history</arg>
</arguments>
<msg timestamp="20170902 20:26:36.864" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM groups_history; </msg>
<status status="PASS" endtime="20170902 20:26:36.864" starttime="20170902 20:26:36.863"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts</arg>
</arguments>
<msg timestamp="20170902 20:26:36.865" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM hosts; </msg>
<status status="PASS" endtime="20170902 20:26:36.865" starttime="20170902 20:26:36.864"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts_history</arg>
</arguments>
<msg timestamp="20170902 20:26:36.865" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM hosts_history; </msg>
<status status="PASS" endtime="20170902 20:26:36.867" starttime="20170902 20:26:36.865"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships</arg>
</arguments>
<msg timestamp="20170902 20:26:36.868" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM memberships; </msg>
<status status="PASS" endtime="20170902 20:26:36.869" starttime="20170902 20:26:36.867"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships_history</arg>
</arguments>
<msg timestamp="20170902 20:26:36.872" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM memberships_history; </msg>
<status status="PASS" endtime="20170902 20:26:36.873" starttime="20170902 20:26:36.870"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions</arg>
</arguments>
<msg timestamp="20170902 20:26:36.875" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sessions; </msg>
<status status="PASS" endtime="20170902 20:26:36.876" starttime="20170902 20:26:36.874"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions_history</arg>
</arguments>
<msg timestamp="20170902 20:26:36.877" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sessions_history; </msg>
<status status="PASS" endtime="20170902 20:26:36.877" starttime="20170902 20:26:36.876"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes</arg>
</arguments>
<msg timestamp="20170902 20:26:36.878" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedAppTypes; </msg>
<status status="PASS" endtime="20170902 20:26:36.879" starttime="20170902 20:26:36.878"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes_history</arg>
</arguments>
<msg timestamp="20170902 20:26:36.879" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedAppTypes_history; </msg>
<status status="PASS" endtime="20170902 20:26:36.879" starttime="20170902 20:26:36.879"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes</arg>
</arguments>
<msg timestamp="20170902 20:26:36.880" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedPackageTypes; </msg>
<status status="PASS" endtime="20170902 20:26:36.880" starttime="20170902 20:26:36.879"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes_history</arg>
</arguments>
<msg timestamp="20170902 20:26:36.880" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedPackageTypes_history; </msg>
<status status="PASS" endtime="20170902 20:26:36.881" starttime="20170902 20:26:36.880"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks</arg>
</arguments>
<msg timestamp="20170902 20:26:36.881" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM tasks; </msg>
<status status="PASS" endtime="20170902 20:26:36.882" starttime="20170902 20:26:36.881"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks_history</arg>
</arguments>
<msg timestamp="20170902 20:26:36.882" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM tasks_history; </msg>
<status status="PASS" endtime="20170902 20:26:36.882" starttime="20170902 20:26:36.882"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces</arg>
</arguments>
<msg timestamp="20170902 20:26:36.882" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM traces; </msg>
<status status="PASS" endtime="20170902 20:26:36.883" starttime="20170902 20:26:36.882"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces_history</arg>
</arguments>
<msg timestamp="20170902 20:26:36.883" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM traces_history; </msg>
<status status="PASS" endtime="20170902 20:26:36.883" starttime="20170902 20:26:36.883"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups</arg>
</arguments>
<msg timestamp="20170902 20:26:36.884" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM usergroups; </msg>
<status status="PASS" endtime="20170902 20:26:36.884" starttime="20170902 20:26:36.884"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups_history</arg>
</arguments>
<msg timestamp="20170902 20:26:36.884" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM usergroups_history; </msg>
<status status="PASS" endtime="20170902 20:26:36.885" starttime="20170902 20:26:36.884"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users_history</arg>
</arguments>
<msg timestamp="20170902 20:26:36.885" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM users_history; </msg>
<status status="PASS" endtime="20170902 20:26:36.886" starttime="20170902 20:26:36.885"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works</arg>
</arguments>
<msg timestamp="20170902 20:26:36.886" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM works; </msg>
<status status="PASS" endtime="20170902 20:26:36.887" starttime="20170902 20:26:36.886"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works_history</arg>
</arguments>
<msg timestamp="20170902 20:26:36.887" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM works_history; </msg>
<status status="PASS" endtime="20170902 20:26:36.887" starttime="20170902 20:26:36.887"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170902 20:26:36.888" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170902 20:26:36.888" starttime="20170902 20:26:36.888"></status>
</kw>
<status status="PASS" endtime="20170902 20:26:36.888" starttime="20170902 20:26:36.887"></status>
</kw>
<status status="PASS" endtime="20170902 20:26:36.888" starttime="20170902 20:26:36.852"></status>
</kw>
<status status="PASS" endtime="20170902 20:26:36.888" starttime="20170902 20:26:36.739"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>TODO</arg>
</arguments>
<msg timestamp="20170902 20:26:36.889" level="INFO">TODO</msg>
<status status="PASS" endtime="20170902 20:26:36.889" starttime="20170902 20:26:36.889"></status>
</kw>
<kw type="teardown" name="End XWtremWeb Command Test" library="XWCommon">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Nothing to do</arg>
</arguments>
<msg timestamp="20170902 20:26:36.890" level="INFO">Nothing to do</msg>
<status status="PASS" endtime="20170902 20:26:36.890" starttime="20170902 20:26:36.890"></status>
</kw>
<status status="PASS" endtime="20170902 20:26:36.891" starttime="20170902 20:26:36.890"></status>
</kw>
<doc>Ces tests doivent prouver que la ligne de commande est prise en charge correctement. Ces tests doivent se faire avec un application qui accepte des arguments sur la ligne de commande</doc>
<tags>
<tag>CommandLine Tests</tag>
</tags>
<status status="PASS" endtime="20170902 20:26:36.891" critical="yes" starttime="20170902 20:26:36.738"></status>
</test>
<test id="s1-s3-t5" name="Test 3.2 Soumettre un job avec un petit environnement">
<kw type="setup" name="Begin XWtremWeb Command Test" library="XWCommon">
<kw name="Ping XWtremWeb Database" library="XWServer">
<kw name="Xtremweb Tables Must Exist" library="MySql">
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170902 20:26:36.894" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170902 20:26:36.895" starttime="20170902 20:26:36.894"></status>
</kw>
<status status="PASS" endtime="20170902 20:26:36.896" starttime="20170902 20:26:36.893"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>appTypes</arg>
</arguments>
<msg timestamp="20170902 20:26:36.896" level="INFO">Executing : Table Must Exist  |  appTypes </msg>
<msg timestamp="20170902 20:26:36.896" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='appTypes' </msg>
<status status="PASS" endtime="20170902 20:26:36.897" starttime="20170902 20:26:36.896"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps</arg>
</arguments>
<msg timestamp="20170902 20:26:36.898" level="INFO">Executing : Table Must Exist  |  apps </msg>
<msg timestamp="20170902 20:26:36.898" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='apps' </msg>
<status status="PASS" endtime="20170902 20:26:36.899" starttime="20170902 20:26:36.898"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps_history</arg>
</arguments>
<msg timestamp="20170902 20:26:36.899" level="INFO">Executing : Table Must Exist  |  apps_history </msg>
<msg timestamp="20170902 20:26:36.899" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='apps_history' </msg>
<status status="PASS" endtime="20170902 20:26:36.900" starttime="20170902 20:26:36.899"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>cpuTypes</arg>
</arguments>
<msg timestamp="20170902 20:26:36.900" level="INFO">Executing : Table Must Exist  |  cpuTypes </msg>
<msg timestamp="20170902 20:26:36.901" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='cpuTypes' </msg>
<status status="PASS" endtime="20170902 20:26:36.901" starttime="20170902 20:26:36.900"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>dataTypes</arg>
</arguments>
<msg timestamp="20170902 20:26:36.902" level="INFO">Executing : Table Must Exist  |  dataTypes </msg>
<msg timestamp="20170902 20:26:36.902" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='dataTypes' </msg>
<status status="PASS" endtime="20170902 20:26:36.903" starttime="20170902 20:26:36.902"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas</arg>
</arguments>
<msg timestamp="20170902 20:26:36.903" level="INFO">Executing : Table Must Exist  |  datas </msg>
<msg timestamp="20170902 20:26:36.903" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='datas' </msg>
<status status="PASS" endtime="20170902 20:26:36.904" starttime="20170902 20:26:36.903"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas_history</arg>
</arguments>
<msg timestamp="20170902 20:26:36.904" level="INFO">Executing : Table Must Exist  |  datas_history </msg>
<msg timestamp="20170902 20:26:36.904" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='datas_history' </msg>
<status status="PASS" endtime="20170902 20:26:36.905" starttime="20170902 20:26:36.904"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables</arg>
</arguments>
<msg timestamp="20170902 20:26:36.906" level="INFO">Executing : Table Must Exist  |  executables </msg>
<msg timestamp="20170902 20:26:36.906" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='executables' </msg>
<status status="PASS" endtime="20170902 20:26:36.907" starttime="20170902 20:26:36.905"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables_history</arg>
</arguments>
<msg timestamp="20170902 20:26:36.907" level="INFO">Executing : Table Must Exist  |  executables_history </msg>
<msg timestamp="20170902 20:26:36.907" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='executables_history' </msg>
<status status="PASS" endtime="20170902 20:26:36.908" starttime="20170902 20:26:36.907"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups</arg>
</arguments>
<msg timestamp="20170902 20:26:36.909" level="INFO">Executing : Table Must Exist  |  groups </msg>
<msg timestamp="20170902 20:26:36.909" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='groups' </msg>
<status status="PASS" endtime="20170902 20:26:36.910" starttime="20170902 20:26:36.908"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups_history</arg>
</arguments>
<msg timestamp="20170902 20:26:36.910" level="INFO">Executing : Table Must Exist  |  groups_history </msg>
<msg timestamp="20170902 20:26:36.910" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='groups_history' </msg>
<status status="PASS" endtime="20170902 20:26:36.911" starttime="20170902 20:26:36.910"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts</arg>
</arguments>
<msg timestamp="20170902 20:26:36.911" level="INFO">Executing : Table Must Exist  |  hosts </msg>
<msg timestamp="20170902 20:26:36.911" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='hosts' </msg>
<status status="PASS" endtime="20170902 20:26:36.912" starttime="20170902 20:26:36.911"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts_history</arg>
</arguments>
<msg timestamp="20170902 20:26:36.912" level="INFO">Executing : Table Must Exist  |  hosts_history </msg>
<msg timestamp="20170902 20:26:36.912" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='hosts_history' </msg>
<status status="PASS" endtime="20170902 20:26:36.913" starttime="20170902 20:26:36.912"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships</arg>
</arguments>
<msg timestamp="20170902 20:26:36.914" level="INFO">Executing : Table Must Exist  |  memberships </msg>
<msg timestamp="20170902 20:26:36.914" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='memberships' </msg>
<status status="PASS" endtime="20170902 20:26:36.915" starttime="20170902 20:26:36.913"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships_history</arg>
</arguments>
<msg timestamp="20170902 20:26:36.915" level="INFO">Executing : Table Must Exist  |  memberships_history </msg>
<msg timestamp="20170902 20:26:36.915" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='memberships_history' </msg>
<status status="PASS" endtime="20170902 20:26:36.916" starttime="20170902 20:26:36.915"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>oses</arg>
</arguments>
<msg timestamp="20170902 20:26:36.916" level="INFO">Executing : Table Must Exist  |  oses </msg>
<msg timestamp="20170902 20:26:36.916" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='oses' </msg>
<status status="PASS" endtime="20170902 20:26:36.917" starttime="20170902 20:26:36.916"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>packageTypes</arg>
</arguments>
<msg timestamp="20170902 20:26:36.918" level="INFO">Executing : Table Must Exist  |  packageTypes </msg>
<msg timestamp="20170902 20:26:36.918" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='packageTypes' </msg>
<status status="PASS" endtime="20170902 20:26:36.920" starttime="20170902 20:26:36.918"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions</arg>
</arguments>
<msg timestamp="20170902 20:26:36.921" level="INFO">Executing : Table Must Exist  |  sessions </msg>
<msg timestamp="20170902 20:26:36.921" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sessions' </msg>
<status status="PASS" endtime="20170902 20:26:36.924" starttime="20170902 20:26:36.921"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions_history</arg>
</arguments>
<msg timestamp="20170902 20:26:36.925" level="INFO">Executing : Table Must Exist  |  sessions_history </msg>
<msg timestamp="20170902 20:26:36.925" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sessions_history' </msg>
<status status="PASS" endtime="20170902 20:26:36.926" starttime="20170902 20:26:36.925"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes</arg>
</arguments>
<msg timestamp="20170902 20:26:36.927" level="INFO">Executing : Table Must Exist  |  sharedAppTypes </msg>
<msg timestamp="20170902 20:26:36.927" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedAppTypes' </msg>
<status status="PASS" endtime="20170902 20:26:36.928" starttime="20170902 20:26:36.927"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes_history</arg>
</arguments>
<msg timestamp="20170902 20:26:36.928" level="INFO">Executing : Table Must Exist  |  sharedAppTypes_history </msg>
<msg timestamp="20170902 20:26:36.928" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedAppTypes_history' </msg>
<status status="PASS" endtime="20170902 20:26:36.929" starttime="20170902 20:26:36.928"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes</arg>
</arguments>
<msg timestamp="20170902 20:26:36.930" level="INFO">Executing : Table Must Exist  |  sharedPackageTypes </msg>
<msg timestamp="20170902 20:26:36.930" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedPackageTypes' </msg>
<status status="PASS" endtime="20170902 20:26:36.931" starttime="20170902 20:26:36.930"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes_history</arg>
</arguments>
<msg timestamp="20170902 20:26:36.931" level="INFO">Executing : Table Must Exist  |  sharedPackageTypes_history </msg>
<msg timestamp="20170902 20:26:36.931" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedPackageTypes_history' </msg>
<status status="PASS" endtime="20170902 20:26:36.932" starttime="20170902 20:26:36.931"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>statuses</arg>
</arguments>
<msg timestamp="20170902 20:26:36.932" level="INFO">Executing : Table Must Exist  |  statuses </msg>
<msg timestamp="20170902 20:26:36.932" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='statuses' </msg>
<status status="PASS" endtime="20170902 20:26:36.935" starttime="20170902 20:26:36.932"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks</arg>
</arguments>
<msg timestamp="20170902 20:26:36.936" level="INFO">Executing : Table Must Exist  |  tasks </msg>
<msg timestamp="20170902 20:26:36.937" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='tasks' </msg>
<status status="PASS" endtime="20170902 20:26:36.940" starttime="20170902 20:26:36.936"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks_history</arg>
</arguments>
<msg timestamp="20170902 20:26:36.940" level="INFO">Executing : Table Must Exist  |  tasks_history </msg>
<msg timestamp="20170902 20:26:36.940" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='tasks_history' </msg>
<status status="PASS" endtime="20170902 20:26:36.941" starttime="20170902 20:26:36.940"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces</arg>
</arguments>
<msg timestamp="20170902 20:26:36.942" level="INFO">Executing : Table Must Exist  |  traces </msg>
<msg timestamp="20170902 20:26:36.942" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='traces' </msg>
<status status="PASS" endtime="20170902 20:26:36.943" starttime="20170902 20:26:36.941"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces_history</arg>
</arguments>
<msg timestamp="20170902 20:26:36.943" level="INFO">Executing : Table Must Exist  |  traces_history </msg>
<msg timestamp="20170902 20:26:36.943" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='traces_history' </msg>
<status status="PASS" endtime="20170902 20:26:36.945" starttime="20170902 20:26:36.943"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>userRights</arg>
</arguments>
<msg timestamp="20170902 20:26:36.945" level="INFO">Executing : Table Must Exist  |  userRights </msg>
<msg timestamp="20170902 20:26:36.945" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='userRights' </msg>
<status status="PASS" endtime="20170902 20:26:36.946" starttime="20170902 20:26:36.945"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups</arg>
</arguments>
<msg timestamp="20170902 20:26:36.947" level="INFO">Executing : Table Must Exist  |  usergroups </msg>
<msg timestamp="20170902 20:26:36.947" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='usergroups' </msg>
<status status="PASS" endtime="20170902 20:26:36.948" starttime="20170902 20:26:36.947"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups_history</arg>
</arguments>
<msg timestamp="20170902 20:26:36.948" level="INFO">Executing : Table Must Exist  |  usergroups_history </msg>
<msg timestamp="20170902 20:26:36.948" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='usergroups_history' </msg>
<status status="PASS" endtime="20170902 20:26:36.949" starttime="20170902 20:26:36.948"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users</arg>
</arguments>
<msg timestamp="20170902 20:26:36.949" level="INFO">Executing : Table Must Exist  |  users </msg>
<msg timestamp="20170902 20:26:36.950" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='users' </msg>
<status status="PASS" endtime="20170902 20:26:36.950" starttime="20170902 20:26:36.949"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users_history</arg>
</arguments>
<msg timestamp="20170902 20:26:36.950" level="INFO">Executing : Table Must Exist  |  users_history </msg>
<msg timestamp="20170902 20:26:36.951" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='users_history' </msg>
<status status="PASS" endtime="20170902 20:26:36.952" starttime="20170902 20:26:36.950"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>version</arg>
</arguments>
<msg timestamp="20170902 20:26:36.953" level="INFO">Executing : Table Must Exist  |  version </msg>
<msg timestamp="20170902 20:26:36.953" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='version' </msg>
<status status="PASS" endtime="20170902 20:26:36.954" starttime="20170902 20:26:36.952"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>versions</arg>
</arguments>
<msg timestamp="20170902 20:26:36.954" level="INFO">Executing : Table Must Exist  |  versions </msg>
<msg timestamp="20170902 20:26:36.955" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='versions' </msg>
<status status="PASS" endtime="20170902 20:26:36.955" starttime="20170902 20:26:36.954"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps</arg>
</arguments>
<msg timestamp="20170902 20:26:36.956" level="INFO">Executing : Table Must Exist  |  view_apps </msg>
<msg timestamp="20170902 20:26:36.956" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps' </msg>
<status status="PASS" endtime="20170902 20:26:36.957" starttime="20170902 20:26:36.956"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps_for_offering</arg>
</arguments>
<msg timestamp="20170902 20:26:36.957" level="INFO">Executing : Table Must Exist  |  view_apps_for_offering </msg>
<msg timestamp="20170902 20:26:36.957" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps_for_offering' </msg>
<status status="PASS" endtime="20170902 20:26:36.958" starttime="20170902 20:26:36.957"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps_for_offering_with_file_sizes</arg>
</arguments>
<msg timestamp="20170902 20:26:36.959" level="INFO">Executing : Table Must Exist  |  view_apps_for_offering_with_file_sizes </msg>
<msg timestamp="20170902 20:26:36.959" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps_for_offering_with_file_sizes' </msg>
<status status="PASS" endtime="20170902 20:26:36.960" starttime="20170902 20:26:36.959"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_datas</arg>
</arguments>
<msg timestamp="20170902 20:26:36.960" level="INFO">Executing : Table Must Exist  |  view_datas </msg>
<msg timestamp="20170902 20:26:36.960" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_datas' </msg>
<status status="PASS" endtime="20170902 20:26:36.961" starttime="20170902 20:26:36.960"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_executables</arg>
</arguments>
<msg timestamp="20170902 20:26:36.961" level="INFO">Executing : Table Must Exist  |  view_executables </msg>
<msg timestamp="20170902 20:26:36.962" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_executables' </msg>
<status status="PASS" endtime="20170902 20:26:36.963" starttime="20170902 20:26:36.961"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_groups</arg>
</arguments>
<msg timestamp="20170902 20:26:36.963" level="INFO">Executing : Table Must Exist  |  view_groups </msg>
<msg timestamp="20170902 20:26:36.963" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_groups' </msg>
<status status="PASS" endtime="20170902 20:26:36.965" starttime="20170902 20:26:36.963"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts</arg>
</arguments>
<msg timestamp="20170902 20:26:36.965" level="INFO">Executing : Table Must Exist  |  view_hosts </msg>
<msg timestamp="20170902 20:26:36.965" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts' </msg>
<status status="PASS" endtime="20170902 20:26:36.967" starttime="20170902 20:26:36.965"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_deployable</arg>
</arguments>
<msg timestamp="20170902 20:26:36.967" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_deployable </msg>
<msg timestamp="20170902 20:26:36.967" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_deployable' </msg>
<status status="PASS" endtime="20170902 20:26:36.968" starttime="20170902 20:26:36.967"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_deployable_and_shared</arg>
</arguments>
<msg timestamp="20170902 20:26:36.969" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_deployable_and_shared </msg>
<msg timestamp="20170902 20:26:36.969" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_deployable_and_shared' </msg>
<status status="PASS" endtime="20170902 20:26:36.970" starttime="20170902 20:26:36.968"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_shared</arg>
</arguments>
<msg timestamp="20170902 20:26:36.970" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_shared </msg>
<msg timestamp="20170902 20:26:36.970" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_shared' </msg>
<status status="PASS" endtime="20170902 20:26:36.971" starttime="20170902 20:26:36.970"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_sessions</arg>
</arguments>
<msg timestamp="20170902 20:26:36.972" level="INFO">Executing : Table Must Exist  |  view_sessions </msg>
<msg timestamp="20170902 20:26:36.972" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_sessions' </msg>
<status status="PASS" endtime="20170902 20:26:36.973" starttime="20170902 20:26:36.971"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_tasks</arg>
</arguments>
<msg timestamp="20170902 20:26:36.973" level="INFO">Executing : Table Must Exist  |  view_tasks </msg>
<msg timestamp="20170902 20:26:36.973" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_tasks' </msg>
<status status="PASS" endtime="20170902 20:26:36.974" starttime="20170902 20:26:36.973"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_traces</arg>
</arguments>
<msg timestamp="20170902 20:26:36.975" level="INFO">Executing : Table Must Exist  |  view_traces </msg>
<msg timestamp="20170902 20:26:36.975" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_traces' </msg>
<status status="PASS" endtime="20170902 20:26:36.976" starttime="20170902 20:26:36.974"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_usergroups</arg>
</arguments>
<msg timestamp="20170902 20:26:36.976" level="INFO">Executing : Table Must Exist  |  view_usergroups </msg>
<msg timestamp="20170902 20:26:36.976" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_usergroups' </msg>
<status status="PASS" endtime="20170902 20:26:36.977" starttime="20170902 20:26:36.976"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users</arg>
</arguments>
<msg timestamp="20170902 20:26:36.977" level="INFO">Executing : Table Must Exist  |  view_users </msg>
<msg timestamp="20170902 20:26:36.977" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users' </msg>
<status status="PASS" endtime="20170902 20:26:36.978" starttime="20170902 20:26:36.977"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_apps</arg>
</arguments>
<msg timestamp="20170902 20:26:36.979" level="INFO">Executing : Table Must Exist  |  view_users_apps </msg>
<msg timestamp="20170902 20:26:36.979" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_apps' </msg>
<status status="PASS" endtime="20170902 20:26:36.980" starttime="20170902 20:26:36.979"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_datas</arg>
</arguments>
<msg timestamp="20170902 20:26:36.980" level="INFO">Executing : Table Must Exist  |  view_users_datas </msg>
<msg timestamp="20170902 20:26:36.980" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_datas' </msg>
<status status="PASS" endtime="20170902 20:26:36.981" starttime="20170902 20:26:36.980"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_groups</arg>
</arguments>
<msg timestamp="20170902 20:26:36.982" level="INFO">Executing : Table Must Exist  |  view_users_groups </msg>
<msg timestamp="20170902 20:26:36.982" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_groups' </msg>
<status status="PASS" endtime="20170902 20:26:36.983" starttime="20170902 20:26:36.982"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_hosts</arg>
</arguments>
<msg timestamp="20170902 20:26:36.984" level="INFO">Executing : Table Must Exist  |  view_users_hosts </msg>
<msg timestamp="20170902 20:26:36.984" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_hosts' </msg>
<status status="PASS" endtime="20170902 20:26:36.985" starttime="20170902 20:26:36.983"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_sessions</arg>
</arguments>
<msg timestamp="20170902 20:26:36.985" level="INFO">Executing : Table Must Exist  |  view_users_sessions </msg>
<msg timestamp="20170902 20:26:36.985" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_sessions' </msg>
<status status="PASS" endtime="20170902 20:26:36.986" starttime="20170902 20:26:36.985"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_tasks</arg>
</arguments>
<msg timestamp="20170902 20:26:36.987" level="INFO">Executing : Table Must Exist  |  view_users_tasks </msg>
<msg timestamp="20170902 20:26:36.987" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_tasks' </msg>
<status status="PASS" endtime="20170902 20:26:36.988" starttime="20170902 20:26:36.986"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_traces</arg>
</arguments>
<msg timestamp="20170902 20:26:36.988" level="INFO">Executing : Table Must Exist  |  view_users_traces </msg>
<msg timestamp="20170902 20:26:36.988" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_traces' </msg>
<status status="PASS" endtime="20170902 20:26:36.989" starttime="20170902 20:26:36.988"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_usergroups</arg>
</arguments>
<msg timestamp="20170902 20:26:36.990" level="INFO">Executing : Table Must Exist  |  view_users_usergroups </msg>
<msg timestamp="20170902 20:26:36.990" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_usergroups' </msg>
<status status="PASS" endtime="20170902 20:26:36.991" starttime="20170902 20:26:36.989"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_users</arg>
</arguments>
<msg timestamp="20170902 20:26:36.991" level="INFO">Executing : Table Must Exist  |  view_users_users </msg>
<msg timestamp="20170902 20:26:36.991" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_users' </msg>
<status status="PASS" endtime="20170902 20:26:36.992" starttime="20170902 20:26:36.991"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_works</arg>
</arguments>
<msg timestamp="20170902 20:26:36.993" level="INFO">Executing : Table Must Exist  |  view_users_works </msg>
<msg timestamp="20170902 20:26:36.993" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_works' </msg>
<status status="PASS" endtime="20170902 20:26:36.994" starttime="20170902 20:26:36.992"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works</arg>
</arguments>
<msg timestamp="20170902 20:26:36.994" level="INFO">Executing : Table Must Exist  |  view_works </msg>
<msg timestamp="20170902 20:26:36.994" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works' </msg>
<status status="PASS" endtime="20170902 20:26:36.996" starttime="20170902 20:26:36.994"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works_for_billing</arg>
</arguments>
<msg timestamp="20170902 20:26:36.997" level="INFO">Executing : Table Must Exist  |  view_works_for_billing </msg>
<msg timestamp="20170902 20:26:36.997" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works_for_billing' </msg>
<status status="PASS" endtime="20170902 20:26:36.998" starttime="20170902 20:26:36.996"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works_for_billing_with_file_sizes</arg>
</arguments>
<msg timestamp="20170902 20:26:36.998" level="INFO">Executing : Table Must Exist  |  view_works_for_billing_with_file_sizes </msg>
<msg timestamp="20170902 20:26:36.998" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works_for_billing_with_file_sizes' </msg>
<status status="PASS" endtime="20170902 20:26:36.999" starttime="20170902 20:26:36.998"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works</arg>
</arguments>
<msg timestamp="20170902 20:26:36.999" level="INFO">Executing : Table Must Exist  |  works </msg>
<msg timestamp="20170902 20:26:37.000" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='works' </msg>
<status status="PASS" endtime="20170902 20:26:37.000" starttime="20170902 20:26:36.999"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.001" level="INFO">Executing : Table Must Exist  |  works_history </msg>
<msg timestamp="20170902 20:26:37.001" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='works_history' </msg>
<status status="PASS" endtime="20170902 20:26:37.002" starttime="20170902 20:26:37.000"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170902 20:26:37.003" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170902 20:26:37.003" starttime="20170902 20:26:37.002"></status>
</kw>
<status status="PASS" endtime="20170902 20:26:37.003" starttime="20170902 20:26:37.002"></status>
</kw>
<status status="PASS" endtime="20170902 20:26:37.003" starttime="20170902 20:26:36.893"></status>
</kw>
<status status="PASS" endtime="20170902 20:26:37.003" starttime="20170902 20:26:36.893"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>TODO ping XWtremWeb server up</arg>
</arguments>
<msg timestamp="20170902 20:26:37.004" level="INFO">TODO ping XWtremWeb server up</msg>
<status status="PASS" endtime="20170902 20:26:37.004" starttime="20170902 20:26:37.003"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>TODO ping XWtremWeb worker up before one test</arg>
</arguments>
<msg timestamp="20170902 20:26:37.004" level="INFO">TODO ping XWtremWeb worker up before one test</msg>
<status status="PASS" endtime="20170902 20:26:37.004" starttime="20170902 20:26:37.004"></status>
</kw>
<kw name="Delete Fonctionnal Xtremweb Tables" library="MySql">
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170902 20:26:37.006" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170902 20:26:37.007" starttime="20170902 20:26:37.005"></status>
</kw>
<status status="PASS" endtime="20170902 20:26:37.007" starttime="20170902 20:26:37.004"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps</arg>
</arguments>
<msg timestamp="20170902 20:26:37.007" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM apps; </msg>
<status status="PASS" endtime="20170902 20:26:37.008" starttime="20170902 20:26:37.007"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.008" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM apps_history; </msg>
<status status="PASS" endtime="20170902 20:26:37.009" starttime="20170902 20:26:37.008"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas</arg>
</arguments>
<msg timestamp="20170902 20:26:37.009" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM datas; </msg>
<status status="PASS" endtime="20170902 20:26:37.009" starttime="20170902 20:26:37.009"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.010" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM datas_history; </msg>
<status status="PASS" endtime="20170902 20:26:37.010" starttime="20170902 20:26:37.010"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables</arg>
</arguments>
<msg timestamp="20170902 20:26:37.011" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM executables; </msg>
<status status="PASS" endtime="20170902 20:26:37.011" starttime="20170902 20:26:37.010"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.011" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM executables_history; </msg>
<status status="PASS" endtime="20170902 20:26:37.012" starttime="20170902 20:26:37.011"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups</arg>
</arguments>
<msg timestamp="20170902 20:26:37.012" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM groups; </msg>
<status status="PASS" endtime="20170902 20:26:37.012" starttime="20170902 20:26:37.012"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.013" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM groups_history; </msg>
<status status="PASS" endtime="20170902 20:26:37.013" starttime="20170902 20:26:37.012"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts</arg>
</arguments>
<msg timestamp="20170902 20:26:37.013" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM hosts; </msg>
<status status="PASS" endtime="20170902 20:26:37.014" starttime="20170902 20:26:37.013"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.014" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM hosts_history; </msg>
<status status="PASS" endtime="20170902 20:26:37.014" starttime="20170902 20:26:37.014"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships</arg>
</arguments>
<msg timestamp="20170902 20:26:37.015" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM memberships; </msg>
<status status="PASS" endtime="20170902 20:26:37.015" starttime="20170902 20:26:37.014"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.015" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM memberships_history; </msg>
<status status="PASS" endtime="20170902 20:26:37.016" starttime="20170902 20:26:37.015"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions</arg>
</arguments>
<msg timestamp="20170902 20:26:37.017" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sessions; </msg>
<status status="PASS" endtime="20170902 20:26:37.017" starttime="20170902 20:26:37.016"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.017" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sessions_history; </msg>
<status status="PASS" endtime="20170902 20:26:37.018" starttime="20170902 20:26:37.017"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes</arg>
</arguments>
<msg timestamp="20170902 20:26:37.018" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedAppTypes; </msg>
<status status="PASS" endtime="20170902 20:26:37.019" starttime="20170902 20:26:37.018"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.019" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedAppTypes_history; </msg>
<status status="PASS" endtime="20170902 20:26:37.019" starttime="20170902 20:26:37.019"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes</arg>
</arguments>
<msg timestamp="20170902 20:26:37.019" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedPackageTypes; </msg>
<status status="PASS" endtime="20170902 20:26:37.020" starttime="20170902 20:26:37.019"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.020" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedPackageTypes_history; </msg>
<status status="PASS" endtime="20170902 20:26:37.021" starttime="20170902 20:26:37.020"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks</arg>
</arguments>
<msg timestamp="20170902 20:26:37.021" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM tasks; </msg>
<status status="PASS" endtime="20170902 20:26:37.022" starttime="20170902 20:26:37.021"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.022" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM tasks_history; </msg>
<status status="PASS" endtime="20170902 20:26:37.022" starttime="20170902 20:26:37.022"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces</arg>
</arguments>
<msg timestamp="20170902 20:26:37.023" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM traces; </msg>
<status status="PASS" endtime="20170902 20:26:37.023" starttime="20170902 20:26:37.023"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.023" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM traces_history; </msg>
<status status="PASS" endtime="20170902 20:26:37.024" starttime="20170902 20:26:37.023"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups</arg>
</arguments>
<msg timestamp="20170902 20:26:37.024" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM usergroups; </msg>
<status status="PASS" endtime="20170902 20:26:37.024" starttime="20170902 20:26:37.024"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.025" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM usergroups_history; </msg>
<status status="PASS" endtime="20170902 20:26:37.025" starttime="20170902 20:26:37.025"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.025" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM users_history; </msg>
<status status="PASS" endtime="20170902 20:26:37.026" starttime="20170902 20:26:37.025"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works</arg>
</arguments>
<msg timestamp="20170902 20:26:37.026" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM works; </msg>
<status status="PASS" endtime="20170902 20:26:37.026" starttime="20170902 20:26:37.026"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.027" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM works_history; </msg>
<status status="PASS" endtime="20170902 20:26:37.027" starttime="20170902 20:26:37.027"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170902 20:26:37.028" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170902 20:26:37.028" starttime="20170902 20:26:37.028"></status>
</kw>
<status status="PASS" endtime="20170902 20:26:37.028" starttime="20170902 20:26:37.027"></status>
</kw>
<status status="PASS" endtime="20170902 20:26:37.028" starttime="20170902 20:26:37.004"></status>
</kw>
<status status="PASS" endtime="20170902 20:26:37.028" starttime="20170902 20:26:36.892"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>TODO</arg>
</arguments>
<msg timestamp="20170902 20:26:37.029" level="INFO">TODO</msg>
<status status="PASS" endtime="20170902 20:26:37.029" starttime="20170902 20:26:37.029"></status>
</kw>
<kw type="teardown" name="End XWtremWeb Command Test" library="XWCommon">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Nothing to do</arg>
</arguments>
<msg timestamp="20170902 20:26:37.031" level="INFO">Nothing to do</msg>
<status status="PASS" endtime="20170902 20:26:37.031" starttime="20170902 20:26:37.030"></status>
</kw>
<status status="PASS" endtime="20170902 20:26:37.031" starttime="20170902 20:26:37.030"></status>
</kw>
<doc>Typiquement un fichier ou un répertoire de moins de 10Kb.</doc>
<tags>
<tag>CommandLine Tests</tag>
</tags>
<status status="PASS" endtime="20170902 20:26:37.031" critical="yes" starttime="20170902 20:26:36.891"></status>
</test>
<test id="s1-s3-t6" name="Test 3.3 Soumettre un job avec un gros environnement">
<kw type="setup" name="Begin XWtremWeb Command Test" library="XWCommon">
<kw name="Ping XWtremWeb Database" library="XWServer">
<kw name="Xtremweb Tables Must Exist" library="MySql">
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170902 20:26:37.034" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170902 20:26:37.035" starttime="20170902 20:26:37.034"></status>
</kw>
<status status="PASS" endtime="20170902 20:26:37.036" starttime="20170902 20:26:37.034"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>appTypes</arg>
</arguments>
<msg timestamp="20170902 20:26:37.036" level="INFO">Executing : Table Must Exist  |  appTypes </msg>
<msg timestamp="20170902 20:26:37.036" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='appTypes' </msg>
<status status="PASS" endtime="20170902 20:26:37.037" starttime="20170902 20:26:37.036"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps</arg>
</arguments>
<msg timestamp="20170902 20:26:37.037" level="INFO">Executing : Table Must Exist  |  apps </msg>
<msg timestamp="20170902 20:26:37.038" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='apps' </msg>
<status status="PASS" endtime="20170902 20:26:37.038" starttime="20170902 20:26:37.037"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.039" level="INFO">Executing : Table Must Exist  |  apps_history </msg>
<msg timestamp="20170902 20:26:37.039" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='apps_history' </msg>
<status status="PASS" endtime="20170902 20:26:37.040" starttime="20170902 20:26:37.039"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>cpuTypes</arg>
</arguments>
<msg timestamp="20170902 20:26:37.040" level="INFO">Executing : Table Must Exist  |  cpuTypes </msg>
<msg timestamp="20170902 20:26:37.041" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='cpuTypes' </msg>
<status status="PASS" endtime="20170902 20:26:37.042" starttime="20170902 20:26:37.040"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>dataTypes</arg>
</arguments>
<msg timestamp="20170902 20:26:37.042" level="INFO">Executing : Table Must Exist  |  dataTypes </msg>
<msg timestamp="20170902 20:26:37.042" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='dataTypes' </msg>
<status status="PASS" endtime="20170902 20:26:37.043" starttime="20170902 20:26:37.042"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas</arg>
</arguments>
<msg timestamp="20170902 20:26:37.043" level="INFO">Executing : Table Must Exist  |  datas </msg>
<msg timestamp="20170902 20:26:37.043" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='datas' </msg>
<status status="PASS" endtime="20170902 20:26:37.044" starttime="20170902 20:26:37.043"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.044" level="INFO">Executing : Table Must Exist  |  datas_history </msg>
<msg timestamp="20170902 20:26:37.045" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='datas_history' </msg>
<status status="PASS" endtime="20170902 20:26:37.045" starttime="20170902 20:26:37.044"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables</arg>
</arguments>
<msg timestamp="20170902 20:26:37.046" level="INFO">Executing : Table Must Exist  |  executables </msg>
<msg timestamp="20170902 20:26:37.046" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='executables' </msg>
<status status="PASS" endtime="20170902 20:26:37.047" starttime="20170902 20:26:37.046"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.048" level="INFO">Executing : Table Must Exist  |  executables_history </msg>
<msg timestamp="20170902 20:26:37.048" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='executables_history' </msg>
<status status="PASS" endtime="20170902 20:26:37.049" starttime="20170902 20:26:37.048"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups</arg>
</arguments>
<msg timestamp="20170902 20:26:37.049" level="INFO">Executing : Table Must Exist  |  groups </msg>
<msg timestamp="20170902 20:26:37.049" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='groups' </msg>
<status status="PASS" endtime="20170902 20:26:37.050" starttime="20170902 20:26:37.049"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.051" level="INFO">Executing : Table Must Exist  |  groups_history </msg>
<msg timestamp="20170902 20:26:37.051" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='groups_history' </msg>
<status status="PASS" endtime="20170902 20:26:37.051" starttime="20170902 20:26:37.050"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts</arg>
</arguments>
<msg timestamp="20170902 20:26:37.052" level="INFO">Executing : Table Must Exist  |  hosts </msg>
<msg timestamp="20170902 20:26:37.052" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='hosts' </msg>
<status status="PASS" endtime="20170902 20:26:37.053" starttime="20170902 20:26:37.052"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.054" level="INFO">Executing : Table Must Exist  |  hosts_history </msg>
<msg timestamp="20170902 20:26:37.054" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='hosts_history' </msg>
<status status="PASS" endtime="20170902 20:26:37.055" starttime="20170902 20:26:37.053"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships</arg>
</arguments>
<msg timestamp="20170902 20:26:37.056" level="INFO">Executing : Table Must Exist  |  memberships </msg>
<msg timestamp="20170902 20:26:37.056" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='memberships' </msg>
<status status="PASS" endtime="20170902 20:26:37.057" starttime="20170902 20:26:37.055"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.058" level="INFO">Executing : Table Must Exist  |  memberships_history </msg>
<msg timestamp="20170902 20:26:37.058" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='memberships_history' </msg>
<status status="PASS" endtime="20170902 20:26:37.059" starttime="20170902 20:26:37.058"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>oses</arg>
</arguments>
<msg timestamp="20170902 20:26:37.059" level="INFO">Executing : Table Must Exist  |  oses </msg>
<msg timestamp="20170902 20:26:37.059" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='oses' </msg>
<status status="PASS" endtime="20170902 20:26:37.061" starttime="20170902 20:26:37.059"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>packageTypes</arg>
</arguments>
<msg timestamp="20170902 20:26:37.061" level="INFO">Executing : Table Must Exist  |  packageTypes </msg>
<msg timestamp="20170902 20:26:37.061" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='packageTypes' </msg>
<status status="PASS" endtime="20170902 20:26:37.062" starttime="20170902 20:26:37.061"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions</arg>
</arguments>
<msg timestamp="20170902 20:26:37.063" level="INFO">Executing : Table Must Exist  |  sessions </msg>
<msg timestamp="20170902 20:26:37.063" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sessions' </msg>
<status status="PASS" endtime="20170902 20:26:37.064" starttime="20170902 20:26:37.063"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.065" level="INFO">Executing : Table Must Exist  |  sessions_history </msg>
<msg timestamp="20170902 20:26:37.065" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sessions_history' </msg>
<status status="PASS" endtime="20170902 20:26:37.066" starttime="20170902 20:26:37.065"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes</arg>
</arguments>
<msg timestamp="20170902 20:26:37.066" level="INFO">Executing : Table Must Exist  |  sharedAppTypes </msg>
<msg timestamp="20170902 20:26:37.066" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedAppTypes' </msg>
<status status="PASS" endtime="20170902 20:26:37.068" starttime="20170902 20:26:37.066"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.068" level="INFO">Executing : Table Must Exist  |  sharedAppTypes_history </msg>
<msg timestamp="20170902 20:26:37.068" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedAppTypes_history' </msg>
<status status="PASS" endtime="20170902 20:26:37.070" starttime="20170902 20:26:37.068"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes</arg>
</arguments>
<msg timestamp="20170902 20:26:37.071" level="INFO">Executing : Table Must Exist  |  sharedPackageTypes </msg>
<msg timestamp="20170902 20:26:37.071" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedPackageTypes' </msg>
<status status="PASS" endtime="20170902 20:26:37.073" starttime="20170902 20:26:37.071"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.074" level="INFO">Executing : Table Must Exist  |  sharedPackageTypes_history </msg>
<msg timestamp="20170902 20:26:37.074" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedPackageTypes_history' </msg>
<status status="PASS" endtime="20170902 20:26:37.075" starttime="20170902 20:26:37.073"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>statuses</arg>
</arguments>
<msg timestamp="20170902 20:26:37.075" level="INFO">Executing : Table Must Exist  |  statuses </msg>
<msg timestamp="20170902 20:26:37.075" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='statuses' </msg>
<status status="PASS" endtime="20170902 20:26:37.077" starttime="20170902 20:26:37.075"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks</arg>
</arguments>
<msg timestamp="20170902 20:26:37.077" level="INFO">Executing : Table Must Exist  |  tasks </msg>
<msg timestamp="20170902 20:26:37.078" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='tasks' </msg>
<status status="PASS" endtime="20170902 20:26:37.079" starttime="20170902 20:26:37.077"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.079" level="INFO">Executing : Table Must Exist  |  tasks_history </msg>
<msg timestamp="20170902 20:26:37.079" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='tasks_history' </msg>
<status status="PASS" endtime="20170902 20:26:37.080" starttime="20170902 20:26:37.079"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces</arg>
</arguments>
<msg timestamp="20170902 20:26:37.080" level="INFO">Executing : Table Must Exist  |  traces </msg>
<msg timestamp="20170902 20:26:37.080" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='traces' </msg>
<status status="PASS" endtime="20170902 20:26:37.082" starttime="20170902 20:26:37.080"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.082" level="INFO">Executing : Table Must Exist  |  traces_history </msg>
<msg timestamp="20170902 20:26:37.082" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='traces_history' </msg>
<status status="PASS" endtime="20170902 20:26:37.086" starttime="20170902 20:26:37.082"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>userRights</arg>
</arguments>
<msg timestamp="20170902 20:26:37.088" level="INFO">Executing : Table Must Exist  |  userRights </msg>
<msg timestamp="20170902 20:26:37.089" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='userRights' </msg>
<status status="PASS" endtime="20170902 20:26:37.090" starttime="20170902 20:26:37.087"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups</arg>
</arguments>
<msg timestamp="20170902 20:26:37.091" level="INFO">Executing : Table Must Exist  |  usergroups </msg>
<msg timestamp="20170902 20:26:37.091" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='usergroups' </msg>
<status status="PASS" endtime="20170902 20:26:37.092" starttime="20170902 20:26:37.091"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.092" level="INFO">Executing : Table Must Exist  |  usergroups_history </msg>
<msg timestamp="20170902 20:26:37.092" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='usergroups_history' </msg>
<status status="PASS" endtime="20170902 20:26:37.094" starttime="20170902 20:26:37.092"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users</arg>
</arguments>
<msg timestamp="20170902 20:26:37.094" level="INFO">Executing : Table Must Exist  |  users </msg>
<msg timestamp="20170902 20:26:37.094" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='users' </msg>
<status status="PASS" endtime="20170902 20:26:37.095" starttime="20170902 20:26:37.094"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.095" level="INFO">Executing : Table Must Exist  |  users_history </msg>
<msg timestamp="20170902 20:26:37.095" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='users_history' </msg>
<status status="PASS" endtime="20170902 20:26:37.096" starttime="20170902 20:26:37.095"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>version</arg>
</arguments>
<msg timestamp="20170902 20:26:37.096" level="INFO">Executing : Table Must Exist  |  version </msg>
<msg timestamp="20170902 20:26:37.097" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='version' </msg>
<status status="PASS" endtime="20170902 20:26:37.098" starttime="20170902 20:26:37.096"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>versions</arg>
</arguments>
<msg timestamp="20170902 20:26:37.098" level="INFO">Executing : Table Must Exist  |  versions </msg>
<msg timestamp="20170902 20:26:37.098" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='versions' </msg>
<status status="PASS" endtime="20170902 20:26:37.099" starttime="20170902 20:26:37.098"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps</arg>
</arguments>
<msg timestamp="20170902 20:26:37.099" level="INFO">Executing : Table Must Exist  |  view_apps </msg>
<msg timestamp="20170902 20:26:37.099" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps' </msg>
<status status="PASS" endtime="20170902 20:26:37.101" starttime="20170902 20:26:37.099"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps_for_offering</arg>
</arguments>
<msg timestamp="20170902 20:26:37.101" level="INFO">Executing : Table Must Exist  |  view_apps_for_offering </msg>
<msg timestamp="20170902 20:26:37.101" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps_for_offering' </msg>
<status status="PASS" endtime="20170902 20:26:37.102" starttime="20170902 20:26:37.101"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps_for_offering_with_file_sizes</arg>
</arguments>
<msg timestamp="20170902 20:26:37.102" level="INFO">Executing : Table Must Exist  |  view_apps_for_offering_with_file_sizes </msg>
<msg timestamp="20170902 20:26:37.102" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps_for_offering_with_file_sizes' </msg>
<status status="PASS" endtime="20170902 20:26:37.103" starttime="20170902 20:26:37.102"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_datas</arg>
</arguments>
<msg timestamp="20170902 20:26:37.104" level="INFO">Executing : Table Must Exist  |  view_datas </msg>
<msg timestamp="20170902 20:26:37.104" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_datas' </msg>
<status status="PASS" endtime="20170902 20:26:37.105" starttime="20170902 20:26:37.104"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_executables</arg>
</arguments>
<msg timestamp="20170902 20:26:37.105" level="INFO">Executing : Table Must Exist  |  view_executables </msg>
<msg timestamp="20170902 20:26:37.105" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_executables' </msg>
<status status="PASS" endtime="20170902 20:26:37.106" starttime="20170902 20:26:37.105"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_groups</arg>
</arguments>
<msg timestamp="20170902 20:26:37.107" level="INFO">Executing : Table Must Exist  |  view_groups </msg>
<msg timestamp="20170902 20:26:37.107" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_groups' </msg>
<status status="PASS" endtime="20170902 20:26:37.108" starttime="20170902 20:26:37.106"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts</arg>
</arguments>
<msg timestamp="20170902 20:26:37.109" level="INFO">Executing : Table Must Exist  |  view_hosts </msg>
<msg timestamp="20170902 20:26:37.109" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts' </msg>
<status status="PASS" endtime="20170902 20:26:37.110" starttime="20170902 20:26:37.109"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_deployable</arg>
</arguments>
<msg timestamp="20170902 20:26:37.111" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_deployable </msg>
<msg timestamp="20170902 20:26:37.111" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_deployable' </msg>
<status status="PASS" endtime="20170902 20:26:37.112" starttime="20170902 20:26:37.110"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_deployable_and_shared</arg>
</arguments>
<msg timestamp="20170902 20:26:37.112" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_deployable_and_shared </msg>
<msg timestamp="20170902 20:26:37.112" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_deployable_and_shared' </msg>
<status status="PASS" endtime="20170902 20:26:37.113" starttime="20170902 20:26:37.112"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_shared</arg>
</arguments>
<msg timestamp="20170902 20:26:37.114" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_shared </msg>
<msg timestamp="20170902 20:26:37.114" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_shared' </msg>
<status status="PASS" endtime="20170902 20:26:37.115" starttime="20170902 20:26:37.113"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_sessions</arg>
</arguments>
<msg timestamp="20170902 20:26:37.115" level="INFO">Executing : Table Must Exist  |  view_sessions </msg>
<msg timestamp="20170902 20:26:37.115" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_sessions' </msg>
<status status="PASS" endtime="20170902 20:26:37.116" starttime="20170902 20:26:37.115"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_tasks</arg>
</arguments>
<msg timestamp="20170902 20:26:37.117" level="INFO">Executing : Table Must Exist  |  view_tasks </msg>
<msg timestamp="20170902 20:26:37.117" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_tasks' </msg>
<status status="PASS" endtime="20170902 20:26:37.118" starttime="20170902 20:26:37.116"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_traces</arg>
</arguments>
<msg timestamp="20170902 20:26:37.118" level="INFO">Executing : Table Must Exist  |  view_traces </msg>
<msg timestamp="20170902 20:26:37.118" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_traces' </msg>
<status status="PASS" endtime="20170902 20:26:37.119" starttime="20170902 20:26:37.118"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_usergroups</arg>
</arguments>
<msg timestamp="20170902 20:26:37.120" level="INFO">Executing : Table Must Exist  |  view_usergroups </msg>
<msg timestamp="20170902 20:26:37.120" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_usergroups' </msg>
<status status="PASS" endtime="20170902 20:26:37.121" starttime="20170902 20:26:37.120"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users</arg>
</arguments>
<msg timestamp="20170902 20:26:37.121" level="INFO">Executing : Table Must Exist  |  view_users </msg>
<msg timestamp="20170902 20:26:37.121" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users' </msg>
<status status="PASS" endtime="20170902 20:26:37.123" starttime="20170902 20:26:37.121"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_apps</arg>
</arguments>
<msg timestamp="20170902 20:26:37.123" level="INFO">Executing : Table Must Exist  |  view_users_apps </msg>
<msg timestamp="20170902 20:26:37.123" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_apps' </msg>
<status status="PASS" endtime="20170902 20:26:37.125" starttime="20170902 20:26:37.123"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_datas</arg>
</arguments>
<msg timestamp="20170902 20:26:37.125" level="INFO">Executing : Table Must Exist  |  view_users_datas </msg>
<msg timestamp="20170902 20:26:37.125" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_datas' </msg>
<status status="PASS" endtime="20170902 20:26:37.126" starttime="20170902 20:26:37.125"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_groups</arg>
</arguments>
<msg timestamp="20170902 20:26:37.126" level="INFO">Executing : Table Must Exist  |  view_users_groups </msg>
<msg timestamp="20170902 20:26:37.127" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_groups' </msg>
<status status="PASS" endtime="20170902 20:26:37.127" starttime="20170902 20:26:37.126"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_hosts</arg>
</arguments>
<msg timestamp="20170902 20:26:37.128" level="INFO">Executing : Table Must Exist  |  view_users_hosts </msg>
<msg timestamp="20170902 20:26:37.128" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_hosts' </msg>
<status status="PASS" endtime="20170902 20:26:37.129" starttime="20170902 20:26:37.128"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_sessions</arg>
</arguments>
<msg timestamp="20170902 20:26:37.129" level="INFO">Executing : Table Must Exist  |  view_users_sessions </msg>
<msg timestamp="20170902 20:26:37.129" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_sessions' </msg>
<status status="PASS" endtime="20170902 20:26:37.130" starttime="20170902 20:26:37.129"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_tasks</arg>
</arguments>
<msg timestamp="20170902 20:26:37.131" level="INFO">Executing : Table Must Exist  |  view_users_tasks </msg>
<msg timestamp="20170902 20:26:37.131" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_tasks' </msg>
<status status="PASS" endtime="20170902 20:26:37.132" starttime="20170902 20:26:37.131"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_traces</arg>
</arguments>
<msg timestamp="20170902 20:26:37.132" level="INFO">Executing : Table Must Exist  |  view_users_traces </msg>
<msg timestamp="20170902 20:26:37.132" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_traces' </msg>
<status status="PASS" endtime="20170902 20:26:37.133" starttime="20170902 20:26:37.132"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_usergroups</arg>
</arguments>
<msg timestamp="20170902 20:26:37.134" level="INFO">Executing : Table Must Exist  |  view_users_usergroups </msg>
<msg timestamp="20170902 20:26:37.134" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_usergroups' </msg>
<status status="PASS" endtime="20170902 20:26:37.135" starttime="20170902 20:26:37.134"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_users</arg>
</arguments>
<msg timestamp="20170902 20:26:37.135" level="INFO">Executing : Table Must Exist  |  view_users_users </msg>
<msg timestamp="20170902 20:26:37.135" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_users' </msg>
<status status="PASS" endtime="20170902 20:26:37.137" starttime="20170902 20:26:37.135"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_works</arg>
</arguments>
<msg timestamp="20170902 20:26:37.137" level="INFO">Executing : Table Must Exist  |  view_users_works </msg>
<msg timestamp="20170902 20:26:37.137" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_works' </msg>
<status status="PASS" endtime="20170902 20:26:37.138" starttime="20170902 20:26:37.137"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works</arg>
</arguments>
<msg timestamp="20170902 20:26:37.139" level="INFO">Executing : Table Must Exist  |  view_works </msg>
<msg timestamp="20170902 20:26:37.139" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works' </msg>
<status status="PASS" endtime="20170902 20:26:37.140" starttime="20170902 20:26:37.139"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works_for_billing</arg>
</arguments>
<msg timestamp="20170902 20:26:37.141" level="INFO">Executing : Table Must Exist  |  view_works_for_billing </msg>
<msg timestamp="20170902 20:26:37.141" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works_for_billing' </msg>
<status status="PASS" endtime="20170902 20:26:37.142" starttime="20170902 20:26:37.140"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works_for_billing_with_file_sizes</arg>
</arguments>
<msg timestamp="20170902 20:26:37.142" level="INFO">Executing : Table Must Exist  |  view_works_for_billing_with_file_sizes </msg>
<msg timestamp="20170902 20:26:37.142" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works_for_billing_with_file_sizes' </msg>
<status status="PASS" endtime="20170902 20:26:37.143" starttime="20170902 20:26:37.142"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works</arg>
</arguments>
<msg timestamp="20170902 20:26:37.144" level="INFO">Executing : Table Must Exist  |  works </msg>
<msg timestamp="20170902 20:26:37.144" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='works' </msg>
<status status="PASS" endtime="20170902 20:26:37.145" starttime="20170902 20:26:37.143"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.145" level="INFO">Executing : Table Must Exist  |  works_history </msg>
<msg timestamp="20170902 20:26:37.145" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='works_history' </msg>
<status status="PASS" endtime="20170902 20:26:37.146" starttime="20170902 20:26:37.145"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170902 20:26:37.147" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170902 20:26:37.147" starttime="20170902 20:26:37.147"></status>
</kw>
<status status="PASS" endtime="20170902 20:26:37.147" starttime="20170902 20:26:37.146"></status>
</kw>
<status status="PASS" endtime="20170902 20:26:37.147" starttime="20170902 20:26:37.033"></status>
</kw>
<status status="PASS" endtime="20170902 20:26:37.147" starttime="20170902 20:26:37.033"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>TODO ping XWtremWeb server up</arg>
</arguments>
<msg timestamp="20170902 20:26:37.148" level="INFO">TODO ping XWtremWeb server up</msg>
<status status="PASS" endtime="20170902 20:26:37.148" starttime="20170902 20:26:37.148"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>TODO ping XWtremWeb worker up before one test</arg>
</arguments>
<msg timestamp="20170902 20:26:37.148" level="INFO">TODO ping XWtremWeb worker up before one test</msg>
<status status="PASS" endtime="20170902 20:26:37.148" starttime="20170902 20:26:37.148"></status>
</kw>
<kw name="Delete Fonctionnal Xtremweb Tables" library="MySql">
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170902 20:26:37.149" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170902 20:26:37.150" starttime="20170902 20:26:37.149"></status>
</kw>
<status status="PASS" endtime="20170902 20:26:37.150" starttime="20170902 20:26:37.149"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps</arg>
</arguments>
<msg timestamp="20170902 20:26:37.151" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM apps; </msg>
<status status="PASS" endtime="20170902 20:26:37.151" starttime="20170902 20:26:37.151"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.152" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM apps_history; </msg>
<status status="PASS" endtime="20170902 20:26:37.152" starttime="20170902 20:26:37.152"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas</arg>
</arguments>
<msg timestamp="20170902 20:26:37.153" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM datas; </msg>
<status status="PASS" endtime="20170902 20:26:37.153" starttime="20170902 20:26:37.152"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.153" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM datas_history; </msg>
<status status="PASS" endtime="20170902 20:26:37.154" starttime="20170902 20:26:37.153"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables</arg>
</arguments>
<msg timestamp="20170902 20:26:37.154" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM executables; </msg>
<status status="PASS" endtime="20170902 20:26:37.155" starttime="20170902 20:26:37.154"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.155" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM executables_history; </msg>
<status status="PASS" endtime="20170902 20:26:37.156" starttime="20170902 20:26:37.155"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups</arg>
</arguments>
<msg timestamp="20170902 20:26:37.156" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM groups; </msg>
<status status="PASS" endtime="20170902 20:26:37.157" starttime="20170902 20:26:37.156"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.157" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM groups_history; </msg>
<status status="PASS" endtime="20170902 20:26:37.158" starttime="20170902 20:26:37.157"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts</arg>
</arguments>
<msg timestamp="20170902 20:26:37.158" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM hosts; </msg>
<status status="PASS" endtime="20170902 20:26:37.158" starttime="20170902 20:26:37.158"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.159" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM hosts_history; </msg>
<status status="PASS" endtime="20170902 20:26:37.159" starttime="20170902 20:26:37.159"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships</arg>
</arguments>
<msg timestamp="20170902 20:26:37.159" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM memberships; </msg>
<status status="PASS" endtime="20170902 20:26:37.160" starttime="20170902 20:26:37.159"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.160" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM memberships_history; </msg>
<status status="PASS" endtime="20170902 20:26:37.160" starttime="20170902 20:26:37.160"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions</arg>
</arguments>
<msg timestamp="20170902 20:26:37.161" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sessions; </msg>
<status status="PASS" endtime="20170902 20:26:37.161" starttime="20170902 20:26:37.160"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.161" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sessions_history; </msg>
<status status="PASS" endtime="20170902 20:26:37.162" starttime="20170902 20:26:37.161"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes</arg>
</arguments>
<msg timestamp="20170902 20:26:37.162" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedAppTypes; </msg>
<status status="PASS" endtime="20170902 20:26:37.162" starttime="20170902 20:26:37.162"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.163" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedAppTypes_history; </msg>
<status status="PASS" endtime="20170902 20:26:37.163" starttime="20170902 20:26:37.162"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes</arg>
</arguments>
<msg timestamp="20170902 20:26:37.163" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedPackageTypes; </msg>
<status status="PASS" endtime="20170902 20:26:37.164" starttime="20170902 20:26:37.163"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.164" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedPackageTypes_history; </msg>
<status status="PASS" endtime="20170902 20:26:37.164" starttime="20170902 20:26:37.164"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks</arg>
</arguments>
<msg timestamp="20170902 20:26:37.165" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM tasks; </msg>
<status status="PASS" endtime="20170902 20:26:37.165" starttime="20170902 20:26:37.164"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.165" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM tasks_history; </msg>
<status status="PASS" endtime="20170902 20:26:37.166" starttime="20170902 20:26:37.165"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces</arg>
</arguments>
<msg timestamp="20170902 20:26:37.166" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM traces; </msg>
<status status="PASS" endtime="20170902 20:26:37.166" starttime="20170902 20:26:37.166"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.167" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM traces_history; </msg>
<status status="PASS" endtime="20170902 20:26:37.167" starttime="20170902 20:26:37.166"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups</arg>
</arguments>
<msg timestamp="20170902 20:26:37.167" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM usergroups; </msg>
<status status="PASS" endtime="20170902 20:26:37.168" starttime="20170902 20:26:37.167"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.168" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM usergroups_history; </msg>
<status status="PASS" endtime="20170902 20:26:37.168" starttime="20170902 20:26:37.168"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.169" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM users_history; </msg>
<status status="PASS" endtime="20170902 20:26:37.169" starttime="20170902 20:26:37.169"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works</arg>
</arguments>
<msg timestamp="20170902 20:26:37.169" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM works; </msg>
<status status="PASS" endtime="20170902 20:26:37.170" starttime="20170902 20:26:37.169"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.170" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM works_history; </msg>
<status status="PASS" endtime="20170902 20:26:37.171" starttime="20170902 20:26:37.170"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170902 20:26:37.171" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170902 20:26:37.171" starttime="20170902 20:26:37.171"></status>
</kw>
<status status="PASS" endtime="20170902 20:26:37.172" starttime="20170902 20:26:37.171"></status>
</kw>
<status status="PASS" endtime="20170902 20:26:37.172" starttime="20170902 20:26:37.148"></status>
</kw>
<status status="PASS" endtime="20170902 20:26:37.172" starttime="20170902 20:26:37.032"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>TODO</arg>
</arguments>
<msg timestamp="20170902 20:26:37.172" level="INFO">TODO</msg>
<status status="PASS" endtime="20170902 20:26:37.173" starttime="20170902 20:26:37.172"></status>
</kw>
<kw type="teardown" name="End XWtremWeb Command Test" library="XWCommon">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Nothing to do</arg>
</arguments>
<msg timestamp="20170902 20:26:37.174" level="INFO">Nothing to do</msg>
<status status="PASS" endtime="20170902 20:26:37.174" starttime="20170902 20:26:37.174"></status>
</kw>
<status status="PASS" endtime="20170902 20:26:37.174" starttime="20170902 20:26:37.173"></status>
</kw>
<doc>Typiquement un fichier ou un répertoire de plus de 1Mb.</doc>
<tags>
<tag>CommandLine Tests</tag>
</tags>
<status status="PASS" endtime="20170902 20:26:37.174" critical="yes" starttime="20170902 20:26:37.031"></status>
</test>
<test id="s1-s3-t7" name="Test 4 Tester la ligne de commande et l’environnement">
<kw type="setup" name="Begin XWtremWeb Command Test" library="XWCommon">
<kw name="Ping XWtremWeb Database" library="XWServer">
<kw name="Xtremweb Tables Must Exist" library="MySql">
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170902 20:26:37.177" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170902 20:26:37.178" starttime="20170902 20:26:37.177"></status>
</kw>
<status status="PASS" endtime="20170902 20:26:37.179" starttime="20170902 20:26:37.177"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>appTypes</arg>
</arguments>
<msg timestamp="20170902 20:26:37.179" level="INFO">Executing : Table Must Exist  |  appTypes </msg>
<msg timestamp="20170902 20:26:37.179" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='appTypes' </msg>
<status status="PASS" endtime="20170902 20:26:37.180" starttime="20170902 20:26:37.179"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps</arg>
</arguments>
<msg timestamp="20170902 20:26:37.180" level="INFO">Executing : Table Must Exist  |  apps </msg>
<msg timestamp="20170902 20:26:37.180" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='apps' </msg>
<status status="PASS" endtime="20170902 20:26:37.181" starttime="20170902 20:26:37.180"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.182" level="INFO">Executing : Table Must Exist  |  apps_history </msg>
<msg timestamp="20170902 20:26:37.182" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='apps_history' </msg>
<status status="PASS" endtime="20170902 20:26:37.183" starttime="20170902 20:26:37.181"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>cpuTypes</arg>
</arguments>
<msg timestamp="20170902 20:26:37.183" level="INFO">Executing : Table Must Exist  |  cpuTypes </msg>
<msg timestamp="20170902 20:26:37.183" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='cpuTypes' </msg>
<status status="PASS" endtime="20170902 20:26:37.184" starttime="20170902 20:26:37.183"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>dataTypes</arg>
</arguments>
<msg timestamp="20170902 20:26:37.184" level="INFO">Executing : Table Must Exist  |  dataTypes </msg>
<msg timestamp="20170902 20:26:37.184" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='dataTypes' </msg>
<status status="PASS" endtime="20170902 20:26:37.185" starttime="20170902 20:26:37.184"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas</arg>
</arguments>
<msg timestamp="20170902 20:26:37.185" level="INFO">Executing : Table Must Exist  |  datas </msg>
<msg timestamp="20170902 20:26:37.185" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='datas' </msg>
<status status="PASS" endtime="20170902 20:26:37.186" starttime="20170902 20:26:37.185"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.187" level="INFO">Executing : Table Must Exist  |  datas_history </msg>
<msg timestamp="20170902 20:26:37.187" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='datas_history' </msg>
<status status="PASS" endtime="20170902 20:26:37.187" starttime="20170902 20:26:37.186"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables</arg>
</arguments>
<msg timestamp="20170902 20:26:37.188" level="INFO">Executing : Table Must Exist  |  executables </msg>
<msg timestamp="20170902 20:26:37.188" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='executables' </msg>
<status status="PASS" endtime="20170902 20:26:37.189" starttime="20170902 20:26:37.188"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.189" level="INFO">Executing : Table Must Exist  |  executables_history </msg>
<msg timestamp="20170902 20:26:37.189" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='executables_history' </msg>
<status status="PASS" endtime="20170902 20:26:37.190" starttime="20170902 20:26:37.189"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups</arg>
</arguments>
<msg timestamp="20170902 20:26:37.190" level="INFO">Executing : Table Must Exist  |  groups </msg>
<msg timestamp="20170902 20:26:37.191" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='groups' </msg>
<status status="PASS" endtime="20170902 20:26:37.191" starttime="20170902 20:26:37.190"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.192" level="INFO">Executing : Table Must Exist  |  groups_history </msg>
<msg timestamp="20170902 20:26:37.192" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='groups_history' </msg>
<status status="PASS" endtime="20170902 20:26:37.193" starttime="20170902 20:26:37.191"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts</arg>
</arguments>
<msg timestamp="20170902 20:26:37.193" level="INFO">Executing : Table Must Exist  |  hosts </msg>
<msg timestamp="20170902 20:26:37.193" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='hosts' </msg>
<status status="PASS" endtime="20170902 20:26:37.194" starttime="20170902 20:26:37.193"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.194" level="INFO">Executing : Table Must Exist  |  hosts_history </msg>
<msg timestamp="20170902 20:26:37.194" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='hosts_history' </msg>
<status status="PASS" endtime="20170902 20:26:37.195" starttime="20170902 20:26:37.194"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships</arg>
</arguments>
<msg timestamp="20170902 20:26:37.196" level="INFO">Executing : Table Must Exist  |  memberships </msg>
<msg timestamp="20170902 20:26:37.196" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='memberships' </msg>
<status status="PASS" endtime="20170902 20:26:37.196" starttime="20170902 20:26:37.195"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.197" level="INFO">Executing : Table Must Exist  |  memberships_history </msg>
<msg timestamp="20170902 20:26:37.197" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='memberships_history' </msg>
<status status="PASS" endtime="20170902 20:26:37.198" starttime="20170902 20:26:37.197"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>oses</arg>
</arguments>
<msg timestamp="20170902 20:26:37.198" level="INFO">Executing : Table Must Exist  |  oses </msg>
<msg timestamp="20170902 20:26:37.198" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='oses' </msg>
<status status="PASS" endtime="20170902 20:26:37.199" starttime="20170902 20:26:37.198"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>packageTypes</arg>
</arguments>
<msg timestamp="20170902 20:26:37.199" level="INFO">Executing : Table Must Exist  |  packageTypes </msg>
<msg timestamp="20170902 20:26:37.199" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='packageTypes' </msg>
<status status="PASS" endtime="20170902 20:26:37.201" starttime="20170902 20:26:37.199"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions</arg>
</arguments>
<msg timestamp="20170902 20:26:37.201" level="INFO">Executing : Table Must Exist  |  sessions </msg>
<msg timestamp="20170902 20:26:37.202" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sessions' </msg>
<status status="PASS" endtime="20170902 20:26:37.202" starttime="20170902 20:26:37.201"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.203" level="INFO">Executing : Table Must Exist  |  sessions_history </msg>
<msg timestamp="20170902 20:26:37.203" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sessions_history' </msg>
<status status="PASS" endtime="20170902 20:26:37.204" starttime="20170902 20:26:37.203"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes</arg>
</arguments>
<msg timestamp="20170902 20:26:37.204" level="INFO">Executing : Table Must Exist  |  sharedAppTypes </msg>
<msg timestamp="20170902 20:26:37.204" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedAppTypes' </msg>
<status status="PASS" endtime="20170902 20:26:37.205" starttime="20170902 20:26:37.204"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.206" level="INFO">Executing : Table Must Exist  |  sharedAppTypes_history </msg>
<msg timestamp="20170902 20:26:37.206" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedAppTypes_history' </msg>
<status status="PASS" endtime="20170902 20:26:37.207" starttime="20170902 20:26:37.206"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes</arg>
</arguments>
<msg timestamp="20170902 20:26:37.207" level="INFO">Executing : Table Must Exist  |  sharedPackageTypes </msg>
<msg timestamp="20170902 20:26:37.207" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedPackageTypes' </msg>
<status status="PASS" endtime="20170902 20:26:37.208" starttime="20170902 20:26:37.207"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.208" level="INFO">Executing : Table Must Exist  |  sharedPackageTypes_history </msg>
<msg timestamp="20170902 20:26:37.208" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedPackageTypes_history' </msg>
<status status="PASS" endtime="20170902 20:26:37.209" starttime="20170902 20:26:37.208"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>statuses</arg>
</arguments>
<msg timestamp="20170902 20:26:37.210" level="INFO">Executing : Table Must Exist  |  statuses </msg>
<msg timestamp="20170902 20:26:37.210" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='statuses' </msg>
<status status="PASS" endtime="20170902 20:26:37.210" starttime="20170902 20:26:37.209"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks</arg>
</arguments>
<msg timestamp="20170902 20:26:37.211" level="INFO">Executing : Table Must Exist  |  tasks </msg>
<msg timestamp="20170902 20:26:37.211" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='tasks' </msg>
<status status="PASS" endtime="20170902 20:26:37.212" starttime="20170902 20:26:37.211"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.212" level="INFO">Executing : Table Must Exist  |  tasks_history </msg>
<msg timestamp="20170902 20:26:37.212" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='tasks_history' </msg>
<status status="PASS" endtime="20170902 20:26:37.213" starttime="20170902 20:26:37.212"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces</arg>
</arguments>
<msg timestamp="20170902 20:26:37.214" level="INFO">Executing : Table Must Exist  |  traces </msg>
<msg timestamp="20170902 20:26:37.214" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='traces' </msg>
<status status="PASS" endtime="20170902 20:26:37.215" starttime="20170902 20:26:37.214"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.215" level="INFO">Executing : Table Must Exist  |  traces_history </msg>
<msg timestamp="20170902 20:26:37.215" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='traces_history' </msg>
<status status="PASS" endtime="20170902 20:26:37.216" starttime="20170902 20:26:37.215"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>userRights</arg>
</arguments>
<msg timestamp="20170902 20:26:37.216" level="INFO">Executing : Table Must Exist  |  userRights </msg>
<msg timestamp="20170902 20:26:37.216" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='userRights' </msg>
<status status="PASS" endtime="20170902 20:26:37.218" starttime="20170902 20:26:37.216"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups</arg>
</arguments>
<msg timestamp="20170902 20:26:37.218" level="INFO">Executing : Table Must Exist  |  usergroups </msg>
<msg timestamp="20170902 20:26:37.218" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='usergroups' </msg>
<status status="PASS" endtime="20170902 20:26:37.221" starttime="20170902 20:26:37.218"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.221" level="INFO">Executing : Table Must Exist  |  usergroups_history </msg>
<msg timestamp="20170902 20:26:37.221" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='usergroups_history' </msg>
<status status="PASS" endtime="20170902 20:26:37.224" starttime="20170902 20:26:37.221"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users</arg>
</arguments>
<msg timestamp="20170902 20:26:37.225" level="INFO">Executing : Table Must Exist  |  users </msg>
<msg timestamp="20170902 20:26:37.225" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='users' </msg>
<status status="PASS" endtime="20170902 20:26:37.226" starttime="20170902 20:26:37.225"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.227" level="INFO">Executing : Table Must Exist  |  users_history </msg>
<msg timestamp="20170902 20:26:37.227" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='users_history' </msg>
<status status="PASS" endtime="20170902 20:26:37.228" starttime="20170902 20:26:37.226"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>version</arg>
</arguments>
<msg timestamp="20170902 20:26:37.228" level="INFO">Executing : Table Must Exist  |  version </msg>
<msg timestamp="20170902 20:26:37.228" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='version' </msg>
<status status="PASS" endtime="20170902 20:26:37.229" starttime="20170902 20:26:37.228"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>versions</arg>
</arguments>
<msg timestamp="20170902 20:26:37.229" level="INFO">Executing : Table Must Exist  |  versions </msg>
<msg timestamp="20170902 20:26:37.230" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='versions' </msg>
<status status="PASS" endtime="20170902 20:26:37.231" starttime="20170902 20:26:37.229"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps</arg>
</arguments>
<msg timestamp="20170902 20:26:37.231" level="INFO">Executing : Table Must Exist  |  view_apps </msg>
<msg timestamp="20170902 20:26:37.231" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps' </msg>
<status status="PASS" endtime="20170902 20:26:37.232" starttime="20170902 20:26:37.231"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps_for_offering</arg>
</arguments>
<msg timestamp="20170902 20:26:37.233" level="INFO">Executing : Table Must Exist  |  view_apps_for_offering </msg>
<msg timestamp="20170902 20:26:37.233" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps_for_offering' </msg>
<status status="PASS" endtime="20170902 20:26:37.235" starttime="20170902 20:26:37.232"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps_for_offering_with_file_sizes</arg>
</arguments>
<msg timestamp="20170902 20:26:37.237" level="INFO">Executing : Table Must Exist  |  view_apps_for_offering_with_file_sizes </msg>
<msg timestamp="20170902 20:26:37.237" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps_for_offering_with_file_sizes' </msg>
<status status="PASS" endtime="20170902 20:26:37.239" starttime="20170902 20:26:37.236"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_datas</arg>
</arguments>
<msg timestamp="20170902 20:26:37.239" level="INFO">Executing : Table Must Exist  |  view_datas </msg>
<msg timestamp="20170902 20:26:37.239" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_datas' </msg>
<status status="PASS" endtime="20170902 20:26:37.241" starttime="20170902 20:26:37.239"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_executables</arg>
</arguments>
<msg timestamp="20170902 20:26:37.241" level="INFO">Executing : Table Must Exist  |  view_executables </msg>
<msg timestamp="20170902 20:26:37.241" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_executables' </msg>
<status status="PASS" endtime="20170902 20:26:37.242" starttime="20170902 20:26:37.241"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_groups</arg>
</arguments>
<msg timestamp="20170902 20:26:37.243" level="INFO">Executing : Table Must Exist  |  view_groups </msg>
<msg timestamp="20170902 20:26:37.243" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_groups' </msg>
<status status="PASS" endtime="20170902 20:26:37.244" starttime="20170902 20:26:37.243"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts</arg>
</arguments>
<msg timestamp="20170902 20:26:37.244" level="INFO">Executing : Table Must Exist  |  view_hosts </msg>
<msg timestamp="20170902 20:26:37.244" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts' </msg>
<status status="PASS" endtime="20170902 20:26:37.245" starttime="20170902 20:26:37.244"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_deployable</arg>
</arguments>
<msg timestamp="20170902 20:26:37.246" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_deployable </msg>
<msg timestamp="20170902 20:26:37.246" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_deployable' </msg>
<status status="PASS" endtime="20170902 20:26:37.247" starttime="20170902 20:26:37.246"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_deployable_and_shared</arg>
</arguments>
<msg timestamp="20170902 20:26:37.247" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_deployable_and_shared </msg>
<msg timestamp="20170902 20:26:37.247" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_deployable_and_shared' </msg>
<status status="PASS" endtime="20170902 20:26:37.249" starttime="20170902 20:26:37.247"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_shared</arg>
</arguments>
<msg timestamp="20170902 20:26:37.249" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_shared </msg>
<msg timestamp="20170902 20:26:37.249" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_shared' </msg>
<status status="PASS" endtime="20170902 20:26:37.250" starttime="20170902 20:26:37.249"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_sessions</arg>
</arguments>
<msg timestamp="20170902 20:26:37.251" level="INFO">Executing : Table Must Exist  |  view_sessions </msg>
<msg timestamp="20170902 20:26:37.251" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_sessions' </msg>
<status status="PASS" endtime="20170902 20:26:37.252" starttime="20170902 20:26:37.251"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_tasks</arg>
</arguments>
<msg timestamp="20170902 20:26:37.253" level="INFO">Executing : Table Must Exist  |  view_tasks </msg>
<msg timestamp="20170902 20:26:37.253" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_tasks' </msg>
<status status="PASS" endtime="20170902 20:26:37.254" starttime="20170902 20:26:37.252"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_traces</arg>
</arguments>
<msg timestamp="20170902 20:26:37.254" level="INFO">Executing : Table Must Exist  |  view_traces </msg>
<msg timestamp="20170902 20:26:37.254" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_traces' </msg>
<status status="PASS" endtime="20170902 20:26:37.255" starttime="20170902 20:26:37.254"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_usergroups</arg>
</arguments>
<msg timestamp="20170902 20:26:37.255" level="INFO">Executing : Table Must Exist  |  view_usergroups </msg>
<msg timestamp="20170902 20:26:37.255" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_usergroups' </msg>
<status status="PASS" endtime="20170902 20:26:37.256" starttime="20170902 20:26:37.255"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users</arg>
</arguments>
<msg timestamp="20170902 20:26:37.256" level="INFO">Executing : Table Must Exist  |  view_users </msg>
<msg timestamp="20170902 20:26:37.256" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users' </msg>
<status status="PASS" endtime="20170902 20:26:37.257" starttime="20170902 20:26:37.256"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_apps</arg>
</arguments>
<msg timestamp="20170902 20:26:37.258" level="INFO">Executing : Table Must Exist  |  view_users_apps </msg>
<msg timestamp="20170902 20:26:37.258" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_apps' </msg>
<status status="PASS" endtime="20170902 20:26:37.259" starttime="20170902 20:26:37.258"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_datas</arg>
</arguments>
<msg timestamp="20170902 20:26:37.259" level="INFO">Executing : Table Must Exist  |  view_users_datas </msg>
<msg timestamp="20170902 20:26:37.260" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_datas' </msg>
<status status="PASS" endtime="20170902 20:26:37.261" starttime="20170902 20:26:37.259"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_groups</arg>
</arguments>
<msg timestamp="20170902 20:26:37.261" level="INFO">Executing : Table Must Exist  |  view_users_groups </msg>
<msg timestamp="20170902 20:26:37.261" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_groups' </msg>
<status status="PASS" endtime="20170902 20:26:37.262" starttime="20170902 20:26:37.261"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_hosts</arg>
</arguments>
<msg timestamp="20170902 20:26:37.263" level="INFO">Executing : Table Must Exist  |  view_users_hosts </msg>
<msg timestamp="20170902 20:26:37.263" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_hosts' </msg>
<status status="PASS" endtime="20170902 20:26:37.265" starttime="20170902 20:26:37.262"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_sessions</arg>
</arguments>
<msg timestamp="20170902 20:26:37.265" level="INFO">Executing : Table Must Exist  |  view_users_sessions </msg>
<msg timestamp="20170902 20:26:37.265" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_sessions' </msg>
<status status="PASS" endtime="20170902 20:26:37.266" starttime="20170902 20:26:37.265"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_tasks</arg>
</arguments>
<msg timestamp="20170902 20:26:37.267" level="INFO">Executing : Table Must Exist  |  view_users_tasks </msg>
<msg timestamp="20170902 20:26:37.267" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_tasks' </msg>
<status status="PASS" endtime="20170902 20:26:37.268" starttime="20170902 20:26:37.267"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_traces</arg>
</arguments>
<msg timestamp="20170902 20:26:37.268" level="INFO">Executing : Table Must Exist  |  view_users_traces </msg>
<msg timestamp="20170902 20:26:37.268" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_traces' </msg>
<status status="PASS" endtime="20170902 20:26:37.269" starttime="20170902 20:26:37.268"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_usergroups</arg>
</arguments>
<msg timestamp="20170902 20:26:37.270" level="INFO">Executing : Table Must Exist  |  view_users_usergroups </msg>
<msg timestamp="20170902 20:26:37.270" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_usergroups' </msg>
<status status="PASS" endtime="20170902 20:26:37.271" starttime="20170902 20:26:37.269"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_users</arg>
</arguments>
<msg timestamp="20170902 20:26:37.271" level="INFO">Executing : Table Must Exist  |  view_users_users </msg>
<msg timestamp="20170902 20:26:37.271" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_users' </msg>
<status status="PASS" endtime="20170902 20:26:37.273" starttime="20170902 20:26:37.271"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_works</arg>
</arguments>
<msg timestamp="20170902 20:26:37.273" level="INFO">Executing : Table Must Exist  |  view_users_works </msg>
<msg timestamp="20170902 20:26:37.273" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_works' </msg>
<status status="PASS" endtime="20170902 20:26:37.274" starttime="20170902 20:26:37.273"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works</arg>
</arguments>
<msg timestamp="20170902 20:26:37.275" level="INFO">Executing : Table Must Exist  |  view_works </msg>
<msg timestamp="20170902 20:26:37.275" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works' </msg>
<status status="PASS" endtime="20170902 20:26:37.276" starttime="20170902 20:26:37.275"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works_for_billing</arg>
</arguments>
<msg timestamp="20170902 20:26:37.276" level="INFO">Executing : Table Must Exist  |  view_works_for_billing </msg>
<msg timestamp="20170902 20:26:37.277" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works_for_billing' </msg>
<status status="PASS" endtime="20170902 20:26:37.277" starttime="20170902 20:26:37.276"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works_for_billing_with_file_sizes</arg>
</arguments>
<msg timestamp="20170902 20:26:37.278" level="INFO">Executing : Table Must Exist  |  view_works_for_billing_with_file_sizes </msg>
<msg timestamp="20170902 20:26:37.278" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works_for_billing_with_file_sizes' </msg>
<status status="PASS" endtime="20170902 20:26:37.279" starttime="20170902 20:26:37.278"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works</arg>
</arguments>
<msg timestamp="20170902 20:26:37.279" level="INFO">Executing : Table Must Exist  |  works </msg>
<msg timestamp="20170902 20:26:37.279" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='works' </msg>
<status status="PASS" endtime="20170902 20:26:37.281" starttime="20170902 20:26:37.279"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.282" level="INFO">Executing : Table Must Exist  |  works_history </msg>
<msg timestamp="20170902 20:26:37.282" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='works_history' </msg>
<status status="PASS" endtime="20170902 20:26:37.283" starttime="20170902 20:26:37.281"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170902 20:26:37.284" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170902 20:26:37.284" starttime="20170902 20:26:37.284"></status>
</kw>
<status status="PASS" endtime="20170902 20:26:37.284" starttime="20170902 20:26:37.283"></status>
</kw>
<status status="PASS" endtime="20170902 20:26:37.284" starttime="20170902 20:26:37.176"></status>
</kw>
<status status="PASS" endtime="20170902 20:26:37.284" starttime="20170902 20:26:37.176"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>TODO ping XWtremWeb server up</arg>
</arguments>
<msg timestamp="20170902 20:26:37.285" level="INFO">TODO ping XWtremWeb server up</msg>
<status status="PASS" endtime="20170902 20:26:37.285" starttime="20170902 20:26:37.284"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>TODO ping XWtremWeb worker up before one test</arg>
</arguments>
<msg timestamp="20170902 20:26:37.285" level="INFO">TODO ping XWtremWeb worker up before one test</msg>
<status status="PASS" endtime="20170902 20:26:37.285" starttime="20170902 20:26:37.285"></status>
</kw>
<kw name="Delete Fonctionnal Xtremweb Tables" library="MySql">
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170902 20:26:37.286" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170902 20:26:37.288" starttime="20170902 20:26:37.286"></status>
</kw>
<status status="PASS" endtime="20170902 20:26:37.288" starttime="20170902 20:26:37.286"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps</arg>
</arguments>
<msg timestamp="20170902 20:26:37.288" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM apps; </msg>
<status status="PASS" endtime="20170902 20:26:37.289" starttime="20170902 20:26:37.288"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.290" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM apps_history; </msg>
<status status="PASS" endtime="20170902 20:26:37.290" starttime="20170902 20:26:37.289"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas</arg>
</arguments>
<msg timestamp="20170902 20:26:37.291" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM datas; </msg>
<status status="PASS" endtime="20170902 20:26:37.291" starttime="20170902 20:26:37.291"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.292" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM datas_history; </msg>
<status status="PASS" endtime="20170902 20:26:37.292" starttime="20170902 20:26:37.291"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables</arg>
</arguments>
<msg timestamp="20170902 20:26:37.293" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM executables; </msg>
<status status="PASS" endtime="20170902 20:26:37.293" starttime="20170902 20:26:37.292"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.293" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM executables_history; </msg>
<status status="PASS" endtime="20170902 20:26:37.294" starttime="20170902 20:26:37.293"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups</arg>
</arguments>
<msg timestamp="20170902 20:26:37.294" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM groups; </msg>
<status status="PASS" endtime="20170902 20:26:37.294" starttime="20170902 20:26:37.294"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.295" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM groups_history; </msg>
<status status="PASS" endtime="20170902 20:26:37.295" starttime="20170902 20:26:37.294"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts</arg>
</arguments>
<msg timestamp="20170902 20:26:37.295" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM hosts; </msg>
<status status="PASS" endtime="20170902 20:26:37.296" starttime="20170902 20:26:37.295"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.296" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM hosts_history; </msg>
<status status="PASS" endtime="20170902 20:26:37.296" starttime="20170902 20:26:37.296"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships</arg>
</arguments>
<msg timestamp="20170902 20:26:37.297" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM memberships; </msg>
<status status="PASS" endtime="20170902 20:26:37.297" starttime="20170902 20:26:37.297"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.297" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM memberships_history; </msg>
<status status="PASS" endtime="20170902 20:26:37.298" starttime="20170902 20:26:37.297"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions</arg>
</arguments>
<msg timestamp="20170902 20:26:37.298" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sessions; </msg>
<status status="PASS" endtime="20170902 20:26:37.299" starttime="20170902 20:26:37.298"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.299" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sessions_history; </msg>
<status status="PASS" endtime="20170902 20:26:37.299" starttime="20170902 20:26:37.299"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes</arg>
</arguments>
<msg timestamp="20170902 20:26:37.299" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedAppTypes; </msg>
<status status="PASS" endtime="20170902 20:26:37.300" starttime="20170902 20:26:37.299"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.300" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedAppTypes_history; </msg>
<status status="PASS" endtime="20170902 20:26:37.301" starttime="20170902 20:26:37.300"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes</arg>
</arguments>
<msg timestamp="20170902 20:26:37.302" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedPackageTypes; </msg>
<status status="PASS" endtime="20170902 20:26:37.302" starttime="20170902 20:26:37.301"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.303" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedPackageTypes_history; </msg>
<status status="PASS" endtime="20170902 20:26:37.303" starttime="20170902 20:26:37.303"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks</arg>
</arguments>
<msg timestamp="20170902 20:26:37.304" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM tasks; </msg>
<status status="PASS" endtime="20170902 20:26:37.304" starttime="20170902 20:26:37.303"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.304" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM tasks_history; </msg>
<status status="PASS" endtime="20170902 20:26:37.305" starttime="20170902 20:26:37.304"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces</arg>
</arguments>
<msg timestamp="20170902 20:26:37.305" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM traces; </msg>
<status status="PASS" endtime="20170902 20:26:37.306" starttime="20170902 20:26:37.305"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.306" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM traces_history; </msg>
<status status="PASS" endtime="20170902 20:26:37.306" starttime="20170902 20:26:37.306"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups</arg>
</arguments>
<msg timestamp="20170902 20:26:37.307" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM usergroups; </msg>
<status status="PASS" endtime="20170902 20:26:37.307" starttime="20170902 20:26:37.306"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.307" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM usergroups_history; </msg>
<status status="PASS" endtime="20170902 20:26:37.308" starttime="20170902 20:26:37.307"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.308" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM users_history; </msg>
<status status="PASS" endtime="20170902 20:26:37.308" starttime="20170902 20:26:37.308"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works</arg>
</arguments>
<msg timestamp="20170902 20:26:37.309" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM works; </msg>
<status status="PASS" endtime="20170902 20:26:37.309" starttime="20170902 20:26:37.309"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.310" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM works_history; </msg>
<status status="PASS" endtime="20170902 20:26:37.310" starttime="20170902 20:26:37.310"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170902 20:26:37.311" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170902 20:26:37.311" starttime="20170902 20:26:37.311"></status>
</kw>
<status status="PASS" endtime="20170902 20:26:37.311" starttime="20170902 20:26:37.310"></status>
</kw>
<status status="PASS" endtime="20170902 20:26:37.311" starttime="20170902 20:26:37.285"></status>
</kw>
<status status="PASS" endtime="20170902 20:26:37.312" starttime="20170902 20:26:37.175"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>TODO</arg>
</arguments>
<msg timestamp="20170902 20:26:37.313" level="INFO">TODO</msg>
<status status="PASS" endtime="20170902 20:26:37.313" starttime="20170902 20:26:37.312"></status>
</kw>
<kw type="teardown" name="End XWtremWeb Command Test" library="XWCommon">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Nothing to do</arg>
</arguments>
<msg timestamp="20170902 20:26:37.314" level="INFO">Nothing to do</msg>
<status status="PASS" endtime="20170902 20:26:37.314" starttime="20170902 20:26:37.314"></status>
</kw>
<status status="PASS" endtime="20170902 20:26:37.314" starttime="20170902 20:26:37.314"></status>
</kw>
<tags>
<tag>CommandLine Tests</tag>
</tags>
<status status="PASS" endtime="20170902 20:26:37.315" critical="yes" starttime="20170902 20:26:37.175"></status>
</test>
<test id="s1-s3-t8" name="Test 5 Tester le matchmaking">
<kw type="setup" name="Begin XWtremWeb Command Test" library="XWCommon">
<kw name="Ping XWtremWeb Database" library="XWServer">
<kw name="Xtremweb Tables Must Exist" library="MySql">
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170902 20:26:37.324" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170902 20:26:37.325" starttime="20170902 20:26:37.324"></status>
</kw>
<status status="PASS" endtime="20170902 20:26:37.326" starttime="20170902 20:26:37.322"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>appTypes</arg>
</arguments>
<msg timestamp="20170902 20:26:37.326" level="INFO">Executing : Table Must Exist  |  appTypes </msg>
<msg timestamp="20170902 20:26:37.326" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='appTypes' </msg>
<status status="PASS" endtime="20170902 20:26:37.327" starttime="20170902 20:26:37.326"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps</arg>
</arguments>
<msg timestamp="20170902 20:26:37.328" level="INFO">Executing : Table Must Exist  |  apps </msg>
<msg timestamp="20170902 20:26:37.328" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='apps' </msg>
<status status="PASS" endtime="20170902 20:26:37.329" starttime="20170902 20:26:37.327"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.329" level="INFO">Executing : Table Must Exist  |  apps_history </msg>
<msg timestamp="20170902 20:26:37.329" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='apps_history' </msg>
<status status="PASS" endtime="20170902 20:26:37.330" starttime="20170902 20:26:37.329"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>cpuTypes</arg>
</arguments>
<msg timestamp="20170902 20:26:37.331" level="INFO">Executing : Table Must Exist  |  cpuTypes </msg>
<msg timestamp="20170902 20:26:37.331" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='cpuTypes' </msg>
<status status="PASS" endtime="20170902 20:26:37.332" starttime="20170902 20:26:37.331"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>dataTypes</arg>
</arguments>
<msg timestamp="20170902 20:26:37.332" level="INFO">Executing : Table Must Exist  |  dataTypes </msg>
<msg timestamp="20170902 20:26:37.332" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='dataTypes' </msg>
<status status="PASS" endtime="20170902 20:26:37.335" starttime="20170902 20:26:37.332"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas</arg>
</arguments>
<msg timestamp="20170902 20:26:37.337" level="INFO">Executing : Table Must Exist  |  datas </msg>
<msg timestamp="20170902 20:26:37.337" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='datas' </msg>
<status status="PASS" endtime="20170902 20:26:37.339" starttime="20170902 20:26:37.337"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.339" level="INFO">Executing : Table Must Exist  |  datas_history </msg>
<msg timestamp="20170902 20:26:37.339" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='datas_history' </msg>
<status status="PASS" endtime="20170902 20:26:37.341" starttime="20170902 20:26:37.339"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables</arg>
</arguments>
<msg timestamp="20170902 20:26:37.341" level="INFO">Executing : Table Must Exist  |  executables </msg>
<msg timestamp="20170902 20:26:37.341" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='executables' </msg>
<status status="PASS" endtime="20170902 20:26:37.342" starttime="20170902 20:26:37.341"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.343" level="INFO">Executing : Table Must Exist  |  executables_history </msg>
<msg timestamp="20170902 20:26:37.343" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='executables_history' </msg>
<status status="PASS" endtime="20170902 20:26:37.344" starttime="20170902 20:26:37.342"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups</arg>
</arguments>
<msg timestamp="20170902 20:26:37.345" level="INFO">Executing : Table Must Exist  |  groups </msg>
<msg timestamp="20170902 20:26:37.345" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='groups' </msg>
<status status="PASS" endtime="20170902 20:26:37.346" starttime="20170902 20:26:37.344"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.346" level="INFO">Executing : Table Must Exist  |  groups_history </msg>
<msg timestamp="20170902 20:26:37.346" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='groups_history' </msg>
<status status="PASS" endtime="20170902 20:26:37.347" starttime="20170902 20:26:37.346"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts</arg>
</arguments>
<msg timestamp="20170902 20:26:37.347" level="INFO">Executing : Table Must Exist  |  hosts </msg>
<msg timestamp="20170902 20:26:37.348" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='hosts' </msg>
<status status="PASS" endtime="20170902 20:26:37.349" starttime="20170902 20:26:37.347"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.349" level="INFO">Executing : Table Must Exist  |  hosts_history </msg>
<msg timestamp="20170902 20:26:37.349" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='hosts_history' </msg>
<status status="PASS" endtime="20170902 20:26:37.350" starttime="20170902 20:26:37.349"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships</arg>
</arguments>
<msg timestamp="20170902 20:26:37.350" level="INFO">Executing : Table Must Exist  |  memberships </msg>
<msg timestamp="20170902 20:26:37.351" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='memberships' </msg>
<status status="PASS" endtime="20170902 20:26:37.351" starttime="20170902 20:26:37.350"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.352" level="INFO">Executing : Table Must Exist  |  memberships_history </msg>
<msg timestamp="20170902 20:26:37.352" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='memberships_history' </msg>
<status status="PASS" endtime="20170902 20:26:37.353" starttime="20170902 20:26:37.352"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>oses</arg>
</arguments>
<msg timestamp="20170902 20:26:37.353" level="INFO">Executing : Table Must Exist  |  oses </msg>
<msg timestamp="20170902 20:26:37.353" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='oses' </msg>
<status status="PASS" endtime="20170902 20:26:37.354" starttime="20170902 20:26:37.353"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>packageTypes</arg>
</arguments>
<msg timestamp="20170902 20:26:37.355" level="INFO">Executing : Table Must Exist  |  packageTypes </msg>
<msg timestamp="20170902 20:26:37.355" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='packageTypes' </msg>
<status status="PASS" endtime="20170902 20:26:37.356" starttime="20170902 20:26:37.354"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions</arg>
</arguments>
<msg timestamp="20170902 20:26:37.356" level="INFO">Executing : Table Must Exist  |  sessions </msg>
<msg timestamp="20170902 20:26:37.356" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sessions' </msg>
<status status="PASS" endtime="20170902 20:26:37.357" starttime="20170902 20:26:37.356"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.357" level="INFO">Executing : Table Must Exist  |  sessions_history </msg>
<msg timestamp="20170902 20:26:37.357" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sessions_history' </msg>
<status status="PASS" endtime="20170902 20:26:37.358" starttime="20170902 20:26:37.357"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes</arg>
</arguments>
<msg timestamp="20170902 20:26:37.358" level="INFO">Executing : Table Must Exist  |  sharedAppTypes </msg>
<msg timestamp="20170902 20:26:37.358" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedAppTypes' </msg>
<status status="PASS" endtime="20170902 20:26:37.359" starttime="20170902 20:26:37.358"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.360" level="INFO">Executing : Table Must Exist  |  sharedAppTypes_history </msg>
<msg timestamp="20170902 20:26:37.360" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedAppTypes_history' </msg>
<status status="PASS" endtime="20170902 20:26:37.361" starttime="20170902 20:26:37.359"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes</arg>
</arguments>
<msg timestamp="20170902 20:26:37.361" level="INFO">Executing : Table Must Exist  |  sharedPackageTypes </msg>
<msg timestamp="20170902 20:26:37.361" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedPackageTypes' </msg>
<status status="PASS" endtime="20170902 20:26:37.362" starttime="20170902 20:26:37.361"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.362" level="INFO">Executing : Table Must Exist  |  sharedPackageTypes_history </msg>
<msg timestamp="20170902 20:26:37.362" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedPackageTypes_history' </msg>
<status status="PASS" endtime="20170902 20:26:37.363" starttime="20170902 20:26:37.362"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>statuses</arg>
</arguments>
<msg timestamp="20170902 20:26:37.364" level="INFO">Executing : Table Must Exist  |  statuses </msg>
<msg timestamp="20170902 20:26:37.364" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='statuses' </msg>
<status status="PASS" endtime="20170902 20:26:37.365" starttime="20170902 20:26:37.363"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks</arg>
</arguments>
<msg timestamp="20170902 20:26:37.365" level="INFO">Executing : Table Must Exist  |  tasks </msg>
<msg timestamp="20170902 20:26:37.365" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='tasks' </msg>
<status status="PASS" endtime="20170902 20:26:37.366" starttime="20170902 20:26:37.365"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.366" level="INFO">Executing : Table Must Exist  |  tasks_history </msg>
<msg timestamp="20170902 20:26:37.366" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='tasks_history' </msg>
<status status="PASS" endtime="20170902 20:26:37.367" starttime="20170902 20:26:37.366"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces</arg>
</arguments>
<msg timestamp="20170902 20:26:37.368" level="INFO">Executing : Table Must Exist  |  traces </msg>
<msg timestamp="20170902 20:26:37.368" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='traces' </msg>
<status status="PASS" endtime="20170902 20:26:37.369" starttime="20170902 20:26:37.367"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.370" level="INFO">Executing : Table Must Exist  |  traces_history </msg>
<msg timestamp="20170902 20:26:37.370" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='traces_history' </msg>
<status status="PASS" endtime="20170902 20:26:37.372" starttime="20170902 20:26:37.370"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>userRights</arg>
</arguments>
<msg timestamp="20170902 20:26:37.373" level="INFO">Executing : Table Must Exist  |  userRights </msg>
<msg timestamp="20170902 20:26:37.373" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='userRights' </msg>
<status status="PASS" endtime="20170902 20:26:37.376" starttime="20170902 20:26:37.372"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups</arg>
</arguments>
<msg timestamp="20170902 20:26:37.376" level="INFO">Executing : Table Must Exist  |  usergroups </msg>
<msg timestamp="20170902 20:26:37.376" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='usergroups' </msg>
<status status="PASS" endtime="20170902 20:26:37.377" starttime="20170902 20:26:37.376"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.378" level="INFO">Executing : Table Must Exist  |  usergroups_history </msg>
<msg timestamp="20170902 20:26:37.378" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='usergroups_history' </msg>
<status status="PASS" endtime="20170902 20:26:37.379" starttime="20170902 20:26:37.377"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users</arg>
</arguments>
<msg timestamp="20170902 20:26:37.379" level="INFO">Executing : Table Must Exist  |  users </msg>
<msg timestamp="20170902 20:26:37.379" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='users' </msg>
<status status="PASS" endtime="20170902 20:26:37.380" starttime="20170902 20:26:37.379"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.380" level="INFO">Executing : Table Must Exist  |  users_history </msg>
<msg timestamp="20170902 20:26:37.380" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='users_history' </msg>
<status status="PASS" endtime="20170902 20:26:37.381" starttime="20170902 20:26:37.380"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>version</arg>
</arguments>
<msg timestamp="20170902 20:26:37.382" level="INFO">Executing : Table Must Exist  |  version </msg>
<msg timestamp="20170902 20:26:37.382" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='version' </msg>
<status status="PASS" endtime="20170902 20:26:37.387" starttime="20170902 20:26:37.382"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>versions</arg>
</arguments>
<msg timestamp="20170902 20:26:37.388" level="INFO">Executing : Table Must Exist  |  versions </msg>
<msg timestamp="20170902 20:26:37.388" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='versions' </msg>
<status status="PASS" endtime="20170902 20:26:37.389" starttime="20170902 20:26:37.388"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps</arg>
</arguments>
<msg timestamp="20170902 20:26:37.390" level="INFO">Executing : Table Must Exist  |  view_apps </msg>
<msg timestamp="20170902 20:26:37.390" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps' </msg>
<status status="PASS" endtime="20170902 20:26:37.391" starttime="20170902 20:26:37.390"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps_for_offering</arg>
</arguments>
<msg timestamp="20170902 20:26:37.391" level="INFO">Executing : Table Must Exist  |  view_apps_for_offering </msg>
<msg timestamp="20170902 20:26:37.392" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps_for_offering' </msg>
<status status="PASS" endtime="20170902 20:26:37.393" starttime="20170902 20:26:37.391"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps_for_offering_with_file_sizes</arg>
</arguments>
<msg timestamp="20170902 20:26:37.393" level="INFO">Executing : Table Must Exist  |  view_apps_for_offering_with_file_sizes </msg>
<msg timestamp="20170902 20:26:37.393" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps_for_offering_with_file_sizes' </msg>
<status status="PASS" endtime="20170902 20:26:37.394" starttime="20170902 20:26:37.393"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_datas</arg>
</arguments>
<msg timestamp="20170902 20:26:37.394" level="INFO">Executing : Table Must Exist  |  view_datas </msg>
<msg timestamp="20170902 20:26:37.395" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_datas' </msg>
<status status="PASS" endtime="20170902 20:26:37.396" starttime="20170902 20:26:37.394"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_executables</arg>
</arguments>
<msg timestamp="20170902 20:26:37.396" level="INFO">Executing : Table Must Exist  |  view_executables </msg>
<msg timestamp="20170902 20:26:37.396" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_executables' </msg>
<status status="PASS" endtime="20170902 20:26:37.397" starttime="20170902 20:26:37.396"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_groups</arg>
</arguments>
<msg timestamp="20170902 20:26:37.397" level="INFO">Executing : Table Must Exist  |  view_groups </msg>
<msg timestamp="20170902 20:26:37.398" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_groups' </msg>
<status status="PASS" endtime="20170902 20:26:37.398" starttime="20170902 20:26:37.397"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts</arg>
</arguments>
<msg timestamp="20170902 20:26:37.399" level="INFO">Executing : Table Must Exist  |  view_hosts </msg>
<msg timestamp="20170902 20:26:37.399" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts' </msg>
<status status="PASS" endtime="20170902 20:26:37.400" starttime="20170902 20:26:37.399"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_deployable</arg>
</arguments>
<msg timestamp="20170902 20:26:37.400" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_deployable </msg>
<msg timestamp="20170902 20:26:37.400" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_deployable' </msg>
<status status="PASS" endtime="20170902 20:26:37.402" starttime="20170902 20:26:37.400"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_deployable_and_shared</arg>
</arguments>
<msg timestamp="20170902 20:26:37.402" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_deployable_and_shared </msg>
<msg timestamp="20170902 20:26:37.402" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_deployable_and_shared' </msg>
<status status="PASS" endtime="20170902 20:26:37.404" starttime="20170902 20:26:37.402"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_shared</arg>
</arguments>
<msg timestamp="20170902 20:26:37.404" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_shared </msg>
<msg timestamp="20170902 20:26:37.404" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_shared' </msg>
<status status="PASS" endtime="20170902 20:26:37.405" starttime="20170902 20:26:37.404"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_sessions</arg>
</arguments>
<msg timestamp="20170902 20:26:37.406" level="INFO">Executing : Table Must Exist  |  view_sessions </msg>
<msg timestamp="20170902 20:26:37.406" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_sessions' </msg>
<status status="PASS" endtime="20170902 20:26:37.407" starttime="20170902 20:26:37.406"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_tasks</arg>
</arguments>
<msg timestamp="20170902 20:26:37.407" level="INFO">Executing : Table Must Exist  |  view_tasks </msg>
<msg timestamp="20170902 20:26:37.407" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_tasks' </msg>
<status status="PASS" endtime="20170902 20:26:37.408" starttime="20170902 20:26:37.407"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_traces</arg>
</arguments>
<msg timestamp="20170902 20:26:37.409" level="INFO">Executing : Table Must Exist  |  view_traces </msg>
<msg timestamp="20170902 20:26:37.409" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_traces' </msg>
<status status="PASS" endtime="20170902 20:26:37.410" starttime="20170902 20:26:37.409"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_usergroups</arg>
</arguments>
<msg timestamp="20170902 20:26:37.410" level="INFO">Executing : Table Must Exist  |  view_usergroups </msg>
<msg timestamp="20170902 20:26:37.410" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_usergroups' </msg>
<status status="PASS" endtime="20170902 20:26:37.411" starttime="20170902 20:26:37.410"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users</arg>
</arguments>
<msg timestamp="20170902 20:26:37.411" level="INFO">Executing : Table Must Exist  |  view_users </msg>
<msg timestamp="20170902 20:26:37.411" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users' </msg>
<status status="PASS" endtime="20170902 20:26:37.413" starttime="20170902 20:26:37.411"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_apps</arg>
</arguments>
<msg timestamp="20170902 20:26:37.413" level="INFO">Executing : Table Must Exist  |  view_users_apps </msg>
<msg timestamp="20170902 20:26:37.413" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_apps' </msg>
<status status="PASS" endtime="20170902 20:26:37.414" starttime="20170902 20:26:37.413"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_datas</arg>
</arguments>
<msg timestamp="20170902 20:26:37.415" level="INFO">Executing : Table Must Exist  |  view_users_datas </msg>
<msg timestamp="20170902 20:26:37.415" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_datas' </msg>
<status status="PASS" endtime="20170902 20:26:37.416" starttime="20170902 20:26:37.414"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_groups</arg>
</arguments>
<msg timestamp="20170902 20:26:37.416" level="INFO">Executing : Table Must Exist  |  view_users_groups </msg>
<msg timestamp="20170902 20:26:37.416" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_groups' </msg>
<status status="PASS" endtime="20170902 20:26:37.417" starttime="20170902 20:26:37.416"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_hosts</arg>
</arguments>
<msg timestamp="20170902 20:26:37.417" level="INFO">Executing : Table Must Exist  |  view_users_hosts </msg>
<msg timestamp="20170902 20:26:37.418" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_hosts' </msg>
<status status="PASS" endtime="20170902 20:26:37.419" starttime="20170902 20:26:37.417"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_sessions</arg>
</arguments>
<msg timestamp="20170902 20:26:37.419" level="INFO">Executing : Table Must Exist  |  view_users_sessions </msg>
<msg timestamp="20170902 20:26:37.419" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_sessions' </msg>
<status status="PASS" endtime="20170902 20:26:37.420" starttime="20170902 20:26:37.419"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_tasks</arg>
</arguments>
<msg timestamp="20170902 20:26:37.421" level="INFO">Executing : Table Must Exist  |  view_users_tasks </msg>
<msg timestamp="20170902 20:26:37.421" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_tasks' </msg>
<status status="PASS" endtime="20170902 20:26:37.422" starttime="20170902 20:26:37.420"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_traces</arg>
</arguments>
<msg timestamp="20170902 20:26:37.422" level="INFO">Executing : Table Must Exist  |  view_users_traces </msg>
<msg timestamp="20170902 20:26:37.422" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_traces' </msg>
<status status="PASS" endtime="20170902 20:26:37.424" starttime="20170902 20:26:37.422"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_usergroups</arg>
</arguments>
<msg timestamp="20170902 20:26:37.425" level="INFO">Executing : Table Must Exist  |  view_users_usergroups </msg>
<msg timestamp="20170902 20:26:37.425" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_usergroups' </msg>
<status status="PASS" endtime="20170902 20:26:37.426" starttime="20170902 20:26:37.424"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_users</arg>
</arguments>
<msg timestamp="20170902 20:26:37.427" level="INFO">Executing : Table Must Exist  |  view_users_users </msg>
<msg timestamp="20170902 20:26:37.427" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_users' </msg>
<status status="PASS" endtime="20170902 20:26:37.428" starttime="20170902 20:26:37.426"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_works</arg>
</arguments>
<msg timestamp="20170902 20:26:37.428" level="INFO">Executing : Table Must Exist  |  view_users_works </msg>
<msg timestamp="20170902 20:26:37.428" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_works' </msg>
<status status="PASS" endtime="20170902 20:26:37.430" starttime="20170902 20:26:37.428"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works</arg>
</arguments>
<msg timestamp="20170902 20:26:37.430" level="INFO">Executing : Table Must Exist  |  view_works </msg>
<msg timestamp="20170902 20:26:37.430" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works' </msg>
<status status="PASS" endtime="20170902 20:26:37.431" starttime="20170902 20:26:37.430"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works_for_billing</arg>
</arguments>
<msg timestamp="20170902 20:26:37.432" level="INFO">Executing : Table Must Exist  |  view_works_for_billing </msg>
<msg timestamp="20170902 20:26:37.432" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works_for_billing' </msg>
<status status="PASS" endtime="20170902 20:26:37.433" starttime="20170902 20:26:37.431"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works_for_billing_with_file_sizes</arg>
</arguments>
<msg timestamp="20170902 20:26:37.433" level="INFO">Executing : Table Must Exist  |  view_works_for_billing_with_file_sizes </msg>
<msg timestamp="20170902 20:26:37.433" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works_for_billing_with_file_sizes' </msg>
<status status="PASS" endtime="20170902 20:26:37.434" starttime="20170902 20:26:37.433"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works</arg>
</arguments>
<msg timestamp="20170902 20:26:37.434" level="INFO">Executing : Table Must Exist  |  works </msg>
<msg timestamp="20170902 20:26:37.434" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='works' </msg>
<status status="PASS" endtime="20170902 20:26:37.435" starttime="20170902 20:26:37.434"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.436" level="INFO">Executing : Table Must Exist  |  works_history </msg>
<msg timestamp="20170902 20:26:37.436" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='works_history' </msg>
<status status="PASS" endtime="20170902 20:26:37.437" starttime="20170902 20:26:37.435"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170902 20:26:37.437" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170902 20:26:37.438" starttime="20170902 20:26:37.437"></status>
</kw>
<status status="PASS" endtime="20170902 20:26:37.438" starttime="20170902 20:26:37.437"></status>
</kw>
<status status="PASS" endtime="20170902 20:26:37.438" starttime="20170902 20:26:37.322"></status>
</kw>
<status status="PASS" endtime="20170902 20:26:37.438" starttime="20170902 20:26:37.322"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>TODO ping XWtremWeb server up</arg>
</arguments>
<msg timestamp="20170902 20:26:37.438" level="INFO">TODO ping XWtremWeb server up</msg>
<status status="PASS" endtime="20170902 20:26:37.438" starttime="20170902 20:26:37.438"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>TODO ping XWtremWeb worker up before one test</arg>
</arguments>
<msg timestamp="20170902 20:26:37.439" level="INFO">TODO ping XWtremWeb worker up before one test</msg>
<status status="PASS" endtime="20170902 20:26:37.439" starttime="20170902 20:26:37.439"></status>
</kw>
<kw name="Delete Fonctionnal Xtremweb Tables" library="MySql">
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170902 20:26:37.440" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170902 20:26:37.441" starttime="20170902 20:26:37.439"></status>
</kw>
<status status="PASS" endtime="20170902 20:26:37.441" starttime="20170902 20:26:37.439"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps</arg>
</arguments>
<msg timestamp="20170902 20:26:37.442" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM apps; </msg>
<status status="PASS" endtime="20170902 20:26:37.442" starttime="20170902 20:26:37.441"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.443" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM apps_history; </msg>
<status status="PASS" endtime="20170902 20:26:37.443" starttime="20170902 20:26:37.442"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas</arg>
</arguments>
<msg timestamp="20170902 20:26:37.444" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM datas; </msg>
<status status="PASS" endtime="20170902 20:26:37.444" starttime="20170902 20:26:37.443"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.444" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM datas_history; </msg>
<status status="PASS" endtime="20170902 20:26:37.445" starttime="20170902 20:26:37.444"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables</arg>
</arguments>
<msg timestamp="20170902 20:26:37.445" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM executables; </msg>
<status status="PASS" endtime="20170902 20:26:37.446" starttime="20170902 20:26:37.445"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.446" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM executables_history; </msg>
<status status="PASS" endtime="20170902 20:26:37.446" starttime="20170902 20:26:37.446"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups</arg>
</arguments>
<msg timestamp="20170902 20:26:37.447" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM groups; </msg>
<status status="PASS" endtime="20170902 20:26:37.447" starttime="20170902 20:26:37.446"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.448" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM groups_history; </msg>
<status status="PASS" endtime="20170902 20:26:37.448" starttime="20170902 20:26:37.447"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts</arg>
</arguments>
<msg timestamp="20170902 20:26:37.448" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM hosts; </msg>
<status status="PASS" endtime="20170902 20:26:37.449" starttime="20170902 20:26:37.448"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.449" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM hosts_history; </msg>
<status status="PASS" endtime="20170902 20:26:37.450" starttime="20170902 20:26:37.449"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships</arg>
</arguments>
<msg timestamp="20170902 20:26:37.450" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM memberships; </msg>
<status status="PASS" endtime="20170902 20:26:37.450" starttime="20170902 20:26:37.450"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.451" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM memberships_history; </msg>
<status status="PASS" endtime="20170902 20:26:37.451" starttime="20170902 20:26:37.450"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions</arg>
</arguments>
<msg timestamp="20170902 20:26:37.451" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sessions; </msg>
<status status="PASS" endtime="20170902 20:26:37.452" starttime="20170902 20:26:37.451"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.452" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sessions_history; </msg>
<status status="PASS" endtime="20170902 20:26:37.452" starttime="20170902 20:26:37.452"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes</arg>
</arguments>
<msg timestamp="20170902 20:26:37.453" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedAppTypes; </msg>
<status status="PASS" endtime="20170902 20:26:37.453" starttime="20170902 20:26:37.453"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.453" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedAppTypes_history; </msg>
<status status="PASS" endtime="20170902 20:26:37.455" starttime="20170902 20:26:37.453"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes</arg>
</arguments>
<msg timestamp="20170902 20:26:37.455" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedPackageTypes; </msg>
<status status="PASS" endtime="20170902 20:26:37.455" starttime="20170902 20:26:37.455"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.456" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedPackageTypes_history; </msg>
<status status="PASS" endtime="20170902 20:26:37.456" starttime="20170902 20:26:37.456"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks</arg>
</arguments>
<msg timestamp="20170902 20:26:37.457" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM tasks; </msg>
<status status="PASS" endtime="20170902 20:26:37.457" starttime="20170902 20:26:37.456"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.457" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM tasks_history; </msg>
<status status="PASS" endtime="20170902 20:26:37.458" starttime="20170902 20:26:37.457"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces</arg>
</arguments>
<msg timestamp="20170902 20:26:37.458" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM traces; </msg>
<status status="PASS" endtime="20170902 20:26:37.458" starttime="20170902 20:26:37.458"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.459" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM traces_history; </msg>
<status status="PASS" endtime="20170902 20:26:37.459" starttime="20170902 20:26:37.459"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups</arg>
</arguments>
<msg timestamp="20170902 20:26:37.460" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM usergroups; </msg>
<status status="PASS" endtime="20170902 20:26:37.460" starttime="20170902 20:26:37.459"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.460" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM usergroups_history; </msg>
<status status="PASS" endtime="20170902 20:26:37.461" starttime="20170902 20:26:37.460"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.461" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM users_history; </msg>
<status status="PASS" endtime="20170902 20:26:37.461" starttime="20170902 20:26:37.461"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works</arg>
</arguments>
<msg timestamp="20170902 20:26:37.462" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM works; </msg>
<status status="PASS" endtime="20170902 20:26:37.462" starttime="20170902 20:26:37.462"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.463" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM works_history; </msg>
<status status="PASS" endtime="20170902 20:26:37.463" starttime="20170902 20:26:37.463"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170902 20:26:37.464" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170902 20:26:37.464" starttime="20170902 20:26:37.464"></status>
</kw>
<status status="PASS" endtime="20170902 20:26:37.464" starttime="20170902 20:26:37.463"></status>
</kw>
<status status="PASS" endtime="20170902 20:26:37.464" starttime="20170902 20:26:37.439"></status>
</kw>
<status status="PASS" endtime="20170902 20:26:37.464" starttime="20170902 20:26:37.321"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>TODO</arg>
</arguments>
<msg timestamp="20170902 20:26:37.465" level="INFO">TODO</msg>
<status status="PASS" endtime="20170902 20:26:37.465" starttime="20170902 20:26:37.465"></status>
</kw>
<kw type="teardown" name="End XWtremWeb Command Test" library="XWCommon">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Nothing to do</arg>
</arguments>
<msg timestamp="20170902 20:26:37.466" level="INFO">Nothing to do</msg>
<status status="PASS" endtime="20170902 20:26:37.466" starttime="20170902 20:26:37.466"></status>
</kw>
<status status="PASS" endtime="20170902 20:26:37.467" starttime="20170902 20:26:37.466"></status>
</kw>
<doc>Ces test doivent prouver que le scheduler fonctionne correctement.Pour ce faire, il faut insérer une application avec un binaire qui ne correspond à aucun worker du déploiement. Pour ce test nous pouvons utiliser n’importe quelle application avec n’importe quel binaire. Il convient cependant de s’assurer qu’on enregistre l’application avec un type de binaire inutilisable pour le déploiement présenté dans l’introduction.</doc>
<tags>
<tag>CommandLine Tests</tag>
</tags>
<status status="PASS" endtime="20170902 20:26:37.467" critical="yes" starttime="20170902 20:26:37.317"></status>
</test>
<test id="s1-s3-t9" name="Test 6 Récupérer les résultats un job">
<kw type="setup" name="Begin XWtremWeb Command Test" library="XWCommon">
<kw name="Ping XWtremWeb Database" library="XWServer">
<kw name="Xtremweb Tables Must Exist" library="MySql">
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170902 20:26:37.470" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170902 20:26:37.471" starttime="20170902 20:26:37.470"></status>
</kw>
<status status="PASS" endtime="20170902 20:26:37.471" starttime="20170902 20:26:37.469"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>appTypes</arg>
</arguments>
<msg timestamp="20170902 20:26:37.472" level="INFO">Executing : Table Must Exist  |  appTypes </msg>
<msg timestamp="20170902 20:26:37.472" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='appTypes' </msg>
<status status="PASS" endtime="20170902 20:26:37.473" starttime="20170902 20:26:37.472"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps</arg>
</arguments>
<msg timestamp="20170902 20:26:37.473" level="INFO">Executing : Table Must Exist  |  apps </msg>
<msg timestamp="20170902 20:26:37.473" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='apps' </msg>
<status status="PASS" endtime="20170902 20:26:37.474" starttime="20170902 20:26:37.473"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.475" level="INFO">Executing : Table Must Exist  |  apps_history </msg>
<msg timestamp="20170902 20:26:37.475" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='apps_history' </msg>
<status status="PASS" endtime="20170902 20:26:37.477" starttime="20170902 20:26:37.475"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>cpuTypes</arg>
</arguments>
<msg timestamp="20170902 20:26:37.477" level="INFO">Executing : Table Must Exist  |  cpuTypes </msg>
<msg timestamp="20170902 20:26:37.478" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='cpuTypes' </msg>
<status status="PASS" endtime="20170902 20:26:37.479" starttime="20170902 20:26:37.477"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>dataTypes</arg>
</arguments>
<msg timestamp="20170902 20:26:37.480" level="INFO">Executing : Table Must Exist  |  dataTypes </msg>
<msg timestamp="20170902 20:26:37.480" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='dataTypes' </msg>
<status status="PASS" endtime="20170902 20:26:37.481" starttime="20170902 20:26:37.480"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas</arg>
</arguments>
<msg timestamp="20170902 20:26:37.482" level="INFO">Executing : Table Must Exist  |  datas </msg>
<msg timestamp="20170902 20:26:37.482" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='datas' </msg>
<status status="PASS" endtime="20170902 20:26:37.483" starttime="20170902 20:26:37.481"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.485" level="INFO">Executing : Table Must Exist  |  datas_history </msg>
<msg timestamp="20170902 20:26:37.485" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='datas_history' </msg>
<status status="PASS" endtime="20170902 20:26:37.486" starttime="20170902 20:26:37.484"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables</arg>
</arguments>
<msg timestamp="20170902 20:26:37.486" level="INFO">Executing : Table Must Exist  |  executables </msg>
<msg timestamp="20170902 20:26:37.486" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='executables' </msg>
<status status="PASS" endtime="20170902 20:26:37.487" starttime="20170902 20:26:37.486"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.488" level="INFO">Executing : Table Must Exist  |  executables_history </msg>
<msg timestamp="20170902 20:26:37.488" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='executables_history' </msg>
<status status="PASS" endtime="20170902 20:26:37.489" starttime="20170902 20:26:37.488"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups</arg>
</arguments>
<msg timestamp="20170902 20:26:37.489" level="INFO">Executing : Table Must Exist  |  groups </msg>
<msg timestamp="20170902 20:26:37.489" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='groups' </msg>
<status status="PASS" endtime="20170902 20:26:37.490" starttime="20170902 20:26:37.489"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.491" level="INFO">Executing : Table Must Exist  |  groups_history </msg>
<msg timestamp="20170902 20:26:37.491" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='groups_history' </msg>
<status status="PASS" endtime="20170902 20:26:37.492" starttime="20170902 20:26:37.490"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts</arg>
</arguments>
<msg timestamp="20170902 20:26:37.492" level="INFO">Executing : Table Must Exist  |  hosts </msg>
<msg timestamp="20170902 20:26:37.492" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='hosts' </msg>
<status status="PASS" endtime="20170902 20:26:37.493" starttime="20170902 20:26:37.492"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.494" level="INFO">Executing : Table Must Exist  |  hosts_history </msg>
<msg timestamp="20170902 20:26:37.494" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='hosts_history' </msg>
<status status="PASS" endtime="20170902 20:26:37.495" starttime="20170902 20:26:37.494"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships</arg>
</arguments>
<msg timestamp="20170902 20:26:37.495" level="INFO">Executing : Table Must Exist  |  memberships </msg>
<msg timestamp="20170902 20:26:37.495" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='memberships' </msg>
<status status="PASS" endtime="20170902 20:26:37.496" starttime="20170902 20:26:37.495"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.496" level="INFO">Executing : Table Must Exist  |  memberships_history </msg>
<msg timestamp="20170902 20:26:37.497" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='memberships_history' </msg>
<status status="PASS" endtime="20170902 20:26:37.497" starttime="20170902 20:26:37.496"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>oses</arg>
</arguments>
<msg timestamp="20170902 20:26:37.498" level="INFO">Executing : Table Must Exist  |  oses </msg>
<msg timestamp="20170902 20:26:37.498" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='oses' </msg>
<status status="PASS" endtime="20170902 20:26:37.499" starttime="20170902 20:26:37.498"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>packageTypes</arg>
</arguments>
<msg timestamp="20170902 20:26:37.499" level="INFO">Executing : Table Must Exist  |  packageTypes </msg>
<msg timestamp="20170902 20:26:37.499" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='packageTypes' </msg>
<status status="PASS" endtime="20170902 20:26:37.500" starttime="20170902 20:26:37.499"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions</arg>
</arguments>
<msg timestamp="20170902 20:26:37.501" level="INFO">Executing : Table Must Exist  |  sessions </msg>
<msg timestamp="20170902 20:26:37.501" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sessions' </msg>
<status status="PASS" endtime="20170902 20:26:37.502" starttime="20170902 20:26:37.500"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.502" level="INFO">Executing : Table Must Exist  |  sessions_history </msg>
<msg timestamp="20170902 20:26:37.502" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sessions_history' </msg>
<status status="PASS" endtime="20170902 20:26:37.503" starttime="20170902 20:26:37.502"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes</arg>
</arguments>
<msg timestamp="20170902 20:26:37.503" level="INFO">Executing : Table Must Exist  |  sharedAppTypes </msg>
<msg timestamp="20170902 20:26:37.503" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedAppTypes' </msg>
<status status="PASS" endtime="20170902 20:26:37.504" starttime="20170902 20:26:37.503"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.504" level="INFO">Executing : Table Must Exist  |  sharedAppTypes_history </msg>
<msg timestamp="20170902 20:26:37.505" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedAppTypes_history' </msg>
<status status="PASS" endtime="20170902 20:26:37.505" starttime="20170902 20:26:37.504"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes</arg>
</arguments>
<msg timestamp="20170902 20:26:37.506" level="INFO">Executing : Table Must Exist  |  sharedPackageTypes </msg>
<msg timestamp="20170902 20:26:37.506" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedPackageTypes' </msg>
<status status="PASS" endtime="20170902 20:26:37.507" starttime="20170902 20:26:37.506"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.507" level="INFO">Executing : Table Must Exist  |  sharedPackageTypes_history </msg>
<msg timestamp="20170902 20:26:37.507" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedPackageTypes_history' </msg>
<status status="PASS" endtime="20170902 20:26:37.508" starttime="20170902 20:26:37.507"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>statuses</arg>
</arguments>
<msg timestamp="20170902 20:26:37.509" level="INFO">Executing : Table Must Exist  |  statuses </msg>
<msg timestamp="20170902 20:26:37.509" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='statuses' </msg>
<status status="PASS" endtime="20170902 20:26:37.509" starttime="20170902 20:26:37.508"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks</arg>
</arguments>
<msg timestamp="20170902 20:26:37.510" level="INFO">Executing : Table Must Exist  |  tasks </msg>
<msg timestamp="20170902 20:26:37.510" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='tasks' </msg>
<status status="PASS" endtime="20170902 20:26:37.511" starttime="20170902 20:26:37.510"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.511" level="INFO">Executing : Table Must Exist  |  tasks_history </msg>
<msg timestamp="20170902 20:26:37.511" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='tasks_history' </msg>
<status status="PASS" endtime="20170902 20:26:37.512" starttime="20170902 20:26:37.511"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces</arg>
</arguments>
<msg timestamp="20170902 20:26:37.512" level="INFO">Executing : Table Must Exist  |  traces </msg>
<msg timestamp="20170902 20:26:37.513" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='traces' </msg>
<status status="PASS" endtime="20170902 20:26:37.513" starttime="20170902 20:26:37.512"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.514" level="INFO">Executing : Table Must Exist  |  traces_history </msg>
<msg timestamp="20170902 20:26:37.514" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='traces_history' </msg>
<status status="PASS" endtime="20170902 20:26:37.515" starttime="20170902 20:26:37.514"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>userRights</arg>
</arguments>
<msg timestamp="20170902 20:26:37.515" level="INFO">Executing : Table Must Exist  |  userRights </msg>
<msg timestamp="20170902 20:26:37.515" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='userRights' </msg>
<status status="PASS" endtime="20170902 20:26:37.517" starttime="20170902 20:26:37.515"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups</arg>
</arguments>
<msg timestamp="20170902 20:26:37.517" level="INFO">Executing : Table Must Exist  |  usergroups </msg>
<msg timestamp="20170902 20:26:37.517" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='usergroups' </msg>
<status status="PASS" endtime="20170902 20:26:37.518" starttime="20170902 20:26:37.517"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.519" level="INFO">Executing : Table Must Exist  |  usergroups_history </msg>
<msg timestamp="20170902 20:26:37.519" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='usergroups_history' </msg>
<status status="PASS" endtime="20170902 20:26:37.521" starttime="20170902 20:26:37.518"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users</arg>
</arguments>
<msg timestamp="20170902 20:26:37.522" level="INFO">Executing : Table Must Exist  |  users </msg>
<msg timestamp="20170902 20:26:37.522" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='users' </msg>
<status status="PASS" endtime="20170902 20:26:37.523" starttime="20170902 20:26:37.521"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.525" level="INFO">Executing : Table Must Exist  |  users_history </msg>
<msg timestamp="20170902 20:26:37.525" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='users_history' </msg>
<status status="PASS" endtime="20170902 20:26:37.526" starttime="20170902 20:26:37.524"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>version</arg>
</arguments>
<msg timestamp="20170902 20:26:37.526" level="INFO">Executing : Table Must Exist  |  version </msg>
<msg timestamp="20170902 20:26:37.526" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='version' </msg>
<status status="PASS" endtime="20170902 20:26:37.528" starttime="20170902 20:26:37.526"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>versions</arg>
</arguments>
<msg timestamp="20170902 20:26:37.529" level="INFO">Executing : Table Must Exist  |  versions </msg>
<msg timestamp="20170902 20:26:37.529" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='versions' </msg>
<status status="PASS" endtime="20170902 20:26:37.530" starttime="20170902 20:26:37.528"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps</arg>
</arguments>
<msg timestamp="20170902 20:26:37.530" level="INFO">Executing : Table Must Exist  |  view_apps </msg>
<msg timestamp="20170902 20:26:37.530" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps' </msg>
<status status="PASS" endtime="20170902 20:26:37.531" starttime="20170902 20:26:37.530"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps_for_offering</arg>
</arguments>
<msg timestamp="20170902 20:26:37.532" level="INFO">Executing : Table Must Exist  |  view_apps_for_offering </msg>
<msg timestamp="20170902 20:26:37.532" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps_for_offering' </msg>
<status status="PASS" endtime="20170902 20:26:37.535" starttime="20170902 20:26:37.531"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps_for_offering_with_file_sizes</arg>
</arguments>
<msg timestamp="20170902 20:26:37.537" level="INFO">Executing : Table Must Exist  |  view_apps_for_offering_with_file_sizes </msg>
<msg timestamp="20170902 20:26:37.537" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps_for_offering_with_file_sizes' </msg>
<status status="PASS" endtime="20170902 20:26:37.539" starttime="20170902 20:26:37.536"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_datas</arg>
</arguments>
<msg timestamp="20170902 20:26:37.539" level="INFO">Executing : Table Must Exist  |  view_datas </msg>
<msg timestamp="20170902 20:26:37.539" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_datas' </msg>
<status status="PASS" endtime="20170902 20:26:37.541" starttime="20170902 20:26:37.539"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_executables</arg>
</arguments>
<msg timestamp="20170902 20:26:37.542" level="INFO">Executing : Table Must Exist  |  view_executables </msg>
<msg timestamp="20170902 20:26:37.542" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_executables' </msg>
<status status="PASS" endtime="20170902 20:26:37.543" starttime="20170902 20:26:37.542"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_groups</arg>
</arguments>
<msg timestamp="20170902 20:26:37.543" level="INFO">Executing : Table Must Exist  |  view_groups </msg>
<msg timestamp="20170902 20:26:37.543" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_groups' </msg>
<status status="PASS" endtime="20170902 20:26:37.544" starttime="20170902 20:26:37.543"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts</arg>
</arguments>
<msg timestamp="20170902 20:26:37.545" level="INFO">Executing : Table Must Exist  |  view_hosts </msg>
<msg timestamp="20170902 20:26:37.545" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts' </msg>
<status status="PASS" endtime="20170902 20:26:37.546" starttime="20170902 20:26:37.544"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_deployable</arg>
</arguments>
<msg timestamp="20170902 20:26:37.546" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_deployable </msg>
<msg timestamp="20170902 20:26:37.546" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_deployable' </msg>
<status status="PASS" endtime="20170902 20:26:37.547" starttime="20170902 20:26:37.546"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_deployable_and_shared</arg>
</arguments>
<msg timestamp="20170902 20:26:37.548" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_deployable_and_shared </msg>
<msg timestamp="20170902 20:26:37.548" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_deployable_and_shared' </msg>
<status status="PASS" endtime="20170902 20:26:37.549" starttime="20170902 20:26:37.548"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_shared</arg>
</arguments>
<msg timestamp="20170902 20:26:37.550" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_shared </msg>
<msg timestamp="20170902 20:26:37.550" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_shared' </msg>
<status status="PASS" endtime="20170902 20:26:37.551" starttime="20170902 20:26:37.549"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_sessions</arg>
</arguments>
<msg timestamp="20170902 20:26:37.551" level="INFO">Executing : Table Must Exist  |  view_sessions </msg>
<msg timestamp="20170902 20:26:37.551" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_sessions' </msg>
<status status="PASS" endtime="20170902 20:26:37.552" starttime="20170902 20:26:37.551"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_tasks</arg>
</arguments>
<msg timestamp="20170902 20:26:37.552" level="INFO">Executing : Table Must Exist  |  view_tasks </msg>
<msg timestamp="20170902 20:26:37.553" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_tasks' </msg>
<status status="PASS" endtime="20170902 20:26:37.554" starttime="20170902 20:26:37.552"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_traces</arg>
</arguments>
<msg timestamp="20170902 20:26:37.554" level="INFO">Executing : Table Must Exist  |  view_traces </msg>
<msg timestamp="20170902 20:26:37.554" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_traces' </msg>
<status status="PASS" endtime="20170902 20:26:37.555" starttime="20170902 20:26:37.554"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_usergroups</arg>
</arguments>
<msg timestamp="20170902 20:26:37.555" level="INFO">Executing : Table Must Exist  |  view_usergroups </msg>
<msg timestamp="20170902 20:26:37.555" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_usergroups' </msg>
<status status="PASS" endtime="20170902 20:26:37.556" starttime="20170902 20:26:37.555"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users</arg>
</arguments>
<msg timestamp="20170902 20:26:37.556" level="INFO">Executing : Table Must Exist  |  view_users </msg>
<msg timestamp="20170902 20:26:37.557" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users' </msg>
<status status="PASS" endtime="20170902 20:26:37.558" starttime="20170902 20:26:37.556"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_apps</arg>
</arguments>
<msg timestamp="20170902 20:26:37.558" level="INFO">Executing : Table Must Exist  |  view_users_apps </msg>
<msg timestamp="20170902 20:26:37.558" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_apps' </msg>
<status status="PASS" endtime="20170902 20:26:37.560" starttime="20170902 20:26:37.558"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_datas</arg>
</arguments>
<msg timestamp="20170902 20:26:37.561" level="INFO">Executing : Table Must Exist  |  view_users_datas </msg>
<msg timestamp="20170902 20:26:37.561" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_datas' </msg>
<status status="PASS" endtime="20170902 20:26:37.562" starttime="20170902 20:26:37.561"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_groups</arg>
</arguments>
<msg timestamp="20170902 20:26:37.563" level="INFO">Executing : Table Must Exist  |  view_users_groups </msg>
<msg timestamp="20170902 20:26:37.563" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_groups' </msg>
<status status="PASS" endtime="20170902 20:26:37.564" starttime="20170902 20:26:37.562"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_hosts</arg>
</arguments>
<msg timestamp="20170902 20:26:37.564" level="INFO">Executing : Table Must Exist  |  view_users_hosts </msg>
<msg timestamp="20170902 20:26:37.564" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_hosts' </msg>
<status status="PASS" endtime="20170902 20:26:37.565" starttime="20170902 20:26:37.564"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_sessions</arg>
</arguments>
<msg timestamp="20170902 20:26:37.566" level="INFO">Executing : Table Must Exist  |  view_users_sessions </msg>
<msg timestamp="20170902 20:26:37.566" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_sessions' </msg>
<status status="PASS" endtime="20170902 20:26:37.567" starttime="20170902 20:26:37.565"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_tasks</arg>
</arguments>
<msg timestamp="20170902 20:26:37.567" level="INFO">Executing : Table Must Exist  |  view_users_tasks </msg>
<msg timestamp="20170902 20:26:37.567" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_tasks' </msg>
<status status="PASS" endtime="20170902 20:26:37.568" starttime="20170902 20:26:37.567"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_traces</arg>
</arguments>
<msg timestamp="20170902 20:26:37.569" level="INFO">Executing : Table Must Exist  |  view_users_traces </msg>
<msg timestamp="20170902 20:26:37.569" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_traces' </msg>
<status status="PASS" endtime="20170902 20:26:37.570" starttime="20170902 20:26:37.568"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_usergroups</arg>
</arguments>
<msg timestamp="20170902 20:26:37.570" level="INFO">Executing : Table Must Exist  |  view_users_usergroups </msg>
<msg timestamp="20170902 20:26:37.570" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_usergroups' </msg>
<status status="PASS" endtime="20170902 20:26:37.571" starttime="20170902 20:26:37.570"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_users</arg>
</arguments>
<msg timestamp="20170902 20:26:37.571" level="INFO">Executing : Table Must Exist  |  view_users_users </msg>
<msg timestamp="20170902 20:26:37.571" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_users' </msg>
<status status="PASS" endtime="20170902 20:26:37.573" starttime="20170902 20:26:37.571"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_works</arg>
</arguments>
<msg timestamp="20170902 20:26:37.573" level="INFO">Executing : Table Must Exist  |  view_users_works </msg>
<msg timestamp="20170902 20:26:37.573" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_works' </msg>
<status status="PASS" endtime="20170902 20:26:37.575" starttime="20170902 20:26:37.573"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works</arg>
</arguments>
<msg timestamp="20170902 20:26:37.575" level="INFO">Executing : Table Must Exist  |  view_works </msg>
<msg timestamp="20170902 20:26:37.575" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works' </msg>
<status status="PASS" endtime="20170902 20:26:37.577" starttime="20170902 20:26:37.575"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works_for_billing</arg>
</arguments>
<msg timestamp="20170902 20:26:37.577" level="INFO">Executing : Table Must Exist  |  view_works_for_billing </msg>
<msg timestamp="20170902 20:26:37.577" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works_for_billing' </msg>
<status status="PASS" endtime="20170902 20:26:37.579" starttime="20170902 20:26:37.577"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works_for_billing_with_file_sizes</arg>
</arguments>
<msg timestamp="20170902 20:26:37.579" level="INFO">Executing : Table Must Exist  |  view_works_for_billing_with_file_sizes </msg>
<msg timestamp="20170902 20:26:37.579" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works_for_billing_with_file_sizes' </msg>
<status status="PASS" endtime="20170902 20:26:37.580" starttime="20170902 20:26:37.579"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works</arg>
</arguments>
<msg timestamp="20170902 20:26:37.581" level="INFO">Executing : Table Must Exist  |  works </msg>
<msg timestamp="20170902 20:26:37.581" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='works' </msg>
<status status="PASS" endtime="20170902 20:26:37.581" starttime="20170902 20:26:37.580"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.582" level="INFO">Executing : Table Must Exist  |  works_history </msg>
<msg timestamp="20170902 20:26:37.582" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='works_history' </msg>
<status status="PASS" endtime="20170902 20:26:37.583" starttime="20170902 20:26:37.582"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170902 20:26:37.583" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170902 20:26:37.584" starttime="20170902 20:26:37.583"></status>
</kw>
<status status="PASS" endtime="20170902 20:26:37.584" starttime="20170902 20:26:37.583"></status>
</kw>
<status status="PASS" endtime="20170902 20:26:37.584" starttime="20170902 20:26:37.469"></status>
</kw>
<status status="PASS" endtime="20170902 20:26:37.584" starttime="20170902 20:26:37.469"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>TODO ping XWtremWeb server up</arg>
</arguments>
<msg timestamp="20170902 20:26:37.584" level="INFO">TODO ping XWtremWeb server up</msg>
<status status="PASS" endtime="20170902 20:26:37.584" starttime="20170902 20:26:37.584"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>TODO ping XWtremWeb worker up before one test</arg>
</arguments>
<msg timestamp="20170902 20:26:37.585" level="INFO">TODO ping XWtremWeb worker up before one test</msg>
<status status="PASS" endtime="20170902 20:26:37.585" starttime="20170902 20:26:37.585"></status>
</kw>
<kw name="Delete Fonctionnal Xtremweb Tables" library="MySql">
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170902 20:26:37.586" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170902 20:26:37.587" starttime="20170902 20:26:37.586"></status>
</kw>
<status status="PASS" endtime="20170902 20:26:37.588" starttime="20170902 20:26:37.585"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps</arg>
</arguments>
<msg timestamp="20170902 20:26:37.589" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM apps; </msg>
<status status="PASS" endtime="20170902 20:26:37.590" starttime="20170902 20:26:37.588"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.590" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM apps_history; </msg>
<status status="PASS" endtime="20170902 20:26:37.591" starttime="20170902 20:26:37.590"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas</arg>
</arguments>
<msg timestamp="20170902 20:26:37.592" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM datas; </msg>
<status status="PASS" endtime="20170902 20:26:37.593" starttime="20170902 20:26:37.591"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.593" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM datas_history; </msg>
<status status="PASS" endtime="20170902 20:26:37.594" starttime="20170902 20:26:37.593"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables</arg>
</arguments>
<msg timestamp="20170902 20:26:37.594" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM executables; </msg>
<status status="PASS" endtime="20170902 20:26:37.595" starttime="20170902 20:26:37.594"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.595" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM executables_history; </msg>
<status status="PASS" endtime="20170902 20:26:37.596" starttime="20170902 20:26:37.595"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups</arg>
</arguments>
<msg timestamp="20170902 20:26:37.596" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM groups; </msg>
<status status="PASS" endtime="20170902 20:26:37.597" starttime="20170902 20:26:37.596"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.598" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM groups_history; </msg>
<status status="PASS" endtime="20170902 20:26:37.598" starttime="20170902 20:26:37.597"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts</arg>
</arguments>
<msg timestamp="20170902 20:26:37.599" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM hosts; </msg>
<status status="PASS" endtime="20170902 20:26:37.599" starttime="20170902 20:26:37.598"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.600" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM hosts_history; </msg>
<status status="PASS" endtime="20170902 20:26:37.600" starttime="20170902 20:26:37.599"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships</arg>
</arguments>
<msg timestamp="20170902 20:26:37.601" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM memberships; </msg>
<status status="PASS" endtime="20170902 20:26:37.601" starttime="20170902 20:26:37.601"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.602" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM memberships_history; </msg>
<status status="PASS" endtime="20170902 20:26:37.602" starttime="20170902 20:26:37.602"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions</arg>
</arguments>
<msg timestamp="20170902 20:26:37.603" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sessions; </msg>
<status status="PASS" endtime="20170902 20:26:37.603" starttime="20170902 20:26:37.603"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.604" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sessions_history; </msg>
<status status="PASS" endtime="20170902 20:26:37.604" starttime="20170902 20:26:37.603"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes</arg>
</arguments>
<msg timestamp="20170902 20:26:37.604" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedAppTypes; </msg>
<status status="PASS" endtime="20170902 20:26:37.605" starttime="20170902 20:26:37.604"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.605" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedAppTypes_history; </msg>
<status status="PASS" endtime="20170902 20:26:37.606" starttime="20170902 20:26:37.605"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes</arg>
</arguments>
<msg timestamp="20170902 20:26:37.606" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedPackageTypes; </msg>
<status status="PASS" endtime="20170902 20:26:37.606" starttime="20170902 20:26:37.606"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.607" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedPackageTypes_history; </msg>
<status status="PASS" endtime="20170902 20:26:37.607" starttime="20170902 20:26:37.606"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks</arg>
</arguments>
<msg timestamp="20170902 20:26:37.607" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM tasks; </msg>
<status status="PASS" endtime="20170902 20:26:37.608" starttime="20170902 20:26:37.607"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.608" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM tasks_history; </msg>
<status status="PASS" endtime="20170902 20:26:37.608" starttime="20170902 20:26:37.608"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces</arg>
</arguments>
<msg timestamp="20170902 20:26:37.609" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM traces; </msg>
<status status="PASS" endtime="20170902 20:26:37.609" starttime="20170902 20:26:37.609"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.609" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM traces_history; </msg>
<status status="PASS" endtime="20170902 20:26:37.610" starttime="20170902 20:26:37.609"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups</arg>
</arguments>
<msg timestamp="20170902 20:26:37.610" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM usergroups; </msg>
<status status="PASS" endtime="20170902 20:26:37.611" starttime="20170902 20:26:37.610"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.612" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM usergroups_history; </msg>
<status status="PASS" endtime="20170902 20:26:37.613" starttime="20170902 20:26:37.612"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.614" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM users_history; </msg>
<status status="PASS" endtime="20170902 20:26:37.615" starttime="20170902 20:26:37.614"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works</arg>
</arguments>
<msg timestamp="20170902 20:26:37.617" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM works; </msg>
<status status="PASS" endtime="20170902 20:26:37.617" starttime="20170902 20:26:37.616"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.618" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM works_history; </msg>
<status status="PASS" endtime="20170902 20:26:37.619" starttime="20170902 20:26:37.618"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170902 20:26:37.619" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170902 20:26:37.620" starttime="20170902 20:26:37.619"></status>
</kw>
<status status="PASS" endtime="20170902 20:26:37.620" starttime="20170902 20:26:37.619"></status>
</kw>
<status status="PASS" endtime="20170902 20:26:37.620" starttime="20170902 20:26:37.585"></status>
</kw>
<status status="PASS" endtime="20170902 20:26:37.620" starttime="20170902 20:26:37.468"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>TODO</arg>
</arguments>
<msg timestamp="20170902 20:26:37.621" level="INFO">TODO</msg>
<status status="PASS" endtime="20170902 20:26:37.622" starttime="20170902 20:26:37.621"></status>
</kw>
<kw type="teardown" name="End XWtremWeb Command Test" library="XWCommon">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Nothing to do</arg>
</arguments>
<msg timestamp="20170902 20:26:37.623" level="INFO">Nothing to do</msg>
<status status="PASS" endtime="20170902 20:26:37.623" starttime="20170902 20:26:37.623"></status>
</kw>
<status status="PASS" endtime="20170902 20:26:37.623" starttime="20170902 20:26:37.622"></status>
</kw>
<doc>Récupérer les résultats un job. Vérifier les résultats. Vérifier que le job est bien supprimé.</doc>
<tags>
<tag>CommandLine Tests</tag>
</tags>
<status status="PASS" endtime="20170902 20:26:37.624" critical="yes" starttime="20170902 20:26:37.467"></status>
</test>
<test id="s1-s3-t10" name="Test 7 Tester la durée d’exécution">
<kw type="setup" name="Begin XWtremWeb Command Test" library="XWCommon">
<kw name="Ping XWtremWeb Database" library="XWServer">
<kw name="Xtremweb Tables Must Exist" library="MySql">
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170902 20:26:37.630" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170902 20:26:37.632" starttime="20170902 20:26:37.629"></status>
</kw>
<status status="PASS" endtime="20170902 20:26:37.632" starttime="20170902 20:26:37.629"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>appTypes</arg>
</arguments>
<msg timestamp="20170902 20:26:37.632" level="INFO">Executing : Table Must Exist  |  appTypes </msg>
<msg timestamp="20170902 20:26:37.632" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='appTypes' </msg>
<status status="PASS" endtime="20170902 20:26:37.634" starttime="20170902 20:26:37.632"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps</arg>
</arguments>
<msg timestamp="20170902 20:26:37.634" level="INFO">Executing : Table Must Exist  |  apps </msg>
<msg timestamp="20170902 20:26:37.635" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='apps' </msg>
<status status="PASS" endtime="20170902 20:26:37.636" starttime="20170902 20:26:37.634"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.636" level="INFO">Executing : Table Must Exist  |  apps_history </msg>
<msg timestamp="20170902 20:26:37.636" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='apps_history' </msg>
<status status="PASS" endtime="20170902 20:26:37.638" starttime="20170902 20:26:37.636"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>cpuTypes</arg>
</arguments>
<msg timestamp="20170902 20:26:37.638" level="INFO">Executing : Table Must Exist  |  cpuTypes </msg>
<msg timestamp="20170902 20:26:37.638" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='cpuTypes' </msg>
<status status="PASS" endtime="20170902 20:26:37.639" starttime="20170902 20:26:37.638"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>dataTypes</arg>
</arguments>
<msg timestamp="20170902 20:26:37.640" level="INFO">Executing : Table Must Exist  |  dataTypes </msg>
<msg timestamp="20170902 20:26:37.640" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='dataTypes' </msg>
<status status="PASS" endtime="20170902 20:26:37.641" starttime="20170902 20:26:37.640"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas</arg>
</arguments>
<msg timestamp="20170902 20:26:37.642" level="INFO">Executing : Table Must Exist  |  datas </msg>
<msg timestamp="20170902 20:26:37.642" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='datas' </msg>
<status status="PASS" endtime="20170902 20:26:37.643" starttime="20170902 20:26:37.641"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.644" level="INFO">Executing : Table Must Exist  |  datas_history </msg>
<msg timestamp="20170902 20:26:37.644" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='datas_history' </msg>
<status status="PASS" endtime="20170902 20:26:37.646" starttime="20170902 20:26:37.643"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables</arg>
</arguments>
<msg timestamp="20170902 20:26:37.646" level="INFO">Executing : Table Must Exist  |  executables </msg>
<msg timestamp="20170902 20:26:37.646" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='executables' </msg>
<status status="PASS" endtime="20170902 20:26:37.647" starttime="20170902 20:26:37.646"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.648" level="INFO">Executing : Table Must Exist  |  executables_history </msg>
<msg timestamp="20170902 20:26:37.648" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='executables_history' </msg>
<status status="PASS" endtime="20170902 20:26:37.649" starttime="20170902 20:26:37.647"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups</arg>
</arguments>
<msg timestamp="20170902 20:26:37.649" level="INFO">Executing : Table Must Exist  |  groups </msg>
<msg timestamp="20170902 20:26:37.649" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='groups' </msg>
<status status="PASS" endtime="20170902 20:26:37.650" starttime="20170902 20:26:37.649"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.651" level="INFO">Executing : Table Must Exist  |  groups_history </msg>
<msg timestamp="20170902 20:26:37.651" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='groups_history' </msg>
<status status="PASS" endtime="20170902 20:26:37.652" starttime="20170902 20:26:37.650"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts</arg>
</arguments>
<msg timestamp="20170902 20:26:37.652" level="INFO">Executing : Table Must Exist  |  hosts </msg>
<msg timestamp="20170902 20:26:37.652" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='hosts' </msg>
<status status="PASS" endtime="20170902 20:26:37.653" starttime="20170902 20:26:37.652"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.654" level="INFO">Executing : Table Must Exist  |  hosts_history </msg>
<msg timestamp="20170902 20:26:37.654" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='hosts_history' </msg>
<status status="PASS" endtime="20170902 20:26:37.655" starttime="20170902 20:26:37.654"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships</arg>
</arguments>
<msg timestamp="20170902 20:26:37.656" level="INFO">Executing : Table Must Exist  |  memberships </msg>
<msg timestamp="20170902 20:26:37.656" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='memberships' </msg>
<status status="PASS" endtime="20170902 20:26:37.657" starttime="20170902 20:26:37.655"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.657" level="INFO">Executing : Table Must Exist  |  memberships_history </msg>
<msg timestamp="20170902 20:26:37.657" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='memberships_history' </msg>
<status status="PASS" endtime="20170902 20:26:37.658" starttime="20170902 20:26:37.657"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>oses</arg>
</arguments>
<msg timestamp="20170902 20:26:37.659" level="INFO">Executing : Table Must Exist  |  oses </msg>
<msg timestamp="20170902 20:26:37.659" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='oses' </msg>
<status status="PASS" endtime="20170902 20:26:37.660" starttime="20170902 20:26:37.658"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>packageTypes</arg>
</arguments>
<msg timestamp="20170902 20:26:37.660" level="INFO">Executing : Table Must Exist  |  packageTypes </msg>
<msg timestamp="20170902 20:26:37.660" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='packageTypes' </msg>
<status status="PASS" endtime="20170902 20:26:37.661" starttime="20170902 20:26:37.660"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions</arg>
</arguments>
<msg timestamp="20170902 20:26:37.662" level="INFO">Executing : Table Must Exist  |  sessions </msg>
<msg timestamp="20170902 20:26:37.662" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sessions' </msg>
<status status="PASS" endtime="20170902 20:26:37.663" starttime="20170902 20:26:37.662"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.663" level="INFO">Executing : Table Must Exist  |  sessions_history </msg>
<msg timestamp="20170902 20:26:37.664" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sessions_history' </msg>
<status status="PASS" endtime="20170902 20:26:37.665" starttime="20170902 20:26:37.663"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes</arg>
</arguments>
<msg timestamp="20170902 20:26:37.665" level="INFO">Executing : Table Must Exist  |  sharedAppTypes </msg>
<msg timestamp="20170902 20:26:37.665" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedAppTypes' </msg>
<status status="PASS" endtime="20170902 20:26:37.666" starttime="20170902 20:26:37.665"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.667" level="INFO">Executing : Table Must Exist  |  sharedAppTypes_history </msg>
<msg timestamp="20170902 20:26:37.667" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedAppTypes_history' </msg>
<status status="PASS" endtime="20170902 20:26:37.668" starttime="20170902 20:26:37.667"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes</arg>
</arguments>
<msg timestamp="20170902 20:26:37.668" level="INFO">Executing : Table Must Exist  |  sharedPackageTypes </msg>
<msg timestamp="20170902 20:26:37.669" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedPackageTypes' </msg>
<status status="PASS" endtime="20170902 20:26:37.670" starttime="20170902 20:26:37.668"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.671" level="INFO">Executing : Table Must Exist  |  sharedPackageTypes_history </msg>
<msg timestamp="20170902 20:26:37.671" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedPackageTypes_history' </msg>
<status status="PASS" endtime="20170902 20:26:37.673" starttime="20170902 20:26:37.670"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>statuses</arg>
</arguments>
<msg timestamp="20170902 20:26:37.674" level="INFO">Executing : Table Must Exist  |  statuses </msg>
<msg timestamp="20170902 20:26:37.674" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='statuses' </msg>
<status status="PASS" endtime="20170902 20:26:37.676" starttime="20170902 20:26:37.674"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks</arg>
</arguments>
<msg timestamp="20170902 20:26:37.677" level="INFO">Executing : Table Must Exist  |  tasks </msg>
<msg timestamp="20170902 20:26:37.677" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='tasks' </msg>
<status status="PASS" endtime="20170902 20:26:37.678" starttime="20170902 20:26:37.677"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.679" level="INFO">Executing : Table Must Exist  |  tasks_history </msg>
<msg timestamp="20170902 20:26:37.679" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='tasks_history' </msg>
<status status="PASS" endtime="20170902 20:26:37.680" starttime="20170902 20:26:37.678"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces</arg>
</arguments>
<msg timestamp="20170902 20:26:37.680" level="INFO">Executing : Table Must Exist  |  traces </msg>
<msg timestamp="20170902 20:26:37.680" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='traces' </msg>
<status status="PASS" endtime="20170902 20:26:37.682" starttime="20170902 20:26:37.680"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.682" level="INFO">Executing : Table Must Exist  |  traces_history </msg>
<msg timestamp="20170902 20:26:37.682" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='traces_history' </msg>
<status status="PASS" endtime="20170902 20:26:37.688" starttime="20170902 20:26:37.682"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>userRights</arg>
</arguments>
<msg timestamp="20170902 20:26:37.688" level="INFO">Executing : Table Must Exist  |  userRights </msg>
<msg timestamp="20170902 20:26:37.688" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='userRights' </msg>
<status status="PASS" endtime="20170902 20:26:37.690" starttime="20170902 20:26:37.688"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups</arg>
</arguments>
<msg timestamp="20170902 20:26:37.690" level="INFO">Executing : Table Must Exist  |  usergroups </msg>
<msg timestamp="20170902 20:26:37.690" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='usergroups' </msg>
<status status="PASS" endtime="20170902 20:26:37.691" starttime="20170902 20:26:37.690"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.692" level="INFO">Executing : Table Must Exist  |  usergroups_history </msg>
<msg timestamp="20170902 20:26:37.692" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='usergroups_history' </msg>
<status status="PASS" endtime="20170902 20:26:37.693" starttime="20170902 20:26:37.691"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users</arg>
</arguments>
<msg timestamp="20170902 20:26:37.693" level="INFO">Executing : Table Must Exist  |  users </msg>
<msg timestamp="20170902 20:26:37.693" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='users' </msg>
<status status="PASS" endtime="20170902 20:26:37.695" starttime="20170902 20:26:37.693"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.695" level="INFO">Executing : Table Must Exist  |  users_history </msg>
<msg timestamp="20170902 20:26:37.695" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='users_history' </msg>
<status status="PASS" endtime="20170902 20:26:37.696" starttime="20170902 20:26:37.695"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>version</arg>
</arguments>
<msg timestamp="20170902 20:26:37.697" level="INFO">Executing : Table Must Exist  |  version </msg>
<msg timestamp="20170902 20:26:37.697" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='version' </msg>
<status status="PASS" endtime="20170902 20:26:37.698" starttime="20170902 20:26:37.696"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>versions</arg>
</arguments>
<msg timestamp="20170902 20:26:37.698" level="INFO">Executing : Table Must Exist  |  versions </msg>
<msg timestamp="20170902 20:26:37.698" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='versions' </msg>
<status status="PASS" endtime="20170902 20:26:37.699" starttime="20170902 20:26:37.698"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps</arg>
</arguments>
<msg timestamp="20170902 20:26:37.700" level="INFO">Executing : Table Must Exist  |  view_apps </msg>
<msg timestamp="20170902 20:26:37.700" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps' </msg>
<status status="PASS" endtime="20170902 20:26:37.701" starttime="20170902 20:26:37.699"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps_for_offering</arg>
</arguments>
<msg timestamp="20170902 20:26:37.701" level="INFO">Executing : Table Must Exist  |  view_apps_for_offering </msg>
<msg timestamp="20170902 20:26:37.701" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps_for_offering' </msg>
<status status="PASS" endtime="20170902 20:26:37.703" starttime="20170902 20:26:37.701"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps_for_offering_with_file_sizes</arg>
</arguments>
<msg timestamp="20170902 20:26:37.703" level="INFO">Executing : Table Must Exist  |  view_apps_for_offering_with_file_sizes </msg>
<msg timestamp="20170902 20:26:37.703" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps_for_offering_with_file_sizes' </msg>
<status status="PASS" endtime="20170902 20:26:37.704" starttime="20170902 20:26:37.703"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_datas</arg>
</arguments>
<msg timestamp="20170902 20:26:37.705" level="INFO">Executing : Table Must Exist  |  view_datas </msg>
<msg timestamp="20170902 20:26:37.705" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_datas' </msg>
<status status="PASS" endtime="20170902 20:26:37.706" starttime="20170902 20:26:37.705"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_executables</arg>
</arguments>
<msg timestamp="20170902 20:26:37.706" level="INFO">Executing : Table Must Exist  |  view_executables </msg>
<msg timestamp="20170902 20:26:37.707" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_executables' </msg>
<status status="PASS" endtime="20170902 20:26:37.708" starttime="20170902 20:26:37.706"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_groups</arg>
</arguments>
<msg timestamp="20170902 20:26:37.709" level="INFO">Executing : Table Must Exist  |  view_groups </msg>
<msg timestamp="20170902 20:26:37.709" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_groups' </msg>
<status status="PASS" endtime="20170902 20:26:37.710" starttime="20170902 20:26:37.708"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts</arg>
</arguments>
<msg timestamp="20170902 20:26:37.710" level="INFO">Executing : Table Must Exist  |  view_hosts </msg>
<msg timestamp="20170902 20:26:37.710" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts' </msg>
<status status="PASS" endtime="20170902 20:26:37.712" starttime="20170902 20:26:37.710"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_deployable</arg>
</arguments>
<msg timestamp="20170902 20:26:37.713" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_deployable </msg>
<msg timestamp="20170902 20:26:37.713" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_deployable' </msg>
<status status="PASS" endtime="20170902 20:26:37.714" starttime="20170902 20:26:37.713"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_deployable_and_shared</arg>
</arguments>
<msg timestamp="20170902 20:26:37.715" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_deployable_and_shared </msg>
<msg timestamp="20170902 20:26:37.715" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_deployable_and_shared' </msg>
<status status="PASS" endtime="20170902 20:26:37.717" starttime="20170902 20:26:37.715"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_shared</arg>
</arguments>
<msg timestamp="20170902 20:26:37.718" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_shared </msg>
<msg timestamp="20170902 20:26:37.718" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_shared' </msg>
<status status="PASS" endtime="20170902 20:26:37.720" starttime="20170902 20:26:37.717"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_sessions</arg>
</arguments>
<msg timestamp="20170902 20:26:37.720" level="INFO">Executing : Table Must Exist  |  view_sessions </msg>
<msg timestamp="20170902 20:26:37.721" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_sessions' </msg>
<status status="PASS" endtime="20170902 20:26:37.722" starttime="20170902 20:26:37.720"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_tasks</arg>
</arguments>
<msg timestamp="20170902 20:26:37.723" level="INFO">Executing : Table Must Exist  |  view_tasks </msg>
<msg timestamp="20170902 20:26:37.723" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_tasks' </msg>
<status status="PASS" endtime="20170902 20:26:37.724" starttime="20170902 20:26:37.722"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_traces</arg>
</arguments>
<msg timestamp="20170902 20:26:37.725" level="INFO">Executing : Table Must Exist  |  view_traces </msg>
<msg timestamp="20170902 20:26:37.725" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_traces' </msg>
<status status="PASS" endtime="20170902 20:26:37.726" starttime="20170902 20:26:37.724"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_usergroups</arg>
</arguments>
<msg timestamp="20170902 20:26:37.727" level="INFO">Executing : Table Must Exist  |  view_usergroups </msg>
<msg timestamp="20170902 20:26:37.727" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_usergroups' </msg>
<status status="PASS" endtime="20170902 20:26:37.728" starttime="20170902 20:26:37.726"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users</arg>
</arguments>
<msg timestamp="20170902 20:26:37.728" level="INFO">Executing : Table Must Exist  |  view_users </msg>
<msg timestamp="20170902 20:26:37.728" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users' </msg>
<status status="PASS" endtime="20170902 20:26:37.730" starttime="20170902 20:26:37.728"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_apps</arg>
</arguments>
<msg timestamp="20170902 20:26:37.730" level="INFO">Executing : Table Must Exist  |  view_users_apps </msg>
<msg timestamp="20170902 20:26:37.731" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_apps' </msg>
<status status="PASS" endtime="20170902 20:26:37.732" starttime="20170902 20:26:37.730"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_datas</arg>
</arguments>
<msg timestamp="20170902 20:26:37.733" level="INFO">Executing : Table Must Exist  |  view_users_datas </msg>
<msg timestamp="20170902 20:26:37.733" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_datas' </msg>
<status status="PASS" endtime="20170902 20:26:37.734" starttime="20170902 20:26:37.732"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_groups</arg>
</arguments>
<msg timestamp="20170902 20:26:37.735" level="INFO">Executing : Table Must Exist  |  view_users_groups </msg>
<msg timestamp="20170902 20:26:37.735" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_groups' </msg>
<status status="PASS" endtime="20170902 20:26:37.736" starttime="20170902 20:26:37.735"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_hosts</arg>
</arguments>
<msg timestamp="20170902 20:26:37.737" level="INFO">Executing : Table Must Exist  |  view_users_hosts </msg>
<msg timestamp="20170902 20:26:37.737" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_hosts' </msg>
<status status="PASS" endtime="20170902 20:26:37.738" starttime="20170902 20:26:37.736"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_sessions</arg>
</arguments>
<msg timestamp="20170902 20:26:37.739" level="INFO">Executing : Table Must Exist  |  view_users_sessions </msg>
<msg timestamp="20170902 20:26:37.739" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_sessions' </msg>
<status status="PASS" endtime="20170902 20:26:37.740" starttime="20170902 20:26:37.738"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_tasks</arg>
</arguments>
<msg timestamp="20170902 20:26:37.740" level="INFO">Executing : Table Must Exist  |  view_users_tasks </msg>
<msg timestamp="20170902 20:26:37.741" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_tasks' </msg>
<status status="PASS" endtime="20170902 20:26:37.742" starttime="20170902 20:26:37.740"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_traces</arg>
</arguments>
<msg timestamp="20170902 20:26:37.742" level="INFO">Executing : Table Must Exist  |  view_users_traces </msg>
<msg timestamp="20170902 20:26:37.742" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_traces' </msg>
<status status="PASS" endtime="20170902 20:26:37.744" starttime="20170902 20:26:37.742"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_usergroups</arg>
</arguments>
<msg timestamp="20170902 20:26:37.744" level="INFO">Executing : Table Must Exist  |  view_users_usergroups </msg>
<msg timestamp="20170902 20:26:37.745" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_usergroups' </msg>
<status status="PASS" endtime="20170902 20:26:37.746" starttime="20170902 20:26:37.744"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_users</arg>
</arguments>
<msg timestamp="20170902 20:26:37.746" level="INFO">Executing : Table Must Exist  |  view_users_users </msg>
<msg timestamp="20170902 20:26:37.746" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_users' </msg>
<status status="PASS" endtime="20170902 20:26:37.747" starttime="20170902 20:26:37.746"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_works</arg>
</arguments>
<msg timestamp="20170902 20:26:37.748" level="INFO">Executing : Table Must Exist  |  view_users_works </msg>
<msg timestamp="20170902 20:26:37.748" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_works' </msg>
<status status="PASS" endtime="20170902 20:26:37.750" starttime="20170902 20:26:37.748"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works</arg>
</arguments>
<msg timestamp="20170902 20:26:37.750" level="INFO">Executing : Table Must Exist  |  view_works </msg>
<msg timestamp="20170902 20:26:37.750" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works' </msg>
<status status="PASS" endtime="20170902 20:26:37.752" starttime="20170902 20:26:37.750"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works_for_billing</arg>
</arguments>
<msg timestamp="20170902 20:26:37.753" level="INFO">Executing : Table Must Exist  |  view_works_for_billing </msg>
<msg timestamp="20170902 20:26:37.753" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works_for_billing' </msg>
<status status="PASS" endtime="20170902 20:26:37.754" starttime="20170902 20:26:37.752"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works_for_billing_with_file_sizes</arg>
</arguments>
<msg timestamp="20170902 20:26:37.755" level="INFO">Executing : Table Must Exist  |  view_works_for_billing_with_file_sizes </msg>
<msg timestamp="20170902 20:26:37.755" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works_for_billing_with_file_sizes' </msg>
<status status="PASS" endtime="20170902 20:26:37.756" starttime="20170902 20:26:37.754"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works</arg>
</arguments>
<msg timestamp="20170902 20:26:37.756" level="INFO">Executing : Table Must Exist  |  works </msg>
<msg timestamp="20170902 20:26:37.756" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='works' </msg>
<status status="PASS" endtime="20170902 20:26:37.757" starttime="20170902 20:26:37.756"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.758" level="INFO">Executing : Table Must Exist  |  works_history </msg>
<msg timestamp="20170902 20:26:37.758" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='works_history' </msg>
<status status="PASS" endtime="20170902 20:26:37.759" starttime="20170902 20:26:37.758"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170902 20:26:37.760" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170902 20:26:37.761" starttime="20170902 20:26:37.760"></status>
</kw>
<status status="PASS" endtime="20170902 20:26:37.761" starttime="20170902 20:26:37.759"></status>
</kw>
<status status="PASS" endtime="20170902 20:26:37.761" starttime="20170902 20:26:37.629"></status>
</kw>
<status status="PASS" endtime="20170902 20:26:37.761" starttime="20170902 20:26:37.628"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>TODO ping XWtremWeb server up</arg>
</arguments>
<msg timestamp="20170902 20:26:37.762" level="INFO">TODO ping XWtremWeb server up</msg>
<status status="PASS" endtime="20170902 20:26:37.762" starttime="20170902 20:26:37.761"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>TODO ping XWtremWeb worker up before one test</arg>
</arguments>
<msg timestamp="20170902 20:26:37.762" level="INFO">TODO ping XWtremWeb worker up before one test</msg>
<status status="PASS" endtime="20170902 20:26:37.762" starttime="20170902 20:26:37.762"></status>
</kw>
<kw name="Delete Fonctionnal Xtremweb Tables" library="MySql">
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170902 20:26:37.763" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170902 20:26:37.768" starttime="20170902 20:26:37.763"></status>
</kw>
<status status="PASS" endtime="20170902 20:26:37.768" starttime="20170902 20:26:37.763"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps</arg>
</arguments>
<msg timestamp="20170902 20:26:37.769" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM apps; </msg>
<status status="PASS" endtime="20170902 20:26:37.769" starttime="20170902 20:26:37.768"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.769" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM apps_history; </msg>
<status status="PASS" endtime="20170902 20:26:37.771" starttime="20170902 20:26:37.769"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas</arg>
</arguments>
<msg timestamp="20170902 20:26:37.771" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM datas; </msg>
<status status="PASS" endtime="20170902 20:26:37.772" starttime="20170902 20:26:37.771"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.772" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM datas_history; </msg>
<status status="PASS" endtime="20170902 20:26:37.773" starttime="20170902 20:26:37.772"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables</arg>
</arguments>
<msg timestamp="20170902 20:26:37.773" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM executables; </msg>
<status status="PASS" endtime="20170902 20:26:37.774" starttime="20170902 20:26:37.773"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.774" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM executables_history; </msg>
<status status="PASS" endtime="20170902 20:26:37.774" starttime="20170902 20:26:37.774"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups</arg>
</arguments>
<msg timestamp="20170902 20:26:37.775" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM groups; </msg>
<status status="PASS" endtime="20170902 20:26:37.775" starttime="20170902 20:26:37.775"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.776" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM groups_history; </msg>
<status status="PASS" endtime="20170902 20:26:37.776" starttime="20170902 20:26:37.775"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts</arg>
</arguments>
<msg timestamp="20170902 20:26:37.777" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM hosts; </msg>
<status status="PASS" endtime="20170902 20:26:37.777" starttime="20170902 20:26:37.776"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.778" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM hosts_history; </msg>
<status status="PASS" endtime="20170902 20:26:37.778" starttime="20170902 20:26:37.777"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships</arg>
</arguments>
<msg timestamp="20170902 20:26:37.779" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM memberships; </msg>
<status status="PASS" endtime="20170902 20:26:37.779" starttime="20170902 20:26:37.778"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.780" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM memberships_history; </msg>
<status status="PASS" endtime="20170902 20:26:37.781" starttime="20170902 20:26:37.779"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions</arg>
</arguments>
<msg timestamp="20170902 20:26:37.781" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sessions; </msg>
<status status="PASS" endtime="20170902 20:26:37.782" starttime="20170902 20:26:37.781"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.782" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sessions_history; </msg>
<status status="PASS" endtime="20170902 20:26:37.783" starttime="20170902 20:26:37.782"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes</arg>
</arguments>
<msg timestamp="20170902 20:26:37.783" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedAppTypes; </msg>
<status status="PASS" endtime="20170902 20:26:37.784" starttime="20170902 20:26:37.783"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.784" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedAppTypes_history; </msg>
<status status="PASS" endtime="20170902 20:26:37.785" starttime="20170902 20:26:37.784"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes</arg>
</arguments>
<msg timestamp="20170902 20:26:37.785" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedPackageTypes; </msg>
<status status="PASS" endtime="20170902 20:26:37.785" starttime="20170902 20:26:37.785"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.786" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedPackageTypes_history; </msg>
<status status="PASS" endtime="20170902 20:26:37.786" starttime="20170902 20:26:37.786"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks</arg>
</arguments>
<msg timestamp="20170902 20:26:37.787" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM tasks; </msg>
<status status="PASS" endtime="20170902 20:26:37.787" starttime="20170902 20:26:37.786"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.787" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM tasks_history; </msg>
<status status="PASS" endtime="20170902 20:26:37.788" starttime="20170902 20:26:37.787"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces</arg>
</arguments>
<msg timestamp="20170902 20:26:37.788" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM traces; </msg>
<status status="PASS" endtime="20170902 20:26:37.789" starttime="20170902 20:26:37.788"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.789" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM traces_history; </msg>
<status status="PASS" endtime="20170902 20:26:37.790" starttime="20170902 20:26:37.789"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups</arg>
</arguments>
<msg timestamp="20170902 20:26:37.790" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM usergroups; </msg>
<status status="PASS" endtime="20170902 20:26:37.791" starttime="20170902 20:26:37.790"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.791" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM usergroups_history; </msg>
<status status="PASS" endtime="20170902 20:26:37.791" starttime="20170902 20:26:37.791"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.792" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM users_history; </msg>
<status status="PASS" endtime="20170902 20:26:37.792" starttime="20170902 20:26:37.792"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works</arg>
</arguments>
<msg timestamp="20170902 20:26:37.793" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM works; </msg>
<status status="PASS" endtime="20170902 20:26:37.793" starttime="20170902 20:26:37.792"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.794" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM works_history; </msg>
<status status="PASS" endtime="20170902 20:26:37.794" starttime="20170902 20:26:37.794"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170902 20:26:37.795" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170902 20:26:37.795" starttime="20170902 20:26:37.795"></status>
</kw>
<status status="PASS" endtime="20170902 20:26:37.796" starttime="20170902 20:26:37.795"></status>
</kw>
<status status="PASS" endtime="20170902 20:26:37.796" starttime="20170902 20:26:37.762"></status>
</kw>
<status status="PASS" endtime="20170902 20:26:37.796" starttime="20170902 20:26:37.628"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>TODO</arg>
</arguments>
<msg timestamp="20170902 20:26:37.797" level="INFO">TODO</msg>
<status status="PASS" endtime="20170902 20:26:37.797" starttime="20170902 20:26:37.797"></status>
</kw>
<kw type="teardown" name="End XWtremWeb Command Test" library="XWCommon">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Nothing to do</arg>
</arguments>
<msg timestamp="20170902 20:26:37.799" level="INFO">Nothing to do</msg>
<status status="PASS" endtime="20170902 20:26:37.799" starttime="20170902 20:26:37.799"></status>
</kw>
<status status="PASS" endtime="20170902 20:26:37.799" starttime="20170902 20:26:37.798"></status>
</kw>
<doc>Ces tests doivent prouver que la synchronisation scheduler/worker est correcte. Par défaut les messages de synchronisation worker/scheduler se font toutes les 5mn. Au bout de trois messages non reçus par le scheduler, le job est considéré comme perdu et doit être reschédulé.</doc>
<tags>
<tag>CommandLine Tests</tag>
</tags>
<status status="PASS" endtime="20170902 20:26:37.800" critical="yes" starttime="20170902 20:26:37.626"></status>
</test>
<test id="s1-s3-t11" name="Test 8 Tester la perte des jobs">
<kw type="setup" name="Begin XWtremWeb Command Test" library="XWCommon">
<kw name="Ping XWtremWeb Database" library="XWServer">
<kw name="Xtremweb Tables Must Exist" library="MySql">
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170902 20:26:37.806" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170902 20:26:37.807" starttime="20170902 20:26:37.805"></status>
</kw>
<status status="PASS" endtime="20170902 20:26:37.808" starttime="20170902 20:26:37.805"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>appTypes</arg>
</arguments>
<msg timestamp="20170902 20:26:37.808" level="INFO">Executing : Table Must Exist  |  appTypes </msg>
<msg timestamp="20170902 20:26:37.808" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='appTypes' </msg>
<status status="PASS" endtime="20170902 20:26:37.810" starttime="20170902 20:26:37.808"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps</arg>
</arguments>
<msg timestamp="20170902 20:26:37.810" level="INFO">Executing : Table Must Exist  |  apps </msg>
<msg timestamp="20170902 20:26:37.810" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='apps' </msg>
<status status="PASS" endtime="20170902 20:26:37.812" starttime="20170902 20:26:37.810"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.812" level="INFO">Executing : Table Must Exist  |  apps_history </msg>
<msg timestamp="20170902 20:26:37.812" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='apps_history' </msg>
<status status="PASS" endtime="20170902 20:26:37.813" starttime="20170902 20:26:37.812"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>cpuTypes</arg>
</arguments>
<msg timestamp="20170902 20:26:37.814" level="INFO">Executing : Table Must Exist  |  cpuTypes </msg>
<msg timestamp="20170902 20:26:37.814" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='cpuTypes' </msg>
<status status="PASS" endtime="20170902 20:26:37.815" starttime="20170902 20:26:37.814"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>dataTypes</arg>
</arguments>
<msg timestamp="20170902 20:26:37.815" level="INFO">Executing : Table Must Exist  |  dataTypes </msg>
<msg timestamp="20170902 20:26:37.815" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='dataTypes' </msg>
<status status="PASS" endtime="20170902 20:26:37.817" starttime="20170902 20:26:37.815"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas</arg>
</arguments>
<msg timestamp="20170902 20:26:37.817" level="INFO">Executing : Table Must Exist  |  datas </msg>
<msg timestamp="20170902 20:26:37.817" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='datas' </msg>
<status status="PASS" endtime="20170902 20:26:37.819" starttime="20170902 20:26:37.817"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.820" level="INFO">Executing : Table Must Exist  |  datas_history </msg>
<msg timestamp="20170902 20:26:37.820" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='datas_history' </msg>
<status status="PASS" endtime="20170902 20:26:37.822" starttime="20170902 20:26:37.819"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables</arg>
</arguments>
<msg timestamp="20170902 20:26:37.823" level="INFO">Executing : Table Must Exist  |  executables </msg>
<msg timestamp="20170902 20:26:37.823" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='executables' </msg>
<status status="PASS" endtime="20170902 20:26:37.824" starttime="20170902 20:26:37.823"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.825" level="INFO">Executing : Table Must Exist  |  executables_history </msg>
<msg timestamp="20170902 20:26:37.825" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='executables_history' </msg>
<status status="PASS" endtime="20170902 20:26:37.827" starttime="20170902 20:26:37.825"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups</arg>
</arguments>
<msg timestamp="20170902 20:26:37.828" level="INFO">Executing : Table Must Exist  |  groups </msg>
<msg timestamp="20170902 20:26:37.828" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='groups' </msg>
<status status="PASS" endtime="20170902 20:26:37.830" starttime="20170902 20:26:37.828"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.830" level="INFO">Executing : Table Must Exist  |  groups_history </msg>
<msg timestamp="20170902 20:26:37.830" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='groups_history' </msg>
<status status="PASS" endtime="20170902 20:26:37.831" starttime="20170902 20:26:37.830"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts</arg>
</arguments>
<msg timestamp="20170902 20:26:37.832" level="INFO">Executing : Table Must Exist  |  hosts </msg>
<msg timestamp="20170902 20:26:37.832" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='hosts' </msg>
<status status="PASS" endtime="20170902 20:26:37.835" starttime="20170902 20:26:37.832"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.837" level="INFO">Executing : Table Must Exist  |  hosts_history </msg>
<msg timestamp="20170902 20:26:37.837" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='hosts_history' </msg>
<status status="PASS" endtime="20170902 20:26:37.839" starttime="20170902 20:26:37.837"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships</arg>
</arguments>
<msg timestamp="20170902 20:26:37.839" level="INFO">Executing : Table Must Exist  |  memberships </msg>
<msg timestamp="20170902 20:26:37.839" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='memberships' </msg>
<status status="PASS" endtime="20170902 20:26:37.841" starttime="20170902 20:26:37.839"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.842" level="INFO">Executing : Table Must Exist  |  memberships_history </msg>
<msg timestamp="20170902 20:26:37.842" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='memberships_history' </msg>
<status status="PASS" endtime="20170902 20:26:37.843" starttime="20170902 20:26:37.842"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>oses</arg>
</arguments>
<msg timestamp="20170902 20:26:37.843" level="INFO">Executing : Table Must Exist  |  oses </msg>
<msg timestamp="20170902 20:26:37.844" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='oses' </msg>
<status status="PASS" endtime="20170902 20:26:37.845" starttime="20170902 20:26:37.843"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>packageTypes</arg>
</arguments>
<msg timestamp="20170902 20:26:37.845" level="INFO">Executing : Table Must Exist  |  packageTypes </msg>
<msg timestamp="20170902 20:26:37.845" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='packageTypes' </msg>
<status status="PASS" endtime="20170902 20:26:37.847" starttime="20170902 20:26:37.845"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions</arg>
</arguments>
<msg timestamp="20170902 20:26:37.847" level="INFO">Executing : Table Must Exist  |  sessions </msg>
<msg timestamp="20170902 20:26:37.847" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sessions' </msg>
<status status="PASS" endtime="20170902 20:26:37.849" starttime="20170902 20:26:37.847"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.850" level="INFO">Executing : Table Must Exist  |  sessions_history </msg>
<msg timestamp="20170902 20:26:37.850" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sessions_history' </msg>
<status status="PASS" endtime="20170902 20:26:37.851" starttime="20170902 20:26:37.849"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes</arg>
</arguments>
<msg timestamp="20170902 20:26:37.851" level="INFO">Executing : Table Must Exist  |  sharedAppTypes </msg>
<msg timestamp="20170902 20:26:37.851" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedAppTypes' </msg>
<status status="PASS" endtime="20170902 20:26:37.852" starttime="20170902 20:26:37.851"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.853" level="INFO">Executing : Table Must Exist  |  sharedAppTypes_history </msg>
<msg timestamp="20170902 20:26:37.853" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedAppTypes_history' </msg>
<status status="PASS" endtime="20170902 20:26:37.854" starttime="20170902 20:26:37.852"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes</arg>
</arguments>
<msg timestamp="20170902 20:26:37.854" level="INFO">Executing : Table Must Exist  |  sharedPackageTypes </msg>
<msg timestamp="20170902 20:26:37.854" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedPackageTypes' </msg>
<status status="PASS" endtime="20170902 20:26:37.856" starttime="20170902 20:26:37.854"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.856" level="INFO">Executing : Table Must Exist  |  sharedPackageTypes_history </msg>
<msg timestamp="20170902 20:26:37.856" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='sharedPackageTypes_history' </msg>
<status status="PASS" endtime="20170902 20:26:37.857" starttime="20170902 20:26:37.856"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>statuses</arg>
</arguments>
<msg timestamp="20170902 20:26:37.858" level="INFO">Executing : Table Must Exist  |  statuses </msg>
<msg timestamp="20170902 20:26:37.858" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='statuses' </msg>
<status status="PASS" endtime="20170902 20:26:37.862" starttime="20170902 20:26:37.857"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks</arg>
</arguments>
<msg timestamp="20170902 20:26:37.864" level="INFO">Executing : Table Must Exist  |  tasks </msg>
<msg timestamp="20170902 20:26:37.864" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='tasks' </msg>
<status status="PASS" endtime="20170902 20:26:37.865" starttime="20170902 20:26:37.863"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.866" level="INFO">Executing : Table Must Exist  |  tasks_history </msg>
<msg timestamp="20170902 20:26:37.866" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='tasks_history' </msg>
<status status="PASS" endtime="20170902 20:26:37.870" starttime="20170902 20:26:37.865"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces</arg>
</arguments>
<msg timestamp="20170902 20:26:37.872" level="INFO">Executing : Table Must Exist  |  traces </msg>
<msg timestamp="20170902 20:26:37.872" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='traces' </msg>
<status status="PASS" endtime="20170902 20:26:37.877" starttime="20170902 20:26:37.871"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.878" level="INFO">Executing : Table Must Exist  |  traces_history </msg>
<msg timestamp="20170902 20:26:37.878" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='traces_history' </msg>
<status status="PASS" endtime="20170902 20:26:37.879" starttime="20170902 20:26:37.877"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>userRights</arg>
</arguments>
<msg timestamp="20170902 20:26:37.879" level="INFO">Executing : Table Must Exist  |  userRights </msg>
<msg timestamp="20170902 20:26:37.880" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='userRights' </msg>
<status status="PASS" endtime="20170902 20:26:37.881" starttime="20170902 20:26:37.879"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups</arg>
</arguments>
<msg timestamp="20170902 20:26:37.881" level="INFO">Executing : Table Must Exist  |  usergroups </msg>
<msg timestamp="20170902 20:26:37.881" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='usergroups' </msg>
<status status="PASS" endtime="20170902 20:26:37.882" starttime="20170902 20:26:37.881"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.883" level="INFO">Executing : Table Must Exist  |  usergroups_history </msg>
<msg timestamp="20170902 20:26:37.883" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='usergroups_history' </msg>
<status status="PASS" endtime="20170902 20:26:37.884" starttime="20170902 20:26:37.883"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users</arg>
</arguments>
<msg timestamp="20170902 20:26:37.884" level="INFO">Executing : Table Must Exist  |  users </msg>
<msg timestamp="20170902 20:26:37.884" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='users' </msg>
<status status="PASS" endtime="20170902 20:26:37.885" starttime="20170902 20:26:37.884"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.886" level="INFO">Executing : Table Must Exist  |  users_history </msg>
<msg timestamp="20170902 20:26:37.886" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='users_history' </msg>
<status status="PASS" endtime="20170902 20:26:37.887" starttime="20170902 20:26:37.885"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>version</arg>
</arguments>
<msg timestamp="20170902 20:26:37.887" level="INFO">Executing : Table Must Exist  |  version </msg>
<msg timestamp="20170902 20:26:37.888" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='version' </msg>
<status status="PASS" endtime="20170902 20:26:37.889" starttime="20170902 20:26:37.887"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>versions</arg>
</arguments>
<msg timestamp="20170902 20:26:37.890" level="INFO">Executing : Table Must Exist  |  versions </msg>
<msg timestamp="20170902 20:26:37.890" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='versions' </msg>
<status status="PASS" endtime="20170902 20:26:37.891" starttime="20170902 20:26:37.890"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps</arg>
</arguments>
<msg timestamp="20170902 20:26:37.891" level="INFO">Executing : Table Must Exist  |  view_apps </msg>
<msg timestamp="20170902 20:26:37.891" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps' </msg>
<status status="PASS" endtime="20170902 20:26:37.893" starttime="20170902 20:26:37.891"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps_for_offering</arg>
</arguments>
<msg timestamp="20170902 20:26:37.893" level="INFO">Executing : Table Must Exist  |  view_apps_for_offering </msg>
<msg timestamp="20170902 20:26:37.893" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps_for_offering' </msg>
<status status="PASS" endtime="20170902 20:26:37.894" starttime="20170902 20:26:37.893"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_apps_for_offering_with_file_sizes</arg>
</arguments>
<msg timestamp="20170902 20:26:37.895" level="INFO">Executing : Table Must Exist  |  view_apps_for_offering_with_file_sizes </msg>
<msg timestamp="20170902 20:26:37.895" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_apps_for_offering_with_file_sizes' </msg>
<status status="PASS" endtime="20170902 20:26:37.896" starttime="20170902 20:26:37.895"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_datas</arg>
</arguments>
<msg timestamp="20170902 20:26:37.897" level="INFO">Executing : Table Must Exist  |  view_datas </msg>
<msg timestamp="20170902 20:26:37.897" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_datas' </msg>
<status status="PASS" endtime="20170902 20:26:37.898" starttime="20170902 20:26:37.897"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_executables</arg>
</arguments>
<msg timestamp="20170902 20:26:37.899" level="INFO">Executing : Table Must Exist  |  view_executables </msg>
<msg timestamp="20170902 20:26:37.899" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_executables' </msg>
<status status="PASS" endtime="20170902 20:26:37.900" starttime="20170902 20:26:37.898"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_groups</arg>
</arguments>
<msg timestamp="20170902 20:26:37.901" level="INFO">Executing : Table Must Exist  |  view_groups </msg>
<msg timestamp="20170902 20:26:37.901" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_groups' </msg>
<status status="PASS" endtime="20170902 20:26:37.902" starttime="20170902 20:26:37.900"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts</arg>
</arguments>
<msg timestamp="20170902 20:26:37.902" level="INFO">Executing : Table Must Exist  |  view_hosts </msg>
<msg timestamp="20170902 20:26:37.902" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts' </msg>
<status status="PASS" endtime="20170902 20:26:37.904" starttime="20170902 20:26:37.902"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_deployable</arg>
</arguments>
<msg timestamp="20170902 20:26:37.904" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_deployable </msg>
<msg timestamp="20170902 20:26:37.904" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_deployable' </msg>
<status status="PASS" endtime="20170902 20:26:37.906" starttime="20170902 20:26:37.904"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_deployable_and_shared</arg>
</arguments>
<msg timestamp="20170902 20:26:37.906" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_deployable_and_shared </msg>
<msg timestamp="20170902 20:26:37.906" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_deployable_and_shared' </msg>
<status status="PASS" endtime="20170902 20:26:37.908" starttime="20170902 20:26:37.906"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_hosts_matching_works_shared</arg>
</arguments>
<msg timestamp="20170902 20:26:37.908" level="INFO">Executing : Table Must Exist  |  view_hosts_matching_works_shared </msg>
<msg timestamp="20170902 20:26:37.909" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_hosts_matching_works_shared' </msg>
<status status="PASS" endtime="20170902 20:26:37.910" starttime="20170902 20:26:37.908"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_sessions</arg>
</arguments>
<msg timestamp="20170902 20:26:37.910" level="INFO">Executing : Table Must Exist  |  view_sessions </msg>
<msg timestamp="20170902 20:26:37.910" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_sessions' </msg>
<status status="PASS" endtime="20170902 20:26:37.911" starttime="20170902 20:26:37.910"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_tasks</arg>
</arguments>
<msg timestamp="20170902 20:26:37.912" level="INFO">Executing : Table Must Exist  |  view_tasks </msg>
<msg timestamp="20170902 20:26:37.912" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_tasks' </msg>
<status status="PASS" endtime="20170902 20:26:37.913" starttime="20170902 20:26:37.911"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_traces</arg>
</arguments>
<msg timestamp="20170902 20:26:37.913" level="INFO">Executing : Table Must Exist  |  view_traces </msg>
<msg timestamp="20170902 20:26:37.913" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_traces' </msg>
<status status="PASS" endtime="20170902 20:26:37.915" starttime="20170902 20:26:37.913"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_usergroups</arg>
</arguments>
<msg timestamp="20170902 20:26:37.915" level="INFO">Executing : Table Must Exist  |  view_usergroups </msg>
<msg timestamp="20170902 20:26:37.915" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_usergroups' </msg>
<status status="PASS" endtime="20170902 20:26:37.917" starttime="20170902 20:26:37.915"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users</arg>
</arguments>
<msg timestamp="20170902 20:26:37.918" level="INFO">Executing : Table Must Exist  |  view_users </msg>
<msg timestamp="20170902 20:26:37.918" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users' </msg>
<status status="PASS" endtime="20170902 20:26:37.919" starttime="20170902 20:26:37.917"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_apps</arg>
</arguments>
<msg timestamp="20170902 20:26:37.920" level="INFO">Executing : Table Must Exist  |  view_users_apps </msg>
<msg timestamp="20170902 20:26:37.920" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_apps' </msg>
<status status="PASS" endtime="20170902 20:26:37.922" starttime="20170902 20:26:37.920"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_datas</arg>
</arguments>
<msg timestamp="20170902 20:26:37.922" level="INFO">Executing : Table Must Exist  |  view_users_datas </msg>
<msg timestamp="20170902 20:26:37.922" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_datas' </msg>
<status status="PASS" endtime="20170902 20:26:37.925" starttime="20170902 20:26:37.922"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_groups</arg>
</arguments>
<msg timestamp="20170902 20:26:37.925" level="INFO">Executing : Table Must Exist  |  view_users_groups </msg>
<msg timestamp="20170902 20:26:37.925" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_groups' </msg>
<status status="PASS" endtime="20170902 20:26:37.927" starttime="20170902 20:26:37.925"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_hosts</arg>
</arguments>
<msg timestamp="20170902 20:26:37.928" level="INFO">Executing : Table Must Exist  |  view_users_hosts </msg>
<msg timestamp="20170902 20:26:37.928" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_hosts' </msg>
<status status="PASS" endtime="20170902 20:26:37.929" starttime="20170902 20:26:37.927"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_sessions</arg>
</arguments>
<msg timestamp="20170902 20:26:37.930" level="INFO">Executing : Table Must Exist  |  view_users_sessions </msg>
<msg timestamp="20170902 20:26:37.930" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_sessions' </msg>
<status status="PASS" endtime="20170902 20:26:37.931" starttime="20170902 20:26:37.929"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_tasks</arg>
</arguments>
<msg timestamp="20170902 20:26:37.932" level="INFO">Executing : Table Must Exist  |  view_users_tasks </msg>
<msg timestamp="20170902 20:26:37.932" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_tasks' </msg>
<status status="PASS" endtime="20170902 20:26:37.933" starttime="20170902 20:26:37.931"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_traces</arg>
</arguments>
<msg timestamp="20170902 20:26:37.933" level="INFO">Executing : Table Must Exist  |  view_users_traces </msg>
<msg timestamp="20170902 20:26:37.934" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_traces' </msg>
<status status="PASS" endtime="20170902 20:26:37.935" starttime="20170902 20:26:37.933"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_usergroups</arg>
</arguments>
<msg timestamp="20170902 20:26:37.935" level="INFO">Executing : Table Must Exist  |  view_users_usergroups </msg>
<msg timestamp="20170902 20:26:37.935" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_usergroups' </msg>
<status status="PASS" endtime="20170902 20:26:37.937" starttime="20170902 20:26:37.935"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_users</arg>
</arguments>
<msg timestamp="20170902 20:26:37.937" level="INFO">Executing : Table Must Exist  |  view_users_users </msg>
<msg timestamp="20170902 20:26:37.937" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_users' </msg>
<status status="PASS" endtime="20170902 20:26:37.939" starttime="20170902 20:26:37.937"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_users_works</arg>
</arguments>
<msg timestamp="20170902 20:26:37.939" level="INFO">Executing : Table Must Exist  |  view_users_works </msg>
<msg timestamp="20170902 20:26:37.939" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_users_works' </msg>
<status status="PASS" endtime="20170902 20:26:37.941" starttime="20170902 20:26:37.939"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works</arg>
</arguments>
<msg timestamp="20170902 20:26:37.942" level="INFO">Executing : Table Must Exist  |  view_works </msg>
<msg timestamp="20170902 20:26:37.942" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works' </msg>
<status status="PASS" endtime="20170902 20:26:37.944" starttime="20170902 20:26:37.942"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works_for_billing</arg>
</arguments>
<msg timestamp="20170902 20:26:37.945" level="INFO">Executing : Table Must Exist  |  view_works_for_billing </msg>
<msg timestamp="20170902 20:26:37.945" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works_for_billing' </msg>
<status status="PASS" endtime="20170902 20:26:37.946" starttime="20170902 20:26:37.944"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>view_works_for_billing_with_file_sizes</arg>
</arguments>
<msg timestamp="20170902 20:26:37.947" level="INFO">Executing : Table Must Exist  |  view_works_for_billing_with_file_sizes </msg>
<msg timestamp="20170902 20:26:37.947" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='view_works_for_billing_with_file_sizes' </msg>
<status status="PASS" endtime="20170902 20:26:37.948" starttime="20170902 20:26:37.946"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works</arg>
</arguments>
<msg timestamp="20170902 20:26:37.949" level="INFO">Executing : Table Must Exist  |  works </msg>
<msg timestamp="20170902 20:26:37.949" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='works' </msg>
<status status="PASS" endtime="20170902 20:26:37.950" starttime="20170902 20:26:37.948"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.951" level="INFO">Executing : Table Must Exist  |  works_history </msg>
<msg timestamp="20170902 20:26:37.951" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='works_history' </msg>
<status status="PASS" endtime="20170902 20:26:37.952" starttime="20170902 20:26:37.950"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170902 20:26:37.953" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170902 20:26:37.953" starttime="20170902 20:26:37.953"></status>
</kw>
<status status="PASS" endtime="20170902 20:26:37.953" starttime="20170902 20:26:37.952"></status>
</kw>
<status status="PASS" endtime="20170902 20:26:37.954" starttime="20170902 20:26:37.805"></status>
</kw>
<status status="PASS" endtime="20170902 20:26:37.954" starttime="20170902 20:26:37.804"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>TODO ping XWtremWeb server up</arg>
</arguments>
<msg timestamp="20170902 20:26:37.954" level="INFO">TODO ping XWtremWeb server up</msg>
<status status="PASS" endtime="20170902 20:26:37.954" starttime="20170902 20:26:37.954"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>TODO ping XWtremWeb worker up before one test</arg>
</arguments>
<msg timestamp="20170902 20:26:37.955" level="INFO">TODO ping XWtremWeb worker up before one test</msg>
<status status="PASS" endtime="20170902 20:26:37.955" starttime="20170902 20:26:37.955"></status>
</kw>
<kw name="Delete Fonctionnal Xtremweb Tables" library="MySql">
<kw name="Connect" library="MySql">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='${XWCONFIGURE.VALUES.DBNAME}', user='${XWCONFIGURE.VALUES.DBUSERLOGIN}', password='${XWCONFIGURE.VALUES.DBUSERPASSWORD}', host='${XWCONFIGURE.VALUES.DBHOST}', port=${DB_PORT}</arg>
</arguments>
<msg timestamp="20170902 20:26:37.956" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='xtremweb', user='xwuser', password='xwuser', host='localhost', port=3306)) </msg>
<status status="PASS" endtime="20170902 20:26:37.958" starttime="20170902 20:26:37.956"></status>
</kw>
<status status="PASS" endtime="20170902 20:26:37.958" starttime="20170902 20:26:37.955"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps</arg>
</arguments>
<msg timestamp="20170902 20:26:37.959" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM apps; </msg>
<status status="PASS" endtime="20170902 20:26:37.960" starttime="20170902 20:26:37.958"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>apps_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.961" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM apps_history; </msg>
<status status="PASS" endtime="20170902 20:26:37.962" starttime="20170902 20:26:37.960"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas</arg>
</arguments>
<msg timestamp="20170902 20:26:37.963" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM datas; </msg>
<status status="PASS" endtime="20170902 20:26:37.963" starttime="20170902 20:26:37.962"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>datas_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.964" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM datas_history; </msg>
<status status="PASS" endtime="20170902 20:26:37.964" starttime="20170902 20:26:37.963"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables</arg>
</arguments>
<msg timestamp="20170902 20:26:37.965" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM executables; </msg>
<status status="PASS" endtime="20170902 20:26:37.965" starttime="20170902 20:26:37.965"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>executables_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.966" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM executables_history; </msg>
<status status="PASS" endtime="20170902 20:26:37.966" starttime="20170902 20:26:37.966"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups</arg>
</arguments>
<msg timestamp="20170902 20:26:37.967" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM groups; </msg>
<status status="PASS" endtime="20170902 20:26:37.967" starttime="20170902 20:26:37.966"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>groups_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.968" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM groups_history; </msg>
<status status="PASS" endtime="20170902 20:26:37.968" starttime="20170902 20:26:37.967"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts</arg>
</arguments>
<msg timestamp="20170902 20:26:37.969" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM hosts; </msg>
<status status="PASS" endtime="20170902 20:26:37.969" starttime="20170902 20:26:37.969"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>hosts_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.970" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM hosts_history; </msg>
<status status="PASS" endtime="20170902 20:26:37.970" starttime="20170902 20:26:37.969"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships</arg>
</arguments>
<msg timestamp="20170902 20:26:37.971" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM memberships; </msg>
<status status="PASS" endtime="20170902 20:26:37.971" starttime="20170902 20:26:37.970"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>memberships_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.971" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM memberships_history; </msg>
<status status="PASS" endtime="20170902 20:26:37.972" starttime="20170902 20:26:37.971"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions</arg>
</arguments>
<msg timestamp="20170902 20:26:37.972" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sessions; </msg>
<status status="PASS" endtime="20170902 20:26:37.973" starttime="20170902 20:26:37.972"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sessions_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.973" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sessions_history; </msg>
<status status="PASS" endtime="20170902 20:26:37.973" starttime="20170902 20:26:37.973"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes</arg>
</arguments>
<msg timestamp="20170902 20:26:37.974" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedAppTypes; </msg>
<status status="PASS" endtime="20170902 20:26:37.974" starttime="20170902 20:26:37.974"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedAppTypes_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.975" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedAppTypes_history; </msg>
<status status="PASS" endtime="20170902 20:26:37.975" starttime="20170902 20:26:37.974"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes</arg>
</arguments>
<msg timestamp="20170902 20:26:37.976" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedPackageTypes; </msg>
<status status="PASS" endtime="20170902 20:26:37.976" starttime="20170902 20:26:37.976"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>sharedPackageTypes_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.977" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM sharedPackageTypes_history; </msg>
<status status="PASS" endtime="20170902 20:26:37.977" starttime="20170902 20:26:37.977"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks</arg>
</arguments>
<msg timestamp="20170902 20:26:37.978" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM tasks; </msg>
<status status="PASS" endtime="20170902 20:26:37.978" starttime="20170902 20:26:37.978"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>tasks_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.979" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM tasks_history; </msg>
<status status="PASS" endtime="20170902 20:26:37.979" starttime="20170902 20:26:37.979"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces</arg>
</arguments>
<msg timestamp="20170902 20:26:37.980" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM traces; </msg>
<status status="PASS" endtime="20170902 20:26:37.980" starttime="20170902 20:26:37.979"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>traces_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.980" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM traces_history; </msg>
<status status="PASS" endtime="20170902 20:26:37.981" starttime="20170902 20:26:37.980"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups</arg>
</arguments>
<msg timestamp="20170902 20:26:37.981" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM usergroups; </msg>
<status status="PASS" endtime="20170902 20:26:37.982" starttime="20170902 20:26:37.981"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>usergroups_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.982" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM usergroups_history; </msg>
<status status="PASS" endtime="20170902 20:26:37.983" starttime="20170902 20:26:37.982"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>users_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.983" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM users_history; </msg>
<status status="PASS" endtime="20170902 20:26:37.984" starttime="20170902 20:26:37.983"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works</arg>
</arguments>
<msg timestamp="20170902 20:26:37.985" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM works; </msg>
<status status="PASS" endtime="20170902 20:26:37.985" starttime="20170902 20:26:37.984"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>works_history</arg>
</arguments>
<msg timestamp="20170902 20:26:37.986" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM works_history; </msg>
<status status="PASS" endtime="20170902 20:26:37.986" starttime="20170902 20:26:37.985"></status>
</kw>
<kw name="Disconnect" library="MySql">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170902 20:26:37.987" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20170902 20:26:37.987" starttime="20170902 20:26:37.987"></status>
</kw>
<status status="PASS" endtime="20170902 20:26:37.987" starttime="20170902 20:26:37.986"></status>
</kw>
<status status="PASS" endtime="20170902 20:26:37.987" starttime="20170902 20:26:37.955"></status>
</kw>
<status status="PASS" endtime="20170902 20:26:37.988" starttime="20170902 20:26:37.804"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>TODO</arg>
</arguments>
<msg timestamp="20170902 20:26:37.989" level="INFO">TODO</msg>
<status status="PASS" endtime="20170902 20:26:37.989" starttime="20170902 20:26:37.988"></status>
</kw>
<kw type="teardown" name="End XWtremWeb Command Test" library="XWCommon">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Nothing to do</arg>
</arguments>
<msg timestamp="20170902 20:26:37.990" level="INFO">Nothing to do</msg>
<status status="PASS" endtime="20170902 20:26:37.991" starttime="20170902 20:26:37.990"></status>
</kw>
<status status="PASS" endtime="20170902 20:26:37.991" starttime="20170902 20:26:37.990"></status>
</kw>
<tags>
<tag>CommandLine Tests</tag>
</tags>
<status status="PASS" endtime="20170902 20:26:37.991" critical="yes" starttime="20170902 20:26:37.803"></status>
</test>
<kw type="teardown" name="Stop XWtremWeb Server And XWtremWeb Worker" library="XWCommon">
<kw name="Stop XtremWeb Server" library="XWServer">
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${SERVER_PROCESS}</arg>
</arguments>
<msg timestamp="20170902 20:26:37.996" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20170902 20:26:38.108" level="INFO">Process completed.</msg>
<status status="PASS" endtime="20170902 20:26:38.108" starttime="20170902 20:26:37.996"></status>
</kw>
<status status="PASS" endtime="20170902 20:26:38.109" starttime="20170902 20:26:37.995"></status>
</kw>
<kw name="Log XtremWeb Server" library="XWCommon">
<kw name="Log XtremWeb Process Log File" library="XWServer">
<kw name="Log File" library="OperatingSystem">
<doc>Wrapper for `Get File` that also logs the returned file.</doc>
<arguments>
<arg>${DIST_XWHEP_PATH}/xwhep.server.process.log</arg>
</arguments>
<msg timestamp="20170902 20:26:38.110" html="yes" level="INFO">Getting file '&lt;a href="file:///home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log"&gt;/home/vagrant/iexecdev/iexec-node/tests/rf/xtremweb-hep/build/dist/xwhep-10.6.0/xwhep.server.process.log&lt;/a&gt;'.</msg>
<msg timestamp="20170902 20:26:38.111" level="INFO">Sat Sep  2 20:26:28 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : checking launch url
Sat Sep  2 20:26:28 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] WARNING : no launcher URL defined
Sat Sep  2 20:26:28 UTC 2017 [vagrant-ubuntu-trusty-64 xtremweb.server] INFO : launching SmartSockets hub
[02/Sep/2017:20:26:31 +0000] [main_1] ERROR : setRole : role redefined ?! (was SERVER)
[02/Sep/2017:20:26:31 +0000] [xtremweb.database.DBConnPoolThread_main_1] INFO : Connection to database jdbc:mysql://localhost/xtremweb is ok, 70 created
[02/Sep/2017:20:26:31 +0000] [xtremweb.dispatcher.DBInterface_main_1] WARN : Can't retrieve any app
[02/Sep/2017:20:26:31 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't create ProxyValidator
[02/Sep/2017:20:26:31 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.io.FileNotFoundException: /tmp/castore (No such file or directory) (/tmp/castore (No such file or directory))
[02/Sep/2017:20:26:31 +0000] [xtremweb.dispatcher.Dispatcher_main_1] ERROR : Can't add CA certificates to keystore
[02/Sep/2017:20:26:31 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : java.lang.NullPointerException (null)
[02/Sep/2017:20:26:31 +0000] [xtremweb.dispatcher.HashTaskSet_TaskSet_14] INFO : TaskSet started (300000)
[02/Sep/2017:20:26:32 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : still waiting task set...
[02/Sep/2017:20:26:32 +0000] [xtremweb.dispatcher.Dispatcher_main_1] WARN : UDP server not started
[02/Sep/2017:20:26:32 +0000] [xtremweb.communications.TCPServer_TCPServerNIO_15] INFO : started, listening on port : 4321
log4j:WARN No appenders could be found for logger (org.eclipse.jetty.util.log).
log4j:WARN Please initialize the log4j system properly.
log4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.
[02/Sep/2017:20:26:33 +0000] [xtremweb.communications.HTTPServer_main_1] INFO : started, listening on port : 9443
[02/Sep/2017:20:26:33 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : FACEBOOK : java.net.MalformedURLException: no protocol: 
[02/Sep/2017:20:26:33 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : GOOGLE : java.net.MalformedURLException: no protocol: 
[02/Sep/2017:20:26:33 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : TWITTER : java.net.MalformedURLException: no protocol: 
[02/Sep/2017:20:26:33 +0000] [xtremweb.dispatcher.HTTPOAuthHandler_main_1] WARN : YAHOO : java.net.MalformedURLException: no protocol: 
[02/Sep/2017:20:26:33 +0000] [main_1] ERROR : Can't add new entry to keystore
[02/Sep/2017:20:26:33 +0000] [main_1] WARN : javax.net.ssl.SSLHandshakeException: sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target (sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target)
[02/Sep/2017:20:26:33 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : XWHEP Dispatcher(10.6.0-head) started [Sat Sep 02 20:26:33 UTC 2017]
[02/Sep/2017:20:26:33 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : DB vendor  = mysql
[02/Sep/2017:20:26:33 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : mileStone  = 
[02/Sep/2017:20:26:33 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Time out   = 15000
[02/Sep/2017:20:26:33 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Disk opt'd = true
[02/Sep/2017:20:26:33 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : Net  opt'd = true
[02/Sep/2017:20:26:33 +0000] [xtremweb.dispatcher.Dispatcher_main_1] INFO : NIO        = true
XWHEP Dispatcher started  Sat Sep 02 20:26:33 UTC 2017
Name             : vagrant-ubuntu-trusty-64
Version          : 10.6.0-head
Identity         : 
XWRole           : SERVER
Started on       : Sat Sep 02 20:26:30 UTC 2017
Scheduler        : xtremweb.dispatcher.MatchingScheduler
SmartSockets hub : 172.28.128.3/172.17.0.1/10.0.2.15-4329#d2.b9.7e.b2.ca.7c.00.00.be.b9.02.42.ec.75.e8.e2~vagrant
Server HTTP      : true
Alive            : 300
Alive time out   : 900
Polling time out : 15000
Optimize zip     : true
Optimize network : true
NIO              : true
Comm layer       : xtremweb.communications.TCPClient
Socket time out  : 60000
Socket retries   : 50
Max connections  : 200
TCP port         : 4321
UDP port         : 4323
HTPP  port       : 80
HTPPS port       : 9443
Sun RPC interposition port : 4328
Sandbox path : /usr/bin/lxc
Sandbox launch args : 
Host &lt;host&gt;&lt;uid&gt;755a37b0-e147-4c85-bb4e-ada53e38342a&lt;/uid&gt;&lt;accessrights&gt;0x755&lt;/accessrights&gt;&lt;name&gt;vagrant-ubuntu-trusty-64&lt;/name&gt;&lt;cpuload&gt;50&lt;/cpuload&gt;&lt;natedipaddr&gt;10.0.2.15&lt;/natedipaddr&gt;&lt;ipaddr&gt;10.0.2.15&lt;/ipaddr&gt;&lt;hwaddr&gt;&lt;/hwaddr&gt;&lt;timezone&gt;Etc/UTC&lt;/timezone&gt;&lt;os&gt;LINUX&lt;/os&gt;&lt;osversion&gt;3.13.0-129-generic&lt;/osversion&gt;&lt;javaversion&gt;1.8.0_141&lt;/javaversion&gt;&lt;javadatamodel&gt;64&lt;/javadatamodel&gt;&lt;cputype&gt;AMD64&lt;/cputype&gt;&lt;cpunb&gt;1&lt;/cpunb&gt;&lt;cpumodel&gt;unknown&lt;/cpumodel&gt;&lt;cpuspeed&gt;0&lt;/cpuspeed&gt;&lt;totalmem&gt;0&lt;/totalmem&gt;&lt;totalswap&gt;0&lt;/totalswap&gt;&lt;totaltmp&gt;40284&lt;/totaltmp&gt;&lt;freetmp&gt;37303&lt;/freetmp&gt;&lt;project&gt;&lt;/project&gt;&lt;active&gt;true&lt;/active&gt;&lt;incomingconnections&gt;false&lt;/incomingconnections&gt;&lt;available&gt;false&lt;/available&gt;&lt;pilotjob&gt;false&lt;/pilotjob&gt;&lt;sgid&gt;&lt;/sgid&gt;&lt;timeout&gt;15000&lt;/timeout&gt;&lt;traces&gt;false&lt;/traces&gt;&lt;acceptbin&gt;false&lt;/acceptbin&gt;&lt;version&gt;10.6.0-head&lt;/version&gt;&lt;/host&gt;
[02/Sep/2017:20:26:33 +0000] [xtremweb.communications.HTTPServer_HTTPServer_218] INFO : started, listening on port : 9443
[02/Sep/2017:20:26:35 +0000] [xtremweb.common.StreamIO_TCPHandler_17] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[02/Sep/2017:20:26:35 +0000] [xtremweb.common.StreamIO_TCPHandler_18] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[02/Sep/2017:20:26:36 +0000] [xtremweb.common.StreamIO_TCPHandler_19] WARN : java.net.SocketException: Socket is closed (Socket is closed)
[02/Sep/2017:20:26:38 +0000] [xtremweb.communications.TCPServer_TCPServerNIO_15] WARN : java.net.SocketException: Socket closed (Socket closed)
</msg>
<status status="PASS" endtime="20170902 20:26:38.111" starttime="20170902 20:26:38.109"></status>
</kw>
<status status="PASS" endtime="20170902 20:26:38.111" starttime="20170902 20:26:38.109"></status>
</kw>
<status status="PASS" endtime="20170902 20:26:38.111" starttime="20170902 20:26:38.109"></status>
</kw>
<kw name="Stop XtremWeb Worker" library="XWWorker">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Stop XtremWeb Worker</arg>
</arguments>
<msg timestamp="20170902 20:26:38.112" level="INFO">Stop XtremWeb Worker</msg>
<status status="PASS" endtime="20170902 20:26:38.112" starttime="20170902 20:26:38.112"></status>
</kw>
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${WORKER_PROCESS}</arg>
</arguments>
<msg timestamp="20170902 20:26:38.113" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20170902 20:26:38.214" level="INFO">Process completed.</msg>
<status status="PASS" endtime="20170902 20:26:38.214" starttime="20170902 20:26:38.113"></status>
</kw>
<status status="PASS" endtime="20170902 20:26:38.214" starttime="20170902 20:26:38.112"></status>
</kw>
<status status="PASS" endtime="20170902 20:26:38.214" starttime="20170902 20:26:37.995"></status>
</kw>
<doc>All XtremWeb commands line tests</doc>
<status status="PASS" endtime="20170902 20:26:38.214" starttime="20170902 20:23:41.768"></status>
</suite>
<status status="PASS" endtime="20170902 20:26:38.217" starttime="20170902 20:22:44.914"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="14">Critical Tests</stat>
<stat fail="0" pass="14">All Tests</stat>
</total>
<tag>
<stat fail="0" pass="11">CommandLine Tests</stat>
<stat fail="0" pass="1">Mobile Tests</stat>
<stat fail="0" pass="1">Smart contract Tests</stat>
<stat fail="0" pass="1">Web Tests</stat>
</tag>
<suite>
<stat fail="0" id="s1" name="Tests" pass="14">Tests</stat>
<stat fail="0" id="s1-s1" name="interfaceSuite" pass="2">Tests.interfaceSuite</stat>
<stat fail="0" id="s1-s2" name="smartContractSuite" pass="1">Tests.smartContractSuite</stat>
<stat fail="0" id="s1-s3" name="xwcommandsSuite" pass="11">Tests.xwcommandsSuite</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
